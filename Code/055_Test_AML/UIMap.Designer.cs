// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _055_Test_AML
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddCarlBildtToATL1Plan
        /// </summary>
        public void AddCarlBildtToATL1Plan()
        {
            #region Variable Declarations
            DXButton uIAnställdaButton = this.UIAnställdaiarbetsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UIAnställdaButton;
            DXCell uIBildtCarlCell = this.UILäggtillanställdaWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UIBildtCarlCell;
            DXButton uISimpleButtonButton = this.UILäggtillanställdaWindow.UISimpleButtonButton;
            DXButton uIOKButton = this.UIAnställdaiarbetsplanWindow.UIOKButton;
            #endregion

            // Click 'Anställda...' button
            Mouse.Click(uIAnställdaButton, new Point(1, 1));

            // Click 'Bildt, Carl' cell
            Mouse.Click(uIBildtCarlCell, new Point(73, 8));

            // Click 'SimpleButton' button
            Mouse.Click(uISimpleButtonButton, new Point(1, 1));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddCauseCodeStorArbeidsmengde - Use 'AddCauseCodeStorArbeidsmengdeParams' to pass parameters into this method.
        /// </summary>
        public void AddCauseCodeStorArbeidsmengde()
        {
            #region Variable Declarations
            WinClient uIItemClient = this.UIForhåndsdefinerteårsWindow.UIForhåndsdefinerteårsClient.UIItemClient;
            WinEdit uIItemEdit = this.UIForhåndsdefinerteårsWindow.UIVAKANSWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIForhåndsdefinerteårsWindow.UIVakansWindow1.UIItemEdit;
            WinEdit uIItemEdit2 = this.UIForhåndsdefinerteårsWindow.UIItem2Window.UIItemEdit;
            WinButton uIOKButton = this.UIForhåndsdefinerteårsWindow.UIItemClient.UIOKButton;
            WinClient uIItemClient1 = this.UIForhåndsdefinerteårsWindow.UIItemClient1.UIItemClient;
            #endregion

            // Click client
            Mouse.Click(uIItemClient, new Point(38, 38));

            // Type 'MENGDE' in text box
            uIItemEdit.Text = this.AddCauseCodeStorArbeidsmengdeParams.UIItemEditText;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit, this.AddCauseCodeStorArbeidsmengdeParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type 'Stor arbeidsmengde' in text box
            uIItemEdit1.Text = this.AddCauseCodeStorArbeidsmengdeParams.UIItemEditText1;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.AddCauseCodeStorArbeidsmengdeParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Type '3' in text box
            uIItemEdit2.Text = this.AddCauseCodeStorArbeidsmengdeParams.UIItemEditText2;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit2, this.AddCauseCodeStorArbeidsmengdeParams.UIItemEditSendKeys2, ModifierKeys.None);

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(31, 22));

            // Click client
            Mouse.Click(uIItemClient1, new Point(348, 35));
        }
        
        /// <summary>
        /// AmLAgrementDataC9_S3 - Use 'AmLAgrementDataC9_S3Params' to pass parameters into this method.
        /// </summary>
        public void AmLAgrementDataC9_S3()
        {
            #region Variable Declarations
            DXTextEdit uISdeWeaHoursPerWeekEdit = this.UIAMLavtaleWindow.UIViewHostDispensationCustom.UIPcViewClient.UILimitContainerViewCustom.UIXtraTabControlLimitDTabList.UIXtraTabPageDetailsClient.UIPcLimitClient.UIViewHostLimitCustom.UIPcViewClient.UILimitDetailsViewCustom.UIPanelControl1Client.UIGcvhLimitDetailsCustom.UIGroupControlClient2.UIOvertimeLimitViewCustom.UIPanelControl1Client.UIFlpWeaHoursClient.UIPWeaHoursPerWeekClient.UISdeWeaHoursPerWeekEdit;
            #endregion

            // Type 'System.Double' in 'sdeWeaHoursPerWeek' text box
            //ValueTypeName
            uISdeWeaHoursPerWeekEdit.ValueTypeName = this.AmLAgrementDataC9_S3Params.UISdeWeaHoursPerWeekEditValueTypeName;

            // Type '5' in 'sdeWeaHoursPerWeek' text box
            //ValueAsString
            uISdeWeaHoursPerWeekEdit.ValueAsString = this.AmLAgrementDataC9_S3Params.UISdeWeaHoursPerWeekEditValueAsString;

            // Type '{Tab}' in 'sdeWeaHoursPerWeek' text box
            Keyboard.SendKeys(uISdeWeaHoursPerWeekEdit, this.AmLAgrementDataC9_S3Params.UISdeWeaHoursPerWeekEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// BackToRegistrationCallOut
        /// </summary>
        public void BackToRegistrationCallOut()
        {
            #region Variable Declarations
            DXButton uITilbaketilregistreriButton = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UITilbaketilregistreriButton;
            #endregion

            // Click 'Tilbake til registreringen' button
            Mouse.Click(uITilbaketilregistreriButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CancelAmlSettingsGlobalWindow
        /// </summary>
        public void CancelAmlSettingsGlobalWindow()
        {
            #region Variable Declarations
            WinButton uIAvbrytButton = this.UIGlobaltoppsettWindow.UIItemWindow2.UIGlobaltoppsettClient.UIAvbrytButton;
            #endregion

            // Click '&Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(44, 13));
        }
        
        /// <summary>
        /// CheckAllNoneCheckBoxReport77Swe - Use 'CheckAllNoneCheckBoxReport77SweParams' to pass parameters into this method.
        /// </summary>
        public void CheckAllNoneCheckBoxReport77Swe()
        {
            #region Variable Declarations
            WinCheckBox uIVäljallaingenCheckBox = this.UIGatver64440754GATSOFWindow3.UIItemWindow1.UIItem77Client.UIVäljallaingenCheckBox;
            #endregion

            // Select 'Välj alla/ingen:' check box
            uIVäljallaingenCheckBox.Checked = this.CheckAllNoneCheckBoxReport77SweParams.UIVäljallaingenCheckBoxChecked;
        }
        
        /// <summary>
        /// CheckAmlAgreementsPrio - Use 'CheckAmlAgreementsPrioExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlAgreementsPrio()
        {
            #region Variable Declarations
            DXCell uIItem10Cell = this.UIVacantShiftsFormWindow.UIPanelControl1Client.UIGcAgreementsTable.UIItem10Cell;
            DXCell uIAMLDNLF38Cell = this.UIVacantShiftsFormWindow.UIPanelControl1Client.UIGcAgreementsTable.UIAMLDNLF38Cell;
            DXCell uITurnus355Cell = this.UIVacantShiftsFormWindow.UIPanelControl1Client.UIGcAgreementsTable.UITurnus355Cell;
            DXCell uIItem1Cell = this.UIVacantShiftsFormWindow.UIPanelControl1Client.UIGcAgreementsTable.UIItem1Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '10' cell equals '10'
            Assert.AreEqual(this.CheckAmlAgreementsPrioExpectedValues.UIItem10CellValueAsString, uIItem10Cell.ValueAsString, "Not prio. 10");

            // Verify that the 'ClassName' property of 'AML DNLF 38' cell equals 'GridControlCell'
            Assert.AreEqual(this.CheckAmlAgreementsPrioExpectedValues.UIAMLDNLF38CellClassName, uIAMLDNLF38Cell.ClassName, "Not prio. 4");

            // Verify that the 'ValueAsString' property of 'Turnus 35,5' cell equals 'Turnus 35,5'
            Assert.AreEqual(this.CheckAmlAgreementsPrioExpectedValues.UITurnus355CellValueAsString, uITurnus355Cell.ValueAsString, "Not prio. 9");

            // Verify that the 'ValueAsString' property of '1' cell equals '1'
            Assert.AreEqual(this.CheckAmlAgreementsPrioExpectedValues.UIItem1CellValueAsString, uIItem1Cell.ValueAsString, "Not prio. 1");
        }

        //public void CheckAmlReport7UseCalculatedAmlViolationSwe()
        //{
        //    #region Variable Declarations
        //    WinCheckBox uIAnvändkalkyleradeATLCheckBox = this.UIGatver64440754GATSOFWindow3.UIItemWindow.UIItem7Client.UIAnvändkalkyleradeATLCheckBox;
        //    #endregion

        //    // Click 'Använd kalkylerade ATL-brott' check box
        //    Mouse.Click(uIAnvändkalkyleradeATLCheckBox, new Point(7, 9));
        //}
  
        /// <summary>
        /// CheckAmlSettings - Use 'CheckAmlSettingsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlSettings()
        {
            #region Variable Declarations
            WinComboBox uIItemComboBox = this.UIGlobaltoppsettWindow.UIItemWindow3.UIItemComboBox;
            WinRadioButton uIJusterdøgnskilletilvRadioButton = this.UIGlobaltoppsettWindow.UIDøgnskilleClient.UIJusterdøgnskilletilvRadioButton;
            WinRadioButton uIBrukoriginalvaktsomgRadioButton = this.UIGlobaltoppsettWindow.UIBytteClient.UIBrukoriginalvaktsomgRadioButton;
            WinRadioButton uIBrukoriginalvaktsomgRadioButton1 = this.UIGlobaltoppsettWindow.UIZUP_WEA_ORIGINAL_DEPClient.UIBrukoriginalvaktsomgRadioButton;
            #endregion

            // Verify that the 'SelectedItem' property of combo box equals 'Variabel pott'
            Assert.AreEqual(this.CheckAmlSettingsExpectedValues.UIItemComboBoxSelectedItem, uIItemComboBox.SelectedItem, "Variabel pott er ikke valgt");

            // Verify that the 'Selected' property of 'Juster døgnskille til vaktens start for vakter som...' radio button equals 'False'
            Assert.AreEqual(this.CheckAmlSettingsExpectedValues.UIJusterdøgnskilletilvRadioButtonSelected, uIJusterdøgnskilletilvRadioButton.Selected, "Juster døgnskille er valgt");

            // Verify that the 'Selected' property of 'Bruk originalvakt som grunnlag for arbeidstid ved ...' radio button equals 'False'
            Assert.AreEqual(this.CheckAmlSettingsExpectedValues.UIBrukoriginalvaktsomgRadioButtonSelected, uIBrukoriginalvaktsomgRadioButton.Selected, "Bruk originalvakt v/bytte er valgt");

            // Verify that the 'Selected' property of 'Bruk originalvakt som grunnlag for arbeidstid ved ...' radio button equals 'False'
            Assert.AreEqual(this.CheckAmlSettingsExpectedValues.UIBrukoriginalvaktsomgRadioButtonSelected1, uIBrukoriginalvaktsomgRadioButton1.Selected, "Bruk originalvakt v/avd.bytte er valgt");
        }
        
        /// <summary>
        /// CheckAmlStatusCalloutGareC7Step1 - Use 'CheckAmlStatusCalloutGareC7Step1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusCalloutGareC7Step1()
        {
            #region Variable Declarations
            DXCell uISamletdag14001300Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag14001300Cell;
            DXCell uIArbeidsfriførvakt600Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Samlet dag (14,00/13,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step1ExpectedValues.UISamletdag14001300CellValueAsString, uISamletdag14001300Cell.ValueAsString, "Feil i samlet dag");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/11,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step1ExpectedValues.UIArbeidsfriførvakt600CellValueAsString, uIArbeidsfriførvakt600Cell.ValueAsString, "Feil i arbeidsfri");
        }
        
        /// <summary>
        /// CheckAmlStatusCalloutGareC7Step10 - Use 'CheckAmlStatusCalloutGareC7Step10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusCalloutGareC7Step10()
        {
            #region Variable Declarations
            DXCell uISamletdag14001300Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag14001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Samlet dag (13,50/13,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step10ExpectedValues.UISamletdag14001300CellValueAsString, uISamletdag14001300Cell.ValueAsString, "Feil i samlet tid pr. dag");
        }
        
        /// <summary>
        /// CheckAmlStatusCalloutGareC7Step10_2 - Use 'CheckAmlStatusCalloutGareC7Step10_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusCalloutGareC7Step10_2()
        {
            #region Variable Declarations
            DXCell uISamletdag14001300Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag14001300Cell;
            DXCell uIArbeidsfriførvakt600Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell;
            DXCell uIArbeidsfriførvakt600Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell1;
            DXCell uIArbeidsfriførvakt600Cell2 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell2;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Samlet dag (14,00/13,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step10_2ExpectedValues.UISamletdag14001300CellValueAsString, uISamletdag14001300Cell.ValueAsString, "Feil i samlet timer pr. dag");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/11,00)' cell equals 'Arbeidsfri før vakt (3,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step10_2ExpectedValues.UIArbeidsfriførvakt600CellValueAsString, uIArbeidsfriførvakt600Cell.ValueAsString, "Feil i arbeidsfri 1");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step10_2ExpectedValues.UIArbeidsfriførvakt600Cell1ValueAsString, uIArbeidsfriførvakt600Cell1.ValueAsString, "Feil i arbeidsfri 2");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step10_2ExpectedValues.UIArbeidsfriførvakt600Cell2ValueAsString, uIArbeidsfriførvakt600Cell2.ValueAsString, "Feil i arbeidsfri 3");
        }
        
        /// <summary>
        /// CheckAmlStatusCalloutGareC7Step3 - Use 'CheckAmlStatusCalloutGareC7Step3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusCalloutGareC7Step3()
        {
            #region Variable Declarations
            DXCell uISamletdag14001300Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag14001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step3ExpectedValues.UISamletdag14001300CellValueAsString, uISamletdag14001300Cell.ValueAsString, "Feil i arbeidsfri");
        }
        
        /// <summary>
        /// CheckAmlStatusCalloutGareC7Step4 - Use 'CheckAmlStatusCalloutGareC7Step4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusCalloutGareC7Step4()
        {
            #region Variable Declarations
            DXCell uISamletdag14001300Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag14001300Cell;
            DXCell uIArbeidsfriførvakt600Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell;
            DXCell uIArbeidsfriførvakt600Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell1;
            DXCell uIArbeidsfriførvakt600Cell2 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell2;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Samlet dag (14,00/13,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step4ExpectedValues.UISamletdag14001300CellValueAsString, uISamletdag14001300Cell.ValueAsString, "Feil i samlet dag");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/11,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step4ExpectedValues.UIArbeidsfriførvakt600CellValueAsString, uIArbeidsfriførvakt600Cell.ValueAsString, "Feil i arbeidsfri 1");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step4ExpectedValues.UIArbeidsfriførvakt600Cell1ValueAsString, uIArbeidsfriførvakt600Cell1.ValueAsString, "Feil i arbedsfri 2");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step4ExpectedValues.UIArbeidsfriførvakt600Cell2ValueAsString, uIArbeidsfriførvakt600Cell2.ValueAsString, "Feil i arbeidsfri 3");
        }
        
        /// <summary>
        /// CheckAmlStatusCalloutGareC7Step4_2 - Use 'CheckAmlStatusCalloutGareC7Step4_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusCalloutGareC7Step4_2()
        {
            #region Variable Declarations
            DXCell uISamletdag14001300Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag14001300Cell;
            DXCell uIArbeidsfriførvakt600Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell;
            DXCell uIArbeidsfriførvakt600Cell1 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell1;
            DXCell uIArbeidsfriførvakt600Cell2 = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIArbeidsfriførvakt600Cell2;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'AML uke (14,00/10,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step4_2ExpectedValues.UISamletdag14001300CellValueAsString, uISamletdag14001300Cell.ValueAsString, "Feil i Amltimer pr. uke");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/11,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step4_2ExpectedValues.UIArbeidsfriførvakt600CellValueAsString, uIArbeidsfriførvakt600Cell.ValueAsString, "Feil i arbeidsfri 1");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step4_2ExpectedValues.UIArbeidsfriførvakt600Cell1ValueAsString, uIArbeidsfriførvakt600Cell1.ValueAsString, "Feil i arbeidsfri 2");

            // Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step4_2ExpectedValues.UIArbeidsfriførvakt600Cell2ValueAsString, uIArbeidsfriførvakt600Cell2.ValueAsString, "Feil i arbeidstid 3");
        }
        
        /// <summary>
        /// CheckAmlStatusCalloutGareC7Step5 - Use 'CheckAmlStatusCalloutGareC7Step5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusCalloutGareC7Step5()
        {
            #region Variable Declarations
            DXCell uISamletdag14001300Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag14001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Arbeidsfri før vakt (8,98/9,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step5ExpectedValues.UISamletdag14001300CellValueAsString, uISamletdag14001300Cell.ValueAsString, "Feil i arbeidsfri");
        }
        
        /// <summary>
        /// CheckAmlStatusCalloutGareC7Step8 - Use 'CheckAmlStatusCalloutGareC7Step8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusCalloutGareC7Step8()
        {
            #region Variable Declarations
            DXCell uISamletdag14001300Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag14001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'AML uke (13,50/10,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step8ExpectedValues.UISamletdag14001300CellValueAsString, uISamletdag14001300Cell.ValueAsString, "Feil i Amltimer pr. uke");
        }
        
        /// <summary>
        /// CheckAmlStatusCalloutGareC7Step9 - Use 'CheckAmlStatusCalloutGareC7Step9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusCalloutGareC7Step9()
        {
            #region Variable Declarations
            DXCell uISamletdag14001300Cell = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag14001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'AML uke (14,25/10,00)'
            Assert.AreEqual(this.CheckAmlStatusCalloutGareC7Step9ExpectedValues.UISamletdag14001300CellValueAsString, uISamletdag14001300Cell.ValueAsString, "Feil i Amltimer pr. uke");
        }
        
        /// <summary>
        /// CheckAmlStatusDepartmentExchangeAndersenC6Step3 - Use 'CheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusDepartmentExchangeAndersenC6Step3()
        {
            #region Variable Declarations
            DXCell uISøndager200200Cell = this.UIByttemedavdelingWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee1Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee1Client.UIGWeaBreakListEmployeTable.UISøndager200200Cell;
            DXCell uISamletukesnitt481248Cell = this.UIByttemedavdelingWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee1Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee1Client.UIGWeaBreakListEmployeTable.UISamletukesnitt481248Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Søndager (2,00/2,00)'
            Assert.AreEqual(this.CheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues.UISøndager200200CellValueAsString, uISøndager200200Cell.ValueAsString, "Feil i søndager på rad");

            // Verify that the 'ValueAsString' property of 'Samlet uke (snitt) (48,12/48,00)' cell equals 'Samlet uke (snitt) (48,12/48,00)'
            Assert.AreEqual(this.CheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues.UISamletukesnitt481248CellValueAsString, uISamletukesnitt481248Cell.ValueAsString, "Feil i samlet uke");
        }
        
        /// <summary>
        /// CheckAmlStatusExchangeAndersenC5Step6 - Use 'CheckAmlStatusExchangeAndersenC5Step6ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExchangeAndersenC5Step6()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri32Cell = this.UIBytteWindow.UIGsPanelControl1Client1.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee1Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee1Client.UIGWeaBreakListEmployeTable.UIUkentligarbeidsfri32Cell;
            DXCell uISøndager200200Cell = this.UIBytteWindow.UIGsPanelControl1Client1.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee1Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee1Client.UIGWeaBreakListEmployeTable.UISøndager200200Cell;
            DXCell uIPlanlagtuke56005400Cell = this.UIBytteWindow.UIGsPanelControl1Client1.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee1Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee1Client.UIGWeaBreakListEmployeTable.UIPlanlagtuke56005400Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusExchangeAndersenC5Step6ExpectedValues.UIUkentligarbeidsfri32CellValueAsString, uIUkentligarbeidsfri32Cell.ValueAsString, "Feil i ukentlig arbeidsfri");

            // Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Søndager (2,00/2,00)'
            Assert.AreEqual(this.CheckAmlStatusExchangeAndersenC5Step6ExpectedValues.UISøndager200200CellValueAsString, uISøndager200200Cell.ValueAsString, "Feil i søndager");

            // Verify that the 'ValueAsString' property of 'Planlagt uke (56,00/54,00)' cell equals 'Planlagt uke (56,00/54,00)'
            Assert.AreEqual(this.CheckAmlStatusExchangeAndersenC5Step6ExpectedValues.UIPlanlagtuke56005400CellValueAsString, uIPlanlagtuke56005400Cell.ValueAsString, "Feil i planlagt uke");
        }
        
        /// <summary>
        /// CheckAmlStatusExchangeBosseC5Step1 - Use 'CheckAmlStatusExchangeBosseC5Step1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExchangeBosseC5Step1()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri32Cell = this.UIBytteWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee2Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee2Client.UIGWeaBreakListEmployeTable.UIUkentligarbeidsfri32Cell;
            DXCell uIPlanlagtuke50004800Cell = this.UIBytteWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee2Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee2Client.UIGWeaBreakListEmployeTable.UIPlanlagtuke50004800Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusExchangeBosseC5Step1ExpectedValues.UIUkentligarbeidsfri32CellValueAsString, uIUkentligarbeidsfri32Cell.ValueAsString, "Feil i ukentlig arbeidsfri(Bosse)");

            // Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Planlagt uke (50,00/48,00)'
            Assert.AreEqual(this.CheckAmlStatusExchangeBosseC5Step1ExpectedValues.UIPlanlagtuke50004800CellValueAsString, uIPlanlagtuke50004800Cell.ValueAsString, "Feil i planlagt uke(Bosse)");
        }
        
        /// <summary>
        /// CheckAmlStatusExchangeBosseC5Step4 - Use 'CheckAmlStatusExchangeBosseC5Step4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExchangeBosseC5Step4()
        {
            #region Variable Declarations
            DXCell uISøndager200200Cell = this.UIBytteWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee1Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee1Client.UIGWeaBreakListEmployeTable.UISøndager200200Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Samlet dag (16,00/13,00)'
            Assert.AreEqual(this.CheckAmlStatusExchangeBosseC5Step4ExpectedValues.UISøndager200200CellValueAsString, uISøndager200200Cell.ValueAsString, "Feil i samlet dag(Bosse)");
        }
        
        /// <summary>
        /// CheckAmlStatusExchangeBosseC5Step6 - Use 'CheckAmlStatusExchangeBosseC5Step6ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExchangeBosseC5Step6()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri32Cell = this.UIBytteWindow.UIGsPanelControl1Client1.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee2Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee2Client.UIGWeaBreakListEmployeTable.UIUkentligarbeidsfri32Cell;
            DXCell uIPlanlagtuke58004800Cell = this.UIBytteWindow.UIGsPanelControl1Client1.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee2Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee2Client.UIGWeaBreakListEmployeTable.UIPlanlagtuke58004800Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusExchangeBosseC5Step6ExpectedValues.UIUkentligarbeidsfri32CellValueAsString, uIUkentligarbeidsfri32Cell.ValueAsString, "Feil i ukentlig arbeidsfri");

            // Verify that the 'ValueAsString' property of 'Planlagt uke (58,00/48,00)' cell equals 'Planlagt uke (58,00/48,00)'
            Assert.AreEqual(this.CheckAmlStatusExchangeBosseC5Step6ExpectedValues.UIPlanlagtuke58004800CellValueAsString, uIPlanlagtuke58004800Cell.ValueAsString, "Feil i planlagt uke");
        }
        
        /// <summary>
        /// CheckAmlStatusExchangeCesarC5Step1 - Use 'CheckAmlStatusExchangeCesarC5Step1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExchangeCesarC5Step1()
        {
            #region Variable Declarations
            DXCell uISøndager200200Cell = this.UIBytteWindow.UIGsPanelControl1Client.UIGsTabTabList.UITpWeaClient.UITcWeaTabList.UITpWeaEmployee1Client.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGcWeaBreakEmployee1Client.UIGWeaBreakListEmployeTable.UISøndager200200Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Søndager (2,00/2,00)'
            Assert.AreEqual(this.CheckAmlStatusExchangeCesarC5Step1ExpectedValues.UISøndager200200CellValueAsString, uISøndager200200Cell.ValueAsString, "Feil i søndager på rad(Cesar)");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraBosseModayWeek2 - Use 'CheckAmlStatusExtraBosseModayWeek2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraBosseModayWeek2()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (16,00/13,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraBosseModayWeek2ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "Feil i samlet dag(13t)");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraBosseModayWeek3 - Use 'CheckAmlStatusExtraBosseModayWeek3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraBosseModayWeek3()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (16,00/14,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraBosseModayWeek3ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "Feil i samlet tid pr. dag(14t)");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraBosseSundayWeek7 - Use 'CheckAmlStatusExtraBosseSundayWeek7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraBosseSundayWeek7()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Søndager (2,00/2,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraBosseSundayWeek7ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "Feil i søndager på rad");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraBosseTuesdayWeek11 - Use 'CheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraBosseTuesdayWeek11()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (18,00/13,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "Feil i samlet tid pr. dag(13t)");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraBosseTuesdayWeek6 - Use 'CheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraBosseTuesdayWeek6()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            DXCell uIUkentligarbeidsfri33Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri33Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (17,00/16,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "Feil i samlet dag(16t)");

            // Verify that the 'ClassName' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'GridControlCell'
            Assert.AreEqual(this.CheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues.UIUkentligarbeidsfri33CellClassName, uIUkentligarbeidsfri33Cell.ClassName, "Feil i Aml uke");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraBosseTuesdayWeek8 - Use 'CheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraBosseTuesdayWeek8()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (16,33/14,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "feil i samlet tid pr. dag(14t)");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraCesarFridayWeek1 - Use 'CheckAmlStatusExtraCesarFridayWeek1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraCesarFridayWeek1()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (16,00/13,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraCesarFridayWeek1ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "Feil i Aml");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraCesarSaturdayWeek1 - Use 'CheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraCesarSaturdayWeek1()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            DXCell uIUkentligarbeidsfri33Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri33Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'AML uke (13,50/10,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "Feil i Aml uke");

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'Ukentlig arbeidsfri (33,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues.UIUkentligarbeidsfri33CellValueAsString, uIUkentligarbeidsfri33Cell.ValueAsString, "Feil i Ukentlig arbedsfri");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraCesarSaturdayWeek3 - Use 'CheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraCesarSaturdayWeek3()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            DXCell uIUkentligarbeidsfri33Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri33Cell;
            DXCell uISøndager200200Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISøndager200200Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "Feil i ukentlig arbeidsfri");

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'Søndager (2,00/2,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues.UIUkentligarbeidsfri33CellValueAsString, uIUkentligarbeidsfri33Cell.ValueAsString, "Feil i søndager på rad");

            // Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'AML 4 uker (27,00/25,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues.UISøndager200200CellValueAsString, uISøndager200200Cell.ValueAsString, "Feil i Amltimer");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraCesarSundayWeek1 - Use 'CheckAmlStatusExtraCesarSundayWeek1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraCesarSundayWeek1()
        {
            #region Variable Declarations
            DXCell uISamletdag16001300Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletdag16001300Cell;
            DXCell uIUkentligarbeidsfri33Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri33Cell;
            DXCell uISøndager200200Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISøndager200200Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'AML uke (21,50/10,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraCesarSundayWeek1ExpectedValues.UISamletdag16001300CellValueAsString, uISamletdag16001300Cell.ValueAsString, "Feil i Aml uke");

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'Ukentlig arbeidsfri (31,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraCesarSundayWeek1ExpectedValues.UIUkentligarbeidsfri33CellValueAsString, uIUkentligarbeidsfri33Cell.ValueAsString, "Feil i ukentlig arbeidsfri");

            // Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Søndager (2,00/2,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraCesarSundayWeek1ExpectedValues.UISøndager200200CellValueAsString, uISøndager200200Cell.ValueAsString, "Feil i søndager på rad");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraIngvarC11Step11 - Use 'CheckAmlStatusExtraIngvarC11Step11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraIngvarC11Step11()
        {
            #region Variable Declarations
            DXPopupEdit uILnkDetail0PopupEdit = this.UIMertidövertidWindow.UILnkDetail0PopupEdit;
            #endregion

            // Verify that the 'ValueAsString' property of 'lnkDetail[0]' PopupEdit contains 'Inget brott'
            StringAssert.Contains(uILnkDetail0PopupEdit.ValueAsString, this.CheckAmlStatusExtraIngvarC11Step11ExpectedValues.UILnkDetail0PopupEditValueAsString, "Vakten genererer Amlbrudd");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraIngvarC11Step14 - Use 'CheckAmlStatusExtraIngvarC11Step14ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraIngvarC11Step14()
        {
            #region Variable Declarations
            DXCell uIVeckovila16003600Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIVeckovila16003600Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Dygnsvila (9,00/11,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step14ExpectedValues.UIVeckovila16003600CellValueAsString, uIVeckovila16003600Cell.ValueAsString, "Feil dygnsvila");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraIngvarC11Step15 - Use 'CheckAmlStatusExtraIngvarC11Step15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraIngvarC11Step15()
        {
            #region Variable Declarations
            DXCell uIVeckovila16003600Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIVeckovila16003600Cell;
            DXCell uIATL4veckor22002000Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIATL4veckor22002000Cell;
            DXCell uIDygnsvilasnitt129013Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIDygnsvilasnitt129013Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Samlat vecka (snitt) (43,20/43,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step15ExpectedValues.UIVeckovila16003600CellValueAsString, uIVeckovila16003600Cell.ValueAsString, "Feil i samlat vecka");

            // Verify that the 'ValueAsString' property of 'ATL 4 veckor (22,00/20,00)' cell equals 'Veckovila (16,00/36,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step15ExpectedValues.UIATL4veckor22002000CellValueAsString, uIATL4veckor22002000Cell.ValueAsString, "Feil i veckovila");

            // Verify that the 'ValueAsString' property of 'Dygnsvila (snitt) (12,90/13,00)' cell equals 'ATL 4 veckor (32,00/20,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step15ExpectedValues.UIDygnsvilasnitt129013CellValueAsString, uIDygnsvilasnitt129013Cell.ValueAsString, "Feil i ATL 4");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraIngvarC11Step6 - Use 'CheckAmlStatusExtraIngvarC11Step6ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraIngvarC11Step6()
        {
            #region Variable Declarations
            DXCell uIATL4veckor22002000Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIATL4veckor22002000Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'ATL 4 veckor (22,00/20,00)' cell equals 'ATL 4 veckor (22,00/20,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step6ExpectedValues.UIATL4veckor22002000CellValueAsString, uIATL4veckor22002000Cell.ValueAsString, "Feil i ATL 4");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraIngvarC11Step8 - Use 'CheckAmlStatusExtraIngvarC11Step8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraIngvarC11Step8()
        {
            #region Variable Declarations
            DXCell uIVeckovila16003600Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIVeckovila16003600Cell;
            DXCell uIATL4veckor22002000Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIATL4veckor22002000Cell;
            DXCell uIDygnsvilasnitt129013Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIDygnsvilasnitt129013Cell;
            DXCell uIATL4veckor57002000Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIATL4veckor57002000Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Samlat vecka (snitt) (43,80/43,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step8ExpectedValues.UIVeckovila16003600CellValueAsString, uIVeckovila16003600Cell.ValueAsString, "Feil i samlat vecka");

            // Verify that the 'ValueAsString' property of 'ATL 4 veckor (22,00/20,00)' cell equals 'Veckovila (24,00/36,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step8ExpectedValues.UIATL4veckor22002000CellValueAsString, uIATL4veckor22002000Cell.ValueAsString, "Feil i veckovila");

            // Verify that the 'ValueAsString' property of 'Dygnsvila (snitt) (12,90/13,00)' cell equals 'Dygnsvila (snitt) (12,90/13,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step8ExpectedValues.UIDygnsvilasnitt129013CellValueAsString, uIDygnsvilasnitt129013Cell.ValueAsString, "Feil i dygnsvila");

            // Verify that the 'ValueAsString' property of 'ATL 4 veckor (57,00/20,00)' cell equals 'ATL 4 veckor (57,00/20,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step8ExpectedValues.UIATL4veckor57002000CellValueAsString, uIATL4veckor57002000Cell.ValueAsString, "Feil i ATL 4");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraIngvarC11Step9 - Use 'CheckAmlStatusExtraIngvarC11Step9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraIngvarC11Step9()
        {
            #region Variable Declarations
            DXCell uIVeckovila16003600Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIVeckovila16003600Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Dygnsvila (8,00/9,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarC11Step9ExpectedValues.UIVeckovila16003600CellValueAsString, uIVeckovila16003600Cell.ValueAsString, "Feil i dygnsvila");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraIngvarSundayC11Step4_2 - Use 'CheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraIngvarSundayC11Step4_2()
        {
            #region Variable Declarations
            DXCell uIVeckovila16003600Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIVeckovila16003600Cell;
            DXCell uIItem201610170700Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIItem201610170700Cell;
            DXCell uIItem201610240700Cell = this.UIMertidövertidWindow.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIItem201610240700Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Veckovila (16,00/36,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues.UIVeckovila16003600CellValueAsString, uIVeckovila16003600Cell.ValueAsString, "Feil i veckovila");

            // Verify that the 'ValueAsString' property of '2016-10-17 07:00' cell equals '10/17/2016 07:00:00'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues.UIItem201610170700CellValueAsString, uIItem201610170700Cell.ValueAsString, "Feil fradato");

            // Verify that the 'ValueAsString' property of '2016-10-24 07:00' cell equals '10/24/2016 07:00:00'
            Assert.AreEqual(this.CheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues.UIItem201610240700CellValueAsString, uIItem201610240700Cell.ValueAsString, "Feil tildato");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraTeslaTuesdayWeek2 - Use 'CheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraTeslaTuesdayWeek2()
        {
            #region Variable Declarations
            DXCell uISamletuke502500Cell = this.UIItemWindow3.UIPanClientClient.UITcClientTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UISamletuke502500Cell;
            #endregion

            // Verify that the 'Text' property of 'Samlet uke' cell equals 'AML uke (5,02/5,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues.UISamletuke502500CellText, uISamletuke502500Cell.Text, "Feil i samlet uke");
        }
        
        /// <summary>
        /// CheckAmlStatusExtraTeslaTuesdayWeek8 - Use 'CheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusExtraTeslaTuesdayWeek8()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri33Cell = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri33Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'Samlet uke (snitt) (51,63/51,00)'
            Assert.AreEqual(this.CheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues.UIUkentligarbeidsfri33CellValueAsString, uIUkentligarbeidsfri33Cell.ValueAsString, "Feil i samlet tid pr. uke");
        }
        
        /// <summary>
        /// CheckAmlStatusRemanageBosseWeek5Monday - Use 'CheckAmlStatusRemanageBosseWeek5MondayExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusRemanageBosseWeek5Monday()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri32Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri32Cell;
            DXCell uIPlanlagtuke50004800Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIPlanlagtuke50004800Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageBosseWeek5MondayExpectedValues.UIUkentligarbeidsfri32CellValueAsString, uIUkentligarbeidsfri32Cell.ValueAsString, "Feil i Ukentlig arbeidsfri");

            // Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Planlagt uke (50,00/48,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageBosseWeek5MondayExpectedValues.UIPlanlagtuke50004800CellValueAsString, uIPlanlagtuke50004800Cell.ValueAsString, "Feil i planlagt uke");
        }
        
        /// <summary>
        /// CheckAmlStatusRemanageBosseWeek5Tuesday - Use 'CheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusRemanageBosseWeek5Tuesday()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri32Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri32Cell;
            DXCell uIPlanlagtuke50004800Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIPlanlagtuke50004800Cell;
            DXCell uIPlanlagtuke60004800Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIPlanlagtuke60004800Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Samlet dag (15,00/13,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues.UIUkentligarbeidsfri32CellValueAsString, uIUkentligarbeidsfri32Cell.ValueAsString, "Feil i samlet dag");

            // Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Ukentlig arbeidsfri (30,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues.UIPlanlagtuke50004800CellValueAsString, uIPlanlagtuke50004800Cell.ValueAsString, "Feil i ukentlig arbeidstid");

            // Verify that the 'ValueAsString' property of 'Planlagt uke (60,00/48,00)' cell equals 'Planlagt uke (60,00/48,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues.UIPlanlagtuke60004800CellValueAsString, uIPlanlagtuke60004800Cell.ValueAsString, "Feil i planlagt uke");
        }
        
        /// <summary>
        /// CheckAmlStatusRemanageCesarWeek10Friday - Use 'CheckAmlStatusRemanageCesarWeek10FridayExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusRemanageCesarWeek10Friday()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri32Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri32Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Planlagt uke (50,00/48,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageCesarWeek10FridayExpectedValues.UIUkentligarbeidsfri32CellValueAsString, uIUkentligarbeidsfri32Cell.ValueAsString, "Feil i planlagt uke");
        }
        
        /// <summary>
        /// CheckAmlStatusRemanageCesarWeek10FridayDSH - Use 'CheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusRemanageCesarWeek10FridayDSH()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri32Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri32Cell;
            DXCell uIPlanlagtuke50004800Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIPlanlagtuke50004800Cell;
            DXCell uIPlanlagtuke60004800Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIPlanlagtuke60004800Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Samlet dag (15,00/13,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues.UIUkentligarbeidsfri32CellValueAsString, uIUkentligarbeidsfri32Cell.ValueAsString, "Feil i samlet dag");

            // Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Ukentlig arbeidsfri (25,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues.UIPlanlagtuke50004800CellValueAsString, uIPlanlagtuke50004800Cell.ValueAsString, "Feil i ukentlig arbeidsfri");

            // Verify that the 'ValueAsString' property of 'Planlagt uke (60,00/48,00)' cell equals 'Planlagt uke (64,00/48,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues.UIPlanlagtuke60004800CellValueAsString, uIPlanlagtuke60004800Cell.ValueAsString, "Feil i planlagt uke");
        }
        
        /// <summary>
        /// CheckAmlStatusRemanageCesarWeek10Monday - Use 'CheckAmlStatusRemanageCesarWeek10MondayExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusRemanageCesarWeek10Monday()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri32Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri32Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Planlagt uke (58,00/48,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageCesarWeek10MondayExpectedValues.UIUkentligarbeidsfri32CellValueAsString, uIUkentligarbeidsfri32Cell.ValueAsString, "Feil i planlagt uke");
        }
        
        /// <summary>
        /// CheckAmlStatusRemanageCesarWeek10Saturday - Use 'CheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAmlStatusRemanageCesarWeek10Saturday()
        {
            #region Variable Declarations
            DXCell uIUkentligarbeidsfri32Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIUkentligarbeidsfri32Cell;
            DXCell uIPlanlagtuke50004800Cell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpWEAClient.UIGsGroupControl2Client.UIGWeaBreakListTable.UIPlanlagtuke50004800Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues.UIUkentligarbeidsfri32CellValueAsString, uIUkentligarbeidsfri32Cell.ValueAsString, "Feil i ukentlig arbeidsfri");

            // Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Søndager (2,00/2,00)'
            Assert.AreEqual(this.CheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues.UIPlanlagtuke50004800CellValueAsString, uIPlanlagtuke50004800Cell.ValueAsString, "Feil i søndager på rad");
        }
        
        /// <summary>
        /// CheckEkstraShiftsInWarningAbsenceDialog - Use 'CheckEkstraShiftsInWarningAbsenceDialogParams' to pass parameters into this method.
        /// </summary>
        public void CheckEkstraShiftsInWarningAbsenceDialog()
        {
            #region Variable Declarations
            DXTreeListNode uINode0TreeListNode = this.UISletteforskyvningeroWindow.UILcDeleteOvertimeCustom.UIRootLayoutGroup.UILayoutControlItem6LayoutControlItem.UITlDeleteShiftsTreeList.UINode0TreeListNode;
            DXTreeListNode uINode1TreeListNode = this.UISletteforskyvningeroWindow.UILcDeleteOvertimeCustom.UIRootLayoutGroup.UILayoutControlItem6LayoutControlItem.UITlDeleteShiftsTreeList.UINode1TreeListNode;
            #endregion

            // Type 'True' in 'Node0' TreeListNode
            //Checked
            uINode0TreeListNode.Checked = this.CheckEkstraShiftsInWarningAbsenceDialogParams.UINode0TreeListNodeChecked;

            // Type 'True' in 'Node1' TreeListNode
            //Checked
            uINode1TreeListNode.Checked = this.CheckEkstraShiftsInWarningAbsenceDialogParams.UINode1TreeListNodeChecked;

            // Type 'False' in 'Node0' TreeListNode
            //Checked
            uINode0TreeListNode.Checked = this.CheckEkstraShiftsInWarningAbsenceDialogParams.UINode0TreeListNodeChecked1;

            // Type 'False' in 'Node1' TreeListNode
            //Checked
            uINode1TreeListNode.Checked = this.CheckEkstraShiftsInWarningAbsenceDialogParams.UINode1TreeListNodeChecked1;
        }
        
        /// <summary>
        /// CheckKeepSelectedDaysplit - Use 'CheckKeepSelectedDaysplitExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckKeepSelectedDaysplit()
        {
            #region Variable Declarations
            WinRadioButton uIBeholdvalgtdøgnskillRadioButton = this.UIGlobaltoppsettWindow.UIDøgnskilleClient.UIBeholdvalgtdøgnskillRadioButton;
            #endregion

            // Verify that the 'Selected' property of 'Behold valgt døgnskille og splitt timer per døgn f...' radio button equals 'False'
            Assert.AreEqual(this.CheckKeepSelectedDaysplitExpectedValues.UIBeholdvalgtdøgnskillRadioButtonSelected, uIBeholdvalgtdøgnskillRadioButton.Selected);
        }
        
        /// <summary>
        /// CheckUseActiveExchangeDepExc - Use 'CheckUseActiveExchangeDepExcExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckUseActiveExchangeDepExc()
        {
            #region Variable Declarations
            WinRadioButton uIBrukaktivvaktsomgrunRadioButton = this.UIGlobaltoppsettWindow.UIBytteClient.UIBrukaktivvaktsomgrunRadioButton;
            WinRadioButton uIBrukaktivvaktsomgrunRadioButton1 = this.UIGlobaltoppsettWindow.UIZUP_WEA_ORIGINAL_DEPClient.UIBrukaktivvaktsomgrunRadioButton;
            #endregion

            // Verify that the 'Selected' property of 'Bruk aktivvakt som grunnlag for arbeidstid ved byt...' radio button equals 'True'
            Assert.AreEqual(this.CheckUseActiveExchangeDepExcExpectedValues.UIBrukaktivvaktsomgrunRadioButtonSelected, uIBrukaktivvaktsomgrunRadioButton.Selected);

            // Verify that the 'Selected' property of 'Bruk aktivvakt som grunnlag for arbeidstid ved avd...' radio button equals 'True'
            Assert.AreEqual(this.CheckUseActiveExchangeDepExcExpectedValues.UIBrukaktivvaktsomgrunRadioButtonSelected1, uIBrukaktivvaktsomgrunRadioButton1.Selected);
        }
        
        /// <summary>
        /// ClickEmp1Exchange - Use 'ClickEmp1ExchangeParams' to pass parameters into this method.
        /// </summary>
        public void ClickEmp1Exchange()
        {
            #region Variable Declarations
            DXLookUpEdit uISleEmployment1LookUpEdit = this.UIBytteWindow.UIGsPanelControl1Client1.UIGrpEmployee1Client.UISleEmployment1LookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment' in 'sleEmployment1' LookUpEdit
            //ValueTypeName
            uISleEmployment1LookUpEdit.ValueTypeName = this.ClickEmp1ExchangeParams.UISleEmployment1LookUpEditValueTypeName;

            // Type 'Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment' in 'sleEmployment1' LookUpEdit
            //ValueAsString
            uISleEmployment1LookUpEdit.ValueAsString = this.ClickEmp1ExchangeParams.UISleEmployment1LookUpEditValueAsString;
        }
        
        /// <summary>
        /// ClickEmp2Exchange - Use 'ClickEmp2ExchangeParams' to pass parameters into this method.
        /// </summary>
        public void ClickEmp2Exchange()
        {
            #region Variable Declarations
            DXLookUpEdit uISleEmployment2LookUpEdit = this.UIBytteWindow.UIGsPanelControl1Client1.UIGrpEmployee2Client.UISleEmployment2LookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment' in 'sleEmployment2' LookUpEdit
            //ValueTypeName
            uISleEmployment2LookUpEdit.ValueTypeName = this.ClickEmp2ExchangeParams.UISleEmployment2LookUpEditValueTypeName;

            // Type 'Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment' in 'sleEmployment2' LookUpEdit
            //ValueAsString
            uISleEmployment2LookUpEdit.ValueAsString = this.ClickEmp2ExchangeParams.UISleEmployment2LookUpEditValueAsString;
        }
        
        /// <summary>
        /// ClickforSaveAmlBrakes
        /// </summary>
        public void ClickforSaveAmlBrakes()
        {
            #region Variable Declarations
            WinClient uIPanel49Client = this.UIGatver64440754GATSOFWindow1.UIItemWindow1.UIPanel49Client;
            WinClient uIPanel49Client1 = this.UIGatver64440754GATSOFWindow1.UIItemWindow2.UIPanel49Client;
            #endregion

            // Click 'Panel49' client
            Mouse.Click(uIPanel49Client, new Point(196, 257));

            // Right-Click 'Panel49' client
            Mouse.Click(uIPanel49Client1, MouseButtons.Right, ModifierKeys.None, new Point(196, 257));
        }
        
        /// <summary>
        /// ClickNewAmlDispension
        /// </summary>
        public void ClickNewAmlDispension()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINYRibbonBaseButtonItem = this.UIGatver65041545ASCLAvWindow.UIMWrapperCustom.UIPcViewClient.UIDispensationOverviewCustom.UIRibbonDispensationsRibbon.UIRibbonPage1RibbonPage.UIRbnGroupEditRibbonPageGroup.UINYRibbonBaseButtonItem;
            #endregion

            // Click 'Ny' RibbonBaseButtonItem
            Mouse.Click(uINYRibbonBaseButtonItem, new Point(19, 25));
        }
        
        /// <summary>
        /// ClickNewWeekSeparation
        /// </summary>
        public void ClickNewWeekSeparation()
        {
            #region Variable Declarations
            WinClient uIDøgnogukeskilleClient = this.UIGatver66043686ASCLAvWindow2.UIItemWindow.UIDøgnogukeskilleClient;
            #endregion

            // Click 'Døgn- og ukeskille' client
            Mouse.Click(uIDøgnogukeskilleClient, new Point(51, 21));
        }
        
        /// <summary>
        /// ClickOkEditRosterplan
        /// </summary>
        public void ClickOkEditRosterplan()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnOkRibbonBaseButtonItem = this.UIArbeidsplanATLtest1RWindow1.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRibbonPageGroup9RibbonPageGroup.UIBtnOkRibbonBaseButtonItem;
            #endregion

            // Click 'btnOk' RibbonBaseButtonItem
            Mouse.Click(uIBtnOkRibbonBaseButtonItem, new Point(32, 13));
        }
        
        /// <summary>
        /// ClickOkNewCallOut
        /// </summary>
        public void ClickOkNewCallOut()
        {
            #region Variable Declarations
            DXButton uIOkNyButton = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UI_liOk_NewLayoutControlItem.UIOkNyButton;
            #endregion

            // Click 'Ok - Ny' button
            Mouse.Click(uIOkNyButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkRecalculateShifts
        /// </summary>
        public void ClickOkRecalculateShifts()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIRekalkuleringWindow.UIDbFooterCustom.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkWarningAbsenceDialog
        /// </summary>
        public void ClickOkWarningAbsenceDialog()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UISletteforskyvningeroWindow.UILcDeleteOvertimeCustom.UIRootLayoutGroup.UILayoutControlItem4LayoutControlItem.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickReturnToExtraRegistration
        /// </summary>
        public void ClickReturnToExtraRegistration()
        {
            #region Variable Declarations
            DXButton uITilbaketilregistreriButton = this.UIItemWindow3.UIGSPanelControlClient.UIGSTabControlTabList.UITpWeaClient.UITilbaketilregistreriButton;
            #endregion

            // Click 'Tilbake til registreringen' button
            Mouse.Click(uITilbaketilregistreriButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickSaveGlobalAmlSettings
        /// </summary>
        public void ClickSaveGlobalAmlSettings()
        {
            #region Variable Declarations
            WinButton uILagreButton = this.UIGlobaltoppsettWindow.UIItemWindow2.UIGlobaltoppsettClient.UILagreButton;
            #endregion

            // Click '&Lagre' button
            Mouse.Click(uILagreButton, new Point(38, 12));
            //UICommon.ClearAdministrationSearchString();
        }
        
        /// <summary>
        /// CloseAmlAgrementWindowWithX
        /// </summary>
        public void CloseAmlAgrementWindowWithX()
        {
            #region Variable Declarations
            DXButton uICloseButton = this.UIVacantShiftsFormWindow.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(18, 8));
        }
        
        /// <summary>
        /// CloseAmlCalculationWindow
        /// </summary>
        public void CloseAmlCalculationWindow()
        {
            #region Variable Declarations
            WinClient uIItemClient1 = this.UIOppsettforAMLkalkuleWindow.UIItemClient.UIItemClient1;
            #endregion

            // Click client
            Mouse.Click(uIItemClient1, new Point(344, 27));
        }
        
        /// <summary>
        /// CloseCompetenceComparison
        /// </summary>
        public void CloseCompetenceComparison()
        {
            #region Variable Declarations
            DXButton uICloseButton = this.UISammenligningavkompeWindow.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(19, 9));
        }
        
        /// <summary>
        /// CloseIE
        /// </summary>
        public void CloseIE()
        {
            UICommon.UIMapVS2017.CloseIE();
        }
        
        /// <summary>
        /// CloseRosterplanFromPlanTab
        /// </summary>
        public void CloseRosterplanFromPlanTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnCloseRibbonBaseButtonItem = this.UIArbeidsplanGrunnlagAWindow.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRibbonPageGroup17RibbonPageGroup.UIBtnCloseRibbonBaseButtonItem;
            #endregion

            // Click 'btnClose' RibbonBaseButtonItem
            Mouse.Click(uIBtnCloseRibbonBaseButtonItem, new Point(31, 20));
        }
        
        /// <summary>
        /// DeleteExtrashiftSundayWeek1
        /// </summary>
        public void DeleteExtrashiftSundayWeek1()
        {
            #region Variable Declarations
            WinClient uIEkstraClient = this.UIGatver64339794ASCLAvWindow3.UIItemWindow11.UIEkstraClient;
            DXButton uIGSSimpleButtonButton = this.UIItemWindow5.UIGSDialogFooterBarCustom.UIGSSimpleButtonButton;
            #endregion

            // Wait for 1 seconds for user delay between actions; Click 'Ekstra' client
            Playback.Wait(1000);
            Mouse.Click(uIEkstraClient, new Point(293, 15));

            // Wait for 1 seconds for user delay between actions; Click 'GSSimpleButton' button
            Playback.Wait(1000);
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// DeleteExtrashiftSundayWeek1New
        /// </summary>
        public void DeleteExtrashiftSundayWeek1New()
        {
            #region Variable Declarations
            WinClient uIEkstraClient = this.UIGatver66043686ASCLAvWindow.UIItemWindow.UIEkstraClient;
            DXButton uIGSSimpleButtonButton = this.UIItemWindow5.UIGSDialogFooterBarCustom1.UIGSSimpleButtonButton;
            #endregion

            // Wait for 1 seconds for user delay between actions; Click 'Ekstra' client
            Playback.Wait(1000);
            Mouse.Click(uIEkstraClient, new Point(293, 14));

            // Wait for 1 seconds for user delay between actions; Click 'GSSimpleButton' button
            Playback.Wait(1000);
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// EditCallout
        /// </summary>
        public void EditCallout()
        {
            #region Variable Declarations
            WinClient uIUtrykningerClient = this.UIGatver64339794ASCLAvWindow7.UIItemWindow11.UIUtrykningerClient;
            #endregion

            // Click 'Utrykninger' client
            Mouse.Click(uIUtrykningerClient, new Point(54, 19));
        }
        
        /// <summary>
        /// EditCalloutNew
        /// </summary>
        public void EditCalloutNew()
        {
            #region Variable Declarations
            WinClient uIUtrykningerClient = this.UIGatver66043686ASCLAvWindow1.UIItemWindow.UIUtrykningerClient;
            #endregion

            // Click 'Utrykninger' client
            Mouse.Click(uIUtrykningerClient, new Point(57, 22));
        }
        
        /// <summary>
        /// InvokeWeaBreakService
        /// </summary>
        public void InvokeWeaBreakService()
        {
            #region Variable Declarations
            HtmlInputButton uIInvokeButton = this.UIGatWebserviceMainPagWindow.UIWeaBreakServiceWebSeDocument1.UIContentPane.UIInvokeButton;
            #endregion
            
            // Click 'Invoke' button
            Mouse.Click(uIInvokeButton, new Point(24, 7));
        }
        
        /// <summary>
        /// OpenRosterplan
        /// </summary>
        public void OpenRosterplan()
        {
            #region Variable Declarations
            DXCell uIGrunnlagAMLTEST1Cell = this.UIGatver64339794ASCLAvWindow1.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIPnlGridClient.UIGcRosterPlansTable.UIGrunnlagAMLTEST1Cell;
            #endregion

            // Double-Click 'Grunnlag AML-TEST 1.' cell
            Mouse.DoubleClick(uIGrunnlagAMLTEST1Cell, new Point(64, 7));
        }
        
        /// <summary>
        /// SelectAmlGlobalSettings
        /// </summary>
        public void SelectAmlGlobalSettings()
        {
            #region Variable Declarations
            WinClient uIGlobaltoppsettClient = this.UIGlobaltoppsettWindow.UIItemWindow.UIGlobaltoppsettClient;
            #endregion

            // Click 'Globalt oppsett' client
            Mouse.Click(uIGlobaltoppsettClient, new Point(34, 9));
        }
        
        /// <summary>
        /// SelectExtrashiftToDelete
        /// </summary>
        public void SelectExtrashiftToDelete()
        {
            #region Variable Declarations
            WinClient uIEkstraClient = this.UIGatver64339794ASCLAvWindow3.UIItemWindow3.UIEkstraClient;
            #endregion

            // Wait for 1 seconds for user delay between actions; Click 'Ekstra' client
            Playback.Wait(1000);
            Mouse.Click(uIEkstraClient, new Point(348, 26));
        }
        
        /// <summary>
        /// SelectFirstLineInDayColumnShiftBook
        /// </summary>
        public void SelectFirstLineInDayColumnShiftBook()
        {
            #region Variable Declarations
            DXCell uICelsiusCesarCell = this.UIGatver64339794ASCLAvWindow4.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UICelsiusCesarCell;
            #endregion

            // Click 'Celsius, Cesar' cell
            Mouse.Click(uICelsiusCesarCell, new Point(38, 8));
        }
        
        /// <summary>
        /// SelectFirstLineInEveningColumnShiftBook
        /// </summary>
        public void SelectFirstLineInEveningColumnShiftBook()
        {
            #region Variable Declarations
            DXCell uIVAKANTCell = this.UIGatver64339794ASCLAvWindow4.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIVAKANTCell;
            #endregion

            // Click 'VAKANT' cell
            Mouse.Click(uIVAKANTCell, new Point(49, 10));
        }
        
        /// <summary>
        /// SelectFirstLineInNightColumnShiftBook
        /// </summary>
        public void SelectFirstLineInNightColumnShiftBook()
        {
            #region Variable Declarations
            DXCell uIBrunBosseCell = this.UIGatver64339794ASCLAvWindow4.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIContainerPanel0DockPanel.UINatttiltirsdag001677DockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIBrunBosseCell;
            #endregion

            // Click 'Brun, Bosse' cell
            Mouse.Click(uIBrunBosseCell, new Point(21, 5));
        }
        
        /// <summary>
        /// SelectFirstRowInOnCallShiftColumnShiftBook
        /// </summary>
        public void SelectFirstRowInOnCallShiftColumnShiftBook()
        {
            #region Variable Declarations
            DXCell uIJensenJuliusCell = this.UIGatver64339794ASCLAvWindow4.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIContainerPanel1DockPanel.UIBakvakt00167770770FaDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIJensenJuliusCell;
            #endregion

            // Click 'Jensen, Julius' cell
            Mouse.Click(uIJensenJuliusCell, new Point(11, 5));
        }
        
        /// <summary>
        /// SelectNewLimit
        /// </summary>
        public void SelectNewLimit()
        {
            #region Variable Declarations
            DXCell uIGyldigfra06092016Cell = this.UIAMLavtaleWindow.UIPcAgreementClient.UIXtabCtrAgreementTabList.UIXtpLimitsClient.UIGcLimitsTable.UIGyldigfra06092016Cell;
            #endregion

            // Click 'Gyldig fra: 06.09.2016' cell
            Mouse.Click(uIGyldigfra06092016Cell, new Point(70, 7));
        }
        
        /// <summary>
        /// SelectRosterplanPlanTab
        /// </summary>
        public void SelectRosterplanPlanTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpPlanRibbonPage = this.UIArbeidsplanGrunnlagAWindow.UIRcMenuRibbon.UIRpPlanRibbonPage;
            #endregion

            // Click 'rpPlan' RibbonPage
            Mouse.Click(uIRpPlanRibbonPage, new Point(21, 11));
        }
        
        /// <summary>
        /// SelectVakantAshiftSundayWeek1
        /// </summary>
        public void SelectVakantAshiftSundayWeek1()
        {
            #region Variable Declarations
            DXCell uIVAKANTCell = this.UIGatver64339794ASCLAvWindow4.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIVAKANTCell;
            #endregion

            // Click 'VAKANT' cell
            Mouse.Click(uIVAKANTCell, new Point(23, 7));
        }
        
        /// <summary>
        /// SetMinBeforeShift - Use 'SetMinBeforeShiftParams' to pass parameters into this method.
        /// </summary>
        public void SetMinBeforeShift()
        {
            #region Variable Declarations
            DXButton uIMaximizeButton = this.UIAMLavtaleWindow.UIMaximizeButton;
            DXTextEdit uISdeMinFreeBeforeShifEdit = this.UIAMLavtaleWindow.UIViewHostDispensationCustom.UIPcViewClient.UILimitContainerViewCustom.UIXtraTabControlLimitDTabList.UIXtraTabPageDetailsClient.UIPcLimitClient.UIViewHostLimitCustom.UIPcViewClient.UILimitDetailsViewCustom.UIPanelControl1Client.UIGcvhLimitDetailsCustom.UIGroupControlClient.UIOffDutyLimitViewCustom.UIPanelControl1Client.UIPFreeBeforeShiftClient.UISdeMinFreeBeforeShifEdit;
            DXButton uIOKButton = this.UIAMLavtaleWindow.UIOKButton;
            #endregion

            // Click 'Maximize' button
            Mouse.Click(uIMaximizeButton, new Point(11, 7));

            // Type 'System.Double' in 'sdeMinFreeBeforeShift' text box
            //ValueTypeName
            uISdeMinFreeBeforeShifEdit.ValueTypeName = this.SetMinBeforeShiftParams.UISdeMinFreeBeforeShifEditValueTypeName;

            // Type '9' in 'sdeMinFreeBeforeShift' text box
            //ValueAsString
            uISdeMinFreeBeforeShifEdit.ValueAsString = this.SetMinBeforeShiftParams.UISdeMinFreeBeforeShifEditValueAsString;

            // Type '{Tab}' in 'sdeMinFreeBeforeShift' text box
            Keyboard.SendKeys(uISdeMinFreeBeforeShifEdit, this.SetMinBeforeShiftParams.UISdeMinFreeBeforeShifEditSendKeys, ModifierKeys.None);

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(37, 10));
        }
        
        /// <summary>
        /// ShowAmlAgreementHistory
        /// </summary>
        public void ShowAmlAgreementHistory()
        {
            #region Variable Declarations
            DXTestControl uIXtraTabControlHeaderTabPage = this.UIAMLavtaleWindow.UIPcAgreementClient.UIXtabCtrAgreementTabList.UIXtraTabControlHeaderTabPage;
            #endregion

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(29, 12));
        }
        
        /// <summary>
        /// SortReportlistByID
        /// </summary>
        public void SortReportlistByID()
        {
            #region Variable Declarations
            WinClient uIPanel1Client = this.UIGatver64339794ASCLAvWindow3.UIItemWindow1.UIPanel1Client;
            #endregion

            // Click 'Panel1' client
            Mouse.Click(uIPanel1Client, new Point(35, 7));
        }
        
        /// <summary>
        /// SortReportlistByReportName
        /// </summary>
        public void SortReportlistByReportName()
        {
            #region Variable Declarations
            WinClient uIPanel1Client = this.UIGatver64339794ASCLAvWindow3.UIItemWindow1.UIPanel1Client;
            #endregion

            // Click 'Panel1' client
            Mouse.Click(uIPanel1Client, new Point(139, 8));
        }
        
        #region Properties
        public virtual AddCauseCodeStorArbeidsmengdeParams AddCauseCodeStorArbeidsmengdeParams
        {
            get
            {
                if ((this.mAddCauseCodeStorArbeidsmengdeParams == null))
                {
                    this.mAddCauseCodeStorArbeidsmengdeParams = new AddCauseCodeStorArbeidsmengdeParams();
                }
                return this.mAddCauseCodeStorArbeidsmengdeParams;
            }
        }
        
        public virtual AmLAgrementDataC9_S3Params AmLAgrementDataC9_S3Params
        {
            get
            {
                if ((this.mAmLAgrementDataC9_S3Params == null))
                {
                    this.mAmLAgrementDataC9_S3Params = new AmLAgrementDataC9_S3Params();
                }
                return this.mAmLAgrementDataC9_S3Params;
            }
        }
        
        public virtual CheckAllNoneCheckBoxReport77SweParams CheckAllNoneCheckBoxReport77SweParams
        {
            get
            {
                if ((this.mCheckAllNoneCheckBoxReport77SweParams == null))
                {
                    this.mCheckAllNoneCheckBoxReport77SweParams = new CheckAllNoneCheckBoxReport77SweParams();
                }
                return this.mCheckAllNoneCheckBoxReport77SweParams;
            }
        }
        
        public virtual CheckAmlAgreementsPrioExpectedValues CheckAmlAgreementsPrioExpectedValues
        {
            get
            {
                if ((this.mCheckAmlAgreementsPrioExpectedValues == null))
                {
                    this.mCheckAmlAgreementsPrioExpectedValues = new CheckAmlAgreementsPrioExpectedValues();
                }
                return this.mCheckAmlAgreementsPrioExpectedValues;
            }
        }
        
        public virtual CheckAmlSettingsExpectedValues CheckAmlSettingsExpectedValues
        {
            get
            {
                if ((this.mCheckAmlSettingsExpectedValues == null))
                {
                    this.mCheckAmlSettingsExpectedValues = new CheckAmlSettingsExpectedValues();
                }
                return this.mCheckAmlSettingsExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusCalloutGareC7Step1ExpectedValues CheckAmlStatusCalloutGareC7Step1ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusCalloutGareC7Step1ExpectedValues == null))
                {
                    this.mCheckAmlStatusCalloutGareC7Step1ExpectedValues = new CheckAmlStatusCalloutGareC7Step1ExpectedValues();
                }
                return this.mCheckAmlStatusCalloutGareC7Step1ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusCalloutGareC7Step10ExpectedValues CheckAmlStatusCalloutGareC7Step10ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusCalloutGareC7Step10ExpectedValues == null))
                {
                    this.mCheckAmlStatusCalloutGareC7Step10ExpectedValues = new CheckAmlStatusCalloutGareC7Step10ExpectedValues();
                }
                return this.mCheckAmlStatusCalloutGareC7Step10ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusCalloutGareC7Step10_2ExpectedValues CheckAmlStatusCalloutGareC7Step10_2ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusCalloutGareC7Step10_2ExpectedValues == null))
                {
                    this.mCheckAmlStatusCalloutGareC7Step10_2ExpectedValues = new CheckAmlStatusCalloutGareC7Step10_2ExpectedValues();
                }
                return this.mCheckAmlStatusCalloutGareC7Step10_2ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusCalloutGareC7Step3ExpectedValues CheckAmlStatusCalloutGareC7Step3ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusCalloutGareC7Step3ExpectedValues == null))
                {
                    this.mCheckAmlStatusCalloutGareC7Step3ExpectedValues = new CheckAmlStatusCalloutGareC7Step3ExpectedValues();
                }
                return this.mCheckAmlStatusCalloutGareC7Step3ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusCalloutGareC7Step4ExpectedValues CheckAmlStatusCalloutGareC7Step4ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusCalloutGareC7Step4ExpectedValues == null))
                {
                    this.mCheckAmlStatusCalloutGareC7Step4ExpectedValues = new CheckAmlStatusCalloutGareC7Step4ExpectedValues();
                }
                return this.mCheckAmlStatusCalloutGareC7Step4ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusCalloutGareC7Step4_2ExpectedValues CheckAmlStatusCalloutGareC7Step4_2ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusCalloutGareC7Step4_2ExpectedValues == null))
                {
                    this.mCheckAmlStatusCalloutGareC7Step4_2ExpectedValues = new CheckAmlStatusCalloutGareC7Step4_2ExpectedValues();
                }
                return this.mCheckAmlStatusCalloutGareC7Step4_2ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusCalloutGareC7Step5ExpectedValues CheckAmlStatusCalloutGareC7Step5ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusCalloutGareC7Step5ExpectedValues == null))
                {
                    this.mCheckAmlStatusCalloutGareC7Step5ExpectedValues = new CheckAmlStatusCalloutGareC7Step5ExpectedValues();
                }
                return this.mCheckAmlStatusCalloutGareC7Step5ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusCalloutGareC7Step8ExpectedValues CheckAmlStatusCalloutGareC7Step8ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusCalloutGareC7Step8ExpectedValues == null))
                {
                    this.mCheckAmlStatusCalloutGareC7Step8ExpectedValues = new CheckAmlStatusCalloutGareC7Step8ExpectedValues();
                }
                return this.mCheckAmlStatusCalloutGareC7Step8ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusCalloutGareC7Step9ExpectedValues CheckAmlStatusCalloutGareC7Step9ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusCalloutGareC7Step9ExpectedValues == null))
                {
                    this.mCheckAmlStatusCalloutGareC7Step9ExpectedValues = new CheckAmlStatusCalloutGareC7Step9ExpectedValues();
                }
                return this.mCheckAmlStatusCalloutGareC7Step9ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues CheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues == null))
                {
                    this.mCheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues = new CheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues();
                }
                return this.mCheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExchangeAndersenC5Step6ExpectedValues CheckAmlStatusExchangeAndersenC5Step6ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExchangeAndersenC5Step6ExpectedValues == null))
                {
                    this.mCheckAmlStatusExchangeAndersenC5Step6ExpectedValues = new CheckAmlStatusExchangeAndersenC5Step6ExpectedValues();
                }
                return this.mCheckAmlStatusExchangeAndersenC5Step6ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExchangeBosseC5Step1ExpectedValues CheckAmlStatusExchangeBosseC5Step1ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExchangeBosseC5Step1ExpectedValues == null))
                {
                    this.mCheckAmlStatusExchangeBosseC5Step1ExpectedValues = new CheckAmlStatusExchangeBosseC5Step1ExpectedValues();
                }
                return this.mCheckAmlStatusExchangeBosseC5Step1ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExchangeBosseC5Step4ExpectedValues CheckAmlStatusExchangeBosseC5Step4ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExchangeBosseC5Step4ExpectedValues == null))
                {
                    this.mCheckAmlStatusExchangeBosseC5Step4ExpectedValues = new CheckAmlStatusExchangeBosseC5Step4ExpectedValues();
                }
                return this.mCheckAmlStatusExchangeBosseC5Step4ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExchangeBosseC5Step6ExpectedValues CheckAmlStatusExchangeBosseC5Step6ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExchangeBosseC5Step6ExpectedValues == null))
                {
                    this.mCheckAmlStatusExchangeBosseC5Step6ExpectedValues = new CheckAmlStatusExchangeBosseC5Step6ExpectedValues();
                }
                return this.mCheckAmlStatusExchangeBosseC5Step6ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExchangeCesarC5Step1ExpectedValues CheckAmlStatusExchangeCesarC5Step1ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExchangeCesarC5Step1ExpectedValues == null))
                {
                    this.mCheckAmlStatusExchangeCesarC5Step1ExpectedValues = new CheckAmlStatusExchangeCesarC5Step1ExpectedValues();
                }
                return this.mCheckAmlStatusExchangeCesarC5Step1ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraBosseModayWeek2ExpectedValues CheckAmlStatusExtraBosseModayWeek2ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraBosseModayWeek2ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraBosseModayWeek2ExpectedValues = new CheckAmlStatusExtraBosseModayWeek2ExpectedValues();
                }
                return this.mCheckAmlStatusExtraBosseModayWeek2ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraBosseModayWeek3ExpectedValues CheckAmlStatusExtraBosseModayWeek3ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraBosseModayWeek3ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraBosseModayWeek3ExpectedValues = new CheckAmlStatusExtraBosseModayWeek3ExpectedValues();
                }
                return this.mCheckAmlStatusExtraBosseModayWeek3ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraBosseSundayWeek7ExpectedValues CheckAmlStatusExtraBosseSundayWeek7ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraBosseSundayWeek7ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraBosseSundayWeek7ExpectedValues = new CheckAmlStatusExtraBosseSundayWeek7ExpectedValues();
                }
                return this.mCheckAmlStatusExtraBosseSundayWeek7ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues CheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues = new CheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues();
                }
                return this.mCheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues CheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues = new CheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues();
                }
                return this.mCheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues CheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues = new CheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues();
                }
                return this.mCheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraCesarFridayWeek1ExpectedValues CheckAmlStatusExtraCesarFridayWeek1ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraCesarFridayWeek1ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraCesarFridayWeek1ExpectedValues = new CheckAmlStatusExtraCesarFridayWeek1ExpectedValues();
                }
                return this.mCheckAmlStatusExtraCesarFridayWeek1ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues CheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues = new CheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues();
                }
                return this.mCheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues CheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues = new CheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues();
                }
                return this.mCheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraCesarSundayWeek1ExpectedValues CheckAmlStatusExtraCesarSundayWeek1ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraCesarSundayWeek1ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraCesarSundayWeek1ExpectedValues = new CheckAmlStatusExtraCesarSundayWeek1ExpectedValues();
                }
                return this.mCheckAmlStatusExtraCesarSundayWeek1ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraIngvarC11Step11ExpectedValues CheckAmlStatusExtraIngvarC11Step11ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraIngvarC11Step11ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraIngvarC11Step11ExpectedValues = new CheckAmlStatusExtraIngvarC11Step11ExpectedValues();
                }
                return this.mCheckAmlStatusExtraIngvarC11Step11ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraIngvarC11Step14ExpectedValues CheckAmlStatusExtraIngvarC11Step14ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraIngvarC11Step14ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraIngvarC11Step14ExpectedValues = new CheckAmlStatusExtraIngvarC11Step14ExpectedValues();
                }
                return this.mCheckAmlStatusExtraIngvarC11Step14ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraIngvarC11Step15ExpectedValues CheckAmlStatusExtraIngvarC11Step15ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraIngvarC11Step15ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraIngvarC11Step15ExpectedValues = new CheckAmlStatusExtraIngvarC11Step15ExpectedValues();
                }
                return this.mCheckAmlStatusExtraIngvarC11Step15ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraIngvarC11Step6ExpectedValues CheckAmlStatusExtraIngvarC11Step6ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraIngvarC11Step6ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraIngvarC11Step6ExpectedValues = new CheckAmlStatusExtraIngvarC11Step6ExpectedValues();
                }
                return this.mCheckAmlStatusExtraIngvarC11Step6ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraIngvarC11Step8ExpectedValues CheckAmlStatusExtraIngvarC11Step8ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraIngvarC11Step8ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraIngvarC11Step8ExpectedValues = new CheckAmlStatusExtraIngvarC11Step8ExpectedValues();
                }
                return this.mCheckAmlStatusExtraIngvarC11Step8ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraIngvarC11Step9ExpectedValues CheckAmlStatusExtraIngvarC11Step9ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraIngvarC11Step9ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraIngvarC11Step9ExpectedValues = new CheckAmlStatusExtraIngvarC11Step9ExpectedValues();
                }
                return this.mCheckAmlStatusExtraIngvarC11Step9ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues CheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues = new CheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues();
                }
                return this.mCheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues CheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues = new CheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues();
                }
                return this.mCheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues CheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues == null))
                {
                    this.mCheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues = new CheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues();
                }
                return this.mCheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusRemanageBosseWeek5MondayExpectedValues CheckAmlStatusRemanageBosseWeek5MondayExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusRemanageBosseWeek5MondayExpectedValues == null))
                {
                    this.mCheckAmlStatusRemanageBosseWeek5MondayExpectedValues = new CheckAmlStatusRemanageBosseWeek5MondayExpectedValues();
                }
                return this.mCheckAmlStatusRemanageBosseWeek5MondayExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues CheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues == null))
                {
                    this.mCheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues = new CheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues();
                }
                return this.mCheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusRemanageCesarWeek10FridayExpectedValues CheckAmlStatusRemanageCesarWeek10FridayExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusRemanageCesarWeek10FridayExpectedValues == null))
                {
                    this.mCheckAmlStatusRemanageCesarWeek10FridayExpectedValues = new CheckAmlStatusRemanageCesarWeek10FridayExpectedValues();
                }
                return this.mCheckAmlStatusRemanageCesarWeek10FridayExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues CheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues == null))
                {
                    this.mCheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues = new CheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues();
                }
                return this.mCheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusRemanageCesarWeek10MondayExpectedValues CheckAmlStatusRemanageCesarWeek10MondayExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusRemanageCesarWeek10MondayExpectedValues == null))
                {
                    this.mCheckAmlStatusRemanageCesarWeek10MondayExpectedValues = new CheckAmlStatusRemanageCesarWeek10MondayExpectedValues();
                }
                return this.mCheckAmlStatusRemanageCesarWeek10MondayExpectedValues;
            }
        }
        
        public virtual CheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues CheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues
        {
            get
            {
                if ((this.mCheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues == null))
                {
                    this.mCheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues = new CheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues();
                }
                return this.mCheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues;
            }
        }
        
        public virtual CheckEkstraShiftsInWarningAbsenceDialogParams CheckEkstraShiftsInWarningAbsenceDialogParams
        {
            get
            {
                if ((this.mCheckEkstraShiftsInWarningAbsenceDialogParams == null))
                {
                    this.mCheckEkstraShiftsInWarningAbsenceDialogParams = new CheckEkstraShiftsInWarningAbsenceDialogParams();
                }
                return this.mCheckEkstraShiftsInWarningAbsenceDialogParams;
            }
        }
        
        public virtual CheckKeepSelectedDaysplitExpectedValues CheckKeepSelectedDaysplitExpectedValues
        {
            get
            {
                if ((this.mCheckKeepSelectedDaysplitExpectedValues == null))
                {
                    this.mCheckKeepSelectedDaysplitExpectedValues = new CheckKeepSelectedDaysplitExpectedValues();
                }
                return this.mCheckKeepSelectedDaysplitExpectedValues;
            }
        }
        
        public virtual CheckUseActiveExchangeDepExcExpectedValues CheckUseActiveExchangeDepExcExpectedValues
        {
            get
            {
                if ((this.mCheckUseActiveExchangeDepExcExpectedValues == null))
                {
                    this.mCheckUseActiveExchangeDepExcExpectedValues = new CheckUseActiveExchangeDepExcExpectedValues();
                }
                return this.mCheckUseActiveExchangeDepExcExpectedValues;
            }
        }
        
        public virtual ClickEmp1ExchangeParams ClickEmp1ExchangeParams
        {
            get
            {
                if ((this.mClickEmp1ExchangeParams == null))
                {
                    this.mClickEmp1ExchangeParams = new ClickEmp1ExchangeParams();
                }
                return this.mClickEmp1ExchangeParams;
            }
        }
        
        public virtual ClickEmp2ExchangeParams ClickEmp2ExchangeParams
        {
            get
            {
                if ((this.mClickEmp2ExchangeParams == null))
                {
                    this.mClickEmp2ExchangeParams = new ClickEmp2ExchangeParams();
                }
                return this.mClickEmp2ExchangeParams;
            }
        }
        
        public virtual SetMinBeforeShiftParams SetMinBeforeShiftParams
        {
            get
            {
                if ((this.mSetMinBeforeShiftParams == null))
                {
                    this.mSetMinBeforeShiftParams = new SetMinBeforeShiftParams();
                }
                return this.mSetMinBeforeShiftParams;
            }
        }
        
        public UIGlobaltoppsettWindow UIGlobaltoppsettWindow
        {
            get
            {
                if ((this.mUIGlobaltoppsettWindow == null))
                {
                    this.mUIGlobaltoppsettWindow = new UIGlobaltoppsettWindow();
                }
                return this.mUIGlobaltoppsettWindow;
            }
        }
        
        public UIForhåndsdefinerteårsWindow UIForhåndsdefinerteårsWindow
        {
            get
            {
                if ((this.mUIForhåndsdefinerteårsWindow == null))
                {
                    this.mUIForhåndsdefinerteårsWindow = new UIForhåndsdefinerteårsWindow();
                }
                return this.mUIForhåndsdefinerteårsWindow;
            }
        }
        
        public UIGatver64339794ASCLAvWindow UIGatver64339794ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow == null))
                {
                    this.mUIGatver64339794ASCLAvWindow = new UIGatver64339794ASCLAvWindow();
                }
                return this.mUIGatver64339794ASCLAvWindow;
            }
        }
        
        public UIGatver64339794ASCLAvWindow1 UIGatver64339794ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow1 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow1 = new UIGatver64339794ASCLAvWindow1();
                }
                return this.mUIGatver64339794ASCLAvWindow1;
            }
        }
        
        public UIItemWindow6 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow6();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIExcelWindow UIExcelWindow
        {
            get
            {
                if ((this.mUIExcelWindow == null))
                {
                    this.mUIExcelWindow = new UIExcelWindow();
                }
                return this.mUIExcelWindow;
            }
        }
        
        public UIArbeidsplanGrunnlagAWindow UIArbeidsplanGrunnlagAWindow
        {
            get
            {
                if ((this.mUIArbeidsplanGrunnlagAWindow == null))
                {
                    this.mUIArbeidsplanGrunnlagAWindow = new UIArbeidsplanGrunnlagAWindow();
                }
                return this.mUIArbeidsplanGrunnlagAWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIIverksetteWindow UIIverksetteWindow
        {
            get
            {
                if ((this.mUIIverksetteWindow == null))
                {
                    this.mUIIverksetteWindow = new UIIverksetteWindow();
                }
                return this.mUIIverksetteWindow;
            }
        }
        
        public UIItemWindow22 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow22();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow111 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow111();
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIEndreiverksettingspeWindow UIEndreiverksettingspeWindow
        {
            get
            {
                if ((this.mUIEndreiverksettingspeWindow == null))
                {
                    this.mUIEndreiverksettingspeWindow = new UIEndreiverksettingspeWindow();
                }
                return this.mUIEndreiverksettingspeWindow;
            }
        }
        
        public UIGatver64339794ASCLAvWindow2 UIGatver64339794ASCLAvWindow2
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow2 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow2 = new UIGatver64339794ASCLAvWindow2();
                }
                return this.mUIGatver64339794ASCLAvWindow2;
            }
        }
        
        public UIGatver64339794ASCLAvWindow3 UIGatver64339794ASCLAvWindow3
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow3 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow3 = new UIGatver64339794ASCLAvWindow3();
                }
                return this.mUIGatver64339794ASCLAvWindow3;
            }
        }
        
        public UIBook1_ASCLxlsCompatiWindow UIBook1_ASCLxlsCompatiWindow
        {
            get
            {
                if ((this.mUIBook1_ASCLxlsCompatiWindow == null))
                {
                    this.mUIBook1_ASCLxlsCompatiWindow = new UIBook1_ASCLxlsCompatiWindow();
                }
                return this.mUIBook1_ASCLxlsCompatiWindow;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        
        public UIGatver64339794ASCLAvWindow4 UIGatver64339794ASCLAvWindow4
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow4 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow4 = new UIGatver64339794ASCLAvWindow4();
                }
                return this.mUIGatver64339794ASCLAvWindow4;
            }
        }
        
        public UIItemWindow32 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow32();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow42 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow42();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIGatver64339794ASCLAvWindow5 UIGatver64339794ASCLAvWindow5
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow5 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow5 = new UIGatver64339794ASCLAvWindow5();
                }
                return this.mUIGatver64339794ASCLAvWindow5;
            }
        }
        
        public UIBook1ExcelWindow UIBook1ExcelWindow
        {
            get
            {
                if ((this.mUIBook1ExcelWindow == null))
                {
                    this.mUIBook1ExcelWindow = new UIBook1ExcelWindow();
                }
                return this.mUIBook1ExcelWindow;
            }
        }
        
        public UIItemWindow52 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow52();
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIItemWindow61 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow61();
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UISletteforskyvningeroWindow UISletteforskyvningeroWindow
        {
            get
            {
                if ((this.mUISletteforskyvningeroWindow == null))
                {
                    this.mUISletteforskyvningeroWindow = new UISletteforskyvningeroWindow();
                }
                return this.mUISletteforskyvningeroWindow;
            }
        }
        
        public UIGatver64339794ASCLAvWindow6 UIGatver64339794ASCLAvWindow6
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow6 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow6 = new UIGatver64339794ASCLAvWindow6();
                }
                return this.mUIGatver64339794ASCLAvWindow6;
            }
        }
        
        public UIForskyvningWindow UIForskyvningWindow
        {
            get
            {
                if ((this.mUIForskyvningWindow == null))
                {
                    this.mUIForskyvningWindow = new UIForskyvningWindow();
                }
                return this.mUIForskyvningWindow;
            }
        }
        
        public UIItemWindow71 UIItemWindow7
        {
            get
            {
                if ((this.mUIItemWindow7 == null))
                {
                    this.mUIItemWindow7 = new UIItemWindow71();
                }
                return this.mUIItemWindow7;
            }
        }
        
        public UIEndrevakterWindow UIEndrevakterWindow
        {
            get
            {
                if ((this.mUIEndrevakterWindow == null))
                {
                    this.mUIEndrevakterWindow = new UIEndrevakterWindow();
                }
                return this.mUIEndrevakterWindow;
            }
        }
        
        public UIBytteWindow UIBytteWindow
        {
            get
            {
                if ((this.mUIBytteWindow == null))
                {
                    this.mUIBytteWindow = new UIBytteWindow();
                }
                return this.mUIBytteWindow;
            }
        }
        
        public UIRekalkuleringWindow UIRekalkuleringWindow
        {
            get
            {
                if ((this.mUIRekalkuleringWindow == null))
                {
                    this.mUIRekalkuleringWindow = new UIRekalkuleringWindow();
                }
                return this.mUIRekalkuleringWindow;
            }
        }
        
        public UIByttemedavdelingWindow UIByttemedavdelingWindow
        {
            get
            {
                if ((this.mUIByttemedavdelingWindow == null))
                {
                    this.mUIByttemedavdelingWindow = new UIByttemedavdelingWindow();
                }
                return this.mUIByttemedavdelingWindow;
            }
        }
        
        public UIVacantShiftsFormWindow UIVacantShiftsFormWindow
        {
            get
            {
                if ((this.mUIVacantShiftsFormWindow == null))
                {
                    this.mUIVacantShiftsFormWindow = new UIVacantShiftsFormWindow();
                }
                return this.mUIVacantShiftsFormWindow;
            }
        }
        
        public UIUtrykningWindow UIUtrykningWindow
        {
            get
            {
                if ((this.mUIUtrykningWindow == null))
                {
                    this.mUIUtrykningWindow = new UIUtrykningWindow();
                }
                return this.mUIUtrykningWindow;
            }
        }
        
        public UIGatver64339794ASCLAvWindow7 UIGatver64339794ASCLAvWindow7
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow7 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow7 = new UIGatver64339794ASCLAvWindow7();
                }
                return this.mUIGatver64339794ASCLAvWindow7;
            }
        }
        
        public UIAMLavtaleWindow UIAMLavtaleWindow
        {
            get
            {
                if ((this.mUIAMLavtaleWindow == null))
                {
                    this.mUIAMLavtaleWindow = new UIAMLavtaleWindow();
                }
                return this.mUIAMLavtaleWindow;
            }
        }
        
        public UIAnsattfilterWindow UIAnsattfilterWindow
        {
            get
            {
                if ((this.mUIAnsattfilterWindow == null))
                {
                    this.mUIAnsattfilterWindow = new UIAnsattfilterWindow();
                }
                return this.mUIAnsattfilterWindow;
            }
        }
        
        public UIGatver64339794ASCLAvWindow8 UIGatver64339794ASCLAvWindow8
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow8 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow8 = new UIGatver64339794ASCLAvWindow8();
                }
                return this.mUIGatver64339794ASCLAvWindow8;
            }
        }
        
        public UIAMLavtaleWindow1 UIAMLavtaleWindow1
        {
            get
            {
                if ((this.mUIAMLavtaleWindow1 == null))
                {
                    this.mUIAMLavtaleWindow1 = new UIAMLavtaleWindow1();
                }
                return this.mUIAMLavtaleWindow1;
            }
        }
        
        public UIVelgavdelingWindow UIVelgavdelingWindow
        {
            get
            {
                if ((this.mUIVelgavdelingWindow == null))
                {
                    this.mUIVelgavdelingWindow = new UIVelgavdelingWindow();
                }
                return this.mUIVelgavdelingWindow;
            }
        }
        
        public UIGatver64339794ASCLAvWindow9 UIGatver64339794ASCLAvWindow9
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow9 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow9 = new UIGatver64339794ASCLAvWindow9();
                }
                return this.mUIGatver64339794ASCLAvWindow9;
            }
        }
        
        public UIStillingsforholdWindow UIStillingsforholdWindow
        {
            get
            {
                if ((this.mUIStillingsforholdWindow == null))
                {
                    this.mUIStillingsforholdWindow = new UIStillingsforholdWindow();
                }
                return this.mUIStillingsforholdWindow;
            }
        }
        
        public UIItemWindow81 UIItemWindow8
        {
            get
            {
                if ((this.mUIItemWindow8 == null))
                {
                    this.mUIItemWindow8 = new UIItemWindow81();
                }
                return this.mUIItemWindow8;
            }
        }
        
        public UIGatver64339794ASCLAvWindow10 UIGatver64339794ASCLAvWindow10
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow10 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow10 = new UIGatver64339794ASCLAvWindow10();
                }
                return this.mUIGatver64339794ASCLAvWindow10;
            }
        }
        
        public UIGatver64339794ASCLAvWindow11 UIGatver64339794ASCLAvWindow11
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvWindow11 == null))
                {
                    this.mUIGatver64339794ASCLAvWindow11 = new UIGatver64339794ASCLAvWindow11();
                }
                return this.mUIGatver64339794ASCLAvWindow11;
            }
        }
        
        public UIDøgnogukeskilleWindow UIDøgnogukeskilleWindow
        {
            get
            {
                if ((this.mUIDøgnogukeskilleWindow == null))
                {
                    this.mUIDøgnogukeskilleWindow = new UIDøgnogukeskilleWindow();
                }
                return this.mUIDøgnogukeskilleWindow;
            }
        }
        
        public UIOppsettforAMLkalkuleWindow UIOppsettforAMLkalkuleWindow
        {
            get
            {
                if ((this.mUIOppsettforAMLkalkuleWindow == null))
                {
                    this.mUIOppsettforAMLkalkuleWindow = new UIOppsettforAMLkalkuleWindow();
                }
                return this.mUIOppsettforAMLkalkuleWindow;
            }
        }
        
        public UIInternetInformationSWindow UIInternetInformationSWindow
        {
            get
            {
                if ((this.mUIInternetInformationSWindow == null))
                {
                    this.mUIInternetInformationSWindow = new UIInternetInformationSWindow();
                }
                return this.mUIInternetInformationSWindow;
            }
        }
        
        public UIItemWindow91 UIItemWindow9
        {
            get
            {
                if ((this.mUIItemWindow9 == null))
                {
                    this.mUIItemWindow9 = new UIItemWindow91();
                }
                return this.mUIItemWindow9;
            }
        }
        
        public UIGatWebserviceMainPagWindow UIGatWebserviceMainPagWindow
        {
            get
            {
                if ((this.mUIGatWebserviceMainPagWindow == null))
                {
                    this.mUIGatWebserviceMainPagWindow = new UIGatWebserviceMainPagWindow();
                }
                return this.mUIGatWebserviceMainPagWindow;
            }
        }
        
        public UIMertidövertidWindow UIMertidövertidWindow
        {
            get
            {
                if ((this.mUIMertidövertidWindow == null))
                {
                    this.mUIMertidövertidWindow = new UIMertidövertidWindow();
                }
                return this.mUIMertidövertidWindow;
            }
        }
        
        public UIGatver64440754GATSOFWindow1 UIGatver64440754GATSOFWindow1
        {
            get
            {
                if ((this.mUIGatver64440754GATSOFWindow1 == null))
                {
                    this.mUIGatver64440754GATSOFWindow1 = new UIGatver64440754GATSOFWindow1();
                }
                return this.mUIGatver64440754GATSOFWindow1;
            }
        }
        
        public UIGatver64440754GATSOFWindow2 UIGatver64440754GATSOFWindow2
        {
            get
            {
                if ((this.mUIGatver64440754GATSOFWindow2 == null))
                {
                    this.mUIGatver64440754GATSOFWindow2 = new UIGatver64440754GATSOFWindow2();
                }
                return this.mUIGatver64440754GATSOFWindow2;
            }
        }
        
        public UIArbeidsplanATLtest1PWindow UIArbeidsplanATLtest1PWindow
        {
            get
            {
                if ((this.mUIArbeidsplanATLtest1PWindow == null))
                {
                    this.mUIArbeidsplanATLtest1PWindow = new UIArbeidsplanATLtest1PWindow();
                }
                return this.mUIArbeidsplanATLtest1PWindow;
            }
        }
        
        public UIAnställdaiArbeidsplaWindow UIAnställdaiArbeidsplaWindow
        {
            get
            {
                if ((this.mUIAnställdaiArbeidsplaWindow == null))
                {
                    this.mUIAnställdaiArbeidsplaWindow = new UIAnställdaiArbeidsplaWindow();
                }
                return this.mUIAnställdaiArbeidsplaWindow;
            }
        }
        
        public UILäggtillanställdaWindow UILäggtillanställdaWindow
        {
            get
            {
                if ((this.mUILäggtillanställdaWindow == null))
                {
                    this.mUILäggtillanställdaWindow = new UILäggtillanställdaWindow();
                }
                return this.mUILäggtillanställdaWindow;
            }
        }
        
        public UIArbeidsplanATLtest1RWindow1 UIArbeidsplanATLtest1RWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanATLtest1RWindow1 == null))
                {
                    this.mUIArbeidsplanATLtest1RWindow1 = new UIArbeidsplanATLtest1RWindow1();
                }
                return this.mUIArbeidsplanATLtest1RWindow1;
            }
        }
        
        public UIGT4003InformationWindow UIGT4003InformationWindow
        {
            get
            {
                if ((this.mUIGT4003InformationWindow == null))
                {
                    this.mUIGT4003InformationWindow = new UIGT4003InformationWindow();
                }
                return this.mUIGT4003InformationWindow;
            }
        }
        
        public UIGatver64440754GATSOFWindow3 UIGatver64440754GATSOFWindow3
        {
            get
            {
                if ((this.mUIGatver64440754GATSOFWindow3 == null))
                {
                    this.mUIGatver64440754GATSOFWindow3 = new UIGatver64440754GATSOFWindow3();
                }
                return this.mUIGatver64440754GATSOFWindow3;
            }
        }
        
        public UISammenligningavkompeWindow UISammenligningavkompeWindow
        {
            get
            {
                if ((this.mUISammenligningavkompeWindow == null))
                {
                    this.mUISammenligningavkompeWindow = new UISammenligningavkompeWindow();
                }
                return this.mUISammenligningavkompeWindow;
            }
        }
        
        public UIGatver65041545ASCLAvWindow UIGatver65041545ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65041545ASCLAvWindow == null))
                {
                    this.mUIGatver65041545ASCLAvWindow = new UIGatver65041545ASCLAvWindow();
                }
                return this.mUIGatver65041545ASCLAvWindow;
            }
        }
        
        public UINyAMLdispensasjonWindow UINyAMLdispensasjonWindow
        {
            get
            {
                if ((this.mUINyAMLdispensasjonWindow == null))
                {
                    this.mUINyAMLdispensasjonWindow = new UINyAMLdispensasjonWindow();
                }
                return this.mUINyAMLdispensasjonWindow;
            }
        }
        
        public UIArbeidsplanATLtest1PWindow1 UIArbeidsplanATLtest1PWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanATLtest1PWindow1 == null))
                {
                    this.mUIArbeidsplanATLtest1PWindow1 = new UIArbeidsplanATLtest1PWindow1();
                }
                return this.mUIArbeidsplanATLtest1PWindow1;
            }
        }
        
        public UIAnställdaiarbetsplanWindow UIAnställdaiarbetsplanWindow
        {
            get
            {
                if ((this.mUIAnställdaiarbetsplanWindow == null))
                {
                    this.mUIAnställdaiarbetsplanWindow = new UIAnställdaiarbetsplanWindow();
                }
                return this.mUIAnställdaiarbetsplanWindow;
            }
        }
        
        public UIGatver65142408ASCLAvWindow UIGatver65142408ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65142408ASCLAvWindow == null))
                {
                    this.mUIGatver65142408ASCLAvWindow = new UIGatver65142408ASCLAvWindow();
                }
                return this.mUIGatver65142408ASCLAvWindow;
            }
        }
        
        public UIGatver66043686ASCLAvWindow UIGatver66043686ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver66043686ASCLAvWindow == null))
                {
                    this.mUIGatver66043686ASCLAvWindow = new UIGatver66043686ASCLAvWindow();
                }
                return this.mUIGatver66043686ASCLAvWindow;
            }
        }
        
        public UIGatver66043686ASCLAvWindow1 UIGatver66043686ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver66043686ASCLAvWindow1 == null))
                {
                    this.mUIGatver66043686ASCLAvWindow1 = new UIGatver66043686ASCLAvWindow1();
                }
                return this.mUIGatver66043686ASCLAvWindow1;
            }
        }
        
        public UIGatver66043686ASCLAvWindow2 UIGatver66043686ASCLAvWindow2
        {
            get
            {
                if ((this.mUIGatver66043686ASCLAvWindow2 == null))
                {
                    this.mUIGatver66043686ASCLAvWindow2 = new UIGatver66043686ASCLAvWindow2();
                }
                return this.mUIGatver66043686ASCLAvWindow2;
            }
        }
        
        public UIGatver201720GATSOFTAWindow UIGatver201720GATSOFTAWindow
        {
            get
            {
                if ((this.mUIGatver201720GATSOFTAWindow == null))
                {
                    this.mUIGatver201720GATSOFTAWindow = new UIGatver201720GATSOFTAWindow();
                }
                return this.mUIGatver201720GATSOFTAWindow;
            }
        }
        
        public UIGatver201720GATSOFTAWindow1 UIGatver201720GATSOFTAWindow1
        {
            get
            {
                if ((this.mUIGatver201720GATSOFTAWindow1 == null))
                {
                    this.mUIGatver201720GATSOFTAWindow1 = new UIGatver201720GATSOFTAWindow1();
                }
                return this.mUIGatver201720GATSOFTAWindow1;
            }
        }
        #endregion
        
        #region Fields
        private AddCauseCodeStorArbeidsmengdeParams mAddCauseCodeStorArbeidsmengdeParams;
        
        private AmLAgrementDataC9_S3Params mAmLAgrementDataC9_S3Params;
        
        private CheckAllNoneCheckBoxReport77SweParams mCheckAllNoneCheckBoxReport77SweParams;
        
        private CheckAmlAgreementsPrioExpectedValues mCheckAmlAgreementsPrioExpectedValues;
        
        private CheckAmlSettingsExpectedValues mCheckAmlSettingsExpectedValues;
        
        private CheckAmlStatusCalloutGareC7Step1ExpectedValues mCheckAmlStatusCalloutGareC7Step1ExpectedValues;
        
        private CheckAmlStatusCalloutGareC7Step10ExpectedValues mCheckAmlStatusCalloutGareC7Step10ExpectedValues;
        
        private CheckAmlStatusCalloutGareC7Step10_2ExpectedValues mCheckAmlStatusCalloutGareC7Step10_2ExpectedValues;
        
        private CheckAmlStatusCalloutGareC7Step3ExpectedValues mCheckAmlStatusCalloutGareC7Step3ExpectedValues;
        
        private CheckAmlStatusCalloutGareC7Step4ExpectedValues mCheckAmlStatusCalloutGareC7Step4ExpectedValues;
        
        private CheckAmlStatusCalloutGareC7Step4_2ExpectedValues mCheckAmlStatusCalloutGareC7Step4_2ExpectedValues;
        
        private CheckAmlStatusCalloutGareC7Step5ExpectedValues mCheckAmlStatusCalloutGareC7Step5ExpectedValues;
        
        private CheckAmlStatusCalloutGareC7Step8ExpectedValues mCheckAmlStatusCalloutGareC7Step8ExpectedValues;
        
        private CheckAmlStatusCalloutGareC7Step9ExpectedValues mCheckAmlStatusCalloutGareC7Step9ExpectedValues;
        
        private CheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues mCheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues;
        
        private CheckAmlStatusExchangeAndersenC5Step6ExpectedValues mCheckAmlStatusExchangeAndersenC5Step6ExpectedValues;
        
        private CheckAmlStatusExchangeBosseC5Step1ExpectedValues mCheckAmlStatusExchangeBosseC5Step1ExpectedValues;
        
        private CheckAmlStatusExchangeBosseC5Step4ExpectedValues mCheckAmlStatusExchangeBosseC5Step4ExpectedValues;
        
        private CheckAmlStatusExchangeBosseC5Step6ExpectedValues mCheckAmlStatusExchangeBosseC5Step6ExpectedValues;
        
        private CheckAmlStatusExchangeCesarC5Step1ExpectedValues mCheckAmlStatusExchangeCesarC5Step1ExpectedValues;
        
        private CheckAmlStatusExtraBosseModayWeek2ExpectedValues mCheckAmlStatusExtraBosseModayWeek2ExpectedValues;
        
        private CheckAmlStatusExtraBosseModayWeek3ExpectedValues mCheckAmlStatusExtraBosseModayWeek3ExpectedValues;
        
        private CheckAmlStatusExtraBosseSundayWeek7ExpectedValues mCheckAmlStatusExtraBosseSundayWeek7ExpectedValues;
        
        private CheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues mCheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues;
        
        private CheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues mCheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues;
        
        private CheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues mCheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues;
        
        private CheckAmlStatusExtraCesarFridayWeek1ExpectedValues mCheckAmlStatusExtraCesarFridayWeek1ExpectedValues;
        
        private CheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues mCheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues;
        
        private CheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues mCheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues;
        
        private CheckAmlStatusExtraCesarSundayWeek1ExpectedValues mCheckAmlStatusExtraCesarSundayWeek1ExpectedValues;
        
        private CheckAmlStatusExtraIngvarC11Step11ExpectedValues mCheckAmlStatusExtraIngvarC11Step11ExpectedValues;
        
        private CheckAmlStatusExtraIngvarC11Step14ExpectedValues mCheckAmlStatusExtraIngvarC11Step14ExpectedValues;
        
        private CheckAmlStatusExtraIngvarC11Step15ExpectedValues mCheckAmlStatusExtraIngvarC11Step15ExpectedValues;
        
        private CheckAmlStatusExtraIngvarC11Step6ExpectedValues mCheckAmlStatusExtraIngvarC11Step6ExpectedValues;
        
        private CheckAmlStatusExtraIngvarC11Step8ExpectedValues mCheckAmlStatusExtraIngvarC11Step8ExpectedValues;
        
        private CheckAmlStatusExtraIngvarC11Step9ExpectedValues mCheckAmlStatusExtraIngvarC11Step9ExpectedValues;
        
        private CheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues mCheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues;
        
        private CheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues mCheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues;
        
        private CheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues mCheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues;
        
        private CheckAmlStatusRemanageBosseWeek5MondayExpectedValues mCheckAmlStatusRemanageBosseWeek5MondayExpectedValues;
        
        private CheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues mCheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues;
        
        private CheckAmlStatusRemanageCesarWeek10FridayExpectedValues mCheckAmlStatusRemanageCesarWeek10FridayExpectedValues;
        
        private CheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues mCheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues;
        
        private CheckAmlStatusRemanageCesarWeek10MondayExpectedValues mCheckAmlStatusRemanageCesarWeek10MondayExpectedValues;
        
        private CheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues mCheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues;
        
        private CheckEkstraShiftsInWarningAbsenceDialogParams mCheckEkstraShiftsInWarningAbsenceDialogParams;
        
        private CheckKeepSelectedDaysplitExpectedValues mCheckKeepSelectedDaysplitExpectedValues;
        
        private CheckUseActiveExchangeDepExcExpectedValues mCheckUseActiveExchangeDepExcExpectedValues;
        
        private ClickEmp1ExchangeParams mClickEmp1ExchangeParams;
        
        private ClickEmp2ExchangeParams mClickEmp2ExchangeParams;
        
        private SetMinBeforeShiftParams mSetMinBeforeShiftParams;
        
        private UIGlobaltoppsettWindow mUIGlobaltoppsettWindow;
        
        private UIForhåndsdefinerteårsWindow mUIForhåndsdefinerteårsWindow;
        
        private UIGatver64339794ASCLAvWindow mUIGatver64339794ASCLAvWindow;
        
        private UIGatver64339794ASCLAvWindow1 mUIGatver64339794ASCLAvWindow1;
        
        private UIItemWindow6 mUIItemWindow;
        
        private UIExcelWindow mUIExcelWindow;
        
        private UIArbeidsplanGrunnlagAWindow mUIArbeidsplanGrunnlagAWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIIverksetteWindow mUIIverksetteWindow;
        
        private UIItemWindow22 mUIItemWindow2;
        
        private UIItemWindow111 mUIItemWindow11;
        
        private UIEndreiverksettingspeWindow mUIEndreiverksettingspeWindow;
        
        private UIGatver64339794ASCLAvWindow2 mUIGatver64339794ASCLAvWindow2;
        
        private UIGatver64339794ASCLAvWindow3 mUIGatver64339794ASCLAvWindow3;
        
        private UIBook1_ASCLxlsCompatiWindow mUIBook1_ASCLxlsCompatiWindow;
        
        private UISaveAsWindow mUISaveAsWindow;
        
        private UIGatver64339794ASCLAvWindow4 mUIGatver64339794ASCLAvWindow4;
        
        private UIItemWindow32 mUIItemWindow3;
        
        private UIItemWindow42 mUIItemWindow4;
        
        private UIGatver64339794ASCLAvWindow5 mUIGatver64339794ASCLAvWindow5;
        
        private UIBook1ExcelWindow mUIBook1ExcelWindow;
        
        private UIItemWindow52 mUIItemWindow5;
        
        private UIItemWindow61 mUIItemWindow6;
        
        private UISletteforskyvningeroWindow mUISletteforskyvningeroWindow;
        
        private UIGatver64339794ASCLAvWindow6 mUIGatver64339794ASCLAvWindow6;
        
        private UIForskyvningWindow mUIForskyvningWindow;
        
        private UIItemWindow71 mUIItemWindow7;
        
        private UIEndrevakterWindow mUIEndrevakterWindow;
        
        private UIBytteWindow mUIBytteWindow;
        
        private UIRekalkuleringWindow mUIRekalkuleringWindow;
        
        private UIByttemedavdelingWindow mUIByttemedavdelingWindow;
        
        private UIVacantShiftsFormWindow mUIVacantShiftsFormWindow;
        
        private UIUtrykningWindow mUIUtrykningWindow;
        
        private UIGatver64339794ASCLAvWindow7 mUIGatver64339794ASCLAvWindow7;
        
        private UIAMLavtaleWindow mUIAMLavtaleWindow;
        
        private UIAnsattfilterWindow mUIAnsattfilterWindow;
        
        private UIGatver64339794ASCLAvWindow8 mUIGatver64339794ASCLAvWindow8;
        
        private UIAMLavtaleWindow1 mUIAMLavtaleWindow1;
        
        private UIVelgavdelingWindow mUIVelgavdelingWindow;
        
        private UIGatver64339794ASCLAvWindow9 mUIGatver64339794ASCLAvWindow9;
        
        private UIStillingsforholdWindow mUIStillingsforholdWindow;
        
        private UIItemWindow81 mUIItemWindow8;
        
        private UIGatver64339794ASCLAvWindow10 mUIGatver64339794ASCLAvWindow10;
        
        private UIGatver64339794ASCLAvWindow11 mUIGatver64339794ASCLAvWindow11;
        
        private UIDøgnogukeskilleWindow mUIDøgnogukeskilleWindow;
        
        private UIOppsettforAMLkalkuleWindow mUIOppsettforAMLkalkuleWindow;
        
        private UIInternetInformationSWindow mUIInternetInformationSWindow;
        
        private UIItemWindow91 mUIItemWindow9;
        
        private UIGatWebserviceMainPagWindow mUIGatWebserviceMainPagWindow;
        
        private UIMertidövertidWindow mUIMertidövertidWindow;
        
        private UIGatver64440754GATSOFWindow1 mUIGatver64440754GATSOFWindow1;
        
        private UIGatver64440754GATSOFWindow2 mUIGatver64440754GATSOFWindow2;
        
        private UIArbeidsplanATLtest1PWindow mUIArbeidsplanATLtest1PWindow;
        
        private UIAnställdaiArbeidsplaWindow mUIAnställdaiArbeidsplaWindow;
        
        private UILäggtillanställdaWindow mUILäggtillanställdaWindow;
        
        private UIArbeidsplanATLtest1RWindow1 mUIArbeidsplanATLtest1RWindow1;
        
        private UIGT4003InformationWindow mUIGT4003InformationWindow;
        
        private UIGatver64440754GATSOFWindow3 mUIGatver64440754GATSOFWindow3;
        
        private UISammenligningavkompeWindow mUISammenligningavkompeWindow;
        
        private UIGatver65041545ASCLAvWindow mUIGatver65041545ASCLAvWindow;
        
        private UINyAMLdispensasjonWindow mUINyAMLdispensasjonWindow;
        
        private UIArbeidsplanATLtest1PWindow1 mUIArbeidsplanATLtest1PWindow1;
        
        private UIAnställdaiarbetsplanWindow mUIAnställdaiarbetsplanWindow;
        
        private UIGatver65142408ASCLAvWindow mUIGatver65142408ASCLAvWindow;
        
        private UIGatver66043686ASCLAvWindow mUIGatver66043686ASCLAvWindow;
        
        private UIGatver66043686ASCLAvWindow1 mUIGatver66043686ASCLAvWindow1;
        
        private UIGatver66043686ASCLAvWindow2 mUIGatver66043686ASCLAvWindow2;
        
        private UIGatver201720GATSOFTAWindow mUIGatver201720GATSOFTAWindow;
        
        private UIGatver201720GATSOFTAWindow1 mUIGatver201720GATSOFTAWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddCauseCodeStorArbeidsmengde'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddCauseCodeStorArbeidsmengdeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'MENGDE' in text box
        /// </summary>
        public string UIItemEditText = "MENGDE";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Stor arbeidsmengde' in text box
        /// </summary>
        public string UIItemEditText1 = "Stor arbeidsmengde";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '3' in text box
        /// </summary>
        public string UIItemEditText2 = "3";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys2 = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AmLAgrementDataC9_S3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AmLAgrementDataC9_S3Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'System.Double' in 'sdeWeaHoursPerWeek' text box
        /// </summary>
        public string UISdeWeaHoursPerWeekEditValueTypeName = "System.Double";
        
        /// <summary>
        /// Type '5' in 'sdeWeaHoursPerWeek' text box
        /// </summary>
        public string UISdeWeaHoursPerWeekEditValueAsString = "5";
        
        /// <summary>
        /// Type '{Tab}' in 'sdeWeaHoursPerWeek' text box
        /// </summary>
        public string UISdeWeaHoursPerWeekEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAllNoneCheckBoxReport77Swe'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAllNoneCheckBoxReport77SweParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Välj alla/ingen:' check box
        /// </summary>
        public bool UIVäljallaingenCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlAgreementsPrio'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlAgreementsPrioExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '10' cell equals '10'
        /// </summary>
        public string UIItem10CellValueAsString = "10";
        
        /// <summary>
        /// Verify that the 'ClassName' property of 'AML DNLF 38' cell equals 'GridControlCell'
        /// </summary>
        public string UIAMLDNLF38CellClassName = "GridControlCell";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Turnus 35,5' cell equals 'Turnus 35,5'
        /// </summary>
        public string UITurnus355CellValueAsString = "Turnus 35,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '1' cell equals '1'
        /// </summary>
        public string UIItem1CellValueAsString = "1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlSettings'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlSettingsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItem' property of combo box equals 'Variabel pott'
        /// </summary>
        public string UIItemComboBoxSelectedItem = "Variabel pott";
        
        /// <summary>
        /// Verify that the 'Selected' property of 'Juster døgnskille til vaktens start for vakter som...' radio button equals 'False'
        /// </summary>
        public bool UIJusterdøgnskilletilvRadioButtonSelected = false;
        
        /// <summary>
        /// Verify that the 'Selected' property of 'Bruk originalvakt som grunnlag for arbeidstid ved ...' radio button equals 'False'
        /// </summary>
        public bool UIBrukoriginalvaktsomgRadioButtonSelected = false;
        
        /// <summary>
        /// Verify that the 'Selected' property of 'Bruk originalvakt som grunnlag for arbeidstid ved ...' radio button equals 'False'
        /// </summary>
        public bool UIBrukoriginalvaktsomgRadioButtonSelected1 = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusCalloutGareC7Step1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusCalloutGareC7Step1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Samlet dag (14,00/13,00)'
        /// </summary>
        public string UISamletdag14001300CellValueAsString = "Samlet dag (14,00/13,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/11,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600CellValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusCalloutGareC7Step10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusCalloutGareC7Step10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Samlet dag (13,50/13,00)'
        /// </summary>
        public string UISamletdag14001300CellValueAsString = "Samlet dag (13,50/13,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusCalloutGareC7Step10_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusCalloutGareC7Step10_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Samlet dag (14,00/13,00)'
        /// </summary>
        public string UISamletdag14001300CellValueAsString = "Samlet dag (14,00/13,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/11,00)' cell equals 'Arbeidsfri før vakt (3,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600CellValueAsString = "Arbeidsfri før vakt (3,00/9,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600Cell1ValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600Cell2ValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusCalloutGareC7Step3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusCalloutGareC7Step3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UISamletdag14001300CellValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusCalloutGareC7Step4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusCalloutGareC7Step4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Samlet dag (14,00/13,00)'
        /// </summary>
        public string UISamletdag14001300CellValueAsString = "Samlet dag (14,00/13,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/11,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600CellValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600Cell1ValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600Cell2ValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusCalloutGareC7Step4_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusCalloutGareC7Step4_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'AML uke (14,00/10,00)'
        /// </summary>
        public string UISamletdag14001300CellValueAsString = "AML uke (14,00/10,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/11,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600CellValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600Cell1ValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Arbeidsfri før vakt (6,00/9,00)' cell equals 'Arbeidsfri før vakt (6,00/9,00)'
        /// </summary>
        public string UIArbeidsfriførvakt600Cell2ValueAsString = "Arbeidsfri før vakt (6,00/9,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusCalloutGareC7Step5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusCalloutGareC7Step5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'Arbeidsfri før vakt (8,98/9,00)'
        /// </summary>
        public string UISamletdag14001300CellValueAsString = "Arbeidsfri før vakt (8,98/9,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusCalloutGareC7Step8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusCalloutGareC7Step8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'AML uke (13,50/10,00)'
        /// </summary>
        public string UISamletdag14001300CellValueAsString = "AML uke (13,50/10,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusCalloutGareC7Step9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusCalloutGareC7Step9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (14,00/13,00)' cell equals 'AML uke (14,25/10,00)'
        /// </summary>
        public string UISamletdag14001300CellValueAsString = "AML uke (14,25/10,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusDepartmentExchangeAndersenC6Step3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusDepartmentExchangeAndersenC6Step3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Søndager (2,00/2,00)'
        /// </summary>
        public string UISøndager200200CellValueAsString = "Søndager (2,00/2,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet uke (snitt) (48,12/48,00)' cell equals 'Samlet uke (snitt) (48,12/48,00)'
        /// </summary>
        public string UISamletukesnitt481248CellValueAsString = "Samlet uke (snitt) (48,12/48,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExchangeAndersenC5Step6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExchangeAndersenC5Step6ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
        /// </summary>
        public string UIUkentligarbeidsfri32CellValueAsString = "Ukentlig arbeidsfri (32,00/35,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Søndager (2,00/2,00)'
        /// </summary>
        public string UISøndager200200CellValueAsString = "Søndager (2,00/2,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Planlagt uke (56,00/54,00)' cell equals 'Planlagt uke (56,00/54,00)'
        /// </summary>
        public string UIPlanlagtuke56005400CellValueAsString = "Planlagt uke (56,00/54,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExchangeBosseC5Step1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExchangeBosseC5Step1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
        /// </summary>
        public string UIUkentligarbeidsfri32CellValueAsString = "Ukentlig arbeidsfri (32,00/35,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Planlagt uke (50,00/48,00)'
        /// </summary>
        public string UIPlanlagtuke50004800CellValueAsString = "Planlagt uke (50,00/48,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExchangeBosseC5Step4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExchangeBosseC5Step4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Samlet dag (16,00/13,00)'
        /// </summary>
        public string UISøndager200200CellValueAsString = "Samlet dag (16,00/13,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExchangeBosseC5Step6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExchangeBosseC5Step6ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
        /// </summary>
        public string UIUkentligarbeidsfri32CellValueAsString = "Ukentlig arbeidsfri (32,00/35,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Planlagt uke (58,00/48,00)' cell equals 'Planlagt uke (58,00/48,00)'
        /// </summary>
        public string UIPlanlagtuke58004800CellValueAsString = "Planlagt uke (58,00/48,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExchangeCesarC5Step1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExchangeCesarC5Step1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Søndager (2,00/2,00)'
        /// </summary>
        public string UISøndager200200CellValueAsString = "Søndager (2,00/2,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraBosseModayWeek2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraBosseModayWeek2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (16,00/13,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "Samlet dag (16,00/13,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraBosseModayWeek3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraBosseModayWeek3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (16,00/14,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "Samlet dag (16,00/14,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraBosseSundayWeek7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraBosseSundayWeek7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Søndager (2,00/2,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "Søndager (2,00/2,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraBosseTuesdayWeek11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraBosseTuesdayWeek11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (18,00/13,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "Samlet dag (18,00/13,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraBosseTuesdayWeek6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraBosseTuesdayWeek6ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (17,00/16,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "Samlet dag (17,00/16,00)";
        
        /// <summary>
        /// Verify that the 'ClassName' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'GridControlCell'
        /// </summary>
        public string UIUkentligarbeidsfri33CellClassName = "GridControlCell";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraBosseTuesdayWeek8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraBosseTuesdayWeek8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (16,33/14,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "Samlet dag (16,33/14,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraCesarFridayWeek1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraCesarFridayWeek1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Samlet dag (16,00/13,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "Samlet dag (16,00/13,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraCesarSaturdayWeek1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraCesarSaturdayWeek1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'AML uke (13,50/10,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "AML uke (13,50/10,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'Ukentlig arbeidsfri (33,00/35,00)'
        /// </summary>
        public string UIUkentligarbeidsfri33CellValueAsString = "Ukentlig arbeidsfri (33,00/35,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraCesarSaturdayWeek3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraCesarSaturdayWeek3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "Ukentlig arbeidsfri (32,00/35,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'Søndager (2,00/2,00)'
        /// </summary>
        public string UIUkentligarbeidsfri33CellValueAsString = "Søndager (2,00/2,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'AML 4 uker (27,00/25,00)'
        /// </summary>
        public string UISøndager200200CellValueAsString = "AML 4 uker (27,00/25,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraCesarSundayWeek1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraCesarSundayWeek1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Samlet dag (16,00/13,00)' cell equals 'AML uke (21,50/10,00)'
        /// </summary>
        public string UISamletdag16001300CellValueAsString = "AML uke (21,50/10,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'Ukentlig arbeidsfri (31,00/35,00)'
        /// </summary>
        public string UIUkentligarbeidsfri33CellValueAsString = "Ukentlig arbeidsfri (31,00/35,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Søndager (2,00/2,00)' cell equals 'Søndager (2,00/2,00)'
        /// </summary>
        public string UISøndager200200CellValueAsString = "Søndager (2,00/2,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraIngvarC11Step11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraIngvarC11Step11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'lnkDetail[0]' PopupEdit contains 'Inget brott'
        /// </summary>
        public string UILnkDetail0PopupEditValueAsString = "Inget brott";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraIngvarC11Step14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraIngvarC11Step14ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Dygnsvila (9,00/11,00)'
        /// </summary>
        public string UIVeckovila16003600CellValueAsString = "Dygnsvila (9,00/11,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraIngvarC11Step15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraIngvarC11Step15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Samlat vecka (snitt) (43,20/43,00)'
        /// </summary>
        public string UIVeckovila16003600CellValueAsString = "Samlat vecka (snitt) (43,20/43,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'ATL 4 veckor (22,00/20,00)' cell equals 'Veckovila (16,00/36,00)'
        /// </summary>
        public string UIATL4veckor22002000CellValueAsString = "Veckovila (16,00/36,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Dygnsvila (snitt) (12,90/13,00)' cell equals 'ATL 4 veckor (32,00/20,00)'
        /// </summary>
        public string UIDygnsvilasnitt129013CellValueAsString = "ATL 4 veckor (32,00/20,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraIngvarC11Step6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraIngvarC11Step6ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'ATL 4 veckor (22,00/20,00)' cell equals 'ATL 4 veckor (22,00/20,00)'
        /// </summary>
        public string UIATL4veckor22002000CellValueAsString = "ATL 4 veckor (22,00/20,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraIngvarC11Step8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraIngvarC11Step8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Samlat vecka (snitt) (43,80/43,00)'
        /// </summary>
        public string UIVeckovila16003600CellValueAsString = "Samlat vecka (snitt) (43,80/43,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'ATL 4 veckor (22,00/20,00)' cell equals 'Veckovila (24,00/36,00)'
        /// </summary>
        public string UIATL4veckor22002000CellValueAsString = "Veckovila (24,00/36,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Dygnsvila (snitt) (12,90/13,00)' cell equals 'Dygnsvila (snitt) (12,90/13,00)'
        /// </summary>
        public string UIDygnsvilasnitt129013CellValueAsString = "Dygnsvila (snitt) (12,90/13,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'ATL 4 veckor (57,00/20,00)' cell equals 'ATL 4 veckor (57,00/20,00)'
        /// </summary>
        public string UIATL4veckor57002000CellValueAsString = "ATL 4 veckor (57,00/20,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraIngvarC11Step9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraIngvarC11Step9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Dygnsvila (8,00/9,00)'
        /// </summary>
        public string UIVeckovila16003600CellValueAsString = "Dygnsvila (8,00/9,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraIngvarSundayC11Step4_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraIngvarSundayC11Step4_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Veckovila (16,00/36,00)' cell equals 'Veckovila (16,00/36,00)'
        /// </summary>
        public string UIVeckovila16003600CellValueAsString = "Veckovila (16,00/36,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '2016-10-17 07:00' cell equals '10/17/2016 07:00:00'
        /// </summary>
        public string UIItem201610170700CellValueAsString = "10/17/2016 07:00:00";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '2016-10-24 07:00' cell equals '10/24/2016 07:00:00'
        /// </summary>
        public string UIItem201610240700CellValueAsString = "10/24/2016 07:00:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraTeslaTuesdayWeek2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraTeslaTuesdayWeek2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Samlet uke' cell equals 'AML uke (5,02/5,00)'
        /// </summary>
        public string UISamletuke502500CellText = "AML uke (5,02/5,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusExtraTeslaTuesdayWeek8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusExtraTeslaTuesdayWeek8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (33,00/35,00)' cell equals 'Samlet uke (snitt) (51,63/51,00)'
        /// </summary>
        public string UIUkentligarbeidsfri33CellValueAsString = "Samlet uke (snitt) (51,63/51,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusRemanageBosseWeek5Monday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusRemanageBosseWeek5MondayExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
        /// </summary>
        public string UIUkentligarbeidsfri32CellValueAsString = "Ukentlig arbeidsfri (32,00/35,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Planlagt uke (50,00/48,00)'
        /// </summary>
        public string UIPlanlagtuke50004800CellValueAsString = "Planlagt uke (50,00/48,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusRemanageBosseWeek5Tuesday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusRemanageBosseWeek5TuesdayExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Samlet dag (15,00/13,00)'
        /// </summary>
        public string UIUkentligarbeidsfri32CellValueAsString = "Samlet dag (15,00/13,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Ukentlig arbeidsfri (30,00/35,00)'
        /// </summary>
        public string UIPlanlagtuke50004800CellValueAsString = "Ukentlig arbeidsfri (30,00/35,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Planlagt uke (60,00/48,00)' cell equals 'Planlagt uke (60,00/48,00)'
        /// </summary>
        public string UIPlanlagtuke60004800CellValueAsString = "Planlagt uke (60,00/48,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusRemanageCesarWeek10Friday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusRemanageCesarWeek10FridayExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Planlagt uke (50,00/48,00)'
        /// </summary>
        public string UIUkentligarbeidsfri32CellValueAsString = "Planlagt uke (50,00/48,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusRemanageCesarWeek10FridayDSH'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusRemanageCesarWeek10FridayDSHExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Samlet dag (15,00/13,00)'
        /// </summary>
        public string UIUkentligarbeidsfri32CellValueAsString = "Samlet dag (15,00/13,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Ukentlig arbeidsfri (25,00/35,00)'
        /// </summary>
        public string UIPlanlagtuke50004800CellValueAsString = "Ukentlig arbeidsfri (25,00/35,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Planlagt uke (60,00/48,00)' cell equals 'Planlagt uke (64,00/48,00)'
        /// </summary>
        public string UIPlanlagtuke60004800CellValueAsString = "Planlagt uke (64,00/48,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusRemanageCesarWeek10Monday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusRemanageCesarWeek10MondayExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Planlagt uke (58,00/48,00)'
        /// </summary>
        public string UIUkentligarbeidsfri32CellValueAsString = "Planlagt uke (58,00/48,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlStatusRemanageCesarWeek10Saturday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAmlStatusRemanageCesarWeek10SaturdayExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ukentlig arbeidsfri (32,00/35,00)' cell equals 'Ukentlig arbeidsfri (32,00/35,00)'
        /// </summary>
        public string UIUkentligarbeidsfri32CellValueAsString = "Ukentlig arbeidsfri (32,00/35,00)";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Planlagt uke (50,00/48,00)' cell equals 'Søndager (2,00/2,00)'
        /// </summary>
        public string UIPlanlagtuke50004800CellValueAsString = "Søndager (2,00/2,00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEkstraShiftsInWarningAbsenceDialog'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckEkstraShiftsInWarningAbsenceDialogParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'True' in 'Node0' TreeListNode
        /// </summary>
        public bool UINode0TreeListNodeChecked = true;
        
        /// <summary>
        /// Type 'True' in 'Node1' TreeListNode
        /// </summary>
        public bool UINode1TreeListNodeChecked = true;
        
        /// <summary>
        /// Type 'False' in 'Node0' TreeListNode
        /// </summary>
        public bool UINode0TreeListNodeChecked1 = false;
        
        /// <summary>
        /// Type 'False' in 'Node1' TreeListNode
        /// </summary>
        public bool UINode1TreeListNodeChecked1 = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckKeepSelectedDaysplit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckKeepSelectedDaysplitExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Selected' property of 'Behold valgt døgnskille og splitt timer per døgn f...' radio button equals 'False'
        /// </summary>
        public bool UIBeholdvalgtdøgnskillRadioButtonSelected = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckUseActiveExchangeDepExc'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckUseActiveExchangeDepExcExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Selected' property of 'Bruk aktivvakt som grunnlag for arbeidstid ved byt...' radio button equals 'True'
        /// </summary>
        public bool UIBrukaktivvaktsomgrunRadioButtonSelected = true;
        
        /// <summary>
        /// Verify that the 'Selected' property of 'Bruk aktivvakt som grunnlag for arbeidstid ved avd...' radio button equals 'True'
        /// </summary>
        public bool UIBrukaktivvaktsomgrunRadioButtonSelected1 = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickEmp1Exchange'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ClickEmp1ExchangeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment' in 'sleEmployment1' LookUpEdit
        /// </summary>
        public string UISleEmployment1LookUpEditValueTypeName = "Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment' in 'sleEmployment1' LookUpEdit
        /// </summary>
        public string UISleEmployment1LookUpEditValueAsString = "Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickEmp2Exchange'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ClickEmp2ExchangeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment' in 'sleEmployment2' LookUpEdit
        /// </summary>
        public string UISleEmployment2LookUpEditValueTypeName = "Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment' in 'sleEmployment2' LookUpEdit
        /// </summary>
        public string UISleEmployment2LookUpEditValueAsString = "Gatsoft.Gat.BusinessLogic.Exchange.DataStructure.Employment";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetMinBeforeShift'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetMinBeforeShiftParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'System.Double' in 'sdeMinFreeBeforeShift' text box
        /// </summary>
        public string UISdeMinFreeBeforeShifEditValueTypeName = "System.Double";
        
        /// <summary>
        /// Type '9' in 'sdeMinFreeBeforeShift' text box
        /// </summary>
        public string UISdeMinFreeBeforeShifEditValueAsString = "9";
        
        /// <summary>
        /// Type '{Tab}' in 'sdeMinFreeBeforeShift' text box
        /// </summary>
        public string UISdeMinFreeBeforeShifEditSendKeys = "{Tab}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGlobaltoppsettWindow : WinWindow
    {
        
        public UIGlobaltoppsettWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Globalt oppsett";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmSetup";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UITsWeaNewClient UITsWeaNewClient
        {
            get
            {
                if ((this.mUITsWeaNewClient == null))
                {
                    this.mUITsWeaNewClient = new UITsWeaNewClient(this);
                }
                return this.mUITsWeaNewClient;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIDøgnskilleClient UIDøgnskilleClient
        {
            get
            {
                if ((this.mUIDøgnskilleClient == null))
                {
                    this.mUIDøgnskilleClient = new UIDøgnskilleClient(this);
                }
                return this.mUIDøgnskilleClient;
            }
        }
        
        public UIBytteClient UIBytteClient
        {
            get
            {
                if ((this.mUIBytteClient == null))
                {
                    this.mUIBytteClient = new UIBytteClient(this);
                }
                return this.mUIBytteClient;
            }
        }
        
        public UIZUP_WEA_ORIGINAL_DEPClient UIZUP_WEA_ORIGINAL_DEPClient
        {
            get
            {
                if ((this.mUIZUP_WEA_ORIGINAL_DEPClient == null))
                {
                    this.mUIZUP_WEA_ORIGINAL_DEPClient = new UIZUP_WEA_ORIGINAL_DEPClient(this);
                }
                return this.mUIZUP_WEA_ORIGINAL_DEPClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UITsWeaNewClient mUITsWeaNewClient;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIDøgnskilleClient mUIDøgnskilleClient;
        
        private UIBytteClient mUIBytteClient;
        
        private UIZUP_WEA_ORIGINAL_DEPClient mUIZUP_WEA_ORIGINAL_DEPClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxTreeList";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIGlobaltoppsettClient
        {
            get
            {
                if ((this.mUIGlobaltoppsettClient == null))
                {
                    this.mUIGlobaltoppsettClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGlobaltoppsettClient.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIGlobaltoppsettClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGlobaltoppsettClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSStaticCombo";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITsWeaNewClient : WinClient
    {
        
        public UITsWeaNewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "tsWeaNew";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIJusterdøgnskilleslikCheckBox
        {
            get
            {
                if ((this.mUIJusterdøgnskilleslikCheckBox == null))
                {
                    this.mUIJusterdøgnskilleslikCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIJusterdøgnskilleslikCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Juster døgnskille, slik at sammenhengende perioder kommer på samme døgn.";
                    this.mUIJusterdøgnskilleslikCheckBox.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIJusterdøgnskilleslikCheckBox;
            }
        }
        
        public WinCheckBox UIBrukorginalvaktsomgrCheckBox
        {
            get
            {
                if ((this.mUIBrukorginalvaktsomgrCheckBox == null))
                {
                    this.mUIBrukorginalvaktsomgrCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIBrukorginalvaktsomgrCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Bruk orginalvakt som grunnlag ved bytte";
                    this.mUIBrukorginalvaktsomgrCheckBox.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIBrukorginalvaktsomgrCheckBox;
            }
        }
        
        public WinCheckBox UIBrukorginalvaktsomgrCheckBox1
        {
            get
            {
                if ((this.mUIBrukorginalvaktsomgrCheckBox1 == null))
                {
                    this.mUIBrukorginalvaktsomgrCheckBox1 = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIBrukorginalvaktsomgrCheckBox1.SearchProperties[WinCheckBox.PropertyNames.Name] = "Bruk orginalvakt som grunnlag ved avdelingsbytte";
                    this.mUIBrukorginalvaktsomgrCheckBox1.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIBrukorginalvaktsomgrCheckBox1;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIJusterdøgnskilleslikCheckBox;
        
        private WinCheckBox mUIBrukorginalvaktsomgrCheckBox;
        
        private WinCheckBox mUIBrukorginalvaktsomgrCheckBox1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public UIGlobaltoppsettClient UIGlobaltoppsettClient
        {
            get
            {
                if ((this.mUIGlobaltoppsettClient == null))
                {
                    this.mUIGlobaltoppsettClient = new UIGlobaltoppsettClient(this);
                }
                return this.mUIGlobaltoppsettClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGlobaltoppsettClient mUIGlobaltoppsettClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGlobaltoppsettClient : WinClient
    {
        
        public UIGlobaltoppsettClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[WinButton.PropertyNames.Name] = "Avbryt";
                    this.mUIAvbrytButton.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public WinButton UILagreButton
        {
            get
            {
                if ((this.mUILagreButton == null))
                {
                    this.mUILagreButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILagreButton.SearchProperties[WinButton.PropertyNames.Name] = "Lagre";
                    this.mUILagreButton.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUILagreButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAvbrytButton;
        
        private WinButton mUILagreButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSStaticCombo";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDøgnskilleClient : WinClient
    {
        
        public UIDøgnskilleClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Døgnskille";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIJusterdøgnskilletilvRadioButton
        {
            get
            {
                if ((this.mUIJusterdøgnskilletilvRadioButton == null))
                {
                    this.mUIJusterdøgnskilletilvRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIJusterdøgnskilletilvRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Juster døgnskille til vaktens start for vakter som går over døgnskille, slik at s" +
                        "ammenhengende perioder kommer på samme døgn.";
                    this.mUIJusterdøgnskilletilvRadioButton.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIJusterdøgnskilletilvRadioButton;
            }
        }
        
        public WinRadioButton UIBeholdvalgtdøgnskillRadioButton
        {
            get
            {
                if ((this.mUIBeholdvalgtdøgnskillRadioButton == null))
                {
                    this.mUIBeholdvalgtdøgnskillRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIBeholdvalgtdøgnskillRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Behold valgt døgnskille og splitt timer per døgn for vakter som går over døgnskil" +
                        "le. ";
                    this.mUIBeholdvalgtdøgnskillRadioButton.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIBeholdvalgtdøgnskillRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIJusterdøgnskilletilvRadioButton;
        
        private WinRadioButton mUIBeholdvalgtdøgnskillRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBytteClient : WinClient
    {
        
        public UIBytteClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Bytte";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIBrukoriginalvaktsomgRadioButton
        {
            get
            {
                if ((this.mUIBrukoriginalvaktsomgRadioButton == null))
                {
                    this.mUIBrukoriginalvaktsomgRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIBrukoriginalvaktsomgRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Bruk originalvakt som grunnlag for arbeidstid ved bytte";
                    this.mUIBrukoriginalvaktsomgRadioButton.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIBrukoriginalvaktsomgRadioButton;
            }
        }
        
        public WinRadioButton UIBrukaktivvaktsomgrunRadioButton
        {
            get
            {
                if ((this.mUIBrukaktivvaktsomgrunRadioButton == null))
                {
                    this.mUIBrukaktivvaktsomgrunRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIBrukaktivvaktsomgrunRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Bruk aktivvakt som grunnlag for arbeidstid ved bytte (anbefalt)";
                    this.mUIBrukaktivvaktsomgrunRadioButton.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIBrukaktivvaktsomgrunRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIBrukoriginalvaktsomgRadioButton;
        
        private WinRadioButton mUIBrukaktivvaktsomgrunRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIZUP_WEA_ORIGINAL_DEPClient : WinClient
    {
        
        public UIZUP_WEA_ORIGINAL_DEPClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "ZUP_WEA_ORIGINAL_DEP_EXC";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIBrukoriginalvaktsomgRadioButton
        {
            get
            {
                if ((this.mUIBrukoriginalvaktsomgRadioButton == null))
                {
                    this.mUIBrukoriginalvaktsomgRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIBrukoriginalvaktsomgRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Bruk originalvakt som grunnlag for arbeidstid ved avdelingsbytte";
                    this.mUIBrukoriginalvaktsomgRadioButton.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIBrukoriginalvaktsomgRadioButton;
            }
        }
        
        public WinRadioButton UIBrukaktivvaktsomgrunRadioButton
        {
            get
            {
                if ((this.mUIBrukaktivvaktsomgrunRadioButton == null))
                {
                    this.mUIBrukaktivvaktsomgrunRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIBrukaktivvaktsomgrunRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Bruk aktivvakt som grunnlag for arbeidstid ved avdelingsbytte (anbefalt)";
                    this.mUIBrukaktivvaktsomgrunRadioButton.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIBrukaktivvaktsomgrunRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIBrukoriginalvaktsomgRadioButton;
        
        private WinRadioButton mUIBrukaktivvaktsomgrunRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIForhåndsdefinerteårsWindow : WinWindow
    {
        
        public UIForhåndsdefinerteårsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Forhåndsdefinerte årsakskoder for AML-brudd";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmRegEdit";
            this.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
            #endregion
        }
        
        #region Properties
        public UIForhåndsdefinerteårsClient UIForhåndsdefinerteårsClient
        {
            get
            {
                if ((this.mUIForhåndsdefinerteårsClient == null))
                {
                    this.mUIForhåndsdefinerteårsClient = new UIForhåndsdefinerteårsClient(this);
                }
                return this.mUIForhåndsdefinerteårsClient;
            }
        }
        
        public UIVAKANSWindow UIVAKANSWindow
        {
            get
            {
                if ((this.mUIVAKANSWindow == null))
                {
                    this.mUIVAKANSWindow = new UIVAKANSWindow(this);
                }
                return this.mUIVAKANSWindow;
            }
        }
        
        public UIVakansWindow1 UIVakansWindow1
        {
            get
            {
                if ((this.mUIVakansWindow1 == null))
                {
                    this.mUIVakansWindow1 = new UIVakansWindow1(this);
                }
                return this.mUIVakansWindow1;
            }
        }
        
        public UIItem2Window UIItem2Window
        {
            get
            {
                if ((this.mUIItem2Window == null))
                {
                    this.mUIItem2Window = new UIItem2Window(this);
                }
                return this.mUIItem2Window;
            }
        }
        
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIItemClient1 UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new UIItemClient1(this);
                }
                return this.mUIItemClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIForhåndsdefinerteårsClient mUIForhåndsdefinerteårsClient;
        
        private UIVAKANSWindow mUIVAKANSWindow;
        
        private UIVakansWindow1 mUIVakansWindow1;
        
        private UIItem2Window mUIItem2Window;
        
        private UIItemClient mUIItemClient;
        
        private UIItemClient1 mUIItemClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIForhåndsdefinerteårsClient : WinClient
    {
        
        public UIForhåndsdefinerteårsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Forhåndsdefinerte årsakskoder for AML-brudd";
            this.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVAKANSWindow : WinWindow
    {
        
        public UIVAKANSWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "VAKANS";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVakansWindow1 : WinWindow
    {
        
        public UIVakansWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Vakans";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItem2Window : WinWindow
    {
        
        public UIItem2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "2";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemClient1 : WinClient
    {
        
        public UIItemClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient.WindowTitles.Add("Forhåndsdefinerte årsakskoder for AML-brudd");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow4 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Administrasjon");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64339794ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvClient == null))
                {
                    this.mUIGatver64339794ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64339794ASCLAvClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Administrasjon");
                    this.mUIGatver64339794ASCLAvClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGatver64339794ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64339794ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow5 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow5(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIPcMainPanelClient UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow5 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIPcMainPanelClient mUIPcMainPanelClient;
        
        private UIItemWindow21 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 31.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                            "  (Vaktbokdato: 31.08.2016)");
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 31.08.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64339794ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvClient == null))
                {
                    this.mUIGatver64339794ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64339794ASCLAvClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                            "  (Vaktbokdato: 31.08.2016)");
                    this.mUIGatver64339794ASCLAvClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGatver64339794ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64339794ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcMainPanelClient : DXTestControl
    {
        
        public UIPcMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 31.08.2016)");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcPanListsTabList : DXTestControl
    {
        
        public UITcPanListsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 31.08.2016)");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpRosterPlanListClient : DXTestControl
    {
        
        public UITpRosterPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 31.08.2016)");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlGridClient : DXTestControl
    {
        
        public UIPnlGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 31.08.2016)");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlansTable UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlansTable mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlansTable : DXGrid
    {
        
        public UIGcRosterPlansTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 31.08.2016)");
            #endregion
        }
        
        #region Properties
        public DXCell UIGrunnlagAMLTEST1Cell
        {
            get
            {
                if ((this.mUIGrunnlagAMLTEST1Cell == null))
                {
                    this.mUIGrunnlagAMLTEST1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGrunnlagAMLTEST1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]0[Column]gcolPlan";
                    this.mUIGrunnlagAMLTEST1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGrunnlagAMLTEST1Cell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                            "  (Vaktbokdato: 31.08.2016)");
                    #endregion
                }
                return this.mUIGrunnlagAMLTEST1Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGrunnlagAMLTEST1Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 31.08.2016)");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                            "  (Vaktbokdato: 31.08.2016)");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIItemMenuItem
        {
            get
            {
                if ((this.mUIItemMenuItem == null))
                {
                    this.mUIItemMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIItemMenuItem.SearchProperties[WinMenuItem.PropertyNames.Instance] = "2";
                    #endregion
                }
                return this.mUIItemMenuItem;
            }
        }
        
        public WinMenuItem UIItemMenuItem1
        {
            get
            {
                if ((this.mUIItemMenuItem1 == null))
                {
                    this.mUIItemMenuItem1 = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIItemMenuItem1.SearchProperties[WinMenuItem.PropertyNames.Instance] = "6";
                    #endregion
                }
                return this.mUIItemMenuItem1;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIItemMenuItem;
        
        private WinMenuItem mUIItemMenuItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIExcelWindow : WinWindow
    {
        
        public UIExcelWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Excel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public UIDetailsPanePane UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsPanePane mUIDetailsPanePane;
        
        private UISaveWindow mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDetailsPanePane : WinPane
    {
        
        public UIDetailsPanePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Excel");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Excel");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanGrunnlagAWindow : DXWindow
    {
        
        public UIArbeidsplanGrunnlagAWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Grunnlag AML-TEST 1. (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Grunnlag AML-TEST 1. (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGrpEffectuateRevolviRibbonPageGroup UIGrpEffectuateRevolviRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateRevolviRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateRevolviRibbonPageGroup = new UIGrpEffectuateRevolviRibbonPageGroup(this);
                }
                return this.mUIGrpEffectuateRevolviRibbonPageGroup;
            }
        }
        
        public UIRibbonPageGroup17RibbonPageGroup UIRibbonPageGroup17RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup17RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup17RibbonPageGroup = new UIRibbonPageGroup17RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup17RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEffectuateRevolviRibbonPageGroup mUIGrpEffectuateRevolviRibbonPageGroup;
        
        private UIRibbonPageGroup17RibbonPageGroup mUIRibbonPageGroup17RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEffectuateRevolviRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateRevolviRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Grunnlag AML-TEST 1. (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPageGroup17RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup17RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup17";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Grunnlag AML-TEST 1. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBtnCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Grunnlag AML-TEST 1. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIBtnCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Grunnlag AML-TEST 1. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan: Grunnlag AML-TEST 1. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UISubMenuBarControlMenu UISubMenuBarControlMenu
        {
            get
            {
                if ((this.mUISubMenuBarControlMenu == null))
                {
                    this.mUISubMenuBarControlMenu = new UISubMenuBarControlMenu(this);
                }
                return this.mUISubMenuBarControlMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UISubMenuBarControlMenu mUISubMenuBarControlMenu;
        
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISubMenuBarControlMenu : DXMenu
    {
        
        public UISubMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SubMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SubMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuEditItem UIIverksetttilMenuEditItem
        {
            get
            {
                if ((this.mUIIverksetttilMenuEditItem == null))
                {
                    this.mUIIverksetttilMenuEditItem = new DXMenuEditItem(this);
                    #region Search Criteria
                    this.mUIIverksetttilMenuEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuateToRevolving";
                    this.mUIIverksetttilMenuEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuEditItem";
                    #endregion
                }
                return this.mUIIverksetttilMenuEditItem;
            }
        }
        
        public DXPopupEdit UIBtnEffectuateToRevolPopupEdit
        {
            get
            {
                if ((this.mUIBtnEffectuateToRevolPopupEdit == null))
                {
                    this.mUIBtnEffectuateToRevolPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIBtnEffectuateToRevolPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuateToRevolving";
                    this.mUIBtnEffectuateToRevolPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerEdit";
                    #endregion
                }
                return this.mUIBtnEffectuateToRevolPopupEdit;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnRotateWholeMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnRotateWholeMenuBaseButtonItem == null))
                {
                    this.mUIBtnRotateWholeMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnRotateWholeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRotateWhole";
                    this.mUIBtnRotateWholeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnRotateWholeMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuEditItem mUIIverksetttilMenuEditItem;
        
        private DXPopupEdit mUIBtnEffectuateToRevolPopupEdit;
        
        private DXMenuBaseButtonItem mUIBtnRotateWholeMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBiOkMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBiOkMenuBaseButtonItem == null))
                {
                    this.mUIBiOkMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biOk";
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBiOkMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBiOkMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIIverksetteWindow : DXWindow
    {
        
        public UIIverksetteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Iverksette";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIPnlButtonsClient UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlButtonsClient mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlButtonsClient : DXTestControl
    {
        
        public UIPnlButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXButton UIIverksett20linjerButton
        {
            get
            {
                if ((this.mUIIverksett20linjerButton == null))
                {
                    this.mUIIverksett20linjerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIIverksett20linjerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuate";
                    this.mUIIverksett20linjerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIIverksett20linjerButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIverksett20linjerButton;
            }
        }
        
        public DXButton UIEndreperiodeforavkryButton
        {
            get
            {
                if ((this.mUIEndreperiodeforavkryButton == null))
                {
                    this.mUIEndreperiodeforavkryButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreperiodeforavkryButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPeriod";
                    this.mUIEndreperiodeforavkryButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndreperiodeforavkryButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIEndreperiodeforavkryButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIIverksett20linjerButton;
        
        private DXButton mUIEndreperiodeforavkryButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow22 : DXWindow
    {
        
        public UIItemWindow22()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4044 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4044 - Informasjon");
            this.WindowTitles.Add("RPL-4044 - Information");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL-4044 - Informasjon");
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL-4044 - Information");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow111 : DXWindow
    {
        
        public UIItemWindow111()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Lønnsberegning ved iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            this.WindowTitles.Add("Löneberäkning vid verkställande");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient : DXTestControl
    {
        
        public UIGSPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcButtonPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEndreiverksettingspeWindow : DXWindow
    {
        
        public UIEndreiverksettingspeWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Endre iverksettingsperiode";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Endre iverksettingsperiode");
            this.WindowTitles.Add("Ändra verkställande period");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public UIGSPanelControlClient1 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient1(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private UIGSPanelControlClient1 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient1 : DXTestControl
    {
        
        public UIGSPanelControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow2 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow7 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow7(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow7 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 06.09.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64339794ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvClient == null))
                {
                    this.mUIGatver64339794ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64339794ASCLAvClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                            "  (Vaktbokdato: 06.09.2016)");
                    this.mUIGatver64339794ASCLAvClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGatver64339794ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64339794ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow3 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow3()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow8 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow8(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow13 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow23 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow23(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow31 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow31(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow112 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow112(this);
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIItemWindow41 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow41(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow51 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow51(this);
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIItemWindow121 UIItemWindow12
        {
            get
            {
                if ((this.mUIItemWindow12 == null))
                {
                    this.mUIItemWindow12 = new UIItemWindow121(this);
                }
                return this.mUIItemWindow12;
            }
        }
        
        public UIItemWindow131 UIItemWindow13
        {
            get
            {
                if ((this.mUIItemWindow13 == null))
                {
                    this.mUIItemWindow13 = new UIItemWindow131(this);
                }
                return this.mUIItemWindow13;
            }
        }
        
        public UIItemWindow211 UIItemWindow21
        {
            get
            {
                if ((this.mUIItemWindow21 == null))
                {
                    this.mUIItemWindow21 = new UIItemWindow211(this);
                }
                return this.mUIItemWindow21;
            }
        }
        
        public UIItemWindow311 UIItemWindow31
        {
            get
            {
                if ((this.mUIItemWindow31 == null))
                {
                    this.mUIItemWindow31 = new UIItemWindow311(this);
                }
                return this.mUIItemWindow31;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow8 mUIItemWindow;
        
        private UIItemWindow13 mUIItemWindow1;
        
        private UIItemWindow23 mUIItemWindow2;
        
        private UIItemWindow31 mUIItemWindow3;
        
        private UIItemWindow112 mUIItemWindow11;
        
        private UIItemWindow41 mUIItemWindow4;
        
        private UIItemWindow51 mUIItemWindow5;
        
        private UIItemWindow121 mUIItemWindow12;
        
        private UIItemWindow131 mUIItemWindow13;
        
        private UIItemWindow211 mUIItemWindow21;
        
        private UIItemWindow311 mUIItemWindow31;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "14";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIRapportsenterClient
        {
            get
            {
                if ((this.mUIRapportsenterClient == null))
                {
                    this.mUIRapportsenterClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIRapportsenterClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIRapportsenterClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIRapportsenterClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIRapportsenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow23 : WinWindow
    {
        
        public UIItemWindow23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow31 : WinWindow
    {
        
        public UIItemWindow31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIEkstraClient
        {
            get
            {
                if ((this.mUIEkstraClient == null))
                {
                    this.mUIEkstraClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIEkstraClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIEkstraClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIEkstraClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIEkstraClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow112 : WinWindow
    {
        
        public UIItemWindow112(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIEkstraClient
        {
            get
            {
                if ((this.mUIEkstraClient == null))
                {
                    this.mUIEkstraClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIEkstraClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIEkstraClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIEkstraClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIEkstraClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow41 : WinWindow
    {
        
        public UIItemWindow41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIItemEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow51 : WinWindow
    {
        
        public UIItemWindow51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIItemEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow121 : WinWindow
    {
        
        public UIItemWindow121(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIItemEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow131 : WinWindow
    {
        
        public UIItemWindow131(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIItemEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow211 : WinWindow
    {
        
        public UIItemWindow211(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIItemEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow311 : WinWindow
    {
        
        public UIItemWindow311(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "15";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIItem77Client UIItem77Client
        {
            get
            {
                if ((this.mUIItem77Client == null))
                {
                    this.mUIItem77Client = new UIItem77Client(this);
                }
                return this.mUIItem77Client;
            }
        }
        #endregion
        
        #region Fields
        private UIItem77Client mUIItem77Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItem77Client : WinClient
    {
        
        public UIItem77Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIVelgalleingenCheckBox
        {
            get
            {
                if ((this.mUIVelgalleingenCheckBox == null))
                {
                    this.mUIVelgalleingenCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIVelgalleingenCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Velg alle/ingen:";
                    this.mUIVelgalleingenCheckBox.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIVelgalleingenCheckBox.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIVelgalleingenCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIVelgalleingenCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBook1_ASCLxlsCompatiWindow : WinWindow
    {
        
        public UIBook1_ASCLxlsCompatiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Book1_ASCL.xls  [Compatibility Mode] - Excel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "XLMAIN";
            this.WindowTitles.Add("Book1_ASCL.xls  [Compatibility Mode] - Excel");
            this.WindowTitles.Add("Lagresderdenskal.xls  [Compatibility Mode] - Excel");
            #endregion
        }
        
        #region Properties
        public UIItemWindow9 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow9(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIFileMenuBar UIFileMenuBar
        {
            get
            {
                if ((this.mUIFileMenuBar == null))
                {
                    this.mUIFileMenuBar = new UIFileMenuBar(this);
                }
                return this.mUIFileMenuBar;
            }
        }
        
        public UIItemGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup(this);
                }
                return this.mUIItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow9 mUIItemWindow;
        
        private UIFileMenuBar mUIFileMenuBar;
        
        private UIItemGroup mUIItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("Book1_ASCL.xls  [Compatibility Mode] - Excel");
            this.WindowTitles.Add("Lagresderdenskal.xls  [Compatibility Mode] - Excel");
            #endregion
        }
        
        #region Properties
        public UIRibbonPropertyPage UIRibbonPropertyPage
        {
            get
            {
                if ((this.mUIRibbonPropertyPage == null))
                {
                    this.mUIRibbonPropertyPage = new UIRibbonPropertyPage(this);
                }
                return this.mUIRibbonPropertyPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPropertyPage mUIRibbonPropertyPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPropertyPage : WinControl
    {
        
        public UIRibbonPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Ribbon";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Book1_ASCL.xls  [Compatibility Mode] - Excel");
            this.WindowTitles.Add("Lagresderdenskal.xls  [Compatibility Mode] - Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UIFileTabButton
        {
            get
            {
                if ((this.mUIFileTabButton == null))
                {
                    this.mUIFileTabButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFileTabButton.SearchProperties[WinButton.PropertyNames.Name] = "File Tab";
                    this.mUIFileTabButton.WindowTitles.Add("Book1_ASCL.xls  [Compatibility Mode] - Excel");
                    #endregion
                }
                return this.mUIFileTabButton;
            }
        }
        
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Lagresderdenskal.xls  [Compatibility Mode] - Excel");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFileTabButton;
        
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFileMenuBar : WinMenuBar
    {
        
        public UIFileMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "File";
            this.WindowTitles.Add("Book1_ASCL.xls  [Compatibility Mode] - Excel");
            #endregion
        }
        
        #region Properties
        public WinTabPage UISaveAsTabPage
        {
            get
            {
                if ((this.mUISaveAsTabPage == null))
                {
                    this.mUISaveAsTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUISaveAsTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Save As";
                    this.mUISaveAsTabPage.WindowTitles.Add("Book1_ASCL.xls  [Compatibility Mode] - Excel");
                    #endregion
                }
                return this.mUISaveAsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUISaveAsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemGroup : WinGroup
    {
        
        public UIItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Book1_ASCL.xls  [Compatibility Mode] - Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UIBrowseButton
        {
            get
            {
                if ((this.mUIBrowseButton == null))
                {
                    this.mUIBrowseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBrowseButton.SearchProperties[WinButton.PropertyNames.Name] = "Browse";
                    this.mUIBrowseButton.WindowTitles.Add("Book1_ASCL.xls  [Compatibility Mode] - Excel");
                    #endregion
                }
                return this.mUIBrowseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBrowseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIItemWindow10 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow10(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UITreeViewWindow UITreeViewWindow
        {
            get
            {
                if ((this.mUITreeViewWindow == null))
                {
                    this.mUITreeViewWindow = new UITreeViewWindow(this);
                }
                return this.mUITreeViewWindow;
            }
        }
        
        public UISaveWindow1 UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow1(this);
                }
                return this.mUISaveWindow;
            }
        }
        
        public UIDetailsPanePane1 UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane1(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow10 mUIItemWindow;
        
        private UITreeViewWindow mUITreeViewWindow;
        
        private UISaveWindow1 mUISaveWindow;
        
        private UIDetailsPanePane1 mUIDetailsPanePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow10 : WinWindow
    {
        
        public UIItemWindow10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITreeViewWindow : WinWindow
    {
        
        public UITreeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIDesktopTreeItem UIDesktopTreeItem
        {
            get
            {
                if ((this.mUIDesktopTreeItem == null))
                {
                    this.mUIDesktopTreeItem = new UIDesktopTreeItem(this);
                }
                return this.mUIDesktopTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopTreeItem mUIDesktopTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDesktopTreeItem : WinTreeItem
    {
        
        public UIDesktopTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Desktop";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UINetworkTreeItem
        {
            get
            {
                if ((this.mUINetworkTreeItem == null))
                {
                    this.mUINetworkTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUINetworkTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Network";
                    this.mUINetworkTreeItem.SearchProperties["Value"] = "1";
                    this.mUINetworkTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUINetworkTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUINetworkTreeItem.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUINetworkTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUINetworkTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISaveWindow1 : WinWindow
    {
        
        public UISaveWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDetailsPanePane1 : WinPane
    {
        
        public UIDetailsPanePane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow4 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow4()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UIBottomPanelDockPanel UIBottomPanelDockPanel
        {
            get
            {
                if ((this.mUIBottomPanelDockPanel == null))
                {
                    this.mUIBottomPanelDockPanel = new UIBottomPanelDockPanel(this);
                }
                return this.mUIBottomPanelDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        
        private UIBottomPanelDockPanel mUIBottomPanelDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIFriVikar00167770770FDockPanel UIFriVikar00167770770FDockPanel
        {
            get
            {
                if ((this.mUIFriVikar00167770770FDockPanel == null))
                {
                    this.mUIFriVikar00167770770FDockPanel = new UIFriVikar00167770770FDockPanel(this);
                }
                return this.mUIFriVikar00167770770FDockPanel;
            }
        }
        
        public UIDag00167770770FalseDockPanel UIDag00167770770FalseDockPanel
        {
            get
            {
                if ((this.mUIDag00167770770FalseDockPanel == null))
                {
                    this.mUIDag00167770770FalseDockPanel = new UIDag00167770770FalseDockPanel(this);
                }
                return this.mUIDag00167770770FalseDockPanel;
            }
        }
        
        public UIAften00167770770FalsDockPanel UIAften00167770770FalsDockPanel
        {
            get
            {
                if ((this.mUIAften00167770770FalsDockPanel == null))
                {
                    this.mUIAften00167770770FalsDockPanel = new UIAften00167770770FalsDockPanel(this);
                }
                return this.mUIAften00167770770FalsDockPanel;
            }
        }
        
        public UIContainerPanel0DockPanel UIContainerPanel0DockPanel
        {
            get
            {
                if ((this.mUIContainerPanel0DockPanel == null))
                {
                    this.mUIContainerPanel0DockPanel = new UIContainerPanel0DockPanel(this);
                }
                return this.mUIContainerPanel0DockPanel;
            }
        }
        
        public UIContainerPanel1DockPanel UIContainerPanel1DockPanel
        {
            get
            {
                if ((this.mUIContainerPanel1DockPanel == null))
                {
                    this.mUIContainerPanel1DockPanel = new UIContainerPanel1DockPanel(this);
                }
                return this.mUIContainerPanel1DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIFriVikar00167770770FDockPanel mUIFriVikar00167770770FDockPanel;
        
        private UIDag00167770770FalseDockPanel mUIDag00167770770FalseDockPanel;
        
        private UIAften00167770770FalsDockPanel mUIAften00167770770FalsDockPanel;
        
        private UIContainerPanel0DockPanel mUIContainerPanel0DockPanel;
        
        private UIContainerPanel1DockPanel mUIContainerPanel1DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFriVikar00167770770FDockPanel : DXDockPanel
    {
        
        public UIFriVikar00167770770FDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcFreeColumnTable UIGcFreeColumnTable
        {
            get
            {
                if ((this.mUIGcFreeColumnTable == null))
                {
                    this.mUIGcFreeColumnTable = new UIGcFreeColumnTable(this);
                }
                return this.mUIGcFreeColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcFreeColumnTable mUIGcFreeColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcFreeColumnTable : DXGrid
    {
        
        public UIGcFreeColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UICelsiusCesarCell
        {
            get
            {
                if ((this.mUICelsiusCesarCell == null))
                {
                    this.mUICelsiusCesarCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICelsiusCesarCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]0[Column]colEmployeeName";
                    this.mUICelsiusCesarCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICelsiusCesarCell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUICelsiusCesarCell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUICelsiusCesarCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUICelsiusCesarCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDag00167770770FalseDockPanel : DXDockPanel
    {
        
        public UIDag00167770770FalseDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom2 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom2 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIControlContainerCustom2 : DXTestControl
    {
        
        public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcDayColumnTable : DXGrid
    {
        
        public UIGcDayColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UICelsiusCesarCell
        {
            get
            {
                if ((this.mUICelsiusCesarCell == null))
                {
                    this.mUICelsiusCesarCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICelsiusCesarCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUICelsiusCesarCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICelsiusCesarCell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUICelsiusCesarCell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUICelsiusCesarCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUICelsiusCesarCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAften00167770770FalsDockPanel : DXDockPanel
    {
        
        public UIAften00167770770FalsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom3 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom3 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIControlContainerCustom3 : DXTestControl
    {
        
        public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable1 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable1(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable1 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcDayColumnTable1 : DXGrid
    {
        
        public UIGcDayColumnTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UIVAKANTCell
        {
            get
            {
                if ((this.mUIVAKANTCell == null))
                {
                    this.mUIVAKANTCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVAKANTCell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIVAKANTCell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIVAKANTCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIVAKANTCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIContainerPanel0DockPanel : DXDockPanel
    {
        
        public UIContainerPanel0DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ContainerPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UINatttiltirsdag001677DockPanel UINatttiltirsdag001677DockPanel
        {
            get
            {
                if ((this.mUINatttiltirsdag001677DockPanel == null))
                {
                    this.mUINatttiltirsdag001677DockPanel = new UINatttiltirsdag001677DockPanel(this);
                }
                return this.mUINatttiltirsdag001677DockPanel;
            }
        }
        
        public UIHjemmevakt0016777077DockPanel UIHjemmevakt0016777077DockPanel
        {
            get
            {
                if ((this.mUIHjemmevakt0016777077DockPanel == null))
                {
                    this.mUIHjemmevakt0016777077DockPanel = new UIHjemmevakt0016777077DockPanel(this);
                }
                return this.mUIHjemmevakt0016777077DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UINatttiltirsdag001677DockPanel mUINatttiltirsdag001677DockPanel;
        
        private UIHjemmevakt0016777077DockPanel mUIHjemmevakt0016777077DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINatttiltirsdag001677DockPanel : DXDockPanel
    {
        
        public UINatttiltirsdag001677DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Natt til tirsdag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom4 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom4(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom4 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIControlContainerCustom4 : DXTestControl
    {
        
        public UIControlContainerCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Natt til tirsdag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable2 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable2(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable2 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcDayColumnTable2 : DXGrid
    {
        
        public UIGcDayColumnTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UIBrunBosseCell
        {
            get
            {
                if ((this.mUIBrunBosseCell == null))
                {
                    this.mUIBrunBosseCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBrunBosseCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIBrunBosseCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBrunBosseCell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIBrunBosseCell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIBrunBosseCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIBrunBosseCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHjemmevakt0016777077DockPanel : DXDockPanel
    {
        
        public UIHjemmevakt0016777077DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Hjemmevakt;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom5 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom5(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom5 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIControlContainerCustom5 : DXTestControl
    {
        
        public UIControlContainerCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Hjemmevakt;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable3 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable3(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable3 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcDayColumnTable3 : DXGrid
    {
        
        public UIGcDayColumnTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UIGareGastonCell
        {
            get
            {
                if ((this.mUIGareGastonCell == null))
                {
                    this.mUIGareGastonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGareGastonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIGareGastonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGareGastonCell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIGareGastonCell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGareGastonCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGareGastonCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIContainerPanel1DockPanel : DXDockPanel
    {
        
        public UIContainerPanel1DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ContainerPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIBakvakt00167770770FaDockPanel UIBakvakt00167770770FaDockPanel
        {
            get
            {
                if ((this.mUIBakvakt00167770770FaDockPanel == null))
                {
                    this.mUIBakvakt00167770770FaDockPanel = new UIBakvakt00167770770FaDockPanel(this);
                }
                return this.mUIBakvakt00167770770FaDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIBakvakt00167770770FaDockPanel mUIBakvakt00167770770FaDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBakvakt00167770770FaDockPanel : DXDockPanel
    {
        
        public UIBakvakt00167770770FaDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Bakvakt;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom6 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom6(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom6 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIControlContainerCustom6 : DXTestControl
    {
        
        public UIControlContainerCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Bakvakt;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable4 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable4(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable4 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcDayColumnTable4 : DXGrid
    {
        
        public UIGcDayColumnTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UIJensenJuliusCell
        {
            get
            {
                if ((this.mUIJensenJuliusCell == null))
                {
                    this.mUIJensenJuliusCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIJensenJuliusCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIJensenJuliusCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIJensenJuliusCell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIJensenJuliusCell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIJensenJuliusCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIJensenJuliusCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpMainMenuRibbonPage : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGrpDevianceRibbonPageGroup UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        
        public UIGrpMiscRibbonPageGroup UIGrpMiscRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpMiscRibbonPageGroup == null))
                {
                    this.mUIGrpMiscRibbonPageGroup = new UIGrpMiscRibbonPageGroup(this);
                }
                return this.mUIGrpMiscRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDevianceRibbonPageGroup mUIGrpDevianceRibbonPageGroup;
        
        private UIGrpMiscRibbonPageGroup mUIGrpMiscRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpDevianceRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIEkstraRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEkstraRibbonBaseButtonItem == null))
                {
                    this.mUIEkstraRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExtra";
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEkstraRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIEkstraRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIEkstraRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIFraværRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIFraværRibbonBaseButtonItem == null))
                {
                    this.mUIFraværRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAbsence";
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIFraværRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIFraværRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIFraværRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIForskjøvetvaktRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIForskjøvetvaktRibbonBaseButtonItem == null))
                {
                    this.mUIForskjøvetvaktRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIForskjøvetvaktRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRemanage";
                    this.mUIForskjøvetvaktRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIForskjøvetvaktRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIForskjøvetvaktRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIForskjøvetvaktRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIBytteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBytteRibbonBaseButtonItem == null))
                {
                    this.mUIBytteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBytteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExchange";
                    this.mUIBytteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBytteRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIBytteRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIBytteRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIByttemedavdelingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIByttemedavdelingRibbonBaseButtonItem == null))
                {
                    this.mUIByttemedavdelingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIByttemedavdelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExchangeDep";
                    this.mUIByttemedavdelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIByttemedavdelingRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIByttemedavdelingRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIByttemedavdelingRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIUtrykningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIUtrykningRibbonBaseButtonItem == null))
                {
                    this.mUIUtrykningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIUtrykningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnTurnOut";
                    this.mUIUtrykningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIUtrykningRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIUtrykningRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIUtrykningRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIEkstraRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIFraværRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIForskjøvetvaktRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIBytteRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIByttemedavdelingRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIUtrykningRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpMiscRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpMiscRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpMisc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UISlettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISlettRibbonBaseButtonItem == null))
                {
                    this.mUISlettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUISlettRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUISlettRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBottomPanelDockPanel : DXDockPanel
    {
        
        public UIBottomPanelDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIFraværDockPanel UIFraværDockPanel
        {
            get
            {
                if ((this.mUIFraværDockPanel == null))
                {
                    this.mUIFraværDockPanel = new UIFraværDockPanel(this);
                }
                return this.mUIFraværDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIFraværDockPanel mUIFraværDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFraværDockPanel : DXDockPanel
    {
        
        public UIFraværDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fravær";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom7 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom7(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom7 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIControlContainerCustom7 : DXTestControl
    {
        
        public UIControlContainerCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FraværControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcAbsenceColumnTable UIGcAbsenceColumnTable
        {
            get
            {
                if ((this.mUIGcAbsenceColumnTable == null))
                {
                    this.mUIGcAbsenceColumnTable = new UIGcAbsenceColumnTable(this);
                }
                return this.mUIGcAbsenceColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAbsenceColumnTable mUIGcAbsenceColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcAbsenceColumnTable : DXGrid
    {
        
        public UIGcAbsenceColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UICelsiusCesarCell
        {
            get
            {
                if ((this.mUICelsiusCesarCell == null))
                {
                    this.mUICelsiusCesarCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICelsiusCesarCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceColumnGridControlCell[View]gvAbsenceColumn[Row]0[Column]gccFullName";
                    this.mUICelsiusCesarCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICelsiusCesarCell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUICelsiusCesarCell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUICelsiusCesarCell;
            }
        }
        
        public DXCell UIItem10EgenmeldingIAbCell
        {
            get
            {
                if ((this.mUIItem10EgenmeldingIAbCell == null))
                {
                    this.mUIItem10EgenmeldingIAbCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10EgenmeldingIAbCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceColumnGridControlCell[View]gvAbsenceColumn[Row]0[Column]gccAbsenceCode";
                    this.mUIItem10EgenmeldingIAbCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10EgenmeldingIAbCell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    #endregion
                }
                return this.mUIItem10EgenmeldingIAbCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUICelsiusCesarCell;
        
        private DXCell mUIItem10EgenmeldingIAbCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow32 : DXWindow
    {
        
        public UIItemWindow32()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Merarbeid / overtid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient2 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient2(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public DXPopupEdit UILnkDetail0PopupEdit
        {
            get
            {
                if ((this.mUILnkDetail0PopupEdit == null))
                {
                    this.mUILnkDetail0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail[0]";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
                    this.mUILnkDetail0PopupEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUILnkDetail0PopupEdit;
            }
        }
        
        public UIPanClientClient UIPanClientClient
        {
            get
            {
                if ((this.mUIPanClientClient == null))
                {
                    this.mUIPanClientClient = new UIPanClientClient(this);
                }
                return this.mUIPanClientClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient2 mUIGSPanelControlClient;
        
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        
        private DXPopupEdit mUILnkDetail0PopupEdit;
        
        private UIPanClientClient mUIPanClientClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient2 : DXTestControl
    {
        
        public UIGSPanelControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGSNavBarControlNavBar UIGSNavBarControlNavBar
        {
            get
            {
                if ((this.mUIGSNavBarControlNavBar == null))
                {
                    this.mUIGSNavBarControlNavBar = new UIGSNavBarControlNavBar(this);
                }
                return this.mUIGSNavBarControlNavBar;
            }
        }
        
        public UIGSTabControlTabList UIGSTabControlTabList
        {
            get
            {
                if ((this.mUIGSTabControlTabList == null))
                {
                    this.mUIGSTabControlTabList = new UIGSTabControlTabList(this);
                }
                return this.mUIGSTabControlTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGSNavBarControlNavBar mUIGSNavBarControlNavBar;
        
        private UIGSTabControlTabList mUIGSTabControlTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSNavBarControlNavBar : DXNavBar
    {
        
        public UIGSNavBarControlNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        
        public UINbgccEmployeeScrollableControl UINbgccEmployeeScrollableControl
        {
            get
            {
                if ((this.mUINbgccEmployeeScrollableControl == null))
                {
                    this.mUINbgccEmployeeScrollableControl = new UINbgccEmployeeScrollableControl(this);
                }
                return this.mUINbgccEmployeeScrollableControl;
            }
        }
        
        public UINbgccEmployeeScrollableControl1 UINbgccEmployeeScrollableControl1
        {
            get
            {
                if ((this.mUINbgccEmployeeScrollableControl1 == null))
                {
                    this.mUINbgccEmployeeScrollableControl1 = new UINbgccEmployeeScrollableControl1(this);
                }
                return this.mUINbgccEmployeeScrollableControl1;
            }
        }
        
        public UINavBarGroupControlCoScrollableControl1 UINavBarGroupControlCoScrollableControl1
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl1 == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl1 = new UINavBarGroupControlCoScrollableControl1(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl1;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl mUINavBarGroupControlCoScrollableControl;
        
        private UINbgccEmployeeScrollableControl mUINbgccEmployeeScrollableControl;
        
        private UINbgccEmployeeScrollableControl1 mUINbgccEmployeeScrollableControl1;
        
        private UINavBarGroupControlCoScrollableControl1 mUINavBarGroupControlCoScrollableControl1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbOvertimeCode";
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgccEmployeeScrollableControl : DXScrollableControl
    {
        
        public UINbgccEmployeeScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbEmploymentLookUpEdit
        {
            get
            {
                if ((this.mUICbEmploymentLookUpEdit == null))
                {
                    this.mUICbEmploymentLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbEmploymentLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbEmployment";
                    this.mUICbEmploymentLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUICbEmploymentLookUpEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUICbEmploymentLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbEmploymentLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgccEmployeeScrollableControl1 : DXScrollableControl
    {
        
        public UINbgccEmployeeScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbEmploymentLookUpEdit
        {
            get
            {
                if ((this.mUICbEmploymentLookUpEdit == null))
                {
                    this.mUICbEmploymentLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbEmploymentLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbEmployment";
                    this.mUICbEmploymentLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUICbEmploymentLookUpEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUICbEmploymentLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbEmploymentLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl1 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIPceDepartmentPopupEdit UIPceDepartmentPopupEdit
        {
            get
            {
                if ((this.mUIPceDepartmentPopupEdit == null))
                {
                    this.mUIPceDepartmentPopupEdit = new UIPceDepartmentPopupEdit(this);
                }
                return this.mUIPceDepartmentPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIPceDepartmentPopupEdit mUIPceDepartmentPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPceDepartmentPopupEdit : DXPopupEdit
    {
        
        public UIPceDepartmentPopupEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDepartment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButton1Button
        {
            get
            {
                if ((this.mUIEditorButton1Button == null))
                {
                    this.mUIEditorButton1Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDepartmentButton[1]";
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton1Button.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIEditorButton1Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButton1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSTabControlTabList : DXTestControl
    {
        
        public UIGSTabControlTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIXtraTabPageClient UIXtraTabPageClient
        {
            get
            {
                if ((this.mUIXtraTabPageClient == null))
                {
                    this.mUIXtraTabPageClient = new UIXtraTabPageClient(this);
                }
                return this.mUIXtraTabPageClient;
            }
        }
        
        public UITpWeaClient UITpWeaClient
        {
            get
            {
                if ((this.mUITpWeaClient == null))
                {
                    this.mUITpWeaClient = new UITpWeaClient(this);
                }
                return this.mUITpWeaClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraTabPageClient mUIXtraTabPageClient;
        
        private UITpWeaClient mUITpWeaClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtraTabPageClient : DXTestControl
    {
        
        public UIXtraTabPageClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGSGroupControlClient UIGSGroupControlClient
        {
            get
            {
                if ((this.mUIGSGroupControlClient == null))
                {
                    this.mUIGSGroupControlClient = new UIGSGroupControlClient(this);
                }
                return this.mUIGSGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSGroupControlClient mUIGSGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSGroupControlClient : DXTestControl
    {
        
        public UIGSGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGSTabControlTabList1 UIGSTabControlTabList
        {
            get
            {
                if ((this.mUIGSTabControlTabList == null))
                {
                    this.mUIGSTabControlTabList = new UIGSTabControlTabList1(this);
                }
                return this.mUIGSTabControlTabList;
            }
        }
        
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIGSTabControlTabList1 mUIGSTabControlTabList;
        
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSTabControlTabList1 : DXTestControl
    {
        
        public UIGSTabControlTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcRegistrationType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIXtraTabPageClient1 UIXtraTabPageClient
        {
            get
            {
                if ((this.mUIXtraTabPageClient == null))
                {
                    this.mUIXtraTabPageClient = new UIXtraTabPageClient1(this);
                }
                return this.mUIXtraTabPageClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraTabPageClient1 mUIXtraTabPageClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtraTabPageClient1 : DXTestControl
    {
        
        public UIXtraTabPageClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit == null))
                {
                    this.mUIGSLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCode";
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit;
            }
        }
        
        public DXTextEdit UIETime3Edit
        {
            get
            {
                if ((this.mUIETime3Edit == null))
                {
                    this.mUIETime3Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[3]";
                    this.mUIETime3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime3Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime3Edit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime3Edit;
            }
        }
        
        public DXTextEdit UIETime3Edit1
        {
            get
            {
                if ((this.mUIETime3Edit1 == null))
                {
                    this.mUIETime3Edit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime3Edit1.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[3]";
                    this.mUIETime3Edit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime3Edit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime3Edit1.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime3Edit1;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        
        public DXTextEdit UIETime1Edit1
        {
            get
            {
                if ((this.mUIETime1Edit1 == null))
                {
                    this.mUIETime1Edit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit1.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit1.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime1Edit1;
            }
        }
        
        public DXLookUpEdit UICbCrewColumnLookUpEdit
        {
            get
            {
                if ((this.mUICbCrewColumnLookUpEdit == null))
                {
                    this.mUICbCrewColumnLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbCrewColumn";
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUICbCrewColumnLookUpEdit;
            }
        }
        
        public DXLookUpEdit UICbCrewColumnLookUpEdit1
        {
            get
            {
                if ((this.mUICbCrewColumnLookUpEdit1 == null))
                {
                    this.mUICbCrewColumnLookUpEdit1 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbCrewColumnLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "cbCrewColumn";
                    this.mUICbCrewColumnLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUICbCrewColumnLookUpEdit1;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit;
        
        private DXTextEdit mUIETime3Edit;
        
        private DXTextEdit mUIETime3Edit1;
        
        private DXTextEdit mUIETime1Edit;
        
        private DXTextEdit mUIETime1Edit1;
        
        private DXLookUpEdit mUICbCrewColumnLookUpEdit;
        
        private DXLookUpEdit mUICbCrewColumnLookUpEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaClient : DXTestControl
    {
        
        public UITpWeaClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGsGroupControl2Client UIGsGroupControl2Client
        {
            get
            {
                if ((this.mUIGsGroupControl2Client == null))
                {
                    this.mUIGsGroupControl2Client = new UIGsGroupControl2Client(this);
                }
                return this.mUIGsGroupControl2Client;
            }
        }
        
        public DXButton UITilbaketilregistreriButton
        {
            get
            {
                if ((this.mUITilbaketilregistreriButton == null))
                {
                    this.mUITilbaketilregistreriButton = new DXButton(this);
                    #region Search Criteria
                    this.mUITilbaketilregistreriButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnBackToRegistrationFromWea";
                    this.mUITilbaketilregistreriButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUITilbaketilregistreriButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUITilbaketilregistreriButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGroupControl2Client mUIGsGroupControl2Client;
        
        private DXButton mUITilbaketilregistreriButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsGroupControl2Client : DXTestControl
    {
        
        public UIGsGroupControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGroupControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListTable UIGWeaBreakListTable
        {
            get
            {
                if ((this.mUIGWeaBreakListTable == null))
                {
                    this.mUIGWeaBreakListTable = new UIGWeaBreakListTable(this);
                }
                return this.mUIGWeaBreakListTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListTable mUIGWeaBreakListTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListTable : DXGrid
    {
        
        public UIGWeaBreakListTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXCell UISamletdag16001300Cell
        {
            get
            {
                if ((this.mUISamletdag16001300Cell == null))
                {
                    this.mUISamletdag16001300Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUISamletdag16001300Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]0[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUISamletdag16001300Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISamletdag16001300Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUISamletdag16001300Cell;
            }
        }
        
        public DXCell UIUkentligarbeidsfri33Cell
        {
            get
            {
                if ((this.mUIUkentligarbeidsfri33Cell == null))
                {
                    this.mUIUkentligarbeidsfri33Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIUkentligarbeidsfri33Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]1[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIUkentligarbeidsfri33Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIUkentligarbeidsfri33Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIUkentligarbeidsfri33Cell;
            }
        }
        
        public DXCell UISøndager200200Cell
        {
            get
            {
                if ((this.mUISøndager200200Cell == null))
                {
                    this.mUISøndager200200Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUISøndager200200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]2[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUISøndager200200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISøndager200200Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUISøndager200200Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISamletdag16001300Cell;
        
        private DXCell mUIUkentligarbeidsfri33Cell;
        
        private DXCell mUISøndager200200Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvbrytButton;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanClientClient : DXTestControl
    {
        
        public UIPanClientClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcClientTabList : DXTestControl
    {
        
        public UITcClientTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpWeaClient1 UITpWeaClient
        {
            get
            {
                if ((this.mUITpWeaClient == null))
                {
                    this.mUITpWeaClient = new UITpWeaClient1(this);
                }
                return this.mUITpWeaClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpWeaClient1 mUITpWeaClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaClient1 : DXTestControl
    {
        
        public UITpWeaClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGsGroupControl2Client1 UIGsGroupControl2Client
        {
            get
            {
                if ((this.mUIGsGroupControl2Client == null))
                {
                    this.mUIGsGroupControl2Client = new UIGsGroupControl2Client1(this);
                }
                return this.mUIGsGroupControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGroupControl2Client1 mUIGsGroupControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsGroupControl2Client1 : DXTestControl
    {
        
        public UIGsGroupControl2Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGroupControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListTable1 UIGWeaBreakListTable
        {
            get
            {
                if ((this.mUIGWeaBreakListTable == null))
                {
                    this.mUIGWeaBreakListTable = new UIGWeaBreakListTable1(this);
                }
                return this.mUIGWeaBreakListTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListTable1 mUIGWeaBreakListTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListTable1 : DXGrid
    {
        
        public UIGWeaBreakListTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXCell UISamletuke502500Cell
        {
            get
            {
                if ((this.mUISamletuke502500Cell == null))
                {
                    this.mUISamletuke502500Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUISamletuke502500Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]0[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUISamletuke502500Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISamletuke502500Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUISamletuke502500Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISamletuke502500Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow42 : DXWindow
    {
        
        public UIItemWindow42()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AML Brudd - Egen kommentar";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit == null))
                {
                    this.mUIGSLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gsBreakType";
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUIGSLookUpEditLookUpEdit.WindowTitles.Add("AML Brudd - Egen kommentar");
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit;
            }
        }
        
        public DXTextEdit UIECommentEdit
        {
            get
            {
                if ((this.mUIECommentEdit == null))
                {
                    this.mUIECommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIECommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eComment";
                    this.mUIECommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSMemoEdit";
                    this.mUIECommentEdit.WindowTitles.Add("AML Brudd - Egen kommentar");
                    #endregion
                }
                return this.mUIECommentEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("AML Brudd - Egen kommentar");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit;
        
        private DXTextEdit mUIECommentEdit;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow5 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow5()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow14 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow14(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow14 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow14 : WinWindow
    {
        
        public UIItemWindow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Cesar Celsius " +
                    " (Vaktbokdato: 04.09.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel49Client
        {
            get
            {
                if ((this.mUIPanel49Client == null))
                {
                    this.mUIPanel49Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel49Client.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Cesar Celsius " +
                            " (Vaktbokdato: 04.09.2016)");
                    this.mUIPanel49Client.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPanel49Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel49Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBook1ExcelWindow : WinWindow
    {
        
        public UIBook1ExcelWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Book1 - Excel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "XLMAIN";
            this.WindowTitles.Add("Book1 - Excel");
            #endregion
        }
        
        #region Properties
        public UIItemWindow15 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow15(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIFileMenuBar1 UIFileMenuBar
        {
            get
            {
                if ((this.mUIFileMenuBar == null))
                {
                    this.mUIFileMenuBar = new UIFileMenuBar1(this);
                }
                return this.mUIFileMenuBar;
            }
        }
        
        public UIItemGroup1 UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup1(this);
                }
                return this.mUIItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow15 mUIItemWindow;
        
        private UIFileMenuBar1 mUIFileMenuBar;
        
        private UIItemGroup1 mUIItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow15 : WinWindow
    {
        
        public UIItemWindow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("Book1 - Excel");
            #endregion
        }
        
        #region Properties
        public UIRibbonPropertyPage1 UIRibbonPropertyPage
        {
            get
            {
                if ((this.mUIRibbonPropertyPage == null))
                {
                    this.mUIRibbonPropertyPage = new UIRibbonPropertyPage1(this);
                }
                return this.mUIRibbonPropertyPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPropertyPage1 mUIRibbonPropertyPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPropertyPage1 : WinControl
    {
        
        public UIRibbonPropertyPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Ribbon";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Book1 - Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UIFileTabButton
        {
            get
            {
                if ((this.mUIFileTabButton == null))
                {
                    this.mUIFileTabButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFileTabButton.SearchProperties[WinButton.PropertyNames.Name] = "File Tab";
                    this.mUIFileTabButton.WindowTitles.Add("Book1 - Excel");
                    #endregion
                }
                return this.mUIFileTabButton;
            }
        }
        
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("setteinnavnlagre.xlsx - Excel");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFileTabButton;
        
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFileMenuBar1 : WinMenuBar
    {
        
        public UIFileMenuBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "File";
            this.WindowTitles.Add("Book1 - Excel");
            #endregion
        }
        
        #region Properties
        public WinTabPage UISaveAsTabPage
        {
            get
            {
                if ((this.mUISaveAsTabPage == null))
                {
                    this.mUISaveAsTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUISaveAsTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Save As";
                    this.mUISaveAsTabPage.WindowTitles.Add("Book1 - Excel");
                    #endregion
                }
                return this.mUISaveAsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUISaveAsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemGroup1 : WinGroup
    {
        
        public UIItemGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Book1 - Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UIBrowseButton
        {
            get
            {
                if ((this.mUIBrowseButton == null))
                {
                    this.mUIBrowseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBrowseButton.SearchProperties[WinButton.PropertyNames.Name] = "Browse";
                    this.mUIBrowseButton.WindowTitles.Add("Book1 - Excel");
                    #endregion
                }
                return this.mUIBrowseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBrowseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow52 : DXWindow
    {
        
        public UIItemWindow52()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Slett";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Slett");
            this.WindowTitles.Add("Radera");
            #endregion
        }
        
        #region Properties
        public UIGSDialogFooterBarCustom UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIGSDialogFooterBarCustom1 UIGSDialogFooterBarCustom1
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom1 == null))
                {
                    this.mUIGSDialogFooterBarCustom1 = new UIGSDialogFooterBarCustom1(this);
                }
                return this.mUIGSDialogFooterBarCustom1;
            }
        }
        #endregion
        
        #region Fields
        private UIGSDialogFooterBarCustom mUIGSDialogFooterBarCustom;
        
        private UIPcContentClient mUIPcContentClient;
        
        private UIGSDialogFooterBarCustom1 mUIGSDialogFooterBarCustom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSDialogFooterBarCustom : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public UITlOperationsTreeList UITlOperationsTreeList
        {
            get
            {
                if ((this.mUITlOperationsTreeList == null))
                {
                    this.mUITlOperationsTreeList = new UITlOperationsTreeList(this);
                }
                return this.mUITlOperationsTreeList;
            }
        }
        
        public DXButton UIVelgingenButton
        {
            get
            {
                if ((this.mUIVelgingenButton == null))
                {
                    this.mUIVelgingenButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnUncheckAll";
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgingenButton.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUIVelgingenButton;
            }
        }
        
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCheckAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        #endregion
        
        #region Fields
        private UITlOperationsTreeList mUITlOperationsTreeList;
        
        private DXButton mUIVelgingenButton;
        
        private DXButton mUIVelgalleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITlOperationsTreeList : DXTreeList
    {
        
        public UITlOperationsTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlOperations";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public DXTreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode1TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
                    this.mUINode1TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode1TreeListNode.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUINode1TreeListNode;
            }
        }
        
        public DXTreeListNode UINode2TreeListNode
        {
            get
            {
                if ((this.mUINode2TreeListNode == null))
                {
                    this.mUINode2TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode2TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node2";
                    this.mUINode2TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode2TreeListNode.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUINode2TreeListNode;
            }
        }
        
        public DXTreeListNode UINode3TreeListNode
        {
            get
            {
                if ((this.mUINode3TreeListNode == null))
                {
                    this.mUINode3TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode3TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node3";
                    this.mUINode3TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode3TreeListNode.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUINode3TreeListNode;
            }
        }
        
        public DXTreeListNode UINode4TreeListNode
        {
            get
            {
                if ((this.mUINode4TreeListNode == null))
                {
                    this.mUINode4TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode4TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node4";
                    this.mUINode4TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode4TreeListNode.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUINode4TreeListNode;
            }
        }
        
        public DXTreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode0TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
                    this.mUINode0TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode0TreeListNode.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListNode mUINode1TreeListNode;
        
        private DXTreeListNode mUINode2TreeListNode;
        
        private DXTreeListNode mUINode3TreeListNode;
        
        private DXTreeListNode mUINode4TreeListNode;
        
        private DXTreeListNode mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSDialogFooterBarCustom1 : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow61 : DXWindow
    {
        
        public UIItemWindow61()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsregistrering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGSNavBarControlNavBar1 UIGSNavBarControlNavBar
        {
            get
            {
                if ((this.mUIGSNavBarControlNavBar == null))
                {
                    this.mUIGSNavBarControlNavBar = new UIGSNavBarControlNavBar1(this);
                }
                return this.mUIGSNavBarControlNavBar;
            }
        }
        
        public UILcMainCustom UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new UILcMainCustom(this);
                }
                return this.mUILcMainCustom;
            }
        }
        
        public UIGSLayoutControlCustom UIGSLayoutControlCustom
        {
            get
            {
                if ((this.mUIGSLayoutControlCustom == null))
                {
                    this.mUIGSLayoutControlCustom = new UIGSLayoutControlCustom(this);
                }
                return this.mUIGSLayoutControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGSNavBarControlNavBar1 mUIGSNavBarControlNavBar;
        
        private UILcMainCustom mUILcMainCustom;
        
        private UIGSLayoutControlCustom mUIGSLayoutControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSNavBarControlNavBar1 : DXNavBar
    {
        
        public UIGSNavBarControlNavBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl2 UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl2(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        
        public UINgbcPeriodScrollableControl UINgbcPeriodScrollableControl
        {
            get
            {
                if ((this.mUINgbcPeriodScrollableControl == null))
                {
                    this.mUINgbcPeriodScrollableControl = new UINgbcPeriodScrollableControl(this);
                }
                return this.mUINgbcPeriodScrollableControl;
            }
        }
        
        public UINgbcEmployeesScrollableControl UINgbcEmployeesScrollableControl
        {
            get
            {
                if ((this.mUINgbcEmployeesScrollableControl == null))
                {
                    this.mUINgbcEmployeesScrollableControl = new UINgbcEmployeesScrollableControl(this);
                }
                return this.mUINgbcEmployeesScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl2 mUINavBarGroupControlCoScrollableControl;
        
        private UINgbcPeriodScrollableControl mUINgbcPeriodScrollableControl;
        
        private UINgbcEmployeesScrollableControl mUINgbcEmployeesScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl2 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcAbsenceCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UIGSSearchLookUpEditLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new UIGSSearchLookUpEditLookUpEdit(this);
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIGSSearchLookUpEditLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSSearchLookUpEditLookUpEdit : DXLookUpEdit
    {
        
        public UIGSSearchLookUpEditLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueAbsenceCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupSearchLookUpEdiWindow : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueAbsenceCodesPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISearchEditLookUpPopuCustom : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            #endregion
        }
        
        #region Properties
        public UILCCustom UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILCCustom : DXTestControl
    {
        
        public UILCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcMainLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            #endregion
        }
        
        #region Properties
        public UILciGridLayoutControlItem UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciGridLayoutControlItem mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciGridLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGridControlTable.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
                    this.mUIGridControlTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
                    this.mUIGridControlTable.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINgbcPeriodScrollableControl : DXScrollableControl
    {
        
        public UINgbcPeriodScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ngbcPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlPeriodClient UIPnlPeriodClient
        {
            get
            {
                if ((this.mUIPnlPeriodClient == null))
                {
                    this.mUIPnlPeriodClient = new UIPnlPeriodClient(this);
                }
                return this.mUIPnlPeriodClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlPeriodClient mUIPnlPeriodClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlPeriodClient : DXTestControl
    {
        
        public UIPnlPeriodClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcPeriodCustom UILcPeriodCustom
        {
            get
            {
                if ((this.mUILcPeriodCustom == null))
                {
                    this.mUILcPeriodCustom = new UILcPeriodCustom(this);
                }
                return this.mUILcPeriodCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcPeriodCustom mUILcPeriodCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcPeriodCustom : DXTestControl
    {
        
        public UILcPeriodCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private DXPopupEdit mUIPceDate1PopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINgbcEmployeesScrollableControl : DXScrollableControl
    {
        
        public UINgbcEmployeesScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ngbcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILueEmploymentsLookUpEdit UILueEmploymentsLookUpEdit
        {
            get
            {
                if ((this.mUILueEmploymentsLookUpEdit == null))
                {
                    this.mUILueEmploymentsLookUpEdit = new UILueEmploymentsLookUpEdit(this);
                }
                return this.mUILueEmploymentsLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILueEmploymentsLookUpEdit mUILueEmploymentsLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILueEmploymentsLookUpEdit : DXLookUpEdit
    {
        
        public UILueEmploymentsLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueEmployments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow1 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow1(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow1 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupSearchLookUpEdiWindow1 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueEmploymentsPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom1 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom1(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom1 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISearchEditLookUpPopuCustom1 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILCCustom1 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom1(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom1 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILCCustom1 : DXTestControl
    {
        
        public UILCCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup1 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup1(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup1 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcMainLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup mUILcgFindLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcgFindLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciLabelFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcMainCustom : DXTestControl
    {
        
        public UILcMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootLayoutGroup : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciMainInformationLayoutControlItem UILciMainInformationLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainInformationLayoutControlItem == null))
                {
                    this.mUILciMainInformationLayoutControlItem = new UILciMainInformationLayoutControlItem(this);
                }
                return this.mUILciMainInformationLayoutControlItem;
            }
        }
        
        public UILciMainShiftsLayoutControlItem UILciMainShiftsLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainShiftsLayoutControlItem == null))
                {
                    this.mUILciMainShiftsLayoutControlItem = new UILciMainShiftsLayoutControlItem(this);
                }
                return this.mUILciMainShiftsLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainInformationLayoutControlItem mUILciMainInformationLayoutControlItem;
        
        private UILciMainShiftsLayoutControlItem mUILciMainShiftsLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciMainInformationLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciMainInformationLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcInformationClient UIGrcInformationClient
        {
            get
            {
                if ((this.mUIGrcInformationClient == null))
                {
                    this.mUIGrcInformationClient = new UIGrcInformationClient(this);
                }
                return this.mUIGrcInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcInformationClient mUIGrcInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrcInformationClient : DXTestControl
    {
        
        public UIGrcInformationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcInformationNavBar UINbcInformationNavBar
        {
            get
            {
                if ((this.mUINbcInformationNavBar == null))
                {
                    this.mUINbcInformationNavBar = new UINbcInformationNavBar(this);
                }
                return this.mUINbcInformationNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInformationNavBar mUINbcInformationNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbcInformationNavBar : DXNavBar
    {
        
        public UINbcInformationNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbgcHourAbsenceScrollableControl UINbgcHourAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINbgcHourAbsenceScrollableControl == null))
                {
                    this.mUINbgcHourAbsenceScrollableControl = new UINbgcHourAbsenceScrollableControl(this);
                }
                return this.mUINbgcHourAbsenceScrollableControl;
            }
        }
        
        public UINbgcPartialAbsenceScrollableControl UINbgcPartialAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINbgcPartialAbsenceScrollableControl == null))
                {
                    this.mUINbgcPartialAbsenceScrollableControl = new UINbgcPartialAbsenceScrollableControl(this);
                }
                return this.mUINbgcPartialAbsenceScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcHourAbsenceScrollableControl mUINbgcHourAbsenceScrollableControl;
        
        private UINbgcPartialAbsenceScrollableControl mUINbgcPartialAbsenceScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgcHourAbsenceScrollableControl : DXScrollableControl
    {
        
        public UINbgcHourAbsenceScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlHourAbsenceClient UIPnlHourAbsenceClient
        {
            get
            {
                if ((this.mUIPnlHourAbsenceClient == null))
                {
                    this.mUIPnlHourAbsenceClient = new UIPnlHourAbsenceClient(this);
                }
                return this.mUIPnlHourAbsenceClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlHourAbsenceClient mUIPnlHourAbsenceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlHourAbsenceClient : DXTestControl
    {
        
        public UIPnlHourAbsenceClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcHourAbsenceCustom UILcHourAbsenceCustom
        {
            get
            {
                if ((this.mUILcHourAbsenceCustom == null))
                {
                    this.mUILcHourAbsenceCustom = new UILcHourAbsenceCustom(this);
                }
                return this.mUILcHourAbsenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcHourAbsenceCustom mUILcHourAbsenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcHourAbsenceCustom : DXTestControl
    {
        
        public UILcHourAbsenceCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup3LayoutGroup UILayoutControlGroup3LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup3LayoutGroup == null))
                {
                    this.mUILayoutControlGroup3LayoutGroup = new UILayoutControlGroup3LayoutGroup(this);
                }
                return this.mUILayoutControlGroup3LayoutGroup;
            }
        }
        
        public DXTextEdit UIETime0Edit
        {
            get
            {
                if ((this.mUIETime0Edit == null))
                {
                    this.mUIETime0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[0]";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime0Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIETime0Edit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup3LayoutGroup mUILayoutControlGroup3LayoutGroup;
        
        private DXTextEdit mUIETime0Edit;
        
        private DXTextEdit mUIETime1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroup3LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup3LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChbPabsHourlyAbsenceCheckBox
        {
            get
            {
                if ((this.mUIChbPabsHourlyAbsenceCheckBox == null))
                {
                    this.mUIChbPabsHourlyAbsenceCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChbPabsHourlyAbsenceCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbPabsHourlyAbsence";
                    this.mUIChbPabsHourlyAbsenceCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChbPabsHourlyAbsenceCheckBox.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIChbPabsHourlyAbsenceCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChbPabsHourlyAbsenceCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgcPartialAbsenceScrollableControl : DXScrollableControl
    {
        
        public UINbgcPartialAbsenceScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcPartialAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlPartialAbsenceClient UIPnlPartialAbsenceClient
        {
            get
            {
                if ((this.mUIPnlPartialAbsenceClient == null))
                {
                    this.mUIPnlPartialAbsenceClient = new UIPnlPartialAbsenceClient(this);
                }
                return this.mUIPnlPartialAbsenceClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlPartialAbsenceClient mUIPnlPartialAbsenceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlPartialAbsenceClient : DXTestControl
    {
        
        public UIPnlPartialAbsenceClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPartialAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcPartialAbsenceCustom UILcPartialAbsenceCustom
        {
            get
            {
                if ((this.mUILcPartialAbsenceCustom == null))
                {
                    this.mUILcPartialAbsenceCustom = new UILcPartialAbsenceCustom(this);
                }
                return this.mUILcPartialAbsenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcPartialAbsenceCustom mUILcPartialAbsenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcPartialAbsenceCustom : DXTestControl
    {
        
        public UILcPartialAbsenceCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcPartialAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgPartialAbsenceLayoutGroup UILcgPartialAbsenceLayoutGroup
        {
            get
            {
                if ((this.mUILcgPartialAbsenceLayoutGroup == null))
                {
                    this.mUILcgPartialAbsenceLayoutGroup = new UILcgPartialAbsenceLayoutGroup(this);
                }
                return this.mUILcgPartialAbsenceLayoutGroup;
            }
        }
        
        public DXTextEdit UIENumber1Edit
        {
            get
            {
                if ((this.mUIENumber1Edit == null))
                {
                    this.mUIENumber1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[1]";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber1Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIENumber1Edit;
            }
        }
        #endregion
        
        #region Fields
        private UILcgPartialAbsenceLayoutGroup mUILcgPartialAbsenceLayoutGroup;
        
        private DXTextEdit mUIENumber1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcgPartialAbsenceLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgPartialAbsenceLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgPartialAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem21LayoutControlItem UILayoutControlItem21LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem21LayoutControlItem == null))
                {
                    this.mUILayoutControlItem21LayoutControlItem = new UILayoutControlItem21LayoutControlItem(this);
                }
                return this.mUILayoutControlItem21LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem21LayoutControlItem mUILayoutControlItem21LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem21LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem21LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem21";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgPartialAbsenceTypeRadioGroup
        {
            get
            {
                if ((this.mUIRgPartialAbsenceTypeRadioGroup == null))
                {
                    this.mUIRgPartialAbsenceTypeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgPartialAbsenceTypeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgPartialAbsenceType";
                    this.mUIRgPartialAbsenceTypeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgPartialAbsenceTypeRadioGroup.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIRgPartialAbsenceTypeRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgPartialAbsenceTypeRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciMainShiftsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciMainShiftsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcShiftsClient UIGrcShiftsClient
        {
            get
            {
                if ((this.mUIGrcShiftsClient == null))
                {
                    this.mUIGrcShiftsClient = new UIGrcShiftsClient(this);
                }
                return this.mUIGrcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcShiftsClient mUIGrcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrcShiftsClient : DXTestControl
    {
        
        public UIGrcShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITcShiftsTabList UITcShiftsTabList
        {
            get
            {
                if ((this.mUITcShiftsTabList == null))
                {
                    this.mUITcShiftsTabList = new UITcShiftsTabList(this);
                }
                return this.mUITcShiftsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcShiftsTabList mUITcShiftsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcShiftsTabList : DXTestControl
    {
        
        public UITcShiftsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIXtpShiftsGridClient UIXtpShiftsGridClient
        {
            get
            {
                if ((this.mUIXtpShiftsGridClient == null))
                {
                    this.mUIXtpShiftsGridClient = new UIXtpShiftsGridClient(this);
                }
                return this.mUIXtpShiftsGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtpShiftsGridClient mUIXtpShiftsGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtpShiftsGridClient : DXTestControl
    {
        
        public UIXtpShiftsGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpShiftsGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGcShiftsTable UIGcShiftsTable
        {
            get
            {
                if ((this.mUIGcShiftsTable == null))
                {
                    this.mUIGcShiftsTable = new UIGcShiftsTable(this);
                }
                return this.mUIGcShiftsTable;
            }
        }
        
        public UILcAbsenceShiftsCustom UILcAbsenceShiftsCustom
        {
            get
            {
                if ((this.mUILcAbsenceShiftsCustom == null))
                {
                    this.mUILcAbsenceShiftsCustom = new UILcAbsenceShiftsCustom(this);
                }
                return this.mUILcAbsenceShiftsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftsTable mUIGcShiftsTable;
        
        private UILcAbsenceShiftsCustom mUILcAbsenceShiftsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcShiftsTable : DXGrid
    {
        
        public UIGcShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]3[Column]tlcPresent";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]6[Column]tlcPresent";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        
        public DXCell UIValgtCell2
        {
            get
            {
                if ((this.mUIValgtCell2 == null))
                {
                    this.mUIValgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]2[Column]tlcCustomized";
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell2.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell2;
            }
        }
        
        public DXCell UIValgtCell3
        {
            get
            {
                if ((this.mUIValgtCell3 == null))
                {
                    this.mUIValgtCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]7[Column]tlcCustomized";
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell3.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        
        private DXCell mUIValgtCell2;
        
        private DXCell mUIValgtCell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcAbsenceShiftsCustom : DXTestControl
    {
        
        public UILcAbsenceShiftsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcAbsenceShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgAbsenceShiftsLayoutGroup UILcgAbsenceShiftsLayoutGroup
        {
            get
            {
                if ((this.mUILcgAbsenceShiftsLayoutGroup == null))
                {
                    this.mUILcgAbsenceShiftsLayoutGroup = new UILcgAbsenceShiftsLayoutGroup(this);
                }
                return this.mUILcgAbsenceShiftsLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgAbsenceShiftsLayoutGroup mUILcgAbsenceShiftsLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcgAbsenceShiftsLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgAbsenceShiftsLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgAbsenceShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciChangeShiftsLayoutControlItem UILciChangeShiftsLayoutControlItem
        {
            get
            {
                if ((this.mUILciChangeShiftsLayoutControlItem == null))
                {
                    this.mUILciChangeShiftsLayoutControlItem = new UILciChangeShiftsLayoutControlItem(this);
                }
                return this.mUILciChangeShiftsLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciChangeShiftsLayoutControlItem mUILciChangeShiftsLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciChangeShiftsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciChangeShiftsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciChangeShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        //#region Properties
        //public DXButton UIEndrevakterButton
        //{
        //    get
        //    {
        //        if ((this.mUIEndrevakterButton == null))
        //        {
        //            this.mUIEndrevakterButton = new DXButton(this);
        //            #region Search Criteria
        //            this.mUIEndrevakterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnChangeShifts";
        //            this.mUIEndrevakterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
        //            this.mUIEndrevakterButton.WindowTitles.Add("Fraværsregistrering");
        //            #endregion
        //        }
        //        return this.mUIEndrevakterButton;
        //    }
        //}
        //#endregion
        
        //#region Fields
        //private DXButton mUIEndrevakterButton;
        //#endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSLayoutControlCustom : DXTestControl
    {
        
        public UIGSLayoutControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgBottomLayoutGroup UILcgBottomLayoutGroup
        {
            get
            {
                if ((this.mUILcgBottomLayoutGroup == null))
                {
                    this.mUILcgBottomLayoutGroup = new UILcgBottomLayoutGroup(this);
                }
                return this.mUILcgBottomLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgBottomLayoutGroup mUILcgBottomLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcgBottomLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgBottomLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciOkFinishLayoutControlItem UILciOkFinishLayoutControlItem
        {
            get
            {
                if ((this.mUILciOkFinishLayoutControlItem == null))
                {
                    this.mUILciOkFinishLayoutControlItem = new UILciOkFinishLayoutControlItem(this);
                }
                return this.mUILciOkFinishLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciOkFinishLayoutControlItem mUILciOkFinishLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciOkFinishLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciOkFinishLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciOkFinish";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        //#region Properties
        //public DXButton UIGSSimpleButtonButton
        //{
        //    get
        //    {
        //        if ((this.mUIGSSimpleButtonButton == null))
        //        {
        //            this.mUIGSSimpleButtonButton = new DXButton(this);
        //            #region Search Criteria
        //            this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOkFinish";
        //            this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
        //            this.mUIGSSimpleButtonButton.WindowTitles.Add("Fraværsregistrering");
        //            #endregion
        //        }
        //        return this.mUIGSSimpleButtonButton;
        //    }
        //}
        //#endregion
        
        //#region Fields
        //private DXButton mUIGSSimpleButtonButton;
        //#endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISletteforskyvningeroWindow : DXWindow
    {
        
        public UISletteforskyvningeroWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Slette forskyvninger og ekstravakter";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Slette forskyvninger og ekstravakter");
            #endregion
        }
        
        #region Properties
        public UILcDeleteOvertimeCustom UILcDeleteOvertimeCustom
        {
            get
            {
                if ((this.mUILcDeleteOvertimeCustom == null))
                {
                    this.mUILcDeleteOvertimeCustom = new UILcDeleteOvertimeCustom(this);
                }
                return this.mUILcDeleteOvertimeCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcDeleteOvertimeCustom mUILcDeleteOvertimeCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcDeleteOvertimeCustom : DXTestControl
    {
        
        public UILcDeleteOvertimeCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcDeleteOvertime";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Slette forskyvninger og ekstravakter");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup1 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup1(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup1 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Slette forskyvninger og ekstravakter");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem6LayoutControlItem UILayoutControlItem6LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem6LayoutControlItem == null))
                {
                    this.mUILayoutControlItem6LayoutControlItem = new UILayoutControlItem6LayoutControlItem(this);
                }
                return this.mUILayoutControlItem6LayoutControlItem;
            }
        }
        
        public UILayoutControlItem4LayoutControlItem UILayoutControlItem4LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem4LayoutControlItem == null))
                {
                    this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem(this);
                }
                return this.mUILayoutControlItem4LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem6LayoutControlItem mUILayoutControlItem6LayoutControlItem;
        
        private UILayoutControlItem4LayoutControlItem mUILayoutControlItem4LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem6LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem6LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Slette forskyvninger og ekstravakter");
            #endregion
        }
        
        #region Properties
        public UITlDeleteShiftsTreeList UITlDeleteShiftsTreeList
        {
            get
            {
                if ((this.mUITlDeleteShiftsTreeList == null))
                {
                    this.mUITlDeleteShiftsTreeList = new UITlDeleteShiftsTreeList(this);
                }
                return this.mUITlDeleteShiftsTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UITlDeleteShiftsTreeList mUITlDeleteShiftsTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITlDeleteShiftsTreeList : DXTreeList
    {
        
        public UITlDeleteShiftsTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlDeleteShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
            this.WindowTitles.Add("Slette forskyvninger og ekstravakter");
            #endregion
        }
        
        #region Properties
        public DXTreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode0TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
                    this.mUINode0TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode0TreeListNode.WindowTitles.Add("Slette forskyvninger og ekstravakter");
                    #endregion
                }
                return this.mUINode0TreeListNode;
            }
        }
        
        public DXTreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode1TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
                    this.mUINode1TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode1TreeListNode.WindowTitles.Add("Slette forskyvninger og ekstravakter");
                    #endregion
                }
                return this.mUINode1TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListNode mUINode0TreeListNode;
        
        private DXTreeListNode mUINode1TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem4LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem4LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Slette forskyvninger og ekstravakter");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Slette forskyvninger og ekstravakter");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow6 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow6()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow16 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow16(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow16 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow16 : WinWindow
    {
        
        public UIItemWindow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIAnsatteClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIForskyvningWindow : DXWindow
    {
        
        public UIForskyvningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Forskyvning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIPanClientPanelClient UIPanClientPanelClient
        {
            get
            {
                if ((this.mUIPanClientPanelClient == null))
                {
                    this.mUIPanClientPanelClient = new UIPanClientPanelClient(this);
                }
                return this.mUIPanClientPanelClient;
            }
        }
        
        public UIPanBottomPanelClient UIPanBottomPanelClient
        {
            get
            {
                if ((this.mUIPanBottomPanelClient == null))
                {
                    this.mUIPanBottomPanelClient = new UIPanBottomPanelClient(this);
                }
                return this.mUIPanBottomPanelClient;
            }
        }
        
        public UIPanHeaderPanelClient UIPanHeaderPanelClient
        {
            get
            {
                if ((this.mUIPanHeaderPanelClient == null))
                {
                    this.mUIPanHeaderPanelClient = new UIPanHeaderPanelClient(this);
                }
                return this.mUIPanHeaderPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientPanelClient mUIPanClientPanelClient;
        
        private UIPanBottomPanelClient mUIPanBottomPanelClient;
        
        private UIPanHeaderPanelClient mUIPanHeaderPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanClientPanelClient : DXTestControl
    {
        
        public UIPanClientPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClientPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIBnMenuNavBar UIBnMenuNavBar
        {
            get
            {
                if ((this.mUIBnMenuNavBar == null))
                {
                    this.mUIBnMenuNavBar = new UIBnMenuNavBar(this);
                }
                return this.mUIBnMenuNavBar;
            }
        }
        
        public UIGpcMainClient UIGpcMainClient
        {
            get
            {
                if ((this.mUIGpcMainClient == null))
                {
                    this.mUIGpcMainClient = new UIGpcMainClient(this);
                }
                return this.mUIGpcMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIBnMenuNavBar mUIBnMenuNavBar;
        
        private UIGpcMainClient mUIGpcMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBnMenuNavBar : DXNavBar
    {
        
        public UIBnMenuNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bnMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UINbgcOvertimeCodeScrollableControl UINbgcOvertimeCodeScrollableControl
        {
            get
            {
                if ((this.mUINbgcOvertimeCodeScrollableControl == null))
                {
                    this.mUINbgcOvertimeCodeScrollableControl = new UINbgcOvertimeCodeScrollableControl(this);
                }
                return this.mUINbgcOvertimeCodeScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcOvertimeCodeScrollableControl mUINbgcOvertimeCodeScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgcOvertimeCodeScrollableControl : DXScrollableControl
    {
        
        public UINbgcOvertimeCodeScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcOvertimeCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UILeOvertimeCodeLookUpEdit UILeOvertimeCodeLookUpEdit
        {
            get
            {
                if ((this.mUILeOvertimeCodeLookUpEdit == null))
                {
                    this.mUILeOvertimeCodeLookUpEdit = new UILeOvertimeCodeLookUpEdit(this);
                }
                return this.mUILeOvertimeCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILeOvertimeCodeLookUpEdit mUILeOvertimeCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILeOvertimeCodeLookUpEdit : DXLookUpEdit
    {
        
        public UILeOvertimeCodeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leOvertimeCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "leOvertimeCodePopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGpcMainClient : DXTestControl
    {
        
        public UIGpcMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList1 UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList1(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList1 mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcClientTabList1 : DXTestControl
    {
        
        public UITcClientTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpMainClient UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient(this);
                }
                return this.mUITpMainClient;
            }
        }
        
        public UITpWEAClient2 UITpWEAClient
        {
            get
            {
                if ((this.mUITpWEAClient == null))
                {
                    this.mUITpWEAClient = new UITpWEAClient2(this);
                }
                return this.mUITpWEAClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient mUITpMainClient;
        
        private UITpWEAClient2 mUITpWEAClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpMainClient : DXTestControl
    {
        
        public UITpMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGpcShiftsClient UIGpcShiftsClient
        {
            get
            {
                if ((this.mUIGpcShiftsClient == null))
                {
                    this.mUIGpcShiftsClient = new UIGpcShiftsClient(this);
                }
                return this.mUIGpcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGpcShiftsClient mUIGpcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGpcShiftsClient : DXTestControl
    {
        
        public UIGpcShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGcNewShiftsClient UIGcNewShiftsClient
        {
            get
            {
                if ((this.mUIGcNewShiftsClient == null))
                {
                    this.mUIGcNewShiftsClient = new UIGcNewShiftsClient(this);
                }
                return this.mUIGcNewShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcNewShiftsClient mUIGcNewShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcNewShiftsClient : DXTestControl
    {
        
        public UIGcNewShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNewShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgledigevakterButton
        {
            get
            {
                if ((this.mUIVelgledigevakterButton == null))
                {
                    this.mUIVelgledigevakterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgledigevakterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "bSelectUnoccupiedShifts";
                    this.mUIVelgledigevakterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgledigevakterButton.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIVelgledigevakterButton;
            }
        }
        
        public UITcNewShiftTabList UITcNewShiftTabList
        {
            get
            {
                if ((this.mUITcNewShiftTabList == null))
                {
                    this.mUITcNewShiftTabList = new UITcNewShiftTabList(this);
                }
                return this.mUITcNewShiftTabList;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgledigevakterButton;
        
        private UITcNewShiftTabList mUITcNewShiftTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcNewShiftTabList : DXTestControl
    {
        
        public UITcNewShiftTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpSimpleShiftCtrlClient UITpSimpleShiftCtrlClient
        {
            get
            {
                if ((this.mUITpSimpleShiftCtrlClient == null))
                {
                    this.mUITpSimpleShiftCtrlClient = new UITpSimpleShiftCtrlClient(this);
                }
                return this.mUITpSimpleShiftCtrlClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpSimpleShiftCtrlClient mUITpSimpleShiftCtrlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpSimpleShiftCtrlClient : DXTestControl
    {
        
        public UITpSimpleShiftCtrlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpSimpleShiftCtrl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIMainPanelClient UIMainPanelClient
        {
            get
            {
                if ((this.mUIMainPanelClient == null))
                {
                    this.mUIMainPanelClient = new UIMainPanelClient(this);
                }
                return this.mUIMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIMainPanelClient mUIMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainPanelClient : DXTestControl
    {
        
        public UIMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "MainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        
        public UICbShiftCodeLookUpEdit UICbShiftCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbShiftCodeLookUpEdit == null))
                {
                    this.mUICbShiftCodeLookUpEdit = new UICbShiftCodeLookUpEdit(this);
                }
                return this.mUICbShiftCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        
        private UICbShiftCodeLookUpEdit mUICbShiftCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICbShiftCodeLookUpEdit : DXLookUpEdit
    {
        
        public UICbShiftCodeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCodePopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWEAClient2 : DXTestControl
    {
        
        public UITpWEAClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWEA";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGsGroupControl2Client2 UIGsGroupControl2Client
        {
            get
            {
                if ((this.mUIGsGroupControl2Client == null))
                {
                    this.mUIGsGroupControl2Client = new UIGsGroupControl2Client2(this);
                }
                return this.mUIGsGroupControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGroupControl2Client2 mUIGsGroupControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsGroupControl2Client2 : DXTestControl
    {
        
        public UIGsGroupControl2Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGroupControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListTable2 UIGWeaBreakListTable
        {
            get
            {
                if ((this.mUIGWeaBreakListTable == null))
                {
                    this.mUIGWeaBreakListTable = new UIGWeaBreakListTable2(this);
                }
                return this.mUIGWeaBreakListTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListTable2 mUIGWeaBreakListTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListTable2 : DXGrid
    {
        
        public UIGWeaBreakListTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXCell UIUkentligarbeidsfri32Cell
        {
            get
            {
                if ((this.mUIUkentligarbeidsfri32Cell == null))
                {
                    this.mUIUkentligarbeidsfri32Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]0[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIUkentligarbeidsfri32Cell.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIUkentligarbeidsfri32Cell;
            }
        }
        
        public DXCell UIPlanlagtuke50004800Cell
        {
            get
            {
                if ((this.mUIPlanlagtuke50004800Cell == null))
                {
                    this.mUIPlanlagtuke50004800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPlanlagtuke50004800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]1[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIPlanlagtuke50004800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPlanlagtuke50004800Cell.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIPlanlagtuke50004800Cell;
            }
        }
        
        public DXCell UIPlanlagtuke60004800Cell
        {
            get
            {
                if ((this.mUIPlanlagtuke60004800Cell == null))
                {
                    this.mUIPlanlagtuke60004800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPlanlagtuke60004800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]2[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIPlanlagtuke60004800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPlanlagtuke60004800Cell.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIPlanlagtuke60004800Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIUkentligarbeidsfri32Cell;
        
        private DXCell mUIPlanlagtuke50004800Cell;
        
        private DXCell mUIPlanlagtuke60004800Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanBottomPanelClient : DXTestControl
    {
        
        public UIPanBottomPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panBottomPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXButton UILønnButton
        {
            get
            {
                if ((this.mUILønnButton == null))
                {
                    this.mUILønnButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILønnButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btPaymentRecalculate";
                    this.mUILønnButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILønnButton.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUILønnButton;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILønnButton;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanHeaderPanelClient : DXTestControl
    {
        
        public UIPanHeaderPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panHeaderPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UILnkDetail0PopupEdit
        {
            get
            {
                if ((this.mUILnkDetail0PopupEdit == null))
                {
                    this.mUILnkDetail0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail[0]";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUILnkDetail0PopupEdit.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUILnkDetail0PopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUILnkDetail0PopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow71 : DXWindow
    {
        
        public UIItemWindow71()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = " ";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControl1Custom : DXTestControl
    {
        
        public UIGsLayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup mUILayoutControlGroup1LayoutGroup;
        
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroup1LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem3LayoutControlItem UILayoutControlItem3LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem3LayoutControlItem == null))
                {
                    this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem(this);
                }
                return this.mUILayoutControlItem3LayoutControlItem;
            }
        }
        
        public UILayoutControlItem1LayoutControlItem UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem3LayoutControlItem mUILayoutControlItem3LayoutControlItem;
        
        private UILayoutControlItem1LayoutControlItem mUILayoutControlItem1LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem3LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem3LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UIGUnoccupiedShiftsTable UIGUnoccupiedShiftsTable
        {
            get
            {
                if ((this.mUIGUnoccupiedShiftsTable == null))
                {
                    this.mUIGUnoccupiedShiftsTable = new UIGUnoccupiedShiftsTable(this);
                }
                return this.mUIGUnoccupiedShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGUnoccupiedShiftsTable mUIGUnoccupiedShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGUnoccupiedShiftsTable : DXGrid
    {
        
        public UIGUnoccupiedShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsGridControlCell[View]gridView1[Row]32[Column]gcSeleced";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCheckBox UICheckEditCheckBox
        {
            get
            {
                if ((this.mUICheckEditCheckBox == null))
                {
                    this.mUICheckEditCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsCheckEdit[View]gridView1[Row]32[Column]gcSeleced";
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUICheckEditCheckBox.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUICheckEditCheckBox;
            }
        }
        
        public DXCell UIIkkevalgtCell1
        {
            get
            {
                if ((this.mUIIkkevalgtCell1 == null))
                {
                    this.mUIIkkevalgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsGridControlCell[View]gridView1[Row]34[Column]gcSeleced";
                    this.mUIIkkevalgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell1.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIIkkevalgtCell1;
            }
        }
        
        public DXCheckBox UICheckEditCheckBox1
        {
            get
            {
                if ((this.mUICheckEditCheckBox1 == null))
                {
                    this.mUICheckEditCheckBox1 = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICheckEditCheckBox1.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsCheckEdit[View]gridView1[Row]34[Column]gcSeleced";
                    this.mUICheckEditCheckBox1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUICheckEditCheckBox1.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUICheckEditCheckBox1;
            }
        }
        
        public DXCell UIIkkevalgtCell2
        {
            get
            {
                if ((this.mUIIkkevalgtCell2 == null))
                {
                    this.mUIIkkevalgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsGridControlCell[View]gridView1[Row]30[Column]gcSeleced";
                    this.mUIIkkevalgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell2.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIIkkevalgtCell2;
            }
        }
        
        public DXCheckBox UICheckEditCheckBox2
        {
            get
            {
                if ((this.mUICheckEditCheckBox2 == null))
                {
                    this.mUICheckEditCheckBox2 = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICheckEditCheckBox2.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsCheckEdit[View]gridView1[Row]30[Column]gcSeleced";
                    this.mUICheckEditCheckBox2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUICheckEditCheckBox2.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUICheckEditCheckBox2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIkkevalgtCell;
        
        private DXCheckBox mUICheckEditCheckBox;
        
        private DXCell mUIIkkevalgtCell1;
        
        private DXCheckBox mUICheckEditCheckBox1;
        
        private DXCell mUIIkkevalgtCell2;
        
        private DXCheckBox mUICheckEditCheckBox2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem1LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl2Client UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl2Client mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl2Client : DXTestControl
    {
        
        public UIGsPanelControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private DXPopupEdit mUIPceDate0PopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEndrevakterWindow : DXWindow
    {
        
        public UIEndrevakterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Endre vakt(er)";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client1 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client1(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public UIGSDialogFooterBarCustom2 UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom2(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client1 mUIGsPanelControl1Client;
        
        private UIGSDialogFooterBarCustom2 mUIGSDialogFooterBarCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client1 : DXTestControl
    {
        
        public UIGsPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UIGcShiftEditClient UIGcShiftEditClient
        {
            get
            {
                if ((this.mUIGcShiftEditClient == null))
                {
                    this.mUIGcShiftEditClient = new UIGcShiftEditClient(this);
                }
                return this.mUIGcShiftEditClient;
            }
        }
        
        public UIGcShiftListClient UIGcShiftListClient
        {
            get
            {
                if ((this.mUIGcShiftListClient == null))
                {
                    this.mUIGcShiftListClient = new UIGcShiftListClient(this);
                }
                return this.mUIGcShiftListClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftEditClient mUIGcShiftEditClient;
        
        private UIGcShiftListClient mUIGcShiftListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcShiftEditClient : DXTestControl
    {
        
        public UIGcShiftEditClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UIPnlShiftEditScrollableControl UIPnlShiftEditScrollableControl
        {
            get
            {
                if ((this.mUIPnlShiftEditScrollableControl == null))
                {
                    this.mUIPnlShiftEditScrollableControl = new UIPnlShiftEditScrollableControl(this);
                }
                return this.mUIPnlShiftEditScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlShiftEditScrollableControl mUIPnlShiftEditScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlShiftEditScrollableControl : DXScrollableControl
    {
        
        public UIPnlShiftEditScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlShiftEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSScrollableControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UICbShiftCodesLookUpEdit UICbShiftCodesLookUpEdit
        {
            get
            {
                if ((this.mUICbShiftCodesLookUpEdit == null))
                {
                    this.mUICbShiftCodesLookUpEdit = new UICbShiftCodesLookUpEdit(this);
                }
                return this.mUICbShiftCodesLookUpEdit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Endre vakt(er)");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        #endregion
        
        #region Fields
        private UICbShiftCodesLookUpEdit mUICbShiftCodesLookUpEdit;
        
        private DXTextEdit mUIETime1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICbShiftCodesLookUpEdit : DXLookUpEdit
    {
        
        public UICbShiftCodesLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButton1Button
        {
            get
            {
                if ((this.mUIEditorButton1Button == null))
                {
                    this.mUIEditorButton1Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCodesButton[1]";
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton1Button.WindowTitles.Add("Endre vakt(er)");
                    #endregion
                }
                return this.mUIEditorButton1Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButton1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcShiftListClient : DXTestControl
    {
        
        public UIGcShiftListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public UIGcShiftsTable1 UIGcShiftsTable
        {
            get
            {
                if ((this.mUIGcShiftsTable == null))
                {
                    this.mUIGcShiftsTable = new UIGcShiftsTable1(this);
                }
                return this.mUIGcShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftsTable1 mUIGcShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcShiftsTable1 : DXGrid
    {
        
        public UIGcShiftsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem2060AMLavdeling1Cell
        {
            get
            {
                if ((this.mUIItem2060AMLavdeling1Cell == null))
                {
                    this.mUIItem2060AMLavdeling1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2060AMLavdeling1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]1[Column]gccDepartment";
                    this.mUIItem2060AMLavdeling1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2060AMLavdeling1Cell.WindowTitles.Add("Endre vakt(er)");
                    #endregion
                }
                return this.mUIItem2060AMLavdeling1Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem2060AMLavdeling1Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSDialogFooterBarCustom2 : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsDialogFooterBar";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Endre vakt(er)");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Endre vakt(er)");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBytteWindow : DXWindow
    {
        
        public UIBytteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client2 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client2(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public DXPopupEdit UILnkDetail0PopupEdit
        {
            get
            {
                if ((this.mUILnkDetail0PopupEdit == null))
                {
                    this.mUILnkDetail0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail[0]";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
                    this.mUILnkDetail0PopupEdit.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUILnkDetail0PopupEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public UIGsPanelControl1Client11 UIGsPanelControl1Client1
        {
            get
            {
                if ((this.mUIGsPanelControl1Client1 == null))
                {
                    this.mUIGsPanelControl1Client1 = new UIGsPanelControl1Client11(this);
                }
                return this.mUIGsPanelControl1Client1;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client2 mUIGsPanelControl1Client;
        
        private DXPopupEdit mUILnkDetail0PopupEdit;
        
        private DXButton mUIOKButton;
        
        private UIGsPanelControl1Client11 mUIGsPanelControl1Client1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client2 : DXTestControl
    {
        
        public UIGsPanelControl1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGsTabTabList UIGsTabTabList
        {
            get
            {
                if ((this.mUIGsTabTabList == null))
                {
                    this.mUIGsTabTabList = new UIGsTabTabList(this);
                }
                return this.mUIGsTabTabList;
            }
        }
        
        public UIGrpPeriodClient UIGrpPeriodClient
        {
            get
            {
                if ((this.mUIGrpPeriodClient == null))
                {
                    this.mUIGrpPeriodClient = new UIGrpPeriodClient(this);
                }
                return this.mUIGrpPeriodClient;
            }
        }
        
        public UIGrpEmployee1Client UIGrpEmployee1Client
        {
            get
            {
                if ((this.mUIGrpEmployee1Client == null))
                {
                    this.mUIGrpEmployee1Client = new UIGrpEmployee1Client(this);
                }
                return this.mUIGrpEmployee1Client;
            }
        }
        
        public UIGSGroupControlClient1 UIGSGroupControlClient
        {
            get
            {
                if ((this.mUIGSGroupControlClient == null))
                {
                    this.mUIGSGroupControlClient = new UIGSGroupControlClient1(this);
                }
                return this.mUIGSGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsTabTabList mUIGsTabTabList;
        
        private UIGrpPeriodClient mUIGrpPeriodClient;
        
        private UIGrpEmployee1Client mUIGrpEmployee1Client;
        
        private UIGSGroupControlClient1 mUIGSGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsTabTabList : DXTestControl
    {
        
        public UIGsTabTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTab";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITpWeaClient3 UITpWeaClient
        {
            get
            {
                if ((this.mUITpWeaClient == null))
                {
                    this.mUITpWeaClient = new UITpWeaClient3(this);
                }
                return this.mUITpWeaClient;
            }
        }
        
        public UITpShiftExchangeClient UITpShiftExchangeClient
        {
            get
            {
                if ((this.mUITpShiftExchangeClient == null))
                {
                    this.mUITpShiftExchangeClient = new UITpShiftExchangeClient(this);
                }
                return this.mUITpShiftExchangeClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpWeaClient3 mUITpWeaClient;
        
        private UITpShiftExchangeClient mUITpShiftExchangeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaClient3 : DXTestControl
    {
        
        public UITpWeaClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITcWeaTabList UITcWeaTabList
        {
            get
            {
                if ((this.mUITcWeaTabList == null))
                {
                    this.mUITcWeaTabList = new UITcWeaTabList(this);
                }
                return this.mUITcWeaTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcWeaTabList mUITcWeaTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcWeaTabList : DXTestControl
    {
        
        public UITcWeaTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITpWeaEmployee1Client UITpWeaEmployee1Client
        {
            get
            {
                if ((this.mUITpWeaEmployee1Client == null))
                {
                    this.mUITpWeaEmployee1Client = new UITpWeaEmployee1Client(this);
                }
                return this.mUITpWeaEmployee1Client;
            }
        }
        
        public UITpWeaEmployee2Client UITpWeaEmployee2Client
        {
            get
            {
                if ((this.mUITpWeaEmployee2Client == null))
                {
                    this.mUITpWeaEmployee2Client = new UITpWeaEmployee2Client(this);
                }
                return this.mUITpWeaEmployee2Client;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tcWeaPageHeader1";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UITpWeaEmployee1Client mUITpWeaEmployee1Client;
        
        private UITpWeaEmployee2Client mUITpWeaEmployee2Client;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaEmployee1Client : DXTestControl
    {
        
        public UITpWeaEmployee1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWeaEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsSplitContainerContSplitContainerControl : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISplitGroupPanelClient : DXTestControl
    {
        
        public UISplitGroupPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl3SplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcWeaBreakEmployee1Client UIGcWeaBreakEmployee1Client
        {
            get
            {
                if ((this.mUIGcWeaBreakEmployee1Client == null))
                {
                    this.mUIGcWeaBreakEmployee1Client = new UIGcWeaBreakEmployee1Client(this);
                }
                return this.mUIGcWeaBreakEmployee1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGcWeaBreakEmployee1Client mUIGcWeaBreakEmployee1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcWeaBreakEmployee1Client : DXTestControl
    {
        
        public UIGcWeaBreakEmployee1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWeaBreakEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListEmployeTable UIGWeaBreakListEmployeTable
        {
            get
            {
                if ((this.mUIGWeaBreakListEmployeTable == null))
                {
                    this.mUIGWeaBreakListEmployeTable = new UIGWeaBreakListEmployeTable(this);
                }
                return this.mUIGWeaBreakListEmployeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListEmployeTable mUIGWeaBreakListEmployeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListEmployeTable : DXGrid
    {
        
        public UIGWeaBreakListEmployeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UISøndager200200Cell
        {
            get
            {
                if ((this.mUISøndager200200Cell == null))
                {
                    this.mUISøndager200200Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUISøndager200200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1GridControlCell[View]gvWeaBreakListEmployee1[Row]0[Column]g" +
                        "vWeaBreakColumn_Caption";
                    this.mUISøndager200200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISøndager200200Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUISøndager200200Cell;
            }
        }
        
        public DXCell UIUkentligarbeidsfri32Cell
        {
            get
            {
                if ((this.mUIUkentligarbeidsfri32Cell == null))
                {
                    this.mUIUkentligarbeidsfri32Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1GridControlCell[View]gvWeaBreakListEmployee1[Row]2[Column]g" +
                        "vWeaBreakColumn_Caption";
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIUkentligarbeidsfri32Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIUkentligarbeidsfri32Cell;
            }
        }
        
        public DXCell UISøndager200200Cell1
        {
            get
            {
                if ((this.mUISøndager200200Cell1 == null))
                {
                    this.mUISøndager200200Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUISøndager200200Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1GridControlCell[View]gvWeaBreakListEmployee1[Row]3[Column]g" +
                        "vWeaBreakColumn_Caption";
                    this.mUISøndager200200Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISøndager200200Cell1.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUISøndager200200Cell1;
            }
        }
        
        public DXCell UIPlanlagtuke56005400Cell
        {
            get
            {
                if ((this.mUIPlanlagtuke56005400Cell == null))
                {
                    this.mUIPlanlagtuke56005400Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPlanlagtuke56005400Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1GridControlCell[View]gvWeaBreakListEmployee1[Row]4[Column]g" +
                        "vWeaBreakColumn_Caption";
                    this.mUIPlanlagtuke56005400Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPlanlagtuke56005400Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIPlanlagtuke56005400Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISøndager200200Cell;
        
        private DXCell mUIUkentligarbeidsfri32Cell;
        
        private DXCell mUISøndager200200Cell1;
        
        private DXCell mUIPlanlagtuke56005400Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaEmployee2Client : DXTestControl
    {
        
        public UITpWeaEmployee2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWeaEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl1 UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl1(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl1 mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsSplitContainerContSplitContainerControl1 : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient1 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient1(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient1 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISplitGroupPanelClient1 : DXTestControl
    {
        
        public UISplitGroupPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl2SplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcWeaBreakEmployee2Client UIGcWeaBreakEmployee2Client
        {
            get
            {
                if ((this.mUIGcWeaBreakEmployee2Client == null))
                {
                    this.mUIGcWeaBreakEmployee2Client = new UIGcWeaBreakEmployee2Client(this);
                }
                return this.mUIGcWeaBreakEmployee2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGcWeaBreakEmployee2Client mUIGcWeaBreakEmployee2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcWeaBreakEmployee2Client : DXTestControl
    {
        
        public UIGcWeaBreakEmployee2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWeaBreakEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListEmployeTable1 UIGWeaBreakListEmployeTable
        {
            get
            {
                if ((this.mUIGWeaBreakListEmployeTable == null))
                {
                    this.mUIGWeaBreakListEmployeTable = new UIGWeaBreakListEmployeTable1(this);
                }
                return this.mUIGWeaBreakListEmployeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListEmployeTable1 mUIGWeaBreakListEmployeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListEmployeTable1 : DXGrid
    {
        
        public UIGWeaBreakListEmployeTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UIUkentligarbeidsfri32Cell
        {
            get
            {
                if ((this.mUIUkentligarbeidsfri32Cell == null))
                {
                    this.mUIUkentligarbeidsfri32Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee2GridControlCell[View]gvWeaBreaklistEmployee2[Row]0[Column]g" +
                        "ridColumn1";
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIUkentligarbeidsfri32Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIUkentligarbeidsfri32Cell;
            }
        }
        
        public DXCell UIPlanlagtuke50004800Cell
        {
            get
            {
                if ((this.mUIPlanlagtuke50004800Cell == null))
                {
                    this.mUIPlanlagtuke50004800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPlanlagtuke50004800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee2GridControlCell[View]gvWeaBreaklistEmployee2[Row]1[Column]g" +
                        "ridColumn1";
                    this.mUIPlanlagtuke50004800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPlanlagtuke50004800Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIPlanlagtuke50004800Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIUkentligarbeidsfri32Cell;
        
        private DXCell mUIPlanlagtuke50004800Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpShiftExchangeClient : DXTestControl
    {
        
        public UITpShiftExchangeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpShiftExchange";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGrpEmployee2ShiftsClient UIGrpEmployee2ShiftsClient
        {
            get
            {
                if ((this.mUIGrpEmployee2ShiftsClient == null))
                {
                    this.mUIGrpEmployee2ShiftsClient = new UIGrpEmployee2ShiftsClient(this);
                }
                return this.mUIGrpEmployee2ShiftsClient;
            }
        }
        
        public DXButton UIBtnGiveEmployee1Button
        {
            get
            {
                if ((this.mUIBtnGiveEmployee1Button == null))
                {
                    this.mUIBtnGiveEmployee1Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnGiveEmployee1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGiveEmployee1";
                    this.mUIBtnGiveEmployee1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnGiveEmployee1Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnGiveEmployee1Button.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIBtnGiveEmployee1Button;
            }
        }
        
        public UIGrpEmployee1ShiftsClient UIGrpEmployee1ShiftsClient
        {
            get
            {
                if ((this.mUIGrpEmployee1ShiftsClient == null))
                {
                    this.mUIGrpEmployee1ShiftsClient = new UIGrpEmployee1ShiftsClient(this);
                }
                return this.mUIGrpEmployee1ShiftsClient;
            }
        }
        
        public DXButton UIBtnGiveEmployee2Button
        {
            get
            {
                if ((this.mUIBtnGiveEmployee2Button == null))
                {
                    this.mUIBtnGiveEmployee2Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGiveEmployee2";
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnGiveEmployee2Button.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIBtnGiveEmployee2Button;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEmployee2ShiftsClient mUIGrpEmployee2ShiftsClient;
        
        private DXButton mUIBtnGiveEmployee1Button;
        
        private UIGrpEmployee1ShiftsClient mUIGrpEmployee1ShiftsClient;
        
        private DXButton mUIBtnGiveEmployee2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEmployee2ShiftsClient : DXTestControl
    {
        
        public UIGrpEmployee2ShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee2Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcEmployment2ShiftsTable UIGcEmployment2ShiftsTable
        {
            get
            {
                if ((this.mUIGcEmployment2ShiftsTable == null))
                {
                    this.mUIGcEmployment2ShiftsTable = new UIGcEmployment2ShiftsTable(this);
                }
                return this.mUIGcEmployment2ShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployment2ShiftsTable mUIGcEmployment2ShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcEmployment2ShiftsTable : DXGrid
    {
        
        public UIGcEmployment2ShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment2Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UILørdagCell
        {
            get
            {
                if ((this.mUILørdagCell == null))
                {
                    this.mUILørdagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILørdagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment2ShiftsGridControlCell[View]gvEmployment2Shifts[Row]0[Column]colDayOf" +
                        "Week2";
                    this.mUILørdagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILørdagCell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUILørdagCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUILørdagCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEmployee1ShiftsClient : DXTestControl
    {
        
        public UIGrpEmployee1ShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee1Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcEmployment1ShiftsTable UIGcEmployment1ShiftsTable
        {
            get
            {
                if ((this.mUIGcEmployment1ShiftsTable == null))
                {
                    this.mUIGcEmployment1ShiftsTable = new UIGcEmployment1ShiftsTable(this);
                }
                return this.mUIGcEmployment1ShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployment1ShiftsTable mUIGcEmployment1ShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcEmployment1ShiftsTable : DXGrid
    {
        
        public UIGcEmployment1ShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment1Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment1ShiftsGridControlCell[View]gvEmployment1Shifts[Row]11[Column]colStat" +
                        "usCode";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpPeriodClient : DXTestControl
    {
        
        public UIGrpPeriodClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private DXPopupEdit mUIPceDate1PopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEmployee1Client : DXTestControl
    {
        
        public UIGrpEmployee1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISleEmployment1LookUpEdit UISleEmployment1LookUpEdit
        {
            get
            {
                if ((this.mUISleEmployment1LookUpEdit == null))
                {
                    this.mUISleEmployment1LookUpEdit = new UISleEmployment1LookUpEdit(this);
                }
                return this.mUISleEmployment1LookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UISleEmployment1LookUpEdit mUISleEmployment1LookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISleEmployment1LookUpEdit : DXLookUpEdit
    {
        
        public UISleEmployment1LookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow2 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow2(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow2 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupSearchLookUpEdiWindow2 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment1PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom2 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom2(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom2 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISearchEditLookUpPopuCustom2 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILCCustom2 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom2(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom2 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILCCustom2 : DXTestControl
    {
        
        public UILCCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup2 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup2(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup2 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcMainLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup1 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup1(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup1 mUILcgFindLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcgFindLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem1 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem1(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem1 mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciLabelFindLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSGroupControlClient1 : DXTestControl
    {
        
        public UIGSGroupControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment2";
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client11 : DXTestControl
    {
        
        public UIGsPanelControl1Client11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGrpEmployee1Client1 UIGrpEmployee1Client
        {
            get
            {
                if ((this.mUIGrpEmployee1Client == null))
                {
                    this.mUIGrpEmployee1Client = new UIGrpEmployee1Client1(this);
                }
                return this.mUIGrpEmployee1Client;
            }
        }
        
        public UIGrpEmployee2Client UIGrpEmployee2Client
        {
            get
            {
                if ((this.mUIGrpEmployee2Client == null))
                {
                    this.mUIGrpEmployee2Client = new UIGrpEmployee2Client(this);
                }
                return this.mUIGrpEmployee2Client;
            }
        }
        
        public UIGsTabTabList1 UIGsTabTabList
        {
            get
            {
                if ((this.mUIGsTabTabList == null))
                {
                    this.mUIGsTabTabList = new UIGsTabTabList1(this);
                }
                return this.mUIGsTabTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEmployee1Client1 mUIGrpEmployee1Client;
        
        private UIGrpEmployee2Client mUIGrpEmployee2Client;
        
        private UIGsTabTabList1 mUIGsTabTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEmployee1Client1 : DXTestControl
    {
        
        public UIGrpEmployee1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISleEmployment1LookUpEdit1 UISleEmployment1LookUpEdit
        {
            get
            {
                if ((this.mUISleEmployment1LookUpEdit == null))
                {
                    this.mUISleEmployment1LookUpEdit = new UISleEmployment1LookUpEdit1(this);
                }
                return this.mUISleEmployment1LookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UISleEmployment1LookUpEdit1 mUISleEmployment1LookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISleEmployment1LookUpEdit1 : DXLookUpEdit
    {
        
        public UISleEmployment1LookUpEdit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow3 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow3(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow3 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupSearchLookUpEdiWindow3 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment1PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom3 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom3(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom3 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISearchEditLookUpPopuCustom3 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILCCustom3 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom3(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom3 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILCCustom3 : DXTestControl
    {
        
        public UILCCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup3 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup3(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup3 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcMainLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILciGridLayoutControlItem1 UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem1(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        
        public UILcgFindLayoutGroup2 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup2(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILciGridLayoutControlItem1 mUILciGridLayoutControlItem;
        
        private UILcgFindLayoutGroup2 mUILcgFindLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciGridLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGridControlTable : DXGrid
    {
        
        public UIGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UICelsiusCell
        {
            get
            {
                if ((this.mUICelsiusCell == null))
                {
                    this.mUICelsiusCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICelsiusCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gsSearchLookUpEdit1View[Row]2[Column]co" +
                        "lEmployment1LastName";
                    this.mUICelsiusCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICelsiusCell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUICelsiusCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUICelsiusCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcgFindLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem2 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem2(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem2 mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciLabelFindLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEmployee2Client : DXTestControl
    {
        
        public UIGrpEmployee2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISleEmployment2LookUpEdit UISleEmployment2LookUpEdit
        {
            get
            {
                if ((this.mUISleEmployment2LookUpEdit == null))
                {
                    this.mUISleEmployment2LookUpEdit = new UISleEmployment2LookUpEdit(this);
                }
                return this.mUISleEmployment2LookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UISleEmployment2LookUpEdit mUISleEmployment2LookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISleEmployment2LookUpEdit : DXLookUpEdit
    {
        
        public UISleEmployment2LookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow4 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow4(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow4 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupSearchLookUpEdiWindow4 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment2PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom4 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom4(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom4 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISearchEditLookUpPopuCustom4 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILCCustom4 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom4(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom4 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILCCustom4 : DXTestControl
    {
        
        public UILCCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup4 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup4(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup4 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcMainLayoutGroup4 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILciGridLayoutControlItem2 UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem2(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        
        public UILcgFindLayoutGroup3 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup3(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILciGridLayoutControlItem2 mUILciGridLayoutControlItem;
        
        private UILcgFindLayoutGroup3 mUILcgFindLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciGridLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable1 UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable1(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable1 mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGridControlTable1 : DXGrid
    {
        
        public UIGridControlTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UIBosseCell
        {
            get
            {
                if ((this.mUIBosseCell == null))
                {
                    this.mUIBosseCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBosseCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gridView11[Row]1[Column]colEmployment2F" +
                        "irstName";
                    this.mUIBosseCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBosseCell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIBosseCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIBosseCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcgFindLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem3 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem3(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem3 mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciLabelFindLayoutControlItem3 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsTabTabList1 : DXTestControl
    {
        
        public UIGsTabTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTab";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITpWeaClient4 UITpWeaClient
        {
            get
            {
                if ((this.mUITpWeaClient == null))
                {
                    this.mUITpWeaClient = new UITpWeaClient4(this);
                }
                return this.mUITpWeaClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpWeaClient4 mUITpWeaClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaClient4 : DXTestControl
    {
        
        public UITpWeaClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITcWeaTabList1 UITcWeaTabList
        {
            get
            {
                if ((this.mUITcWeaTabList == null))
                {
                    this.mUITcWeaTabList = new UITcWeaTabList1(this);
                }
                return this.mUITcWeaTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcWeaTabList1 mUITcWeaTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcWeaTabList1 : DXTestControl
    {
        
        public UITcWeaTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITpWeaEmployee1Client1 UITpWeaEmployee1Client
        {
            get
            {
                if ((this.mUITpWeaEmployee1Client == null))
                {
                    this.mUITpWeaEmployee1Client = new UITpWeaEmployee1Client1(this);
                }
                return this.mUITpWeaEmployee1Client;
            }
        }
        
        public UITpWeaEmployee2Client1 UITpWeaEmployee2Client
        {
            get
            {
                if ((this.mUITpWeaEmployee2Client == null))
                {
                    this.mUITpWeaEmployee2Client = new UITpWeaEmployee2Client1(this);
                }
                return this.mUITpWeaEmployee2Client;
            }
        }
        #endregion
        
        #region Fields
        private UITpWeaEmployee1Client1 mUITpWeaEmployee1Client;
        
        private UITpWeaEmployee2Client1 mUITpWeaEmployee2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaEmployee1Client1 : DXTestControl
    {
        
        public UITpWeaEmployee1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWeaEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl2 UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl2(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl2 mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsSplitContainerContSplitContainerControl2 : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient2 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient2(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient2 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISplitGroupPanelClient2 : DXTestControl
    {
        
        public UISplitGroupPanelClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl3SplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcWeaBreakEmployee1Client1 UIGcWeaBreakEmployee1Client
        {
            get
            {
                if ((this.mUIGcWeaBreakEmployee1Client == null))
                {
                    this.mUIGcWeaBreakEmployee1Client = new UIGcWeaBreakEmployee1Client1(this);
                }
                return this.mUIGcWeaBreakEmployee1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGcWeaBreakEmployee1Client1 mUIGcWeaBreakEmployee1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcWeaBreakEmployee1Client1 : DXTestControl
    {
        
        public UIGcWeaBreakEmployee1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWeaBreakEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListEmployeTable2 UIGWeaBreakListEmployeTable
        {
            get
            {
                if ((this.mUIGWeaBreakListEmployeTable == null))
                {
                    this.mUIGWeaBreakListEmployeTable = new UIGWeaBreakListEmployeTable2(this);
                }
                return this.mUIGWeaBreakListEmployeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListEmployeTable2 mUIGWeaBreakListEmployeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListEmployeTable2 : DXGrid
    {
        
        public UIGWeaBreakListEmployeTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UIUkentligarbeidsfri32Cell
        {
            get
            {
                if ((this.mUIUkentligarbeidsfri32Cell == null))
                {
                    this.mUIUkentligarbeidsfri32Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1GridControlCell[View]gvWeaBreakListEmployee1[Row]0[Column]g" +
                        "vWeaBreakColumn_Caption";
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIUkentligarbeidsfri32Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIUkentligarbeidsfri32Cell;
            }
        }
        
        public DXCell UISøndager200200Cell
        {
            get
            {
                if ((this.mUISøndager200200Cell == null))
                {
                    this.mUISøndager200200Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUISøndager200200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1GridControlCell[View]gvWeaBreakListEmployee1[Row]1[Column]g" +
                        "vWeaBreakColumn_Caption";
                    this.mUISøndager200200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISøndager200200Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUISøndager200200Cell;
            }
        }
        
        public DXCell UIPlanlagtuke56005400Cell
        {
            get
            {
                if ((this.mUIPlanlagtuke56005400Cell == null))
                {
                    this.mUIPlanlagtuke56005400Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPlanlagtuke56005400Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1GridControlCell[View]gvWeaBreakListEmployee1[Row]2[Column]g" +
                        "vWeaBreakColumn_Caption";
                    this.mUIPlanlagtuke56005400Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPlanlagtuke56005400Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIPlanlagtuke56005400Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIUkentligarbeidsfri32Cell;
        
        private DXCell mUISøndager200200Cell;
        
        private DXCell mUIPlanlagtuke56005400Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaEmployee2Client1 : DXTestControl
    {
        
        public UITpWeaEmployee2Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWeaEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl3 UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl3(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl3 mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsSplitContainerContSplitContainerControl3 : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient3 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient3(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient3 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISplitGroupPanelClient3 : DXTestControl
    {
        
        public UISplitGroupPanelClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl2SplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcWeaBreakEmployee2Client1 UIGcWeaBreakEmployee2Client
        {
            get
            {
                if ((this.mUIGcWeaBreakEmployee2Client == null))
                {
                    this.mUIGcWeaBreakEmployee2Client = new UIGcWeaBreakEmployee2Client1(this);
                }
                return this.mUIGcWeaBreakEmployee2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGcWeaBreakEmployee2Client1 mUIGcWeaBreakEmployee2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcWeaBreakEmployee2Client1 : DXTestControl
    {
        
        public UIGcWeaBreakEmployee2Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWeaBreakEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListEmployeTable3 UIGWeaBreakListEmployeTable
        {
            get
            {
                if ((this.mUIGWeaBreakListEmployeTable == null))
                {
                    this.mUIGWeaBreakListEmployeTable = new UIGWeaBreakListEmployeTable3(this);
                }
                return this.mUIGWeaBreakListEmployeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListEmployeTable3 mUIGWeaBreakListEmployeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListEmployeTable3 : DXGrid
    {
        
        public UIGWeaBreakListEmployeTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UIUkentligarbeidsfri32Cell
        {
            get
            {
                if ((this.mUIUkentligarbeidsfri32Cell == null))
                {
                    this.mUIUkentligarbeidsfri32Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee2GridControlCell[View]gvWeaBreaklistEmployee2[Row]0[Column]g" +
                        "ridColumn1";
                    this.mUIUkentligarbeidsfri32Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIUkentligarbeidsfri32Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIUkentligarbeidsfri32Cell;
            }
        }
        
        public DXCell UIPlanlagtuke58004800Cell
        {
            get
            {
                if ((this.mUIPlanlagtuke58004800Cell == null))
                {
                    this.mUIPlanlagtuke58004800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPlanlagtuke58004800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee2GridControlCell[View]gvWeaBreaklistEmployee2[Row]1[Column]g" +
                        "ridColumn1";
                    this.mUIPlanlagtuke58004800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPlanlagtuke58004800Cell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIPlanlagtuke58004800Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIUkentligarbeidsfri32Cell;
        
        private DXCell mUIPlanlagtuke58004800Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRekalkuleringWindow : DXWindow
    {
        
        public UIRekalkuleringWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Rekalkulering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public UIDbFooterCustom UIDbFooterCustom
        {
            get
            {
                if ((this.mUIDbFooterCustom == null))
                {
                    this.mUIDbFooterCustom = new UIDbFooterCustom(this);
                }
                return this.mUIDbFooterCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDbFooterCustom mUIDbFooterCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDbFooterCustom : DXTestControl
    {
        
        public UIDbFooterCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIByttemedavdelingWindow : DXWindow
    {
        
        public UIByttemedavdelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytte med avdeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client3 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client3(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public DXPopupEdit UILnkDetail0PopupEdit
        {
            get
            {
                if ((this.mUILnkDetail0PopupEdit == null))
                {
                    this.mUILnkDetail0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail[0]";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
                    this.mUILnkDetail0PopupEdit.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUILnkDetail0PopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client3 mUIGsPanelControl1Client;
        
        private DXButton mUIOKButton;
        
        private DXPopupEdit mUILnkDetail0PopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client3 : DXTestControl
    {
        
        public UIGsPanelControl1Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGrpPeriodClient1 UIGrpPeriodClient
        {
            get
            {
                if ((this.mUIGrpPeriodClient == null))
                {
                    this.mUIGrpPeriodClient = new UIGrpPeriodClient1(this);
                }
                return this.mUIGrpPeriodClient;
            }
        }
        
        public UIGSGroupControlClient2 UIGSGroupControlClient
        {
            get
            {
                if ((this.mUIGSGroupControlClient == null))
                {
                    this.mUIGSGroupControlClient = new UIGSGroupControlClient2(this);
                }
                return this.mUIGSGroupControlClient;
            }
        }
        
        public UIGsTabTabList2 UIGsTabTabList
        {
            get
            {
                if ((this.mUIGsTabTabList == null))
                {
                    this.mUIGsTabTabList = new UIGsTabTabList2(this);
                }
                return this.mUIGsTabTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpPeriodClient1 mUIGrpPeriodClient;
        
        private UIGSGroupControlClient2 mUIGSGroupControlClient;
        
        private UIGsTabTabList2 mUIGsTabTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpPeriodClient1 : DXTestControl
    {
        
        public UIGrpPeriodClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private DXPopupEdit mUIPceDate1PopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSGroupControlClient2 : DXTestControl
    {
        
        public UIGSGroupControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment1";
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsTabTabList2 : DXTestControl
    {
        
        public UIGsTabTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTab";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UITpDepartmentExchangeClient UITpDepartmentExchangeClient
        {
            get
            {
                if ((this.mUITpDepartmentExchangeClient == null))
                {
                    this.mUITpDepartmentExchangeClient = new UITpDepartmentExchangeClient(this);
                }
                return this.mUITpDepartmentExchangeClient;
            }
        }
        
        public UITpWeaClient5 UITpWeaClient
        {
            get
            {
                if ((this.mUITpWeaClient == null))
                {
                    this.mUITpWeaClient = new UITpWeaClient5(this);
                }
                return this.mUITpWeaClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpDepartmentExchangeClient mUITpDepartmentExchangeClient;
        
        private UITpWeaClient5 mUITpWeaClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpDepartmentExchangeClient : DXTestControl
    {
        
        public UITpDepartmentExchangeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpDepartmentExchange";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgledigevakterButton
        {
            get
            {
                if ((this.mUIVelgledigevakterButton == null))
                {
                    this.mUIVelgledigevakterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgledigevakterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectUnoccupiedShifts";
                    this.mUIVelgledigevakterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgledigevakterButton.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIVelgledigevakterButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgledigevakterButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaClient5 : DXTestControl
    {
        
        public UITpWeaClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UITcWeaTabList2 UITcWeaTabList
        {
            get
            {
                if ((this.mUITcWeaTabList == null))
                {
                    this.mUITcWeaTabList = new UITcWeaTabList2(this);
                }
                return this.mUITcWeaTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcWeaTabList2 mUITcWeaTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcWeaTabList2 : DXTestControl
    {
        
        public UITcWeaTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UITpWeaEmployee1Client2 UITpWeaEmployee1Client
        {
            get
            {
                if ((this.mUITpWeaEmployee1Client == null))
                {
                    this.mUITpWeaEmployee1Client = new UITpWeaEmployee1Client2(this);
                }
                return this.mUITpWeaEmployee1Client;
            }
        }
        #endregion
        
        #region Fields
        private UITpWeaEmployee1Client2 mUITpWeaEmployee1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaEmployee1Client2 : DXTestControl
    {
        
        public UITpWeaEmployee1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWeaEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl4 UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl4(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl4 mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsSplitContainerContSplitContainerControl4 : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient4 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient4(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient4 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISplitGroupPanelClient4 : DXTestControl
    {
        
        public UISplitGroupPanelClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl3SplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGcWeaBreakEmployee1Client2 UIGcWeaBreakEmployee1Client
        {
            get
            {
                if ((this.mUIGcWeaBreakEmployee1Client == null))
                {
                    this.mUIGcWeaBreakEmployee1Client = new UIGcWeaBreakEmployee1Client2(this);
                }
                return this.mUIGcWeaBreakEmployee1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGcWeaBreakEmployee1Client2 mUIGcWeaBreakEmployee1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcWeaBreakEmployee1Client2 : DXTestControl
    {
        
        public UIGcWeaBreakEmployee1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcWeaBreakEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListEmployeTable4 UIGWeaBreakListEmployeTable
        {
            get
            {
                if ((this.mUIGWeaBreakListEmployeTable == null))
                {
                    this.mUIGWeaBreakListEmployeTable = new UIGWeaBreakListEmployeTable4(this);
                }
                return this.mUIGWeaBreakListEmployeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListEmployeTable4 mUIGWeaBreakListEmployeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListEmployeTable4 : DXGrid
    {
        
        public UIGWeaBreakListEmployeTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public DXCell UISøndager200200Cell
        {
            get
            {
                if ((this.mUISøndager200200Cell == null))
                {
                    this.mUISøndager200200Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUISøndager200200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1GridControlCell[View]gvWeaBreakListEmployee1[Row]0[Column]g" +
                        "vWeaBreakColumn_Caption";
                    this.mUISøndager200200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISøndager200200Cell.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUISøndager200200Cell;
            }
        }
        
        public DXCell UISamletukesnitt481248Cell
        {
            get
            {
                if ((this.mUISamletukesnitt481248Cell == null))
                {
                    this.mUISamletukesnitt481248Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUISamletukesnitt481248Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListEmployee1GridControlCell[View]gvWeaBreakListEmployee1[Row]1[Column]g" +
                        "vWeaBreakColumn_Caption";
                    this.mUISamletukesnitt481248Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISamletukesnitt481248Cell.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUISamletukesnitt481248Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISøndager200200Cell;
        
        private DXCell mUISamletukesnitt481248Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVacantShiftsFormWindow : DXWindow
    {
        
        public UIVacantShiftsFormWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom1 UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom1(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        
        public UIPanelControl1Client UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbCancel";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbCancel";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        
        public DXButton UICloseButton1
        {
            get
            {
                if ((this.mUICloseButton1 == null))
                {
                    this.mUICloseButton1 = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    #endregion
                }
                return this.mUICloseButton1;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom1 mUIGsLayoutControl1Custom;
        
        private UIPanelControl1Client mUIPanelControl1Client;
        
        private DXButton mUISimpleButtonButton;
        
        private DXButton mUICloseButton;
        
        private DXButton mUILukkButton;
        
        private DXButton mUICloseButton1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControl1Custom1 : DXTestControl
    {
        
        public UIGsLayoutControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup1 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup1(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup1 mUILayoutControlGroup1LayoutGroup;
        
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroup1LayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem1LayoutControlItem1 UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem1LayoutControlItem1 mUILayoutControlItem1LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem1LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            #endregion
        }
        
        #region Properties
        public UIGUnoccupiedShiftsTable1 UIGUnoccupiedShiftsTable
        {
            get
            {
                if ((this.mUIGUnoccupiedShiftsTable == null))
                {
                    this.mUIGUnoccupiedShiftsTable = new UIGUnoccupiedShiftsTable1(this);
                }
                return this.mUIGUnoccupiedShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGUnoccupiedShiftsTable1 mUIGUnoccupiedShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGUnoccupiedShiftsTable1 : DXGrid
    {
        
        public UIGUnoccupiedShiftsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsGridControlCell[View]gvUnoccupieedShifts[Row]1[Column]gcIsSelect" +
                        "ed";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsGridControlCell[View]gvUnoccupieedShifts[Row]4[Column]gcIsSelect" +
                        "ed";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsGridControlCell[View]gvUnoccupieedShifts[Row]14[Column]gcIsSelec" +
                        "ted";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCheckBox UICheckEditCheckBox
        {
            get
            {
                if ((this.mUICheckEditCheckBox == null))
                {
                    this.mUICheckEditCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsCheckEdit[View]gvUnoccupieedShifts[Row]14[Column]gcIsSelected";
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    #endregion
                }
                return this.mUICheckEditCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        
        private DXCell mUIIkkevalgtCell;
        
        private DXCheckBox mUICheckEditCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client : DXTestControl
    {
        
        public UIPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIGcAgreementsTable UIGcAgreementsTable
        {
            get
            {
                if ((this.mUIGcAgreementsTable == null))
                {
                    this.mUIGcAgreementsTable = new UIGcAgreementsTable(this);
                }
                return this.mUIGcAgreementsTable;
            }
        }
        
        public DXButton UIEndreButton
        {
            get
            {
                if ((this.mUIEndreButton == null))
                {
                    this.mUIEndreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbEditAgreement";
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUIEndreButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAgreementsTable mUIGcAgreementsTable;
        
        private DXButton mUIEndreButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcAgreementsTable : DXGrid
    {
        
        public UIGcAgreementsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAgreements";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            #endregion
        }
        
        #region Properties
        public DXCell UIDagarbeiderCell
        {
            get
            {
                if ((this.mUIDagarbeiderCell == null))
                {
                    this.mUIDagarbeiderCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDagarbeiderCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAgreementsGridControlCell[View]gvAgreements[Row]6[Column]colName";
                    this.mUIDagarbeiderCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIDagarbeiderCell;
            }
        }
        
        public DXCell UIItem10Cell
        {
            get
            {
                if ((this.mUIItem10Cell == null))
                {
                    this.mUIItem10Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAgreementsGridControlCell[View]gvAgreements[Row]9[Column]colPriority";
                    this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIItem10Cell;
            }
        }
        
        public DXCell UIAMLDNLF38Cell
        {
            get
            {
                if ((this.mUIAMLDNLF38Cell == null))
                {
                    this.mUIAMLDNLF38Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAMLDNLF38Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAgreementsGridControlCell[View]gvAgreements[Row]3[Column]colName";
                    this.mUIAMLDNLF38Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIAMLDNLF38Cell;
            }
        }
        
        public DXCell UITurnus355Cell
        {
            get
            {
                if ((this.mUITurnus355Cell == null))
                {
                    this.mUITurnus355Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUITurnus355Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAgreementsGridControlCell[View]gvAgreements[Row]8[Column]colName";
                    this.mUITurnus355Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUITurnus355Cell;
            }
        }
        
        public DXCell UIItem1Cell
        {
            get
            {
                if ((this.mUIItem1Cell == null))
                {
                    this.mUIItem1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAgreementsGridControlCell[View]gvAgreements[Row]0[Column]colPriority";
                    this.mUIItem1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIItem1Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDagarbeiderCell;
        
        private DXCell mUIItem10Cell;
        
        private DXCell mUIAMLDNLF38Cell;
        
        private DXCell mUITurnus355Cell;
        
        private DXCell mUIItem1Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUtrykningWindow : DXWindow
    {
        
        public UIUtrykningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utrykning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_layoutControlCustom UI_layoutControlCustom
        {
            get
            {
                if ((this.mUI_layoutControlCustom == null))
                {
                    this.mUI_layoutControlCustom = new UI_layoutControlCustom(this);
                }
                return this.mUI_layoutControlCustom;
            }
        }
        
        public DXPopupEdit UILnkDetail0PopupEdit
        {
            get
            {
                if ((this.mUILnkDetail0PopupEdit == null))
                {
                    this.mUILnkDetail0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail[0]";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
                    this.mUILnkDetail0PopupEdit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUILnkDetail0PopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UI_layoutControlCustom mUI_layoutControlCustom;
        
        private DXPopupEdit mUILnkDetail0PopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_layoutControlCustom : DXTestControl
    {
        
        public UI_layoutControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_layoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup2 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup2(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup2 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem3LayoutControlItem1 UILayoutControlItem3LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem3LayoutControlItem == null))
                {
                    this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem3LayoutControlItem;
            }
        }
        
        public UILayoutControlItem5LayoutControlItem UILayoutControlItem5LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem5LayoutControlItem == null))
                {
                    this.mUILayoutControlItem5LayoutControlItem = new UILayoutControlItem5LayoutControlItem(this);
                }
                return this.mUILayoutControlItem5LayoutControlItem;
            }
        }
        
        public UI_liOKLayoutControlItem UI_liOKLayoutControlItem
        {
            get
            {
                if ((this.mUI_liOKLayoutControlItem == null))
                {
                    this.mUI_liOKLayoutControlItem = new UI_liOKLayoutControlItem(this);
                }
                return this.mUI_liOKLayoutControlItem;
            }
        }
        
        public UI_liOk_NewLayoutControlItem UI_liOk_NewLayoutControlItem
        {
            get
            {
                if ((this.mUI_liOk_NewLayoutControlItem == null))
                {
                    this.mUI_liOk_NewLayoutControlItem = new UI_liOk_NewLayoutControlItem(this);
                }
                return this.mUI_liOk_NewLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem3LayoutControlItem1 mUILayoutControlItem3LayoutControlItem;
        
        private UILayoutControlItem5LayoutControlItem mUILayoutControlItem5LayoutControlItem;
        
        private UI_liOKLayoutControlItem mUI_liOKLayoutControlItem;
        
        private UI_liOk_NewLayoutControlItem mUI_liOk_NewLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem3LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem3LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_navBarNavBar UI_navBarNavBar
        {
            get
            {
                if ((this.mUI_navBarNavBar == null))
                {
                    this.mUI_navBarNavBar = new UI_navBarNavBar(this);
                }
                return this.mUI_navBarNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UI_navBarNavBar mUI_navBarNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_navBarNavBar : DXNavBar
    {
        
        public UI_navBarNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_navBar";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl3 UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl3(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        
        public UINavBarGroupControlCoScrollableControl11 UINavBarGroupControlCoScrollableControl1
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl1 == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl1 = new UINavBarGroupControlCoScrollableControl11(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl1;
            }
        }
        
        public UINavBarGroupControlCoScrollableControl21 UINavBarGroupControlCoScrollableControl2
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl2 == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl2 = new UINavBarGroupControlCoScrollableControl21(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl2;
            }
        }
        
        public UINavBarGroupControlCoScrollableControl31 UINavBarGroupControlCoScrollableControl3
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl3 == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl3 = new UINavBarGroupControlCoScrollableControl31(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl3;
            }
        }
        
        public UINavBarGroupControlCoScrollableControl4 UINavBarGroupControlCoScrollableControl4
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl4 == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl4 = new UINavBarGroupControlCoScrollableControl4(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl4;
            }
        }
        
        public UINavBarGroupControlCoScrollableControl5 UINavBarGroupControlCoScrollableControl5
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl5 == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl5 = new UINavBarGroupControlCoScrollableControl5(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl5;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl3 mUINavBarGroupControlCoScrollableControl;
        
        private UINavBarGroupControlCoScrollableControl11 mUINavBarGroupControlCoScrollableControl1;
        
        private UINavBarGroupControlCoScrollableControl21 mUINavBarGroupControlCoScrollableControl2;
        
        private UINavBarGroupControlCoScrollableControl31 mUINavBarGroupControlCoScrollableControl3;
        
        private UINavBarGroupControlCoScrollableControl4 mUINavBarGroupControlCoScrollableControl4;
        
        private UINavBarGroupControlCoScrollableControl5 mUINavBarGroupControlCoScrollableControl5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl3 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_cbCauseCodeLookUpEdit UI_cbCauseCodeLookUpEdit
        {
            get
            {
                if ((this.mUI_cbCauseCodeLookUpEdit == null))
                {
                    this.mUI_cbCauseCodeLookUpEdit = new UI_cbCauseCodeLookUpEdit(this);
                }
                return this.mUI_cbCauseCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UI_cbCauseCodeLookUpEdit mUI_cbCauseCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_cbCauseCodeLookUpEdit : DXLookUpEdit
    {
        
        public UI_cbCauseCodeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_cbCauseCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "_cbCauseCodePopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl11 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIGsChkBxWeaSevereServCheckBox
        {
            get
            {
                if ((this.mUIGsChkBxWeaSevereServCheckBox == null))
                {
                    this.mUIGsChkBxWeaSevereServCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIGsChkBxWeaSevereServCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gsChkBxWeaSevereServiceDisruption";
                    this.mUIGsChkBxWeaSevereServCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIGsChkBxWeaSevereServCheckBox.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIGsChkBxWeaSevereServCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIGsChkBxWeaSevereServCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl21 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_panShiftClient UI_panShiftClient
        {
            get
            {
                if ((this.mUI_panShiftClient == null))
                {
                    this.mUI_panShiftClient = new UI_panShiftClient(this);
                }
                return this.mUI_panShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_panShiftClient mUI_panShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_panShiftClient : DXTestControl
    {
        
        public UI_panShiftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_panShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl31 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_panShiftClient1 UI_panShiftClient
        {
            get
            {
                if ((this.mUI_panShiftClient == null))
                {
                    this.mUI_panShiftClient = new UI_panShiftClient1(this);
                }
                return this.mUI_panShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_panShiftClient1 mUI_panShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_panShiftClient1 : DXTestControl
    {
        
        public UI_panShiftClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_panShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl4 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_panShiftClient2 UI_panShiftClient
        {
            get
            {
                if ((this.mUI_panShiftClient == null))
                {
                    this.mUI_panShiftClient = new UI_panShiftClient2(this);
                }
                return this.mUI_panShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_panShiftClient2 mUI_panShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_panShiftClient2 : DXTestControl
    {
        
        public UI_panShiftClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_panShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UI_cbCalloutShiftsLookUpEdit
        {
            get
            {
                if ((this.mUI_cbCalloutShiftsLookUpEdit == null))
                {
                    this.mUI_cbCalloutShiftsLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUI_cbCalloutShiftsLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "_cbCalloutShifts";
                    this.mUI_cbCalloutShiftsLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUI_cbCalloutShiftsLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUI_cbCalloutShiftsLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl5 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_panShiftClient3 UI_panShiftClient
        {
            get
            {
                if ((this.mUI_panShiftClient == null))
                {
                    this.mUI_panShiftClient = new UI_panShiftClient3(this);
                }
                return this.mUI_panShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_panShiftClient3 mUI_panShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_panShiftClient3 : DXTestControl
    {
        
        public UI_panShiftClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_panShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UI_cbCalloutShiftsLookUpEdit
        {
            get
            {
                if ((this.mUI_cbCalloutShiftsLookUpEdit == null))
                {
                    this.mUI_cbCalloutShiftsLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUI_cbCalloutShiftsLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "_cbCalloutShifts";
                    this.mUI_cbCalloutShiftsLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUI_cbCalloutShiftsLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUI_cbCalloutShiftsLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem5LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem5LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tcRightTabList UI_tcRightTabList
        {
            get
            {
                if ((this.mUI_tcRightTabList == null))
                {
                    this.mUI_tcRightTabList = new UI_tcRightTabList(this);
                }
                return this.mUI_tcRightTabList;
            }
        }
        #endregion
        
        #region Fields
        private UI_tcRightTabList mUI_tcRightTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_tcRightTabList : DXTestControl
    {
        
        public UI_tcRightTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tcRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tpCalloutDetailsClient UI_tpCalloutDetailsClient
        {
            get
            {
                if ((this.mUI_tpCalloutDetailsClient == null))
                {
                    this.mUI_tpCalloutDetailsClient = new UI_tpCalloutDetailsClient(this);
                }
                return this.mUI_tpCalloutDetailsClient;
            }
        }
        
        public UI_tpWeaClient UI_tpWeaClient
        {
            get
            {
                if ((this.mUI_tpWeaClient == null))
                {
                    this.mUI_tpWeaClient = new UI_tpWeaClient(this);
                }
                return this.mUI_tpWeaClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_tpCalloutDetailsClient mUI_tpCalloutDetailsClient;
        
        private UI_tpWeaClient mUI_tpWeaClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_tpCalloutDetailsClient : DXTestControl
    {
        
        public UI_tpCalloutDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tpCalloutDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_periodCreatorCustom UI_periodCreatorCustom
        {
            get
            {
                if ((this.mUI_periodCreatorCustom == null))
                {
                    this.mUI_periodCreatorCustom = new UI_periodCreatorCustom(this);
                }
                return this.mUI_periodCreatorCustom;
            }
        }
        #endregion
        
        #region Fields
        private UI_periodCreatorCustom mUI_periodCreatorCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_periodCreatorCustom : DXTestControl
    {
        
        public UI_periodCreatorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_periodCreator";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TwoStepPeriodCreator";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIETime0Edit
        {
            get
            {
                if ((this.mUIETime0Edit == null))
                {
                    this.mUIETime0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[0]";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime0Edit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIETime0Edit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        
        public DXCheckBox UIItem5septembermanCheckBox
        {
            get
            {
                if ((this.mUIItem5septembermanCheckBox == null))
                {
                    this.mUIItem5septembermanCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIItem5septembermanCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "_periodCreatorCheckEdit[1]";
                    this.mUIItem5septembermanCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIItem5septembermanCheckBox.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem5septembermanCheckBox;
            }
        }
        
        public DXCheckBox UIItem4septembersønCheckBox
        {
            get
            {
                if ((this.mUIItem4septembersønCheckBox == null))
                {
                    this.mUIItem4septembersønCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIItem4septembersønCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "_periodCreatorCheckEdit[0]";
                    this.mUIItem4septembersønCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIItem4septembersønCheckBox.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem4septembersønCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIETime0Edit;
        
        private DXTextEdit mUIETime1Edit;
        
        private DXCheckBox mUIItem5septembermanCheckBox;
        
        private DXCheckBox mUIItem4septembersønCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_tpWeaClient : DXTestControl
    {
        
        public UI_tpWeaClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tpWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UIGsGroupControl2Client3 UIGsGroupControl2Client
        {
            get
            {
                if ((this.mUIGsGroupControl2Client == null))
                {
                    this.mUIGsGroupControl2Client = new UIGsGroupControl2Client3(this);
                }
                return this.mUIGsGroupControl2Client;
            }
        }
        
        public DXButton UITilbaketilregistreriButton
        {
            get
            {
                if ((this.mUITilbaketilregistreriButton == null))
                {
                    this.mUITilbaketilregistreriButton = new DXButton(this);
                    #region Search Criteria
                    this.mUITilbaketilregistreriButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnBackToRegistrationFromWea";
                    this.mUITilbaketilregistreriButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUITilbaketilregistreriButton.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUITilbaketilregistreriButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGroupControl2Client3 mUIGsGroupControl2Client;
        
        private DXButton mUITilbaketilregistreriButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsGroupControl2Client3 : DXTestControl
    {
        
        public UIGsGroupControl2Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGroupControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListTable3 UIGWeaBreakListTable
        {
            get
            {
                if ((this.mUIGWeaBreakListTable == null))
                {
                    this.mUIGWeaBreakListTable = new UIGWeaBreakListTable3(this);
                }
                return this.mUIGWeaBreakListTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListTable3 mUIGWeaBreakListTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListTable3 : DXGrid
    {
        
        public UIGWeaBreakListTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXCell UISamletdag14001300Cell
        {
            get
            {
                if ((this.mUISamletdag14001300Cell == null))
                {
                    this.mUISamletdag14001300Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUISamletdag14001300Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]0[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUISamletdag14001300Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISamletdag14001300Cell.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUISamletdag14001300Cell;
            }
        }
        
        public DXCell UIArbeidsfriførvakt600Cell
        {
            get
            {
                if ((this.mUIArbeidsfriførvakt600Cell == null))
                {
                    this.mUIArbeidsfriførvakt600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIArbeidsfriførvakt600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]1[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIArbeidsfriførvakt600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIArbeidsfriførvakt600Cell.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIArbeidsfriførvakt600Cell;
            }
        }
        
        public DXCell UIArbeidsfriførvakt600Cell1
        {
            get
            {
                if ((this.mUIArbeidsfriførvakt600Cell1 == null))
                {
                    this.mUIArbeidsfriførvakt600Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIArbeidsfriførvakt600Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]2[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIArbeidsfriførvakt600Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIArbeidsfriførvakt600Cell1.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIArbeidsfriførvakt600Cell1;
            }
        }
        
        public DXCell UIArbeidsfriførvakt600Cell2
        {
            get
            {
                if ((this.mUIArbeidsfriførvakt600Cell2 == null))
                {
                    this.mUIArbeidsfriførvakt600Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIArbeidsfriførvakt600Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]3[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIArbeidsfriførvakt600Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIArbeidsfriførvakt600Cell2.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIArbeidsfriførvakt600Cell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISamletdag14001300Cell;
        
        private DXCell mUIArbeidsfriførvakt600Cell;
        
        private DXCell mUIArbeidsfriførvakt600Cell1;
        
        private DXCell mUIArbeidsfriførvakt600Cell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_liOKLayoutControlItem : DXBaseLayoutItem
    {
        
        public UI_liOKLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_liOK";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_bOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_liOk_NewLayoutControlItem : DXBaseLayoutItem
    {
        
        public UI_liOk_NewLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_liOk_New";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXButton UIOkNyButton
        {
            get
            {
                if ((this.mUIOkNyButton == null))
                {
                    this.mUIOkNyButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOkNyButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_bOkNew";
                    this.mUIOkNyButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOkNyButton.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIOkNyButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOkNyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow7 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow7()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow17 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow17(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow18 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow18(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow113 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow113(this);
                }
                return this.mUIItemWindow11;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow17 mUIItemWindow;
        
        private UIItemWindow18 mUIItemWindow1;
        
        private UIItemWindow113 mUIItemWindow11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow17 : WinWindow
    {
        
        public UIItemWindow17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Gaston Gare  (" +
                    "Vaktbokdato: 05.09.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Gaston Gare  (" +
                            "Vaktbokdato: 05.09.2016)");
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow18 : WinWindow
    {
        
        public UIItemWindow18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Gaston Gare  (" +
                    "Vaktbokdato: 05.09.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIUtrykningerClient
        {
            get
            {
                if ((this.mUIUtrykningerClient == null))
                {
                    this.mUIUtrykningerClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIUtrykningerClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Gaston Gare  (" +
                            "Vaktbokdato: 05.09.2016)");
                    this.mUIUtrykningerClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIUtrykningerClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIUtrykningerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow113 : WinWindow
    {
        
        public UIItemWindow113(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Gaston Gare  (" +
                    "Vaktbokdato: 05.09.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIUtrykningerClient
        {
            get
            {
                if ((this.mUIUtrykningerClient == null))
                {
                    this.mUIUtrykningerClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIUtrykningerClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Gaston Gare  (" +
                            "Vaktbokdato: 05.09.2016)");
                    this.mUIUtrykningerClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIUtrykningerClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIUtrykningerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAMLavtaleWindow : DXWindow
    {
        
        public UIAMLavtaleWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AML avtale";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcAgreementClient UIPcAgreementClient
        {
            get
            {
                if ((this.mUIPcAgreementClient == null))
                {
                    this.mUIPcAgreementClient = new UIPcAgreementClient(this);
                }
                return this.mUIPcAgreementClient;
            }
        }
        
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbOk";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        
        public UIViewHostDispensationCustom UIViewHostDispensationCustom
        {
            get
            {
                if ((this.mUIViewHostDispensationCustom == null))
                {
                    this.mUIViewHostDispensationCustom = new UIViewHostDispensationCustom(this);
                }
                return this.mUIViewHostDispensationCustom;
            }
        }
        
        public DXButton UIMaximizeButton
        {
            get
            {
                if ((this.mUIMaximizeButton == null))
                {
                    this.mUIMaximizeButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIMaximizeButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Maximize";
                    this.mUIMaximizeButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUIMaximizeButton.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIMaximizeButton;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPcAgreementClient mUIPcAgreementClient;
        
        private DXButton mUISimpleButtonButton;
        
        private UIViewHostDispensationCustom mUIViewHostDispensationCustom;
        
        private DXButton mUIMaximizeButton;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcAgreementClient : DXTestControl
    {
        
        public UIPcAgreementClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcAgreement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIXtabCtrAgreementTabList UIXtabCtrAgreementTabList
        {
            get
            {
                if ((this.mUIXtabCtrAgreementTabList == null))
                {
                    this.mUIXtabCtrAgreementTabList = new UIXtabCtrAgreementTabList(this);
                }
                return this.mUIXtabCtrAgreementTabList;
            }
        }
        
        public DXTextEdit UISdePriorityEdit
        {
            get
            {
                if ((this.mUISdePriorityEdit == null))
                {
                    this.mUISdePriorityEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdePriorityEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdePriority";
                    this.mUISdePriorityEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartIntegerEdit";
                    this.mUISdePriorityEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdePriorityEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIXtabCtrAgreementTabList mUIXtabCtrAgreementTabList;
        
        private DXTextEdit mUISdePriorityEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtabCtrAgreementTabList : DXTestControl
    {
        
        public UIXtabCtrAgreementTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtabCtrAgreement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIXtpLimitsClient UIXtpLimitsClient
        {
            get
            {
                if ((this.mUIXtpLimitsClient == null))
                {
                    this.mUIXtpLimitsClient = new UIXtpLimitsClient(this);
                }
                return this.mUIXtpLimitsClient;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "xtabCtrAgreementPageHeader1";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UIXtpLimitsClient mUIXtpLimitsClient;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtpLimitsClient : DXTestControl
    {
        
        public UIXtpLimitsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpLimits";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcLimitClient UIPcLimitClient
        {
            get
            {
                if ((this.mUIPcLimitClient == null))
                {
                    this.mUIPcLimitClient = new UIPcLimitClient(this);
                }
                return this.mUIPcLimitClient;
            }
        }
        
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbAddLimit";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUINYButton.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        
        public UIGcLimitsTable UIGcLimitsTable
        {
            get
            {
                if ((this.mUIGcLimitsTable == null))
                {
                    this.mUIGcLimitsTable = new UIGcLimitsTable(this);
                }
                return this.mUIGcLimitsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIPcLimitClient mUIPcLimitClient;
        
        private DXButton mUINYButton;
        
        private UIGcLimitsTable mUIGcLimitsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcLimitClient : DXTestControl
    {
        
        public UIPcLimitClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcLimit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIVhLimitCustom UIVhLimitCustom
        {
            get
            {
                if ((this.mUIVhLimitCustom == null))
                {
                    this.mUIVhLimitCustom = new UIVhLimitCustom(this);
                }
                return this.mUIVhLimitCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhLimitCustom mUIVhLimitCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVhLimitCustom : DXTestControl
    {
        
        public UIVhLimitCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhLimit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UILimitDetailsViewCustom UILimitDetailsViewCustom
        {
            get
            {
                if ((this.mUILimitDetailsViewCustom == null))
                {
                    this.mUILimitDetailsViewCustom = new UILimitDetailsViewCustom(this);
                }
                return this.mUILimitDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILimitDetailsViewCustom mUILimitDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILimitDetailsViewCustom : DXTestControl
    {
        
        public UILimitDetailsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LimitDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LimitDetailsView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client1 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client1(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        
        public DXTextEdit UISdeFromDateEdit
        {
            get
            {
                if ((this.mUISdeFromDateEdit == null))
                {
                    this.mUISdeFromDateEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeFromDateEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeFromDate";
                    this.mUISdeFromDateEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUISdeFromDateEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeFromDateEdit;
            }
        }
        
        public DXTextEdit UITeCommentEdit
        {
            get
            {
                if ((this.mUITeCommentEdit == null))
                {
                    this.mUITeCommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeCommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teComment";
                    this.mUITeCommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeCommentEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUITeCommentEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client1 mUIPanelControl1Client;
        
        private DXTextEdit mUISdeFromDateEdit;
        
        private DXTextEdit mUITeCommentEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client1 : DXTestControl
    {
        
        public UIPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIGcvhLimitDetailsCustom UIGcvhLimitDetailsCustom
        {
            get
            {
                if ((this.mUIGcvhLimitDetailsCustom == null))
                {
                    this.mUIGcvhLimitDetailsCustom = new UIGcvhLimitDetailsCustom(this);
                }
                return this.mUIGcvhLimitDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGcvhLimitDetailsCustom mUIGcvhLimitDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcvhLimitDetailsCustom : DXTestControl
    {
        
        public UIGcvhLimitDetailsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        
        public UIGroupControlClient1 UIGroupControlClient1
        {
            get
            {
                if ((this.mUIGroupControlClient1 == null))
                {
                    this.mUIGroupControlClient1 = new UIGroupControlClient1(this);
                }
                return this.mUIGroupControlClient1;
            }
        }
        
        public UIGroupControlClient2 UIGroupControlClient2
        {
            get
            {
                if ((this.mUIGroupControlClient2 == null))
                {
                    this.mUIGroupControlClient2 = new UIGroupControlClient2(this);
                }
                return this.mUIGroupControlClient2;
            }
        }
        
        public UIGroupControlClient3 UIGroupControlClient3
        {
            get
            {
                if ((this.mUIGroupControlClient3 == null))
                {
                    this.mUIGroupControlClient3 = new UIGroupControlClient3(this);
                }
                return this.mUIGroupControlClient3;
            }
        }
        
        public UIGroupControlClient4 UIGroupControlClient4
        {
            get
            {
                if ((this.mUIGroupControlClient4 == null))
                {
                    this.mUIGroupControlClient4 = new UIGroupControlClient4(this);
                }
                return this.mUIGroupControlClient4;
            }
        }
        
        public UIGroupControlClient5 UIGroupControlClient5
        {
            get
            {
                if ((this.mUIGroupControlClient5 == null))
                {
                    this.mUIGroupControlClient5 = new UIGroupControlClient5(this);
                }
                return this.mUIGroupControlClient5;
            }
        }
        
        public UIGroupControlClient6 UIGroupControlClient6
        {
            get
            {
                if ((this.mUIGroupControlClient6 == null))
                {
                    this.mUIGroupControlClient6 = new UIGroupControlClient6(this);
                }
                return this.mUIGroupControlClient6;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient mUIGroupControlClient;
        
        private UIGroupControlClient1 mUIGroupControlClient1;
        
        private UIGroupControlClient2 mUIGroupControlClient2;
        
        private UIGroupControlClient3 mUIGroupControlClient3;
        
        private UIGroupControlClient4 mUIGroupControlClient4;
        
        private UIGroupControlClient5 mUIGroupControlClient5;
        
        private UIGroupControlClient6 mUIGroupControlClient6;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient : DXTestControl
    {
        
        public UIGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[3]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIOffDutyLimitViewCustom UIOffDutyLimitViewCustom
        {
            get
            {
                if ((this.mUIOffDutyLimitViewCustom == null))
                {
                    this.mUIOffDutyLimitViewCustom = new UIOffDutyLimitViewCustom(this);
                }
                return this.mUIOffDutyLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIOffDutyLimitViewCustom mUIOffDutyLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOffDutyLimitViewCustom : DXTestControl
    {
        
        public UIOffDutyLimitViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "OffDutyLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "OffDutyLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client2 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client2(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        
        public UIGcBreakTypesClient UIGcBreakTypesClient
        {
            get
            {
                if ((this.mUIGcBreakTypesClient == null))
                {
                    this.mUIGcBreakTypesClient = new UIGcBreakTypesClient(this);
                }
                return this.mUIGcBreakTypesClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client2 mUIPanelControl1Client;
        
        private UIGcBreakTypesClient mUIGcBreakTypesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client2 : DXTestControl
    {
        
        public UIPanelControl1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPFreeBeforeShiftClient UIPFreeBeforeShiftClient
        {
            get
            {
                if ((this.mUIPFreeBeforeShiftClient == null))
                {
                    this.mUIPFreeBeforeShiftClient = new UIPFreeBeforeShiftClient(this);
                }
                return this.mUIPFreeBeforeShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPFreeBeforeShiftClient mUIPFreeBeforeShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPFreeBeforeShiftClient : DXTestControl
    {
        
        public UIPFreeBeforeShiftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pFreeBeforeShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeMinFreeBeforeShifEdit
        {
            get
            {
                if ((this.mUISdeMinFreeBeforeShifEdit == null))
                {
                    this.mUISdeMinFreeBeforeShifEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeMinFreeBeforeShifEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeMinFreeBeforeShift";
                    this.mUISdeMinFreeBeforeShifEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeMinFreeBeforeShifEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeMinFreeBeforeShifEdit;
            }
        }
        
        public UILueOvertimeSsdLookUpEdit UILueOvertimeSsdLookUpEdit
        {
            get
            {
                if ((this.mUILueOvertimeSsdLookUpEdit == null))
                {
                    this.mUILueOvertimeSsdLookUpEdit = new UILueOvertimeSsdLookUpEdit(this);
                }
                return this.mUILueOvertimeSsdLookUpEdit;
            }
        }
        
        public UILueTurnoutSsdLookUpEdit UILueTurnoutSsdLookUpEdit
        {
            get
            {
                if ((this.mUILueTurnoutSsdLookUpEdit == null))
                {
                    this.mUILueTurnoutSsdLookUpEdit = new UILueTurnoutSsdLookUpEdit(this);
                }
                return this.mUILueTurnoutSsdLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeMinFreeBeforeShifEdit;
        
        private UILueOvertimeSsdLookUpEdit mUILueOvertimeSsdLookUpEdit;
        
        private UILueTurnoutSsdLookUpEdit mUILueTurnoutSsdLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILueOvertimeSsdLookUpEdit : DXLookUpEdit
    {
        
        public UILueOvertimeSsdLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueOvertimeSsd";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "lueOvertimeSsdPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILueTurnoutSsdLookUpEdit : DXLookUpEdit
    {
        
        public UILueTurnoutSsdLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueTurnoutSsd";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "lueTurnoutSsdPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcBreakTypesClient : DXTestControl
    {
        
        public UIGcBreakTypesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBreakTypes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkFreeBeforeShiftCheckBox
        {
            get
            {
                if ((this.mUIChkFreeBeforeShiftCheckBox == null))
                {
                    this.mUIChkFreeBeforeShiftCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkFreeBeforeShiftCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkFreeBeforeShift";
                    this.mUIChkFreeBeforeShiftCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIChkFreeBeforeShiftCheckBox.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIChkFreeBeforeShiftCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkFreeBeforeShiftCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient1 : DXTestControl
    {
        
        public UIGroupControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UITotalHoursLimitViewCustom UITotalHoursLimitViewCustom
        {
            get
            {
                if ((this.mUITotalHoursLimitViewCustom == null))
                {
                    this.mUITotalHoursLimitViewCustom = new UITotalHoursLimitViewCustom(this);
                }
                return this.mUITotalHoursLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UITotalHoursLimitViewCustom mUITotalHoursLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITotalHoursLimitViewCustom : DXTestControl
    {
        
        public UITotalHoursLimitViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "TotalHoursLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TotalHoursLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPTotalWorkClient UIPTotalWorkClient
        {
            get
            {
                if ((this.mUIPTotalWorkClient == null))
                {
                    this.mUIPTotalWorkClient = new UIPTotalWorkClient(this);
                }
                return this.mUIPTotalWorkClient;
            }
        }
        
        public UIGroupControlBreakTypClient UIGroupControlBreakTypClient
        {
            get
            {
                if ((this.mUIGroupControlBreakTypClient == null))
                {
                    this.mUIGroupControlBreakTypClient = new UIGroupControlBreakTypClient(this);
                }
                return this.mUIGroupControlBreakTypClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPTotalWorkClient mUIPTotalWorkClient;
        
        private UIGroupControlBreakTypClient mUIGroupControlBreakTypClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalWorkClient : DXTestControl
    {
        
        public UIPTotalWorkClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalWork";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPTotalHoursPerDayClient UIPTotalHoursPerDayClient
        {
            get
            {
                if ((this.mUIPTotalHoursPerDayClient == null))
                {
                    this.mUIPTotalHoursPerDayClient = new UIPTotalHoursPerDayClient(this);
                }
                return this.mUIPTotalHoursPerDayClient;
            }
        }
        
        public UIPTotalHoursPerWeekClient UIPTotalHoursPerWeekClient
        {
            get
            {
                if ((this.mUIPTotalHoursPerWeekClient == null))
                {
                    this.mUIPTotalHoursPerWeekClient = new UIPTotalHoursPerWeekClient(this);
                }
                return this.mUIPTotalHoursPerWeekClient;
            }
        }
        
        public UIPTotalHoursPerWeekClient1 UIPTotalHoursPerWeekClient1
        {
            get
            {
                if ((this.mUIPTotalHoursPerWeekClient1 == null))
                {
                    this.mUIPTotalHoursPerWeekClient1 = new UIPTotalHoursPerWeekClient1(this);
                }
                return this.mUIPTotalHoursPerWeekClient1;
            }
        }
        
        public UIPTotalHoursPerWeekClient2 UIPTotalHoursPerWeekClient2
        {
            get
            {
                if ((this.mUIPTotalHoursPerWeekClient2 == null))
                {
                    this.mUIPTotalHoursPerWeekClient2 = new UIPTotalHoursPerWeekClient2(this);
                }
                return this.mUIPTotalHoursPerWeekClient2;
            }
        }
        #endregion
        
        #region Fields
        private UIPTotalHoursPerDayClient mUIPTotalHoursPerDayClient;
        
        private UIPTotalHoursPerWeekClient mUIPTotalHoursPerWeekClient;
        
        private UIPTotalHoursPerWeekClient1 mUIPTotalHoursPerWeekClient1;
        
        private UIPTotalHoursPerWeekClient2 mUIPTotalHoursPerWeekClient2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalHoursPerDayClient : DXTestControl
    {
        
        public UIPTotalHoursPerDayClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalHoursPerDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeMaxTotalHoursPerDEdit
        {
            get
            {
                if ((this.mUISdeMaxTotalHoursPerDEdit == null))
                {
                    this.mUISdeMaxTotalHoursPerDEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeMaxTotalHoursPerDEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeMaxTotalHoursPerDay";
                    this.mUISdeMaxTotalHoursPerDEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeMaxTotalHoursPerDEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeMaxTotalHoursPerDEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeMaxTotalHoursPerDEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalHoursPerWeekClient : DXTestControl
    {
        
        public UIPTotalHoursPerWeekClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalHoursPerWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeMaxTotalHoursPerWEdit
        {
            get
            {
                if ((this.mUISdeMaxTotalHoursPerWEdit == null))
                {
                    this.mUISdeMaxTotalHoursPerWEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeMaxTotalHoursPerWEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeMaxTotalHoursPerWeek";
                    this.mUISdeMaxTotalHoursPerWEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeMaxTotalHoursPerWEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeMaxTotalHoursPerWEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeMaxTotalHoursPerWEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalHoursPerWeekClient1 : DXTestControl
    {
        
        public UIPTotalHoursPerWeekClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalHoursPerWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeMaxTotalHoursPerWEdit
        {
            get
            {
                if ((this.mUISdeMaxTotalHoursPerWEdit == null))
                {
                    this.mUISdeMaxTotalHoursPerWEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeMaxTotalHoursPerWEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeMaxTotalHoursPerWeek";
                    this.mUISdeMaxTotalHoursPerWEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeMaxTotalHoursPerWEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeMaxTotalHoursPerWEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeMaxTotalHoursPerWEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalHoursPerWeekClient2 : DXTestControl
    {
        
        public UIPTotalHoursPerWeekClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalHoursPerWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeMaxTotalHoursPerWEdit
        {
            get
            {
                if ((this.mUISdeMaxTotalHoursPerWEdit == null))
                {
                    this.mUISdeMaxTotalHoursPerWEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeMaxTotalHoursPerWEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeMaxTotalHoursPerWeek";
                    this.mUISdeMaxTotalHoursPerWEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeMaxTotalHoursPerWEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeMaxTotalHoursPerWEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeMaxTotalHoursPerWEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlBreakTypClient : DXTestControl
    {
        
        public UIGroupControlBreakTypClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlBreakTypes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkBreakTypeTotalHouCheckBox
        {
            get
            {
                if ((this.mUIChkBreakTypeTotalHouCheckBox == null))
                {
                    this.mUIChkBreakTypeTotalHouCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkBreakTypeTotalHouCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkBreakTypeTotalHoursPerWeek";
                    this.mUIChkBreakTypeTotalHouCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIChkBreakTypeTotalHouCheckBox.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIChkBreakTypeTotalHouCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkBreakTypeTotalHouCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient2 : DXTestControl
    {
        
        public UIGroupControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UITotalHoursLimitViewCustom1 UITotalHoursLimitViewCustom
        {
            get
            {
                if ((this.mUITotalHoursLimitViewCustom == null))
                {
                    this.mUITotalHoursLimitViewCustom = new UITotalHoursLimitViewCustom1(this);
                }
                return this.mUITotalHoursLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UITotalHoursLimitViewCustom1 mUITotalHoursLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITotalHoursLimitViewCustom1 : DXTestControl
    {
        
        public UITotalHoursLimitViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "TotalHoursLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TotalHoursLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPTotalWorkClient1 UIPTotalWorkClient
        {
            get
            {
                if ((this.mUIPTotalWorkClient == null))
                {
                    this.mUIPTotalWorkClient = new UIPTotalWorkClient1(this);
                }
                return this.mUIPTotalWorkClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPTotalWorkClient1 mUIPTotalWorkClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalWorkClient1 : DXTestControl
    {
        
        public UIPTotalWorkClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalWork";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPTotalHoursPerDayClient1 UIPTotalHoursPerDayClient
        {
            get
            {
                if ((this.mUIPTotalHoursPerDayClient == null))
                {
                    this.mUIPTotalHoursPerDayClient = new UIPTotalHoursPerDayClient1(this);
                }
                return this.mUIPTotalHoursPerDayClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPTotalHoursPerDayClient1 mUIPTotalHoursPerDayClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalHoursPerDayClient1 : DXTestControl
    {
        
        public UIPTotalHoursPerDayClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalHoursPerDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeMaxTotalHoursPerDEdit
        {
            get
            {
                if ((this.mUISdeMaxTotalHoursPerDEdit == null))
                {
                    this.mUISdeMaxTotalHoursPerDEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeMaxTotalHoursPerDEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeMaxTotalHoursPerDay";
                    this.mUISdeMaxTotalHoursPerDEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeMaxTotalHoursPerDEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeMaxTotalHoursPerDEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeMaxTotalHoursPerDEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient3 : DXTestControl
    {
        
        public UIGroupControlClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UITotalHoursLimitViewCustom2 UITotalHoursLimitViewCustom
        {
            get
            {
                if ((this.mUITotalHoursLimitViewCustom == null))
                {
                    this.mUITotalHoursLimitViewCustom = new UITotalHoursLimitViewCustom2(this);
                }
                return this.mUITotalHoursLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UITotalHoursLimitViewCustom2 mUITotalHoursLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITotalHoursLimitViewCustom2 : DXTestControl
    {
        
        public UITotalHoursLimitViewCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "TotalHoursLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TotalHoursLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPTotalWorkClient2 UIPTotalWorkClient
        {
            get
            {
                if ((this.mUIPTotalWorkClient == null))
                {
                    this.mUIPTotalWorkClient = new UIPTotalWorkClient2(this);
                }
                return this.mUIPTotalWorkClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPTotalWorkClient2 mUIPTotalWorkClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalWorkClient2 : DXTestControl
    {
        
        public UIPTotalWorkClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalWork";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPTotalHoursPerDayClient2 UIPTotalHoursPerDayClient
        {
            get
            {
                if ((this.mUIPTotalHoursPerDayClient == null))
                {
                    this.mUIPTotalHoursPerDayClient = new UIPTotalHoursPerDayClient2(this);
                }
                return this.mUIPTotalHoursPerDayClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPTotalHoursPerDayClient2 mUIPTotalHoursPerDayClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalHoursPerDayClient2 : DXTestControl
    {
        
        public UIPTotalHoursPerDayClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalHoursPerDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeMaxTotalHoursPerDEdit
        {
            get
            {
                if ((this.mUISdeMaxTotalHoursPerDEdit == null))
                {
                    this.mUISdeMaxTotalHoursPerDEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeMaxTotalHoursPerDEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeMaxTotalHoursPerDay";
                    this.mUISdeMaxTotalHoursPerDEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeMaxTotalHoursPerDEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeMaxTotalHoursPerDEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeMaxTotalHoursPerDEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient4 : DXTestControl
    {
        
        public UIGroupControlClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIOvertimeLimitViewCustom UIOvertimeLimitViewCustom
        {
            get
            {
                if ((this.mUIOvertimeLimitViewCustom == null))
                {
                    this.mUIOvertimeLimitViewCustom = new UIOvertimeLimitViewCustom(this);
                }
                return this.mUIOvertimeLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIOvertimeLimitViewCustom mUIOvertimeLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOvertimeLimitViewCustom : DXTestControl
    {
        
        public UIOvertimeLimitViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "OvertimeLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "OvertimeLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client3 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client3(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client3 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client3 : DXTestControl
    {
        
        public UIPanelControl1Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIFlpWeaHoursClient UIFlpWeaHoursClient
        {
            get
            {
                if ((this.mUIFlpWeaHoursClient == null))
                {
                    this.mUIFlpWeaHoursClient = new UIFlpWeaHoursClient(this);
                }
                return this.mUIFlpWeaHoursClient;
            }
        }
        #endregion
        
        #region Fields
        private UIFlpWeaHoursClient mUIFlpWeaHoursClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFlpWeaHoursClient : DXTestControl
    {
        
        public UIFlpWeaHoursClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flpWeaHours";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPWeaHoursPerWeekClient UIPWeaHoursPerWeekClient
        {
            get
            {
                if ((this.mUIPWeaHoursPerWeekClient == null))
                {
                    this.mUIPWeaHoursPerWeekClient = new UIPWeaHoursPerWeekClient(this);
                }
                return this.mUIPWeaHoursPerWeekClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPWeaHoursPerWeekClient mUIPWeaHoursPerWeekClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPWeaHoursPerWeekClient : DXTestControl
    {
        
        public UIPWeaHoursPerWeekClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pWeaHoursPerWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeWeaHoursPerWeekEdit
        {
            get
            {
                if ((this.mUISdeWeaHoursPerWeekEdit == null))
                {
                    this.mUISdeWeaHoursPerWeekEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeWeaHoursPerWeekEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeWeaHoursPerWeek";
                    this.mUISdeWeaHoursPerWeekEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeWeaHoursPerWeekEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeWeaHoursPerWeekEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeWeaHoursPerWeekEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient5 : DXTestControl
    {
        
        public UIGroupControlClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIOvertimeLimitViewCustom1 UIOvertimeLimitViewCustom
        {
            get
            {
                if ((this.mUIOvertimeLimitViewCustom == null))
                {
                    this.mUIOvertimeLimitViewCustom = new UIOvertimeLimitViewCustom1(this);
                }
                return this.mUIOvertimeLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIOvertimeLimitViewCustom1 mUIOvertimeLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOvertimeLimitViewCustom1 : DXTestControl
    {
        
        public UIOvertimeLimitViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "OvertimeLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "OvertimeLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client4 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client4(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client4 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client4 : DXTestControl
    {
        
        public UIPanelControl1Client4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIFlpWeaHoursClient1 UIFlpWeaHoursClient
        {
            get
            {
                if ((this.mUIFlpWeaHoursClient == null))
                {
                    this.mUIFlpWeaHoursClient = new UIFlpWeaHoursClient1(this);
                }
                return this.mUIFlpWeaHoursClient;
            }
        }
        #endregion
        
        #region Fields
        private UIFlpWeaHoursClient1 mUIFlpWeaHoursClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFlpWeaHoursClient1 : DXTestControl
    {
        
        public UIFlpWeaHoursClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flpWeaHours";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPWeaHoursPerWeekClient1 UIPWeaHoursPerWeekClient
        {
            get
            {
                if ((this.mUIPWeaHoursPerWeekClient == null))
                {
                    this.mUIPWeaHoursPerWeekClient = new UIPWeaHoursPerWeekClient1(this);
                }
                return this.mUIPWeaHoursPerWeekClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPWeaHoursPerWeekClient1 mUIPWeaHoursPerWeekClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPWeaHoursPerWeekClient1 : DXTestControl
    {
        
        public UIPWeaHoursPerWeekClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pWeaHoursPerWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeWeaHoursPerWeekEdit
        {
            get
            {
                if ((this.mUISdeWeaHoursPerWeekEdit == null))
                {
                    this.mUISdeWeaHoursPerWeekEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeWeaHoursPerWeekEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeWeaHoursPerWeek";
                    this.mUISdeWeaHoursPerWeekEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeWeaHoursPerWeekEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeWeaHoursPerWeekEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeWeaHoursPerWeekEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient6 : DXTestControl
    {
        
        public UIGroupControlClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIOvertimeLimitViewCustom2 UIOvertimeLimitViewCustom
        {
            get
            {
                if ((this.mUIOvertimeLimitViewCustom == null))
                {
                    this.mUIOvertimeLimitViewCustom = new UIOvertimeLimitViewCustom2(this);
                }
                return this.mUIOvertimeLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIOvertimeLimitViewCustom2 mUIOvertimeLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOvertimeLimitViewCustom2 : DXTestControl
    {
        
        public UIOvertimeLimitViewCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "OvertimeLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "OvertimeLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client5 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client5(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client5 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client5 : DXTestControl
    {
        
        public UIPanelControl1Client5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIFlpWeaHoursClient2 UIFlpWeaHoursClient
        {
            get
            {
                if ((this.mUIFlpWeaHoursClient == null))
                {
                    this.mUIFlpWeaHoursClient = new UIFlpWeaHoursClient2(this);
                }
                return this.mUIFlpWeaHoursClient;
            }
        }
        #endregion
        
        #region Fields
        private UIFlpWeaHoursClient2 mUIFlpWeaHoursClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFlpWeaHoursClient2 : DXTestControl
    {
        
        public UIFlpWeaHoursClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flpWeaHours";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPWeaHoursPerWeekClient2 UIPWeaHoursPerWeekClient
        {
            get
            {
                if ((this.mUIPWeaHoursPerWeekClient == null))
                {
                    this.mUIPWeaHoursPerWeekClient = new UIPWeaHoursPerWeekClient2(this);
                }
                return this.mUIPWeaHoursPerWeekClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPWeaHoursPerWeekClient2 mUIPWeaHoursPerWeekClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPWeaHoursPerWeekClient2 : DXTestControl
    {
        
        public UIPWeaHoursPerWeekClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pWeaHoursPerWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeWeaHoursPerWeekEdit
        {
            get
            {
                if ((this.mUISdeWeaHoursPerWeekEdit == null))
                {
                    this.mUISdeWeaHoursPerWeekEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeWeaHoursPerWeekEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeWeaHoursPerWeek";
                    this.mUISdeWeaHoursPerWeekEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeWeaHoursPerWeekEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeWeaHoursPerWeekEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeWeaHoursPerWeekEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcLimitsTable : DXGrid
    {
        
        public UIGcLimitsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLimits";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXCell UIGyldigfra06092016Cell
        {
            get
            {
                if ((this.mUIGyldigfra06092016Cell == null))
                {
                    this.mUIGyldigfra06092016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGyldigfra06092016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcLimitsGridControlCell[View]gvLimits[Row]1[Column]colLimitTitle";
                    this.mUIGyldigfra06092016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGyldigfra06092016Cell.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIGyldigfra06092016Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGyldigfra06092016Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostDispensationCustom : DXTestControl
    {
        
        public UIViewHostDispensationCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHostDispensationDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UILimitContainerViewCustom UILimitContainerViewCustom
        {
            get
            {
                if ((this.mUILimitContainerViewCustom == null))
                {
                    this.mUILimitContainerViewCustom = new UILimitContainerViewCustom(this);
                }
                return this.mUILimitContainerViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILimitContainerViewCustom mUILimitContainerViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILimitContainerViewCustom : DXTestControl
    {
        
        public UILimitContainerViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LimitContainerView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LimitContainerView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIXtraTabControlLimitDTabList UIXtraTabControlLimitDTabList
        {
            get
            {
                if ((this.mUIXtraTabControlLimitDTabList == null))
                {
                    this.mUIXtraTabControlLimitDTabList = new UIXtraTabControlLimitDTabList(this);
                }
                return this.mUIXtraTabControlLimitDTabList;
            }
        }
        
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbAddLimit";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUINYButton.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraTabControlLimitDTabList mUIXtraTabControlLimitDTabList;
        
        private DXButton mUINYButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtraTabControlLimitDTabList : DXTestControl
    {
        
        public UIXtraTabControlLimitDTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControlLimitDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIXtraTabPageDetailsClient UIXtraTabPageDetailsClient
        {
            get
            {
                if ((this.mUIXtraTabPageDetailsClient == null))
                {
                    this.mUIXtraTabPageDetailsClient = new UIXtraTabPageDetailsClient(this);
                }
                return this.mUIXtraTabPageDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraTabPageDetailsClient mUIXtraTabPageDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtraTabPageDetailsClient : DXTestControl
    {
        
        public UIXtraTabPageDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPageDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcLimitClient1 UIPcLimitClient
        {
            get
            {
                if ((this.mUIPcLimitClient == null))
                {
                    this.mUIPcLimitClient = new UIPcLimitClient1(this);
                }
                return this.mUIPcLimitClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcLimitClient1 mUIPcLimitClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcLimitClient1 : DXTestControl
    {
        
        public UIPcLimitClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcLimit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIViewHostLimitCustom UIViewHostLimitCustom
        {
            get
            {
                if ((this.mUIViewHostLimitCustom == null))
                {
                    this.mUIViewHostLimitCustom = new UIViewHostLimitCustom(this);
                }
                return this.mUIViewHostLimitCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostLimitCustom mUIViewHostLimitCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostLimitCustom : DXTestControl
    {
        
        public UIViewHostLimitCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHostLimit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UILimitDetailsViewCustom1 UILimitDetailsViewCustom
        {
            get
            {
                if ((this.mUILimitDetailsViewCustom == null))
                {
                    this.mUILimitDetailsViewCustom = new UILimitDetailsViewCustom1(this);
                }
                return this.mUILimitDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILimitDetailsViewCustom1 mUILimitDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILimitDetailsViewCustom1 : DXTestControl
    {
        
        public UILimitDetailsViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LimitDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LimitDetailsView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client6 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client6(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        
        public DXTextEdit UISdeFromDateEdit
        {
            get
            {
                if ((this.mUISdeFromDateEdit == null))
                {
                    this.mUISdeFromDateEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeFromDateEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeFromDate";
                    this.mUISdeFromDateEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUISdeFromDateEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeFromDateEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client6 mUIPanelControl1Client;
        
        private DXTextEdit mUISdeFromDateEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client6 : DXTestControl
    {
        
        public UIPanelControl1Client6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIGcvhLimitDetailsCustom1 UIGcvhLimitDetailsCustom
        {
            get
            {
                if ((this.mUIGcvhLimitDetailsCustom == null))
                {
                    this.mUIGcvhLimitDetailsCustom = new UIGcvhLimitDetailsCustom1(this);
                }
                return this.mUIGcvhLimitDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGcvhLimitDetailsCustom1 mUIGcvhLimitDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcvhLimitDetailsCustom1 : DXTestControl
    {
        
        public UIGcvhLimitDetailsCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient7 UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient7(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        
        public UIGroupControlClient11 UIGroupControlClient1
        {
            get
            {
                if ((this.mUIGroupControlClient1 == null))
                {
                    this.mUIGroupControlClient1 = new UIGroupControlClient11(this);
                }
                return this.mUIGroupControlClient1;
            }
        }
        
        public UIGroupControlClient21 UIGroupControlClient2
        {
            get
            {
                if ((this.mUIGroupControlClient2 == null))
                {
                    this.mUIGroupControlClient2 = new UIGroupControlClient21(this);
                }
                return this.mUIGroupControlClient2;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient7 mUIGroupControlClient;
        
        private UIGroupControlClient11 mUIGroupControlClient1;
        
        private UIGroupControlClient21 mUIGroupControlClient2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient7 : DXTestControl
    {
        
        public UIGroupControlClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[3]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIOffDutyLimitViewCustom1 UIOffDutyLimitViewCustom
        {
            get
            {
                if ((this.mUIOffDutyLimitViewCustom == null))
                {
                    this.mUIOffDutyLimitViewCustom = new UIOffDutyLimitViewCustom1(this);
                }
                return this.mUIOffDutyLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIOffDutyLimitViewCustom1 mUIOffDutyLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOffDutyLimitViewCustom1 : DXTestControl
    {
        
        public UIOffDutyLimitViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "OffDutyLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "OffDutyLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client7 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client7(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        
        public UIGcBreakTypesClient1 UIGcBreakTypesClient
        {
            get
            {
                if ((this.mUIGcBreakTypesClient == null))
                {
                    this.mUIGcBreakTypesClient = new UIGcBreakTypesClient1(this);
                }
                return this.mUIGcBreakTypesClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client7 mUIPanelControl1Client;
        
        private UIGcBreakTypesClient1 mUIGcBreakTypesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client7 : DXTestControl
    {
        
        public UIPanelControl1Client7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPFreeBeforeShiftClient1 UIPFreeBeforeShiftClient
        {
            get
            {
                if ((this.mUIPFreeBeforeShiftClient == null))
                {
                    this.mUIPFreeBeforeShiftClient = new UIPFreeBeforeShiftClient1(this);
                }
                return this.mUIPFreeBeforeShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPFreeBeforeShiftClient1 mUIPFreeBeforeShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPFreeBeforeShiftClient1 : DXTestControl
    {
        
        public UIPFreeBeforeShiftClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pFreeBeforeShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeMinFreeBeforeShifEdit
        {
            get
            {
                if ((this.mUISdeMinFreeBeforeShifEdit == null))
                {
                    this.mUISdeMinFreeBeforeShifEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeMinFreeBeforeShifEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeMinFreeBeforeShift";
                    this.mUISdeMinFreeBeforeShifEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeMinFreeBeforeShifEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeMinFreeBeforeShifEdit;
            }
        }
        
        public UILueOvertimeSsdLookUpEdit1 UILueOvertimeSsdLookUpEdit
        {
            get
            {
                if ((this.mUILueOvertimeSsdLookUpEdit == null))
                {
                    this.mUILueOvertimeSsdLookUpEdit = new UILueOvertimeSsdLookUpEdit1(this);
                }
                return this.mUILueOvertimeSsdLookUpEdit;
            }
        }
        
        public UILueTurnoutSsdLookUpEdit1 UILueTurnoutSsdLookUpEdit
        {
            get
            {
                if ((this.mUILueTurnoutSsdLookUpEdit == null))
                {
                    this.mUILueTurnoutSsdLookUpEdit = new UILueTurnoutSsdLookUpEdit1(this);
                }
                return this.mUILueTurnoutSsdLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeMinFreeBeforeShifEdit;
        
        private UILueOvertimeSsdLookUpEdit1 mUILueOvertimeSsdLookUpEdit;
        
        private UILueTurnoutSsdLookUpEdit1 mUILueTurnoutSsdLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILueOvertimeSsdLookUpEdit1 : DXLookUpEdit
    {
        
        public UILueOvertimeSsdLookUpEdit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueOvertimeSsd";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "lueOvertimeSsdPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILueTurnoutSsdLookUpEdit1 : DXLookUpEdit
    {
        
        public UILueTurnoutSsdLookUpEdit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueTurnoutSsd";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "lueTurnoutSsdPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcBreakTypesClient1 : DXTestControl
    {
        
        public UIGcBreakTypesClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcBreakTypes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkFreeBeforeShiftCheckBox
        {
            get
            {
                if ((this.mUIChkFreeBeforeShiftCheckBox == null))
                {
                    this.mUIChkFreeBeforeShiftCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkFreeBeforeShiftCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkFreeBeforeShift";
                    this.mUIChkFreeBeforeShiftCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIChkFreeBeforeShiftCheckBox.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIChkFreeBeforeShiftCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkFreeBeforeShiftCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient11 : DXTestControl
    {
        
        public UIGroupControlClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UITotalHoursLimitViewCustom3 UITotalHoursLimitViewCustom
        {
            get
            {
                if ((this.mUITotalHoursLimitViewCustom == null))
                {
                    this.mUITotalHoursLimitViewCustom = new UITotalHoursLimitViewCustom3(this);
                }
                return this.mUITotalHoursLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UITotalHoursLimitViewCustom3 mUITotalHoursLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITotalHoursLimitViewCustom3 : DXTestControl
    {
        
        public UITotalHoursLimitViewCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "TotalHoursLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TotalHoursLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIGroupControlBreakTypClient1 UIGroupControlBreakTypClient
        {
            get
            {
                if ((this.mUIGroupControlBreakTypClient == null))
                {
                    this.mUIGroupControlBreakTypClient = new UIGroupControlBreakTypClient1(this);
                }
                return this.mUIGroupControlBreakTypClient;
            }
        }
        
        public UIPTotalWorkClient3 UIPTotalWorkClient
        {
            get
            {
                if ((this.mUIPTotalWorkClient == null))
                {
                    this.mUIPTotalWorkClient = new UIPTotalWorkClient3(this);
                }
                return this.mUIPTotalWorkClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlBreakTypClient1 mUIGroupControlBreakTypClient;
        
        private UIPTotalWorkClient3 mUIPTotalWorkClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlBreakTypClient1 : DXTestControl
    {
        
        public UIGroupControlBreakTypClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlBreakTypes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkBreakTypeTotalHouCheckBox
        {
            get
            {
                if ((this.mUIChkBreakTypeTotalHouCheckBox == null))
                {
                    this.mUIChkBreakTypeTotalHouCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkBreakTypeTotalHouCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkBreakTypeTotalHoursPerWeek";
                    this.mUIChkBreakTypeTotalHouCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIChkBreakTypeTotalHouCheckBox.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIChkBreakTypeTotalHouCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkBreakTypeTotalHouCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalWorkClient3 : DXTestControl
    {
        
        public UIPTotalWorkClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalWork";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPTotalHoursPerWeekClient3 UIPTotalHoursPerWeekClient
        {
            get
            {
                if ((this.mUIPTotalHoursPerWeekClient == null))
                {
                    this.mUIPTotalHoursPerWeekClient = new UIPTotalHoursPerWeekClient3(this);
                }
                return this.mUIPTotalHoursPerWeekClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPTotalHoursPerWeekClient3 mUIPTotalHoursPerWeekClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPTotalHoursPerWeekClient3 : DXTestControl
    {
        
        public UIPTotalHoursPerWeekClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTotalHoursPerWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeMaxTotalHoursPerWEdit
        {
            get
            {
                if ((this.mUISdeMaxTotalHoursPerWEdit == null))
                {
                    this.mUISdeMaxTotalHoursPerWEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeMaxTotalHoursPerWEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeMaxTotalHoursPerWeek";
                    this.mUISdeMaxTotalHoursPerWEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeMaxTotalHoursPerWEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeMaxTotalHoursPerWEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeMaxTotalHoursPerWEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient21 : DXTestControl
    {
        
        public UIGroupControlClient21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcvhLimitDetailsGroupControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIOvertimeLimitViewCustom3 UIOvertimeLimitViewCustom
        {
            get
            {
                if ((this.mUIOvertimeLimitViewCustom == null))
                {
                    this.mUIOvertimeLimitViewCustom = new UIOvertimeLimitViewCustom3(this);
                }
                return this.mUIOvertimeLimitViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIOvertimeLimitViewCustom3 mUIOvertimeLimitViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOvertimeLimitViewCustom3 : DXTestControl
    {
        
        public UIOvertimeLimitViewCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "OvertimeLimitView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "OvertimeLimitView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client8 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client8(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client8 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client8 : DXTestControl
    {
        
        public UIPanelControl1Client8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIFlpWeaHoursClient3 UIFlpWeaHoursClient
        {
            get
            {
                if ((this.mUIFlpWeaHoursClient == null))
                {
                    this.mUIFlpWeaHoursClient = new UIFlpWeaHoursClient3(this);
                }
                return this.mUIFlpWeaHoursClient;
            }
        }
        #endregion
        
        #region Fields
        private UIFlpWeaHoursClient3 mUIFlpWeaHoursClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFlpWeaHoursClient3 : DXTestControl
    {
        
        public UIFlpWeaHoursClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flpWeaHours";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPWeaHoursPerWeekClient3 UIPWeaHoursPerWeekClient
        {
            get
            {
                if ((this.mUIPWeaHoursPerWeekClient == null))
                {
                    this.mUIPWeaHoursPerWeekClient = new UIPWeaHoursPerWeekClient3(this);
                }
                return this.mUIPWeaHoursPerWeekClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPWeaHoursPerWeekClient3 mUIPWeaHoursPerWeekClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPWeaHoursPerWeekClient3 : DXTestControl
    {
        
        public UIPWeaHoursPerWeekClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pWeaHoursPerWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeWeaHoursPerWeekEdit
        {
            get
            {
                if ((this.mUISdeWeaHoursPerWeekEdit == null))
                {
                    this.mUISdeWeaHoursPerWeekEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeWeaHoursPerWeekEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeWeaHoursPerWeek";
                    this.mUISdeWeaHoursPerWeekEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeWeaHoursPerWeekEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeWeaHoursPerWeekEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeWeaHoursPerWeekEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnsattfilterWindow : DXWindow
    {
        
        public UIAnsattfilterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansattfilter";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        
        public UIPanelControl1Client9 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client9(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        
        public DXButton UIBrukButton
        {
            get
            {
                if ((this.mUIBrukButton == null))
                {
                    this.mUIBrukButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnUse";
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIBrukButton.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUIBrukButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILukkButton;
        
        private UIPanelControl1Client9 mUIPanelControl1Client;
        
        private DXButton mUIBrukButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client9 : DXTestControl
    {
        
        public UIPanelControl1Client9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHost1Custom : DXTestControl
    {
        
        public UIViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient3 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient3(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient3 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient3 : DXTestControl
    {
        
        public UIPcViewClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIEmployeeFilterEditViCustom UIEmployeeFilterEditViCustom
        {
            get
            {
                if ((this.mUIEmployeeFilterEditViCustom == null))
                {
                    this.mUIEmployeeFilterEditViCustom = new UIEmployeeFilterEditViCustom(this);
                }
                return this.mUIEmployeeFilterEditViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeFilterEditViCustom mUIEmployeeFilterEditViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeFilterEditViCustom : DXTestControl
    {
        
        public UIEmployeeFilterEditViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFilterEditView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFilterEditView";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAdd";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILeggtilButton.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILeggtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow8 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow8()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow19 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow19(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow19 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow19 : WinWindow
    {
        
        public UIItemWindow19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Gaston Gare  (" +
                    "Vaktbokdato: 13.10.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAMLDispClient
        {
            get
            {
                if ((this.mUIAMLDispClient == null))
                {
                    this.mUIAMLDispClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAMLDispClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Gaston Gare  (" +
                            "Vaktbokdato: 13.10.2016)");
                    this.mUIAMLDispClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAMLDispClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAMLDispClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAMLavtaleWindow1 : WinWindow
    {
        
        public UIAMLavtaleWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "AML avtale";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcAgreementClient1 UIPcAgreementClient
        {
            get
            {
                if ((this.mUIPcAgreementClient == null))
                {
                    this.mUIPcAgreementClient = new UIPcAgreementClient1(this);
                }
                return this.mUIPcAgreementClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcAgreementClient1 mUIPcAgreementClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcAgreementClient1 : DXTestControl
    {
        
        public UIPcAgreementClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcAgreement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIXtabCtrAgreementTabList1 UIXtabCtrAgreementTabList
        {
            get
            {
                if ((this.mUIXtabCtrAgreementTabList == null))
                {
                    this.mUIXtabCtrAgreementTabList = new UIXtabCtrAgreementTabList1(this);
                }
                return this.mUIXtabCtrAgreementTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIXtabCtrAgreementTabList1 mUIXtabCtrAgreementTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtabCtrAgreementTabList1 : DXTestControl
    {
        
        public UIXtabCtrAgreementTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtabCtrAgreement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIXtpHistoryClient UIXtpHistoryClient
        {
            get
            {
                if ((this.mUIXtpHistoryClient == null))
                {
                    this.mUIXtpHistoryClient = new UIXtpHistoryClient(this);
                }
                return this.mUIXtpHistoryClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtpHistoryClient mUIXtpHistoryClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtpHistoryClient : DXTestControl
    {
        
        public UIXtpHistoryClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpHistory";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public WinClient UIChartHistoryClient
        {
            get
            {
                if ((this.mUIChartHistoryClient == null))
                {
                    this.mUIChartHistoryClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIChartHistoryClient.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUIChartHistoryClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIChartHistoryClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVelgavdelingWindow : DXWindow
    {
        
        public UIVelgavdelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg avdeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg avdeling");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIEFilterEdit
        {
            get
            {
                if ((this.mUIEFilterEdit == null))
                {
                    this.mUIEFilterEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIEFilterEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eFilter";
                    this.mUIEFilterEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIEFilterEdit.WindowTitles.Add("Velg avdeling");
                    #endregion
                }
                return this.mUIEFilterEdit;
            }
        }
        
        public DXTreeList UITlDepartmentsTreeList
        {
            get
            {
                if ((this.mUITlDepartmentsTreeList == null))
                {
                    this.mUITlDepartmentsTreeList = new DXTreeList(this);
                    #region Search Criteria
                    this.mUITlDepartmentsTreeList.SearchProperties[DXTestControl.PropertyNames.Name] = "tlDepartments";
                    this.mUITlDepartmentsTreeList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
                    this.mUITlDepartmentsTreeList.WindowTitles.Add("Velg avdeling");
                    #endregion
                }
                return this.mUITlDepartmentsTreeList;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Velg avdeling");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIEFilterEdit;
        
        private DXTreeList mUITlDepartmentsTreeList;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow9 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow9()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow20 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow20(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIEmploymentListControCustom UIEmploymentListControCustom
        {
            get
            {
                if ((this.mUIEmploymentListControCustom == null))
                {
                    this.mUIEmploymentListControCustom = new UIEmploymentListControCustom(this);
                }
                return this.mUIEmploymentListControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow20 mUIItemWindow;
        
        private UIEmploymentListControCustom mUIEmploymentListControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow20 : WinWindow
    {
        
        public UIItemWindow20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmploymentListControCustom : DXTestControl
    {
        
        public UIEmploymentListControCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmploymentListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmploymentListControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIScContentSplitContainerControl UIScContentSplitContainerControl
        {
            get
            {
                if ((this.mUIScContentSplitContainerControl == null))
                {
                    this.mUIScContentSplitContainerControl = new UIScContentSplitContainerControl(this);
                }
                return this.mUIScContentSplitContainerControl;
            }
        }
        
        public DXButton UIEndreButton
        {
            get
            {
                if ((this.mUIEndreButton == null))
                {
                    this.mUIEndreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEdit";
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndreButton.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
                    this.mUIEndreButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIEndreButton;
            }
        }
        
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNew";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINYButton.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
                    this.mUINYButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        #endregion
        
        #region Fields
        private UIScContentSplitContainerControl mUIScContentSplitContainerControl;
        
        private DXButton mUIEndreButton;
        
        private DXButton mUINYButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIScContentSplitContainerControl : DXSplitContainerControl
    {
        
        public UIScContentSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "scContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient5 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient5(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient5 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISplitGroupPanelClient5 : DXTestControl
    {
        
        public UISplitGroupPanelClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "scContentSplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIEmploymentControlCustom UIEmploymentControlCustom
        {
            get
            {
                if ((this.mUIEmploymentControlCustom == null))
                {
                    this.mUIEmploymentControlCustom = new UIEmploymentControlCustom(this);
                }
                return this.mUIEmploymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmploymentControlCustom mUIEmploymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmploymentControlCustom : DXTestControl
    {
        
        public UIEmploymentControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "employmentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmploymentControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcEmploymentsTable UIGcEmploymentsTable
        {
            get
            {
                if ((this.mUIGcEmploymentsTable == null))
                {
                    this.mUIGcEmploymentsTable = new UIGcEmploymentsTable(this);
                }
                return this.mUIGcEmploymentsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmploymentsTable mUIGcEmploymentsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcEmploymentsTable : DXGrid
    {
        
        public UIGcEmploymentsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem2060AMLavdeling1Cell
        {
            get
            {
                if ((this.mUIItem2060AMLavdeling1Cell == null))
                {
                    this.mUIItem2060AMLavdeling1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2060AMLavdeling1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmploymentsGridControlCell[View]gvEmployments[Row]0[Column]colDepartmentString";
                    this.mUIItem2060AMLavdeling1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2060AMLavdeling1Cell.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Administrasjon");
                    this.mUIItem2060AMLavdeling1Cell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItem2060AMLavdeling1Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem2060AMLavdeling1Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStillingsforholdWindow : DXWindow
    {
        
        public UIStillingsforholdWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Stillingsforhold";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient1 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient1(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIGSDialogFooterBarCustom3 UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom3(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient1 mUIPcContentClient;
        
        private UIGSDialogFooterBarCustom3 mUIGSDialogFooterBarCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient1 : DXTestControl
    {
        
        public UIPcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public DXTextEdit UISePositionPercentEdit
        {
            get
            {
                if ((this.mUISePositionPercentEdit == null))
                {
                    this.mUISePositionPercentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISePositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sePositionPercent";
                    this.mUISePositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSpinEdit";
                    this.mUISePositionPercentEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUISePositionPercentEdit;
            }
        }
        
        public UIGSPanelControlClient3 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient3(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UITlleDepartment1LookUpEdit UITlleDepartment1LookUpEdit
        {
            get
            {
                if ((this.mUITlleDepartment1LookUpEdit == null))
                {
                    this.mUITlleDepartment1LookUpEdit = new UITlleDepartment1LookUpEdit(this);
                }
                return this.mUITlleDepartment1LookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private DXTextEdit mUISePositionPercentEdit;
        
        private UIGSPanelControlClient3 mUIGSPanelControlClient;
        
        private UITlleDepartment1LookUpEdit mUITlleDepartment1LookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient3 : DXTestControl
    {
        
        public UIGSPanelControlClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "slueRuleSet";
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit1
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit1 == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit1 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "sluePositionCategory";
                    this.mUIGSSearchLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit1;
            }
        }
        
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit2
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit2 == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit2 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "slueWeaAgreement";
                    this.mUIGSSearchLookUpEditLookUpEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit2;
            }
        }
        
        public DXTextEdit UITeInternalPositionNuEdit
        {
            get
            {
                if ((this.mUITeInternalPositionNuEdit == null))
                {
                    this.mUITeInternalPositionNuEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeInternalPositionNuEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teInternalPositionNumber";
                    this.mUITeInternalPositionNuEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITeInternalPositionNuEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUITeInternalPositionNuEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit1;
        
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit2;
        
        private DXTextEdit mUITeInternalPositionNuEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITlleDepartment1LookUpEdit : DXLookUpEdit
    {
        
        public UITlleDepartment1LookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlleDepartment[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListLookUpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButton1Button
        {
            get
            {
                if ((this.mUIEditorButton1Button == null))
                {
                    this.mUIEditorButton1Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "tlleDepartment[1]Button[1]";
                    this.mUIEditorButton1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton1Button.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIEditorButton1Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButton1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSDialogFooterBarCustom3 : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow81 : DXWindow
    {
        
        public UIItemWindow81()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg avdeling.";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg avdeling.");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient4 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient4(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient4 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient4 : DXTestControl
    {
        
        public UIGSPanelControlClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Velg avdeling.");
            #endregion
        }
        
        #region Properties
        public UIGSTreeListTreeList UIGSTreeListTreeList
        {
            get
            {
                if ((this.mUIGSTreeListTreeList == null))
                {
                    this.mUIGSTreeListTreeList = new UIGSTreeListTreeList(this);
                }
                return this.mUIGSTreeListTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UIGSTreeListTreeList mUIGSTreeListTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSTreeListTreeList : DXTreeList
    {
        
        public UIGSTreeListTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlAdd";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
            this.WindowTitles.Add("Velg avdeling.");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode0TreeListNode : DXTreeListNode
    {
        
        public UINode0TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Velg avdeling.");
            #endregion
        }
        
        #region Properties
        public UINode4TreeListNode UINode4TreeListNode
        {
            get
            {
                if ((this.mUINode4TreeListNode == null))
                {
                    this.mUINode4TreeListNode = new UINode4TreeListNode(this);
                }
                return this.mUINode4TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode4TreeListNode mUINode4TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode4TreeListNode : DXTreeListNode
    {
        
        public UINode4TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Velg avdeling.");
            #endregion
        }
        
        #region Properties
        public UINode6TreeListNode UINode6TreeListNode
        {
            get
            {
                if ((this.mUINode6TreeListNode == null))
                {
                    this.mUINode6TreeListNode = new UINode6TreeListNode(this);
                }
                return this.mUINode6TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode6TreeListNode mUINode6TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode6TreeListNode : DXTreeListNode
    {
        
        public UINode6TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Velg avdeling.");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UITreeListColumn0TreeListCell
        {
            get
            {
                if ((this.mUITreeListColumn0TreeListCell == null))
                {
                    this.mUITreeListColumn0TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUITreeListColumn0TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "TreeListColumn[0]";
                    this.mUITreeListColumn0TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUITreeListColumn0TreeListCell.WindowTitles.Add("Velg avdeling.");
                    #endregion
                }
                return this.mUITreeListColumn0TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUITreeListColumn0TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow10 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow10()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow24 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow24(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow24 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow24 : WinWindow
    {
        
        public UIItemWindow24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Vaktbok");
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64339794ASCLAvWindow11 : WinWindow
    {
        
        public UIGatver64339794ASCLAvWindow11()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow25 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow25(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow110 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow110(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow25 mUIItemWindow;
        
        private UIItemWindow110 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow25 : WinWindow
    {
        
        public UIItemWindow25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Ansatt: Ian Idre  (Vak" +
                    "tbokdato: 19.10.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIDøgnogukeskilleClient
        {
            get
            {
                if ((this.mUIDøgnogukeskilleClient == null))
                {
                    this.mUIDøgnogukeskilleClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDøgnogukeskilleClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Ansatt: Ian Idre  (Vak" +
                            "tbokdato: 19.10.2016)");
                    this.mUIDøgnogukeskilleClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIDøgnogukeskilleClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDøgnogukeskilleClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow110 : WinWindow
    {
        
        public UIItemWindow110(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Ansatt: Ian Idre  (Vak" +
                    "tbokdato: 19.10.2016)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Ansatt: Ian Idre  (Vak" +
                            "tbokdato: 19.10.2016)");
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDøgnogukeskilleWindow : WinWindow
    {
        
        public UIDøgnogukeskilleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Døgn- og ukeskille";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmDayAndWeekSeparatorEdit";
            this.WindowTitles.Add("Døgn- og ukeskille");
            this.WindowTitles.Add("Dygn- och veckobryt");
            #endregion
        }
        
        #region Properties
        public UIItemWindow26 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow26(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow114 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow114(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow27 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow27(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemClient2 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient2(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow26 mUIItemWindow;
        
        private UIItemWindow114 mUIItemWindow1;
        
        private UIItemWindow27 mUIItemWindow2;
        
        private UIItemClient2 mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow26 : WinWindow
    {
        
        public UIItemWindow26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.WindowTitles.Add("Døgn- og ukeskille");
            this.WindowTitles.Add("Dygn- och veckobryt");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Døgn- og ukeskille");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow114 : WinWindow
    {
        
        public UIItemWindow114(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicTimeEdit";
            this.WindowTitles.Add("Døgn- og ukeskille");
            this.WindowTitles.Add("Dygn- och veckobryt");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Døgn- og ukeskille");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow27 : WinWindow
    {
        
        public UIItemWindow27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSMemo";
            this.WindowTitles.Add("Døgn- og ukeskille");
            this.WindowTitles.Add("Dygn- och veckobryt");
            #endregion
        }
        
        #region Properties
        public WinClient UIDøgnogukeskilleClient
        {
            get
            {
                if ((this.mUIDøgnogukeskilleClient == null))
                {
                    this.mUIDøgnogukeskilleClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDøgnogukeskilleClient.WindowTitles.Add("Døgn- og ukeskille");
                    #endregion
                }
                return this.mUIDøgnogukeskilleClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDøgnogukeskilleClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemClient2 : WinClient
    {
        
        public UIItemClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Døgn- og ukeskille");
            this.WindowTitles.Add("Dygn- och veckobryt");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Døgn- og ukeskille");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOppsettforAMLkalkuleWindow : WinWindow
    {
        
        public UIOppsettforAMLkalkuleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Oppsett for AML-kalkuleringer";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmRegEdit";
            this.WindowTitles.Add("Oppsett for AML-kalkuleringer");
            #endregion
        }
        
        #region Properties
        public UIOppsettforAMLkalkuleClient UIOppsettforAMLkalkuleClient
        {
            get
            {
                if ((this.mUIOppsettforAMLkalkuleClient == null))
                {
                    this.mUIOppsettforAMLkalkuleClient = new UIOppsettforAMLkalkuleClient(this);
                }
                return this.mUIOppsettforAMLkalkuleClient;
            }
        }
        
        public UIItemWindow28 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow28(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItem1200Window UIItem1200Window
        {
            get
            {
                if ((this.mUIItem1200Window == null))
                {
                    this.mUIItem1200Window = new UIItem1200Window(this);
                }
                return this.mUIItem1200Window;
            }
        }
        
        public UIItemWindow115 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow115(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemClient4 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient4(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIOppsettforAMLkalkuleClient mUIOppsettforAMLkalkuleClient;
        
        private UIItemWindow28 mUIItemWindow;
        
        private UIItem1200Window mUIItem1200Window;
        
        private UIItemWindow115 mUIItemWindow1;
        
        private UIItemClient4 mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOppsettforAMLkalkuleClient : WinClient
    {
        
        public UIOppsettforAMLkalkuleClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Oppsett for AML-kalkuleringer";
            this.WindowTitles.Add("Oppsett for AML-kalkuleringer");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("Oppsett for AML-kalkuleringer");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow28 : WinWindow
    {
        
        public UIItemWindow28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSComboBox";
            this.WindowTitles.Add("Oppsett for AML-kalkuleringer");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Oppsett for AML-kalkuleringer");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItem1200Window : WinWindow
    {
        
        public UIItem1200Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "12:00";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicTimeEdit";
            this.WindowTitles.Add("Oppsett for AML-kalkuleringer");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Oppsett for AML-kalkuleringer");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow115 : WinWindow
    {
        
        public UIItemWindow115(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TScrollBox";
            this.WindowTitles.Add("Oppsett for AML-kalkuleringer");
            #endregion
        }
        
        #region Properties
        public UIItemClient3 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient3(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient3 mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemClient3 : WinClient
    {
        
        public UIItemClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Oppsett for AML-kalkuleringer");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIMandagCheckBox
        {
            get
            {
                if ((this.mUIMandagCheckBox == null))
                {
                    this.mUIMandagCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIMandagCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Mandag";
                    this.mUIMandagCheckBox.WindowTitles.Add("Oppsett for AML-kalkuleringer");
                    #endregion
                }
                return this.mUIMandagCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIMandagCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemClient4 : WinClient
    {
        
        public UIItemClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Oppsett for AML-kalkuleringer");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Oppsett for AML-kalkuleringer");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public WinClient UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient1.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient1.WindowTitles.Add("Oppsett for AML-kalkuleringer");
                    #endregion
                }
                return this.mUIItemClient1;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        
        private WinClient mUIItemClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIInternetInformationSWindow : WinWindow
    {
        
        public UIInternetInformationSWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Internet Information Services (IIS) Manager";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UI_treeViewWindow UI_treeViewWindow
        {
            get
            {
                if ((this.mUI_treeViewWindow == null))
                {
                    this.mUI_treeViewWindow = new UI_treeViewWindow(this);
                }
                return this.mUI_treeViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_treeViewWindow mUI_treeViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_treeViewWindow : WinWindow
    {
        
        public UI_treeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_treeView";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIATMANGATSOFTgeigTreeItem UIATMANGATSOFTgeigTreeItem
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem = new UIATMANGATSOFTgeigTreeItem(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIATMANGATSOFTgeigTreeItem mUIATMANGATSOFTgeigTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIATMANGATSOFTgeigTreeItem : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "AT-MAN (GATSOFT\\geig)";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UISitesTreeItem UISitesTreeItem
        {
            get
            {
                if ((this.mUISitesTreeItem == null))
                {
                    this.mUISitesTreeItem = new UISitesTreeItem(this);
                }
                return this.mUISitesTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UISitesTreeItem mUISitesTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISitesTreeItem : WinTreeItem
    {
        
        public UISitesTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Sites";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIDefaultWebSiteTreeItem UIDefaultWebSiteTreeItem
        {
            get
            {
                if ((this.mUIDefaultWebSiteTreeItem == null))
                {
                    this.mUIDefaultWebSiteTreeItem = new UIDefaultWebSiteTreeItem(this);
                }
                return this.mUIDefaultWebSiteTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultWebSiteTreeItem mUIDefaultWebSiteTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDefaultWebSiteTreeItem : WinTreeItem
    {
        
        public UIDefaultWebSiteTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Default Web Site";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIGatWs1TreeItem
        {
            get
            {
                if ((this.mUIGatWs1TreeItem == null))
                {
                    this.mUIGatWs1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIGatWs1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "GatWs1";
                    this.mUIGatWs1TreeItem.SearchProperties["Value"] = "3";
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGatWs1TreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIGatWs1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow91 : WinWindow
    {
        
        public UIItemWindow91()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIManageApplicationMenuItem UIManageApplicationMenuItem
        {
            get
            {
                if ((this.mUIManageApplicationMenuItem == null))
                {
                    this.mUIManageApplicationMenuItem = new UIManageApplicationMenuItem(this);
                }
                return this.mUIManageApplicationMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIManageApplicationMenuItem mUIManageApplicationMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIManageApplicationMenuItem : WinMenuItem
    {
        
        public UIManageApplicationMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Manage Application";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIBrowseMenuItem
        {
            get
            {
                if ((this.mUIBrowseMenuItem == null))
                {
                    this.mUIBrowseMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIBrowseMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Browse";
                    this.mUIBrowseMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIBrowseMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIBrowseMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatWebserviceMainPagWindow : BrowserWindow
    {
        
        public UIGatWebserviceMainPagWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Gat Webservice Main Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Gat Webservice Main Page");
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGatWebserviceMainPagDocument UIGatWebserviceMainPagDocument
        {
            get
            {
                if ((this.mUIGatWebserviceMainPagDocument == null))
                {
                    this.mUIGatWebserviceMainPagDocument = new UIGatWebserviceMainPagDocument(this);
                }
                return this.mUIGatWebserviceMainPagDocument;
            }
        }
        
        public UIWeaBreakServiceWebSeDocument UIWeaBreakServiceWebSeDocument
        {
            get
            {
                if ((this.mUIWeaBreakServiceWebSeDocument == null))
                {
                    this.mUIWeaBreakServiceWebSeDocument = new UIWeaBreakServiceWebSeDocument(this);
                }
                return this.mUIWeaBreakServiceWebSeDocument;
            }
        }
        
        public UIWeaBreakServiceWebSeDocument1 UIWeaBreakServiceWebSeDocument1
        {
            get
            {
                if ((this.mUIWeaBreakServiceWebSeDocument1 == null))
                {
                    this.mUIWeaBreakServiceWebSeDocument1 = new UIWeaBreakServiceWebSeDocument1(this);
                }
                return this.mUIWeaBreakServiceWebSeDocument1;
            }
        }
        
        public UIWeaBreakServiceWebSeTitleBar UIWeaBreakServiceWebSeTitleBar
        {
            get
            {
                if ((this.mUIWeaBreakServiceWebSeTitleBar == null))
                {
                    this.mUIWeaBreakServiceWebSeTitleBar = new UIWeaBreakServiceWebSeTitleBar(this);
                }
                return this.mUIWeaBreakServiceWebSeTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGatWebserviceMainPagDocument mUIGatWebserviceMainPagDocument;
        
        private UIWeaBreakServiceWebSeDocument mUIWeaBreakServiceWebSeDocument;
        
        private UIWeaBreakServiceWebSeDocument1 mUIWeaBreakServiceWebSeDocument1;
        
        private UIWeaBreakServiceWebSeTitleBar mUIWeaBreakServiceWebSeTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatWebserviceMainPagDocument : HtmlDocument
    {
        
        public UIGatWebserviceMainPagDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gat Webservice Main Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1/";
            this.WindowTitles.Add("Gat Webservice Main Page");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIWeaBreakServiceHyperlink
        {
            get
            {
                if ((this.mUIWeaBreakServiceHyperlink == null))
                {
                    this.mUIWeaBreakServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIWeaBreakServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "WeaBreakService";
                    this.mUIWeaBreakServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/WeaBreakService.asmx";
                    this.mUIWeaBreakServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/WeaBreakService.asmx";
                    this.mUIWeaBreakServiceHyperlink.WindowTitles.Add("Gat Webservice Main Page");
                    #endregion
                }
                return this.mUIWeaBreakServiceHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIWeaBreakServiceHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWeaBreakServiceWebSeDocument : HtmlDocument
    {
        
        public UIWeaBreakServiceWebSeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "WeaBreakService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/WeaBreakService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1/WeaBreakService.asmx";
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIContentPane : HtmlDiv
    {
        
        public UIContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            //this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            //this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "WeaBreakService\r\n\r\n\r\nGat Wea break relat";
            //this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            //this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            //this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICalculateWeaAndSaveWHyperlink
        {
            get
            {
                if ((this.mUICalculateWeaAndSaveWHyperlink == null))
                {
                    this.mUICalculateWeaAndSaveWHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICalculateWeaAndSaveWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "CalculateWeaAndSaveWeaBreaksOverrideScheduler";
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/WeaBreakService.asmx";
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/WeaBreakService.asmx?op=CalculateWeaAndSaveWeaBreaksOverr" +
                        "ideScheduler";
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"WeaBreakService.asmx?op=CalculateW";
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUICalculateWeaAndSaveWHyperlink.WindowTitles.Add("WeaBreakService Web Service");
                    #endregion
                }
                return this.mUICalculateWeaAndSaveWHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICalculateWeaAndSaveWHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWeaBreakServiceWebSeDocument1 : HtmlDocument
    {
        
        public UIWeaBreakServiceWebSeDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "WeaBreakService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/WeaBreakService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1/WeaBreakService.asmx?op=CalculateWeaAndSaveWeaBreaksOverr" +
                "ideScheduler";
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIDepartmentCodeEdit
        {
            get
            {
                if ((this.mUIDepartmentCodeEdit == null))
                {
                    this.mUIDepartmentCodeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDepartmentCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIDepartmentCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "departmentCode";
                    this.mUIDepartmentCodeEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIDepartmentCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDepartmentCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDepartmentCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "frmInput";
                    this.mUIDepartmentCodeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"departmentCode\" class=\"frmInput\" t";
                    this.mUIDepartmentCodeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIDepartmentCodeEdit.WindowTitles.Add("WeaBreakService Web Service");
                    #endregion
                }
                return this.mUIDepartmentCodeEdit;
            }
        }
        
        public HtmlEdit UICalculatingYearEdit
        {
            get
            {
                if ((this.mUICalculatingYearEdit == null))
                {
                    this.mUICalculatingYearEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICalculatingYearEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUICalculatingYearEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "calculatingYear";
                    this.mUICalculatingYearEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICalculatingYearEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICalculatingYearEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICalculatingYearEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "frmInput";
                    this.mUICalculatingYearEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"calculatingYear\" class=\"frmInput\" ";
                    this.mUICalculatingYearEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUICalculatingYearEdit.WindowTitles.Add("WeaBreakService Web Service");
                    #endregion
                }
                return this.mUICalculatingYearEdit;
            }
        }
        
        public UIContentPane1 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane1(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIDepartmentCodeEdit;
        
        private HtmlEdit mUICalculatingYearEdit;
        
        private UIContentPane1 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIContentPane1 : HtmlDiv
    {
        
        public UIContentPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "WeaBreakService\r\n\r\n\r\nClick here for a co";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }

        #region Properties
        public HtmlInputButton UIInvokeButton
        {
            get
            {
                if ((this.mUIInvokeButton == null))
                {
                    this.mUIInvokeButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIInvokeButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIInvokeButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIInvokeButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Invoke";
                    this.mUIInvokeButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIInvokeButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIInvokeButton.FilterProperties[HtmlButton.PropertyNames.Class] = "button";
                    this.mUIInvokeButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"button\" type=\"submit\" value=\"Invo";
                    this.mUIInvokeButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUIInvokeButton.WindowTitles.Add("WeaBreakService Web Service");
                    #endregion
                }
                return this.mUIInvokeButton;
            }
        }
        #endregion

        #region Fields
        private HtmlInputButton mUIInvokeButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWeaBreakServiceWebSeTitleBar : WinTitleBar
    {
        
        public UIWeaBreakServiceWebSeTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("WeaBreakService Web Service");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMertidövertidWindow : DXWindow
    {
        
        public UIMertidövertidWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Mertid / övertid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UIPanClientClient1 UIPanClientClient
        {
            get
            {
                if ((this.mUIPanClientClient == null))
                {
                    this.mUIPanClientClient = new UIPanClientClient1(this);
                }
                return this.mUIPanClientClient;
            }
        }
        
        public DXPopupEdit UILnkDetail0PopupEdit
        {
            get
            {
                if ((this.mUILnkDetail0PopupEdit == null))
                {
                    this.mUILnkDetail0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail[0]";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetail0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
                    this.mUILnkDetail0PopupEdit.WindowTitles.Add("Mertid / övertid");
                    #endregion
                }
                return this.mUILnkDetail0PopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientClient1 mUIPanClientClient;
        
        private DXPopupEdit mUILnkDetail0PopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanClientClient1 : DXTestControl
    {
        
        public UIPanClientClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList2 UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList2(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList2 mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcClientTabList2 : DXTestControl
    {
        
        public UITcClientTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UITpWeaClient6 UITpWeaClient
        {
            get
            {
                if ((this.mUITpWeaClient == null))
                {
                    this.mUITpWeaClient = new UITpWeaClient6(this);
                }
                return this.mUITpWeaClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpWeaClient6 mUITpWeaClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWeaClient6 : DXTestControl
    {
        
        public UITpWeaClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWea";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UIGsGroupControl2Client4 UIGsGroupControl2Client
        {
            get
            {
                if ((this.mUIGsGroupControl2Client == null))
                {
                    this.mUIGsGroupControl2Client = new UIGsGroupControl2Client4(this);
                }
                return this.mUIGsGroupControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGroupControl2Client4 mUIGsGroupControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsGroupControl2Client4 : DXTestControl
    {
        
        public UIGsGroupControl2Client4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGroupControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UIGWeaBreakListTable4 UIGWeaBreakListTable
        {
            get
            {
                if ((this.mUIGWeaBreakListTable == null))
                {
                    this.mUIGWeaBreakListTable = new UIGWeaBreakListTable4(this);
                }
                return this.mUIGWeaBreakListTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGWeaBreakListTable4 mUIGWeaBreakListTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGWeaBreakListTable4 : DXGrid
    {
        
        public UIGWeaBreakListTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public DXCell UIVeckovila16003600Cell
        {
            get
            {
                if ((this.mUIVeckovila16003600Cell == null))
                {
                    this.mUIVeckovila16003600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVeckovila16003600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]0[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIVeckovila16003600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVeckovila16003600Cell.WindowTitles.Add("Mertid / övertid");
                    #endregion
                }
                return this.mUIVeckovila16003600Cell;
            }
        }
        
        public DXCell UIItem201610170700Cell
        {
            get
            {
                if ((this.mUIItem201610170700Cell == null))
                {
                    this.mUIItem201610170700Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem201610170700Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]0[Column]gvWeaBreakColumn_Fr" +
                        "om";
                    this.mUIItem201610170700Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem201610170700Cell.WindowTitles.Add("Mertid / övertid");
                    #endregion
                }
                return this.mUIItem201610170700Cell;
            }
        }
        
        public DXCell UIItem201610240700Cell
        {
            get
            {
                if ((this.mUIItem201610240700Cell == null))
                {
                    this.mUIItem201610240700Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem201610240700Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]0[Column]gvWeaBreakColumn_To" +
                        "";
                    this.mUIItem201610240700Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem201610240700Cell.WindowTitles.Add("Mertid / övertid");
                    #endregion
                }
                return this.mUIItem201610240700Cell;
            }
        }
        
        public DXCell UIATL4veckor22002000Cell
        {
            get
            {
                if ((this.mUIATL4veckor22002000Cell == null))
                {
                    this.mUIATL4veckor22002000Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIATL4veckor22002000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]1[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIATL4veckor22002000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIATL4veckor22002000Cell.WindowTitles.Add("Mertid / övertid");
                    #endregion
                }
                return this.mUIATL4veckor22002000Cell;
            }
        }
        
        public DXCell UIDygnsvilasnitt129013Cell
        {
            get
            {
                if ((this.mUIDygnsvilasnitt129013Cell == null))
                {
                    this.mUIDygnsvilasnitt129013Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDygnsvilasnitt129013Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]2[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIDygnsvilasnitt129013Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDygnsvilasnitt129013Cell.WindowTitles.Add("Mertid / övertid");
                    #endregion
                }
                return this.mUIDygnsvilasnitt129013Cell;
            }
        }
        
        public DXCell UIATL4veckor57002000Cell
        {
            get
            {
                if ((this.mUIATL4veckor57002000Cell == null))
                {
                    this.mUIATL4veckor57002000Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIATL4veckor57002000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gWeaBreakListGridControlCell[View]gvWeaBreakList[Row]3[Column]gvWeaBreakColumn_Ca" +
                        "ption";
                    this.mUIATL4veckor57002000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIATL4veckor57002000Cell.WindowTitles.Add("Mertid / övertid");
                    #endregion
                }
                return this.mUIATL4veckor57002000Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIVeckovila16003600Cell;
        
        private DXCell mUIItem201610170700Cell;
        
        private DXCell mUIItem201610240700Cell;
        
        private DXCell mUIATL4veckor22002000Cell;
        
        private DXCell mUIDygnsvilasnitt129013Cell;
        
        private DXCell mUIATL4veckor57002000Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64440754GATSOFWindow1 : WinWindow
    {
        
        public UIGatver64440754GATSOFWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow29 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow29(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow116 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow116(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow210 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow210(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow29 mUIItemWindow;
        
        private UIItemWindow116 mUIItemWindow1;
        
        private UIItemWindow210 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow29 : WinWindow
    {
        
        public UIItemWindow29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - PERSONALBOK");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnställdClient
        {
            get
            {
                if ((this.mUIAnställdClient == null))
                {
                    this.mUIAnställdClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnställdClient.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - PERSONALBOK");
                    this.mUIAnställdClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnställdClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnställdClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow116 : WinWindow
    {
        
        public UIItemWindow116(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - PERSONALBOK");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel49Client
        {
            get
            {
                if ((this.mUIPanel49Client == null))
                {
                    this.mUIPanel49Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel49Client.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - PERSONALBOK");
                    this.mUIPanel49Client.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPanel49Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel49Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow210 : WinWindow
    {
        
        public UIItemWindow210(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - PERSONALBOK");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel49Client
        {
            get
            {
                if ((this.mUIPanel49Client == null))
                {
                    this.mUIPanel49Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel49Client.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - PERSONALBOK");
                    this.mUIPanel49Client.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPanel49Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel49Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64440754GATSOFWindow2 : WinWindow
    {
        
        public UIGatver64440754GATSOFWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow30 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow30(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow30 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow30 : WinWindow
    {
        
        public UIItemWindow30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - Anställd: Carl Bild" +
                    "t  (Vaktbokdato: 2016-10-26)");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnställdClient
        {
            get
            {
                if ((this.mUIAnställdClient == null))
                {
                    this.mUIAnställdClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnställdClient.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - Anställd: Carl Bild" +
                            "t  (Vaktbokdato: 2016-10-26)");
                    this.mUIAnställdClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnställdClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnställdClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanATLtest1PWindow : DXWindow
    {
        
        public UIArbeidsplanATLtest1PWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon1 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon1(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon1 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon1 : DXRibbon
    {
        
        public UIRcMenuRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage1 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage1(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage1 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpPlanRibbonPage1 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        
        public UIRibbonPageGroup9RibbonPageGroup UIRibbonPageGroup9RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup9RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup9RibbonPageGroup = new UIRibbonPageGroup9RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup9RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup mUIRpgPlanRibbonPageGroup;
        
        private UIRibbonPageGroup9RibbonPageGroup mUIRibbonPageGroup9RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgPlanRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnställdaRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnställdaRibbonBaseButtonItem == null))
                {
                    this.mUIAnställdaRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnställdaRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnställdaRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnställdaRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
                    #endregion
                }
                return this.mUIAnställdaRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnställdaRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPageGroup9RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup9RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigeraRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigeraRibbonBaseButtonItem == null))
                {
                    this.mUIRedigeraRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigeraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigeraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigeraRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
                    #endregion
                }
                return this.mUIRedigeraRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigeraRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnställdaiArbeidsplaWindow : DXWindow
    {
        
        public UIAnställdaiArbeidsplaWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Anställda i Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Anställda i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlTopButtonsClient UIPnlTopButtonsClient
        {
            get
            {
                if ((this.mUIPnlTopButtonsClient == null))
                {
                    this.mUIPnlTopButtonsClient = new UIPnlTopButtonsClient(this);
                }
                return this.mUIPnlTopButtonsClient;
            }
        }
        
        public UIGSPanelControlClient5 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient5(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlTopButtonsClient mUIPnlTopButtonsClient;
        
        private UIGSPanelControlClient5 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlTopButtonsClient : DXTestControl
    {
        
        public UIPnlTopButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTopButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Anställda i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UILäggtillanställdaButton
        {
            get
            {
                if ((this.mUILäggtillanställdaButton == null))
                {
                    this.mUILäggtillanställdaButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILäggtillanställdaButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddEmployees";
                    this.mUILäggtillanställdaButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILäggtillanställdaButton.WindowTitles.Add("Anställda i Arbeidsplan");
                    #endregion
                }
                return this.mUILäggtillanställdaButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILäggtillanställdaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient5 : DXTestControl
    {
        
        public UIGSPanelControlClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Anställda i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Anställda i Arbeidsplan");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILäggtillanställdaWindow : DXWindow
    {
        
        public UILäggtillanställdaWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Lägg till anställda";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient2 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient2(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIGSDialogFooterBarCustom4 UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom4(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("Lägg till anställda");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient2 mUIPcContentClient;
        
        private UIGSDialogFooterBarCustom4 mUIGSDialogFooterBarCustom;
        
        private UIViewHostCustom mUIViewHostCustom;
        
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient2 : DXTestControl
    {
        
        public UIPcContentClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public UIGrpEmployeeSelectorClient UIGrpEmployeeSelectorClient
        {
            get
            {
                if ((this.mUIGrpEmployeeSelectorClient == null))
                {
                    this.mUIGrpEmployeeSelectorClient = new UIGrpEmployeeSelectorClient(this);
                }
                return this.mUIGrpEmployeeSelectorClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEmployeeSelectorClient mUIGrpEmployeeSelectorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEmployeeSelectorClient : DXTestControl
    {
        
        public UIGrpEmployeeSelectorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployeeSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcEmployeesTable : DXGrid
    {
        
        public UIGcEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public DXCell UIValdCell
        {
            get
            {
                if ((this.mUIValdCell == null))
                {
                    this.mUIValdCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValdCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]gcolSelected";
                    this.mUIValdCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValdCell.WindowTitles.Add("Lägg till anställda");
                    #endregion
                }
                return this.mUIValdCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValdCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSDialogFooterBarCustom4 : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Lägg till anställda");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient4 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient4(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient4 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient4 : DXTestControl
    {
        
        public UIPcViewClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public UISelectDepartmentEmplCustom UISelectDepartmentEmplCustom
        {
            get
            {
                if ((this.mUISelectDepartmentEmplCustom == null))
                {
                    this.mUISelectDepartmentEmplCustom = new UISelectDepartmentEmplCustom(this);
                }
                return this.mUISelectDepartmentEmplCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISelectDepartmentEmplCustom mUISelectDepartmentEmplCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISelectDepartmentEmplCustom : DXTestControl
    {
        
        public UISelectDepartmentEmplCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectDepartmentEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectDepartmentEmployeesView";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentContainerClient : DXTestControl
    {
        
        public UIPcContentContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient3 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient3(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient3 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient3 : DXTestControl
    {
        
        public UIPcContentClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentEmployeeTable UIGcDepartmentEmployeeTable
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeTable == null))
                {
                    this.mUIGcDepartmentEmployeeTable = new UIGcDepartmentEmployeeTable(this);
                }
                return this.mUIGcDepartmentEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentEmployeeTable mUIGcDepartmentEmployeeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcDepartmentEmployeeTable : DXGrid
    {
        
        public UIGcDepartmentEmployeeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Lägg till anställda");
            #endregion
        }
        
        #region Properties
        public DXCell UIBildtCarlCell
        {
            get
            {
                if ((this.mUIBildtCarlCell == null))
                {
                    this.mUIBildtCarlCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBildtCarlCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]0[Column]colE" +
                        "mployee";
                    this.mUIBildtCarlCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBildtCarlCell.WindowTitles.Add("Lägg till anställda");
                    #endregion
                }
                return this.mUIBildtCarlCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIBildtCarlCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanATLtest1RWindow1 : DXWindow
    {
        
        public UIArbeidsplanATLtest1RWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient1 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient1(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon2 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon2(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient1 mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon2 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient1 : DXTestControl
    {
        
        public UIPnlRosterPlanClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_4";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXTextEdit UIRow9ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow9ColumnRosterCellEdit == null))
                {
                    this.mUIRow9ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow9ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]9[Column]RosterCell_0";
                    this.mUIRow9ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow9ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIRow9ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_7";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_11";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXTextEdit UIRow9ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow9ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow9ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow9ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]9[Column]RosterCell_7";
                    this.mUIRow9ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow9ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIRow9ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_14";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_18";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXTextEdit UIRow9ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow9ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow9ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow9ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]9[Column]RosterCell_14";
                    this.mUIRow9ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow9ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIRow9ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_21";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_25";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXTextEdit UIRow9ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow9ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow9ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow9ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]9[Column]RosterCell_21";
                    this.mUIRow9ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow9ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIRow9ColumnRosterCellEdit3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXTextEdit mUIRow9ColumnRosterCellEdit;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXTextEdit mUIRow9ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItemCell5;
        
        private DXTextEdit mUIRow9ColumnRosterCellEdit2;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUIItemCell7;
        
        private DXTextEdit mUIRow9ColumnRosterCellEdit3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon2 : DXRibbon
    {
        
        public UIRcMenuRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage2 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage2(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage2 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpPlanRibbonPage2 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageGroup9RibbonPageGroup1 UIRibbonPageGroup9RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup9RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup9RibbonPageGroup = new UIRibbonPageGroup9RibbonPageGroup1(this);
                }
                return this.mUIRibbonPageGroup9RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageGroup9RibbonPageGroup1 mUIRibbonPageGroup9RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPageGroup9RibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup9RibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: ATL test 1 (Redigeringsmodus [Planen är låst av dig])");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGT4003InformationWindow : DXWindow
    {
        
        public UIGT4003InformationWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4003 - Information";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4003 - Information");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4003 - Information");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("GT-4003 - Information");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver64440754GATSOFWindow3 : WinWindow
    {
        
        public UIGatver64440754GATSOFWindow3()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow33 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow33(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow117 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow117(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow33 mUIItemWindow;
        
        private UIItemWindow117 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow33 : WinWindow
    {
        
        public UIItemWindow33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - Rapportcenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIItem7Client UIItem7Client
        {
            get
            {
                if ((this.mUIItem7Client == null))
                {
                    this.mUIItem7Client = new UIItem7Client(this);
                }
                return this.mUIItem7Client;
            }
        }
        #endregion
        
        #region Fields
        private UIItem7Client mUIItem7Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItem7Client : WinClient
    {
        
        public UIItem7Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - Rapportcenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIAnvändkalkyleradeATLCheckBox
        {
            get
            {
                if ((this.mUIAnvändkalkyleradeATLCheckBox == null))
                {
                    this.mUIAnvändkalkyleradeATLCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIAnvändkalkyleradeATLCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Använd kalkylerade ATL-brott ";
                    this.mUIAnvändkalkyleradeATLCheckBox.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - Rapportcenter ");
                    this.mUIAnvändkalkyleradeATLCheckBox.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAnvändkalkyleradeATLCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIAnvändkalkyleradeATLCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow117 : WinWindow
    {
        
        public UIItemWindow117(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "15";
            this.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - Rapportcenter ");
            #endregion
        }
        
        #region Properties
        public UIItem77Client1 UIItem77Client
        {
            get
            {
                if ((this.mUIItem77Client == null))
                {
                    this.mUIItem77Client = new UIItem77Client1(this);
                }
                return this.mUIItem77Client;
            }
        }
        #endregion
        
        #region Fields
        private UIItem77Client1 mUIItem77Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItem77Client1 : WinClient
    {
        
        public UIItem77Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - Rapportcenter ");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIVäljallaingenCheckBox
        {
            get
            {
                if ((this.mUIVäljallaingenCheckBox == null))
                {
                    this.mUIVäljallaingenCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIVäljallaingenCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Välj alla/ingen:";
                    this.mUIVäljallaingenCheckBox.WindowTitles.Add("Gat ver. 6.4.4.40754 - (GATSOFT - Avd: ATL-ATL avdelningen) - Rapportcenter ");
                    #endregion
                }
                return this.mUIVäljallaingenCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIVäljallaingenCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISammenligningavkompeWindow : DXWindow
    {
        
        public UISammenligningavkompeWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Sammenligning av kompetanse";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Sammenligning av kompetanse");
            #endregion
        }
        
        #region Properties
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Sammenligning av kompetanse");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver65041545ASCLAvWindow : WinWindow
    {
        
        public UIGatver65041545ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMWrapperCustom UIMWrapperCustom
        {
            get
            {
                if ((this.mUIMWrapperCustom == null))
                {
                    this.mUIMWrapperCustom = new UIMWrapperCustom(this);
                }
                return this.mUIMWrapperCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIMWrapperCustom mUIMWrapperCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMWrapperCustom : DXTestControl
    {
        
        public UIMWrapperCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "mWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat ver. 6.5.0.41545 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient5 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient5(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient5 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient5 : DXTestControl
    {
        
        public UIPcViewClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41545 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            #endregion
        }
        
        #region Properties
        public UIDispensationOverviewCustom UIDispensationOverviewCustom
        {
            get
            {
                if ((this.mUIDispensationOverviewCustom == null))
                {
                    this.mUIDispensationOverviewCustom = new UIDispensationOverviewCustom(this);
                }
                return this.mUIDispensationOverviewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispensationOverviewCustom mUIDispensationOverviewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDispensationOverviewCustom : DXTestControl
    {
        
        public UIDispensationOverviewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispensationOverview";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispensationOverview";
            this.WindowTitles.Add("Gat ver. 6.5.0.41545 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            #endregion
        }
        
        #region Properties
        public UIRibbonDispensationsRibbon UIRibbonDispensationsRibbon
        {
            get
            {
                if ((this.mUIRibbonDispensationsRibbon == null))
                {
                    this.mUIRibbonDispensationsRibbon = new UIRibbonDispensationsRibbon(this);
                }
                return this.mUIRibbonDispensationsRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonDispensationsRibbon mUIRibbonDispensationsRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonDispensationsRibbon : DXRibbon
    {
        
        public UIRibbonDispensationsRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonDispensations";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41545 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            #endregion
        }
        
        #region Properties
        public UIRibbonPage1RibbonPage UIRibbonPage1RibbonPage
        {
            get
            {
                if ((this.mUIRibbonPage1RibbonPage == null))
                {
                    this.mUIRibbonPage1RibbonPage = new UIRibbonPage1RibbonPage(this);
                }
                return this.mUIRibbonPage1RibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPage1RibbonPage mUIRibbonPage1RibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPage1RibbonPage : DXRibbonPage
    {
        
        public UIRibbonPage1RibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPage1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat ver. 6.5.0.41545 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            #endregion
        }
        
        #region Properties
        public UIRbnGroupEditRibbonPageGroup UIRbnGroupEditRibbonPageGroup
        {
            get
            {
                if ((this.mUIRbnGroupEditRibbonPageGroup == null))
                {
                    this.mUIRbnGroupEditRibbonPageGroup = new UIRbnGroupEditRibbonPageGroup(this);
                }
                return this.mUIRbnGroupEditRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRbnGroupEditRibbonPageGroup mUIRbnGroupEditRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRbnGroupEditRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRbnGroupEditRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rbnGroupEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.5.0.41545 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINYRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINYRibbonBaseButtonItem == null))
                {
                    this.mUINYRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINYRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNewDispensation";
                    this.mUINYRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINYRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41545 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    #endregion
                }
                return this.mUINYRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINYRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINyAMLdispensasjonWindow : DXWindow
    {
        
        public UINyAMLdispensasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny AML dispensasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIViewHostDispensationCustom1 UIViewHostDispensationCustom
        {
            get
            {
                if ((this.mUIViewHostDispensationCustom == null))
                {
                    this.mUIViewHostDispensationCustom = new UIViewHostDispensationCustom1(this);
                }
                return this.mUIViewHostDispensationCustom;
            }
        }
        
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("Ny AML dispensasjon");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostDispensationCustom1 mUIViewHostDispensationCustom;
        
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostDispensationCustom1 : DXTestControl
    {
        
        public UIViewHostDispensationCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHostDispensationDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient6 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient6(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient6 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient6 : DXTestControl
    {
        
        public UIPcViewClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIDispensationDetailsVCustom UIDispensationDetailsVCustom
        {
            get
            {
                if ((this.mUIDispensationDetailsVCustom == null))
                {
                    this.mUIDispensationDetailsVCustom = new UIDispensationDetailsVCustom(this);
                }
                return this.mUIDispensationDetailsVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispensationDetailsVCustom mUIDispensationDetailsVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDispensationDetailsVCustom : DXTestControl
    {
        
        public UIDispensationDetailsVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispensationDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispensationDetailsView";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIDropdwnDispensationTLookUpEdit UIDropdwnDispensationTLookUpEdit
        {
            get
            {
                if ((this.mUIDropdwnDispensationTLookUpEdit == null))
                {
                    this.mUIDropdwnDispensationTLookUpEdit = new UIDropdwnDispensationTLookUpEdit(this);
                }
                return this.mUIDropdwnDispensationTLookUpEdit;
            }
        }
        
        public UIVhDispInnerDetailsCustom UIVhDispInnerDetailsCustom
        {
            get
            {
                if ((this.mUIVhDispInnerDetailsCustom == null))
                {
                    this.mUIVhDispInnerDetailsCustom = new UIVhDispInnerDetailsCustom(this);
                }
                return this.mUIVhDispInnerDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDropdwnDispensationTLookUpEdit mUIDropdwnDispensationTLookUpEdit;
        
        private UIVhDispInnerDetailsCustom mUIVhDispInnerDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDropdwnDispensationTLookUpEdit : DXLookUpEdit
    {
        
        public UIDropdwnDispensationTLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dropdwnDispensationType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "dropdwnDispensationTypePopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Ny AML dispensasjon");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVhDispInnerDetailsCustom : DXTestControl
    {
        
        public UIVhDispInnerDetailsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDispInnerDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient7 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient7(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient7 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient7 : DXTestControl
    {
        
        public UIPcViewClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIDefaultDispDetailsViCustom UIDefaultDispDetailsViCustom
        {
            get
            {
                if ((this.mUIDefaultDispDetailsViCustom == null))
                {
                    this.mUIDefaultDispDetailsViCustom = new UIDefaultDispDetailsViCustom(this);
                }
                return this.mUIDefaultDispDetailsViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultDispDetailsViCustom mUIDefaultDispDetailsViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDefaultDispDetailsViCustom : DXTestControl
    {
        
        public UIDefaultDispDetailsViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DefaultDispDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DefaultDispDetailsView";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdeStartEdit
        {
            get
            {
                if ((this.mUISdeStartEdit == null))
                {
                    this.mUISdeStartEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeStartEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeStart";
                    this.mUISdeStartEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUISdeStartEdit.WindowTitles.Add("Ny AML dispensasjon");
                    #endregion
                }
                return this.mUISdeStartEdit;
            }
        }
        
        public DXTextEdit UISdeEndEdit
        {
            get
            {
                if ((this.mUISdeEndEdit == null))
                {
                    this.mUISdeEndEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeEndEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeEnd";
                    this.mUISdeEndEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUISdeEndEdit.WindowTitles.Add("Ny AML dispensasjon");
                    #endregion
                }
                return this.mUISdeEndEdit;
            }
        }
        
        public DXTextEdit UISdeLimitEdit
        {
            get
            {
                if ((this.mUISdeLimitEdit == null))
                {
                    this.mUISdeLimitEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdeLimitEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeLimit";
                    this.mUISdeLimitEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUISdeLimitEdit.WindowTitles.Add("Ny AML dispensasjon");
                    #endregion
                }
                return this.mUISdeLimitEdit;
            }
        }
        
        public DXTextEdit UIMemoCommentEdit
        {
            get
            {
                if ((this.mUIMemoCommentEdit == null))
                {
                    this.mUIMemoCommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIMemoCommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "memoComment";
                    this.mUIMemoCommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
                    this.mUIMemoCommentEdit.WindowTitles.Add("Ny AML dispensasjon");
                    #endregion
                }
                return this.mUIMemoCommentEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdeStartEdit;
        
        private DXTextEdit mUISdeEndEdit;
        
        private DXTextEdit mUISdeLimitEdit;
        
        private DXTextEdit mUIMemoCommentEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanATLtest1PWindow1 : DXWindow
    {
        
        public UIArbeidsplanATLtest1PWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon3 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon3(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon3 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon3 : DXRibbon
    {
        
        public UIRcMenuRibbon3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage3 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage3(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage3 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpPlanRibbonPage3 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup1 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup1(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup1 mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgPlanRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnställdaRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnställdaRibbonBaseButtonItem == null))
                {
                    this.mUIAnställdaRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnställdaRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnställdaRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnställdaRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: ATL test 1 (Planen är låst av dig)");
                    #endregion
                }
                return this.mUIAnställdaRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnställdaRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnställdaiarbetsplanWindow : DXWindow
    {
        
        public UIAnställdaiarbetsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Anställda i arbetsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Anställda i arbetsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlOuterClient UIPanelControlOuterClient
        {
            get
            {
                if ((this.mUIPanelControlOuterClient == null))
                {
                    this.mUIPanelControlOuterClient = new UIPanelControlOuterClient(this);
                }
                return this.mUIPanelControlOuterClient;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Anställda i arbetsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlOuterClient mUIPanelControlOuterClient;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControlOuterClient : DXTestControl
    {
        
        public UIPanelControlOuterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Anställda i arbetsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlLeftClient UIPanelControlLeftClient
        {
            get
            {
                if ((this.mUIPanelControlLeftClient == null))
                {
                    this.mUIPanelControlLeftClient = new UIPanelControlLeftClient(this);
                }
                return this.mUIPanelControlLeftClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlLeftClient mUIPanelControlLeftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControlLeftClient : DXTestControl
    {
        
        public UIPanelControlLeftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Anställda i arbetsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIAnställdaButton
        {
            get
            {
                if ((this.mUIAnställdaButton == null))
                {
                    this.mUIAnställdaButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnställdaButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonAdd";
                    this.mUIAnställdaButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUIAnställdaButton.WindowTitles.Add("Anställda i arbetsplan");
                    #endregion
                }
                return this.mUIAnställdaButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAnställdaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver65142408ASCLAvWindow : WinWindow
    {
        
        public UIGatver65142408ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow34 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow34(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow34 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow34 : WinWindow
    {
        
        public UIItemWindow34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.5.1.42408 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                    "  (Vaktbokdato: 04.09.2016)");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.5.1.42408 - (ASCL - Avd: 2060-AML avdeling 1) - Ansatt: Andre Andersen" +
                            "  (Vaktbokdato: 04.09.2016)");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver66043686ASCLAvWindow : WinWindow
    {
        
        public UIGatver66043686ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow35 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow35(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow35 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow35 : WinWindow
    {
        
        public UIItemWindow35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIEkstraClient
        {
            get
            {
                if ((this.mUIEkstraClient == null))
                {
                    this.mUIEkstraClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIEkstraClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIEkstraClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIEkstraClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver66043686ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver66043686ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow36 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow36(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow36 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow36 : WinWindow
    {
        
        public UIItemWindow36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIUtrykningerClient
        {
            get
            {
                if ((this.mUIUtrykningerClient == null))
                {
                    this.mUIUtrykningerClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIUtrykningerClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIUtrykningerClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIUtrykningerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver66043686ASCLAvWindow2 : WinWindow
    {
        
        public UIGatver66043686ASCLAvWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow37 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow37(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow37 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow37 : WinWindow
    {
        
        public UIItemWindow37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIDøgnogukeskilleClient
        {
            get
            {
                if ((this.mUIDøgnogukeskilleClient == null))
                {
                    this.mUIDøgnogukeskilleClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDøgnogukeskilleClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIDøgnogukeskilleClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDøgnogukeskilleClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver201720GATSOFTAWindow : WinWindow
    {
        
        public UIGatver201720GATSOFTAWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow38 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow38(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow38 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow38 : WinWindow
    {
        
        public UIItemWindow38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 2017.2.0 - (GATSOFT - Avd: ATL-ATL avdelningen) - Anställd: Carl Bildt  " +
                    "(Vaktbokdato: 2017-05-18)");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnställdClient
        {
            get
            {
                if ((this.mUIAnställdClient == null))
                {
                    this.mUIAnställdClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnställdClient.WindowTitles.Add("Gat ver. 2017.2.0 - (GATSOFT - Avd: ATL-ATL avdelningen) - Anställd: Carl Bildt  " +
                            "(Vaktbokdato: 2017-05-18)");
                    #endregion
                }
                return this.mUIAnställdClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnställdClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver201720GATSOFTAWindow1 : WinWindow
    {
        
        public UIGatver201720GATSOFTAWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow39 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow39(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow39 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow39 : WinWindow
    {
        
        public UIItemWindow39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 2017.2.0 - (GATSOFT - Avd: ATL-ATL avdelningen) - PERSONALBOK");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnställdClient
        {
            get
            {
                if ((this.mUIAnställdClient == null))
                {
                    this.mUIAnställdClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnställdClient.WindowTitles.Add("Gat ver. 2017.2.0 - (GATSOFT - Avd: ATL-ATL avdelningen) - PERSONALBOK");
                    #endregion
                }
                return this.mUIAnställdClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnställdClient;
        #endregion
    }
}
