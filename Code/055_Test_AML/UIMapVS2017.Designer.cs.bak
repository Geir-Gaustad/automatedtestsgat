// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _055_Test_AML.UIMapVS2017Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMapVS2017
    {
        
        /// <summary>
        /// ClickCloseAmlAgrementWindow
        /// </summary>
        public void ClickCloseAmlAgrementWindow()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UIWeaAgreementsOvervieWindow.UILukkButton;
            #endregion

            // Click 'Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectAbsenceShiftsForRating_1
        /// </summary>
        public void SelectAbsenceShiftsForRating_1()
        {
            #region Variable Declarations
            DXCell uIValgtCell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIGcShiftsTable.UIValgtCell;
            DXCell uIValgtCell1 = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIGcShiftsTable.UIValgtCell1;
            DXCell uIValgtCell2 = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIGcShiftsTable.UIValgtCell2;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell, new Point(15, 7));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell1, new Point(13, 9));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell2, new Point(14, 6));
        }
        
        /// <summary>
        /// SelectAbsenceShiftsForRating_2
        /// </summary>
        public void SelectAbsenceShiftsForRating_2()
        {
            #region Variable Declarations
            DXCell uIValgtCell3 = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIGcShiftsTable.UIValgtCell3;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell3, new Point(13, 10));
        }
        
        #region Properties
        public UIFraværsregistreringWindow UIFraværsregistreringWindow
        {
            get
            {
                if ((this.mUIFraværsregistreringWindow == null))
                {
                    this.mUIFraværsregistreringWindow = new UIFraværsregistreringWindow();
                }
                return this.mUIFraværsregistreringWindow;
            }
        }
        
        public UIAMLavtaleWindow UIAMLavtaleWindow
        {
            get
            {
                if ((this.mUIAMLavtaleWindow == null))
                {
                    this.mUIAMLavtaleWindow = new UIAMLavtaleWindow();
                }
                return this.mUIAMLavtaleWindow;
            }
        }
        
        public UIWeaAgreementsOvervieWindow UIWeaAgreementsOvervieWindow
        {
            get
            {
                if ((this.mUIWeaAgreementsOvervieWindow == null))
                {
                    this.mUIWeaAgreementsOvervieWindow = new UIWeaAgreementsOvervieWindow();
                }
                return this.mUIWeaAgreementsOvervieWindow;
            }
        }
        
        public UIGTWStilgangskontrollWindow UIGTWStilgangskontrollWindow
        {
            get
            {
                if ((this.mUIGTWStilgangskontrollWindow == null))
                {
                    this.mUIGTWStilgangskontrollWindow = new UIGTWStilgangskontrollWindow();
                }
                return this.mUIGTWStilgangskontrollWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIWeaBreakServiceWebSeWindow UIWeaBreakServiceWebSeWindow
        {
            get
            {
                if ((this.mUIWeaBreakServiceWebSeWindow == null))
                {
                    this.mUIWeaBreakServiceWebSeWindow = new UIWeaBreakServiceWebSeWindow();
                }
                return this.mUIWeaBreakServiceWebSeWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFraværsregistreringWindow mUIFraværsregistreringWindow;
        
        private UIAMLavtaleWindow mUIAMLavtaleWindow;
        
        private UIWeaAgreementsOvervieWindow mUIWeaAgreementsOvervieWindow;
        
        private UIGTWStilgangskontrollWindow mUIGTWStilgangskontrollWindow;
        
        private UIItemWindow2 mUIItemWindow;
        
        private UIWeaBreakServiceWebSeWindow mUIWeaBreakServiceWebSeWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFraværsregistreringWindow : DXWindow
    {
        
        public UIFraværsregistreringWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsregistrering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlShiftManagementClient UIPnlShiftManagementClient
        {
            get
            {
                if ((this.mUIPnlShiftManagementClient == null))
                {
                    this.mUIPnlShiftManagementClient = new UIPnlShiftManagementClient(this);
                }
                return this.mUIPnlShiftManagementClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlShiftManagementClient mUIPnlShiftManagementClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlShiftManagementClient : DXTestControl
    {
        
        public UIPnlShiftManagementClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISccShiftManagementSplitContainerControl UISccShiftManagementSplitContainerControl
        {
            get
            {
                if ((this.mUISccShiftManagementSplitContainerControl == null))
                {
                    this.mUISccShiftManagementSplitContainerControl = new UISccShiftManagementSplitContainerControl(this);
                }
                return this.mUISccShiftManagementSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UISccShiftManagementSplitContainerControl mUISccShiftManagementSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISccShiftManagementSplitContainerControl : DXSplitContainerControl
    {
        
        public UISccShiftManagementSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient : DXTestControl
    {
        
        public UISplitGroupPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagementSplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcShiftsClient UIGrcShiftsClient
        {
            get
            {
                if ((this.mUIGrcShiftsClient == null))
                {
                    this.mUIGrcShiftsClient = new UIGrcShiftsClient(this);
                }
                return this.mUIGrcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcShiftsClient mUIGrcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrcShiftsClient : DXTestControl
    {
        
        public UIGrcShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITcShiftsTabList UITcShiftsTabList
        {
            get
            {
                if ((this.mUITcShiftsTabList == null))
                {
                    this.mUITcShiftsTabList = new UITcShiftsTabList(this);
                }
                return this.mUITcShiftsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcShiftsTabList mUITcShiftsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcShiftsTabList : DXTestControl
    {
        
        public UITcShiftsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIXtpShiftsGridClient UIXtpShiftsGridClient
        {
            get
            {
                if ((this.mUIXtpShiftsGridClient == null))
                {
                    this.mUIXtpShiftsGridClient = new UIXtpShiftsGridClient(this);
                }
                return this.mUIXtpShiftsGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtpShiftsGridClient mUIXtpShiftsGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtpShiftsGridClient : DXTestControl
    {
        
        public UIXtpShiftsGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpShiftsGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGcShiftsTable UIGcShiftsTable
        {
            get
            {
                if ((this.mUIGcShiftsTable == null))
                {
                    this.mUIGcShiftsTable = new UIGcShiftsTable(this);
                }
                return this.mUIGcShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftsTable mUIGcShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcShiftsTable : DXGrid
    {
        
        public UIGcShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]1[Column]tlcCustomized";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]2[Column]tlcCustomized";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]3[Column]tlcPresent";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        
        public DXCell UIValgtCell2
        {
            get
            {
                if ((this.mUIValgtCell2 == null))
                {
                    this.mUIValgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]6[Column]tlcPresent";
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell2.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell2;
            }
        }
        
        public DXCell UIValgtCell3
        {
            get
            {
                if ((this.mUIValgtCell3 == null))
                {
                    this.mUIValgtCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]7[Column]tlcCustomized";
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell3.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIkkevalgtCell;
        
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        
        private DXCell mUIValgtCell2;
        
        private DXCell mUIValgtCell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAMLavtaleWindow : DXWindow
    {
        
        public UIAMLavtaleWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AML avtale";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISdePriorityEdit
        {
            get
            {
                if ((this.mUISdePriorityEdit == null))
                {
                    this.mUISdePriorityEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISdePriorityEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdePriority";
                    this.mUISdePriorityEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartIntegerEdit";
                    this.mUISdePriorityEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdePriorityEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISdePriorityEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeaAgreementsOvervieWindow : DXWindow
    {
        
        public UIWeaAgreementsOvervieWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "sbCancel";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGTWStilgangskontrollWindow : WinWindow
    {
        
        public UIGTWStilgangskontrollWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GTWS tilgangskontroll";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmRegEdit";
            this.WindowTitles.Add("GTWS tilgangskontroll");
            #endregion
        }
        
        #region Properties
        public UIGTWStilgangskontrollClient UIGTWStilgangskontrollClient
        {
            get
            {
                if ((this.mUIGTWStilgangskontrollClient == null))
                {
                    this.mUIGTWStilgangskontrollClient = new UIGTWStilgangskontrollClient(this);
                }
                return this.mUIGTWStilgangskontrollClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UILocalRolesRosterWebWindow UILocalRolesRosterWebWindow
        {
            get
            {
                if ((this.mUILocalRolesRosterWebWindow == null))
                {
                    this.mUILocalRolesRosterWebWindow = new UILocalRolesRosterWebWindow(this);
                }
                return this.mUILocalRolesRosterWebWindow;
            }
        }
        
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIItemClient1 UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new UIItemClient1(this);
                }
                return this.mUIItemClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIGTWStilgangskontrollClient mUIGTWStilgangskontrollClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UILocalRolesRosterWebWindow mUILocalRolesRosterWebWindow;
        
        private UIItemClient mUIItemClient;
        
        private UIItemClient1 mUIItemClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGTWStilgangskontrollClient : WinClient
    {
        
        public UIGTWStilgangskontrollClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "GTWS tilgangskontroll";
            this.WindowTitles.Add("GTWS tilgangskontroll");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("GTWS tilgangskontroll");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSComboBox";
            this.WindowTitles.Add("GTWS tilgangskontroll");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("GTWS tilgangskontroll");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILocalRolesRosterWebWindow : WinWindow
    {
        
        public UILocalRolesRosterWebWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "LocalRolesRosterWeb";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("GTWS tilgangskontroll");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("GTWS tilgangskontroll");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("GTWS tilgangskontroll");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("GTWS tilgangskontroll");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient1 : WinClient
    {
        
        public UIItemClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("GTWS tilgangskontroll");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient.WindowTitles.Add("GTWS tilgangskontroll");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ComboLBox";
            #endregion
        }
        
        #region Properties
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemList : WinList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinListItem UICalculateWeaListItem
        {
            get
            {
                if ((this.mUICalculateWeaListItem == null))
                {
                    this.mUICalculateWeaListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUICalculateWeaListItem.SearchProperties[WinListItem.PropertyNames.Name] = "CalculateWea";
                    #endregion
                }
                return this.mUICalculateWeaListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUICalculateWeaListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeaBreakServiceWebSeWindow : BrowserWindow
    {
        
        public UIWeaBreakServiceWebSeWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "WeaBreakService Web Service";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWeaBreakServiceWebSeDocument UIWeaBreakServiceWebSeDocument
        {
            get
            {
                if ((this.mUIWeaBreakServiceWebSeDocument == null))
                {
                    this.mUIWeaBreakServiceWebSeDocument = new UIWeaBreakServiceWebSeDocument(this);
                }
                return this.mUIWeaBreakServiceWebSeDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIWeaBreakServiceWebSeDocument mUIWeaBreakServiceWebSeDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeaBreakServiceWebSeDocument : HtmlDocument
    {
        
        public UIWeaBreakServiceWebSeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "WeaBreakService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/WeaBreakService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1/WeaBreakService.asmx?op=CalculateWeaAndSaveWeaBreaksOverr" +
                "ideScheduler";
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIAccessCodeEdit
        {
            get
            {
                if ((this.mUIAccessCodeEdit == null))
                {
                    this.mUIAccessCodeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAccessCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIAccessCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "accessCode";
                    this.mUIAccessCodeEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIAccessCodeEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAccessCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAccessCodeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "frmInput";
                    this.mUIAccessCodeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"accessCode\" class=\"frmInput\" type=";
                    this.mUIAccessCodeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIAccessCodeEdit.WindowTitles.Add("WeaBreakService Web Service");
                    #endregion
                }
                return this.mUIAccessCodeEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIAccessCodeEdit;
        #endregion
    }
}
