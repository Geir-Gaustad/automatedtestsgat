// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _010_Test_Delte_Oppgaver_I_Vaktbok
{
    using System.CodeDom.Compiler;
    using System.Drawing;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ActivateFilterInDropDownShiftBookRoleView
        /// </summary>
        public void ActivateFilterInDropDownShiftBookRoleView()
        {
            #region Variable Declarations
            DXButton uIGSDropDownButtonButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraPanelScrollableControl.UIGSDropDownButtonButton;
            DXMenuBaseButtonItem uITESTMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITESTMenuBaseButtonItem;
            #endregion

            // Click 'GSDropDownButton' button
            Mouse.Click(uIGSDropDownButtonButton, new Point(90, 10));

            // Click 'TEST' MenuBaseButtonItem
            Mouse.Click(uITESTMenuBaseButtonItem, new Point(77, 9));
        }
        
        /// <summary>
        /// ActivateFilterInShiftBookRoleView - Use 'ActivateFilterInShiftBookRoleViewParams' to pass parameters into this method.
        /// </summary>
        public void ActivateFilterInShiftBookRoleView()
        {
            #region Variable Declarations
            DXButton uIGSDropDownButtonButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraPanelScrollableControl.UIGSDropDownButtonButton;
            DXComboBox uICbSavedViewsComboBox = this.UIOppgavevaktbokvisninWindow.UIGcSavedViewsClient.UICbSavedViewsComboBox;
            #endregion

            // Click 'GSDropDownButton' button
            Mouse.Click(uIGSDropDownButtonButton, new Point(1, 1));

            // Select '0' in 'cbSavedViews' combo box
            //SelectedIndex
            uICbSavedViewsComboBox.SelectedIndex = this.ActivateFilterInShiftBookRoleViewParams.UICbSavedViewsComboBoxSelectedIndex;
        }
        
        /// <summary>
        /// AssignRoleFromDispStep13
        /// </summary>
        public void AssignRoleFromDispStep13()
        {
            #region Variable Declarations
            DXListBox uIPeriodScheduleListBoList = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList;
            DXMenuItem uITildelingavoppgaveMenuItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem;
            DXMenuBaseButtonItem uIOVER4600OverliggendeMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIOVER4600OverliggendeMenuBaseButtonItem;
            #endregion

            // Right-Click 'PeriodScheduleListBoxControl`1' list box
            Mouse.Click(uIPeriodScheduleListBoList, MouseButtons.Right, ModifierKeys.None, new Point(39, 14));

            // Click 'Tildeling av oppgave' menu item
            Mouse.Click(uITildelingavoppgaveMenuItem, new Point(61, 9));

            // Click 'OVER 4600 - Overliggende oppgave (4600)' MenuBaseButtonItem
            Mouse.Click(uIOVER4600OverliggendeMenuBaseButtonItem, new Point(104, 8));
        }
        
        /// <summary>
        /// AssignRoleFromDispStep16
        /// </summary>
        public void AssignRoleFromDispStep16()
        {
            #region Variable Declarations
            DXListBoxItem uIDEideSamListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UIBottomPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList2.UIDEideSamListItem;
            DXListBox uIPeriodScheduleListBoList1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList1;
            #endregion

            // Move 'D - Eide, Sam' list item to 'PeriodScheduleListBoxControl`1' list box
            uIPeriodScheduleListBoList1.EnsureClickable(new Point(116, 11));
            Mouse.StartDragging(uIDEideSamListItem, new Point(37, 3));
            Mouse.StopDragging(uIPeriodScheduleListBoList1, new Point(116, 11));
        }
        
        /// <summary>
        /// AssignRoleFromDispStep19
        /// </summary>
        public void AssignRoleFromDispStep19()
        {
            #region Variable Declarations
            DXCell uID108001600Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID108001600Cell;
            DXCell uIDelttil4620KuntirsdaCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIDelttil4620KuntirsdaCell;
            #endregion

            // Click '( )D1 (08:00 - 16:00)' cell
            Mouse.Click(uID108001600Cell, new Point(119, 19));

            // Double-Click 'Delt til 4620 Kun tirsdag' cell
            Mouse.DoubleClick(uIDelttil4620KuntirsdaCell, new Point(96, 8));
        }
        
        /// <summary>
        /// AssignRolePatternStep43
        /// </summary>
        public void AssignRolePatternStep43()
        {
            #region Variable Declarations
            DXCell uID08001600Cell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell1;
            DXCell uITESTCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodePatternsDockPanel.UIDockPanel3_ContainerCustom.UIRoleCodePatternListVCustom.UIGcRoleCodePatternsTable.UITESTCell;
            #endregion

            // Click '( )D (08:00 - 16:00)' cell
            Mouse.Click(uID08001600Cell1, new Point(94, 8));

            // Double-Click 'TEST' cell
            Mouse.DoubleClick(uITESTCell, new Point(66, 7));
        }
        
        /// <summary>
        /// AssignRoleStep21
        /// </summary>
        public void AssignRoleStep21()
        {
            #region Variable Declarations
            DXListBoxItem uID1KnutsenLauraListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UIBottomPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList3.UID1KnutsenLauraListItem;
            DXListBox uIPeriodScheduleListBoList2 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList2;
            #endregion

            // Move 'D1 - Knutsen, Laura' list item to 'PeriodScheduleListBoxControl`1' list box
            uIPeriodScheduleListBoList2.EnsureClickable(new Point(35, 8));
            Mouse.StartDragging(uID1KnutsenLauraListItem, new Point(30, 4));
            Mouse.StopDragging(uIPeriodScheduleListBoList2, new Point(35, 8));
        }
        
        /// <summary>
        /// AssignRoleStep25
        /// </summary>
        public void AssignRoleStep25()
        {
            #region Variable Declarations
            DXCell uIORTEksklEksklusivoppCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGAvailableRolesTable.UIORTEksklEksklusivoppCell;
            WinList uISchedulerControlList1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelRoleSchedDockPanel.UIControlContainerCustom.UIRoleSchedulerControlWindow.UISchedulerControlList.UISchedulerControlList1;
            #endregion

            // Move 'ORT Ekskl - Eksklusiv oppgave - kan ikke' cell to 'schedulerControl' list box
            uISchedulerControlList1.EnsureClickable(new Point(187, 146));
            Mouse.StartDragging(uIORTEksklEksklusivoppCell, new Point(24, 6));
            Mouse.StopDragging(uISchedulerControlList1, new Point(187, 146));
        }
        
        /// <summary>
        /// AssignRoleStep30
        /// </summary>
        public void AssignRoleStep30()
        {
            #region Variable Declarations
            DXListBox uIPeriodScheduleListBoList3 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList3;
            DXMenuItem uITildelingavoppgaveMenuItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem;
            DXMenuBaseButtonItem uIDelttil4610EksklkaniMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIDelttil4610EksklkaniMenuBaseButtonItem;
            #endregion

            // Right-Click 'PeriodScheduleListBoxControl`1' list box
            Mouse.Click(uIPeriodScheduleListBoList3, MouseButtons.Right, ModifierKeys.None, new Point(37, 20));

            // Click 'Tildeling av oppgave' menu item
            Mouse.Click(uITildelingavoppgaveMenuItem, new Point(78, 4));

            // Click 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' MenuBaseButtonItem
            Mouse.Click(uIDelttil4610EksklkaniMenuBaseButtonItem, new Point(128, 9));
        }
        
        /// <summary>
        /// AssignRoleStep31
        /// </summary>
        public void AssignRoleStep31()
        {
            #region Variable Declarations
            DXCell uIXGV1EllingsenRolf080Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXGV1EllingsenRolf080Cell;
            DXCell uIInformationOppgaveerCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaveerCell;
            #endregion

            // Move '(x)GV1 - Ellingsen, Rolf (08:00 - 16:00)' cell to '( )(Information:Oppgave er dekket av annen avdeling (4610))D - Bakke, Stein (08:00 - 16:00)
            //( )GV1 - Ellingsen, Rolf (08:00 - 16:00)' cell
            uIInformationOppgaveerCell.EnsureClickable(new Point(87, 11));
            Mouse.StartDragging(uIXGV1EllingsenRolf080Cell, new Point(82, 9));
            Mouse.StopDragging(uIInformationOppgaveerCell, new Point(87, 11));
        }
        
        /// <summary>
        /// AssignRoleStep32
        /// </summary>
        public void AssignRoleStep32()
        {
            #region Variable Declarations
            DXCell uIXGV1EllingsenRolf080Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXGV1EllingsenRolf080Cell;
            DXCell uIInformationOppgaveerCell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaveerCell1;
            #endregion

            // Move '(x)GV1 - Ellingsen, Rolf (08:00 - 16:00)' cell to '( )(Information:Oppgave er dekket av annen avdeling (4610))D - Bakke, Stein (08:00 - 16:00)
            //( )(Information:Oppgave er dekket av annen avdeling (4810))GV1 - Ellingsen, Rolf (08:00 - 16:00)' cell
            uIInformationOppgaveerCell1.EnsureClickable(new Point(85, 25));
            Mouse.StartDragging(uIXGV1EllingsenRolf080Cell, new Point(80, 7));
            Mouse.StopDragging(uIInformationOppgaveerCell1, new Point(85, 25));
        }
        
        /// <summary>
        /// AssignRoleStep33
        /// </summary>
        public void AssignRoleStep33()
        {
            #region Variable Declarations
            DXListBox uIPeriodScheduleListBoList6 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList6;
            DXMenuItem uITildelingavoppgaveMenuItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem;
            DXMenuBaseButtonItem uIOVER4600OverliggendeMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIOVER4600OverliggendeMenuBaseButtonItem;
            #endregion

            // Right-Click 'PeriodScheduleListBoxControl`1' list box
            Mouse.Click(uIPeriodScheduleListBoList6, MouseButtons.Right, ModifierKeys.None, new Point(144, 26));

            // Click 'Tildeling av oppgave' menu item
            Mouse.Click(uITildelingavoppgaveMenuItem, new Point(60, 10));

            // Click 'OVER 4600 - Overliggende oppgave (4600)' MenuBaseButtonItem
            Mouse.Click(uIOVER4600OverliggendeMenuBaseButtonItem, new Point(130, 6));
        }
        
        /// <summary>
        /// AssignRoleStep35
        /// </summary>
        public void AssignRoleStep35()
        {
            #region Variable Declarations
            DXListBox uIPeriodScheduleListBoList8 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList8;
            DXMenuItem uITildelingavoppgaveMenuItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem;
            DXMenuBaseButtonItem uIOVER4600OverliggendeMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIOVER4600OverliggendeMenuBaseButtonItem;
            #endregion

            // Right-Click 'PeriodScheduleListBoxControl`1' list box
            Mouse.Click(uIPeriodScheduleListBoList8, MouseButtons.Right, ModifierKeys.None, new Point(65, 13));

            // Click 'Tildeling av oppgave' menu item
            Mouse.Click(uITildelingavoppgaveMenuItem, new Point(59, 12));

            // Click 'OVER 4600 - Overliggende oppgave (4600)' MenuBaseButtonItem
            Mouse.Click(uIOVER4600OverliggendeMenuBaseButtonItem, new Point(108, 8));
        }
        
        /// <summary>
        /// AssignRoleWithDragStep20
        /// </summary>
        public void AssignRoleWithDragStep20()
        {
            #region Variable Declarations
            DXCell uIXD1KnutsenLaura08001Cell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD1KnutsenLaura08001Cell;
            DXCell uIWarningAnsattmanglerCell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningAnsattmanglerCell;
            #endregion

            // Move '(x)D1 - Knutsen, Laura (08:00 - 16:00)' cell to '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D - Dahle, Kristin (08:00 - 12:00)
            //( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D1 - Knutsen, Laura (08:00 - 12:00)' cell
            uIWarningAnsattmanglerCell.EnsureClickable(new Point(80, 8));
            Mouse.StartDragging(uIXD1KnutsenLaura08001Cell, new Point(82, 6));
            Mouse.StopDragging(uIWarningAnsattmanglerCell, new Point(80, 8));
        }
        
        /// <summary>
        /// CheckAssignedRoleDeletedStep27 - Use 'CheckAssignedRoleDeletedStep27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAssignedRoleDeletedStep27()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell2 = this.UIOppgavetildelingWindow.UISchedulerControl1List2.UIAppointmentCell2;
            #endregion

            // Verify that the 'Exists' property of 'Appointment' cell equals 'False'
            Assert.AreEqual(this.CheckAssignedRoleDeletedStep27ExpectedValues.UIAppointmentCell2Exists, uIAppointmentCell2.Exists);
        }
        
        /// <summary>
        /// CheckAvailableRolesStep28 - Use 'CheckAvailableRolesStep28ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAvailableRolesStep28()
        {
            #region Variable Declarations
            DXCell uIDelttil4610EksklkaniCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGAvailableRolesTable.UIDelttil4610EksklkaniCell;
            DXCell uIORTEksklEksklusivoppCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGAvailableRolesTable.UIORTEksklEksklusivoppCell;
            DXCell uIOVER4600OverliggendeCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGAvailableRolesTable.UIOVER4600OverliggendeCell;
            #endregion

            // Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)'
            Assert.AreEqual(this.CheckAvailableRolesStep28ExpectedValues.UIDelttil4610EksklkaniCellText, uIDelttil4610EksklkaniCell.Text);

            // Verify that the 'Text' property of 'ORT Ekskl - Eksklusiv oppgave - kan ikke' cell equals 'ORT Ekskl - Eksklusiv oppgave - kan ikke'
            Assert.AreEqual(this.CheckAvailableRolesStep28ExpectedValues.UIORTEksklEksklusivoppCellText, uIORTEksklEksklusivoppCell.Text);

            // Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave' cell equals 'OVER 4600 - Overliggende oppgave'
            Assert.AreEqual(this.CheckAvailableRolesStep28ExpectedValues.UIOVER4600OverliggendeCellText, uIOVER4600OverliggendeCell.Text);
        }
        
        /// <summary>
        /// CheckAvailableRolesStep29 - Use 'CheckAvailableRolesStep29ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAvailableRolesStep29()
        {
            #region Variable Declarations
            DXCell uIDelttil4610EksklkaniCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGAvailableRolesTable.UIDelttil4610EksklkaniCell;
            DXCell uIORTEksklEksklusivoppCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGAvailableRolesTable.UIORTEksklEksklusivoppCell;
            DXCell uIOVER4600OverliggendeCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGAvailableRolesTable.UIOVER4600OverliggendeCell;
            DXCell uIOVER4600OverliggendeCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGAvailableRolesTable.UIOVER4600OverliggendeCell1;
            #endregion

            // Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)'
            Assert.AreEqual(this.CheckAvailableRolesStep29ExpectedValues.UIDelttil4610EksklkaniCellText, uIDelttil4610EksklkaniCell.Text);

            // Verify that the 'Text' property of 'ORT Ekskl - Eksklusiv oppgave - kan ikke' cell equals 'Delt til 4610/4810 Maks antall Sperre - Maks antall 2 (4710)'
            Assert.AreEqual(this.CheckAvailableRolesStep29ExpectedValues.UIORTEksklEksklusivoppCellText, uIORTEksklEksklusivoppCell.Text);

            // Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave' cell equals 'ORT Ekskl - Eksklusiv oppgave - kan ikke'
            Assert.AreEqual(this.CheckAvailableRolesStep29ExpectedValues.UIOVER4600OverliggendeCellText, uIOVER4600OverliggendeCell.Text);

            // Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave' cell equals 'OVER 4600 - Overliggende oppgave'
            Assert.AreEqual(this.CheckAvailableRolesStep29ExpectedValues.UIOVER4600OverliggendeCell1Text, uIOVER4600OverliggendeCell1.Text);
        }
        
        /// <summary>
        /// CheckAvailableRolesStep37 - Use 'CheckAvailableRolesStep37ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAvailableRolesStep37()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIOVER4600OverliggendeMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIOVER4600OverliggendeMenuBaseButtonItem;
            DXMenuBaseButtonItem uIDelttil4610EksklkaniMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIDelttil4610EksklkaniMenuBaseButtonItem;
            DXMenuBaseButtonItem uIKIRkonteringKonterinMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIKIRkonteringKonterinMenuBaseButtonItem;
            #endregion

            // Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave (4600)' MenuBaseButtonItem equals 'OVER 4600 - Overliggende oppgave (4600)'
            Assert.AreEqual(this.CheckAvailableRolesStep37ExpectedValues.UIOVER4600OverliggendeMenuBaseButtonItemText, uIOVER4600OverliggendeMenuBaseButtonItem.Text);

            // Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' MenuBaseButtonItem equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)'
            Assert.AreEqual(this.CheckAvailableRolesStep37ExpectedValues.UIDelttil4610EksklkaniMenuBaseButtonItemText, uIDelttil4610EksklkaniMenuBaseButtonItem.Text);

            // Verify that the 'Text' property of 'KIR kontering - Kontering (4620)' MenuBaseButtonItem equals 'KIR kontering - Kontering (4620)'
            Assert.AreEqual(this.CheckAvailableRolesStep37ExpectedValues.UIKIRkonteringKonterinMenuBaseButtonItemText, uIKIRkonteringKonterinMenuBaseButtonItem.Text);
        }
        
        /// <summary>
        /// CheckDepWindowOpen - Use 'CheckDepWindowOpenExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDepWindowOpen()
        {
            #region Variable Declarations
            DXCell uIItem4610Cell = this.UIOppgavedelingWindow.UIGroupControl2Client.UIGcDepartmentsTable.UIItem4610Cell;
            DXCell uIOrtopediCell = this.UIOppgavedelingWindow.UIGroupControl2Client.UIGcDepartmentsTable.UIOrtopediCell;
            #endregion

            // Verify that the 'Text' property of '4610' cell equals '4610'
            Assert.AreEqual(this.CheckDepWindowOpenExpectedValues.UIItem4610CellText, uIItem4610Cell.Text);

            // Verify that the 'Text' property of 'Ortopedi' cell equals 'Ortopedi'
            Assert.AreEqual(this.CheckDepWindowOpenExpectedValues.UIOrtopediCellText, uIOrtopediCell.Text);
        }
        
        /// <summary>
        /// CheckDisabledButtons - Use 'CheckDisabledButtonsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDisabledButtons()
        {
            #region Variable Declarations
            DXGrid uIGridControlRoleTable = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable;
            DXRibbonButtonItem uIEndreRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIRibbonControlRoleShaRibbon.UIRibbonPageRoleSharinRibbonPage.UIRpgActionsRibbonPageGroup.UIEndreRibbonBaseButtonItem;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIRibbonControlRoleShaRibbon.UIRibbonPageRoleSharinRibbonPage.UIRpgActionsRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Verify that the 'Name' property of 'gridControlRole' table equals 'gridControlRole'
            Assert.AreEqual(this.CheckDisabledButtonsExpectedValues.UIGridControlRoleTableName, uIGridControlRoleTable.Name);

            // Verify that the 'Enabled' property of 'Endre' RibbonBaseButtonItem equals 'False'
            Assert.AreEqual(this.CheckDisabledButtonsExpectedValues.UIEndreRibbonBaseButtonItemEnabled, uIEndreRibbonBaseButtonItem.Enabled);

            // Verify that the 'Enabled' property of 'Slett' RibbonBaseButtonItem equals 'False'
            Assert.AreEqual(this.CheckDisabledButtonsExpectedValues.UISlettRibbonBaseButtonItemEnabled, uISlettRibbonBaseButtonItem.Enabled);
        }
        
        /// <summary>
        /// CheckErrorMessagesStep2 - Use 'CheckErrorMessagesStep2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckErrorMessagesStep2()
        {
            #region Variable Declarations
            DXTestControl uIStatusMessageItemLabel = this.UIItemWindow.UIStatusMessageFlyoutPCustom.UIStatusMessageListCustom.UIStatusMessageItemLabel;
            DXTestControl uIStatusMessageItemLabel1 = this.UIItemWindow.UIStatusMessageFlyoutPCustom.UIStatusMessageListCustom.UIStatusMessageItemLabel1;
            DXTestControl uIStatusMessageItemLabel2 = this.UIItemWindow.UIStatusMessageFlyoutPCustom.UIStatusMessageListCustom.UIStatusMessageItemLabel2;
            #endregion

            // Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler oppgave'
            Assert.AreEqual(this.CheckErrorMessagesStep2ExpectedValues.UIStatusMessageItemLabelText, uIStatusMessageItemLabel.Text);

            // Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler fra dato'
            Assert.AreEqual(this.CheckErrorMessagesStep2ExpectedValues.UIStatusMessageItemLabel1Text, uIStatusMessageItemLabel1.Text);

            // Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler avdeling'
            Assert.AreEqual(this.CheckErrorMessagesStep2ExpectedValues.UIStatusMessageItemLabel2Text, uIStatusMessageItemLabel2.Text);
        }
        
        /// <summary>
        /// CheckFilterActiveStep41 - Use 'CheckFilterActiveStep41ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckFilterActiveStep41()
        {
            #region Variable Declarations
            DXTestControl uIPeriodRowHeaderContrClient = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodRowHeaderContrClient;
            DXTestControl uIPeriodRowHeaderContrClient1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodRowHeaderContrClient1;
            DXTestControl uIPeriodRowHeaderContrClient2 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodRowHeaderContrClient2;
            #endregion

            // Verify that the 'Name' property of 'PeriodRowHeaderControl' client equals 'topPanelXtraScrollableControl[0]PeriodRowHeaderControl[0]'
            Assert.AreEqual(this.CheckFilterActiveStep41ExpectedValues.UIPeriodRowHeaderContrClientName, uIPeriodRowHeaderContrClient.Name);

            // Verify that the 'Name' property of 'PeriodRowHeaderControl' client equals 'topPanelXtraScrollableControl[0]PeriodRowHeaderControl[1]'
            Assert.AreEqual(this.CheckFilterActiveStep41ExpectedValues.UIPeriodRowHeaderContrClient1Name, uIPeriodRowHeaderContrClient1.Name);

            // Verify that the 'Name' property of 'PeriodRowHeaderControl' client equals 'topPanelXtraScrollableControl[0]PeriodRowHeaderControl[2]'
            Assert.AreEqual(this.CheckFilterActiveStep41ExpectedValues.UIPeriodRowHeaderContrClient2Name, uIPeriodRowHeaderContrClient2.Name);
        }
        
        /// <summary>
        /// CheckFilteredRolesEmpViewStep40 - Use 'CheckFilteredRolesEmpViewStep40ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckFilteredRolesEmpViewStep40()
        {
            #region Variable Declarations
            DXCell uIKIRkonteringCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIKIRkonteringCell;
            DXCell uIOVER4600Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIOVER4600Cell;
            DXCell uIDelttil4620LESCell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIDelttil4620LESCell1;
            #endregion

            // Verify that the 'Text' property of 'KIR kontering' cell equals 'KIR kontering'
            Assert.AreEqual(this.CheckFilteredRolesEmpViewStep40ExpectedValues.UIKIRkonteringCellText, uIKIRkonteringCell.Text);

            // Verify that the 'Text' property of 'OVER 4600' cell equals 'OVER 4600'
            Assert.AreEqual(this.CheckFilteredRolesEmpViewStep40ExpectedValues.UIOVER4600CellText, uIOVER4600Cell.Text);

            // Verify that the 'Text' property of 'Delt til 4620 LES' cell equals 'Delt til 4620 LES'
            Assert.AreEqual(this.CheckFilteredRolesEmpViewStep40ExpectedValues.UIDelttil4620LESCell1Text, uIDelttil4620LESCell1.Text);
        }
        
        /// <summary>
        /// CheckFilteredRolesStep40 - Use 'CheckFilteredRolesStep40ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckFilteredRolesStep40()
        {
            #region Variable Declarations
            DXCell uIKIRkontering08001600Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIKIRkontering08001600Cell;
            DXCell uIOVER460010001400Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIOVER460010001400Cell;
            DXCell uIDelttil4620LES080016Cell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDelttil4620LES080016Cell1;
            #endregion

            // Verify that the 'Text' property of 'KIR kontering (08:00 - 16:00)' cell equals 'KIR kontering (08:00 - 16:00)'
            Assert.AreEqual(this.CheckFilteredRolesStep40ExpectedValues.UIKIRkontering08001600CellText, uIKIRkontering08001600Cell.Text);

            // Verify that the 'Text' property of 'OVER 4600 (10:00 - 14:00)' cell equals 'OVER 4600 (10:00 - 14:00)'
            Assert.AreEqual(this.CheckFilteredRolesStep40ExpectedValues.UIOVER460010001400CellText, uIOVER460010001400Cell.Text);

            // Verify that the 'Text' property of 'Delt til 4620 LES (08:00 - 16:00)' cell equals 'Delt til 4620 LES (08:00 - 16:00)'
            Assert.AreEqual(this.CheckFilteredRolesStep40ExpectedValues.UIDelttil4620LES080016Cell1Text, uIDelttil4620LES080016Cell1.Text);
        }
        
        /// <summary>
        /// CheckHintStep13 - Use 'CheckHintStep13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckHintStep13()
        {
            #region Variable Declarations
            WinToolTip uIAnsattmanglerfølgendToolTip = this.UIItemWindow2.UIAnsattmanglerfølgendToolTip;
            #endregion

            // Verify that the 'Name' property of 'Ansatt mangler følgende ønsket kompetanse for å de...' tooltip equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG. '
            Assert.AreEqual(this.CheckHintStep13ExpectedValues.UIAnsattmanglerfølgendToolTipName, uIAnsattmanglerfølgendToolTip.Name);
        }
        
        /// <summary>
        /// CheckInfoStep26 - Use 'CheckInfoStep26ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckInfoStep26()
        {
            #region Variable Declarations
            DXTestControl uILabelControl2Label = this.UIOppgavetildelingWindow1.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UILabelControl2Label;
            DXTestControl uILblExecutingDepartmeLabel = this.UIOppgavetildelingWindow1.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UILblExecutingDepartmeLabel;
            #endregion

            // Verify that the 'Text' property of 'labelControl2' label equals 'Utføres på avdeling:'
            Assert.AreEqual(this.CheckInfoStep26ExpectedValues.UILabelControl2LabelText, uILabelControl2Label.Text);

            // Verify that the 'Text' property of 'lblExecutingDepartment' label equals '4620 - Kirurgi'
            Assert.AreEqual(this.CheckInfoStep26ExpectedValues.UILblExecutingDepartmeLabelText, uILblExecutingDepartmeLabel.Text);
        }
        
        /// <summary>
        /// CheckNoRoleAddedStep12 - Use 'CheckNoRoleAddedStep12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckNoRoleAddedStep12()
        {
            #region Variable Declarations
            DXTestControl uIEmptyIPeriodScheduleClient = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIEmptyIPeriodScheduleClient;
            #endregion

            // Verify that the 'FriendlyName' property of 'EmptyIPeriodScheduleListBox' client equals 'EmptyIPeriodScheduleListBox'
            Assert.AreEqual(this.CheckNoRoleAddedStep12ExpectedValues.UIEmptyIPeriodScheduleClientFriendlyName, uIEmptyIPeriodScheduleClient.FriendlyName);
        }
        
        /// <summary>
        /// CheckNoRoleAddedStep15 - Use 'CheckNoRoleAddedStep15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckNoRoleAddedStep15()
        {
            #region Variable Declarations
            DXTestControl uIEmptyIPeriodScheduleClient1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIEmptyIPeriodScheduleClient1;
            #endregion

            // Verify that the 'FriendlyName' property of 'EmptyIPeriodScheduleListBox' client equals 'EmptyIPeriodScheduleListBox'
            Assert.AreEqual(this.CheckNoRoleAddedStep15ExpectedValues.UIEmptyIPeriodScheduleClient1FriendlyName, uIEmptyIPeriodScheduleClient1.FriendlyName);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep14 - Use 'CheckRoleAssignedStep14ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep14()
        {
            #region Variable Declarations
            DXListBoxItem uIDahleKristin08001200ListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList.UIDahleKristin08001200ListItem;
            #endregion

            // Verify that the 'Text' property of 'Dahle, Kristin - 0800-1200' list item equals 'Dahle, Kristin - 0800-1200'
            Assert.AreEqual(this.CheckRoleAssignedStep14ExpectedValues.UIDahleKristin08001200ListItemText, uIDahleKristin08001200ListItem.Text);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep16 - Use 'CheckRoleAssignedStep16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep16()
        {
            #region Variable Declarations
            DXListBoxItem uIEideSam08001600ListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList1.UIEideSam08001600ListItem;
            #endregion

            // Verify that the 'Text' property of 'Eide, Sam - 0800-1600' list item equals 'Eide, Sam - 0800-1600'
            Assert.AreEqual(this.CheckRoleAssignedStep16ExpectedValues.UIEideSam08001600ListItemText, uIEideSam08001600ListItem.Text);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep19 - Use 'CheckRoleAssignedStep19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep19()
        {
            #region Variable Declarations
            DXCell uID108001600Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID108001600Cell;
            #endregion

            // Verify that the 'Text' property of '( )D1 (08:00 - 16:00)' cell equals '( )D1 (08:00 - 16:00)
            //( )Delt til 4620 Kun tirsdag (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleAssignedStep19ExpectedValues.UID108001600CellText, uID108001600Cell.Text);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep20 - Use 'CheckRoleAssignedStep20ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep20()
        {
            #region Variable Declarations
            DXCell uIWarningAnsattmanglerCell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningAnsattmanglerCell;
            #endregion

            // Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D - Dahle, Kristin (08:00 - 12:00)
            //( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D1 - Knutsen, Laura (08:00 - 12:00)' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D - Dahle, Kristin (08:00 - 12:00)
            //( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D1 - Knutsen, Laura (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRoleAssignedStep20ExpectedValues.UIWarningAnsattmanglerCellText, uIWarningAnsattmanglerCell.Text);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep22 - Use 'CheckRoleAssignedStep22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep22()
        {
            #region Variable Declarations
            DXListBoxItem uIKnutsenLaura12001800ListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList2.UIKnutsenLaura12001800ListItem;
            #endregion

            // Verify that the 'Text' property of 'Knutsen, Laura - 1200-1800' list item equals 'Knutsen, Laura - 1200-1800'
            Assert.AreEqual(this.CheckRoleAssignedStep22ExpectedValues.UIKnutsenLaura12001800ListItemText, uIKnutsenLaura12001800ListItem.Text);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep25 - Use 'CheckRoleAssignedStep25ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep25()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelRoleSchedDockPanel.UIControlContainerCustom.UISchedulerControlWindow.UISchedulerControlList.UIAppointmentCell;
            #endregion

            // Verify that the 'Name' property of 'Appointment' cell contains '8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject , Time Ledig, 1 of 1'
            StringAssert.Contains(uIAppointmentCell.Name, this.CheckRoleAssignedStep25ExpectedValues.UIAppointmentCellName);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep30 - Use 'CheckRoleAssignedStep30ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep30()
        {
            #region Variable Declarations
            DXListBoxItem uIBakkeStein08001600ListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList3.UIBakkeStein08001600ListItem;
            #endregion

            // Verify that the 'Text' property of 'Bakke, Stein - 0800-1600' list item equals 'Bakke, Stein - 0800-1600'
            Assert.AreEqual(this.CheckRoleAssignedStep30ExpectedValues.UIBakkeStein08001600ListItemText, uIBakkeStein08001600ListItem.Text);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep31 - Use 'CheckRoleAssignedStep31ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep31()
        {
            #region Variable Declarations
            DXCell uIDelttil46104810MaksaCell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDelttil46104810MaksaCell;
            DXCell uIItem4710KardiologiCell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItem4710KardiologiCell;
            DXCell uIInformationOppgaveerCell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaveerCell;
            #endregion

            // Verify that the 'Text' property of 'Delt til 4610/4810 Maks antall Sperre (08:00 - 16:00)' cell equals 'Delt til 4610/4810 Maks antall Sperre (08:00 - 16:00)'
            Assert.AreEqual(this.CheckRoleAssignedStep31ExpectedValues.UIDelttil46104810MaksaCellText, uIDelttil46104810MaksaCell.Text);

            // Verify that the 'Text' property of '4710 - Kardiologi' cell equals '4710 - Kardiologi'
            Assert.AreEqual(this.CheckRoleAssignedStep31ExpectedValues.UIItem4710KardiologiCellText, uIItem4710KardiologiCell.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgave er dekket av annen avdeling (4610))D - Bakke, Stein (08:00 - 16:00)
            //( )GV1 - Ellingsen, Rolf (08:00 - 16:00)' cell equals '( )(Information:Oppgave er dekket av annen avdeling (4610))D - Bakke, Stein (08:00 - 16:00)
            //( )GV1 - Ellingsen, Rolf (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleAssignedStep31ExpectedValues.UIInformationOppgaveerCellText, uIInformationOppgaveerCell.Text);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep35 - Use 'CheckRoleAssignedStep35ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep35()
        {
            #region Variable Declarations
            DXListBoxItem uIEllingsenRolf0800160ListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList8.UIEllingsenRolf0800160ListItem;
            #endregion

            // Verify that the 'Text' property of 'Ellingsen, Rolf - 0800-1600' list item equals 'Ellingsen, Rolf - 0800-1600'
            Assert.AreEqual(this.CheckRoleAssignedStep35ExpectedValues.UIEllingsenRolf0800160ListItemText, uIEllingsenRolf0800160ListItem.Text);
        }
        
        /// <summary>
        /// CheckRoleAssignedStep36 - Use 'CheckRoleAssignedStep36ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAssignedStep36()
        {
            #region Variable Declarations
            DXListBox uIPeriodScheduleListBoList9 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList9;
            #endregion

            // Verify that the 'SelectedItemsAsString' property of 'PeriodScheduleListBoxControl`1' list box equals 'Ellingsen, Rolf - 0800-1600'
            Assert.AreEqual(this.CheckRoleAssignedStep36ExpectedValues.UIPeriodScheduleListBoList9SelectedItemsAsString, uIPeriodScheduleListBoList9.GetProperty(DXTestControl.PropertyNames.SelectedItemsAsString).ToString());
        }
        
        /// <summary>
        /// CheckRoleAvailableStep36 - Use 'CheckRoleAvailableStep36ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleAvailableStep36()
        {
            #region Variable Declarations
            DXCell uIDelttil4620LES080016Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDelttil4620LES080016Cell;
            DXCell uIInformationOppgaveerCell2 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationOppgaveerCell2;
            #endregion

            // Verify that the 'Text' property of 'Delt til 4620 LES (08:00 - 16:00)' cell equals 'Delt til 4620 LES (08:00 - 16:00)'
            Assert.AreEqual(this.CheckRoleAvailableStep36ExpectedValues.UIDelttil4620LES080016CellText, uIDelttil4620LES080016Cell.Text);

            // Verify that the 'Text' property of '( )(Information:Oppgave er dekket av annen avdeling (4810))GV1 - Ellingsen, Rolf (08:00 - 16:00)' cell equals '( )(Information:Oppgave er dekket av annen avdeling (4810))GV1 - Ellingsen, Rolf (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleAvailableStep36ExpectedValues.UIInformationOppgaveerCell2Text, uIInformationOppgaveerCell2.Text);
        }
        
        /// <summary>
        /// CheckRoleCompStep13 - Use 'CheckRoleCompStep13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleCompStep13()
        {
            #region Variable Declarations
            DXCell uISPESLEGSpesialistlegCell = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient.UIHostedCompetenceCompCustom.UIVhCompetenceCustom.UIPcViewClient.UICompetenceComparisonCustom.UIGcCompetenceComparisTable.UISPESLEGSpesialistlegCell;
            #endregion

            // Verify that the 'Text' property of 'SPESLEG - Spesialistlege' cell equals 'SPESLEG - Spesialistlege'
            Assert.AreEqual(this.CheckRoleCompStep13ExpectedValues.UISPESLEGSpesialistlegCellText, uISPESLEGSpesialistlegCell.Text);
        }
        
        /// <summary>
        /// CheckRoleDeltTil4610IsInListStep4 - Use 'CheckRoleDeltTil4610IsInListStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleDeltTil4610IsInListStep4()
        {
            #region Variable Declarations
            DXCell uIDelttil4610EksklkaniCell = this.UIOppgavedelingWindow.UIGroupControl1Client.UIGcRolesTable.UIDelttil4610EksklkaniCell;
            DXCell uIKirurgiCell = this.UIOppgavedelingWindow.UIGroupControl1Client.UIGcRolesTable.UIKirurgiCell;
            #endregion

            // Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver'
            Assert.AreEqual(this.CheckRoleDeltTil4610IsInListStep4ExpectedValues.UIDelttil4610EksklkaniCellText, uIDelttil4610EksklkaniCell.Text);

            // Verify that the 'Text' property of 'Kirurgi' cell equals 'Kirurgi'
            Assert.AreEqual(this.CheckRoleDeltTil4610IsInListStep4ExpectedValues.UIKirurgiCellText, uIKirurgiCell.Text);
        }
        
        /// <summary>
        /// CheckRoleDetailsStep28 - Use 'CheckRoleDetailsStep28ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleDetailsStep28()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow.UISchedulerControl1List4.UIAppointmentCell;
            #endregion

            // Verify that the 'Name' property of 'Appointment' cell contains '8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject Delt til 4610 Ekskl kan ikke*, Time Ledig, 2 of 2'
            StringAssert.Contains(uIAppointmentCell.Name, this.CheckRoleDetailsStep28ExpectedValues.UIAppointmentCellName);
        }
        
        /// <summary>
        /// CheckRoleErrorsInDetailsWinStep37 - Use 'CheckRoleErrorsInDetailsWinStep37ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleErrorsInDetailsWinStep37()
        {
            #region Variable Declarations
            WinToolTip uIMangleroppgavedelingToolTip = this.UIItemWindow6.UIMangleroppgavedelingToolTip;
            #endregion

            // Verify that the 'Name' property of 'Mangler oppgavedeling i perioden for å kunne tilde...' tooltip equals 'Mangler oppgavedeling i perioden for å kunne tildele oppgave. '
            Assert.AreEqual(this.CheckRoleErrorsInDetailsWinStep37ExpectedValues.UIMangleroppgavedelingToolTipName, uIMangleroppgavedelingToolTip.Name);
        }
        
        /// <summary>
        /// CheckRolePatternAssignedStep43 - Use 'CheckRolePatternAssignedStep43ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolePatternAssignedStep43()
        {
            #region Variable Declarations
            DXCell uIDelttil4610EksklkaniCell = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UITabPage1Client.UIGcAddedTable.UIDelttil4610EksklkaniCell;
            DXCell uIOVER4600Cell = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UITabPage1Client.UIGcAddedTable.UIOVER4600Cell;
            DXCell uIDelttil4620KompetansCell = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UITabPage1Client.UIGcAddedTable.UIDelttil4620KompetansCell;
            DXCell uIAnsattmanglerfølgendCell = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UITabPage1Client.UIGcAddedTable.UIAnsattmanglerfølgendCell;
            DXCell uIMandagCell = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UITabPage1Client.UIGcAddedTable.UIMandagCell;
            DXCell uITirsdagCell = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UITabPage1Client.UIGcAddedTable.UITirsdagCell;
            DXCell uIOnsdagCell = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UITabPage1Client.UIGcAddedTable.UIOnsdagCell;
            DXTestControl uIXtraTabControlHeaderTabPage = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UIXtraTabControlHeaderTabPage;
            #endregion

            // Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke' cell equals 'Delt til 4610 Ekskl kan ikke'
            Assert.AreEqual(this.CheckRolePatternAssignedStep43ExpectedValues.UIDelttil4610EksklkaniCellText, uIDelttil4610EksklkaniCell.Text);

            // Verify that the 'Text' property of 'OVER 4600' cell equals 'OVER 4600'
            Assert.AreEqual(this.CheckRolePatternAssignedStep43ExpectedValues.UIOVER4600CellText, uIOVER4600Cell.Text);

            // Verify that the 'Text' property of 'Delt til 4620 Kompetanse bør' cell equals 'Delt til 4620 Kompetanse bør'
            Assert.AreEqual(this.CheckRolePatternAssignedStep43ExpectedValues.UIDelttil4620KompetansCellText, uIDelttil4620KompetansCell.Text);

            // Verify that the 'Text' property of 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG' cell equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG'
            Assert.AreEqual(this.CheckRolePatternAssignedStep43ExpectedValues.UIAnsattmanglerfølgendCellText, uIAnsattmanglerfølgendCell.Text);

            // Verify that the 'Text' property of 'mandag' cell equals 'mandag'
            Assert.AreEqual(this.CheckRolePatternAssignedStep43ExpectedValues.UIMandagCellText, uIMandagCell.Text);

            // Verify that the 'Text' property of 'tirsdag' cell equals 'tirsdag'
            Assert.AreEqual(this.CheckRolePatternAssignedStep43ExpectedValues.UITirsdagCellText, uITirsdagCell.Text);

            // Verify that the 'Text' property of 'onsdag' cell equals 'onsdag'
            Assert.AreEqual(this.CheckRolePatternAssignedStep43ExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Ignorerte (0)'
            Assert.AreEqual(this.CheckRolePatternAssignedStep43ExpectedValues.UIXtraTabControlHeaderTabPageText, uIXtraTabControlHeaderTabPage.Text);
        }
        
        /// <summary>
        /// CheckRolePatternAssignedStep44 - Use 'CheckRolePatternAssignedStep44ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolePatternAssignedStep44()
        {
            #region Variable Declarations
            DXCell uIDahleKristinCell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDahleKristinCell;
            DXCell uIItem4620KirurgiCell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItem4620KirurgiCell;
            DXCell uID08001600Delttil4610Cell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Delttil4610Cell;
            DXCell uID08001600OVER4600100Cell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600OVER4600100Cell;
            DXCell uID08001600WarningAnsaCell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600WarningAnsaCell;
            #endregion

            // Verify that the 'Text' property of 'Dahle, Kristin' cell equals 'Dahle, Kristin'
            Assert.AreEqual(this.CheckRolePatternAssignedStep44ExpectedValues.UIDahleKristinCellText, uIDahleKristinCell.Text);

            // Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
            Assert.AreEqual(this.CheckRolePatternAssignedStep44ExpectedValues.UIItem4620KirurgiCellText, uIItem4620KirurgiCell.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )Delt til 4610 Ekskl kan ikke (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )Delt til 4610 Ekskl kan ikke (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolePatternAssignedStep44ExpectedValues.UID08001600Delttil4610CellText, uID08001600Delttil4610Cell.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )OVER 4600 (10:00 - 14:00)' cell equals '( )D (08:00 - 16:00)
            //( )OVER 4600 (10:00 - 14:00)
            //'
            Assert.AreEqual(this.CheckRolePatternAssignedStep44ExpectedValues.UID08001600OVER4600100CellText, uID08001600OVER4600100Cell.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
            //( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckRolePatternAssignedStep44ExpectedValues.UID08001600WarningAnsaCellText, uID08001600WarningAnsaCell.Text);
        }
        
        /// <summary>
        /// CheckRolesInListStep11 - Use 'CheckRolesInListStep11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolesInListStep11()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIOVER4600OverliggendeMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIOVER4600OverliggendeMenuBaseButtonItem;
            DXMenuBaseButtonItem uIDelttil4610EksklkaniMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIDelttil4610EksklkaniMenuBaseButtonItem;
            DXMenuBaseButtonItem uIKIRkonteringKonterinMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIKIRkonteringKonterinMenuBaseButtonItem;
            #endregion

            // Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave (4600)' MenuBaseButtonItem equals 'OVER 4600 - Overliggende oppgave (4600)'
            Assert.AreEqual(this.CheckRolesInListStep11ExpectedValues.UIOVER4600OverliggendeMenuBaseButtonItemText, uIOVER4600OverliggendeMenuBaseButtonItem.Text);

            // Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' MenuBaseButtonItem equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)'
            Assert.AreEqual(this.CheckRolesInListStep11ExpectedValues.UIDelttil4610EksklkaniMenuBaseButtonItemText, uIDelttil4610EksklkaniMenuBaseButtonItem.Text);

            // Verify that the 'Text' property of 'KIR kontering - Kontering (4620)' MenuBaseButtonItem equals 'KIR kontering - Kontering (4620)'
            Assert.AreEqual(this.CheckRolesInListStep11ExpectedValues.UIKIRkonteringKonterinMenuBaseButtonItemText, uIKIRkonteringKonterinMenuBaseButtonItem.Text);
        }
        
        /// <summary>
        /// CheckRolesInListStep3 - Use 'CheckRolesInListStep3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolesInListStep3()
        {
            #region Variable Declarations
            DXCell uIDelttil4610EksklkaniCell = this.UIVelgoppgaverWindow.UIGcRolesTable.UIDelttil4610EksklkaniCell;
            DXCell uIKIRkonteringKonterinCell = this.UIVelgoppgaverWindow.UIGcRolesTable.UIKIRkonteringKonterinCell;
            #endregion

            // Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver'
            Assert.AreEqual(this.CheckRolesInListStep3ExpectedValues.UIDelttil4610EksklkaniCellText, uIDelttil4610EksklkaniCell.Text);

            // Verify that the 'Text' property of 'KIR kontering - Kontering' cell equals 'KIR kontering - Kontering'
            Assert.AreEqual(this.CheckRolesInListStep3ExpectedValues.UIKIRkonteringKonterinCellText, uIKIRkonteringKonterinCell.Text);
        }
        
        /// <summary>
        /// CheckSumStep19 - Use 'CheckSumStep19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep19()
        {
            #region Variable Declarations
            DXCell uIItem160160Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem160160Cell;
            #endregion

            // Verify that the 'Text' property of '16,0 / 16,0' cell equals '16,0 / 16,0'
            Assert.AreEqual(this.CheckSumStep19ExpectedValues.UIItem160160CellText, uIItem160160Cell.Text);
        }
        
        /// <summary>
        /// CheckSumStep31 - Use 'CheckSumStep31ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep31()
        {
            #region Variable Declarations
            DXCell uIItem155160Cell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem155160Cell;
            #endregion

            // Verify that the 'Text' property of '15,5 / 16,0' cell equals '15,5 / 16,0'
            Assert.AreEqual(this.CheckSumStep31ExpectedValues.UIItem155160CellText, uIItem155160Cell.Text);
        }
        
        /// <summary>
        /// CheckWarnigsStep20 - Use 'CheckWarnigsStep20ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWarnigsStep20()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblContentLabel1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            DXTestControl uILblEmploymentLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UILblEmploymentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt til 4620 Kompetanse bør'
            Assert.AreEqual(this.CheckWarnigsStep20ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG'
            Assert.AreEqual(this.CheckWarnigsStep20ExpectedValues.UILblContentLabelText1, uILblContentLabel1.Text);

            // Verify that the 'Text' property of 'lblName' label equals 'Knutsen, Laura'
            Assert.AreEqual(this.CheckWarnigsStep20ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);

            // Verify that the 'Text' property of 'lblEmployment' label equals 'L - Lege'
            Assert.AreEqual(this.CheckWarnigsStep20ExpectedValues.UILblEmploymentLabelText, uILblEmploymentLabel.Text);
        }
        
        /// <summary>
        /// CheckWarnigsStep21 - Use 'CheckWarnigsStep21ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWarnigsStep21()
        {
            #region Variable Declarations
            WinToolTip uIOppgaveOVER4700falleToolTip = this.UIItemWindow3.UIOppgaveOVER4700falleToolTip;
            #endregion

            // Verify that the 'Name' property of 'Oppgave OVER 4700 faller utenfor vaktens tidsrom (...' tooltip equals 'Oppgave OVER 4700 faller utenfor vaktens tidsrom (08:00 - 16:00). '
            Assert.AreEqual(this.CheckWarnigsStep21ExpectedValues.UIOppgaveOVER4700falleToolTipName, uIOppgaveOVER4700falleToolTip.Name);
        }
        
        /// <summary>
        /// CheckWarningsStep26_1 - Use 'CheckWarningsStep26_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWarningsStep26_1()
        {
            #region Variable Declarations
            WinToolTip uIKundenneoppgavenikkeToolTip = this.UIItemWindow4.UIKundenneoppgavenikkeToolTip;
            #endregion

            // Verify that the 'Name' property of 'Kun denne oppgaven, ikke flere samtidig!.' tooltip equals 'Kun denne oppgaven, ikke flere samtidig!. '
            Assert.AreEqual(this.CheckWarningsStep26_1ExpectedValues.UIKundenneoppgavenikkeToolTipName, uIKundenneoppgavenikkeToolTip.Name);
        }
        
        /// <summary>
        /// CheckWarningsStep26_2 - Use 'CheckWarningsStep26_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWarningsStep26_2()
        {
            #region Variable Declarations
            WinToolTip uIOppgaveORTEksklereksToolTip = this.UIItemWindow4.UIOppgaveORTEksklereksToolTip;
            #endregion

            // Verify that the 'Name' property of 'Oppgave ORT Ekskl er eksklusiv men overlapper med ...' tooltip equals 'Oppgave ORT Ekskl er eksklusiv men overlapper med allerede tildelt oppgave Delt til 4610 Ekskl kan ikke. '
            Assert.AreEqual(this.CheckWarningsStep26_2ExpectedValues.UIOppgaveORTEksklereksToolTipName, uIOppgaveORTEksklereksToolTip.Name);
        }
        
        /// <summary>
        /// CheckWarningsStep32 - Use 'CheckWarningsStep32ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWarningsStep32()
        {
            #region Variable Declarations
            WinToolTip uIOppgaveDelttil461048ToolTip = this.UIItemWindow5.UIOppgaveDelttil461048ToolTip;
            #endregion

            // Verify that the 'Name' property of 'Oppgave Delt til 4610/4810 Maks antall Sperre kan ...' tooltip equals 'Oppgave Delt til 4610/4810 Maks antall Sperre kan ikke ha mer enn 2 samtidige tildelinger.. '
            Assert.AreEqual(this.CheckWarningsStep32ExpectedValues.UIOppgaveDelttil461048ToolTipName, uIOppgaveDelttil461048ToolTip.Name);
        }
        
        /// <summary>
        /// ChecRoleAndDepDataStep17 - Use 'ChecRoleAndDepDataStep17ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecRoleAndDepDataStep17()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblOtherLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblOtherLabel;
            DXTestControl uILblContentLabel1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            DXTestControl uILblOtherLabel1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblOtherLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            DXTestControl uILblEmploymentLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UILblEmploymentLabel;
            DXTestControl uILblDepartmentLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UILblDepartmentLabel;
            DXCell uIDahleKristinCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDahleKristinCell;
            DXCell uIEideSamCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIEideSamCell;
            DXCell uIItem4620KirurgiCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItem4620KirurgiCell;
            DXCell uIItem4620KirurgiCell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItem4620KirurgiCell1;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt til 4620 Kun tirsdag'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblOther' label equals '08:00 - 16:00'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UILblOtherLabelText, uILblOtherLabel.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Avdeling'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UILblContentLabelText1, uILblContentLabel1.Text);

            // Verify that the 'Text' property of 'lblOther' label equals '4710 - Kardiologi'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UILblOtherLabelText1, uILblOtherLabel1.Text);

            // Verify that the 'Text' property of 'lblName' label equals 'Eide, Sam'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);

            // Verify that the 'Text' property of 'lblEmployment' label equals 'L - Lege'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UILblEmploymentLabelText, uILblEmploymentLabel.Text);

            // Verify that the 'Text' property of 'lblDepartment' label equals '4620 - Kirurgi'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UILblDepartmentLabelText, uILblDepartmentLabel.Text);

            // Verify that the 'Text' property of 'Dahle, Kristin' cell equals 'Dahle, Kristin'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UIDahleKristinCellText, uIDahleKristinCell.Text);

            // Verify that the 'Text' property of 'Eide, Sam' cell equals 'Eide, Sam'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UIEideSamCellText, uIEideSamCell.Text);

            // Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UIItem4620KirurgiCellText, uIItem4620KirurgiCell.Text);

            // Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
            Assert.AreEqual(this.ChecRoleAndDepDataStep17ExpectedValues.UIItem4620KirurgiCell1Text, uIItem4620KirurgiCell1.Text);
        }
        
        /// <summary>
        /// ChecRoleAssignmentsNotDeletedStep18 - Use 'ChecRoleAssignmentsNotDeletedStep18ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecRoleAssignmentsNotDeletedStep18()
        {
            #region Variable Declarations
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UISlettRibbonBaseButtonItem;
            DXCell uIInformationVaktkodetCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationVaktkodetCell;
            DXCell uIInformationVaktkodetCell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationVaktkodetCell1;
            #endregion

            // Verify that the 'Enabled' property of 'Slett' RibbonBaseButtonItem equals 'False'
            Assert.AreEqual(this.ChecRoleAssignmentsNotDeletedStep18ExpectedValues.UISlettRibbonBaseButtonItemEnabled, uISlettRibbonBaseButtonItem.Enabled);

            // Verify that the 'Text' property of '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
            //(x)(Information:Oppgave er dekket av annen avdeling (4620))Delt til 4620 Kun tirsdag (08:00 - 16:00)' cell equals '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
            //(x)(Information:Oppgave er dekket av annen avdeling (4620))Delt til 4620 Kun tirsdag (08:00 - 16:00)
            //'
            Assert.AreEqual(this.ChecRoleAssignmentsNotDeletedStep18ExpectedValues.UIInformationVaktkodetCellText, uIInformationVaktkodetCell.Text);

            // Verify that the 'Text' property of '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
            //(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)' cell equals '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
            //(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)
            //'
            Assert.AreEqual(this.ChecRoleAssignmentsNotDeletedStep18ExpectedValues.UIInformationVaktkodetCell1Text, uIInformationVaktkodetCell1.Text);
        }
        
        /// <summary>
        /// ChecRoleDataInListStep10 - Use 'ChecRoleDataInListStep10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecRoleDataInListStep10()
        {
            #region Variable Declarations
            DXCell uIDelttil4610EksklkaniCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIDelttil4610EksklkaniCell;
            DXCell uIItem4620KirurgiCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem4620KirurgiCell;
            DXCell uIItem4610OrtopediCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem4610OrtopediCell;
            DXCell uITildelCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UITildelCell;
            DXCell uIItem01012024Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem01012024Cell;
            DXCell uIItem31122099Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem31122099Cell;
            DXCell uIKommentarstep7Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIKommentarstep7Cell;
            #endregion

            // Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver' cell equals 'Delt til 4620 LES - Kun delt for å kunne se'
            Assert.AreEqual(this.ChecRoleDataInListStep10ExpectedValues.UIDelttil4610EksklkaniCellText, uIDelttil4610EksklkaniCell.Text);

            // Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4810 - Geriatri'
            Assert.AreEqual(this.ChecRoleDataInListStep10ExpectedValues.UIItem4620KirurgiCellText, uIItem4620KirurgiCell.Text);

            // Verify that the 'Text' property of '4610 - Ortopedi' cell equals '4620 - Kirurgi'
            Assert.AreEqual(this.ChecRoleDataInListStep10ExpectedValues.UIItem4610OrtopediCellText, uIItem4610OrtopediCell.Text);

            // Verify that the 'Text' property of 'Tildel' cell equals 'Les'
            Assert.AreEqual(this.ChecRoleDataInListStep10ExpectedValues.UITildelCellText, uITildelCell.Text);

            // Verify that the 'Text' property of '01.01.2024' cell equals '01.01.2024'
            Assert.AreEqual(this.ChecRoleDataInListStep10ExpectedValues.UIItem01012024CellText, uIItem01012024Cell.Text);

            // Verify that the 'Text' property of '31.12.2099' cell equals '31.12.2099'
            Assert.AreEqual(this.ChecRoleDataInListStep10ExpectedValues.UIItem31122099CellText, uIItem31122099Cell.Text);

            // Verify that the 'Text' property of 'kommentar step 7' cell equals 'kommentar step 10'
            Assert.AreEqual(this.ChecRoleDataInListStep10ExpectedValues.UIKommentarstep7CellText, uIKommentarstep7Cell.Text);
        }
        
        /// <summary>
        /// ChecRoleDataInListStep7 - Use 'ChecRoleDataInListStep7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecRoleDataInListStep7()
        {
            #region Variable Declarations
            DXCell uIDelttil4610EksklkaniCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIDelttil4610EksklkaniCell;
            DXCell uIItem4620KirurgiCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem4620KirurgiCell;
            DXCell uIItem4610OrtopediCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem4610OrtopediCell;
            DXCell uITildelCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UITildelCell;
            DXCell uIItem01012024Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem01012024Cell;
            DXCell uIItem31122099Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem31122099Cell;
            DXCell uIKommentarstep7Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIKommentarstep7Cell;
            #endregion

            // Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver'
            Assert.AreEqual(this.ChecRoleDataInListStep7ExpectedValues.UIDelttil4610EksklkaniCellText, uIDelttil4610EksklkaniCell.Text);

            // Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
            Assert.AreEqual(this.ChecRoleDataInListStep7ExpectedValues.UIItem4620KirurgiCellText, uIItem4620KirurgiCell.Text);

            // Verify that the 'Text' property of '4610 - Ortopedi' cell equals '4610 - Ortopedi'
            Assert.AreEqual(this.ChecRoleDataInListStep7ExpectedValues.UIItem4610OrtopediCellText, uIItem4610OrtopediCell.Text);

            // Verify that the 'Text' property of 'Tildel' cell equals 'Tildel'
            Assert.AreEqual(this.ChecRoleDataInListStep7ExpectedValues.UITildelCellText, uITildelCell.Text);

            // Verify that the 'Text' property of '01.01.2024' cell equals '01.01.2024'
            Assert.AreEqual(this.ChecRoleDataInListStep7ExpectedValues.UIItem01012024CellText, uIItem01012024Cell.Text);

            // Verify that the 'Text' property of '31.12.2099' cell equals '31.12.2099'
            Assert.AreEqual(this.ChecRoleDataInListStep7ExpectedValues.UIItem31122099CellText, uIItem31122099Cell.Text);

            // Verify that the 'Text' property of 'kommentar step 7' cell equals 'kommentar step 7'
            Assert.AreEqual(this.ChecRoleDataInListStep7ExpectedValues.UIKommentarstep7CellText, uIKommentarstep7Cell.Text);
        }
        
        /// <summary>
        /// ChecRoleDataInListStep8 - Use 'ChecRoleDataInListStep8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecRoleDataInListStep8()
        {
            #region Variable Declarations
            DXCell uIDeltmed47204810TirsdCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIDeltmed47204810TirsdCell;
            DXCell uIItem4710KardiologiCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem4710KardiologiCell;
            DXCell uIItem4620KirurgiCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem4620KirurgiCell1;
            DXCell uITildelCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UITildelCell1;
            DXCell uIItem03012024Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem03012024Cell;
            DXCell uIItem10012024Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem10012024Cell;
            DXCell uIKommentarstep8Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIKommentarstep8Cell;
            #endregion

            // Verify that the 'Text' property of 'Delt med 4720/4810 - Tirsdag' cell equals 'Delt til 4620 Kompetanse bør - Kompetanse bør'
            Assert.AreEqual(this.ChecRoleDataInListStep8ExpectedValues.UIDeltmed47204810TirsdCellText, uIDeltmed47204810TirsdCell.Text);

            // Verify that the 'Text' property of '4710 - Kardiologi' cell equals '4710 - Kardiologi'
            Assert.AreEqual(this.ChecRoleDataInListStep8ExpectedValues.UIItem4710KardiologiCellText, uIItem4710KardiologiCell.Text);

            // Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
            Assert.AreEqual(this.ChecRoleDataInListStep8ExpectedValues.UIItem4620KirurgiCell1Text, uIItem4620KirurgiCell1.Text);

            // Verify that the 'Text' property of 'Tildel' cell equals 'Tildel'
            Assert.AreEqual(this.ChecRoleDataInListStep8ExpectedValues.UITildelCell1Text, uITildelCell1.Text);

            // Verify that the 'Text' property of '03.01.2024' cell equals '03.01.2024'
            Assert.AreEqual(this.ChecRoleDataInListStep8ExpectedValues.UIItem03012024CellText, uIItem03012024Cell.Text);

            // Verify that the 'Text' property of '10.01.2024' cell equals '10.01.2024'
            Assert.AreEqual(this.ChecRoleDataInListStep8ExpectedValues.UIItem10012024CellText, uIItem10012024Cell.Text);

            // Verify that the 'Text' property of 'kommentar step 8' cell equals 'kommentar step 8'
            Assert.AreEqual(this.ChecRoleDataInListStep8ExpectedValues.UIKommentarstep8CellText, uIKommentarstep8Cell.Text);
        }
        
        /// <summary>
        /// ChecRoleDataInListStep9 - Use 'ChecRoleDataInListStep9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecRoleDataInListStep9()
        {
            #region Variable Declarations
            DXCell uIDeltmed47204810TirsdCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIDeltmed47204810TirsdCell1;
            DXCell uIItem4710KardiologiCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem4710KardiologiCell1;
            DXCell uIItem4620KirurgiCell2 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem4620KirurgiCell2;
            DXCell uITildelCell2 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UITildelCell2;
            DXCell uIItem01012024Cell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem01012024Cell1;
            DXCell uIItem31122099Cell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIItem31122099Cell1;
            DXCell uIKommentarstep9Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIKommentarstep9Cell;
            #endregion

            // Verify that the 'Text' property of 'Delt med 4720/4810 - Tirsdag' cell equals 'Delt til 4620 Kun tirsdag - Bare Tirsdag'
            Assert.AreEqual(this.ChecRoleDataInListStep9ExpectedValues.UIDeltmed47204810TirsdCell1Text, uIDeltmed47204810TirsdCell1.Text);

            // Verify that the 'Text' property of '4710 - Kardiologi' cell equals '4710 - Kardiologi'
            Assert.AreEqual(this.ChecRoleDataInListStep9ExpectedValues.UIItem4710KardiologiCell1Text, uIItem4710KardiologiCell1.Text);

            // Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
            Assert.AreEqual(this.ChecRoleDataInListStep9ExpectedValues.UIItem4620KirurgiCell2Text, uIItem4620KirurgiCell2.Text);

            // Verify that the 'Text' property of 'Tildel' cell equals 'Tildel'
            Assert.AreEqual(this.ChecRoleDataInListStep9ExpectedValues.UITildelCell2Text, uITildelCell2.Text);

            // Verify that the 'Text' property of '01.01.2024' cell equals '01.01.2024'
            Assert.AreEqual(this.ChecRoleDataInListStep9ExpectedValues.UIItem01012024Cell1Text, uIItem01012024Cell1.Text);

            // Verify that the 'Text' property of '31.12.2099' cell equals '31.12.2099'
            Assert.AreEqual(this.ChecRoleDataInListStep9ExpectedValues.UIItem31122099Cell1Text, uIItem31122099Cell1.Text);

            // Verify that the 'Text' property of 'kommentar step 9' cell equals 'kommentar step 9'
            Assert.AreEqual(this.ChecRoleDataInListStep9ExpectedValues.UIKommentarstep9CellText, uIKommentarstep9Cell.Text);
        }
        
        /// <summary>
        /// DeleteExcessRolesAssignmentsDep4710
        /// </summary>
        public void DeleteExcessRolesAssignmentsDep4710()
        {
            #region Variable Declarations
            DXCell uIDeltmed47204810TirsdCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIDeltmed47204810TirsdCell;
            DXCell uIDeltmed47204810TirsdCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIDeltmed47204810TirsdCell1;
            DXCell uIDeltfra4640KompetansCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIDeltfra4640KompetansCell;
            DXCell uIDeltfra4720MaksantalCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIDeltfra4720MaksantalCell;
            DXCell uIDeltfra4810LESKundelCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIPanelControl1Client.UIGridControlRoleTable.UIDeltfra4810LESKundelCell;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIRibbonControlRoleShaRibbon.UIRibbonPageRoleSharinRibbonPage.UIRpgActionsRibbonPageGroup.UISlettRibbonBaseButtonItem;
            DXButton uIJAButton = this.UIItemWindow1.UIBekreftSlettingWindow.UIJAButton;
            #endregion

            // Click 'Delt med 4720/4810 - Tirsdag' cell
            Mouse.Click(uIDeltmed47204810TirsdCell, new Point(62, 9));

            // Click 'Delt med 4720/4810 - Tirsdag' cell while pressing Control
            Mouse.Click(uIDeltmed47204810TirsdCell1, MouseButtons.Left, ModifierKeys.Control, new Point(52, 8));

            // Click 'Delt fra 4640 - Kompetanse bør' cell while pressing Control
            Mouse.Click(uIDeltfra4640KompetansCell, MouseButtons.Left, ModifierKeys.Control, new Point(45, 5));

            // Click 'Delt fra 4720 - Maks antall 1' cell while pressing Control
            Mouse.Click(uIDeltfra4720MaksantalCell, MouseButtons.Left, ModifierKeys.Control, new Point(41, 5));

            // Last mouse action was not recorded.

            // Click 'Delt fra 4810 LES - Kun delt for å kunne se' cell while pressing Control
            Mouse.Click(uIDeltfra4810LESKundelCell, MouseButtons.Left, ModifierKeys.Control, new Point(41, 7));

            // Click 'Slett' RibbonBaseButtonItem
            Mouse.Click(uISlettRibbonBaseButtonItem, new Point(21, 25));

            // Click 'Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OpenAssignToDShiftDahleStep11
        /// </summary>
        public void OpenAssignToDShiftDahleStep11()
        {
            #region Variable Declarations
            DXCell uIDahleKristinCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIDahleKristinCell;
            DXMenuItem uITildelingavoppgaveMenuItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem;
            #endregion

            // Right-Click 'Dahle, Kristin' cell
            Mouse.Click(uIDahleKristinCell, MouseButtons.Right, ModifierKeys.None, new Point(22, 4));

            // Click 'Tildeling av oppgave' menu item
            Mouse.Click(uITildelingavoppgaveMenuItem, new Point(122, 12));
        }
        
        /// <summary>
        /// OpenHint1Step26
        /// </summary>
        public void OpenHint1Step26()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow.UISchedulerControl1List2.UIAppointmentCell;
            #endregion

            // Mouse hover 'Appointment' cell at (12, 12)
            Mouse.Hover(uIAppointmentCell, new Point(12, 12));
        }
        
        /// <summary>
        /// OpenHint2Step26
        /// </summary>
        public void OpenHint2Step26()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell1 = this.UIOppgavetildelingWindow.UISchedulerControl1List2.UIAppointmentCell1;
            #endregion

            // Mouse hover 'Appointment' cell at (17, 12)
            Mouse.Hover(uIAppointmentCell1, new Point(17, 12));
        }
        
        /// <summary>
        /// OpenHintStep13
        /// </summary>
        public void OpenHintStep13()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow.UISchedulerControl1List.UIAppointmentCell;
            #endregion

            // Wait for 2 seconds for user delay between actions; Mouse hover 'Appointment' cell at (13, 15)
            Playback.Wait(2000);
            Mouse.Hover(uIAppointmentCell, new Point(13, 15));
        }
        
        /// <summary>
        /// OpenHintStep32
        /// </summary>
        public void OpenHintStep32()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow.UISchedulerControl1List3.UIAppointmentCell;
            #endregion

            // Mouse hover 'Appointment' cell at (15, 12)
            Mouse.Hover(uIAppointmentCell, new Point(15, 12));
        }
        
        /// <summary>
        /// OpenHintStep37
        /// </summary>
        public void OpenHintStep37()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow.UISchedulerControl1List5.UIAppointmentCell;
            #endregion

            // Mouse hover 'Appointment' cell at (12, 13)
            Mouse.Hover(uIAppointmentCell, new Point(12, 13));
        }
        
        /// <summary>
        /// OpenRoleAssignmentStep23
        /// </summary>
        public void OpenRoleAssignmentStep23()
        {
            #region Variable Declarations
            DXListBoxItem uIKnutsenLaura12001800ListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList2.UIKnutsenLaura12001800ListItem;
            #endregion

            // Double-Click 'Knutsen, Laura - 1200-1800' list item
            Mouse.DoubleClick(uIKnutsenLaura12001800ListItem, new Point(93, 0));
        }
        
        /// <summary>
        /// OpenRolesByRightClickInDispStep37
        /// </summary>
        public void OpenRolesByRightClickInDispStep37()
        {
            #region Variable Declarations
            DXListBoxItem uIDDahleKristinListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UIBottomPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList3.UIDDahleKristinListItem;
            DXMenuItem uITildelingavoppgaveMenuItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem;
            #endregion

            // Right-Click 'D - Dahle, Kristin' list item
            Mouse.Click(uIDDahleKristinListItem, MouseButtons.Right, ModifierKeys.None, new Point(33, 5));

            // Click 'Tildeling av oppgave' menu item
            Mouse.Click(uITildelingavoppgaveMenuItem, new Point(111, 10));
        }
        
        /// <summary>
        /// OpenWarnigsStep21
        /// </summary>
        public void OpenWarnigsStep21()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow.UISchedulerControl1List1.UIAppointmentCell;
            #endregion

            // Mouse hover 'Appointment' cell at (15, 10)
            Mouse.Hover(uIAppointmentCell, new Point(15, 10));
        }
        
        /// <summary>
        /// SelectFilterRolesStep40 - Use 'SelectFilterRolesStep40Params' to pass parameters into this method.
        /// </summary>
        public void SelectFilterRolesStep40()
        {
            #region Variable Declarations
            DXCheckedListBox uIClbRowCheckedListBox = this.UIDefinisjonavfilterfoWindow.UIPcRowSelectionClient.UIGcRowSelectorClient.UIClbRowCheckedListBox;
            #endregion

            // Type '3 4 5' in 'clbRow' CheckedListBox
            //CheckedIndicesAsString
            uIClbRowCheckedListBox.CheckedIndicesAsString = this.SelectFilterRolesStep40Params.UIClbRowCheckedListBoxCheckedIndicesAsString;
        }
        
        /// <summary>
        /// SelectRoleStep17
        /// </summary>
        public void SelectRoleStep17()
        {
            #region Variable Declarations
            DXCell uIInformationVaktkodetCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationVaktkodetCell;
            #endregion

            // Click '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
            //(x)(Information:Oppgave er dekket av annen avdeling (4620))Delt til 4620 Kun tirsdag (08:00 - 16:00)' cell
            Mouse.Click(uIInformationVaktkodetCell, new Point(94, 24));
        }
        
        /// <summary>
        /// SelectRoleStep20
        /// </summary>
        public void SelectRoleStep20()
        {
            #region Variable Declarations
            DXCell uIWarningAnsattmanglerCell = this.UIOppgavetildelingWindow2.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningAnsattmanglerCell;
            #endregion

            // Click '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D - Dahle, Kristin (08:00 - 12:00)
            //( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D1 - Knutsen, Laura (08:00 - 12:00)' cell
            Mouse.Click(uIWarningAnsattmanglerCell, new Point(93, 27));
        }
        
        /// <summary>
        /// SelectTwoRoleAssignmentsStep18
        /// </summary>
        public void SelectTwoRoleAssignmentsStep18()
        {
            #region Variable Declarations
            DXCell uIInformationVaktkodetCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationVaktkodetCell;
            DXCell uIInformationVaktkodetCell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIInformationVaktkodetCell1;
            #endregion

            // Click '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
            //(x)(Information:Oppgave er dekket av annen avdeling (4620))Delt til 4620 Kun tirsdag (08:00 - 16:00)' cell
            Mouse.Click(uIInformationVaktkodetCell, new Point(100, 24));

            // Click '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
            //(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)' cell while pressing Control
            Mouse.Click(uIInformationVaktkodetCell1, MouseButtons.Left, ModifierKeys.Control, new Point(105, 24));
        }
        
        /// <summary>
        /// SetFilterNameTESTStep40 - Use 'SetFilterNameTESTStep40Params' to pass parameters into this method.
        /// </summary>
        public void SetFilterNameTESTStep40()
        {
            #region Variable Declarations
            DXTextEdit uITxtFilterNameEdit = this.UIItemWindow1.UIPopupContainerBarConMenu.UIPccFilterNameClient.UIPnlFilterNameClient.UITxtFilterNameEdit;
            #endregion

            // Type 'TEST' in 'txtFilterName' text box
            //ValueAsString
            uITxtFilterNameEdit.ValueAsString = this.SetFilterNameTESTStep40Params.UITxtFilterNameEditValueAsString;
        }
        
        /// <summary>
        /// TryAssignRoleByRightClickStep12
        /// </summary>
        public void TryAssignRoleByRightClickStep12()
        {
            #region Variable Declarations
            DXTestControl uIEmptyIPeriodScheduleClient = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIEmptyIPeriodScheduleClient;
            #endregion

            // Right-Click 'EmptyIPeriodScheduleListBox' client
            Mouse.Click(uIEmptyIPeriodScheduleClient, MouseButtons.Right, ModifierKeys.None, new Point(76, 17));
        }
        
        /// <summary>
        /// TryAssignRoleByRightClickStep37
        /// </summary>
        public void TryAssignRoleByRightClickStep37()
        {
            #region Variable Declarations
            DXListBox uIPeriodScheduleListBoList10 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList10;
            DXMenuItem uITildelingavoppgaveMenuItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem;
            DXMenuBaseButtonItem uIOVER4600OverliggendeMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UITildelingavoppgaveMenuItem.UIOVER4600OverliggendeMenuBaseButtonItem;
            #endregion

            // Right-Click 'PeriodScheduleListBoxControl`1' list box
            Mouse.Click(uIPeriodScheduleListBoList10, MouseButtons.Right, ModifierKeys.None, new Point(48, 16));

            // Click 'Tildeling av oppgave' menu item
            Mouse.Click(uITildelingavoppgaveMenuItem, new Point(67, 8));

            // Click 'OVER 4600 - Overliggende oppgave (4600)' MenuBaseButtonItem
            Mouse.Click(uIOVER4600OverliggendeMenuBaseButtonItem, new Point(112, 8));
        }
        
        /// <summary>
        /// TryAssignRoleDragFromDispStep37 - Use 'TryAssignRoleDragFromDispStep37Params' to pass parameters into this method.
        /// </summary>
        public void TryAssignRoleDragFromDispStep37()
        {
            #region Variable Declarations
            DXListBox uIPeriodScheduleListBoList3 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UIBottomPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList3;
            DXListBoxItem uIDDahleKristinListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UIBottomPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList3.UIDDahleKristinListItem;
            DXListBox uIPeriodScheduleListBoList10 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList10;
            #endregion

            // Select '0' in 'PeriodScheduleListBoxControl`1' list box
            //SelectedIndicesAsString
            uIPeriodScheduleListBoList3.SelectedIndicesAsString = this.TryAssignRoleDragFromDispStep37Params.UIPeriodScheduleListBoList3SelectedIndicesAsString;

            // Move 'D - Dahle, Kristin' list item to 'PeriodScheduleListBoxControl`1' list box
            uIPeriodScheduleListBoList10.EnsureClickable(new Point(45, 24));
            Mouse.StartDragging(uIDDahleKristinListItem, new Point(40, 5));
            Mouse.StopDragging(uIPeriodScheduleListBoList10, new Point(45, 24));
        }
        
        /// <summary>
        /// TryAssignRoleFromDispInTaskViewStep38
        /// </summary>
        public void TryAssignRoleFromDispInTaskViewStep38()
        {
            #region Variable Declarations
            DXCell uIXDDahleKristin080016Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXDDahleKristin080016Cell;
            DXCell uIItemCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            #endregion

            // Move '(x)D - Dahle, Kristin (08:00 - 16:00)' cell to cell
            uIItemCell.EnsureClickable(new Point(79, 7));
            Mouse.StartDragging(uIXDDahleKristin080016Cell, new Point(79, 8));
            Mouse.StopDragging(uIItemCell, new Point(79, 7));
        }
        
        /// <summary>
        /// TryAssignRoleFromDispStep12
        /// </summary>
        public void TryAssignRoleFromDispStep12()
        {
            #region Variable Declarations
            DXListBoxItem uIDDahleKristinListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UIBottomPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList.UIDDahleKristinListItem;
            DXTestControl uIEmptyIPeriodScheduleClient = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIEmptyIPeriodScheduleClient;
            #endregion

            // Move 'D - Dahle, Kristin' list item to 'EmptyIPeriodScheduleListBox' client
            uIEmptyIPeriodScheduleClient.EnsureClickable(new Point(116, 17));
            Mouse.StartDragging(uIDDahleKristinListItem, new Point(42, 3));
            Mouse.StopDragging(uIEmptyIPeriodScheduleClient, new Point(116, 17));
        }
        
        /// <summary>
        /// TryAssignRoleFromDispStep15
        /// </summary>
        public void TryAssignRoleFromDispStep15()
        {
            #region Variable Declarations
            DXListBoxItem uIDEideSamListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UIBottomPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList.UIDEideSamListItem;
            DXTestControl uIEmptyIPeriodScheduleClient1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIEmptyIPeriodScheduleClient1;
            #endregion

            // Move 'D - Eide, Sam' list item to 'EmptyIPeriodScheduleListBox' client
            uIEmptyIPeriodScheduleClient1.EnsureClickable(new Point(62, 14));
            Mouse.StartDragging(uIDEideSamListItem, new Point(33, 7));
            Mouse.StopDragging(uIEmptyIPeriodScheduleClient1, new Point(62, 14));
        }
        
        /// <summary>
        /// TryAssignRoleFromEmpsInTaskViewStep38
        /// </summary>
        public void TryAssignRoleFromEmpsInTaskViewStep38()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            DXCell uIDahleKristinCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UIDahleKristinCell;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(81, 11));

            // Double-Click 'Dahle, Kristin' cell
            Mouse.DoubleClick(uIDahleKristinCell, new Point(48, 8));
        }
        
        /// <summary>
        /// TryAssignRoleFromRoleByDragInEmployeeViewStep38
        /// </summary>
        public void TryAssignRoleFromRoleByDragInEmployeeViewStep38()
        {
            #region Variable Declarations
            DXCell uIDelttil4620LESCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIDelttil4620LESCell;
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            #endregion

            // Move 'Delt til 4620 LES' cell to '( )D (08:00 - 16:00)' cell
            uID08001600Cell.EnsureClickable(new Point(79, 16));
            Mouse.StartDragging(uIDelttil4620LESCell, new Point(54, 6));
            Mouse.StopDragging(uID08001600Cell, new Point(79, 16));
        }
        
        /// <summary>
        /// TryAssignRoleFromRolesInEmployeeViewStep38
        /// </summary>
        public void TryAssignRoleFromRolesInEmployeeViewStep38()
        {
            #region Variable Declarations
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            DXCell uIDelttil4620LESCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIDelttil4620LESCell;
            #endregion

            // Click '( )D (08:00 - 16:00)' cell
            Mouse.Click(uID08001600Cell, new Point(88, 14));

            // Double-Click 'Delt til 4620 LES' cell
            Mouse.DoubleClick(uIDelttil4620LESCell, new Point(57, 9));
        }
        
        /// <summary>
        /// TryAssignRoleStep26
        /// </summary>
        public void TryAssignRoleStep26()
        {
            #region Variable Declarations
            DXCell uIDelttil4610EksklkaniCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGAvailableRolesTable.UIDelttil4610EksklkaniCell;
            WinList uISchedulerControlList11 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelRoleSchedDockPanel.UIControlContainerCustom.UIRoleSchedulerControlWindow.UISchedulerControlList.UISchedulerControlList11;
            WinCell uIAppointmentCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelRoleSchedDockPanel.UIControlContainerCustom.UISchedulerControlWindow.UISchedulerControlList1.UIAppointmentCell;
            WinList uISchedulerControlList12 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelRoleSchedDockPanel.UIControlContainerCustom.UIRoleSchedulerControlWindow.UISchedulerControlList.UISchedulerControlList12;
            #endregion

            // Move 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' cell to 'schedulerControl' list box
            uISchedulerControlList11.EnsureClickable(new Point(693, 149));
            Mouse.StartDragging(uIDelttil4610EksklkaniCell, new Point(128, 5));
            Mouse.StopDragging(uISchedulerControlList11, new Point(693, 149));

            // Move 'Appointment' cell to 'schedulerControl' list box
            uISchedulerControlList12.EnsureClickable(new Point(449, 152));
            Mouse.StartDragging(uIAppointmentCell, new Point(181, 5));
            Mouse.StopDragging(uISchedulerControlList12, new Point(449, 152));
        }
        
        /// <summary>
        /// TryOpenWarnigStep23
        /// </summary>
        public void TryOpenWarnigStep23()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell1 = this.UIOppgavetildelingWindow.UISchedulerControl1List1.UIAppointmentCell1;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell1, new Point(23, 16));
        }
        
        /// <summary>
        /// TryToDeleteRoleAssignmentsStep18 - Use 'TryToDeleteRoleAssignmentsStep18Params' to pass parameters into this method.
        /// </summary>
        public void TryToDeleteRoleAssignmentsStep18()
        {
            #region Variable Declarations
            DXGrid uIGcDragDropGridTable = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Type '{Delete}' in 'gcDragDropGrid' table
            Keyboard.SendKeys(uIGcDragDropGridTable, this.TryToDeleteRoleAssignmentsStep18Params.UIGcDragDropGridTableSendKeys, ModifierKeys.None);

            // Click 'Slett' RibbonBaseButtonItem
            Mouse.Click(uISlettRibbonBaseButtonItem, new Point(31, 9));
        }
        
        #region Properties
        public virtual ActivateFilterInShiftBookRoleViewParams ActivateFilterInShiftBookRoleViewParams
        {
            get
            {
                if ((this.mActivateFilterInShiftBookRoleViewParams == null))
                {
                    this.mActivateFilterInShiftBookRoleViewParams = new ActivateFilterInShiftBookRoleViewParams();
                }
                return this.mActivateFilterInShiftBookRoleViewParams;
            }
        }
        
        public virtual CheckAssignedRoleDeletedStep27ExpectedValues CheckAssignedRoleDeletedStep27ExpectedValues
        {
            get
            {
                if ((this.mCheckAssignedRoleDeletedStep27ExpectedValues == null))
                {
                    this.mCheckAssignedRoleDeletedStep27ExpectedValues = new CheckAssignedRoleDeletedStep27ExpectedValues();
                }
                return this.mCheckAssignedRoleDeletedStep27ExpectedValues;
            }
        }
        
        public virtual CheckAvailableRolesStep28ExpectedValues CheckAvailableRolesStep28ExpectedValues
        {
            get
            {
                if ((this.mCheckAvailableRolesStep28ExpectedValues == null))
                {
                    this.mCheckAvailableRolesStep28ExpectedValues = new CheckAvailableRolesStep28ExpectedValues();
                }
                return this.mCheckAvailableRolesStep28ExpectedValues;
            }
        }
        
        public virtual CheckAvailableRolesStep29ExpectedValues CheckAvailableRolesStep29ExpectedValues
        {
            get
            {
                if ((this.mCheckAvailableRolesStep29ExpectedValues == null))
                {
                    this.mCheckAvailableRolesStep29ExpectedValues = new CheckAvailableRolesStep29ExpectedValues();
                }
                return this.mCheckAvailableRolesStep29ExpectedValues;
            }
        }
        
        public virtual CheckAvailableRolesStep37ExpectedValues CheckAvailableRolesStep37ExpectedValues
        {
            get
            {
                if ((this.mCheckAvailableRolesStep37ExpectedValues == null))
                {
                    this.mCheckAvailableRolesStep37ExpectedValues = new CheckAvailableRolesStep37ExpectedValues();
                }
                return this.mCheckAvailableRolesStep37ExpectedValues;
            }
        }
        
        public virtual CheckDepWindowOpenExpectedValues CheckDepWindowOpenExpectedValues
        {
            get
            {
                if ((this.mCheckDepWindowOpenExpectedValues == null))
                {
                    this.mCheckDepWindowOpenExpectedValues = new CheckDepWindowOpenExpectedValues();
                }
                return this.mCheckDepWindowOpenExpectedValues;
            }
        }
        
        public virtual CheckDisabledButtonsExpectedValues CheckDisabledButtonsExpectedValues
        {
            get
            {
                if ((this.mCheckDisabledButtonsExpectedValues == null))
                {
                    this.mCheckDisabledButtonsExpectedValues = new CheckDisabledButtonsExpectedValues();
                }
                return this.mCheckDisabledButtonsExpectedValues;
            }
        }
        
        public virtual CheckErrorMessagesStep2ExpectedValues CheckErrorMessagesStep2ExpectedValues
        {
            get
            {
                if ((this.mCheckErrorMessagesStep2ExpectedValues == null))
                {
                    this.mCheckErrorMessagesStep2ExpectedValues = new CheckErrorMessagesStep2ExpectedValues();
                }
                return this.mCheckErrorMessagesStep2ExpectedValues;
            }
        }
        
        public virtual CheckFilterActiveStep41ExpectedValues CheckFilterActiveStep41ExpectedValues
        {
            get
            {
                if ((this.mCheckFilterActiveStep41ExpectedValues == null))
                {
                    this.mCheckFilterActiveStep41ExpectedValues = new CheckFilterActiveStep41ExpectedValues();
                }
                return this.mCheckFilterActiveStep41ExpectedValues;
            }
        }
        
        public virtual CheckFilteredRolesEmpViewStep40ExpectedValues CheckFilteredRolesEmpViewStep40ExpectedValues
        {
            get
            {
                if ((this.mCheckFilteredRolesEmpViewStep40ExpectedValues == null))
                {
                    this.mCheckFilteredRolesEmpViewStep40ExpectedValues = new CheckFilteredRolesEmpViewStep40ExpectedValues();
                }
                return this.mCheckFilteredRolesEmpViewStep40ExpectedValues;
            }
        }
        
        public virtual CheckFilteredRolesStep40ExpectedValues CheckFilteredRolesStep40ExpectedValues
        {
            get
            {
                if ((this.mCheckFilteredRolesStep40ExpectedValues == null))
                {
                    this.mCheckFilteredRolesStep40ExpectedValues = new CheckFilteredRolesStep40ExpectedValues();
                }
                return this.mCheckFilteredRolesStep40ExpectedValues;
            }
        }
        
        public virtual CheckHintStep13ExpectedValues CheckHintStep13ExpectedValues
        {
            get
            {
                if ((this.mCheckHintStep13ExpectedValues == null))
                {
                    this.mCheckHintStep13ExpectedValues = new CheckHintStep13ExpectedValues();
                }
                return this.mCheckHintStep13ExpectedValues;
            }
        }
        
        public virtual CheckInfoStep26ExpectedValues CheckInfoStep26ExpectedValues
        {
            get
            {
                if ((this.mCheckInfoStep26ExpectedValues == null))
                {
                    this.mCheckInfoStep26ExpectedValues = new CheckInfoStep26ExpectedValues();
                }
                return this.mCheckInfoStep26ExpectedValues;
            }
        }
        
        public virtual CheckNoRoleAddedStep12ExpectedValues CheckNoRoleAddedStep12ExpectedValues
        {
            get
            {
                if ((this.mCheckNoRoleAddedStep12ExpectedValues == null))
                {
                    this.mCheckNoRoleAddedStep12ExpectedValues = new CheckNoRoleAddedStep12ExpectedValues();
                }
                return this.mCheckNoRoleAddedStep12ExpectedValues;
            }
        }
        
        public virtual CheckNoRoleAddedStep15ExpectedValues CheckNoRoleAddedStep15ExpectedValues
        {
            get
            {
                if ((this.mCheckNoRoleAddedStep15ExpectedValues == null))
                {
                    this.mCheckNoRoleAddedStep15ExpectedValues = new CheckNoRoleAddedStep15ExpectedValues();
                }
                return this.mCheckNoRoleAddedStep15ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep14ExpectedValues CheckRoleAssignedStep14ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep14ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep14ExpectedValues = new CheckRoleAssignedStep14ExpectedValues();
                }
                return this.mCheckRoleAssignedStep14ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep16ExpectedValues CheckRoleAssignedStep16ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep16ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep16ExpectedValues = new CheckRoleAssignedStep16ExpectedValues();
                }
                return this.mCheckRoleAssignedStep16ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep19ExpectedValues CheckRoleAssignedStep19ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep19ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep19ExpectedValues = new CheckRoleAssignedStep19ExpectedValues();
                }
                return this.mCheckRoleAssignedStep19ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep20ExpectedValues CheckRoleAssignedStep20ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep20ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep20ExpectedValues = new CheckRoleAssignedStep20ExpectedValues();
                }
                return this.mCheckRoleAssignedStep20ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep22ExpectedValues CheckRoleAssignedStep22ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep22ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep22ExpectedValues = new CheckRoleAssignedStep22ExpectedValues();
                }
                return this.mCheckRoleAssignedStep22ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep25ExpectedValues CheckRoleAssignedStep25ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep25ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep25ExpectedValues = new CheckRoleAssignedStep25ExpectedValues();
                }
                return this.mCheckRoleAssignedStep25ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep30ExpectedValues CheckRoleAssignedStep30ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep30ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep30ExpectedValues = new CheckRoleAssignedStep30ExpectedValues();
                }
                return this.mCheckRoleAssignedStep30ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep31ExpectedValues CheckRoleAssignedStep31ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep31ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep31ExpectedValues = new CheckRoleAssignedStep31ExpectedValues();
                }
                return this.mCheckRoleAssignedStep31ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep35ExpectedValues CheckRoleAssignedStep35ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep35ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep35ExpectedValues = new CheckRoleAssignedStep35ExpectedValues();
                }
                return this.mCheckRoleAssignedStep35ExpectedValues;
            }
        }
        
        public virtual CheckRoleAssignedStep36ExpectedValues CheckRoleAssignedStep36ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAssignedStep36ExpectedValues == null))
                {
                    this.mCheckRoleAssignedStep36ExpectedValues = new CheckRoleAssignedStep36ExpectedValues();
                }
                return this.mCheckRoleAssignedStep36ExpectedValues;
            }
        }
        
        public virtual CheckRoleAvailableStep36ExpectedValues CheckRoleAvailableStep36ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleAvailableStep36ExpectedValues == null))
                {
                    this.mCheckRoleAvailableStep36ExpectedValues = new CheckRoleAvailableStep36ExpectedValues();
                }
                return this.mCheckRoleAvailableStep36ExpectedValues;
            }
        }
        
        public virtual CheckRoleCompStep13ExpectedValues CheckRoleCompStep13ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleCompStep13ExpectedValues == null))
                {
                    this.mCheckRoleCompStep13ExpectedValues = new CheckRoleCompStep13ExpectedValues();
                }
                return this.mCheckRoleCompStep13ExpectedValues;
            }
        }
        
        public virtual CheckRoleDeltTil4610IsInListStep4ExpectedValues CheckRoleDeltTil4610IsInListStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleDeltTil4610IsInListStep4ExpectedValues == null))
                {
                    this.mCheckRoleDeltTil4610IsInListStep4ExpectedValues = new CheckRoleDeltTil4610IsInListStep4ExpectedValues();
                }
                return this.mCheckRoleDeltTil4610IsInListStep4ExpectedValues;
            }
        }
        
        public virtual CheckRoleDetailsStep28ExpectedValues CheckRoleDetailsStep28ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleDetailsStep28ExpectedValues == null))
                {
                    this.mCheckRoleDetailsStep28ExpectedValues = new CheckRoleDetailsStep28ExpectedValues();
                }
                return this.mCheckRoleDetailsStep28ExpectedValues;
            }
        }
        
        public virtual CheckRoleErrorsInDetailsWinStep37ExpectedValues CheckRoleErrorsInDetailsWinStep37ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleErrorsInDetailsWinStep37ExpectedValues == null))
                {
                    this.mCheckRoleErrorsInDetailsWinStep37ExpectedValues = new CheckRoleErrorsInDetailsWinStep37ExpectedValues();
                }
                return this.mCheckRoleErrorsInDetailsWinStep37ExpectedValues;
            }
        }
        
        public virtual CheckRolePatternAssignedStep43ExpectedValues CheckRolePatternAssignedStep43ExpectedValues
        {
            get
            {
                if ((this.mCheckRolePatternAssignedStep43ExpectedValues == null))
                {
                    this.mCheckRolePatternAssignedStep43ExpectedValues = new CheckRolePatternAssignedStep43ExpectedValues();
                }
                return this.mCheckRolePatternAssignedStep43ExpectedValues;
            }
        }
        
        public virtual CheckRolePatternAssignedStep44ExpectedValues CheckRolePatternAssignedStep44ExpectedValues
        {
            get
            {
                if ((this.mCheckRolePatternAssignedStep44ExpectedValues == null))
                {
                    this.mCheckRolePatternAssignedStep44ExpectedValues = new CheckRolePatternAssignedStep44ExpectedValues();
                }
                return this.mCheckRolePatternAssignedStep44ExpectedValues;
            }
        }
        
        public virtual CheckRolesInListStep11ExpectedValues CheckRolesInListStep11ExpectedValues
        {
            get
            {
                if ((this.mCheckRolesInListStep11ExpectedValues == null))
                {
                    this.mCheckRolesInListStep11ExpectedValues = new CheckRolesInListStep11ExpectedValues();
                }
                return this.mCheckRolesInListStep11ExpectedValues;
            }
        }
        
        public virtual CheckRolesInListStep3ExpectedValues CheckRolesInListStep3ExpectedValues
        {
            get
            {
                if ((this.mCheckRolesInListStep3ExpectedValues == null))
                {
                    this.mCheckRolesInListStep3ExpectedValues = new CheckRolesInListStep3ExpectedValues();
                }
                return this.mCheckRolesInListStep3ExpectedValues;
            }
        }
        
        public virtual CheckSumStep19ExpectedValues CheckSumStep19ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep19ExpectedValues == null))
                {
                    this.mCheckSumStep19ExpectedValues = new CheckSumStep19ExpectedValues();
                }
                return this.mCheckSumStep19ExpectedValues;
            }
        }
        
        public virtual CheckSumStep31ExpectedValues CheckSumStep31ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep31ExpectedValues == null))
                {
                    this.mCheckSumStep31ExpectedValues = new CheckSumStep31ExpectedValues();
                }
                return this.mCheckSumStep31ExpectedValues;
            }
        }
        
        public virtual CheckWarnigsStep20ExpectedValues CheckWarnigsStep20ExpectedValues
        {
            get
            {
                if ((this.mCheckWarnigsStep20ExpectedValues == null))
                {
                    this.mCheckWarnigsStep20ExpectedValues = new CheckWarnigsStep20ExpectedValues();
                }
                return this.mCheckWarnigsStep20ExpectedValues;
            }
        }
        
        public virtual CheckWarnigsStep21ExpectedValues CheckWarnigsStep21ExpectedValues
        {
            get
            {
                if ((this.mCheckWarnigsStep21ExpectedValues == null))
                {
                    this.mCheckWarnigsStep21ExpectedValues = new CheckWarnigsStep21ExpectedValues();
                }
                return this.mCheckWarnigsStep21ExpectedValues;
            }
        }
        
        public virtual CheckWarningsStep26_1ExpectedValues CheckWarningsStep26_1ExpectedValues
        {
            get
            {
                if ((this.mCheckWarningsStep26_1ExpectedValues == null))
                {
                    this.mCheckWarningsStep26_1ExpectedValues = new CheckWarningsStep26_1ExpectedValues();
                }
                return this.mCheckWarningsStep26_1ExpectedValues;
            }
        }
        
        public virtual CheckWarningsStep26_2ExpectedValues CheckWarningsStep26_2ExpectedValues
        {
            get
            {
                if ((this.mCheckWarningsStep26_2ExpectedValues == null))
                {
                    this.mCheckWarningsStep26_2ExpectedValues = new CheckWarningsStep26_2ExpectedValues();
                }
                return this.mCheckWarningsStep26_2ExpectedValues;
            }
        }
        
        public virtual CheckWarningsStep32ExpectedValues CheckWarningsStep32ExpectedValues
        {
            get
            {
                if ((this.mCheckWarningsStep32ExpectedValues == null))
                {
                    this.mCheckWarningsStep32ExpectedValues = new CheckWarningsStep32ExpectedValues();
                }
                return this.mCheckWarningsStep32ExpectedValues;
            }
        }
        
        public virtual ChecRoleAndDepDataStep17ExpectedValues ChecRoleAndDepDataStep17ExpectedValues
        {
            get
            {
                if ((this.mChecRoleAndDepDataStep17ExpectedValues == null))
                {
                    this.mChecRoleAndDepDataStep17ExpectedValues = new ChecRoleAndDepDataStep17ExpectedValues();
                }
                return this.mChecRoleAndDepDataStep17ExpectedValues;
            }
        }
        
        public virtual ChecRoleAssignmentsNotDeletedStep18ExpectedValues ChecRoleAssignmentsNotDeletedStep18ExpectedValues
        {
            get
            {
                if ((this.mChecRoleAssignmentsNotDeletedStep18ExpectedValues == null))
                {
                    this.mChecRoleAssignmentsNotDeletedStep18ExpectedValues = new ChecRoleAssignmentsNotDeletedStep18ExpectedValues();
                }
                return this.mChecRoleAssignmentsNotDeletedStep18ExpectedValues;
            }
        }
        
        public virtual ChecRoleDataInListStep10ExpectedValues ChecRoleDataInListStep10ExpectedValues
        {
            get
            {
                if ((this.mChecRoleDataInListStep10ExpectedValues == null))
                {
                    this.mChecRoleDataInListStep10ExpectedValues = new ChecRoleDataInListStep10ExpectedValues();
                }
                return this.mChecRoleDataInListStep10ExpectedValues;
            }
        }
        
        public virtual ChecRoleDataInListStep7ExpectedValues ChecRoleDataInListStep7ExpectedValues
        {
            get
            {
                if ((this.mChecRoleDataInListStep7ExpectedValues == null))
                {
                    this.mChecRoleDataInListStep7ExpectedValues = new ChecRoleDataInListStep7ExpectedValues();
                }
                return this.mChecRoleDataInListStep7ExpectedValues;
            }
        }
        
        public virtual ChecRoleDataInListStep8ExpectedValues ChecRoleDataInListStep8ExpectedValues
        {
            get
            {
                if ((this.mChecRoleDataInListStep8ExpectedValues == null))
                {
                    this.mChecRoleDataInListStep8ExpectedValues = new ChecRoleDataInListStep8ExpectedValues();
                }
                return this.mChecRoleDataInListStep8ExpectedValues;
            }
        }
        
        public virtual ChecRoleDataInListStep9ExpectedValues ChecRoleDataInListStep9ExpectedValues
        {
            get
            {
                if ((this.mChecRoleDataInListStep9ExpectedValues == null))
                {
                    this.mChecRoleDataInListStep9ExpectedValues = new ChecRoleDataInListStep9ExpectedValues();
                }
                return this.mChecRoleDataInListStep9ExpectedValues;
            }
        }
        
        public virtual SelectFilterRolesStep40Params SelectFilterRolesStep40Params
        {
            get
            {
                if ((this.mSelectFilterRolesStep40Params == null))
                {
                    this.mSelectFilterRolesStep40Params = new SelectFilterRolesStep40Params();
                }
                return this.mSelectFilterRolesStep40Params;
            }
        }
        
        public virtual SetFilterNameTESTStep40Params SetFilterNameTESTStep40Params
        {
            get
            {
                if ((this.mSetFilterNameTESTStep40Params == null))
                {
                    this.mSetFilterNameTESTStep40Params = new SetFilterNameTESTStep40Params();
                }
                return this.mSetFilterNameTESTStep40Params;
            }
        }
        
        public virtual TryAssignRoleDragFromDispStep37Params TryAssignRoleDragFromDispStep37Params
        {
            get
            {
                if ((this.mTryAssignRoleDragFromDispStep37Params == null))
                {
                    this.mTryAssignRoleDragFromDispStep37Params = new TryAssignRoleDragFromDispStep37Params();
                }
                return this.mTryAssignRoleDragFromDispStep37Params;
            }
        }
        
        public virtual TryToDeleteRoleAssignmentsStep18Params TryToDeleteRoleAssignmentsStep18Params
        {
            get
            {
                if ((this.mTryToDeleteRoleAssignmentsStep18Params == null))
                {
                    this.mTryToDeleteRoleAssignmentsStep18Params = new TryToDeleteRoleAssignmentsStep18Params();
                }
                return this.mTryToDeleteRoleAssignmentsStep18Params;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIVelgoppgaverWindow UIVelgoppgaverWindow
        {
            get
            {
                if ((this.mUIVelgoppgaverWindow == null))
                {
                    this.mUIVelgoppgaverWindow = new UIVelgoppgaverWindow();
                }
                return this.mUIVelgoppgaverWindow;
            }
        }
        
        public UIOppgavedelingWindow UIOppgavedelingWindow
        {
            get
            {
                if ((this.mUIOppgavedelingWindow == null))
                {
                    this.mUIOppgavedelingWindow = new UIOppgavedelingWindow();
                }
                return this.mUIOppgavedelingWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIOppgavetildelingWindow UIOppgavetildelingWindow
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow == null))
                {
                    this.mUIOppgavetildelingWindow = new UIOppgavetildelingWindow();
                }
                return this.mUIOppgavetildelingWindow;
            }
        }
        
        public UIOppgavetildelingWindow1 UIOppgavetildelingWindow1
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow1 == null))
                {
                    this.mUIOppgavetildelingWindow1 = new UIOppgavetildelingWindow1();
                }
                return this.mUIOppgavetildelingWindow1;
            }
        }
        
        public UIOppgavetildelingWindow2 UIOppgavetildelingWindow2
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow2 == null))
                {
                    this.mUIOppgavetildelingWindow2 = new UIOppgavetildelingWindow2();
                }
                return this.mUIOppgavetildelingWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5();
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIItemWindow6 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow6();
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UIDefinisjonavfilterfoWindow UIDefinisjonavfilterfoWindow
        {
            get
            {
                if ((this.mUIDefinisjonavfilterfoWindow == null))
                {
                    this.mUIDefinisjonavfilterfoWindow = new UIDefinisjonavfilterfoWindow();
                }
                return this.mUIDefinisjonavfilterfoWindow;
            }
        }
        
        public UIOppgavemønsterWindow UIOppgavemønsterWindow
        {
            get
            {
                if ((this.mUIOppgavemønsterWindow == null))
                {
                    this.mUIOppgavemønsterWindow = new UIOppgavemønsterWindow();
                }
                return this.mUIOppgavemønsterWindow;
            }
        }
        
        public UIOppgavemønsterWindow1 UIOppgavemønsterWindow1
        {
            get
            {
                if ((this.mUIOppgavemønsterWindow1 == null))
                {
                    this.mUIOppgavemønsterWindow1 = new UIOppgavemønsterWindow1();
                }
                return this.mUIOppgavemønsterWindow1;
            }
        }
        
        public UITildeloppgavemønsterWindow UITildeloppgavemønsterWindow
        {
            get
            {
                if ((this.mUITildeloppgavemønsterWindow == null))
                {
                    this.mUITildeloppgavemønsterWindow = new UITildeloppgavemønsterWindow();
                }
                return this.mUITildeloppgavemønsterWindow;
            }
        }
        
        public UIOppgavevaktbokvisninWindow UIOppgavevaktbokvisninWindow
        {
            get
            {
                if ((this.mUIOppgavevaktbokvisninWindow == null))
                {
                    this.mUIOppgavevaktbokvisninWindow = new UIOppgavevaktbokvisninWindow();
                }
                return this.mUIOppgavevaktbokvisninWindow;
            }
        }
        #endregion
        
        #region Fields
        private ActivateFilterInShiftBookRoleViewParams mActivateFilterInShiftBookRoleViewParams;
        
        private CheckAssignedRoleDeletedStep27ExpectedValues mCheckAssignedRoleDeletedStep27ExpectedValues;
        
        private CheckAvailableRolesStep28ExpectedValues mCheckAvailableRolesStep28ExpectedValues;
        
        private CheckAvailableRolesStep29ExpectedValues mCheckAvailableRolesStep29ExpectedValues;
        
        private CheckAvailableRolesStep37ExpectedValues mCheckAvailableRolesStep37ExpectedValues;
        
        private CheckDepWindowOpenExpectedValues mCheckDepWindowOpenExpectedValues;
        
        private CheckDisabledButtonsExpectedValues mCheckDisabledButtonsExpectedValues;
        
        private CheckErrorMessagesStep2ExpectedValues mCheckErrorMessagesStep2ExpectedValues;
        
        private CheckFilterActiveStep41ExpectedValues mCheckFilterActiveStep41ExpectedValues;
        
        private CheckFilteredRolesEmpViewStep40ExpectedValues mCheckFilteredRolesEmpViewStep40ExpectedValues;
        
        private CheckFilteredRolesStep40ExpectedValues mCheckFilteredRolesStep40ExpectedValues;
        
        private CheckHintStep13ExpectedValues mCheckHintStep13ExpectedValues;
        
        private CheckInfoStep26ExpectedValues mCheckInfoStep26ExpectedValues;
        
        private CheckNoRoleAddedStep12ExpectedValues mCheckNoRoleAddedStep12ExpectedValues;
        
        private CheckNoRoleAddedStep15ExpectedValues mCheckNoRoleAddedStep15ExpectedValues;
        
        private CheckRoleAssignedStep14ExpectedValues mCheckRoleAssignedStep14ExpectedValues;
        
        private CheckRoleAssignedStep16ExpectedValues mCheckRoleAssignedStep16ExpectedValues;
        
        private CheckRoleAssignedStep19ExpectedValues mCheckRoleAssignedStep19ExpectedValues;
        
        private CheckRoleAssignedStep20ExpectedValues mCheckRoleAssignedStep20ExpectedValues;
        
        private CheckRoleAssignedStep22ExpectedValues mCheckRoleAssignedStep22ExpectedValues;
        
        private CheckRoleAssignedStep25ExpectedValues mCheckRoleAssignedStep25ExpectedValues;
        
        private CheckRoleAssignedStep30ExpectedValues mCheckRoleAssignedStep30ExpectedValues;
        
        private CheckRoleAssignedStep31ExpectedValues mCheckRoleAssignedStep31ExpectedValues;
        
        private CheckRoleAssignedStep35ExpectedValues mCheckRoleAssignedStep35ExpectedValues;
        
        private CheckRoleAssignedStep36ExpectedValues mCheckRoleAssignedStep36ExpectedValues;
        
        private CheckRoleAvailableStep36ExpectedValues mCheckRoleAvailableStep36ExpectedValues;
        
        private CheckRoleCompStep13ExpectedValues mCheckRoleCompStep13ExpectedValues;
        
        private CheckRoleDeltTil4610IsInListStep4ExpectedValues mCheckRoleDeltTil4610IsInListStep4ExpectedValues;
        
        private CheckRoleDetailsStep28ExpectedValues mCheckRoleDetailsStep28ExpectedValues;
        
        private CheckRoleErrorsInDetailsWinStep37ExpectedValues mCheckRoleErrorsInDetailsWinStep37ExpectedValues;
        
        private CheckRolePatternAssignedStep43ExpectedValues mCheckRolePatternAssignedStep43ExpectedValues;
        
        private CheckRolePatternAssignedStep44ExpectedValues mCheckRolePatternAssignedStep44ExpectedValues;
        
        private CheckRolesInListStep11ExpectedValues mCheckRolesInListStep11ExpectedValues;
        
        private CheckRolesInListStep3ExpectedValues mCheckRolesInListStep3ExpectedValues;
        
        private CheckSumStep19ExpectedValues mCheckSumStep19ExpectedValues;
        
        private CheckSumStep31ExpectedValues mCheckSumStep31ExpectedValues;
        
        private CheckWarnigsStep20ExpectedValues mCheckWarnigsStep20ExpectedValues;
        
        private CheckWarnigsStep21ExpectedValues mCheckWarnigsStep21ExpectedValues;
        
        private CheckWarningsStep26_1ExpectedValues mCheckWarningsStep26_1ExpectedValues;
        
        private CheckWarningsStep26_2ExpectedValues mCheckWarningsStep26_2ExpectedValues;
        
        private CheckWarningsStep32ExpectedValues mCheckWarningsStep32ExpectedValues;
        
        private ChecRoleAndDepDataStep17ExpectedValues mChecRoleAndDepDataStep17ExpectedValues;
        
        private ChecRoleAssignmentsNotDeletedStep18ExpectedValues mChecRoleAssignmentsNotDeletedStep18ExpectedValues;
        
        private ChecRoleDataInListStep10ExpectedValues mChecRoleDataInListStep10ExpectedValues;
        
        private ChecRoleDataInListStep7ExpectedValues mChecRoleDataInListStep7ExpectedValues;
        
        private ChecRoleDataInListStep8ExpectedValues mChecRoleDataInListStep8ExpectedValues;
        
        private ChecRoleDataInListStep9ExpectedValues mChecRoleDataInListStep9ExpectedValues;
        
        private SelectFilterRolesStep40Params mSelectFilterRolesStep40Params;
        
        private SetFilterNameTESTStep40Params mSetFilterNameTESTStep40Params;
        
        private TryAssignRoleDragFromDispStep37Params mTryAssignRoleDragFromDispStep37Params;
        
        private TryToDeleteRoleAssignmentsStep18Params mTryToDeleteRoleAssignmentsStep18Params;
        
        private UIGatWindow mUIGatWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIVelgoppgaverWindow mUIVelgoppgaverWindow;
        
        private UIOppgavedelingWindow mUIOppgavedelingWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIOppgavetildelingWindow mUIOppgavetildelingWindow;
        
        private UIOppgavetildelingWindow1 mUIOppgavetildelingWindow1;
        
        private UIOppgavetildelingWindow2 mUIOppgavetildelingWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UIItemWindow6 mUIItemWindow6;
        
        private UIDefinisjonavfilterfoWindow mUIDefinisjonavfilterfoWindow;
        
        private UIOppgavemønsterWindow mUIOppgavemønsterWindow;
        
        private UIOppgavemønsterWindow1 mUIOppgavemønsterWindow1;
        
        private UITildeloppgavemønsterWindow mUITildeloppgavemønsterWindow;
        
        private UIOppgavevaktbokvisninWindow mUIOppgavevaktbokvisninWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ActivateFilterInShiftBookRoleView'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ActivateFilterInShiftBookRoleViewParams
    {
        
        #region Fields
        /// <summary>
        /// Select '0' in 'cbSavedViews' combo box
        /// </summary>
        public int UICbSavedViewsComboBoxSelectedIndex = 0;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAssignedRoleDeletedStep27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAssignedRoleDeletedStep27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Appointment' cell equals 'False'
        /// </summary>
        public bool UIAppointmentCell2Exists = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAvailableRolesStep28'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAvailableRolesStep28ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)'
        /// </summary>
        public string UIDelttil4610EksklkaniCellText = "Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4" +
            "620)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'ORT Ekskl - Eksklusiv oppgave - kan ikke' cell equals 'ORT Ekskl - Eksklusiv oppgave - kan ikke'
        /// </summary>
        public string UIORTEksklEksklusivoppCellText = "ORT Ekskl - Eksklusiv oppgave - kan ikke";
        
        /// <summary>
        /// Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave' cell equals 'OVER 4600 - Overliggende oppgave'
        /// </summary>
        public string UIOVER4600OverliggendeCellText = "OVER 4600 - Overliggende oppgave";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAvailableRolesStep29'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAvailableRolesStep29ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)'
        /// </summary>
        public string UIDelttil4610EksklkaniCellText = "Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4" +
            "620)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'ORT Ekskl - Eksklusiv oppgave - kan ikke' cell equals 'Delt til 4610/4810 Maks antall Sperre - Maks antall 2 (4710)'
        /// </summary>
        public string UIORTEksklEksklusivoppCellText = "Delt til 4610/4810 Maks antall Sperre - Maks antall 2 (4710)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave' cell equals 'ORT Ekskl - Eksklusiv oppgave - kan ikke'
        /// </summary>
        public string UIOVER4600OverliggendeCellText = "ORT Ekskl - Eksklusiv oppgave - kan ikke";
        
        /// <summary>
        /// Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave' cell equals 'OVER 4600 - Overliggende oppgave'
        /// </summary>
        public string UIOVER4600OverliggendeCell1Text = "OVER 4600 - Overliggende oppgave";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAvailableRolesStep37'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAvailableRolesStep37ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave (4600)' MenuBaseButtonItem equals 'OVER 4600 - Overliggende oppgave (4600)'
        /// </summary>
        public string UIOVER4600OverliggendeMenuBaseButtonItemText = "OVER 4600 - Overliggende oppgave (4600)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' MenuBaseButtonItem equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)'
        /// </summary>
        public string UIDelttil4610EksklkaniMenuBaseButtonItemText = "Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4" +
            "620)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'KIR kontering - Kontering (4620)' MenuBaseButtonItem equals 'KIR kontering - Kontering (4620)'
        /// </summary>
        public string UIKIRkonteringKonterinMenuBaseButtonItemText = "KIR kontering - Kontering (4620)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDepWindowOpen'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckDepWindowOpenExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '4610' cell equals '4610'
        /// </summary>
        public string UIItem4610CellText = "4610";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ortopedi' cell equals 'Ortopedi'
        /// </summary>
        public string UIOrtopediCellText = "Ortopedi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDisabledButtons'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckDisabledButtonsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'gridControlRole' table equals 'gridControlRole'
        /// </summary>
        public string UIGridControlRoleTableName = "gridControlRole";
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'Endre' RibbonBaseButtonItem equals 'False'
        /// </summary>
        public bool UIEndreRibbonBaseButtonItemEnabled = false;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'Slett' RibbonBaseButtonItem equals 'False'
        /// </summary>
        public bool UISlettRibbonBaseButtonItemEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckErrorMessagesStep2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckErrorMessagesStep2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler oppgave'
        /// </summary>
        public string UIStatusMessageItemLabelText = "Mangler oppgave";
        
        /// <summary>
        /// Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler fra dato'
        /// </summary>
        public string UIStatusMessageItemLabel1Text = "Mangler fra dato";
        
        /// <summary>
        /// Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler avdeling'
        /// </summary>
        public string UIStatusMessageItemLabel2Text = "Mangler avdeling";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFilterActiveStep41'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckFilterActiveStep41ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'PeriodRowHeaderControl' client equals 'topPanelXtraScrollableControl[0]PeriodRowHeaderControl[0]'
        /// </summary>
        public string UIPeriodRowHeaderContrClientName = "topPanelXtraScrollableControl[0]PeriodRowHeaderControl[0]";
        
        /// <summary>
        /// Verify that the 'Name' property of 'PeriodRowHeaderControl' client equals 'topPanelXtraScrollableControl[0]PeriodRowHeaderControl[1]'
        /// </summary>
        public string UIPeriodRowHeaderContrClient1Name = "topPanelXtraScrollableControl[0]PeriodRowHeaderControl[1]";
        
        /// <summary>
        /// Verify that the 'Name' property of 'PeriodRowHeaderControl' client equals 'topPanelXtraScrollableControl[0]PeriodRowHeaderControl[2]'
        /// </summary>
        public string UIPeriodRowHeaderContrClient2Name = "topPanelXtraScrollableControl[0]PeriodRowHeaderControl[2]";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFilteredRolesEmpViewStep40'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckFilteredRolesEmpViewStep40ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'KIR kontering' cell equals 'KIR kontering'
        /// </summary>
        public string UIKIRkonteringCellText = "KIR kontering";
        
        /// <summary>
        /// Verify that the 'Text' property of 'OVER 4600' cell equals 'OVER 4600'
        /// </summary>
        public string UIOVER4600CellText = "OVER 4600";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4620 LES' cell equals 'Delt til 4620 LES'
        /// </summary>
        public string UIDelttil4620LESCell1Text = "Delt til 4620 LES";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFilteredRolesStep40'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckFilteredRolesStep40ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'KIR kontering (08:00 - 16:00)' cell equals 'KIR kontering (08:00 - 16:00)'
        /// </summary>
        public string UIKIRkontering08001600CellText = "KIR kontering (08:00 - 16:00)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'OVER 4600 (10:00 - 14:00)' cell equals 'OVER 4600 (10:00 - 14:00)'
        /// </summary>
        public string UIOVER460010001400CellText = "OVER 4600 (10:00 - 14:00)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4620 LES (08:00 - 16:00)' cell equals 'Delt til 4620 LES (08:00 - 16:00)'
        /// </summary>
        public string UIDelttil4620LES080016Cell1Text = "Delt til 4620 LES (08:00 - 16:00)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckHintStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckHintStep13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Ansatt mangler følgende ønsket kompetanse for å de...' tooltip equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG. '
        /// </summary>
        public string UIAnsattmanglerfølgendToolTipName = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompe" +
            "tanse bør: SPESLEG. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckInfoStep26'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckInfoStep26ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'labelControl2' label equals 'Utføres på avdeling:'
        /// </summary>
        public string UILabelControl2LabelText = "Utføres på avdeling:";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblExecutingDepartment' label equals '4620 - Kirurgi'
        /// </summary>
        public string UILblExecutingDepartmeLabelText = "4620 - Kirurgi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckNoRoleAddedStep12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckNoRoleAddedStep12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'EmptyIPeriodScheduleListBox' client equals 'EmptyIPeriodScheduleListBox'
        /// </summary>
        public string UIEmptyIPeriodScheduleClientFriendlyName = "EmptyIPeriodScheduleListBox";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckNoRoleAddedStep15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckNoRoleAddedStep15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'EmptyIPeriodScheduleListBox' client equals 'EmptyIPeriodScheduleListBox'
        /// </summary>
        public string UIEmptyIPeriodScheduleClient1FriendlyName = "EmptyIPeriodScheduleListBox";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep14ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Dahle, Kristin - 0800-1200' list item equals 'Dahle, Kristin - 0800-1200'
        /// </summary>
        public string UIDahleKristin08001200ListItemText = "Dahle, Kristin - 0800-1200";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Eide, Sam - 0800-1600' list item equals 'Eide, Sam - 0800-1600'
        /// </summary>
        public string UIEideSam08001600ListItemText = "Eide, Sam - 0800-1600";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D1 (08:00 - 16:00)' cell equals '( )D1 (08:00 - 16:00)
        ///( )Delt til 4620 Kun tirsdag (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID108001600CellText = "( )D1 (08:00 - 16:00)\r\n( )Delt til 4620 Kun tirsdag (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep20'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep20ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D - Dahle, Kristin (08:00 - 12:00)
        ///( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D1 - Knutsen, Laura (08:00 - 12:00)' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D - Dahle, Kristin (08:00 - 12:00)
        ///( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D1 - Knutsen, Laura (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIWarningAnsattmanglerCellText = @"( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D - Dahle, Kristin (08:00 - 12:00)
( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)D1 - Knutsen, Laura (08:00 - 12:00)
";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Knutsen, Laura - 1200-1800' list item equals 'Knutsen, Laura - 1200-1800'
        /// </summary>
        public string UIKnutsenLaura12001800ListItemText = "Knutsen, Laura - 1200-1800";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep25'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep25ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Appointment' cell contains '8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject , Time Ledig, 1 of 1'
        /// </summary>
        public string UIAppointmentCellName = "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject , Time Ledig, 1 of 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep30'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep30ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Bakke, Stein - 0800-1600' list item equals 'Bakke, Stein - 0800-1600'
        /// </summary>
        public string UIBakkeStein08001600ListItemText = "Bakke, Stein - 0800-1600";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep31'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep31ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610/4810 Maks antall Sperre (08:00 - 16:00)' cell equals 'Delt til 4610/4810 Maks antall Sperre (08:00 - 16:00)'
        /// </summary>
        public string UIDelttil46104810MaksaCellText = "Delt til 4610/4810 Maks antall Sperre (08:00 - 16:00)";
        
        /// <summary>
        /// Verify that the 'Text' property of '4710 - Kardiologi' cell equals '4710 - Kardiologi'
        /// </summary>
        public string UIItem4710KardiologiCellText = "4710 - Kardiologi";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgave er dekket av annen avdeling (4610))D - Bakke, Stein (08:00 - 16:00)
        ///( )GV1 - Ellingsen, Rolf (08:00 - 16:00)' cell equals '( )(Information:Oppgave er dekket av annen avdeling (4610))D - Bakke, Stein (08:00 - 16:00)
        ///( )GV1 - Ellingsen, Rolf (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaveerCellText = "( )(Information:Oppgave er dekket av annen avdeling (4610))D - Bakke, Stein (08:0" +
            "0 - 16:00)\r\n( )GV1 - Ellingsen, Rolf (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep35'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep35ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ellingsen, Rolf - 0800-1600' list item equals 'Ellingsen, Rolf - 0800-1600'
        /// </summary>
        public string UIEllingsenRolf0800160ListItemText = "Ellingsen, Rolf - 0800-1600";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAssignedStep36'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAssignedStep36ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'SelectedItemsAsString' property of 'PeriodScheduleListBoxControl`1' list box equals 'Ellingsen, Rolf - 0800-1600'
        /// </summary>
        public string UIPeriodScheduleListBoList9SelectedItemsAsString = "Ellingsen, Rolf - 0800-1600";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleAvailableStep36'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleAvailableStep36ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4620 LES (08:00 - 16:00)' cell equals 'Delt til 4620 LES (08:00 - 16:00)'
        /// </summary>
        public string UIDelttil4620LES080016CellText = "Delt til 4620 LES (08:00 - 16:00)";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Oppgave er dekket av annen avdeling (4810))GV1 - Ellingsen, Rolf (08:00 - 16:00)' cell equals '( )(Information:Oppgave er dekket av annen avdeling (4810))GV1 - Ellingsen, Rolf (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationOppgaveerCell2Text = "( )(Information:Oppgave er dekket av annen avdeling (4810))GV1 - Ellingsen, Rolf " +
            "(08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleCompStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleCompStep13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'SPESLEG - Spesialistlege' cell equals 'SPESLEG - Spesialistlege'
        /// </summary>
        public string UISPESLEGSpesialistlegCellText = "SPESLEG - Spesialistlege";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleDeltTil4610IsInListStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleDeltTil4610IsInListStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver'
        /// </summary>
        public string UIDelttil4610EksklkaniCellText = "Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Kirurgi' cell equals 'Kirurgi'
        /// </summary>
        public string UIKirurgiCellText = "Kirurgi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleDetailsStep28'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleDetailsStep28ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Appointment' cell contains '8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject Delt til 4610 Ekskl kan ikke*, Time Ledig, 2 of 2'
        /// </summary>
        public string UIAppointmentCellName = "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject Delt til 4610 Ekskl kan " +
            "ikke*, Time Ledig, 2 of 2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleErrorsInDetailsWinStep37'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleErrorsInDetailsWinStep37ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Mangler oppgavedeling i perioden for å kunne tilde...' tooltip equals 'Mangler oppgavedeling i perioden for å kunne tildele oppgave. '
        /// </summary>
        public string UIMangleroppgavedelingToolTipName = "Mangler oppgavedeling i perioden for å kunne tildele oppgave. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolePatternAssignedStep43'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolePatternAssignedStep43ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke' cell equals 'Delt til 4610 Ekskl kan ikke'
        /// </summary>
        public string UIDelttil4610EksklkaniCellText = "Delt til 4610 Ekskl kan ikke";
        
        /// <summary>
        /// Verify that the 'Text' property of 'OVER 4600' cell equals 'OVER 4600'
        /// </summary>
        public string UIOVER4600CellText = "OVER 4600";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4620 Kompetanse bør' cell equals 'Delt til 4620 Kompetanse bør'
        /// </summary>
        public string UIDelttil4620KompetansCellText = "Delt til 4620 Kompetanse bør";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG' cell equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG'
        /// </summary>
        public string UIAnsattmanglerfølgendCellText = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompe" +
            "tanse bør: SPESLEG";
        
        /// <summary>
        /// Verify that the 'Text' property of 'mandag' cell equals 'mandag'
        /// </summary>
        public string UIMandagCellText = "mandag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'tirsdag' cell equals 'tirsdag'
        /// </summary>
        public string UITirsdagCellText = "tirsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'onsdag' cell equals 'onsdag'
        /// </summary>
        public string UIOnsdagCellText = "onsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Ignorerte (0)'
        /// </summary>
        public string UIXtraTabControlHeaderTabPageText = "Ignorerte (0)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolePatternAssignedStep44'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolePatternAssignedStep44ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Dahle, Kristin' cell equals 'Dahle, Kristin'
        /// </summary>
        public string UIDahleKristinCellText = "Dahle, Kristin";
        
        /// <summary>
        /// Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
        /// </summary>
        public string UIItem4620KirurgiCellText = "4620 - Kirurgi";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )Delt til 4610 Ekskl kan ikke (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )Delt til 4610 Ekskl kan ikke (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600Delttil4610CellText = "( )D (08:00 - 16:00)\r\n( )Delt til 4610 Ekskl kan ikke (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )OVER 4600 (10:00 - 14:00)' cell equals '( )D (08:00 - 16:00)
        ///( )OVER 4600 (10:00 - 14:00)
        ///'
        /// </summary>
        public string UID08001600OVER4600100CellText = "( )D (08:00 - 16:00)\r\n( )OVER 4600 (10:00 - 14:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
        ///( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)
        ///'
        /// </summary>
        public string UID08001600WarningAnsaCellText = "( )D (08:00 - 16:00)\r\n( )(Warning:Ansatt mangler følgende ønsket kompetanse for å" +
            " dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bø" +
            "r (08:00 - 12:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolesInListStep11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolesInListStep11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'OVER 4600 - Overliggende oppgave (4600)' MenuBaseButtonItem equals 'OVER 4600 - Overliggende oppgave (4600)'
        /// </summary>
        public string UIOVER4600OverliggendeMenuBaseButtonItemText = "OVER 4600 - Overliggende oppgave (4600)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)' MenuBaseButtonItem equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4620)'
        /// </summary>
        public string UIDelttil4610EksklkaniMenuBaseButtonItemText = "Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver (4" +
            "620)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'KIR kontering - Kontering (4620)' MenuBaseButtonItem equals 'KIR kontering - Kontering (4620)'
        /// </summary>
        public string UIKIRkonteringKonterinMenuBaseButtonItemText = "KIR kontering - Kontering (4620)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolesInListStep3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolesInListStep3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver'
        /// </summary>
        public string UIDelttil4610EksklkaniCellText = "Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver";
        
        /// <summary>
        /// Verify that the 'Text' property of 'KIR kontering - Kontering' cell equals 'KIR kontering - Kontering'
        /// </summary>
        public string UIKIRkonteringKonterinCellText = "KIR kontering - Kontering";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '16,0 / 16,0' cell equals '16,0 / 16,0'
        /// </summary>
        public string UIItem160160CellText = "16,0 / 16,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep31'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep31ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '15,5 / 16,0' cell equals '15,5 / 16,0'
        /// </summary>
        public string UIItem155160CellText = "15,5 / 16,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWarnigsStep20'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckWarnigsStep20ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt til 4620 Kompetanse bør'
        /// </summary>
        public string UILblContentLabelText = "Delt til 4620 Kompetanse bør";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG'
        /// </summary>
        public string UILblContentLabelText1 = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompe" +
            "tanse bør: SPESLEG";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals 'Knutsen, Laura'
        /// </summary>
        public string UILblNameLabelText = "Knutsen, Laura";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblEmployment' label equals 'L - Lege'
        /// </summary>
        public string UILblEmploymentLabelText = "L - Lege";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWarnigsStep21'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckWarnigsStep21ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Oppgave OVER 4700 faller utenfor vaktens tidsrom (...' tooltip equals 'Oppgave OVER 4700 faller utenfor vaktens tidsrom (08:00 - 16:00). '
        /// </summary>
        public string UIOppgaveOVER4700falleToolTipName = "Oppgave OVER 4700 faller utenfor vaktens tidsrom (08:00 - 16:00). ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWarningsStep26_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckWarningsStep26_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Kun denne oppgaven, ikke flere samtidig!.' tooltip equals 'Kun denne oppgaven, ikke flere samtidig!. '
        /// </summary>
        public string UIKundenneoppgavenikkeToolTipName = "Kun denne oppgaven, ikke flere samtidig!. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWarningsStep26_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckWarningsStep26_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Oppgave ORT Ekskl er eksklusiv men overlapper med ...' tooltip equals 'Oppgave ORT Ekskl er eksklusiv men overlapper med allerede tildelt oppgave Delt til 4610 Ekskl kan ikke. '
        /// </summary>
        public string UIOppgaveORTEksklereksToolTipName = "Oppgave ORT Ekskl er eksklusiv men overlapper med allerede tildelt oppgave Delt t" +
            "il 4610 Ekskl kan ikke. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWarningsStep32'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckWarningsStep32ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Oppgave Delt til 4610/4810 Maks antall Sperre kan ...' tooltip equals 'Oppgave Delt til 4610/4810 Maks antall Sperre kan ikke ha mer enn 2 samtidige tildelinger.. '
        /// </summary>
        public string UIOppgaveDelttil461048ToolTipName = "Oppgave Delt til 4610/4810 Maks antall Sperre kan ikke ha mer enn 2 samtidige til" +
            "delinger.. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecRoleAndDepDataStep17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecRoleAndDepDataStep17ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt til 4620 Kun tirsdag'
        /// </summary>
        public string UILblContentLabelText = "Delt til 4620 Kun tirsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblOther' label equals '08:00 - 16:00'
        /// </summary>
        public string UILblOtherLabelText = "08:00 - 16:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Avdeling'
        /// </summary>
        public string UILblContentLabelText1 = "Avdeling";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblOther' label equals '4710 - Kardiologi'
        /// </summary>
        public string UILblOtherLabelText1 = "4710 - Kardiologi";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals 'Eide, Sam'
        /// </summary>
        public string UILblNameLabelText = "Eide, Sam";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblEmployment' label equals 'L - Lege'
        /// </summary>
        public string UILblEmploymentLabelText = "L - Lege";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblDepartment' label equals '4620 - Kirurgi'
        /// </summary>
        public string UILblDepartmentLabelText = "4620 - Kirurgi";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Dahle, Kristin' cell equals 'Dahle, Kristin'
        /// </summary>
        public string UIDahleKristinCellText = "Dahle, Kristin";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Eide, Sam' cell equals 'Eide, Sam'
        /// </summary>
        public string UIEideSamCellText = "Eide, Sam";
        
        /// <summary>
        /// Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
        /// </summary>
        public string UIItem4620KirurgiCellText = "4620 - Kirurgi";
        
        /// <summary>
        /// Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
        /// </summary>
        public string UIItem4620KirurgiCell1Text = "4620 - Kirurgi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecRoleAssignmentsNotDeletedStep18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecRoleAssignmentsNotDeletedStep18ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Slett' RibbonBaseButtonItem equals 'False'
        /// </summary>
        public bool UISlettRibbonBaseButtonItemEnabled = false;
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
        ///(x)(Information:Oppgave er dekket av annen avdeling (4620))Delt til 4620 Kun tirsdag (08:00 - 16:00)' cell equals '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
        ///(x)(Information:Oppgave er dekket av annen avdeling (4620))Delt til 4620 Kun tirsdag (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIInformationVaktkodetCellText = "( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)\r\n(x)" +
            "(Information:Oppgave er dekket av annen avdeling (4620))Delt til 4620 Kun tirsda" +
            "g (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
        ///(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)' cell equals '( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)
        ///(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)
        ///'
        /// </summary>
        public string UIInformationVaktkodetCell1Text = "( )(Information:Vaktkode tilhører en annen avdeling (4620))D (08:00 - 16:00)\r\n(x)" +
            "(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til " +
            "4620 Kompetanse bør: SPESLEG)Delt til 4620 Kompetanse bør (08:00 - 12:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecRoleDataInListStep10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecRoleDataInListStep10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver' cell equals 'Delt til 4620 LES - Kun delt for å kunne se'
        /// </summary>
        public string UIDelttil4610EksklkaniCellText = "Delt til 4620 LES - Kun delt for å kunne se";
        
        /// <summary>
        /// Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4810 - Geriatri'
        /// </summary>
        public string UIItem4620KirurgiCellText = "4810 - Geriatri";
        
        /// <summary>
        /// Verify that the 'Text' property of '4610 - Ortopedi' cell equals '4620 - Kirurgi'
        /// </summary>
        public string UIItem4610OrtopediCellText = "4620 - Kirurgi";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Tildel' cell equals 'Les'
        /// </summary>
        public string UITildelCellText = "Les";
        
        /// <summary>
        /// Verify that the 'Text' property of '01.01.2024' cell equals '01.01.2024'
        /// </summary>
        public string UIItem01012024CellText = "01.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '31.12.2099' cell equals '31.12.2099'
        /// </summary>
        public string UIItem31122099CellText = "31.12.2099";
        
        /// <summary>
        /// Verify that the 'Text' property of 'kommentar step 7' cell equals 'kommentar step 10'
        /// </summary>
        public string UIKommentarstep7CellText = "kommentar step 10";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecRoleDataInListStep7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecRoleDataInListStep7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver' cell equals 'Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver'
        /// </summary>
        public string UIDelttil4610EksklkaniCellText = "Delt til 4610 Ekskl kan ikke - Ekskl kan ikke brukes sammen med andre oppgaver";
        
        /// <summary>
        /// Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
        /// </summary>
        public string UIItem4620KirurgiCellText = "4620 - Kirurgi";
        
        /// <summary>
        /// Verify that the 'Text' property of '4610 - Ortopedi' cell equals '4610 - Ortopedi'
        /// </summary>
        public string UIItem4610OrtopediCellText = "4610 - Ortopedi";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Tildel' cell equals 'Tildel'
        /// </summary>
        public string UITildelCellText = "Tildel";
        
        /// <summary>
        /// Verify that the 'Text' property of '01.01.2024' cell equals '01.01.2024'
        /// </summary>
        public string UIItem01012024CellText = "01.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '31.12.2099' cell equals '31.12.2099'
        /// </summary>
        public string UIItem31122099CellText = "31.12.2099";
        
        /// <summary>
        /// Verify that the 'Text' property of 'kommentar step 7' cell equals 'kommentar step 7'
        /// </summary>
        public string UIKommentarstep7CellText = "kommentar step 7";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecRoleDataInListStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecRoleDataInListStep8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt med 4720/4810 - Tirsdag' cell equals 'Delt til 4620 Kompetanse bør - Kompetanse bør'
        /// </summary>
        public string UIDeltmed47204810TirsdCellText = "Delt til 4620 Kompetanse bør - Kompetanse bør";
        
        /// <summary>
        /// Verify that the 'Text' property of '4710 - Kardiologi' cell equals '4710 - Kardiologi'
        /// </summary>
        public string UIItem4710KardiologiCellText = "4710 - Kardiologi";
        
        /// <summary>
        /// Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
        /// </summary>
        public string UIItem4620KirurgiCell1Text = "4620 - Kirurgi";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Tildel' cell equals 'Tildel'
        /// </summary>
        public string UITildelCell1Text = "Tildel";
        
        /// <summary>
        /// Verify that the 'Text' property of '03.01.2024' cell equals '03.01.2024'
        /// </summary>
        public string UIItem03012024CellText = "03.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '10.01.2024' cell equals '10.01.2024'
        /// </summary>
        public string UIItem10012024CellText = "10.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of 'kommentar step 8' cell equals 'kommentar step 8'
        /// </summary>
        public string UIKommentarstep8CellText = "kommentar step 8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecRoleDataInListStep9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecRoleDataInListStep9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Delt med 4720/4810 - Tirsdag' cell equals 'Delt til 4620 Kun tirsdag - Bare Tirsdag'
        /// </summary>
        public string UIDeltmed47204810TirsdCell1Text = "Delt til 4620 Kun tirsdag - Bare Tirsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of '4710 - Kardiologi' cell equals '4710 - Kardiologi'
        /// </summary>
        public string UIItem4710KardiologiCell1Text = "4710 - Kardiologi";
        
        /// <summary>
        /// Verify that the 'Text' property of '4620 - Kirurgi' cell equals '4620 - Kirurgi'
        /// </summary>
        public string UIItem4620KirurgiCell2Text = "4620 - Kirurgi";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Tildel' cell equals 'Tildel'
        /// </summary>
        public string UITildelCell2Text = "Tildel";
        
        /// <summary>
        /// Verify that the 'Text' property of '01.01.2024' cell equals '01.01.2024'
        /// </summary>
        public string UIItem01012024Cell1Text = "01.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '31.12.2099' cell equals '31.12.2099'
        /// </summary>
        public string UIItem31122099Cell1Text = "31.12.2099";
        
        /// <summary>
        /// Verify that the 'Text' property of 'kommentar step 9' cell equals 'kommentar step 9'
        /// </summary>
        public string UIKommentarstep9CellText = "kommentar step 9";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectFilterRolesStep40'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectFilterRolesStep40Params
    {
        
        #region Fields
        /// <summary>
        /// Type '3 4 5' in 'clbRow' CheckedListBox
        /// </summary>
        public string UIClbRowCheckedListBoxCheckedIndicesAsString = "3 4 5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetFilterNameTESTStep40'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SetFilterNameTESTStep40Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'TEST' in 'txtFilterName' text box
        /// </summary>
        public string UITxtFilterNameEditValueAsString = "TEST";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TryAssignRoleDragFromDispStep37'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class TryAssignRoleDragFromDispStep37Params
    {
        
        #region Fields
        /// <summary>
        /// Select '0' in 'PeriodScheduleListBoxControl`1' list box
        /// </summary>
        public string UIPeriodScheduleListBoList3SelectedIndicesAsString = "0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TryToDeleteRoleAssignmentsStep18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class TryToDeleteRoleAssignmentsStep18Params
    {
        
        #region Fields
        /// <summary>
        /// Type '{Delete}' in 'gcDragDropGrid' table
        /// </summary>
        public string UIGcDragDropGridTableSendKeys = "{Delete}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRoleSharingViewCustom UIRoleSharingViewCustom
        {
            get
            {
                if ((this.mUIRoleSharingViewCustom == null))
                {
                    this.mUIRoleSharingViewCustom = new UIRoleSharingViewCustom(this);
                }
                return this.mUIRoleSharingViewCustom;
            }
        }
        
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        
        public UICenterPanelPeriodDockPanel UICenterPanelPeriodDockPanel
        {
            get
            {
                if ((this.mUICenterPanelPeriodDockPanel == null))
                {
                    this.mUICenterPanelPeriodDockPanel = new UICenterPanelPeriodDockPanel(this);
                }
                return this.mUICenterPanelPeriodDockPanel;
            }
        }
        
        public UILeftPanelDockPanel UILeftPanelDockPanel
        {
            get
            {
                if ((this.mUILeftPanelDockPanel == null))
                {
                    this.mUILeftPanelDockPanel = new UILeftPanelDockPanel(this);
                }
                return this.mUILeftPanelDockPanel;
            }
        }
        
        public UICenterPanelRoleSchedDockPanel UICenterPanelRoleSchedDockPanel
        {
            get
            {
                if ((this.mUICenterPanelRoleSchedDockPanel == null))
                {
                    this.mUICenterPanelRoleSchedDockPanel = new UICenterPanelRoleSchedDockPanel(this);
                }
                return this.mUICenterPanelRoleSchedDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleSharingViewCustom mUIRoleSharingViewCustom;
        
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        
        private UICenterPanelPeriodDockPanel mUICenterPanelPeriodDockPanel;
        
        private UILeftPanelDockPanel mUILeftPanelDockPanel;
        
        private UICenterPanelRoleSchedDockPanel mUICenterPanelRoleSchedDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleSharingViewCustom : DXTestControl
    {
        
        public UIRoleSharingViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleSharingView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleSharingView";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        
        public UIRibbonControlRoleShaRibbon UIRibbonControlRoleShaRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRoleShaRibbon == null))
                {
                    this.mUIRibbonControlRoleShaRibbon = new UIRibbonControlRoleShaRibbon(this);
                }
                return this.mUIRibbonControlRoleShaRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client mUIPanelControl1Client;
        
        private UIRibbonControlRoleShaRibbon mUIRibbonControlRoleShaRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client : DXTestControl
    {
        
        public UIPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGridControlRoleTable UIGridControlRoleTable
        {
            get
            {
                if ((this.mUIGridControlRoleTable == null))
                {
                    this.mUIGridControlRoleTable = new UIGridControlRoleTable(this);
                }
                return this.mUIGridControlRoleTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlRoleTable mUIGridControlRoleTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlRoleTable : DXGrid
    {
        
        public UIGridControlRoleTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRole";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIDelttil4610EksklkaniCell
        {
            get
            {
                if ((this.mUIDelttil4610EksklkaniCell == null))
                {
                    this.mUIDelttil4610EksklkaniCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]0[Column]gColRoles";
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4610EksklkaniCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDelttil4610EksklkaniCell;
            }
        }
        
        public DXCell UIItem4620KirurgiCell
        {
            get
            {
                if ((this.mUIItem4620KirurgiCell == null))
                {
                    this.mUIItem4620KirurgiCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4620KirurgiCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]0[Column]gColDepartmentFrom";
                    this.mUIItem4620KirurgiCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4620KirurgiCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem4620KirurgiCell;
            }
        }
        
        public DXCell UIItem4610OrtopediCell
        {
            get
            {
                if ((this.mUIItem4610OrtopediCell == null))
                {
                    this.mUIItem4610OrtopediCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4610OrtopediCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]0[Column]colDepartmentTo";
                    this.mUIItem4610OrtopediCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4610OrtopediCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem4610OrtopediCell;
            }
        }
        
        public DXCell UITildelCell
        {
            get
            {
                if ((this.mUITildelCell == null))
                {
                    this.mUITildelCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITildelCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]0[Column]gColAccessRight";
                    this.mUITildelCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITildelCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITildelCell;
            }
        }
        
        public DXCell UIItem01012024Cell
        {
            get
            {
                if ((this.mUIItem01012024Cell == null))
                {
                    this.mUIItem01012024Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem01012024Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]0[Column]gColFromDate";
                    this.mUIItem01012024Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem01012024Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem01012024Cell;
            }
        }
        
        public DXCell UIItem31122099Cell
        {
            get
            {
                if ((this.mUIItem31122099Cell == null))
                {
                    this.mUIItem31122099Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem31122099Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]0[Column]gColToDate";
                    this.mUIItem31122099Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem31122099Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem31122099Cell;
            }
        }
        
        public DXCell UIKommentarstep7Cell
        {
            get
            {
                if ((this.mUIKommentarstep7Cell == null))
                {
                    this.mUIKommentarstep7Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKommentarstep7Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]0[Column]gColComment";
                    this.mUIKommentarstep7Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKommentarstep7Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIKommentarstep7Cell;
            }
        }
        
        public DXCell UIDeltmed47204810TirsdCell
        {
            get
            {
                if ((this.mUIDeltmed47204810TirsdCell == null))
                {
                    this.mUIDeltmed47204810TirsdCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDeltmed47204810TirsdCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]2[Column]gColRoles";
                    this.mUIDeltmed47204810TirsdCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDeltmed47204810TirsdCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDeltmed47204810TirsdCell;
            }
        }
        
        public DXCell UIDeltmed47204810TirsdCell1
        {
            get
            {
                if ((this.mUIDeltmed47204810TirsdCell1 == null))
                {
                    this.mUIDeltmed47204810TirsdCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDeltmed47204810TirsdCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]3[Column]gColRoles";
                    this.mUIDeltmed47204810TirsdCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDeltmed47204810TirsdCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDeltmed47204810TirsdCell1;
            }
        }
        
        public DXCell UIDeltfra4640KompetansCell
        {
            get
            {
                if ((this.mUIDeltfra4640KompetansCell == null))
                {
                    this.mUIDeltfra4640KompetansCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDeltfra4640KompetansCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]4[Column]gColRoles";
                    this.mUIDeltfra4640KompetansCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDeltfra4640KompetansCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDeltfra4640KompetansCell;
            }
        }
        
        public DXCell UIDeltfra4720MaksantalCell
        {
            get
            {
                if ((this.mUIDeltfra4720MaksantalCell == null))
                {
                    this.mUIDeltfra4720MaksantalCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDeltfra4720MaksantalCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]5[Column]gColRoles";
                    this.mUIDeltfra4720MaksantalCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDeltfra4720MaksantalCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDeltfra4720MaksantalCell;
            }
        }
        
        public DXCell UIDeltfra4810LESKundelCell
        {
            get
            {
                if ((this.mUIDeltfra4810LESKundelCell == null))
                {
                    this.mUIDeltfra4810LESKundelCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDeltfra4810LESKundelCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]6[Column]gColRoles";
                    this.mUIDeltfra4810LESKundelCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDeltfra4810LESKundelCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDeltfra4810LESKundelCell;
            }
        }
        
        public DXCell UIItem4710KardiologiCell
        {
            get
            {
                if ((this.mUIItem4710KardiologiCell == null))
                {
                    this.mUIItem4710KardiologiCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4710KardiologiCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]2[Column]gColDepartmentFrom";
                    this.mUIItem4710KardiologiCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4710KardiologiCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem4710KardiologiCell;
            }
        }
        
        public DXCell UIItem4620KirurgiCell1
        {
            get
            {
                if ((this.mUIItem4620KirurgiCell1 == null))
                {
                    this.mUIItem4620KirurgiCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4620KirurgiCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]2[Column]colDepartmentTo";
                    this.mUIItem4620KirurgiCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4620KirurgiCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem4620KirurgiCell1;
            }
        }
        
        public DXCell UITildelCell1
        {
            get
            {
                if ((this.mUITildelCell1 == null))
                {
                    this.mUITildelCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUITildelCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]2[Column]gColAccessRight";
                    this.mUITildelCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITildelCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITildelCell1;
            }
        }
        
        public DXCell UIItem03012024Cell
        {
            get
            {
                if ((this.mUIItem03012024Cell == null))
                {
                    this.mUIItem03012024Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem03012024Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]2[Column]gColFromDate";
                    this.mUIItem03012024Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem03012024Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem03012024Cell;
            }
        }
        
        public DXCell UIItem10012024Cell
        {
            get
            {
                if ((this.mUIItem10012024Cell == null))
                {
                    this.mUIItem10012024Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10012024Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]2[Column]gColToDate";
                    this.mUIItem10012024Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10012024Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem10012024Cell;
            }
        }
        
        public DXCell UIKommentarstep8Cell
        {
            get
            {
                if ((this.mUIKommentarstep8Cell == null))
                {
                    this.mUIKommentarstep8Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKommentarstep8Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]2[Column]gColComment";
                    this.mUIKommentarstep8Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKommentarstep8Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIKommentarstep8Cell;
            }
        }
        
        public DXCell UIItem4710KardiologiCell1
        {
            get
            {
                if ((this.mUIItem4710KardiologiCell1 == null))
                {
                    this.mUIItem4710KardiologiCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4710KardiologiCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]3[Column]gColDepartmentFrom";
                    this.mUIItem4710KardiologiCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4710KardiologiCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem4710KardiologiCell1;
            }
        }
        
        public DXCell UIItem4620KirurgiCell2
        {
            get
            {
                if ((this.mUIItem4620KirurgiCell2 == null))
                {
                    this.mUIItem4620KirurgiCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4620KirurgiCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]3[Column]colDepartmentTo";
                    this.mUIItem4620KirurgiCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4620KirurgiCell2.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem4620KirurgiCell2;
            }
        }
        
        public DXCell UITildelCell2
        {
            get
            {
                if ((this.mUITildelCell2 == null))
                {
                    this.mUITildelCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUITildelCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]3[Column]gColAccessRight";
                    this.mUITildelCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITildelCell2.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITildelCell2;
            }
        }
        
        public DXCell UIItem01012024Cell1
        {
            get
            {
                if ((this.mUIItem01012024Cell1 == null))
                {
                    this.mUIItem01012024Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem01012024Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]3[Column]gColFromDate";
                    this.mUIItem01012024Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem01012024Cell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem01012024Cell1;
            }
        }
        
        public DXCell UIItem31122099Cell1
        {
            get
            {
                if ((this.mUIItem31122099Cell1 == null))
                {
                    this.mUIItem31122099Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem31122099Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]3[Column]gColToDate";
                    this.mUIItem31122099Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem31122099Cell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem31122099Cell1;
            }
        }
        
        public DXCell UIKommentarstep9Cell
        {
            get
            {
                if ((this.mUIKommentarstep9Cell == null))
                {
                    this.mUIKommentarstep9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKommentarstep9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridControlRoleGridControlCell[View]gridViewRole[Row]3[Column]gColComment";
                    this.mUIKommentarstep9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKommentarstep9Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIKommentarstep9Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDelttil4610EksklkaniCell;
        
        private DXCell mUIItem4620KirurgiCell;
        
        private DXCell mUIItem4610OrtopediCell;
        
        private DXCell mUITildelCell;
        
        private DXCell mUIItem01012024Cell;
        
        private DXCell mUIItem31122099Cell;
        
        private DXCell mUIKommentarstep7Cell;
        
        private DXCell mUIDeltmed47204810TirsdCell;
        
        private DXCell mUIDeltmed47204810TirsdCell1;
        
        private DXCell mUIDeltfra4640KompetansCell;
        
        private DXCell mUIDeltfra4720MaksantalCell;
        
        private DXCell mUIDeltfra4810LESKundelCell;
        
        private DXCell mUIItem4710KardiologiCell;
        
        private DXCell mUIItem4620KirurgiCell1;
        
        private DXCell mUITildelCell1;
        
        private DXCell mUIItem03012024Cell;
        
        private DXCell mUIItem10012024Cell;
        
        private DXCell mUIKommentarstep8Cell;
        
        private DXCell mUIItem4710KardiologiCell1;
        
        private DXCell mUIItem4620KirurgiCell2;
        
        private DXCell mUITildelCell2;
        
        private DXCell mUIItem01012024Cell1;
        
        private DXCell mUIItem31122099Cell1;
        
        private DXCell mUIKommentarstep9Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControlRoleShaRibbon : DXRibbon
    {
        
        public UIRibbonControlRoleShaRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControlRoleSharing";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageRoleSharinRibbonPage UIRibbonPageRoleSharinRibbonPage
        {
            get
            {
                if ((this.mUIRibbonPageRoleSharinRibbonPage == null))
                {
                    this.mUIRibbonPageRoleSharinRibbonPage = new UIRibbonPageRoleSharinRibbonPage(this);
                }
                return this.mUIRibbonPageRoleSharinRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageRoleSharinRibbonPage mUIRibbonPageRoleSharinRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonPageRoleSharinRibbonPage : DXRibbonPage
    {
        
        public UIRibbonPageRoleSharinRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageRoleSharing";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpgActionsRibbonPageGroup UIRpgActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgActionsRibbonPageGroup == null))
                {
                    this.mUIRpgActionsRibbonPageGroup = new UIRpgActionsRibbonPageGroup(this);
                }
                return this.mUIRpgActionsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgActionsRibbonPageGroup mUIRpgActionsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgActionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIEndreRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEndreRibbonBaseButtonItem == null))
                {
                    this.mUIEndreRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEndreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barButtonItemEdit";
                    this.mUIEndreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEndreRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEndreRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UISlettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISlettRibbonBaseButtonItem == null))
                {
                    this.mUISlettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barButtonItemDelete";
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUISlettRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIEndreRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUISlettRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIDag00167770770FalseDockPanel UIDag00167770770FalseDockPanel
        {
            get
            {
                if ((this.mUIDag00167770770FalseDockPanel == null))
                {
                    this.mUIDag00167770770FalseDockPanel = new UIDag00167770770FalseDockPanel(this);
                }
                return this.mUIDag00167770770FalseDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDag00167770770FalseDockPanel mUIDag00167770770FalseDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDag00167770770FalseDockPanel : DXDockPanel
    {
        
        public UIDag00167770770FalseDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable : DXGrid
    {
        
        public UIGcDayColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIDahleKristinCell
        {
            get
            {
                if ((this.mUIDahleKristinCell == null))
                {
                    this.mUIDahleKristinCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDahleKristinCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIDahleKristinCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDahleKristinCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDahleKristinCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDahleKristinCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelPeriodDockPanel : DXDockPanel
    {
        
        public UICenterPanelPeriodDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom2 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom2 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom2 : DXTestControl
    {
        
        public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriodControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleControCustom UIPeriodScheduleControCustom
        {
            get
            {
                if ((this.mUIPeriodScheduleControCustom == null))
                {
                    this.mUIPeriodScheduleControCustom = new UIPeriodScheduleControCustom(this);
                }
                return this.mUIPeriodScheduleControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleControCustom mUIPeriodScheduleControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleControCustom : DXTestControl
    {
        
        public UIPeriodScheduleControCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PeriodScheduleControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILayoutPanelSplitContainerControl UILayoutPanelSplitContainerControl
        {
            get
            {
                if ((this.mUILayoutPanelSplitContainerControl == null))
                {
                    this.mUILayoutPanelSplitContainerControl = new UILayoutPanelSplitContainerControl(this);
                }
                return this.mUILayoutPanelSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutPanelSplitContainerControl mUILayoutPanelSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutPanelSplitContainerControl : DXSplitContainerControl
    {
        
        public UILayoutPanelSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitLayoutPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITopPanelClient UITopPanelClient
        {
            get
            {
                if ((this.mUITopPanelClient == null))
                {
                    this.mUITopPanelClient = new UITopPanelClient(this);
                }
                return this.mUITopPanelClient;
            }
        }
        
        public UIBottomPanelClient UIBottomPanelClient
        {
            get
            {
                if ((this.mUIBottomPanelClient == null))
                {
                    this.mUIBottomPanelClient = new UIBottomPanelClient(this);
                }
                return this.mUIBottomPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UITopPanelClient mUITopPanelClient;
        
        private UIBottomPanelClient mUIBottomPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITopPanelClient : DXTestControl
    {
        
        public UITopPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomSplitGroupPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIXtraScrollableControScrollableControl UIXtraScrollableControScrollableControl
        {
            get
            {
                if ((this.mUIXtraScrollableControScrollableControl == null))
                {
                    this.mUIXtraScrollableControScrollableControl = new UIXtraScrollableControScrollableControl(this);
                }
                return this.mUIXtraScrollableControScrollableControl;
            }
        }
        
        public UIXtraPanelScrollableControl UIXtraPanelScrollableControl
        {
            get
            {
                if ((this.mUIXtraPanelScrollableControl == null))
                {
                    this.mUIXtraPanelScrollableControl = new UIXtraPanelScrollableControl(this);
                }
                return this.mUIXtraPanelScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraScrollableControScrollableControl mUIXtraScrollableControScrollableControl;
        
        private UIXtraPanelScrollableControl mUIXtraPanelScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtraScrollableControScrollableControl : DXScrollableControl
    {
        
        public UIXtraScrollableControScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleListBoList UIPeriodScheduleListBoList
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList == null))
                {
                    this.mUIPeriodScheduleListBoList = new UIPeriodScheduleListBoList(this);
                }
                return this.mUIPeriodScheduleListBoList;
            }
        }
        
        public DXTestControl UIEmptyIPeriodScheduleClient
        {
            get
            {
                if ((this.mUIEmptyIPeriodScheduleClient == null))
                {
                    this.mUIEmptyIPeriodScheduleClient = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIEmptyIPeriodScheduleClient.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]EmptyIPeriodScheduleListBox[0]";
                    this.mUIEmptyIPeriodScheduleClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmptyIPeriodScheduleListBox";
                    this.mUIEmptyIPeriodScheduleClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEmptyIPeriodScheduleClient;
            }
        }
        
        public DXTestControl UIEmptyIPeriodScheduleClient1
        {
            get
            {
                if ((this.mUIEmptyIPeriodScheduleClient1 == null))
                {
                    this.mUIEmptyIPeriodScheduleClient1 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIEmptyIPeriodScheduleClient1.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]EmptyIPeriodScheduleListBox[2]";
                    this.mUIEmptyIPeriodScheduleClient1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmptyIPeriodScheduleListBox";
                    this.mUIEmptyIPeriodScheduleClient1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEmptyIPeriodScheduleClient1;
            }
        }
        
        public UIPeriodScheduleListBoList1 UIPeriodScheduleListBoList1
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList1 == null))
                {
                    this.mUIPeriodScheduleListBoList1 = new UIPeriodScheduleListBoList1(this);
                }
                return this.mUIPeriodScheduleListBoList1;
            }
        }
        
        public UIPeriodScheduleListBoList2 UIPeriodScheduleListBoList2
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList2 == null))
                {
                    this.mUIPeriodScheduleListBoList2 = new UIPeriodScheduleListBoList2(this);
                }
                return this.mUIPeriodScheduleListBoList2;
            }
        }
        
        public UIPeriodScheduleListBoList3 UIPeriodScheduleListBoList3
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList3 == null))
                {
                    this.mUIPeriodScheduleListBoList3 = new UIPeriodScheduleListBoList3(this);
                }
                return this.mUIPeriodScheduleListBoList3;
            }
        }
        
        public UIPeriodScheduleListBoList4 UIPeriodScheduleListBoList4
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList4 == null))
                {
                    this.mUIPeriodScheduleListBoList4 = new UIPeriodScheduleListBoList4(this);
                }
                return this.mUIPeriodScheduleListBoList4;
            }
        }
        
        public DXListBox UIPeriodScheduleListBoList5
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList5 == null))
                {
                    this.mUIPeriodScheduleListBoList5 = new DXListBox(this);
                    #region Search Criteria
                    this.mUIPeriodScheduleListBoList5.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[15]";
                    this.mUIPeriodScheduleListBoList5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
                    this.mUIPeriodScheduleListBoList5.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodScheduleListBoList5;
            }
        }
        
        public DXListBox UIPeriodScheduleListBoList6
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList6 == null))
                {
                    this.mUIPeriodScheduleListBoList6 = new DXListBox(this);
                    #region Search Criteria
                    this.mUIPeriodScheduleListBoList6.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[9]";
                    this.mUIPeriodScheduleListBoList6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
                    this.mUIPeriodScheduleListBoList6.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodScheduleListBoList6;
            }
        }
        
        public UIPeriodScheduleListBoList7 UIPeriodScheduleListBoList7
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList7 == null))
                {
                    this.mUIPeriodScheduleListBoList7 = new UIPeriodScheduleListBoList7(this);
                }
                return this.mUIPeriodScheduleListBoList7;
            }
        }
        
        public UIPeriodScheduleListBoList8 UIPeriodScheduleListBoList8
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList8 == null))
                {
                    this.mUIPeriodScheduleListBoList8 = new UIPeriodScheduleListBoList8(this);
                }
                return this.mUIPeriodScheduleListBoList8;
            }
        }
        
        public DXListBox UIPeriodScheduleListBoList9
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList9 == null))
                {
                    this.mUIPeriodScheduleListBoList9 = new DXListBox(this);
                    #region Search Criteria
                    this.mUIPeriodScheduleListBoList9.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[27]";
                    this.mUIPeriodScheduleListBoList9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
                    this.mUIPeriodScheduleListBoList9.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodScheduleListBoList9;
            }
        }
        
        public DXListBox UIPeriodScheduleListBoList10
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList10 == null))
                {
                    this.mUIPeriodScheduleListBoList10 = new DXListBox(this);
                    #region Search Criteria
                    this.mUIPeriodScheduleListBoList10.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[28]";
                    this.mUIPeriodScheduleListBoList10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
                    this.mUIPeriodScheduleListBoList10.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodScheduleListBoList10;
            }
        }
        
        public DXTestControl UIPeriodRowHeaderContrClient
        {
            get
            {
                if ((this.mUIPeriodRowHeaderContrClient == null))
                {
                    this.mUIPeriodRowHeaderContrClient = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIPeriodRowHeaderContrClient.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodRowHeaderControl[0]";
                    this.mUIPeriodRowHeaderContrClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodRowHeaderControl";
                    this.mUIPeriodRowHeaderContrClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodRowHeaderContrClient;
            }
        }
        
        public DXTestControl UIPeriodRowHeaderContrClient1
        {
            get
            {
                if ((this.mUIPeriodRowHeaderContrClient1 == null))
                {
                    this.mUIPeriodRowHeaderContrClient1 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIPeriodRowHeaderContrClient1.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodRowHeaderControl[1]";
                    this.mUIPeriodRowHeaderContrClient1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodRowHeaderControl";
                    this.mUIPeriodRowHeaderContrClient1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodRowHeaderContrClient1;
            }
        }
        
        public DXTestControl UIPeriodRowHeaderContrClient2
        {
            get
            {
                if ((this.mUIPeriodRowHeaderContrClient2 == null))
                {
                    this.mUIPeriodRowHeaderContrClient2 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIPeriodRowHeaderContrClient2.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodRowHeaderControl[2]";
                    this.mUIPeriodRowHeaderContrClient2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodRowHeaderControl";
                    this.mUIPeriodRowHeaderContrClient2.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodRowHeaderContrClient2;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleListBoList mUIPeriodScheduleListBoList;
        
        private DXTestControl mUIEmptyIPeriodScheduleClient;
        
        private DXTestControl mUIEmptyIPeriodScheduleClient1;
        
        private UIPeriodScheduleListBoList1 mUIPeriodScheduleListBoList1;
        
        private UIPeriodScheduleListBoList2 mUIPeriodScheduleListBoList2;
        
        private UIPeriodScheduleListBoList3 mUIPeriodScheduleListBoList3;
        
        private UIPeriodScheduleListBoList4 mUIPeriodScheduleListBoList4;
        
        private DXListBox mUIPeriodScheduleListBoList5;
        
        private DXListBox mUIPeriodScheduleListBoList6;
        
        private UIPeriodScheduleListBoList7 mUIPeriodScheduleListBoList7;
        
        private UIPeriodScheduleListBoList8 mUIPeriodScheduleListBoList8;
        
        private DXListBox mUIPeriodScheduleListBoList9;
        
        private DXListBox mUIPeriodScheduleListBoList10;
        
        private DXTestControl mUIPeriodRowHeaderContrClient;
        
        private DXTestControl mUIPeriodRowHeaderContrClient1;
        
        private DXTestControl mUIPeriodRowHeaderContrClient2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList : DXListBox
    {
        
        public UIPeriodScheduleListBoList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[21]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIDahleKristin08001200ListItem
        {
            get
            {
                if ((this.mUIDahleKristin08001200ListItem == null))
                {
                    this.mUIDahleKristin08001200ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIDahleKristin08001200ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[21]Item[0]";
                    this.mUIDahleKristin08001200ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIDahleKristin08001200ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDahleKristin08001200ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIDahleKristin08001200ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList1 : DXListBox
    {
        
        public UIPeriodScheduleListBoList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[26]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIEideSam08001600ListItem
        {
            get
            {
                if ((this.mUIEideSam08001600ListItem == null))
                {
                    this.mUIEideSam08001600ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIEideSam08001600ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[26]Item[0]";
                    this.mUIEideSam08001600ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIEideSam08001600ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEideSam08001600ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIEideSam08001600ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList2 : DXListBox
    {
        
        public UIPeriodScheduleListBoList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[3]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIKnutsenLaura12001800ListItem
        {
            get
            {
                if ((this.mUIKnutsenLaura12001800ListItem == null))
                {
                    this.mUIKnutsenLaura12001800ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIKnutsenLaura12001800ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[3]Item[0]";
                    this.mUIKnutsenLaura12001800ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIKnutsenLaura12001800ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIKnutsenLaura12001800ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIKnutsenLaura12001800ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList3 : DXListBox
    {
        
        public UIPeriodScheduleListBoList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[22]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIBakkeStein08001600ListItem
        {
            get
            {
                if ((this.mUIBakkeStein08001600ListItem == null))
                {
                    this.mUIBakkeStein08001600ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIBakkeStein08001600ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[22]Item[0]";
                    this.mUIBakkeStein08001600ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIBakkeStein08001600ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBakkeStein08001600ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIBakkeStein08001600ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList4 : DXListBox
    {
        
        public UIPeriodScheduleListBoList4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIBakkeStein10001400ListItem
        {
            get
            {
                if ((this.mUIBakkeStein10001400ListItem == null))
                {
                    this.mUIBakkeStein10001400ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIBakkeStein10001400ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[1]Item[0]";
                    this.mUIBakkeStein10001400ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIBakkeStein10001400ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBakkeStein10001400ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIBakkeStein10001400ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList7 : DXListBox
    {
        
        public UIPeriodScheduleListBoList7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIEllingsenRolf0800160ListItem
        {
            get
            {
                if ((this.mUIEllingsenRolf0800160ListItem == null))
                {
                    this.mUIEllingsenRolf0800160ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIEllingsenRolf0800160ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[2]Item[0]";
                    this.mUIEllingsenRolf0800160ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIEllingsenRolf0800160ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEllingsenRolf0800160ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIEllingsenRolf0800160ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList8 : DXListBox
    {
        
        public UIPeriodScheduleListBoList8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[16]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIEllingsenRolf0800160ListItem
        {
            get
            {
                if ((this.mUIEllingsenRolf0800160ListItem == null))
                {
                    this.mUIEllingsenRolf0800160ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIEllingsenRolf0800160ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[16]Item[0]";
                    this.mUIEllingsenRolf0800160ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIEllingsenRolf0800160ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEllingsenRolf0800160ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIEllingsenRolf0800160ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtraPanelScrollableControl : DXScrollableControl
    {
        
        public UIXtraPanelScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSDropDownButtonButton
        {
            get
            {
                if ((this.mUIGSDropDownButtonButton == null))
                {
                    this.mUIGSDropDownButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSDropDownButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraPanel[0]GSDropDownButton[0]";
                    this.mUIGSDropDownButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIGSDropDownButtonButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGSDropDownButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSDropDownButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBottomPanelClient : DXTestControl
    {
        
        public UIBottomPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomSplitGroupPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIXtraScrollableControScrollableControl1 UIXtraScrollableControScrollableControl
        {
            get
            {
                if ((this.mUIXtraScrollableControScrollableControl == null))
                {
                    this.mUIXtraScrollableControScrollableControl = new UIXtraScrollableControScrollableControl1(this);
                }
                return this.mUIXtraScrollableControScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraScrollableControScrollableControl1 mUIXtraScrollableControScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtraScrollableControScrollableControl1 : DXScrollableControl
    {
        
        public UIXtraScrollableControScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleListBoList5 UIPeriodScheduleListBoList
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList == null))
                {
                    this.mUIPeriodScheduleListBoList = new UIPeriodScheduleListBoList5(this);
                }
                return this.mUIPeriodScheduleListBoList;
            }
        }
        
        public UIPeriodScheduleListBoList11 UIPeriodScheduleListBoList1
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList1 == null))
                {
                    this.mUIPeriodScheduleListBoList1 = new UIPeriodScheduleListBoList11(this);
                }
                return this.mUIPeriodScheduleListBoList1;
            }
        }
        
        public UIPeriodScheduleListBoList21 UIPeriodScheduleListBoList2
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList2 == null))
                {
                    this.mUIPeriodScheduleListBoList2 = new UIPeriodScheduleListBoList21(this);
                }
                return this.mUIPeriodScheduleListBoList2;
            }
        }
        
        public UIPeriodScheduleListBoList31 UIPeriodScheduleListBoList3
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList3 == null))
                {
                    this.mUIPeriodScheduleListBoList3 = new UIPeriodScheduleListBoList31(this);
                }
                return this.mUIPeriodScheduleListBoList3;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleListBoList5 mUIPeriodScheduleListBoList;
        
        private UIPeriodScheduleListBoList11 mUIPeriodScheduleListBoList1;
        
        private UIPeriodScheduleListBoList21 mUIPeriodScheduleListBoList2;
        
        private UIPeriodScheduleListBoList31 mUIPeriodScheduleListBoList3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList5 : DXListBox
    {
        
        public UIPeriodScheduleListBoList5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIDDahleKristinListItem
        {
            get
            {
                if ((this.mUIDDahleKristinListItem == null))
                {
                    this.mUIDDahleKristinListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIDDahleKristinListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[0]Item[0]";
                    this.mUIDDahleKristinListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIDDahleKristinListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDDahleKristinListItem;
            }
        }
        
        public DXListBoxItem UIDEideSamListItem
        {
            get
            {
                if ((this.mUIDEideSamListItem == null))
                {
                    this.mUIDEideSamListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIDEideSamListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[0]Item[1]";
                    this.mUIDEideSamListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIDEideSamListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDEideSamListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIDDahleKristinListItem;
        
        private DXListBoxItem mUIDEideSamListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList11 : DXListBox
    {
        
        public UIPeriodScheduleListBoList11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIDDahleKristinListItem
        {
            get
            {
                if ((this.mUIDDahleKristinListItem == null))
                {
                    this.mUIDDahleKristinListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIDDahleKristinListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[2]Item[0]";
                    this.mUIDDahleKristinListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIDDahleKristinListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDDahleKristinListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIDDahleKristinListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList21 : DXListBox
    {
        
        public UIPeriodScheduleListBoList21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIDEideSamListItem
        {
            get
            {
                if ((this.mUIDEideSamListItem == null))
                {
                    this.mUIDEideSamListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIDEideSamListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[1]Item[1]";
                    this.mUIDEideSamListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIDEideSamListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDEideSamListItem;
            }
        }
        
        public DXListBoxItem UID1JensenBeateListItem
        {
            get
            {
                if ((this.mUID1JensenBeateListItem == null))
                {
                    this.mUID1JensenBeateListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUID1JensenBeateListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[1]Item[0]";
                    this.mUID1JensenBeateListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUID1JensenBeateListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUID1JensenBeateListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIDEideSamListItem;
        
        private DXListBoxItem mUID1JensenBeateListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList31 : DXListBox
    {
        
        public UIPeriodScheduleListBoList31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[3]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UID1KnutsenLauraListItem
        {
            get
            {
                if ((this.mUID1KnutsenLauraListItem == null))
                {
                    this.mUID1KnutsenLauraListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUID1KnutsenLauraListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[3]Item[1]";
                    this.mUID1KnutsenLauraListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUID1KnutsenLauraListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUID1KnutsenLauraListItem;
            }
        }
        
        public DXListBoxItem UIDDahleKristinListItem
        {
            get
            {
                if ((this.mUIDDahleKristinListItem == null))
                {
                    this.mUIDDahleKristinListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIDDahleKristinListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bottomPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[3]Item[0]";
                    this.mUIDDahleKristinListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIDDahleKristinListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDDahleKristinListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUID1KnutsenLauraListItem;
        
        private DXListBoxItem mUIDDahleKristinListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeftPanelDockPanel : DXDockPanel
    {
        
        public UILeftPanelDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LeftPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIOppgavetildelingDockPanel UIOppgavetildelingDockPanel
        {
            get
            {
                if ((this.mUIOppgavetildelingDockPanel == null))
                {
                    this.mUIOppgavetildelingDockPanel = new UIOppgavetildelingDockPanel(this);
                }
                return this.mUIOppgavetildelingDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIOppgavetildelingDockPanel mUIOppgavetildelingDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingDockPanel : DXDockPanel
    {
        
        public UIOppgavetildelingDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom3 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom3 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom3 : DXTestControl
    {
        
        public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "OppgavetildelingControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGAvailableRolesTable UIGAvailableRolesTable
        {
            get
            {
                if ((this.mUIGAvailableRolesTable == null))
                {
                    this.mUIGAvailableRolesTable = new UIGAvailableRolesTable(this);
                }
                return this.mUIGAvailableRolesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGAvailableRolesTable mUIGAvailableRolesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGAvailableRolesTable : DXGrid
    {
        
        public UIGAvailableRolesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gAvailableRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIORTEksklEksklusivoppCell
        {
            get
            {
                if ((this.mUIORTEksklEksklusivoppCell == null))
                {
                    this.mUIORTEksklEksklusivoppCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIORTEksklEksklusivoppCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gAvailableRolesGridControlCell[View]gvAvailableRoles[Row]1[Column]gcRoleNameAndDe" +
                        "scription";
                    this.mUIORTEksklEksklusivoppCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIORTEksklEksklusivoppCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIORTEksklEksklusivoppCell;
            }
        }
        
        public DXCell UIDelttil4610EksklkaniCell
        {
            get
            {
                if ((this.mUIDelttil4610EksklkaniCell == null))
                {
                    this.mUIDelttil4610EksklkaniCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gAvailableRolesGridControlCell[View]gvAvailableRoles[Row]0[Column]gcRoleNameAndDe" +
                        "scription";
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4610EksklkaniCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDelttil4610EksklkaniCell;
            }
        }
        
        public DXCell UIOVER4600OverliggendeCell
        {
            get
            {
                if ((this.mUIOVER4600OverliggendeCell == null))
                {
                    this.mUIOVER4600OverliggendeCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVER4600OverliggendeCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gAvailableRolesGridControlCell[View]gvAvailableRoles[Row]2[Column]gcRoleNameAndDe" +
                        "scription";
                    this.mUIOVER4600OverliggendeCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVER4600OverliggendeCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOVER4600OverliggendeCell;
            }
        }
        
        public DXCell UIOVER4600OverliggendeCell1
        {
            get
            {
                if ((this.mUIOVER4600OverliggendeCell1 == null))
                {
                    this.mUIOVER4600OverliggendeCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVER4600OverliggendeCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gAvailableRolesGridControlCell[View]gvAvailableRoles[Row]3[Column]gcRoleNameAndDe" +
                        "scription";
                    this.mUIOVER4600OverliggendeCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVER4600OverliggendeCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOVER4600OverliggendeCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIORTEksklEksklusivoppCell;
        
        private DXCell mUIDelttil4610EksklkaniCell;
        
        private DXCell mUIOVER4600OverliggendeCell;
        
        private DXCell mUIOVER4600OverliggendeCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelRoleSchedDockPanel : DXDockPanel
    {
        
        public UICenterPanelRoleSchedDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelRoleScheduler";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom4 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom4(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom4 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom4 : DXTestControl
    {
        
        public UIControlContainerCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelRoleSchedulerControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRoleSchedulerControlWindow UIRoleSchedulerControlWindow
        {
            get
            {
                if ((this.mUIRoleSchedulerControlWindow == null))
                {
                    this.mUIRoleSchedulerControlWindow = new UIRoleSchedulerControlWindow(this);
                }
                return this.mUIRoleSchedulerControlWindow;
            }
        }
        
        public UISchedulerControlWindow UISchedulerControlWindow
        {
            get
            {
                if ((this.mUISchedulerControlWindow == null))
                {
                    this.mUISchedulerControlWindow = new UISchedulerControlWindow(this);
                }
                return this.mUISchedulerControlWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleSchedulerControlWindow mUIRoleSchedulerControlWindow;
        
        private UISchedulerControlWindow mUISchedulerControlWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleSchedulerControlWindow : WinWindow
    {
        
        public UIRoleSchedulerControlWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "RoleSchedulerControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UISchedulerControlList UISchedulerControlList
        {
            get
            {
                if ((this.mUISchedulerControlList == null))
                {
                    this.mUISchedulerControlList = new UISchedulerControlList(this);
                }
                return this.mUISchedulerControlList;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerControlList mUISchedulerControlList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControlList : WinList
    {
        
        public UISchedulerControlList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "schedulerControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinList UISchedulerControlList1
        {
            get
            {
                if ((this.mUISchedulerControlList1 == null))
                {
                    this.mUISchedulerControlList1 = new WinList(this);
                    #region Search Criteria
                    this.mUISchedulerControlList1.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 0 total events, 12:00 a.m.  mandag, januar 1, 2024 to 12:00 a.m.  tir" +
                        "sdag, januar 2, 2024";
                    this.mUISchedulerControlList1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUISchedulerControlList1;
            }
        }
        
        public WinList UISchedulerControlList11
        {
            get
            {
                if ((this.mUISchedulerControlList11 == null))
                {
                    this.mUISchedulerControlList11 = new WinList(this);
                    #region Search Criteria
                    this.mUISchedulerControlList11.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 1 total events, 12:00 a.m.  mandag, januar 1, 2024 to 12:00 a.m.  tir" +
                        "sdag, januar 2, 2024";
                    this.mUISchedulerControlList11.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUISchedulerControlList11;
            }
        }
        
        public WinList UISchedulerControlList12
        {
            get
            {
                if ((this.mUISchedulerControlList12 == null))
                {
                    this.mUISchedulerControlList12 = new WinList(this);
                    #region Search Criteria
                    this.mUISchedulerControlList12.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 2 total events, 12:00 a.m.  mandag, januar 1, 2024 to 12:00 a.m.  tir" +
                        "sdag, januar 2, 2024";
                    this.mUISchedulerControlList12.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUISchedulerControlList12;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUISchedulerControlList1;
        
        private WinList mUISchedulerControlList11;
        
        private WinList mUISchedulerControlList12;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControlWindow : WinWindow
    {
        
        public UISchedulerControlWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "schedulerControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UISchedulerControlList1 UISchedulerControlList
        {
            get
            {
                if ((this.mUISchedulerControlList == null))
                {
                    this.mUISchedulerControlList = new UISchedulerControlList1(this);
                }
                return this.mUISchedulerControlList;
            }
        }
        
        public UISchedulerControlList11 UISchedulerControlList1
        {
            get
            {
                if ((this.mUISchedulerControlList1 == null))
                {
                    this.mUISchedulerControlList1 = new UISchedulerControlList11(this);
                }
                return this.mUISchedulerControlList1;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerControlList1 mUISchedulerControlList;
        
        private UISchedulerControlList11 mUISchedulerControlList1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControlList1 : WinList
    {
        
        public UISchedulerControlList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 1 total events, 12:00 a.m.  mandag, januar 1, 2024 to 12:00 a.m.  tir" +
                "sdag, januar 2, 2024";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject , Time Ledig, 1 of 1", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject , Time Ledig, 1 of 1", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        
        public WinCell UIAppointmentCell2
        {
            get
            {
                if ((this.mUIAppointmentCell2 == null))
                {
                    this.mUIAppointmentCell2 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell2.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell2.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject , Time Ledig, 1 of 1", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell2.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAppointmentCell2;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        
        private WinCell mUIAppointmentCell1;
        
        private WinCell mUIAppointmentCell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControlList11 : WinList
    {
        
        public UISchedulerControlList11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 2 total events, 12:00 a.m.  mandag, januar 1, 2024 to 12:00 a.m.  tir" +
                "sdag, januar 2, 2024";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject , Time Ledig, 2 of 2", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIStatusMessageFlyoutPCustom UIStatusMessageFlyoutPCustom
        {
            get
            {
                if ((this.mUIStatusMessageFlyoutPCustom == null))
                {
                    this.mUIStatusMessageFlyoutPCustom = new UIStatusMessageFlyoutPCustom(this);
                }
                return this.mUIStatusMessageFlyoutPCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStatusMessageFlyoutPCustom mUIStatusMessageFlyoutPCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStatusMessageFlyoutPCustom : DXTestControl
    {
        
        public UIStatusMessageFlyoutPCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageFlyoutPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageFlyoutPanel";
            #endregion
        }
        
        #region Properties
        public UIStatusMessageListCustom UIStatusMessageListCustom
        {
            get
            {
                if ((this.mUIStatusMessageListCustom == null))
                {
                    this.mUIStatusMessageListCustom = new UIStatusMessageListCustom(this);
                }
                return this.mUIStatusMessageListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStatusMessageListCustom mUIStatusMessageListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStatusMessageListCustom : DXTestControl
    {
        
        public UIStatusMessageListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageList";
            #endregion
        }
        
        #region Properties
        public DXTestControl UIStatusMessageItemLabel
        {
            get
            {
                if ((this.mUIStatusMessageItemLabel == null))
                {
                    this.mUIStatusMessageItemLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIStatusMessageItemLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageListStatusMessageItem[2]";
                    this.mUIStatusMessageItemLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageItem";
                    #endregion
                }
                return this.mUIStatusMessageItemLabel;
            }
        }
        
        public DXTestControl UIStatusMessageItemLabel1
        {
            get
            {
                if ((this.mUIStatusMessageItemLabel1 == null))
                {
                    this.mUIStatusMessageItemLabel1 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIStatusMessageItemLabel1.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageListStatusMessageItem[1]";
                    this.mUIStatusMessageItemLabel1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageItem";
                    #endregion
                }
                return this.mUIStatusMessageItemLabel1;
            }
        }
        
        public DXTestControl UIStatusMessageItemLabel2
        {
            get
            {
                if ((this.mUIStatusMessageItemLabel2 == null))
                {
                    this.mUIStatusMessageItemLabel2 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIStatusMessageItemLabel2.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageListStatusMessageItem[0]";
                    this.mUIStatusMessageItemLabel2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageItem";
                    #endregion
                }
                return this.mUIStatusMessageItemLabel2;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIStatusMessageItemLabel;
        
        private DXTestControl mUIStatusMessageItemLabel1;
        
        private DXTestControl mUIStatusMessageItemLabel2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgoppgaverWindow : DXWindow
    {
        
        public UIVelgoppgaverWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg oppgaver";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIGcRolesTable UIGcRolesTable
        {
            get
            {
                if ((this.mUIGcRolesTable == null))
                {
                    this.mUIGcRolesTable = new UIGcRolesTable(this);
                }
                return this.mUIGcRolesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRolesTable mUIGcRolesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRolesTable : DXGrid
    {
        
        public UIGcRolesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXCell UIDelttil4610EksklkaniCell
        {
            get
            {
                if ((this.mUIDelttil4610EksklkaniCell == null))
                {
                    this.mUIDelttil4610EksklkaniCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]0[Column]colName";
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4610EksklkaniCell.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIDelttil4610EksklkaniCell;
            }
        }
        
        public DXCell UIKIRkonteringKonterinCell
        {
            get
            {
                if ((this.mUIKIRkonteringKonterinCell == null))
                {
                    this.mUIKIRkonteringKonterinCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKIRkonteringKonterinCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]1[Column]colName";
                    this.mUIKIRkonteringKonterinCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKIRkonteringKonterinCell.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIKIRkonteringKonterinCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDelttil4610EksklkaniCell;
        
        private DXCell mUIKIRkonteringKonterinCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavedelingWindow : DXWindow
    {
        
        public UIOppgavedelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavedeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavedeling");
            #endregion
        }
        
        #region Properties
        public UIGroupControl1Client UIGroupControl1Client
        {
            get
            {
                if ((this.mUIGroupControl1Client == null))
                {
                    this.mUIGroupControl1Client = new UIGroupControl1Client(this);
                }
                return this.mUIGroupControl1Client;
            }
        }
        
        public UIGroupControl2Client UIGroupControl2Client
        {
            get
            {
                if ((this.mUIGroupControl2Client == null))
                {
                    this.mUIGroupControl2Client = new UIGroupControl2Client(this);
                }
                return this.mUIGroupControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControl1Client mUIGroupControl1Client;
        
        private UIGroupControl2Client mUIGroupControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControl1Client : DXTestControl
    {
        
        public UIGroupControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavedeling");
            #endregion
        }
        
        #region Properties
        public UIGcRolesTable1 UIGcRolesTable
        {
            get
            {
                if ((this.mUIGcRolesTable == null))
                {
                    this.mUIGcRolesTable = new UIGcRolesTable1(this);
                }
                return this.mUIGcRolesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRolesTable1 mUIGcRolesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRolesTable1 : DXGrid
    {
        
        public UIGcRolesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavedeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIDelttil4610EksklkaniCell
        {
            get
            {
                if ((this.mUIDelttil4610EksklkaniCell == null))
                {
                    this.mUIDelttil4610EksklkaniCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]0[Column]colName";
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4610EksklkaniCell.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIDelttil4610EksklkaniCell;
            }
        }
        
        public DXCell UIKirurgiCell
        {
            get
            {
                if ((this.mUIKirurgiCell == null))
                {
                    this.mUIKirurgiCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKirurgiCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]0[Column]colDepartmentName";
                    this.mUIKirurgiCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKirurgiCell.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIKirurgiCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDelttil4610EksklkaniCell;
        
        private DXCell mUIKirurgiCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControl2Client : DXTestControl
    {
        
        public UIGroupControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavedeling");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentsTable UIGcDepartmentsTable
        {
            get
            {
                if ((this.mUIGcDepartmentsTable == null))
                {
                    this.mUIGcDepartmentsTable = new UIGcDepartmentsTable(this);
                }
                return this.mUIGcDepartmentsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentsTable mUIGcDepartmentsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDepartmentsTable : DXGrid
    {
        
        public UIGcDepartmentsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavedeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem4610Cell
        {
            get
            {
                if ((this.mUIItem4610Cell == null))
                {
                    this.mUIItem4610Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4610Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentsGridControlCell[View]gvDepartments[Row]0[Column]colCode1";
                    this.mUIItem4610Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4610Cell.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIItem4610Cell;
            }
        }
        
        public DXCell UIOrtopediCell
        {
            get
            {
                if ((this.mUIOrtopediCell == null))
                {
                    this.mUIOrtopediCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOrtopediCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentsGridControlCell[View]gvDepartments[Row]0[Column]colName1";
                    this.mUIOrtopediCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOrtopediCell.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIOrtopediCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem4610Cell;
        
        private DXCell mUIOrtopediCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            #endregion
        }
        
        #region Properties
        public UIBekreftSlettingWindow UIBekreftSlettingWindow
        {
            get
            {
                if ((this.mUIBekreftSlettingWindow == null))
                {
                    this.mUIBekreftSlettingWindow = new UIBekreftSlettingWindow(this);
                }
                return this.mUIBekreftSlettingWindow;
            }
        }
        
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UIPopupContainerBarConMenu UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIBekreftSlettingWindow mUIBekreftSlettingWindow;
        
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        
        private UIPopupContainerBarConMenu mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBekreftSlettingWindow : DXWindow
    {
        
        public UIBekreftSlettingWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bekreft Sletting";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NativeMessageBoxForm";
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Bekreft SlettingSimpleButton[0]";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UITildelingavoppgaveMenuItem UITildelingavoppgaveMenuItem
        {
            get
            {
                if ((this.mUITildelingavoppgaveMenuItem == null))
                {
                    this.mUITildelingavoppgaveMenuItem = new UITildelingavoppgaveMenuItem(this);
                }
                return this.mUITildelingavoppgaveMenuItem;
            }
        }
        
        public DXMenuBaseButtonItem UITESTMenuBaseButtonItem
        {
            get
            {
                if ((this.mUITESTMenuBaseButtonItem == null))
                {
                    this.mUITESTMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUITESTMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUITESTMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUITESTMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private UITildelingavoppgaveMenuItem mUITildelingavoppgaveMenuItem;
        
        private DXMenuBaseButtonItem mUITESTMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITildelingavoppgaveMenuItem : DXMenuItem
    {
        
        public UITildelingavoppgaveMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIOVER4600OverliggendeMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIOVER4600OverliggendeMenuBaseButtonItem == null))
                {
                    this.mUIOVER4600OverliggendeMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIOVER4600OverliggendeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIOVER4600OverliggendeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIOVER4600OverliggendeMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIDelttil4610EksklkaniMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIDelttil4610EksklkaniMenuBaseButtonItem == null))
                {
                    this.mUIDelttil4610EksklkaniMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIDelttil4610EksklkaniMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUIDelttil4610EksklkaniMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIDelttil4610EksklkaniMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIKIRkonteringKonterinMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIKIRkonteringKonterinMenuBaseButtonItem == null))
                {
                    this.mUIKIRkonteringKonterinMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIKIRkonteringKonterinMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[2]";
                    this.mUIKIRkonteringKonterinMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIKIRkonteringKonterinMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIOVER4600OverliggendeMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIDelttil4610EksklkaniMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIKIRkonteringKonterinMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupContainerBarConMenu : DXMenu
    {
        
        public UIPopupContainerBarConMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            #endregion
        }
        
        #region Properties
        public UIPccFilterNameClient UIPccFilterNameClient
        {
            get
            {
                if ((this.mUIPccFilterNameClient == null))
                {
                    this.mUIPccFilterNameClient = new UIPccFilterNameClient(this);
                }
                return this.mUIPccFilterNameClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPccFilterNameClient mUIPccFilterNameClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPccFilterNameClient : DXTestControl
    {
        
        public UIPccFilterNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pccFilterName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            #endregion
        }
        
        #region Properties
        public UIPnlFilterNameClient UIPnlFilterNameClient
        {
            get
            {
                if ((this.mUIPnlFilterNameClient == null))
                {
                    this.mUIPnlFilterNameClient = new UIPnlFilterNameClient(this);
                }
                return this.mUIPnlFilterNameClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlFilterNameClient mUIPnlFilterNameClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlFilterNameClient : DXTestControl
    {
        
        public UIPnlFilterNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlFilterName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtFilterNameEdit
        {
            get
            {
                if ((this.mUITxtFilterNameEdit == null))
                {
                    this.mUITxtFilterNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtFilterNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtFilterName";
                    this.mUITxtFilterNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    #endregion
                }
                return this.mUITxtFilterNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtFilterNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompe" +
                "tanse bør: SPESLEG. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIAnsattmanglerfølgendToolTip
        {
            get
            {
                if ((this.mUIAnsattmanglerfølgendToolTip == null))
                {
                    this.mUIAnsattmanglerfølgendToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIAnsattmanglerfølgendToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt til 4620 Kompe" +
                        "tanse bør: SPESLEG. ";
                    #endregion
                }
                return this.mUIAnsattmanglerfølgendToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIAnsattmanglerfølgendToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow : WinWindow
    {
        
        public UIOppgavetildelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISchedulerControl1List UISchedulerControl1List
        {
            get
            {
                if ((this.mUISchedulerControl1List == null))
                {
                    this.mUISchedulerControl1List = new UISchedulerControl1List(this);
                }
                return this.mUISchedulerControl1List;
            }
        }
        
        public UIGcContentClient UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient(this);
                }
                return this.mUIGcContentClient;
            }
        }
        
        public UISchedulerControl1List1 UISchedulerControl1List1
        {
            get
            {
                if ((this.mUISchedulerControl1List1 == null))
                {
                    this.mUISchedulerControl1List1 = new UISchedulerControl1List1(this);
                }
                return this.mUISchedulerControl1List1;
            }
        }
        
        public UISchedulerControl1List2 UISchedulerControl1List2
        {
            get
            {
                if ((this.mUISchedulerControl1List2 == null))
                {
                    this.mUISchedulerControl1List2 = new UISchedulerControl1List2(this);
                }
                return this.mUISchedulerControl1List2;
            }
        }
        
        public UISchedulerControl1List3 UISchedulerControl1List3
        {
            get
            {
                if ((this.mUISchedulerControl1List3 == null))
                {
                    this.mUISchedulerControl1List3 = new UISchedulerControl1List3(this);
                }
                return this.mUISchedulerControl1List3;
            }
        }
        
        public UISchedulerControl1List4 UISchedulerControl1List4
        {
            get
            {
                if ((this.mUISchedulerControl1List4 == null))
                {
                    this.mUISchedulerControl1List4 = new UISchedulerControl1List4(this);
                }
                return this.mUISchedulerControl1List4;
            }
        }
        
        public UISchedulerControl1List5 UISchedulerControl1List5
        {
            get
            {
                if ((this.mUISchedulerControl1List5 == null))
                {
                    this.mUISchedulerControl1List5 = new UISchedulerControl1List5(this);
                }
                return this.mUISchedulerControl1List5;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerControl1List mUISchedulerControl1List;
        
        private UIGcContentClient mUIGcContentClient;
        
        private UISchedulerControl1List1 mUISchedulerControl1List1;
        
        private UISchedulerControl1List2 mUISchedulerControl1List2;
        
        private UISchedulerControl1List3 mUISchedulerControl1List3;
        
        private UISchedulerControl1List4 mUISchedulerControl1List4;
        
        private UISchedulerControl1List5 mUISchedulerControl1List5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List : WinList
    {
        
        public UISchedulerControl1List(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 2 total events, 12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  tor" +
                "sdag, januar 4, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 12:00 p.m.  onsdag, januar 3, 2024, Subject Delt til 4620 Kompetans" +
                                "e bør*, Time Ledig, 2 of 2", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient : DXTestControl
    {
        
        public UIGcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDetailsClient UIGcDetailsClient
        {
            get
            {
                if ((this.mUIGcDetailsClient == null))
                {
                    this.mUIGcDetailsClient = new UIGcDetailsClient(this);
                }
                return this.mUIGcDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDetailsClient mUIGcDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDetailsClient : DXTestControl
    {
        
        public UIGcDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom : DXTestControl
    {
        
        public UIVhDetailsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleDetailsViewCustom UIRoleDetailsViewCustom
        {
            get
            {
                if ((this.mUIRoleDetailsViewCustom == null))
                {
                    this.mUIRoleDetailsViewCustom = new UIRoleDetailsViewCustom(this);
                }
                return this.mUIRoleDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDetailsViewCustom mUIRoleDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleDetailsViewCustom : DXTestControl
    {
        
        public UIRoleDetailsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleDetailsView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client1 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client1(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client1 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client1 : DXTestControl
    {
        
        public UIPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UITabControlViewHost1TabList UITabControlViewHost1TabList
        {
            get
            {
                if ((this.mUITabControlViewHost1TabList == null))
                {
                    this.mUITabControlViewHost1TabList = new UITabControlViewHost1TabList(this);
                }
                return this.mUITabControlViewHost1TabList;
            }
        }
        #endregion
        
        #region Fields
        private UITabControlViewHost1TabList mUITabControlViewHost1TabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlViewHost1TabList : DXTestControl
    {
        
        public UITabControlViewHost1TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewTabPageClient UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        #endregion
        
        #region Fields
        private UIViewTabPageClient mUIViewTabPageClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient : DXTestControl
    {
        
        public UIViewTabPageClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1ViewTabPage[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIHostedCompetenceCompCustom UIHostedCompetenceCompCustom
        {
            get
            {
                if ((this.mUIHostedCompetenceCompCustom == null))
                {
                    this.mUIHostedCompetenceCompCustom = new UIHostedCompetenceCompCustom(this);
                }
                return this.mUIHostedCompetenceCompCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIHostedCompetenceCompCustom mUIHostedCompetenceCompCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHostedCompetenceCompCustom : DXTestControl
    {
        
        public UIHostedCompetenceCompCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "HostedCompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HostedCompetenceComparisonView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhCompetenceCustom UIVhCompetenceCustom
        {
            get
            {
                if ((this.mUIVhCompetenceCustom == null))
                {
                    this.mUIVhCompetenceCustom = new UIVhCompetenceCustom(this);
                }
                return this.mUIVhCompetenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhCompetenceCustom mUIVhCompetenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhCompetenceCustom : DXTestControl
    {
        
        public UIVhCompetenceCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhCompetence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UICompetenceComparisonCustom UICompetenceComparisonCustom
        {
            get
            {
                if ((this.mUICompetenceComparisonCustom == null))
                {
                    this.mUICompetenceComparisonCustom = new UICompetenceComparisonCustom(this);
                }
                return this.mUICompetenceComparisonCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICompetenceComparisonCustom mUICompetenceComparisonCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICompetenceComparisonCustom : DXTestControl
    {
        
        public UICompetenceComparisonCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CompetenceComparisonView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcCompetenceComparisTable UIGcCompetenceComparisTable
        {
            get
            {
                if ((this.mUIGcCompetenceComparisTable == null))
                {
                    this.mUIGcCompetenceComparisTable = new UIGcCompetenceComparisTable(this);
                }
                return this.mUIGcCompetenceComparisTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcCompetenceComparisTable mUIGcCompetenceComparisTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcCompetenceComparisTable : DXGrid
    {
        
        public UIGcCompetenceComparisTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcCompetenceComparison";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UISPESLEGSpesialistlegCell
        {
            get
            {
                if ((this.mUISPESLEGSpesialistlegCell == null))
                {
                    this.mUISPESLEGSpesialistlegCell = new DXCell(this);
                    #region Search Criteria
                    this.mUISPESLEGSpesialistlegCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcCompetenceComparisonGridControlCell[View]gvCompetenceComparison[Row]0[Column]co" +
                        "lCompetenceName";
                    this.mUISPESLEGSpesialistlegCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISPESLEGSpesialistlegCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISPESLEGSpesialistlegCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISPESLEGSpesialistlegCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List1 : WinList
    {
        
        public UISchedulerControl1List1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 2 total events, 12:00 a.m.  torsdag, januar 4, 2024 to 12:00 a.m.  fr" +
                "edag, januar 5, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 6:00 p.m.  torsdag, januar 4, 2024, Subject OVER 4700, Time Ledig," +
                                " 2 of 2", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 4:00 p.m.  torsdag, januar 4, 2024, Subject OVER 4700, Time Ledig," +
                                " 2 of 2", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        
        private WinCell mUIAppointmentCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List2 : WinList
    {
        
        public UISchedulerControl1List2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 3 total events, 12:00 a.m.  mandag, januar 1, 2024 to 12:00 a.m.  tir" +
                "sdag, januar 2, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject Delt til 4610 Ekskl kan " +
                                "ikke*, Time Ledig, 2 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject ORT Ekskl, Time Ledig, 3" +
                                " of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        
        public WinCell UIAppointmentCell2
        {
            get
            {
                if ((this.mUIAppointmentCell2 == null))
                {
                    this.mUIAppointmentCell2 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell2.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell2.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject ORT Ekskl, Time Ledig, 3" +
                                " of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell2;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        
        private WinCell mUIAppointmentCell1;
        
        private WinCell mUIAppointmentCell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List3 : WinList
    {
        
        public UISchedulerControl1List3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 2 total events, 12:00 a.m.  tirsdag, januar 9, 2024 to 12:00 a.m.  on" +
                "sdag, januar 10, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  tirsdag, januar 9, 2024, Subject Delt til 4610/4810 Maks" +
                                " antall Sperre, Time Ledig, 2 of 2", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List4 : WinList
    {
        
        public UISchedulerControl1List4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 2 total events, 12:00 a.m.  mandag, januar 1, 2024 to 12:00 a.m.  tir" +
                "sdag, januar 2, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  mandag, januar 1, 2024, Subject Delt til 4610 Ekskl kan " +
                                "ikke*, Time Ledig, 2 of 2", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List5 : WinList
    {
        
        public UISchedulerControl1List5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Dagvisning, 2 total events, 12:00 a.m.  torsdag, januar 11, 2024 to 12:00 a.m.  f" +
                "redag, januar 12, 2024";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  torsdag, januar 11, 2024, Subject Delt til 4620 LES*, Ti" +
                                "me Ledig, 2 of 2", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow1 : DXWindow
    {
        
        public UIOppgavetildelingWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public UIGcContentClient1 UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient1(this);
                }
                return this.mUIGcContentClient;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom mUIVhContentCustom;
        
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private DXButton mUIAvbrytButton;
        
        private UIGcContentClient1 mUIGcContentClient;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom : DXTestControl
    {
        
        public UIVhContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient3 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient3(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient3 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient3 : DXTestControl
    {
        
        public UIPcViewClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom1 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom1(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIPanelContainer2DockPanel UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        
        public UIDpSummaryDockPanel UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new UIDpSummaryDockPanel(this);
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        
        public UIDpDisponibleDockPanel UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom1 mUIVhContentCustom;
        
        private UIPanelContainer2DockPanel mUIPanelContainer2DockPanel;
        
        private UIDpSummaryDockPanel mUIDpSummaryDockPanel;
        
        private UIDpDisponibleDockPanel mUIDpDisponibleDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom1 : DXTestControl
    {
        
        public UIVhContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient4 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient4(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient4 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient4 : DXTestControl
    {
        
        public UIPcViewClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeFocusedManagCustom UIEmployeeFocusedManagCustom
        {
            get
            {
                if ((this.mUIEmployeeFocusedManagCustom == null))
                {
                    this.mUIEmployeeFocusedManagCustom = new UIEmployeeFocusedManagCustom(this);
                }
                return this.mUIEmployeeFocusedManagCustom;
            }
        }
        
        public UIRoleFocusedManageVieCustom UIRoleFocusedManageVieCustom
        {
            get
            {
                if ((this.mUIRoleFocusedManageVieCustom == null))
                {
                    this.mUIRoleFocusedManageVieCustom = new UIRoleFocusedManageVieCustom(this);
                }
                return this.mUIRoleFocusedManageVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeFocusedManagCustom mUIEmployeeFocusedManagCustom;
        
        private UIRoleFocusedManageVieCustom mUIRoleFocusedManageVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFocusedManagCustom : DXTestControl
    {
        
        public UIEmployeeFocusedManagCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFocusedManageView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIItemGridControl1Custom UIItemGridControl1Custom
        {
            get
            {
                if ((this.mUIItemGridControl1Custom == null))
                {
                    this.mUIItemGridControl1Custom = new UIItemGridControl1Custom(this);
                }
                return this.mUIItemGridControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGridControl1Custom mUIItemGridControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGridControl1Custom : DXTestControl
    {
        
        public UIItemGridControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "itemGridControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom : DXTestControl
    {
        
        public UIDdGridControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable : DXGrid
    {
        
        public UIGcDragDropGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIInformationVaktkodetCell
        {
            get
            {
                if ((this.mUIInformationVaktkodetCell == null))
                {
                    this.mUIInformationVaktkodetCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationVaktkodetCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col02.01.2024";
                    this.mUIInformationVaktkodetCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationVaktkodetCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationVaktkodetCell;
            }
        }
        
        public DXCell UIDahleKristinCell
        {
            get
            {
                if ((this.mUIDahleKristinCell == null))
                {
                    this.mUIDahleKristinCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDahleKristinCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]colEmployeeName";
                    this.mUIDahleKristinCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDahleKristinCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDahleKristinCell;
            }
        }
        
        public DXCell UIEideSamCell
        {
            get
            {
                if ((this.mUIEideSamCell == null))
                {
                    this.mUIEideSamCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIEideSamCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]colEmployeeName";
                    this.mUIEideSamCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIEideSamCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIEideSamCell;
            }
        }
        
        public DXCell UIItem4620KirurgiCell
        {
            get
            {
                if ((this.mUIItem4620KirurgiCell == null))
                {
                    this.mUIItem4620KirurgiCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4620KirurgiCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]colDepartmentName";
                    this.mUIItem4620KirurgiCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4620KirurgiCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4620KirurgiCell;
            }
        }
        
        public DXCell UIItem4620KirurgiCell1
        {
            get
            {
                if ((this.mUIItem4620KirurgiCell1 == null))
                {
                    this.mUIItem4620KirurgiCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4620KirurgiCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]colDepartmentName";
                    this.mUIItem4620KirurgiCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4620KirurgiCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4620KirurgiCell1;
            }
        }
        
        public DXCell UIInformationVaktkodetCell1
        {
            get
            {
                if ((this.mUIInformationVaktkodetCell1 == null))
                {
                    this.mUIInformationVaktkodetCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationVaktkodetCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col03.01.2024";
                    this.mUIInformationVaktkodetCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationVaktkodetCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationVaktkodetCell1;
            }
        }
        
        public DXCell UID108001600Cell
        {
            get
            {
                if ((this.mUID108001600Cell == null))
                {
                    this.mUID108001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID108001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col02.01.2024";
                    this.mUID108001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID108001600Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID108001600Cell;
            }
        }
        
        public DXCell UID08001600Cell
        {
            get
            {
                if ((this.mUID08001600Cell == null))
                {
                    this.mUID08001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col11.01.2024";
                    this.mUID08001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600Cell;
            }
        }
        
        public DXCell UID08001600Cell1
        {
            get
            {
                if ((this.mUID08001600Cell1 == null))
                {
                    this.mUID08001600Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col08.01.2024";
                    this.mUID08001600Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIInformationVaktkodetCell;
        
        private DXCell mUIDahleKristinCell;
        
        private DXCell mUIEideSamCell;
        
        private DXCell mUIItem4620KirurgiCell;
        
        private DXCell mUIItem4620KirurgiCell1;
        
        private DXCell mUIInformationVaktkodetCell1;
        
        private DXCell mUID108001600Cell;
        
        private DXCell mUID08001600Cell;
        
        private DXCell mUID08001600Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleFocusedManageVieCustom : DXTestControl
    {
        
        public UIRoleFocusedManageVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleFocusedManageView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgContentCustom UIIgContentCustom
        {
            get
            {
                if ((this.mUIIgContentCustom == null))
                {
                    this.mUIIgContentCustom = new UIIgContentCustom(this);
                }
                return this.mUIIgContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgContentCustom mUIIgContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgContentCustom : DXTestControl
    {
        
        public UIIgContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom1 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom1(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom1 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom1 : DXTestControl
    {
        
        public UIDdGridControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable1 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable1(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable1 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable1 : DXGrid
    {
        
        public UIGcDragDropGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIInformationOppgaveerCell
        {
            get
            {
                if ((this.mUIInformationOppgaveerCell == null))
                {
                    this.mUIInformationOppgaveerCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaveerCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col09.01.2024";
                    this.mUIInformationOppgaveerCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaveerCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaveerCell;
            }
        }
        
        public DXCell UIInformationOppgaveerCell1
        {
            get
            {
                if ((this.mUIInformationOppgaveerCell1 == null))
                {
                    this.mUIInformationOppgaveerCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaveerCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col09.01.2024";
                    this.mUIInformationOppgaveerCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaveerCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaveerCell1;
            }
        }
        
        public DXCell UIDelttil4620LES080016Cell
        {
            get
            {
                if ((this.mUIDelttil4620LES080016Cell == null))
                {
                    this.mUIDelttil4620LES080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4620LES080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]bgcRoleCode";
                    this.mUIDelttil4620LES080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4620LES080016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDelttil4620LES080016Cell;
            }
        }
        
        public DXCell UIInformationOppgaveerCell2
        {
            get
            {
                if ((this.mUIInformationOppgaveerCell2 == null))
                {
                    this.mUIInformationOppgaveerCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaveerCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]col10.01.2024";
                    this.mUIInformationOppgaveerCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaveerCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaveerCell2;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]col11.01.2024";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIKIRkontering08001600Cell
        {
            get
            {
                if ((this.mUIKIRkontering08001600Cell == null))
                {
                    this.mUIKIRkontering08001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKIRkontering08001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]bgcRoleCode";
                    this.mUIKIRkontering08001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKIRkontering08001600Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIKIRkontering08001600Cell;
            }
        }
        
        public DXCell UIOVER460010001400Cell
        {
            get
            {
                if ((this.mUIOVER460010001400Cell == null))
                {
                    this.mUIOVER460010001400Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVER460010001400Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]bgcRoleCode";
                    this.mUIOVER460010001400Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVER460010001400Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOVER460010001400Cell;
            }
        }
        
        public DXCell UIDelttil4620LES080016Cell1
        {
            get
            {
                if ((this.mUIDelttil4620LES080016Cell1 == null))
                {
                    this.mUIDelttil4620LES080016Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4620LES080016Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]bgcRoleCode";
                    this.mUIDelttil4620LES080016Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4620LES080016Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDelttil4620LES080016Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIInformationOppgaveerCell;
        
        private DXCell mUIInformationOppgaveerCell1;
        
        private DXCell mUIDelttil4620LES080016Cell;
        
        private DXCell mUIInformationOppgaveerCell2;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIKIRkontering08001600Cell;
        
        private DXCell mUIOVER460010001400Cell;
        
        private DXCell mUIDelttil4620LES080016Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer3DockPanel UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        
        public UIPanelContainer1DockPanel UIPanelContainer1DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer1DockPanel == null))
                {
                    this.mUIPanelContainer1DockPanel = new UIPanelContainer1DockPanel(this);
                }
                return this.mUIPanelContainer1DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer3DockPanel mUIPanelContainer3DockPanel;
        
        private UIPanelContainer1DockPanel mUIPanelContainer1DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDSpecificationsDockPanel UIDSpecificationsDockPanel
        {
            get
            {
                if ((this.mUIDSpecificationsDockPanel == null))
                {
                    this.mUIDSpecificationsDockPanel = new UIDSpecificationsDockPanel(this);
                }
                return this.mUIDSpecificationsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDSpecificationsDockPanel mUIDSpecificationsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDSpecificationsDockPanel : DXDockPanel
    {
        
        public UIDSpecificationsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dSpecifications";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer2Custom UIControlContainer2Custom
        {
            get
            {
                if ((this.mUIControlContainer2Custom == null))
                {
                    this.mUIControlContainer2Custom = new UIControlContainer2Custom(this);
                }
                return this.mUIControlContainer2Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer2Custom mUIControlContainer2Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer2Custom : DXTestControl
    {
        
        public UIControlContainer2Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationPanelViCustom UISpecificationPanelViCustom
        {
            get
            {
                if ((this.mUISpecificationPanelViCustom == null))
                {
                    this.mUISpecificationPanelViCustom = new UISpecificationPanelViCustom(this);
                }
                return this.mUISpecificationPanelViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationPanelViCustom mUISpecificationPanelViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationPanelViCustom : DXTestControl
    {
        
        public UISpecificationPanelViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationPanelView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationPanelView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFlowControlViewHost1Custom UIFlowControlViewHost1Custom
        {
            get
            {
                if ((this.mUIFlowControlViewHost1Custom == null))
                {
                    this.mUIFlowControlViewHost1Custom = new UIFlowControlViewHost1Custom(this);
                }
                return this.mUIFlowControlViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowControlViewHost1Custom mUIFlowControlViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFlowControlViewHost1Custom : DXTestControl
    {
        
        public UIFlowControlViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flowControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationSectionCustom UISpecificationSectionCustom
        {
            get
            {
                if ((this.mUISpecificationSectionCustom == null))
                {
                    this.mUISpecificationSectionCustom = new UISpecificationSectionCustom(this);
                }
                return this.mUISpecificationSectionCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationSectionCustom mUISpecificationSectionCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationSectionCustom : DXTestControl
    {
        
        public UISpecificationSectionCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationSectionView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationSectionView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcHeaderClient UIPcHeaderClient
        {
            get
            {
                if ((this.mUIPcHeaderClient == null))
                {
                    this.mUIPcHeaderClient = new UIPcHeaderClient(this);
                }
                return this.mUIPcHeaderClient;
            }
        }
        
        public UIVhDetailsCustom1 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom1(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPcHeaderClient mUIPcHeaderClient;
        
        private UIVhDetailsCustom1 mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcHeaderClient : DXTestControl
    {
        
        public UIPcHeaderClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcHeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        
        public DXTestControl UILblOtherLabel
        {
            get
            {
                if ((this.mUILblOtherLabel == null))
                {
                    this.mUILblOtherLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblOther";
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblOtherLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblOtherLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        
        private DXTestControl mUILblOtherLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom1 : DXTestControl
    {
        
        public UIVhDetailsCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationListVieCustom UISpecificationListVieCustom
        {
            get
            {
                if ((this.mUISpecificationListVieCustom == null))
                {
                    this.mUISpecificationListVieCustom = new UISpecificationListVieCustom(this);
                }
                return this.mUISpecificationListVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationListVieCustom mUISpecificationListVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationListVieCustom : DXTestControl
    {
        
        public UISpecificationListVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFcListCustom UIFcListCustom
        {
            get
            {
                if ((this.mUIFcListCustom == null))
                {
                    this.mUIFcListCustom = new UIFcListCustom(this);
                }
                return this.mUIFcListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFcListCustom mUIFcListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFcListCustom : DXTestControl
    {
        
        public UIFcListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fcList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationItemVieCustom UISpecificationItemVieCustom
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom == null))
                {
                    this.mUISpecificationItemVieCustom = new UISpecificationItemVieCustom(this);
                }
                return this.mUISpecificationItemVieCustom;
            }
        }
        
        public UIEmployeeSpecificatioCustom UIEmployeeSpecificatioCustom
        {
            get
            {
                if ((this.mUIEmployeeSpecificatioCustom == null))
                {
                    this.mUIEmployeeSpecificatioCustom = new UIEmployeeSpecificatioCustom(this);
                }
                return this.mUIEmployeeSpecificatioCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationItemVieCustom mUISpecificationItemVieCustom;
        
        private UIEmployeeSpecificatioCustom mUIEmployeeSpecificatioCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom : DXTestControl
    {
        
        public UISpecificationItemVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        
        public DXTestControl UILblOtherLabel
        {
            get
            {
                if ((this.mUILblOtherLabel == null))
                {
                    this.mUILblOtherLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblOther";
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblOtherLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblOtherLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        
        private DXTestControl mUILblOtherLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeSpecificatioCustom : DXTestControl
    {
        
        public UIEmployeeSpecificatioCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSpecificationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSpecificationView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcNameClient UIPcNameClient
        {
            get
            {
                if ((this.mUIPcNameClient == null))
                {
                    this.mUIPcNameClient = new UIPcNameClient(this);
                }
                return this.mUIPcNameClient;
            }
        }
        
        public DXTestControl UILblEmploymentLabel
        {
            get
            {
                if ((this.mUILblEmploymentLabel == null))
                {
                    this.mUILblEmploymentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblEmploymentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblEmployment";
                    this.mUILblEmploymentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblEmploymentLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblEmploymentLabel;
            }
        }
        
        public DXTestControl UILblDepartmentLabel
        {
            get
            {
                if ((this.mUILblDepartmentLabel == null))
                {
                    this.mUILblDepartmentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblDepartmentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblDepartment";
                    this.mUILblDepartmentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblDepartmentLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblDepartmentLabel;
            }
        }
        #endregion
        
        #region Fields
        private UIPcNameClient mUIPcNameClient;
        
        private DXTestControl mUILblEmploymentLabel;
        
        private DXTestControl mUILblDepartmentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcNameClient : DXTestControl
    {
        
        public UIPcNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblNameLabel
        {
            get
            {
                if ((this.mUILblNameLabel == null))
                {
                    this.mUILblNameLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblName";
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblNameLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblNameLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblNameLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer1DockPanel : DXDockPanel
    {
        
        public UIPanelContainer1DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpRoleCodesDockPanel UIDpRoleCodesDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodesDockPanel == null))
                {
                    this.mUIDpRoleCodesDockPanel = new UIDpRoleCodesDockPanel(this);
                }
                return this.mUIDpRoleCodesDockPanel;
            }
        }
        
        public UIDpEmployeesDockPanel UIDpEmployeesDockPanel
        {
            get
            {
                if ((this.mUIDpEmployeesDockPanel == null))
                {
                    this.mUIDpEmployeesDockPanel = new UIDpEmployeesDockPanel(this);
                }
                return this.mUIDpEmployeesDockPanel;
            }
        }
        
        public UIDpRoleCodePatternsDockPanel UIDpRoleCodePatternsDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodePatternsDockPanel == null))
                {
                    this.mUIDpRoleCodePatternsDockPanel = new UIDpRoleCodePatternsDockPanel(this);
                }
                return this.mUIDpRoleCodePatternsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpRoleCodesDockPanel mUIDpRoleCodesDockPanel;
        
        private UIDpEmployeesDockPanel mUIDpEmployeesDockPanel;
        
        private UIDpRoleCodePatternsDockPanel mUIDpRoleCodePatternsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodesDockPanel : DXDockPanel
    {
        
        public UIDpRoleCodesDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel2_ContainerCustom UIDockPanel2_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel2_ContainerCustom == null))
                {
                    this.mUIDockPanel2_ContainerCustom = new UIDockPanel2_ContainerCustom(this);
                }
                return this.mUIDockPanel2_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel2_ContainerCustom mUIDockPanel2_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel2_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel2_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel2_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodeListViewCustom UIRoleCodeListViewCustom
        {
            get
            {
                if ((this.mUIRoleCodeListViewCustom == null))
                {
                    this.mUIRoleCodeListViewCustom = new UIRoleCodeListViewCustom(this);
                }
                return this.mUIRoleCodeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodeListViewCustom mUIRoleCodeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodeListViewCustom : DXTestControl
    {
        
        public UIRoleCodeListViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodeListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodesTable UIGcRoleCodesTable
        {
            get
            {
                if ((this.mUIGcRoleCodesTable == null))
                {
                    this.mUIGcRoleCodesTable = new UIGcRoleCodesTable(this);
                }
                return this.mUIGcRoleCodesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodesTable mUIGcRoleCodesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodesTable : DXGrid
    {
        
        public UIGcRoleCodesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIDelttil4620KuntirsdaCell
        {
            get
            {
                if ((this.mUIDelttil4620KuntirsdaCell == null))
                {
                    this.mUIDelttil4620KuntirsdaCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4620KuntirsdaCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]3[Column]colName";
                    this.mUIDelttil4620KuntirsdaCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4620KuntirsdaCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDelttil4620KuntirsdaCell;
            }
        }
        
        public DXCell UIDelttil4620LESCell
        {
            get
            {
                if ((this.mUIDelttil4620LESCell == null))
                {
                    this.mUIDelttil4620LESCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4620LESCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]5[Column]colName";
                    this.mUIDelttil4620LESCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4620LESCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDelttil4620LESCell;
            }
        }
        
        public DXCell UIKIRkonteringCell
        {
            get
            {
                if ((this.mUIKIRkonteringCell == null))
                {
                    this.mUIKIRkonteringCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKIRkonteringCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]0[Column]colName";
                    this.mUIKIRkonteringCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKIRkonteringCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIKIRkonteringCell;
            }
        }
        
        public DXCell UIOVER4600Cell
        {
            get
            {
                if ((this.mUIOVER4600Cell == null))
                {
                    this.mUIOVER4600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVER4600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]1[Column]colName";
                    this.mUIOVER4600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVER4600Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOVER4600Cell;
            }
        }
        
        public DXCell UIDelttil4620LESCell1
        {
            get
            {
                if ((this.mUIDelttil4620LESCell1 == null))
                {
                    this.mUIDelttil4620LESCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4620LESCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]2[Column]colName";
                    this.mUIDelttil4620LESCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4620LESCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDelttil4620LESCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDelttil4620KuntirsdaCell;
        
        private DXCell mUIDelttil4620LESCell;
        
        private DXCell mUIKIRkonteringCell;
        
        private DXCell mUIOVER4600Cell;
        
        private DXCell mUIDelttil4620LESCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpEmployeesDockPanel : DXDockPanel
    {
        
        public UIDpEmployeesDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer1Custom UIControlContainer1Custom
        {
            get
            {
                if ((this.mUIControlContainer1Custom == null))
                {
                    this.mUIControlContainer1Custom = new UIControlContainer1Custom(this);
                }
                return this.mUIControlContainer1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer1Custom mUIControlContainer1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer1Custom : DXTestControl
    {
        
        public UIControlContainer1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeListViewCustom UIEmployeeListViewCustom
        {
            get
            {
                if ((this.mUIEmployeeListViewCustom == null))
                {
                    this.mUIEmployeeListViewCustom = new UIEmployeeListViewCustom(this);
                }
                return this.mUIEmployeeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeListViewCustom mUIEmployeeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeListViewCustom : DXTestControl
    {
        
        public UIEmployeeListViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcEmployeesTable : DXGrid
    {
        
        public UIGcEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIDahleKristinCell
        {
            get
            {
                if ((this.mUIDahleKristinCell == null))
                {
                    this.mUIDahleKristinCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDahleKristinCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]colDisplayName";
                    this.mUIDahleKristinCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDahleKristinCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDahleKristinCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDahleKristinCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodePatternsDockPanel : DXDockPanel
    {
        
        public UIDpRoleCodePatternsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodePatterns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodePatternListVCustom UIRoleCodePatternListVCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternListVCustom == null))
                {
                    this.mUIRoleCodePatternListVCustom = new UIRoleCodePatternListVCustom(this);
                }
                return this.mUIRoleCodePatternListVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodePatternListVCustom mUIRoleCodePatternListVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternListVCustom : DXTestControl
    {
        
        public UIRoleCodePatternListVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodePatternsTable UIGcRoleCodePatternsTable
        {
            get
            {
                if ((this.mUIGcRoleCodePatternsTable == null))
                {
                    this.mUIGcRoleCodePatternsTable = new UIGcRoleCodePatternsTable(this);
                }
                return this.mUIGcRoleCodePatternsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodePatternsTable mUIGcRoleCodePatternsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodePatternsTable : DXGrid
    {
        
        public UIGcRoleCodePatternsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatterns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UITESTCell
        {
            get
            {
                if ((this.mUITESTCell == null))
                {
                    this.mUITESTCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITESTCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatternsGridControlCell[View]gvRoleCodePatterns[Row]0[Column]colName";
                    this.mUITESTCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITESTCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITESTCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITESTCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpSummaryDockPanel : DXDockPanel
    {
        
        public UIDpSummaryDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISumDemandHostViewCustom UISumDemandHostViewCustom
        {
            get
            {
                if ((this.mUISumDemandHostViewCustom == null))
                {
                    this.mUISumDemandHostViewCustom = new UISumDemandHostViewCustom(this);
                }
                return this.mUISumDemandHostViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISumDemandHostViewCustom mUISumDemandHostViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISumDemandHostViewCustom : DXTestControl
    {
        
        public UISumDemandHostViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SumDemandHostView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SumDemandHostView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom : DXTestControl
    {
        
        public UIViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient5 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient5(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient5 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient5 : DXTestControl
    {
        
        public UIPcViewClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcSumDemandTable UIGcSumDemandTable
        {
            get
            {
                if ((this.mUIGcSumDemandTable == null))
                {
                    this.mUIGcSumDemandTable = new UIGcSumDemandTable(this);
                }
                return this.mUIGcSumDemandTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcSumDemandTable mUIGcSumDemandTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSumDemandTable : DXGrid
    {
        
        public UIGcSumDemandTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemand";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem160160Cell
        {
            get
            {
                if ((this.mUIItem160160Cell == null))
                {
                    this.mUIItem160160Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem160160Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]4[Column]02.01.2024 tirsdag";
                    this.mUIItem160160Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem160160Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem160160Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem160160Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom : DXTestControl
    {
        
        public UIControlContainer4Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom : DXTestControl
    {
        
        public UIDispGridViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom : DXTestControl
    {
        
        public UIIgAvailabilityCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom2 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom2(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom2 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom2 : DXTestControl
    {
        
        public UIDdGridControlCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable2 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable2(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable2 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable2 : DXGrid
    {
        
        public UIGcDragDropGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIXGV1EllingsenRolf080Cell
        {
            get
            {
                if ((this.mUIXGV1EllingsenRolf080Cell == null))
                {
                    this.mUIXGV1EllingsenRolf080Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXGV1EllingsenRolf080Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col09.01.2024";
                    this.mUIXGV1EllingsenRolf080Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXGV1EllingsenRolf080Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXGV1EllingsenRolf080Cell;
            }
        }
        
        public DXCell UIXDDahleKristin080016Cell
        {
            get
            {
                if ((this.mUIXDDahleKristin080016Cell == null))
                {
                    this.mUIXDDahleKristin080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXDDahleKristin080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col11.01.2024";
                    this.mUIXDDahleKristin080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXDDahleKristin080016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXDDahleKristin080016Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIXGV1EllingsenRolf080Cell;
        
        private DXCell mUIXDDahleKristin080016Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgHomeRibbonPage UIRpgHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpgHomeRibbonPage == null))
                {
                    this.mUIRpgHomeRibbonPage = new UIRpgHomeRibbonPage(this);
                }
                return this.mUIRpgHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgHomeRibbonPage mUIRpgHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpgHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgActionsRibbonPageGroup1 UIRpgActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgActionsRibbonPageGroup == null))
                {
                    this.mUIRpgActionsRibbonPageGroup = new UIRpgActionsRibbonPageGroup1(this);
                }
                return this.mUIRpgActionsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgActionsRibbonPageGroup1 mUIRpgActionsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgActionsRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgActionsRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UISlettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISlettRibbonBaseButtonItem == null))
                {
                    this.mUISlettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiDeleteAssignment";
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISlettRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUISlettRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient1 : DXTestControl
    {
        
        public UIGcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDetailsClient1 UIGcDetailsClient
        {
            get
            {
                if ((this.mUIGcDetailsClient == null))
                {
                    this.mUIGcDetailsClient = new UIGcDetailsClient1(this);
                }
                return this.mUIGcDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDetailsClient1 mUIGcDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDetailsClient1 : DXTestControl
    {
        
        public UIGcDetailsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom2 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom2(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom2 mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom2 : DXTestControl
    {
        
        public UIVhDetailsCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient6 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient6(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient6 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient6 : DXTestControl
    {
        
        public UIPcViewClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleDetailsViewCustom1 UIRoleDetailsViewCustom
        {
            get
            {
                if ((this.mUIRoleDetailsViewCustom == null))
                {
                    this.mUIRoleDetailsViewCustom = new UIRoleDetailsViewCustom1(this);
                }
                return this.mUIRoleDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDetailsViewCustom1 mUIRoleDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleDetailsViewCustom1 : DXTestControl
    {
        
        public UIRoleDetailsViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleDetailsView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client2 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client2(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client2 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client2 : DXTestControl
    {
        
        public UIPanelControl1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILabelControl2Label
        {
            get
            {
                if ((this.mUILabelControl2Label == null))
                {
                    this.mUILabelControl2Label = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILabelControl2Label.SearchProperties[DXTestControl.PropertyNames.Name] = "labelControl2";
                    this.mUILabelControl2Label.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILabelControl2Label.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILabelControl2Label;
            }
        }
        
        public DXTestControl UILblExecutingDepartmeLabel
        {
            get
            {
                if ((this.mUILblExecutingDepartmeLabel == null))
                {
                    this.mUILblExecutingDepartmeLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblExecutingDepartmeLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblExecutingDepartment";
                    this.mUILblExecutingDepartmeLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblExecutingDepartmeLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblExecutingDepartmeLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILabelControl2Label;
        
        private DXTestControl mUILblExecutingDepartmeLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow2 : DXWindow
    {
        
        public UIOppgavetildelingWindow2()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom2 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom2(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom2 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom2 : DXTestControl
    {
        
        public UIVhContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient7 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient7(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient7 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient7 : DXTestControl
    {
        
        public UIPcViewClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom1 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom1(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom1 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom1 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpDisponibleDockPanel1 UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel1(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        
        public UIVhContentCustom3 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom3(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIDpSummaryDockPanel1 UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new UIDpSummaryDockPanel1(this);
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDisponibleDockPanel1 mUIDpDisponibleDockPanel;
        
        private UIVhContentCustom3 mUIVhContentCustom;
        
        private UIDpSummaryDockPanel1 mUIDpSummaryDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel1 : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom1 UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom1(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom1 mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom1 : DXTestControl
    {
        
        public UIControlContainer4Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom1 UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom1(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom1 mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom1 : DXTestControl
    {
        
        public UIDispGridViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom1 UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom1(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom1 mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom1 : DXTestControl
    {
        
        public UIIgAvailabilityCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom3 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom3(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom3 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom3 : DXTestControl
    {
        
        public UIDdGridControlCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable3 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable3(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable3 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable3 : DXGrid
    {
        
        public UIGcDragDropGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIXD1KnutsenLaura08001Cell
        {
            get
            {
                if ((this.mUIXD1KnutsenLaura08001Cell == null))
                {
                    this.mUIXD1KnutsenLaura08001Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXD1KnutsenLaura08001Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col03.01.2024";
                    this.mUIXD1KnutsenLaura08001Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXD1KnutsenLaura08001Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXD1KnutsenLaura08001Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIXD1KnutsenLaura08001Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom3 : DXTestControl
    {
        
        public UIVhContentCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient8 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient8(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient8 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient8 : DXTestControl
    {
        
        public UIPcViewClient8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleFocusedManageVieCustom1 UIRoleFocusedManageVieCustom
        {
            get
            {
                if ((this.mUIRoleFocusedManageVieCustom == null))
                {
                    this.mUIRoleFocusedManageVieCustom = new UIRoleFocusedManageVieCustom1(this);
                }
                return this.mUIRoleFocusedManageVieCustom;
            }
        }
        
        public UIEmployeeFocusedManagCustom1 UIEmployeeFocusedManagCustom
        {
            get
            {
                if ((this.mUIEmployeeFocusedManagCustom == null))
                {
                    this.mUIEmployeeFocusedManagCustom = new UIEmployeeFocusedManagCustom1(this);
                }
                return this.mUIEmployeeFocusedManagCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleFocusedManageVieCustom1 mUIRoleFocusedManageVieCustom;
        
        private UIEmployeeFocusedManagCustom1 mUIEmployeeFocusedManagCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleFocusedManageVieCustom1 : DXTestControl
    {
        
        public UIRoleFocusedManageVieCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleFocusedManageView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgContentCustom1 UIIgContentCustom
        {
            get
            {
                if ((this.mUIIgContentCustom == null))
                {
                    this.mUIIgContentCustom = new UIIgContentCustom1(this);
                }
                return this.mUIIgContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgContentCustom1 mUIIgContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgContentCustom1 : DXTestControl
    {
        
        public UIIgContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom4 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom4(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom4 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom4 : DXTestControl
    {
        
        public UIDdGridControlCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable4 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable4(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable4 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable4 : DXGrid
    {
        
        public UIGcDragDropGridTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIWarningAnsattmanglerCell
        {
            get
            {
                if ((this.mUIWarningAnsattmanglerCell == null))
                {
                    this.mUIWarningAnsattmanglerCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIWarningAnsattmanglerCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col03.01.2024";
                    this.mUIWarningAnsattmanglerCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIWarningAnsattmanglerCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIWarningAnsattmanglerCell;
            }
        }
        
        public DXCell UIDelttil46104810MaksaCell
        {
            get
            {
                if ((this.mUIDelttil46104810MaksaCell == null))
                {
                    this.mUIDelttil46104810MaksaCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil46104810MaksaCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]bgcRoleCode";
                    this.mUIDelttil46104810MaksaCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil46104810MaksaCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDelttil46104810MaksaCell;
            }
        }
        
        public DXCell UIItem4710KardiologiCell
        {
            get
            {
                if ((this.mUIItem4710KardiologiCell == null))
                {
                    this.mUIItem4710KardiologiCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4710KardiologiCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]bgcDepartment";
                    this.mUIItem4710KardiologiCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4710KardiologiCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4710KardiologiCell;
            }
        }
        
        public DXCell UIInformationOppgaveerCell
        {
            get
            {
                if ((this.mUIInformationOppgaveerCell == null))
                {
                    this.mUIInformationOppgaveerCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIInformationOppgaveerCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col09.01.2024";
                    this.mUIInformationOppgaveerCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIInformationOppgaveerCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIInformationOppgaveerCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIWarningAnsattmanglerCell;
        
        private DXCell mUIDelttil46104810MaksaCell;
        
        private DXCell mUIItem4710KardiologiCell;
        
        private DXCell mUIInformationOppgaveerCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFocusedManagCustom1 : DXTestControl
    {
        
        public UIEmployeeFocusedManagCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFocusedManageView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIItemGridControl1Custom1 UIItemGridControl1Custom
        {
            get
            {
                if ((this.mUIItemGridControl1Custom == null))
                {
                    this.mUIItemGridControl1Custom = new UIItemGridControl1Custom1(this);
                }
                return this.mUIItemGridControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGridControl1Custom1 mUIItemGridControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGridControl1Custom1 : DXTestControl
    {
        
        public UIItemGridControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "itemGridControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom5 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom5(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom5 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom5 : DXTestControl
    {
        
        public UIDdGridControlCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable5 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable5(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable5 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable5 : DXGrid
    {
        
        public UIGcDragDropGridTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIDahleKristinCell
        {
            get
            {
                if ((this.mUIDahleKristinCell == null))
                {
                    this.mUIDahleKristinCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDahleKristinCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]colEmployeeName";
                    this.mUIDahleKristinCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDahleKristinCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDahleKristinCell;
            }
        }
        
        public DXCell UIItem4620KirurgiCell
        {
            get
            {
                if ((this.mUIItem4620KirurgiCell == null))
                {
                    this.mUIItem4620KirurgiCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4620KirurgiCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]colDepartmentName";
                    this.mUIItem4620KirurgiCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4620KirurgiCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4620KirurgiCell;
            }
        }
        
        public DXCell UID08001600Delttil4610Cell
        {
            get
            {
                if ((this.mUID08001600Delttil4610Cell == null))
                {
                    this.mUID08001600Delttil4610Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600Delttil4610Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col08.01.2024";
                    this.mUID08001600Delttil4610Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600Delttil4610Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600Delttil4610Cell;
            }
        }
        
        public DXCell UID08001600OVER4600100Cell
        {
            get
            {
                if ((this.mUID08001600OVER4600100Cell == null))
                {
                    this.mUID08001600OVER4600100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600OVER4600100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col09.01.2024";
                    this.mUID08001600OVER4600100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600OVER4600100Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600OVER4600100Cell;
            }
        }
        
        public DXCell UID08001600WarningAnsaCell
        {
            get
            {
                if ((this.mUID08001600WarningAnsaCell == null))
                {
                    this.mUID08001600WarningAnsaCell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600WarningAnsaCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col10.01.2024";
                    this.mUID08001600WarningAnsaCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600WarningAnsaCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600WarningAnsaCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDahleKristinCell;
        
        private DXCell mUIItem4620KirurgiCell;
        
        private DXCell mUID08001600Delttil4610Cell;
        
        private DXCell mUID08001600OVER4600100Cell;
        
        private DXCell mUID08001600WarningAnsaCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpSummaryDockPanel1 : DXDockPanel
    {
        
        public UIDpSummaryDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom1 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom1(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom1 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISumDemandHostViewCustom1 UISumDemandHostViewCustom
        {
            get
            {
                if ((this.mUISumDemandHostViewCustom == null))
                {
                    this.mUISumDemandHostViewCustom = new UISumDemandHostViewCustom1(this);
                }
                return this.mUISumDemandHostViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISumDemandHostViewCustom1 mUISumDemandHostViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISumDemandHostViewCustom1 : DXTestControl
    {
        
        public UISumDemandHostViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SumDemandHostView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SumDemandHostView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom1 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom1(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom1 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom1 : DXTestControl
    {
        
        public UIViewHost1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient9 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient9(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient9 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient9 : DXTestControl
    {
        
        public UIPcViewClient9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcSumDemandTable1 UIGcSumDemandTable
        {
            get
            {
                if ((this.mUIGcSumDemandTable == null))
                {
                    this.mUIGcSumDemandTable = new UIGcSumDemandTable1(this);
                }
                return this.mUIGcSumDemandTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcSumDemandTable1 mUIGcSumDemandTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSumDemandTable1 : DXGrid
    {
        
        public UIGcSumDemandTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemand";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem155160Cell
        {
            get
            {
                if ((this.mUIItem155160Cell == null))
                {
                    this.mUIItem155160Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem155160Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]09.01.2024 tirsdag";
                    this.mUIItem155160Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem155160Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem155160Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem155160Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Oppgave OVER 4700 faller utenfor vaktens tidsrom (08:00 - 16:00). ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIOppgaveOVER4700falleToolTip
        {
            get
            {
                if ((this.mUIOppgaveOVER4700falleToolTip == null))
                {
                    this.mUIOppgaveOVER4700falleToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIOppgaveOVER4700falleToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Oppgave OVER 4700 faller utenfor vaktens tidsrom (08:00 - 16:00). ";
                    #endregion
                }
                return this.mUIOppgaveOVER4700falleToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIOppgaveOVER4700falleToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Kun denne oppgaven, ikke flere samtidig!. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIKundenneoppgavenikkeToolTip
        {
            get
            {
                if ((this.mUIKundenneoppgavenikkeToolTip == null))
                {
                    this.mUIKundenneoppgavenikkeToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIKundenneoppgavenikkeToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Kun denne oppgaven, ikke flere samtidig!. ";
                    #endregion
                }
                return this.mUIKundenneoppgavenikkeToolTip;
            }
        }
        
        public WinToolTip UIOppgaveORTEksklereksToolTip
        {
            get
            {
                if ((this.mUIOppgaveORTEksklereksToolTip == null))
                {
                    this.mUIOppgaveORTEksklereksToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIOppgaveORTEksklereksToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Oppgave ORT Ekskl er eksklusiv men overlapper med allerede tildelt oppgave Delt t" +
                        "il 4610 Ekskl kan ikke. ";
                    #endregion
                }
                return this.mUIOppgaveORTEksklereksToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIKundenneoppgavenikkeToolTip;
        
        private WinToolTip mUIOppgaveORTEksklereksToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Oppgave Delt til 4610/4810 Maks antall Sperre kan ikke ha mer enn 2 samtidige til" +
                "delinger.. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIOppgaveDelttil461048ToolTip
        {
            get
            {
                if ((this.mUIOppgaveDelttil461048ToolTip == null))
                {
                    this.mUIOppgaveDelttil461048ToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIOppgaveDelttil461048ToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Oppgave Delt til 4610/4810 Maks antall Sperre kan ikke ha mer enn 2 samtidige til" +
                        "delinger.. ";
                    #endregion
                }
                return this.mUIOppgaveDelttil461048ToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIOppgaveDelttil461048ToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Mangler oppgavedeling i perioden for å kunne tildele oppgave. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIMangleroppgavedelingToolTip
        {
            get
            {
                if ((this.mUIMangleroppgavedelingToolTip == null))
                {
                    this.mUIMangleroppgavedelingToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIMangleroppgavedelingToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Mangler oppgavedeling i perioden for å kunne tildele oppgave. ";
                    #endregion
                }
                return this.mUIMangleroppgavedelingToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIMangleroppgavedelingToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDefinisjonavfilterfoWindow : DXWindow
    {
        
        public UIDefinisjonavfilterfoWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Definisjon av filter for oppgave";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public UIPcRowSelectionClient UIPcRowSelectionClient
        {
            get
            {
                if ((this.mUIPcRowSelectionClient == null))
                {
                    this.mUIPcRowSelectionClient = new UIPcRowSelectionClient(this);
                }
                return this.mUIPcRowSelectionClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcRowSelectionClient mUIPcRowSelectionClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcRowSelectionClient : DXTestControl
    {
        
        public UIPcRowSelectionClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcRowSelection";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public UIGcRowSelectorClient UIGcRowSelectorClient
        {
            get
            {
                if ((this.mUIGcRowSelectorClient == null))
                {
                    this.mUIGcRowSelectorClient = new UIGcRowSelectorClient(this);
                }
                return this.mUIGcRowSelectorClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRowSelectorClient mUIGcRowSelectorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRowSelectorClient : DXTestControl
    {
        
        public UIGcRowSelectorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRowSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public UIClbRowCheckedListBox UIClbRowCheckedListBox
        {
            get
            {
                if ((this.mUIClbRowCheckedListBox == null))
                {
                    this.mUIClbRowCheckedListBox = new UIClbRowCheckedListBox(this);
                }
                return this.mUIClbRowCheckedListBox;
            }
        }
        #endregion
        
        #region Fields
        private UIClbRowCheckedListBox mUIClbRowCheckedListBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIClbRowCheckedListBox : DXCheckedListBox
    {
        
        public UIClbRowCheckedListBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "clbRow";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckedListBoxControlEx";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIDelttil4610EksklkaniCheckBox
        {
            get
            {
                if ((this.mUIDelttil4610EksklkaniCheckBox == null))
                {
                    this.mUIDelttil4610EksklkaniCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIDelttil4610EksklkaniCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbRowItem[0]";
                    this.mUIDelttil4610EksklkaniCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxItem";
                    this.mUIDelttil4610EksklkaniCheckBox.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIDelttil4610EksklkaniCheckBox;
            }
        }
        
        public DXCheckBox UIDelttil4620KompetansCheckBox
        {
            get
            {
                if ((this.mUIDelttil4620KompetansCheckBox == null))
                {
                    this.mUIDelttil4620KompetansCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIDelttil4620KompetansCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbRowItem[1]";
                    this.mUIDelttil4620KompetansCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxItem";
                    this.mUIDelttil4620KompetansCheckBox.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIDelttil4620KompetansCheckBox;
            }
        }
        
        public DXCheckBox UIDelttil4620KuntirsdaCheckBox
        {
            get
            {
                if ((this.mUIDelttil4620KuntirsdaCheckBox == null))
                {
                    this.mUIDelttil4620KuntirsdaCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIDelttil4620KuntirsdaCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbRowItem[2]";
                    this.mUIDelttil4620KuntirsdaCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxItem";
                    this.mUIDelttil4620KuntirsdaCheckBox.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIDelttil4620KuntirsdaCheckBox;
            }
        }
        
        public DXCheckBox UIDelttil4620LESCheckBox
        {
            get
            {
                if ((this.mUIDelttil4620LESCheckBox == null))
                {
                    this.mUIDelttil4620LESCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIDelttil4620LESCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbRowItem[3]";
                    this.mUIDelttil4620LESCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxItem";
                    this.mUIDelttil4620LESCheckBox.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIDelttil4620LESCheckBox;
            }
        }
        
        public DXCheckBox UIKIRkonteringCheckBox
        {
            get
            {
                if ((this.mUIKIRkonteringCheckBox == null))
                {
                    this.mUIKIRkonteringCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIKIRkonteringCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbRowItem[4]";
                    this.mUIKIRkonteringCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxItem";
                    this.mUIKIRkonteringCheckBox.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIKIRkonteringCheckBox;
            }
        }
        
        public DXCheckBox UIOVER4600CheckBox
        {
            get
            {
                if ((this.mUIOVER4600CheckBox == null))
                {
                    this.mUIOVER4600CheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIOVER4600CheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbRowItem[5]";
                    this.mUIOVER4600CheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckedListBoxItem";
                    this.mUIOVER4600CheckBox.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIOVER4600CheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIDelttil4610EksklkaniCheckBox;
        
        private DXCheckBox mUIDelttil4620KompetansCheckBox;
        
        private DXCheckBox mUIDelttil4620KuntirsdaCheckBox;
        
        private DXCheckBox mUIDelttil4620LESCheckBox;
        
        private DXCheckBox mUIKIRkonteringCheckBox;
        
        private DXCheckBox mUIOVER4600CheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavemønsterWindow : DXWindow
    {
        
        public UIOppgavemønsterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavemønster";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeNameEdit
        {
            get
            {
                if ((this.mUITeNameEdit == null))
                {
                    this.mUITeNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teName";
                    this.mUITeNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITeNameEdit.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUITeNameEdit;
            }
        }
        
        public UITcDetailsCommentTabList UITcDetailsCommentTabList
        {
            get
            {
                if ((this.mUITcDetailsCommentTabList == null))
                {
                    this.mUITcDetailsCommentTabList = new UITcDetailsCommentTabList(this);
                }
                return this.mUITcDetailsCommentTabList;
            }
        }
        
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeNameEdit;
        
        private UITcDetailsCommentTabList mUITcDetailsCommentTabList;
        
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcDetailsCommentTabList : DXTestControl
    {
        
        public UITcDetailsCommentTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcDetailsComment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            #endregion
        }
        
        #region Properties
        public UITpDetailsClient UITpDetailsClient
        {
            get
            {
                if ((this.mUITpDetailsClient == null))
                {
                    this.mUITpDetailsClient = new UITpDetailsClient(this);
                }
                return this.mUITpDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpDetailsClient mUITpDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpDetailsClient : DXTestControl
    {
        
        public UITpDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            #endregion
        }
        
        #region Properties
        public DXComboBox UICbeStartDayComboBox
        {
            get
            {
                if ((this.mUICbeStartDayComboBox == null))
                {
                    this.mUICbeStartDayComboBox = new DXComboBox(this);
                    #region Search Criteria
                    this.mUICbeStartDayComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeStartDay";
                    this.mUICbeStartDayComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSComboBoxEdit";
                    #endregion
                }
                return this.mUICbeStartDayComboBox;
            }
        }
        #endregion
        
        #region Fields
        private DXComboBox mUICbeStartDayComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UIWeekPlannerCustom UIWeekPlannerCustom
        {
            get
            {
                if ((this.mUIWeekPlannerCustom == null))
                {
                    this.mUIWeekPlannerCustom = new UIWeekPlannerCustom(this);
                }
                return this.mUIWeekPlannerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIWeekPlannerCustom mUIWeekPlannerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeekPlannerCustom : DXTestControl
    {
        
        public UIWeekPlannerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "weekPlanner";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekPlanner";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client3 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client3(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client3 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client3 : DXTestControl
    {
        
        public UIPanelControl1Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UINbcActivitiesNavBar UINbcActivitiesNavBar
        {
            get
            {
                if ((this.mUINbcActivitiesNavBar == null))
                {
                    this.mUINbcActivitiesNavBar = new UINbcActivitiesNavBar(this);
                }
                return this.mUINbcActivitiesNavBar;
            }
        }
        
        public UISchedulerCustom UISchedulerCustom
        {
            get
            {
                if ((this.mUISchedulerCustom == null))
                {
                    this.mUISchedulerCustom = new UISchedulerCustom(this);
                }
                return this.mUISchedulerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UINbcActivitiesNavBar mUINbcActivitiesNavBar;
        
        private UISchedulerCustom mUISchedulerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbcActivitiesNavBar : DXNavBar
    {
        
        public UINbcActivitiesNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcActivities";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UIDelteoppgaverNavBarGroup UIDelteoppgaverNavBarGroup
        {
            get
            {
                if ((this.mUIDelteoppgaverNavBarGroup == null))
                {
                    this.mUIDelteoppgaverNavBarGroup = new UIDelteoppgaverNavBarGroup(this);
                }
                return this.mUIDelteoppgaverNavBarGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIDelteoppgaverNavBarGroup mUIDelteoppgaverNavBarGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDelteoppgaverNavBarGroup : DXNavBarGroup
    {
        
        public UIDelteoppgaverNavBarGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Delte oppgaver";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public DXNavBarLink UIDelttil4620KompetansNavBarLink
        {
            get
            {
                if ((this.mUIDelttil4620KompetansNavBarLink == null))
                {
                    this.mUIDelttil4620KompetansNavBarLink = new DXNavBarLink(this);
                    #region Search Criteria
                    this.mUIDelttil4620KompetansNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Delt til 4620 Kompetanse bør";
                    this.mUIDelttil4620KompetansNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
                    this.mUIDelttil4620KompetansNavBarLink.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUIDelttil4620KompetansNavBarLink;
            }
        }
        #endregion
        
        #region Fields
        private DXNavBarLink mUIDelttil4620KompetansNavBarLink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerCustom : DXTestControl
    {
        
        public UISchedulerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "scheduler";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekSchedulerControl";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UISchedulerControl1Window UISchedulerControl1Window
        {
            get
            {
                if ((this.mUISchedulerControl1Window == null))
                {
                    this.mUISchedulerControl1Window = new UISchedulerControl1Window(this);
                }
                return this.mUISchedulerControl1Window;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerControl1Window mUISchedulerControl1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1Window : WinWindow
    {
        
        public UISchedulerControl1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "scheduler";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UISchedulerList1 UISchedulerList1
        {
            get
            {
                if ((this.mUISchedulerList1 == null))
                {
                    this.mUISchedulerList1 = new UISchedulerList1(this);
                }
                return this.mUISchedulerList1;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerList1 mUISchedulerList1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerList1 : WinList
    {
        
        public UISchedulerList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Work Week Calendar, 0 total events, 12:00 a.m.  mandag, januar 13, 2014 to 12:00 " +
                "a.m.  mandag, januar 20, 2014";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public WinListItem UIItem730amto745amonsdListItem
        {
            get
            {
                if ((this.mUIItem730amto745amonsdListItem == null))
                {
                    this.mUIItem730amto745amonsdListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem730amto745amonsdListItem.SearchProperties[WinListItem.PropertyNames.Name] = "7:30 a.m.  to 7:45 a.m.  onsdag, januar 15, 2014, 0 Events";
                    this.mUIItem730amto745amonsdListItem.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUIItem730amto745amonsdListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItem730amto745amonsdListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavemønsterWindow1 : WinWindow
    {
        
        public UIOppgavemønsterWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Oppgavemønster";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client1 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client1(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public UISchedulerControl1Window1 UISchedulerControl1Window
        {
            get
            {
                if ((this.mUISchedulerControl1Window == null))
                {
                    this.mUISchedulerControl1Window = new UISchedulerControl1Window1(this);
                }
                return this.mUISchedulerControl1Window;
            }
        }
        
        public UISchedulerWindow UISchedulerWindow
        {
            get
            {
                if ((this.mUISchedulerWindow == null))
                {
                    this.mUISchedulerWindow = new UISchedulerWindow(this);
                }
                return this.mUISchedulerWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client1 mUIGsPanelControl1Client;
        
        private UISchedulerControl1Window1 mUISchedulerControl1Window;
        
        private UISchedulerWindow mUISchedulerWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl1Client1 : DXTestControl
    {
        
        public UIGsPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UIWeekPlannerCustom1 UIWeekPlannerCustom
        {
            get
            {
                if ((this.mUIWeekPlannerCustom == null))
                {
                    this.mUIWeekPlannerCustom = new UIWeekPlannerCustom1(this);
                }
                return this.mUIWeekPlannerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIWeekPlannerCustom1 mUIWeekPlannerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeekPlannerCustom1 : DXTestControl
    {
        
        public UIWeekPlannerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "weekPlanner";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekPlanner";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client4 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client4(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client4 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client4 : DXTestControl
    {
        
        public UIPanelControl1Client4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UISchedulerCustom1 UISchedulerCustom
        {
            get
            {
                if ((this.mUISchedulerCustom == null))
                {
                    this.mUISchedulerCustom = new UISchedulerCustom1(this);
                }
                return this.mUISchedulerCustom;
            }
        }
        
        public UINbcActivitiesNavBar1 UINbcActivitiesNavBar
        {
            get
            {
                if ((this.mUINbcActivitiesNavBar == null))
                {
                    this.mUINbcActivitiesNavBar = new UINbcActivitiesNavBar1(this);
                }
                return this.mUINbcActivitiesNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerCustom1 mUISchedulerCustom;
        
        private UINbcActivitiesNavBar1 mUINbcActivitiesNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerCustom1 : DXTestControl
    {
        
        public UISchedulerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "scheduler";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekSchedulerControl";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UISchedulerList UISchedulerList
        {
            get
            {
                if ((this.mUISchedulerList == null))
                {
                    this.mUISchedulerList = new UISchedulerList(this);
                }
                return this.mUISchedulerList;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerList mUISchedulerList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerList : WinList
    {
        
        public UISchedulerList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "schedulerControl1";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public WinList UISchedulerList1
        {
            get
            {
                if ((this.mUISchedulerList1 == null))
                {
                    this.mUISchedulerList1 = new WinList(this);
                    #region Search Criteria
                    this.mUISchedulerList1.SearchProperties[WinList.PropertyNames.Name] = "Work Week Calendar, 0 total events, 12:00 a.m.  mandag, januar 13, 2014 to 12:00 " +
                        "a.m.  mandag, januar 20, 2014";
                    this.mUISchedulerList1.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUISchedulerList1;
            }
        }
        
        public WinList UISchedulerList11
        {
            get
            {
                if ((this.mUISchedulerList11 == null))
                {
                    this.mUISchedulerList11 = new WinList(this);
                    #region Search Criteria
                    this.mUISchedulerList11.SearchProperties[WinList.PropertyNames.Name] = "Work Week Calendar, 1 total events, 12:00 a.m.  mandag, januar 13, 2014 to 12:00 " +
                        "a.m.  mandag, januar 20, 2014";
                    this.mUISchedulerList11.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUISchedulerList11;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUISchedulerList1;
        
        private WinList mUISchedulerList11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbcActivitiesNavBar1 : DXNavBar
    {
        
        public UINbcActivitiesNavBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcActivities";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UIOppgaverNavBarGroup UIOppgaverNavBarGroup
        {
            get
            {
                if ((this.mUIOppgaverNavBarGroup == null))
                {
                    this.mUIOppgaverNavBarGroup = new UIOppgaverNavBarGroup(this);
                }
                return this.mUIOppgaverNavBarGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIOppgaverNavBarGroup mUIOppgaverNavBarGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgaverNavBarGroup : DXNavBarGroup
    {
        
        public UIOppgaverNavBarGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgaver";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public DXNavBarLink UIDelttil4610EksklkaniNavBarLink
        {
            get
            {
                if ((this.mUIDelttil4610EksklkaniNavBarLink == null))
                {
                    this.mUIDelttil4610EksklkaniNavBarLink = new DXNavBarLink(this);
                    #region Search Criteria
                    this.mUIDelttil4610EksklkaniNavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "Delt til 4610 Ekskl kan ikke";
                    this.mUIDelttil4610EksklkaniNavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
                    this.mUIDelttil4610EksklkaniNavBarLink.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUIDelttil4610EksklkaniNavBarLink;
            }
        }
        
        public DXNavBarLink UIOVER4600NavBarLink
        {
            get
            {
                if ((this.mUIOVER4600NavBarLink == null))
                {
                    this.mUIOVER4600NavBarLink = new DXNavBarLink(this);
                    #region Search Criteria
                    this.mUIOVER4600NavBarLink.SearchProperties[DXTestControl.PropertyNames.Name] = "OVER 4600";
                    this.mUIOVER4600NavBarLink.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarLink";
                    this.mUIOVER4600NavBarLink.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUIOVER4600NavBarLink;
            }
        }
        #endregion
        
        #region Fields
        private DXNavBarLink mUIDelttil4610EksklkaniNavBarLink;
        
        private DXNavBarLink mUIOVER4600NavBarLink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1Window1 : WinWindow
    {
        
        public UISchedulerControl1Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "scheduler";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UISchedulerList2 UISchedulerList
        {
            get
            {
                if ((this.mUISchedulerList == null))
                {
                    this.mUISchedulerList = new UISchedulerList2(this);
                }
                return this.mUISchedulerList;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerList2 mUISchedulerList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerList2 : WinList
    {
        
        public UISchedulerList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Work Week Calendar, 0 total events, 12:00 a.m.  mandag, januar 13, 2014 to 12:00 " +
                "a.m.  mandag, januar 20, 2014";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public WinListItem UIItem730amto745amonsdListItem
        {
            get
            {
                if ((this.mUIItem730amto745amonsdListItem == null))
                {
                    this.mUIItem730amto745amonsdListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem730amto745amonsdListItem.SearchProperties[WinListItem.PropertyNames.Name] = "7:30 a.m.  to 7:45 a.m.  onsdag, januar 15, 2014, 0 Events";
                    this.mUIItem730amto745amonsdListItem.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUIItem730amto745amonsdListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItem730amto745amonsdListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerWindow : WinWindow
    {
        
        public UISchedulerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "scheduler";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public WinList UISchedulerList
        {
            get
            {
                if ((this.mUISchedulerList == null))
                {
                    this.mUISchedulerList = new WinList(this);
                    #region Search Criteria
                    this.mUISchedulerList.SearchProperties[WinList.PropertyNames.Name] = "schedulerControl1";
                    this.mUISchedulerList.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUISchedulerList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUISchedulerList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITildeloppgavemønsterWindow : DXWindow
    {
        
        public UITildeloppgavemønsterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Tildel oppgavemønster TEST";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tildel oppgavemønster TEST");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client5 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client5(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client5 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client5 : DXTestControl
    {
        
        public UIPanelControl1Client5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster TEST");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom2 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom2(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom2 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom2 : DXTestControl
    {
        
        public UIViewHost1Custom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Tildel oppgavemønster TEST");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient10 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient10(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient10 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient10 : DXTestControl
    {
        
        public UIPcViewClient10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster TEST");
            #endregion
        }
        
        #region Properties
        public UIRoleCodePatternAssigCustom UIRoleCodePatternAssigCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternAssigCustom == null))
                {
                    this.mUIRoleCodePatternAssigCustom = new UIRoleCodePatternAssigCustom(this);
                }
                return this.mUIRoleCodePatternAssigCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodePatternAssigCustom mUIRoleCodePatternAssigCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternAssigCustom : DXTestControl
    {
        
        public UIRoleCodePatternAssigCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternAssignmentView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternAssignmentView";
            this.WindowTitles.Add("Tildel oppgavemønster TEST");
            #endregion
        }
        
        #region Properties
        public UITabControlTabList UITabControlTabList
        {
            get
            {
                if ((this.mUITabControlTabList == null))
                {
                    this.mUITabControlTabList = new UITabControlTabList(this);
                }
                return this.mUITabControlTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITabControlTabList mUITabControlTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlTabList : DXTestControl
    {
        
        public UITabControlTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("Tildel oppgavemønster TEST");
            #endregion
        }
        
        #region Properties
        public UITabPage1Client UITabPage1Client
        {
            get
            {
                if ((this.mUITabPage1Client == null))
                {
                    this.mUITabPage1Client = new UITabPage1Client(this);
                }
                return this.mUITabPage1Client;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlPageHeader1";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Tildel oppgavemønster TEST");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UITabPage1Client mUITabPage1Client;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabPage1Client : DXTestControl
    {
        
        public UITabPage1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabPage1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Tildel oppgavemønster TEST");
            #endregion
        }
        
        #region Properties
        public UIGcAddedTable UIGcAddedTable
        {
            get
            {
                if ((this.mUIGcAddedTable == null))
                {
                    this.mUIGcAddedTable = new UIGcAddedTable(this);
                }
                return this.mUIGcAddedTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAddedTable mUIGcAddedTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAddedTable : DXGrid
    {
        
        public UIGcAddedTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAdded";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Tildel oppgavemønster TEST");
            #endregion
        }
        
        #region Properties
        public DXCell UIDelttil4610EksklkaniCell
        {
            get
            {
                if ((this.mUIDelttil4610EksklkaniCell == null))
                {
                    this.mUIDelttil4610EksklkaniCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAddedGridControlCell[View]gvAdded[Row]0[Column]gcolRoleCode";
                    this.mUIDelttil4610EksklkaniCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4610EksklkaniCell.WindowTitles.Add("Tildel oppgavemønster TEST");
                    #endregion
                }
                return this.mUIDelttil4610EksklkaniCell;
            }
        }
        
        public DXCell UIOVER4600Cell
        {
            get
            {
                if ((this.mUIOVER4600Cell == null))
                {
                    this.mUIOVER4600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVER4600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAddedGridControlCell[View]gvAdded[Row]1[Column]gcolRoleCode";
                    this.mUIOVER4600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVER4600Cell.WindowTitles.Add("Tildel oppgavemønster TEST");
                    #endregion
                }
                return this.mUIOVER4600Cell;
            }
        }
        
        public DXCell UIDelttil4620KompetansCell
        {
            get
            {
                if ((this.mUIDelttil4620KompetansCell == null))
                {
                    this.mUIDelttil4620KompetansCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelttil4620KompetansCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAddedGridControlCell[View]gvAdded[Row]2[Column]gcolRoleCode";
                    this.mUIDelttil4620KompetansCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelttil4620KompetansCell.WindowTitles.Add("Tildel oppgavemønster TEST");
                    #endregion
                }
                return this.mUIDelttil4620KompetansCell;
            }
        }
        
        public DXCell UIAnsattmanglerfølgendCell
        {
            get
            {
                if ((this.mUIAnsattmanglerfølgendCell == null))
                {
                    this.mUIAnsattmanglerfølgendCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAnsattmanglerfølgendCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAddedGridControlCell[View]gvAdded[Row]2[Column]gcolResult";
                    this.mUIAnsattmanglerfølgendCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAnsattmanglerfølgendCell.WindowTitles.Add("Tildel oppgavemønster TEST");
                    #endregion
                }
                return this.mUIAnsattmanglerfølgendCell;
            }
        }
        
        public DXCell UIMandagCell
        {
            get
            {
                if ((this.mUIMandagCell == null))
                {
                    this.mUIMandagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMandagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAddedGridControlCell[View]gvAdded[Row]0[Column]gcolWeekday";
                    this.mUIMandagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMandagCell.WindowTitles.Add("Tildel oppgavemønster TEST");
                    #endregion
                }
                return this.mUIMandagCell;
            }
        }
        
        public DXCell UITirsdagCell
        {
            get
            {
                if ((this.mUITirsdagCell == null))
                {
                    this.mUITirsdagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITirsdagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAddedGridControlCell[View]gvAdded[Row]1[Column]gcolWeekday";
                    this.mUITirsdagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITirsdagCell.WindowTitles.Add("Tildel oppgavemønster TEST");
                    #endregion
                }
                return this.mUITirsdagCell;
            }
        }
        
        public DXCell UIOnsdagCell
        {
            get
            {
                if ((this.mUIOnsdagCell == null))
                {
                    this.mUIOnsdagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOnsdagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAddedGridControlCell[View]gvAdded[Row]2[Column]gcolWeekday";
                    this.mUIOnsdagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOnsdagCell.WindowTitles.Add("Tildel oppgavemønster TEST");
                    #endregion
                }
                return this.mUIOnsdagCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDelttil4610EksklkaniCell;
        
        private DXCell mUIOVER4600Cell;
        
        private DXCell mUIDelttil4620KompetansCell;
        
        private DXCell mUIAnsattmanglerfølgendCell;
        
        private DXCell mUIMandagCell;
        
        private DXCell mUITirsdagCell;
        
        private DXCell mUIOnsdagCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavevaktbokvisninWindow : DXWindow
    {
        
        public UIOppgavevaktbokvisninWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavevaktbokvisning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavevaktbokvisning");
            #endregion
        }
        
        #region Properties
        public UIGcSavedViewsClient UIGcSavedViewsClient
        {
            get
            {
                if ((this.mUIGcSavedViewsClient == null))
                {
                    this.mUIGcSavedViewsClient = new UIGcSavedViewsClient(this);
                }
                return this.mUIGcSavedViewsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcSavedViewsClient mUIGcSavedViewsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSavedViewsClient : DXTestControl
    {
        
        public UIGcSavedViewsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSavedViews";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXComboBox UICbSavedViewsComboBox
        {
            get
            {
                if ((this.mUICbSavedViewsComboBox == null))
                {
                    this.mUICbSavedViewsComboBox = new DXComboBox(this);
                    #region Search Criteria
                    this.mUICbSavedViewsComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbSavedViews";
                    this.mUICbSavedViewsComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSComboBoxEdit";
                    #endregion
                }
                return this.mUICbSavedViewsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private DXComboBox mUICbSavedViewsComboBox;
        #endregion
    }
}
