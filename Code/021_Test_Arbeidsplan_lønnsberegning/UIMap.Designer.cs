// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _021_Test_Arbeidsplan_lønnsberegning
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using CommonTestData;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ChangeLevelTo5110
        /// </summary>
        public void ChangeLevelTo5110()
        {
            #region Variable Declarations
            DXButton uINivåButton = this.UIGatver63031120ASCLAvWindow.UIPcTopPanelClient.UINivåButton;
            DXCell uIItem5110DiverseCell = this.UINivåWindow.UIGsLayoutControl1Custom.UILayoutControlGroup1LayoutGroup.UILayDepartmentsLayoutControlItem.UIGbDepartmentsClient.UIGDepartmentsTable.UIItem5110DiverseCell;
            DXButton uIGSSimpleButtonButton = this.UINivåWindow.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'N&ivå' button
            Mouse.Click(uINivåButton, new Point(1, 1));

            // Click '5110 - Diverse' cell
            Mouse.Click(uIItem5110DiverseCell, new Point(78, 4));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ChangeNameRosterPlan - Use 'ChangeNameRosterPlanParams' to pass parameters into this method.
        /// </summary>
        public void ChangeNameRosterPlan()
        {
            #region Variable Declarations
            DXTextEdit uITxtNameEdit = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UITxtNameEdit;
            DXBaseLayoutItem uILayoutControlGroupNaLayoutGroup = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup;
            #endregion

            // Type 'Kopi av LØNNSBEREGNINGER. [SelectionStart]8[SelectionLength]17' in 'txtName' text box
            //ValueAsString
            uITxtNameEdit.ValueAsString = this.ChangeNameRosterPlanParams.UITxtNameEditValueAsString;

            // Click 'layoutControlGroupName' LayoutGroup
            Mouse.Click(uILayoutControlGroupNaLayoutGroup, new Point(8, 70));

            // Type 'LØNNSBEREGNINGER_KOPI' in 'txtName' text box
            //ValueAsString
            uITxtNameEdit.ValueAsString = this.ChangeNameRosterPlanParams.UITxtNameEditValueAsString1;

            // Type 'Control + v' in 'txtName' text box
            Keyboard.SendKeys(uITxtNameEdit, this.ChangeNameRosterPlanParams.UITxtNameEditSendKeys, ModifierKeys.Control);
        }
        
        /// <summary>
        /// Check_SysMessageClose - Use 'Check_SysMessageCloseExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Check_SysMessageClose()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UISystemmelding1Window.UISystemmelding1TitleBar.UICloseButton;
            #endregion

            // Verify that the 'ControlType' property of 'Close' button equals 'Button'
            Assert.AreEqual(this.Check_SysMessageCloseExpectedValues.UICloseButtonControlType, uICloseButton.ControlType.ToString());
        }
        
        /// <summary>
        /// CheckAveragePrMonth - Use 'CheckAveragePrMonthParams' to pass parameters into this method.
        /// </summary>
        public void CheckAveragePrMonth()
        {
            #region Variable Declarations
            DXComboBox uICbeCalculationTypeComboBox = this.UIArbeidsplanFASTETILLWindow2.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpFixedPaymentClient.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UICbeCalculationTypeComboBox;
            #endregion

            // Select 'Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.AveragePerMonthCalculationTypeModel' in 'cbeCalculationType' combo box
            //ValueTypeName
            uICbeCalculationTypeComboBox.ValueTypeName = this.CheckAveragePrMonthParams.UICbeCalculationTypeComboBoxValueTypeName;

            // Select 'Gjennomsnitt per. Mnd. [SelectionStart]0' in 'cbeCalculationType' combo box
            //ValueAsString
            uICbeCalculationTypeComboBox.ValueAsString = this.CheckAveragePrMonthParams.UICbeCalculationTypeComboBoxValueAsString;
        }
        
        /// <summary>
        /// CheckWedBeforeIsHolydayOnTurnus - Use 'CheckWedBeforeIsHolydayOnTurnusParams' to pass parameters into this method.
        /// </summary>
        public void CheckWedBeforeIsHolydayOnTurnus()
        {
            #region Variable Declarations
            WinCheckBox uIOnsdagførskjærtorsdaCheckBox1 = this.UIRegelsettWindow.UIItemWindow1.UIItemClient.UIOnsdagførskjærtorsdaCheckBox1;
            #endregion

            // Select 'Onsdag før skjærtorsdag er helligdag i arbeidsplan' check box
            uIOnsdagførskjærtorsdaCheckBox1.Checked = this.CheckWedBeforeIsHolydayOnTurnusParams.UIOnsdagførskjærtorsdaCheckBox1Checked;
        }
        
        /// <summary>
        /// ClearWedBeforeIsHolydayOnTurnus - Use 'ClearWedBeforeIsHolydayOnTurnusParams' to pass parameters into this method.
        /// </summary>
        public void ClearWedBeforeIsHolydayOnTurnus()
        {
            #region Variable Declarations
            WinCheckBox uIOnsdagførskjærtorsdaCheckBox1 = this.UIRegelsettWindow.UIItemWindow1.UIItemClient.UIOnsdagførskjærtorsdaCheckBox1;
            #endregion

            // Clear 'Onsdag før skjærtorsdag er helligdag i arbeidsplan' check box
            uIOnsdagførskjærtorsdaCheckBox1.Checked = this.ClearWedBeforeIsHolydayOnTurnusParams.UIOnsdagførskjærtorsdaCheckBox1Checked;
        }
        
        /// <summary>
        /// ClickChangeDepartmentButton
        /// </summary>
        public void ClickChangeDepartmentButton()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uINivåBarBaseButtonItem = this.UIGatver62030497ASCLAvWindow.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UINivåBarBaseButtonItem;
            #endregion

            // Click 'Nivå' BarBaseButtonItem
            Mouse.Click(uINivåBarBaseButtonItem, new Point(41, 15));
        }
        
        /// <summary>
        /// ClickChangeDepartmentFromRosterPlan
        /// </summary>
        public void ClickChangeDepartmentFromRosterPlan()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINivåRibbonBaseButtonItem = this.UIGatver65041321ASCLAvWindow.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIRosterPlanListCustom.UIPnlGridClient.UIRibbonControlRibbon.UIRpHomeRibbonPage.UIRpgLevelRibbonPageGroup.UINivåRibbonBaseButtonItem;
            #endregion

            // Click 'Nivå' RibbonBaseButtonItem
            Mouse.Click(uINivåRibbonBaseButtonItem, new Point(23, 33));
        }
        
        /// <summary>
        /// ClickPlanTab
        /// </summary>
        public void ClickPlanTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpPlanRibbonPage = this.UIArbeidsplanKopiavLØNWindow.UIRcMenuRibbon.UIRpPlanRibbonPage;
            #endregion

            // Click 'rpPlan' RibbonPage
            Mouse.Click(uIRpPlanRibbonPage, new Point(30, 10));
        }
        
        /// <summary>
        /// ClickPlanTabHelpPlan
        /// </summary>
        public void ClickPlanTabHelpPlan()
        {
            #region Variable Declarations
            DXRibbonPage uIRpPlanRibbonPage = this.UIArbeidsplanHjelpeplaWindow1.UIRcMenuRibbon.UIRpPlanRibbonPage;
            #endregion

            // Click 'rpPlan' RibbonPage
            Mouse.Click(uIRpPlanRibbonPage, new Point(24, 10));
        }
        public void EditRosterplanSettings()
        {
            UICommon.OpenRosterplanSettings(true);
            UIMapVS2017.EditSettings();
            UICommon.ClickOkRosterplanSettings();
        }
        /// <summary>
        /// ClickRecalculate
        /// </summary>
        public void ClickRecalculate()
        {
            UICommon.CalculateFTT(true);
        }

        /// <summary>
        /// CloseAdministrationRuleset
        /// </summary>
        public void CloseAdministrationRuleset()
        {
            #region Variable Declarations
            WinClient uIItemClient1 = this.UIRegelsettWindow.UIItemClient.UIItemClient1;
            #endregion

            // Click client
            Mouse.Click(uIItemClient1, new Point(343, 27));
        }
        
        /// <summary>
        /// DeleteSelectedPlan
        /// </summary>
        public void DeleteSelectedPlan()
        {
            #region Variable Declarations
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIGatver65041321ASCLAvWindow.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIRosterPlanListCustom.UIPnlGridClient.UIRibbonControlRibbon.UIRpHomeRibbonPage.UIRpgPlanRibbonPageGroup.UISlettRibbonBaseButtonItem;
            DXButton uIJAButton = this.UIItemWindow2.UIJAButton;
            #endregion

            // Click 'Slett' RibbonBaseButtonItem
            Mouse.Click(uISlettRibbonBaseButtonItem, new Point(18, 30));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(48, 10));
        }
        
        /// <summary>
        /// Login - Use 'LoginParams' to pass parameters into this method.
        /// </summary>
        public void Login()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UILoginWindow.UIASCLWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UILoginWindow.UIItemWindow.UIItemEdit;
            WinButton uIOKButton = this.UILoginWindow.UILoginWindow1.UILoginClient.UIOKButton;
            #endregion

            // Type 'ASCL' in text box
            uIItemEdit.Text = this.LoginParams.UIItemEditText;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit, this.LoginParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '********' in text box
            Keyboard.SendKeys(uIItemEdit1, this.LoginParams.UIItemEditSendKeys1, true);

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(27, 16));
        }
        
        /// <summary>
        /// RemoveCheckForDraftRosterplanCopy - Use 'RemoveCheckForDraftRosterplanCopyParams' to pass parameters into this method.
        /// </summary>
        public void RemoveCheckForDraftRosterplanCopy()
        {
            #region Variable Declarations
            DXCheckBox uIChkKladdCheckBox = this.UINyarbeidsplanWindow.UIPnlMainClient1.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIChkKladdCheckBox;
            #endregion

            // Clear 'chkKladd' check box
            uIChkKladdCheckBox.Checked = this.RemoveCheckForDraftRosterplanCopyParams.UIChkKladdCheckBoxChecked;
        }
        
        #region Properties
        public virtual ChangeNameRosterPlanParams ChangeNameRosterPlanParams
        {
            get
            {
                if ((this.mChangeNameRosterPlanParams == null))
                {
                    this.mChangeNameRosterPlanParams = new ChangeNameRosterPlanParams();
                }
                return this.mChangeNameRosterPlanParams;
            }
        }
        
        public virtual Check_SysMessageCloseExpectedValues Check_SysMessageCloseExpectedValues
        {
            get
            {
                if ((this.mCheck_SysMessageCloseExpectedValues == null))
                {
                    this.mCheck_SysMessageCloseExpectedValues = new Check_SysMessageCloseExpectedValues();
                }
                return this.mCheck_SysMessageCloseExpectedValues;
            }
        }
        
        public virtual CheckAveragePrMonthParams CheckAveragePrMonthParams
        {
            get
            {
                if ((this.mCheckAveragePrMonthParams == null))
                {
                    this.mCheckAveragePrMonthParams = new CheckAveragePrMonthParams();
                }
                return this.mCheckAveragePrMonthParams;
            }
        }
        
        public virtual CheckFixedExtraDataExpectedValues CheckFixedExtraDataExpectedValues
        {
            get
            {
                if ((this.mCheckFixedExtraDataExpectedValues == null))
                {
                    this.mCheckFixedExtraDataExpectedValues = new CheckFixedExtraDataExpectedValues();
                }
                return this.mCheckFixedExtraDataExpectedValues;
            }
        }
        
        public virtual CheckWedBeforeIsHolydayOnTurnusParams CheckWedBeforeIsHolydayOnTurnusParams
        {
            get
            {
                if ((this.mCheckWedBeforeIsHolydayOnTurnusParams == null))
                {
                    this.mCheckWedBeforeIsHolydayOnTurnusParams = new CheckWedBeforeIsHolydayOnTurnusParams();
                }
                return this.mCheckWedBeforeIsHolydayOnTurnusParams;
            }
        }
        
        public virtual ClearWedBeforeIsHolydayOnTurnusParams ClearWedBeforeIsHolydayOnTurnusParams
        {
            get
            {
                if ((this.mClearWedBeforeIsHolydayOnTurnusParams == null))
                {
                    this.mClearWedBeforeIsHolydayOnTurnusParams = new ClearWedBeforeIsHolydayOnTurnusParams();
                }
                return this.mClearWedBeforeIsHolydayOnTurnusParams;
            }
        }
        
        public virtual LoginParams LoginParams
        {
            get
            {
                if ((this.mLoginParams == null))
                {
                    this.mLoginParams = new LoginParams();
                }
                return this.mLoginParams;
            }
        }
        
        public virtual RemoveCheckForDraftRosterplanCopyParams RemoveCheckForDraftRosterplanCopyParams
        {
            get
            {
                if ((this.mRemoveCheckForDraftRosterplanCopyParams == null))
                {
                    this.mRemoveCheckForDraftRosterplanCopyParams = new RemoveCheckForDraftRosterplanCopyParams();
                }
                return this.mRemoveCheckForDraftRosterplanCopyParams;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UISystemmelding1Window UISystemmelding1Window
        {
            get
            {
                if ((this.mUISystemmelding1Window == null))
                {
                    this.mUISystemmelding1Window = new UISystemmelding1Window();
                }
                return this.mUISystemmelding1Window;
            }
        }
        
        public UIGatver62030497ASCLAvWindow UIGatver62030497ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver62030497ASCLAvWindow == null))
                {
                    this.mUIGatver62030497ASCLAvWindow = new UIGatver62030497ASCLAvWindow();
                }
                return this.mUIGatver62030497ASCLAvWindow;
            }
        }
        
        public UINivåWindow UINivåWindow
        {
            get
            {
                if ((this.mUINivåWindow == null))
                {
                    this.mUINivåWindow = new UINivåWindow();
                }
                return this.mUINivåWindow;
            }
        }
        
        public UIGatver62030497ASCLAvWindow1 UIGatver62030497ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver62030497ASCLAvWindow1 == null))
                {
                    this.mUIGatver62030497ASCLAvWindow1 = new UIGatver62030497ASCLAvWindow1();
                }
                return this.mUIGatver62030497ASCLAvWindow1;
            }
        }
        
        public UIArbeidsplanLØNNSBEREWindow UIArbeidsplanLØNNSBEREWindow
        {
            get
            {
                if ((this.mUIArbeidsplanLØNNSBEREWindow == null))
                {
                    this.mUIArbeidsplanLØNNSBEREWindow = new UIArbeidsplanLØNNSBEREWindow();
                }
                return this.mUIArbeidsplanLØNNSBEREWindow;
            }
        }
        
        public UINyarbeidsplanWindow UINyarbeidsplanWindow
        {
            get
            {
                if ((this.mUINyarbeidsplanWindow == null))
                {
                    this.mUINyarbeidsplanWindow = new UINyarbeidsplanWindow();
                }
                return this.mUINyarbeidsplanWindow;
            }
        }
        
        public UIGT3999InformasjonWindow UIGT3999InformasjonWindow
        {
            get
            {
                if ((this.mUIGT3999InformasjonWindow == null))
                {
                    this.mUIGT3999InformasjonWindow = new UIGT3999InformasjonWindow();
                }
                return this.mUIGT3999InformasjonWindow;
            }
        }
        
        public UIArbeidsplanKopiavLØNWindow UIArbeidsplanKopiavLØNWindow
        {
            get
            {
                if ((this.mUIArbeidsplanKopiavLØNWindow == null))
                {
                    this.mUIArbeidsplanKopiavLØNWindow = new UIArbeidsplanKopiavLØNWindow();
                }
                return this.mUIArbeidsplanKopiavLØNWindow;
            }
        }
        
        public UIArbeidsplanInnstilliWindow1 UIArbeidsplanInnstilliWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanInnstilliWindow1 == null))
                {
                    this.mUIArbeidsplanInnstilliWindow1 = new UIArbeidsplanInnstilliWindow1();
                }
                return this.mUIArbeidsplanInnstilliWindow1;
            }
        }
        
        //public UIItemWindow3 UIItemWindow
        //{
        //    get
        //    {
        //        if ((this.mUIItemWindow == null))
        //        {
        //            this.mUIItemWindow = new UIItemWindow3();
        //        }
        //        return this.mUIItemWindow;
        //    }
        //}
        
        public UIIverksetteWindow UIIverksetteWindow
        {
            get
            {
                if ((this.mUIIverksetteWindow == null))
                {
                    this.mUIIverksetteWindow = new UIIverksetteWindow();
                }
                return this.mUIIverksetteWindow;
            }
        }
        
        public UIEndreiverksettingspeWindow UIEndreiverksettingspeWindow
        {
            get
            {
                if ((this.mUIEndreiverksettingspeWindow == null))
                {
                    this.mUIEndreiverksettingspeWindow = new UIEndreiverksettingspeWindow();
                }
                return this.mUIEndreiverksettingspeWindow;
            }
        }
        
        public UIRPL4044InformasjonWindow UIRPL4044InformasjonWindow
        {
            get
            {
                if ((this.mUIRPL4044InformasjonWindow == null))
                {
                    this.mUIRPL4044InformasjonWindow = new UIRPL4044InformasjonWindow();
                }
                return this.mUIRPL4044InformasjonWindow;
            }
        }
        
        public UILønnsberegningvediveWindow UILønnsberegningvediveWindow
        {
            get
            {
                if ((this.mUILønnsberegningvediveWindow == null))
                {
                    this.mUILønnsberegningvediveWindow = new UILønnsberegningvediveWindow();
                }
                return this.mUILønnsberegningvediveWindow;
            }
        }
        
        public UISletteiverksettingWindow UISletteiverksettingWindow
        {
            get
            {
                if ((this.mUISletteiverksettingWindow == null))
                {
                    this.mUISletteiverksettingWindow = new UISletteiverksettingWindow();
                }
                return this.mUISletteiverksettingWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIRPL24003InformasjonWindow UIRPL24003InformasjonWindow
        {
            get
            {
                if ((this.mUIRPL24003InformasjonWindow == null))
                {
                    this.mUIRPL24003InformasjonWindow = new UIRPL24003InformasjonWindow();
                }
                return this.mUIRPL24003InformasjonWindow;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIGT4000BekreftWindow UIGT4000BekreftWindow
        {
            get
            {
                if ((this.mUIGT4000BekreftWindow == null))
                {
                    this.mUIGT4000BekreftWindow = new UIGT4000BekreftWindow();
                }
                return this.mUIGT4000BekreftWindow;
            }
        }
        
        public UIAnsatteiArbeidsplanWindow UIAnsatteiArbeidsplanWindow
        {
            get
            {
                if ((this.mUIAnsatteiArbeidsplanWindow == null))
                {
                    this.mUIAnsatteiArbeidsplanWindow = new UIAnsatteiArbeidsplanWindow();
                }
                return this.mUIAnsatteiArbeidsplanWindow;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UIGatver63030730ASCLAvWindow UIGatver63030730ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver63030730ASCLAvWindow == null))
                {
                    this.mUIGatver63030730ASCLAvWindow = new UIGatver63030730ASCLAvWindow();
                }
                return this.mUIGatver63030730ASCLAvWindow;
            }
        }
        
        public UIRegelsettWindow UIRegelsettWindow
        {
            get
            {
                if ((this.mUIRegelsettWindow == null))
                {
                    this.mUIRegelsettWindow = new UIRegelsettWindow();
                }
                return this.mUIRegelsettWindow;
            }
        }
        
        public UIGatver63030730ASCLAvWindow1 UIGatver63030730ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver63030730ASCLAvWindow1 == null))
                {
                    this.mUIGatver63030730ASCLAvWindow1 = new UIGatver63030730ASCLAvWindow1();
                }
                return this.mUIGatver63030730ASCLAvWindow1;
            }
        }
        
        public UIVelgradWindow UIVelgradWindow
        {
            get
            {
                if ((this.mUIVelgradWindow == null))
                {
                    this.mUIVelgradWindow = new UIVelgradWindow();
                }
                return this.mUIVelgradWindow;
            }
        }
        
        public UIGatver63030869ASCLAvWindow UIGatver63030869ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver63030869ASCLAvWindow == null))
                {
                    this.mUIGatver63030869ASCLAvWindow = new UIGatver63030869ASCLAvWindow();
                }
                return this.mUIGatver63030869ASCLAvWindow;
            }
        }
        
        public UIGatver63030891ASCLAvWindow UIGatver63030891ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver63030891ASCLAvWindow == null))
                {
                    this.mUIGatver63030891ASCLAvWindow = new UIGatver63030891ASCLAvWindow();
                }
                return this.mUIGatver63030891ASCLAvWindow;
            }
        }
        
        public UINyhjelpeplanWindow UINyhjelpeplanWindow
        {
            get
            {
                if ((this.mUINyhjelpeplanWindow == null))
                {
                    this.mUINyhjelpeplanWindow = new UINyhjelpeplanWindow();
                }
                return this.mUINyhjelpeplanWindow;
            }
        }
        
        public UIArbeidsplanHjelpeplaWindow UIArbeidsplanHjelpeplaWindow
        {
            get
            {
                if ((this.mUIArbeidsplanHjelpeplaWindow == null))
                {
                    this.mUIArbeidsplanHjelpeplaWindow = new UIArbeidsplanHjelpeplaWindow();
                }
                return this.mUIArbeidsplanHjelpeplaWindow;
            }
        }
        
        public UIItemWindow32 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow32();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIArbeidsplanHjelpeplaWindow1 UIArbeidsplanHjelpeplaWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanHjelpeplaWindow1 == null))
                {
                    this.mUIArbeidsplanHjelpeplaWindow1 = new UIArbeidsplanHjelpeplaWindow1();
                }
                return this.mUIArbeidsplanHjelpeplaWindow1;
            }
        }
        
        public UIGatver63030995ASCLAvWindow UIGatver63030995ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver63030995ASCLAvWindow == null))
                {
                    this.mUIGatver63030995ASCLAvWindow = new UIGatver63030995ASCLAvWindow();
                }
                return this.mUIGatver63030995ASCLAvWindow;
            }
        }
        
        public UIItemWindow42 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow42();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow52 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow52();
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIArbeidsplanFASTETILLWindow UIArbeidsplanFASTETILLWindow
        {
            get
            {
                if ((this.mUIArbeidsplanFASTETILLWindow == null))
                {
                    this.mUIArbeidsplanFASTETILLWindow = new UIArbeidsplanFASTETILLWindow();
                }
                return this.mUIArbeidsplanFASTETILLWindow;
            }
        }
        
        public UIGatver63031120ASCLAvWindow UIGatver63031120ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver63031120ASCLAvWindow == null))
                {
                    this.mUIGatver63031120ASCLAvWindow = new UIGatver63031120ASCLAvWindow();
                }
                return this.mUIGatver63031120ASCLAvWindow;
            }
        }
        
        public UIGT2004AdvarselWindow UIGT2004AdvarselWindow
        {
            get
            {
                if ((this.mUIGT2004AdvarselWindow == null))
                {
                    this.mUIGT2004AdvarselWindow = new UIGT2004AdvarselWindow();
                }
                return this.mUIGT2004AdvarselWindow;
            }
        }
        
        public UIResultaterfrasystemsWindow UIResultaterfrasystemsWindow
        {
            get
            {
                if ((this.mUIResultaterfrasystemsWindow == null))
                {
                    this.mUIResultaterfrasystemsWindow = new UIResultaterfrasystemsWindow();
                }
                return this.mUIResultaterfrasystemsWindow;
            }
        }
        
        public UIGatver65041130ASCLAvWindow UIGatver65041130ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65041130ASCLAvWindow == null))
                {
                    this.mUIGatver65041130ASCLAvWindow = new UIGatver65041130ASCLAvWindow();
                }
                return this.mUIGatver65041130ASCLAvWindow;
            }
        }
        
        public UIGatver65041253ASCLAvWindow UIGatver65041253ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65041253ASCLAvWindow == null))
                {
                    this.mUIGatver65041253ASCLAvWindow = new UIGatver65041253ASCLAvWindow();
                }
                return this.mUIGatver65041253ASCLAvWindow;
            }
        }
        
        public UIGatver65041321ASCLAvWindow UIGatver65041321ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65041321ASCLAvWindow == null))
                {
                    this.mUIGatver65041321ASCLAvWindow = new UIGatver65041321ASCLAvWindow();
                }
                return this.mUIGatver65041321ASCLAvWindow;
            }
        }
        
        public UIArbeidsplanFASTETILLWindow1 UIArbeidsplanFASTETILLWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanFASTETILLWindow1 == null))
                {
                    this.mUIArbeidsplanFASTETILLWindow1 = new UIArbeidsplanFASTETILLWindow1();
                }
                return this.mUIArbeidsplanFASTETILLWindow1;
            }
        }
        
        public UIForhåndsvisningWindow UIForhåndsvisningWindow
        {
            get
            {
                if ((this.mUIForhåndsvisningWindow == null))
                {
                    this.mUIForhåndsvisningWindow = new UIForhåndsvisningWindow();
                }
                return this.mUIForhåndsvisningWindow;
            }
        }
        
        public UIItemWindow61 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow61();
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        
        public UIItemWindow71 UIItemWindow7
        {
            get
            {
                if ((this.mUIItemWindow7 == null))
                {
                    this.mUIItemWindow7 = new UIItemWindow71();
                }
                return this.mUIItemWindow7;
            }
        }
        
        public UIArbeidsplanFASTETILLWindow2 UIArbeidsplanFASTETILLWindow2
        {
            get
            {
                if ((this.mUIArbeidsplanFASTETILLWindow2 == null))
                {
                    this.mUIArbeidsplanFASTETILLWindow2 = new UIArbeidsplanFASTETILLWindow2();
                }
                return this.mUIArbeidsplanFASTETILLWindow2;
            }
        }
        #endregion
        
        #region Fields
        private ChangeNameRosterPlanParams mChangeNameRosterPlanParams;
        
        private Check_SysMessageCloseExpectedValues mCheck_SysMessageCloseExpectedValues;
        
        private CheckAveragePrMonthParams mCheckAveragePrMonthParams;
        
        private CheckFixedExtraDataExpectedValues mCheckFixedExtraDataExpectedValues;
        
        private CheckWedBeforeIsHolydayOnTurnusParams mCheckWedBeforeIsHolydayOnTurnusParams;
        
        private ClearWedBeforeIsHolydayOnTurnusParams mClearWedBeforeIsHolydayOnTurnusParams;
        
        private LoginParams mLoginParams;
        
        private RemoveCheckForDraftRosterplanCopyParams mRemoveCheckForDraftRosterplanCopyParams;
        
        private UILoginWindow mUILoginWindow;
        
        private UISystemmelding1Window mUISystemmelding1Window;
        
        private UIGatver62030497ASCLAvWindow mUIGatver62030497ASCLAvWindow;
        
        private UINivåWindow mUINivåWindow;
        
        private UIGatver62030497ASCLAvWindow1 mUIGatver62030497ASCLAvWindow1;
        
        private UIArbeidsplanLØNNSBEREWindow mUIArbeidsplanLØNNSBEREWindow;
        
        private UINyarbeidsplanWindow mUINyarbeidsplanWindow;
        
        private UIGT3999InformasjonWindow mUIGT3999InformasjonWindow;
        
        private UIArbeidsplanKopiavLØNWindow mUIArbeidsplanKopiavLØNWindow;
        
        private UIArbeidsplanInnstilliWindow1 mUIArbeidsplanInnstilliWindow1;
        
        //private UIItemWindow3 mUIItemWindow;
        
        private UIIverksetteWindow mUIIverksetteWindow;
        
        private UIEndreiverksettingspeWindow mUIEndreiverksettingspeWindow;
        
        private UIRPL4044InformasjonWindow mUIRPL4044InformasjonWindow;
        
        private UILønnsberegningvediveWindow mUILønnsberegningvediveWindow;
        
        private UISletteiverksettingWindow mUISletteiverksettingWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIRPL24003InformasjonWindow mUIRPL24003InformasjonWindow;
        
        private UIItemWindow21 mUIItemWindow2;
        
        private UIGT4000BekreftWindow mUIGT4000BekreftWindow;
        
        private UIAnsatteiArbeidsplanWindow mUIAnsatteiArbeidsplanWindow;
        
        private UIWpfWindow mUIWpfWindow;
        
        private UIGatver63030730ASCLAvWindow mUIGatver63030730ASCLAvWindow;
        
        private UIRegelsettWindow mUIRegelsettWindow;
        
        private UIGatver63030730ASCLAvWindow1 mUIGatver63030730ASCLAvWindow1;
        
        private UIVelgradWindow mUIVelgradWindow;
        
        private UIGatver63030869ASCLAvWindow mUIGatver63030869ASCLAvWindow;
        
        private UIGatver63030891ASCLAvWindow mUIGatver63030891ASCLAvWindow;
        
        private UINyhjelpeplanWindow mUINyhjelpeplanWindow;
        
        private UIArbeidsplanHjelpeplaWindow mUIArbeidsplanHjelpeplaWindow;
        
        private UIItemWindow32 mUIItemWindow3;
        
        private UIArbeidsplanHjelpeplaWindow1 mUIArbeidsplanHjelpeplaWindow1;
        
        private UIGatver63030995ASCLAvWindow mUIGatver63030995ASCLAvWindow;
        
        private UIItemWindow42 mUIItemWindow4;
        
        private UIItemWindow52 mUIItemWindow5;
        
        private UIArbeidsplanFASTETILLWindow mUIArbeidsplanFASTETILLWindow;
        
        private UIGatver63031120ASCLAvWindow mUIGatver63031120ASCLAvWindow;
        
        private UIGT2004AdvarselWindow mUIGT2004AdvarselWindow;
        
        private UIResultaterfrasystemsWindow mUIResultaterfrasystemsWindow;
        
        private UIGatver65041130ASCLAvWindow mUIGatver65041130ASCLAvWindow;
        
        private UIGatver65041253ASCLAvWindow mUIGatver65041253ASCLAvWindow;
        
        private UIGatver65041321ASCLAvWindow mUIGatver65041321ASCLAvWindow;
        
        private UIArbeidsplanFASTETILLWindow1 mUIArbeidsplanFASTETILLWindow1;
        
        private UIForhåndsvisningWindow mUIForhåndsvisningWindow;
        
        private UIItemWindow61 mUIItemWindow6;
        
        private UISaveAsWindow mUISaveAsWindow;
        
        private UIItemWindow71 mUIItemWindow7;
        
        private UIArbeidsplanFASTETILLWindow2 mUIArbeidsplanFASTETILLWindow2;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangeNameRosterPlan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ChangeNameRosterPlanParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Kopi av LØNNSBEREGNINGER. [SelectionStart]8[SelectionLength]17' in 'txtName' text box
        /// </summary>
        public string UITxtNameEditValueAsString = "Kopi av LØNNSBEREGNINGER. [SelectionStart]8[SelectionLength]17";
        
        /// <summary>
        /// Type 'LØNNSBEREGNINGER_KOPI' in 'txtName' text box
        /// </summary>
        public string UITxtNameEditValueAsString1 = "LØNNSBEREGNINGER_KOPI";
        
        /// <summary>
        /// Type 'Control + v' in 'txtName' text box
        /// </summary>
        public string UITxtNameEditSendKeys = "v";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Check_SysMessageClose'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class Check_SysMessageCloseExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Close' button equals 'Button'
        /// </summary>
        public string UICloseButtonControlType = "Button";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAveragePrMonth'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckAveragePrMonthParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.AveragePerMonthCalculationTypeModel' in 'cbeCalculationType' combo box
        /// </summary>
        public string UICbeCalculationTypeComboBoxValueTypeName = "Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.AveragePerMonth" +
            "CalculationTypeModel";
        
        /// <summary>
        /// Select 'Gjennomsnitt per. Mnd. [SelectionStart]0' in 'cbeCalculationType' combo box
        /// </summary>
        public string UICbeCalculationTypeComboBoxValueAsString = "Gjennomsnitt per. Mnd. [SelectionStart]0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFixedExtraData'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckFixedExtraDataExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ClassName' property of 'gcFTT' table equals 'GSGridControl'
        /// </summary>
        public string UIGcFTTTableClassName = "GSGridControl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWedBeforeIsHolydayOnTurnus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckWedBeforeIsHolydayOnTurnusParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Onsdag før skjærtorsdag er helligdag i arbeidsplan' check box
        /// </summary>
        public bool UIOnsdagførskjærtorsdaCheckBox1Checked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClearWedBeforeIsHolydayOnTurnus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ClearWedBeforeIsHolydayOnTurnusParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Onsdag før skjærtorsdag er helligdag i arbeidsplan' check box
        /// </summary>
        public bool UIOnsdagførskjærtorsdaCheckBox1Checked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Login'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class LoginParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'ASCL' in text box
        /// </summary>
        public string UIItemEditText = "ASCL";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "e3fAP5nj0xU/fLLlsMnLN8doTlYKY9Jg";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RemoveCheckForDraftRosterplanCopy'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RemoveCheckForDraftRosterplanCopyParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'chkKladd' check box
        /// </summary>
        public bool UIChkKladdCheckBoxChecked = false;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmLogin";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UILoginWindow1 UILoginWindow1
        {
            get
            {
                if ((this.mUILoginWindow1 == null))
                {
                    this.mUILoginWindow1 = new UILoginWindow1(this);
                }
                return this.mUILoginWindow1;
            }
        }
        
        public UIASCLWindow UIASCLWindow
        {
            get
            {
                if ((this.mUIASCLWindow == null))
                {
                    this.mUIASCLWindow = new UIASCLWindow(this);
                }
                return this.mUIASCLWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UILoginWindow1 mUILoginWindow1;
        
        private UIASCLWindow mUIASCLWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginWindow1 : WinWindow
    {
        
        public UILoginWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TTabSheet";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UILoginClient UILoginClient
        {
            get
            {
                if ((this.mUILoginClient == null))
                {
                    this.mUILoginClient = new UILoginClient(this);
                }
                return this.mUILoginClient;
            }
        }
        #endregion
        
        #region Fields
        private UILoginClient mUILoginClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginClient : WinClient
    {
        
        public UILoginClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Login";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIASCLWindow : WinWindow
    {
        
        public UIASCLWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ASCL";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1Window : WinWindow
    {
        
        public UISystemmelding1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Systemmelding (1)";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmSystemMessage";
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UISystemmelding1TitleBar UISystemmelding1TitleBar
        {
            get
            {
                if ((this.mUISystemmelding1TitleBar == null))
                {
                    this.mUISystemmelding1TitleBar = new UISystemmelding1TitleBar(this);
                }
                return this.mUISystemmelding1TitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        
        private UISystemmelding1TitleBar mUISystemmelding1TitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public UISystemmelding1Client UISystemmelding1Client
        {
            get
            {
                if ((this.mUISystemmelding1Client == null))
                {
                    this.mUISystemmelding1Client = new UISystemmelding1Client(this);
                }
                return this.mUISystemmelding1Client;
            }
        }
        #endregion
        
        #region Fields
        private UISystemmelding1Client mUISystemmelding1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1Client : WinClient
    {
        
        public UISystemmelding1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Systemmelding (1)");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1TitleBar : WinTitleBar
    {
        
        public UISystemmelding1TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Systemmelding (1)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver62030497ASCLAvWindow : WinWindow
    {
        
        public UIGatver62030497ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar : DXMenu
    {
        
        public UIMainmenuMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UINivåBarBaseButtonItem
        {
            get
            {
                if ((this.mUINivåBarBaseButtonItem == null))
                {
                    this.mUINivåBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDepartment";
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUINivåBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINivåBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUINivåBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINivåWindow : DXWindow
    {
        
        public UINivåWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Nivå";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        
        public UIGSPanelControlClient UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom mUIGsLayoutControl1Custom;
        
        private UIGSPanelControlClient mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControl1Custom : DXTestControl
    {
        
        public UIGsLayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup1LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayDepartmentsLayoutControlItem UILayDepartmentsLayoutControlItem
        {
            get
            {
                if ((this.mUILayDepartmentsLayoutControlItem == null))
                {
                    this.mUILayDepartmentsLayoutControlItem = new UILayDepartmentsLayoutControlItem(this);
                }
                return this.mUILayDepartmentsLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayDepartmentsLayoutControlItem mUILayDepartmentsLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayDepartmentsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayDepartmentsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LayDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGbDepartmentsClient UIGbDepartmentsClient
        {
            get
            {
                if ((this.mUIGbDepartmentsClient == null))
                {
                    this.mUIGbDepartmentsClient = new UIGbDepartmentsClient(this);
                }
                return this.mUIGbDepartmentsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGbDepartmentsClient mUIGbDepartmentsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGbDepartmentsClient : DXTestControl
    {
        
        public UIGbDepartmentsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gbDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGDepartmentsTable UIGDepartmentsTable
        {
            get
            {
                if ((this.mUIGDepartmentsTable == null))
                {
                    this.mUIGDepartmentsTable = new UIGDepartmentsTable(this);
                }
                return this.mUIGDepartmentsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGDepartmentsTable mUIGDepartmentsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGDepartmentsTable : DXGrid
    {
        
        public UIGDepartmentsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem5090LønnsberegniCell
        {
            get
            {
                if ((this.mUIItem5090LønnsberegniCell == null))
                {
                    this.mUIItem5090LønnsberegniCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5090LønnsberegniCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartmentsGridControlCell[View]gvDepartments[Row]37[Column]cDepName";
                    this.mUIItem5090LønnsberegniCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5090LønnsberegniCell.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIItem5090LønnsberegniCell;
            }
        }
        
        public DXCell UIItem5110DiverseCell
        {
            get
            {
                if ((this.mUIItem5110DiverseCell == null))
                {
                    this.mUIItem5110DiverseCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5110DiverseCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartmentsGridControlCell[View]gvDepartments[Row]39[Column]cDepName";
                    this.mUIItem5110DiverseCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5110DiverseCell.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIItem5110DiverseCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem5090LønnsberegniCell;
        
        private DXCell mUIItem5110DiverseCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient : DXTestControl
    {
        
        public UIGSPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver62030497ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver62030497ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPcMainPanelClient UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        
        public UIGatver62030497ASCLAvTitleBar UIGatver62030497ASCLAvTitleBar
        {
            get
            {
                if ((this.mUIGatver62030497ASCLAvTitleBar == null))
                {
                    this.mUIGatver62030497ASCLAvTitleBar = new UIGatver62030497ASCLAvTitleBar(this);
                }
                return this.mUIGatver62030497ASCLAvTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        
        private UIPcMainPanelClient mUIPcMainPanelClient;
        
        private UIGatver62030497ASCLAvTitleBar mUIGatver62030497ASCLAvTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver62030497ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver62030497ASCLAvClient == null))
                {
                    this.mUIGatver62030497ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver62030497ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver62030497ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver62030497ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient : DXTestControl
    {
        
        public UIPcMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList : DXTestControl
    {
        
        public UITcPanListsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient : DXTestControl
    {
        
        public UITpRosterPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        
        public UIPnlButtonsClient UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient mUIPnlGridClient;
        
        private UIPnlButtonsClient mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient : DXTestControl
    {
        
        public UIPnlGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlansTable UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlansTable mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlansTable : DXGrid
    {
        
        public UIGcRosterPlansTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem5090LønnsberegniCell
        {
            get
            {
                if ((this.mUIItem5090LønnsberegniCell == null))
                {
                    this.mUIItem5090LønnsberegniCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5090LønnsberegniCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]0[Column]gcolDepartment";
                    this.mUIItem5090LønnsberegniCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5090LønnsberegniCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem5090LønnsberegniCell;
            }
        }
        
        public DXCell UIKopiavLØNNSBEREGNINGCell
        {
            get
            {
                if ((this.mUIKopiavLØNNSBEREGNINGCell == null))
                {
                    this.mUIKopiavLØNNSBEREGNINGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKopiavLØNNSBEREGNINGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]0[Column]gcolPlan";
                    this.mUIKopiavLØNNSBEREGNINGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKopiavLØNNSBEREGNINGCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIKopiavLØNNSBEREGNINGCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem5090LønnsberegniCell;
        
        private DXCell mUIKopiavLØNNSBEREGNINGCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient : DXTestControl
    {
        
        public UIPnlButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UIEndreButton
        {
            get
            {
                if ((this.mUIEndreButton == null))
                {
                    this.mUIEndreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEdit";
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndreButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEndreButton;
            }
        }
        
        public DXButton UISlettButton
        {
            get
            {
                if ((this.mUISlettButton == null))
                {
                    this.mUISlettButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISlettButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUISlettButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUISlettButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEndreButton;
        
        private DXButton mUISlettButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver62030497ASCLAvTitleBar : WinTitleBar
    {
        
        public UIGatver62030497ASCLAvTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanLØNNSBEREWindow : DXWindow
    {
        
        public UIArbeidsplanLØNNSBEREWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanCopyRosterRibbonPageGroup UIRpgPlanCopyRosterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanCopyRosterRibbonPageGroup == null))
                {
                    this.mUIRpgPlanCopyRosterRibbonPageGroup = new UIRpgPlanCopyRosterRibbonPageGroup(this);
                }
                return this.mUIRpgPlanCopyRosterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanCopyRosterRibbonPageGroup mUIRpgPlanCopyRosterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanCopyRosterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanCopyRosterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlanCopyRoster";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINyarbeidsplanRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINyarbeidsplanRibbonBaseButtonItem == null))
                {
                    this.mUINyarbeidsplanRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINyarbeidsplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCopyRosterPlan";
                    this.mUINyarbeidsplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINyarbeidsplanRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUINyarbeidsplanRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINyarbeidsplanRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINyarbeidsplanWindow : DXWindow
    {
        
        public UINyarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        
        public UIPnlButtonsClient1 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient1(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        
        public UIPnlMainClient1 UIPnlMainClient1
        {
            get
            {
                if ((this.mUIPnlMainClient1 == null))
                {
                    this.mUIPnlMainClient1 = new UIPnlMainClient1(this);
                }
                return this.mUIPnlMainClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        
        private UIPnlButtonsClient1 mUIPnlButtonsClient;
        
        private UIPnlMainClient1 mUIPnlMainClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControlMainCustom : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNaLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNeLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainInfoLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainInfoClient : DXTestControl
    {
        
        public UIPnlMainInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public DXTextEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtName";
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtNameEdit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private DXTextEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient1 : DXTestControl
    {
        
        public UIPnlButtonsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainClient1 : DXTestControl
    {
        
        public UIPnlMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom1 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom1(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom1 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControlMainCustom1 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup1 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup1 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNaLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup1 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup1 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNeLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem1 UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem1(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem1 mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainInfoLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient1 UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient1(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient1 mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainInfoClient1 : DXTestControl
    {
        
        public UIPnlMainInfoClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkKladdCheckBox
        {
            get
            {
                if ((this.mUIChkKladdCheckBox == null))
                {
                    this.mUIChkKladdCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkKladd";
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkKladdCheckBox.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIChkKladdCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkKladdCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT3999InformasjonWindow : DXWindow
    {
        
        public UIGT3999InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-3999 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-3999 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("GT-3999 - Informasjon");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanKopiavLØNWindow : DXWindow
    {
        
        public UIArbeidsplanKopiavLØNWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon1 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon1(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon1 mUIRcMenuRibbon;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon1 : DXRibbon
    {
        
        public UIRcMenuRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage1 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage1(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage1 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage1 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        
        public UIGrpEffectuateRevolviRibbonPageGroup UIGrpEffectuateRevolviRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateRevolviRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateRevolviRibbonPageGroup = new UIGrpEffectuateRevolviRibbonPageGroup(this);
                }
                return this.mUIGrpEffectuateRevolviRibbonPageGroup;
            }
        }
        
        public UIRpgPlanCopyRosterRibbonPageGroup1 UIRpgPlanCopyRosterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanCopyRosterRibbonPageGroup == null))
                {
                    this.mUIRpgPlanCopyRosterRibbonPageGroup = new UIRpgPlanCopyRosterRibbonPageGroup1(this);
                }
                return this.mUIRpgPlanCopyRosterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup mUIRpgPlanRibbonPageGroup;
        
        private UIGrpEffectuateRevolviRibbonPageGroup mUIGrpEffectuateRevolviRibbonPageGroup;
        
        private UIRpgPlanCopyRosterRibbonPageGroup1 mUIRpgPlanCopyRosterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIInnstillingerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIInnstillingerRibbonBaseButtonItem == null))
                {
                    this.mUIInnstillingerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSettings";
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIInnstillingerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIInnstillingerRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIAnsatteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsatteRibbonBaseButtonItem == null))
                {
                    this.mUIAnsatteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsatteRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIInnstillingerRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIAnsatteRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEffectuateRevolviRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateRevolviRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        
        public DXRibbonItem UISlettiverksettingRibbonItem
        {
            get
            {
                if ((this.mUISlettiverksettingRibbonItem == null))
                {
                    this.mUISlettiverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuDeleteEff";
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUISlettiverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISlettiverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        
        private DXRibbonItem mUISlettiverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanCopyRosterRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgPlanCopyRosterRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlanCopyRoster";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINyhjelpeplanRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINyhjelpeplanRibbonBaseButtonItem == null))
                {
                    this.mUINyhjelpeplanRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINyhjelpeplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCopyHelpRoster";
                    this.mUINyhjelpeplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINyhjelpeplanRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUINyhjelpeplanRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINyhjelpeplanRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanInnstilliWindow1 : DXWindow
    {
        
        public UIArbeidsplanInnstilliWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan - Innstillinger";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITcDataTabList UITcDataTabList
        {
            get
            {
                if ((this.mUITcDataTabList == null))
                {
                    this.mUITcDataTabList = new UITcDataTabList(this);
                }
                return this.mUITcDataTabList;
            }
        }
        
        public UIGSPanelControlClient1 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient1(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UITcDataTabList mUITcDataTabList;
        
        private UIGSPanelControlClient1 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcDataTabList : DXTestControl
    {
        
        public UITcDataTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcData";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITpConfigurationClient UITpConfigurationClient
        {
            get
            {
                if ((this.mUITpConfigurationClient == null))
                {
                    this.mUITpConfigurationClient = new UITpConfigurationClient(this);
                }
                return this.mUITpConfigurationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpConfigurationClient mUITpConfigurationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpConfigurationClient : DXTestControl
    {
        
        public UITpConfigurationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpConfiguration";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UIPaCenterClient UIPaCenterClient
        {
            get
            {
                if ((this.mUIPaCenterClient == null))
                {
                    this.mUIPaCenterClient = new UIPaCenterClient(this);
                }
                return this.mUIPaCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaCenterClient mUIPaCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPaCenterClient : DXTestControl
    {
        
        public UIPaCenterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public DXCheckBox UIChkNighShiftOnStartDCheckBox
        {
            get
            {
                if ((this.mUIChkNighShiftOnStartDCheckBox == null))
                {
                    this.mUIChkNighShiftOnStartDCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkNighShiftOnStartDCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkNighShiftOnStartDay";
                    this.mUIChkNighShiftOnStartDCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkNighShiftOnStartDCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkNighShiftOnStartDCheckBox;
            }
        }
        
        public UILeDisplayStartDateLookUpEdit UILeDisplayStartDateLookUpEdit
        {
            get
            {
                if ((this.mUILeDisplayStartDateLookUpEdit == null))
                {
                    this.mUILeDisplayStartDateLookUpEdit = new UILeDisplayStartDateLookUpEdit(this);
                }
                return this.mUILeDisplayStartDateLookUpEdit;
            }
        }
        
        public DXCheckBox UIChkDoCalculateDisplaCheckBox
        {
            get
            {
                if ((this.mUIChkDoCalculateDisplaCheckBox == null))
                {
                    this.mUIChkDoCalculateDisplaCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkDoCalculateDisplaCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkDoCalculateDisplayAutomatically";
                    this.mUIChkDoCalculateDisplaCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkDoCalculateDisplaCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkDoCalculateDisplaCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private DXCheckBox mUIChkNighShiftOnStartDCheckBox;
        
        private UILeDisplayStartDateLookUpEdit mUILeDisplayStartDateLookUpEdit;
        
        private DXCheckBox mUIChkDoCalculateDisplaCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILeDisplayStartDateLookUpEdit : DXLookUpEdit
    {
        
        public UILeDisplayStartDateLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leDisplayStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "leDisplayStartDatePopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        
        public DXButton UIEditorButton0Button
        {
            get
            {
                if ((this.mUIEditorButton0Button == null))
                {
                    this.mUIEditorButton0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "leDisplayStartDateButton[0]";
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton0Button.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIEditorButton0Button;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        
        private DXButton mUIEditorButton0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient1 : DXTestControl
    {
        
        public UIGSPanelControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    //[GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    //public class UIItemWindow3 : WinWindow
    //{
        
    //    public UIItemWindow3()
    //    {
    //        #region Search Criteria
    //        this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
    //        #endregion
    //    }
        
    //    #region Properties
    //    public UISubMenuBarControlMenu UISubMenuBarControlMenu
    //    {
    //        get
    //        {
    //            if ((this.mUISubMenuBarControlMenu == null))
    //            {
    //                this.mUISubMenuBarControlMenu = new UISubMenuBarControlMenu(this);
    //            }
    //            return this.mUISubMenuBarControlMenu;
    //        }
    //    }
        
    //    public UIGalleryDropDownBarCoMenu UIGalleryDropDownBarCoMenu
    //    {
    //        get
    //        {
    //            if ((this.mUIGalleryDropDownBarCoMenu == null))
    //            {
    //                this.mUIGalleryDropDownBarCoMenu = new UIGalleryDropDownBarCoMenu(this);
    //            }
    //            return this.mUIGalleryDropDownBarCoMenu;
    //        }
    //    }
    //    #endregion
        
    //    #region Fields
    //    private UISubMenuBarControlMenu mUISubMenuBarControlMenu;
        
    //    private UIGalleryDropDownBarCoMenu mUIGalleryDropDownBarCoMenu;
    //    #endregion
    //}
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISubMenuBarControlMenu : DXMenu
    {
        
        public UISubMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SubMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SubMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBtnRotateWholeMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnRotateWholeMenuBaseButtonItem == null))
                {
                    this.mUIBtnRotateWholeMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnRotateWholeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRotateWhole";
                    this.mUIBtnRotateWholeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnRotateWholeMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnDeleteMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnDeleteMenuBaseButtonItem == null))
                {
                    this.mUIBtnDeleteMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnDeleteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUIBtnDeleteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnDeleteMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnNoRevolveWholePerMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnNoRevolveWholePerMenuBaseButtonItem == null))
                {
                    this.mUIBtnNoRevolveWholePerMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnNoRevolveWholePerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRotateWhole";
                    this.mUIBtnNoRevolveWholePerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnNoRevolveWholePerMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UISlettiverksettingMenuBaseButtonItem
        {
            get
            {
                if ((this.mUISlettiverksettingMenuBaseButtonItem == null))
                {
                    this.mUISlettiverksettingMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUISlettiverksettingMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettiverksettingMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUISlettiverksettingMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBtnRotateWholeMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnDeleteMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnNoRevolveWholePerMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUISlettiverksettingMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGalleryDropDownBarCoMenu : DXMenu
    {
        
        public UIGalleryDropDownBarCoMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
            #endregion
        }
        
        #region Properties
        public UIItemGalleryItemGroup UIItemGalleryItemGroup
        {
            get
            {
                if ((this.mUIItemGalleryItemGroup == null))
                {
                    this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup(this);
                }
                return this.mUIItemGalleryItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGalleryItemGroup mUIItemGalleryItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemGalleryItemGroup : DXTestControl
    {
        
        public UIItemGalleryItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXLSXFilGalleryItem
        {
            get
            {
                if ((this.mUIXLSXFilGalleryItem == null))
                {
                    this.mUIXLSXFilGalleryItem = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXLSXFilGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "XLSX Fil";
                    this.mUIXLSXFilGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
                    #endregion
                }
                return this.mUIXLSXFilGalleryItem;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXLSXFilGalleryItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIIverksetteWindow : DXWindow
    {
        
        public UIIverksetteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Iverksette";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIPnlButtonsClient2 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient2(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlButtonsClient2 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient2 : DXTestControl
    {
        
        public UIPnlButtonsClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXButton UIEndreperiodeforavkryButton
        {
            get
            {
                if ((this.mUIEndreperiodeforavkryButton == null))
                {
                    this.mUIEndreperiodeforavkryButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreperiodeforavkryButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPeriod";
                    this.mUIEndreperiodeforavkryButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndreperiodeforavkryButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIEndreperiodeforavkryButton;
            }
        }
        
        public DXButton UIIverksett31linjerButton
        {
            get
            {
                if ((this.mUIIverksett31linjerButton == null))
                {
                    this.mUIIverksett31linjerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIIverksett31linjerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuate";
                    this.mUIIverksett31linjerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIIverksett31linjerButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIverksett31linjerButton;
            }
        }
        
        public DXButton UIForhåndsvisningaviveButton
        {
            get
            {
                if ((this.mUIForhåndsvisningaviveButton == null))
                {
                    this.mUIForhåndsvisningaviveButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIForhåndsvisningaviveButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuationPreview";
                    this.mUIForhåndsvisningaviveButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIForhåndsvisningaviveButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIForhåndsvisningaviveButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEndreperiodeforavkryButton;
        
        private DXButton mUIIverksett31linjerButton;
        
        private DXButton mUIForhåndsvisningaviveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEndreiverksettingspeWindow : DXWindow
    {
        
        public UIEndreiverksettingspeWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Endre iverksettingsperiode";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate0PopupEdit
        {
            get
            {
                if ((this.mUIPceDate0PopupEdit == null))
                {
                    this.mUIPceDate0PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[0]";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate0PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate0PopupEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDate0PopupEdit;
            }
        }
        
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public UIGSPanelControlClient2 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient2(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate0PopupEdit;
        
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private UIGSPanelControlClient2 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient2 : DXTestControl
    {
        
        public UIGSPanelControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRPL4044InformasjonWindow : DXWindow
    {
        
        public UIRPL4044InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4044 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4044 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("RPL-4044 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILønnsberegningvediveWindow : DXWindow
    {
        
        public UILønnsberegningvediveWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Lønnsberegning ved iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public UIPcReceiptPanelClient UIPcReceiptPanelClient
        {
            get
            {
                if ((this.mUIPcReceiptPanelClient == null))
                {
                    this.mUIPcReceiptPanelClient = new UIPcReceiptPanelClient(this);
                }
                return this.mUIPcReceiptPanelClient;
            }
        }
        
        public UIPcButtonPanelClient UIPcButtonPanelClient
        {
            get
            {
                if ((this.mUIPcButtonPanelClient == null))
                {
                    this.mUIPcButtonPanelClient = new UIPcButtonPanelClient(this);
                }
                return this.mUIPcButtonPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcReceiptPanelClient mUIPcReceiptPanelClient;
        
        private UIPcButtonPanelClient mUIPcButtonPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcReceiptPanelClient : DXTestControl
    {
        
        public UIPcReceiptPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcReceiptPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcReceiptTable
        {
            get
            {
                if ((this.mUIGcReceiptTable == null))
                {
                    this.mUIGcReceiptTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcReceiptTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcReceipt";
                    this.mUIGcReceiptTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcReceiptTable.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    #endregion
                }
                return this.mUIGcReceiptTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcReceiptTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcButtonPanelClient : DXTestControl
    {
        
        public UIPcButtonPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcButtonPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISletteiverksettingWindow : DXWindow
    {
        
        public UISletteiverksettingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Slette iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public UIPnlToppInfoClient UIPnlToppInfoClient
        {
            get
            {
                if ((this.mUIPnlToppInfoClient == null))
                {
                    this.mUIPnlToppInfoClient = new UIPnlToppInfoClient(this);
                }
                return this.mUIPnlToppInfoClient;
            }
        }
        
        public UIPnlBottomClient UIPnlBottomClient
        {
            get
            {
                if ((this.mUIPnlBottomClient == null))
                {
                    this.mUIPnlBottomClient = new UIPnlBottomClient(this);
                }
                return this.mUIPnlBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlToppInfoClient mUIPnlToppInfoClient;
        
        private UIPnlBottomClient mUIPnlBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlToppInfoClient : DXTestControl
    {
        
        public UIPnlToppInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlToppInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgalleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlBottomClient : DXTestControl
    {
        
        public UIPnlBottomClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UISlettiverksettingpå3Button
        {
            get
            {
                if ((this.mUISlettiverksettingpå3Button == null))
                {
                    this.mUISlettiverksettingpå3Button = new DXButton(this);
                    #region Search Criteria
                    this.mUISlettiverksettingpå3Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettiverksettingpå3Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUISlettiverksettingpå3Button.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUISlettiverksettingpå3Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISlettiverksettingpå3Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow11 : DXWindow
    {
        
        public UIItemWindow11()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EXC_4004 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("EXC_4004 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("EXC_4004 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRPL24003InformasjonWindow : DXWindow
    {
        
        public UIRPL24003InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL2-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("RPL2-4003 - Informasjon");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow21 : DXWindow
    {
        
        public UIItemWindow21()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4001 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4001 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT4000BekreftWindow : WinWindow
    {
        
        public UIGT4000BekreftWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GT-4000 - Bekreft";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("GT-4000 - Bekreft");
            #endregion
        }
        
        #region Properties
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow4 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("GT-4000 - Bekreft");
            #endregion
        }
        
        #region Properties
        public UIGT4000BekreftClient UIGT4000BekreftClient
        {
            get
            {
                if ((this.mUIGT4000BekreftClient == null))
                {
                    this.mUIGT4000BekreftClient = new UIGT4000BekreftClient(this);
                }
                return this.mUIGT4000BekreftClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGT4000BekreftClient mUIGT4000BekreftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT4000BekreftClient : WinClient
    {
        
        public UIGT4000BekreftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("GT-4000 - Bekreft");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("GT-4000 - Bekreft");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAnsatteiArbeidsplanWindow : DXWindow
    {
        
        public UIAnsatteiArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte i Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlControlClient UIPnlControlClient
        {
            get
            {
                if ((this.mUIPnlControlClient == null))
                {
                    this.mUIPnlControlClient = new UIPnlControlClient(this);
                }
                return this.mUIPnlControlClient;
            }
        }
        
        public UIPnlBottomClient1 UIPnlBottomClient
        {
            get
            {
                if ((this.mUIPnlBottomClient == null))
                {
                    this.mUIPnlBottomClient = new UIPnlBottomClient1(this);
                }
                return this.mUIPnlBottomClient;
            }
        }
        
        public DXButton UIMaximizeButton
        {
            get
            {
                if ((this.mUIMaximizeButton == null))
                {
                    this.mUIMaximizeButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIMaximizeButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Maximize";
                    this.mUIMaximizeButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUIMaximizeButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIMaximizeButton;
            }
        }
        
        public UIPanelControlOuterClient UIPanelControlOuterClient
        {
            get
            {
                if ((this.mUIPanelControlOuterClient == null))
                {
                    this.mUIPanelControlOuterClient = new UIPanelControlOuterClient(this);
                }
                return this.mUIPanelControlOuterClient;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlControlClient mUIPnlControlClient;
        
        private UIPnlBottomClient1 mUIPnlBottomClient;
        
        private DXButton mUIMaximizeButton;
        
        private UIPanelControlOuterClient mUIPanelControlOuterClient;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlControlClient : DXTestControl
    {
        
        public UIPnlControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpSelectedEmployeesClient UIGrpSelectedEmployeesClient
        {
            get
            {
                if ((this.mUIGrpSelectedEmployeesClient == null))
                {
                    this.mUIGrpSelectedEmployeesClient = new UIGrpSelectedEmployeesClient(this);
                }
                return this.mUIGrpSelectedEmployeesClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpSelectedEmployeesClient mUIGrpSelectedEmployeesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpSelectedEmployeesClient : DXTestControl
    {
        
        public UIGrpSelectedEmployeesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpSelectedEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcEmployeesTable : DXGrid
    {
        
        public UIGcEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]gcolSelectedAll";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]1[Column]gcolSelectedAll";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        
        public DXCell UIValgtCell2
        {
            get
            {
                if ((this.mUIValgtCell2 == null))
                {
                    this.mUIValgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]2[Column]gcolSelectedAll";
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell2.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell2;
            }
        }
        
        public DXCell UIValgtCell3
        {
            get
            {
                if ((this.mUIValgtCell3 == null))
                {
                    this.mUIValgtCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]3[Column]gcolSelectedAll";
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell3.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell3;
            }
        }
        
        public DXCell UIValgtCell4
        {
            get
            {
                if ((this.mUIValgtCell4 == null))
                {
                    this.mUIValgtCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]4[Column]gcolSelectedAll";
                    this.mUIValgtCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell4.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell4;
            }
        }
        
        public DXCell UIValgtCell5
        {
            get
            {
                if ((this.mUIValgtCell5 == null))
                {
                    this.mUIValgtCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]5[Column]gcolSelectedAll";
                    this.mUIValgtCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell5.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell5;
            }
        }
        
        public DXCell UIValgtCell6
        {
            get
            {
                if ((this.mUIValgtCell6 == null))
                {
                    this.mUIValgtCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]6[Column]gcolSelectedAll";
                    this.mUIValgtCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell6.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell6;
            }
        }
        
        public DXCell UIValgtCell7
        {
            get
            {
                if ((this.mUIValgtCell7 == null))
                {
                    this.mUIValgtCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]7[Column]gcolSelectedAll";
                    this.mUIValgtCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell7.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell7;
            }
        }
        
        public DXCell UIValgtCell8
        {
            get
            {
                if ((this.mUIValgtCell8 == null))
                {
                    this.mUIValgtCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]8[Column]gcolSelectedAll";
                    this.mUIValgtCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell8.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell8;
            }
        }
        
        public DXCell UIValgtCell9
        {
            get
            {
                if ((this.mUIValgtCell9 == null))
                {
                    this.mUIValgtCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]9[Column]gcolSelectedAll";
                    this.mUIValgtCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell9.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell9;
            }
        }
        
        public DXCell UIValgtCell10
        {
            get
            {
                if ((this.mUIValgtCell10 == null))
                {
                    this.mUIValgtCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]10[Column]gcolSelectedAll";
                    this.mUIValgtCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell10.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell10;
            }
        }
        
        public DXCell UIValgtCell11
        {
            get
            {
                if ((this.mUIValgtCell11 == null))
                {
                    this.mUIValgtCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]11[Column]gcolSelectedAll";
                    this.mUIValgtCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell11.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell11;
            }
        }
        
        public DXCell UIValgtCell12
        {
            get
            {
                if ((this.mUIValgtCell12 == null))
                {
                    this.mUIValgtCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]12[Column]gcolSelectedAll";
                    this.mUIValgtCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell12.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell12;
            }
        }
        
        public DXScrollBar UIVCrkScrollBarScrollBarControl
        {
            get
            {
                if ((this.mUIVCrkScrollBarScrollBarControl == null))
                {
                    this.mUIVCrkScrollBarScrollBarControl = new DXScrollBar(this);
                    #region Search Criteria
                    this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesVCrkScrollBar";
                    this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VCrkScrollBar";
                    this.mUIVCrkScrollBarScrollBarControl.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIVCrkScrollBarScrollBarControl;
            }
        }
        
        public DXCell UIValgtCell13
        {
            get
            {
                if ((this.mUIValgtCell13 == null))
                {
                    this.mUIValgtCell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]13[Column]gcolSelectedAll";
                    this.mUIValgtCell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell13.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell13;
            }
        }
        
        public DXCell UIValgtCell14
        {
            get
            {
                if ((this.mUIValgtCell14 == null))
                {
                    this.mUIValgtCell14 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell14.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]14[Column]gcolSelectedAll";
                    this.mUIValgtCell14.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell14.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell14;
            }
        }
        
        public DXCell UIValgtCell15
        {
            get
            {
                if ((this.mUIValgtCell15 == null))
                {
                    this.mUIValgtCell15 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell15.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]15[Column]gcolSelectedAll";
                    this.mUIValgtCell15.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell15.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell15;
            }
        }
        
        public DXCell UIValgtCell16
        {
            get
            {
                if ((this.mUIValgtCell16 == null))
                {
                    this.mUIValgtCell16 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell16.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]16[Column]gcolSelectedAll";
                    this.mUIValgtCell16.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell16.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell16;
            }
        }
        
        public DXCell UIValgtCell17
        {
            get
            {
                if ((this.mUIValgtCell17 == null))
                {
                    this.mUIValgtCell17 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell17.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]17[Column]gcolSelectedAll";
                    this.mUIValgtCell17.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell17.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell17;
            }
        }
        
        public DXCell UIValgtCell18
        {
            get
            {
                if ((this.mUIValgtCell18 == null))
                {
                    this.mUIValgtCell18 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell18.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]18[Column]gcolSelectedAll";
                    this.mUIValgtCell18.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell18.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell18;
            }
        }
        
        public DXCell UIValgtCell19
        {
            get
            {
                if ((this.mUIValgtCell19 == null))
                {
                    this.mUIValgtCell19 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell19.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]19[Column]gcolSelectedAll";
                    this.mUIValgtCell19.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell19.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell19;
            }
        }
        
        public DXCell UIValgtCell20
        {
            get
            {
                if ((this.mUIValgtCell20 == null))
                {
                    this.mUIValgtCell20 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell20.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]20[Column]gcolSelectedAll";
                    this.mUIValgtCell20.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell20.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell20;
            }
        }
        
        public DXCell UIValgtCell21
        {
            get
            {
                if ((this.mUIValgtCell21 == null))
                {
                    this.mUIValgtCell21 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]21[Column]gcolSelectedAll";
                    this.mUIValgtCell21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell21.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell21;
            }
        }
        
        public DXCell UIValgtCell22
        {
            get
            {
                if ((this.mUIValgtCell22 == null))
                {
                    this.mUIValgtCell22 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell22.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]22[Column]gcolSelectedAll";
                    this.mUIValgtCell22.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell22.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell22;
            }
        }
        
        public DXCell UIValgtCell23
        {
            get
            {
                if ((this.mUIValgtCell23 == null))
                {
                    this.mUIValgtCell23 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell23.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]23[Column]gcolSelectedAll";
                    this.mUIValgtCell23.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell23.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell23;
            }
        }
        
        public DXCell UIGcEmployeesGridContrCell
        {
            get
            {
                if ((this.mUIGcEmployeesGridContrCell == null))
                {
                    this.mUIGcEmployeesGridContrCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcEmployeesGridContrCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]24[Column]gcolSelectedAll";
                    this.mUIGcEmployeesGridContrCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcEmployeesGridContrCell.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGcEmployeesGridContrCell;
            }
        }
        
        public DXCell UIGcEmployeesGridContrCell1
        {
            get
            {
                if ((this.mUIGcEmployeesGridContrCell1 == null))
                {
                    this.mUIGcEmployeesGridContrCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcEmployeesGridContrCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]25[Column]gcolSelectedAll";
                    this.mUIGcEmployeesGridContrCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcEmployeesGridContrCell1.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGcEmployeesGridContrCell1;
            }
        }
        
        public DXCell UIGcEmployeesGridContrCell2
        {
            get
            {
                if ((this.mUIGcEmployeesGridContrCell2 == null))
                {
                    this.mUIGcEmployeesGridContrCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcEmployeesGridContrCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]26[Column]gcolSelectedAll";
                    this.mUIGcEmployeesGridContrCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcEmployeesGridContrCell2.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGcEmployeesGridContrCell2;
            }
        }
        
        public DXCell UIGcEmployeesGridContrCell3
        {
            get
            {
                if ((this.mUIGcEmployeesGridContrCell3 == null))
                {
                    this.mUIGcEmployeesGridContrCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcEmployeesGridContrCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]27[Column]gcolSelectedAll";
                    this.mUIGcEmployeesGridContrCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcEmployeesGridContrCell3.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGcEmployeesGridContrCell3;
            }
        }
        
        public DXCell UIGcEmployeesGridContrCell4
        {
            get
            {
                if ((this.mUIGcEmployeesGridContrCell4 == null))
                {
                    this.mUIGcEmployeesGridContrCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcEmployeesGridContrCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]28[Column]gcolSelectedAll";
                    this.mUIGcEmployeesGridContrCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcEmployeesGridContrCell4.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGcEmployeesGridContrCell4;
            }
        }
        
        public DXCell UIGcEmployeesGridContrCell5
        {
            get
            {
                if ((this.mUIGcEmployeesGridContrCell5 == null))
                {
                    this.mUIGcEmployeesGridContrCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcEmployeesGridContrCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]29[Column]gcolSelectedAll";
                    this.mUIGcEmployeesGridContrCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcEmployeesGridContrCell5.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGcEmployeesGridContrCell5;
            }
        }
        
        public DXCell UIGcEmployeesGridContrCell6
        {
            get
            {
                if ((this.mUIGcEmployeesGridContrCell6 == null))
                {
                    this.mUIGcEmployeesGridContrCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcEmployeesGridContrCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]30[Column]gcolSelectedAll";
                    this.mUIGcEmployeesGridContrCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcEmployeesGridContrCell6.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGcEmployeesGridContrCell6;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        
        private DXCell mUIValgtCell2;
        
        private DXCell mUIValgtCell3;
        
        private DXCell mUIValgtCell4;
        
        private DXCell mUIValgtCell5;
        
        private DXCell mUIValgtCell6;
        
        private DXCell mUIValgtCell7;
        
        private DXCell mUIValgtCell8;
        
        private DXCell mUIValgtCell9;
        
        private DXCell mUIValgtCell10;
        
        private DXCell mUIValgtCell11;
        
        private DXCell mUIValgtCell12;
        
        private DXScrollBar mUIVCrkScrollBarScrollBarControl;
        
        private DXCell mUIValgtCell13;
        
        private DXCell mUIValgtCell14;
        
        private DXCell mUIValgtCell15;
        
        private DXCell mUIValgtCell16;
        
        private DXCell mUIValgtCell17;
        
        private DXCell mUIValgtCell18;
        
        private DXCell mUIValgtCell19;
        
        private DXCell mUIValgtCell20;
        
        private DXCell mUIValgtCell21;
        
        private DXCell mUIValgtCell22;
        
        private DXCell mUIValgtCell23;
        
        private DXCell mUIGcEmployeesGridContrCell;
        
        private DXCell mUIGcEmployeesGridContrCell1;
        
        private DXCell mUIGcEmployeesGridContrCell2;
        
        private DXCell mUIGcEmployeesGridContrCell3;
        
        private DXCell mUIGcEmployeesGridContrCell4;
        
        private DXCell mUIGcEmployeesGridContrCell5;
        
        private DXCell mUIGcEmployeesGridContrCell6;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlBottomClient1 : DXTestControl
    {
        
        public UIPnlBottomClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlDropDownsClient UIPnlDropDownsClient
        {
            get
            {
                if ((this.mUIPnlDropDownsClient == null))
                {
                    this.mUIPnlDropDownsClient = new UIPnlDropDownsClient(this);
                }
                return this.mUIPnlDropDownsClient;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        
        public DXButton UIVelgingenButton
        {
            get
            {
                if ((this.mUIVelgingenButton == null))
                {
                    this.mUIVelgingenButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNoLines";
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgingenButton.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIVelgingenButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlDropDownsClient mUIPnlDropDownsClient;
        
        private DXButton mUIGSSimpleButtonButton;
        
        private DXButton mUIVelgalleButton;
        
        private DXButton mUIVelgingenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlDropDownsClient : DXTestControl
    {
        
        public UIPnlDropDownsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlDropDowns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsleToSporadicLookUpEdit UIGsleToSporadicLookUpEdit
        {
            get
            {
                if ((this.mUIGsleToSporadicLookUpEdit == null))
                {
                    this.mUIGsleToSporadicLookUpEdit = new UIGsleToSporadicLookUpEdit(this);
                }
                return this.mUIGsleToSporadicLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIGsleToSporadicLookUpEdit mUIGsleToSporadicLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsleToSporadicLookUpEdit : DXLookUpEdit
    {
        
        public UIGsleToSporadicLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsleToSporadic";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButton0Button
        {
            get
            {
                if ((this.mUIEditorButton0Button == null))
                {
                    this.mUIEditorButton0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "gsleToSporadicButton[0]";
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton0Button.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIEditorButton0Button;
            }
        }
        
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "gsleToSporadicPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButton0Button;
        
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlOuterClient : DXTestControl
    {
        
        public UIPanelControlOuterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlLeftClient UIPanelControlLeftClient
        {
            get
            {
                if ((this.mUIPanelControlLeftClient == null))
                {
                    this.mUIPanelControlLeftClient = new UIPanelControlLeftClient(this);
                }
                return this.mUIPanelControlLeftClient;
            }
        }
        
        public UIPanelControlRightClient UIPanelControlRightClient
        {
            get
            {
                if ((this.mUIPanelControlRightClient == null))
                {
                    this.mUIPanelControlRightClient = new UIPanelControlRightClient(this);
                }
                return this.mUIPanelControlRightClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlLeftClient mUIPanelControlLeftClient;
        
        private UIPanelControlRightClient mUIPanelControlRightClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlLeftClient : DXTestControl
    {
        
        public UIPanelControlLeftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITreeListEmployeesTreeList UITreeListEmployeesTreeList
        {
            get
            {
                if ((this.mUITreeListEmployeesTreeList == null))
                {
                    this.mUITreeListEmployeesTreeList = new UITreeListEmployeesTreeList(this);
                }
                return this.mUITreeListEmployeesTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UITreeListEmployeesTreeList mUITreeListEmployeesTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeListEmployeesTreeList : DXTreeList
    {
        
        public UITreeListEmployeesTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "treeListEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        
        public UINode1TreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new UINode1TreeListNode(this);
                }
                return this.mUINode1TreeListNode;
            }
        }
        
        public UINode2TreeListNode UINode2TreeListNode
        {
            get
            {
                if ((this.mUINode2TreeListNode == null))
                {
                    this.mUINode2TreeListNode = new UINode2TreeListNode(this);
                }
                return this.mUINode2TreeListNode;
            }
        }
        
        public UINode3TreeListNode UINode3TreeListNode
        {
            get
            {
                if ((this.mUINode3TreeListNode == null))
                {
                    this.mUINode3TreeListNode = new UINode3TreeListNode(this);
                }
                return this.mUINode3TreeListNode;
            }
        }
        
        public UINode4TreeListNode UINode4TreeListNode
        {
            get
            {
                if ((this.mUINode4TreeListNode == null))
                {
                    this.mUINode4TreeListNode = new UINode4TreeListNode(this);
                }
                return this.mUINode4TreeListNode;
            }
        }
        
        public UINode5TreeListNode UINode5TreeListNode
        {
            get
            {
                if ((this.mUINode5TreeListNode == null))
                {
                    this.mUINode5TreeListNode = new UINode5TreeListNode(this);
                }
                return this.mUINode5TreeListNode;
            }
        }
        
        public UINode6TreeListNode UINode6TreeListNode
        {
            get
            {
                if ((this.mUINode6TreeListNode == null))
                {
                    this.mUINode6TreeListNode = new UINode6TreeListNode(this);
                }
                return this.mUINode6TreeListNode;
            }
        }
        
        public UINode7TreeListNode UINode7TreeListNode
        {
            get
            {
                if ((this.mUINode7TreeListNode == null))
                {
                    this.mUINode7TreeListNode = new UINode7TreeListNode(this);
                }
                return this.mUINode7TreeListNode;
            }
        }
        
        public UINode8TreeListNode UINode8TreeListNode
        {
            get
            {
                if ((this.mUINode8TreeListNode == null))
                {
                    this.mUINode8TreeListNode = new UINode8TreeListNode(this);
                }
                return this.mUINode8TreeListNode;
            }
        }
        
        public UINode9TreeListNode UINode9TreeListNode
        {
            get
            {
                if ((this.mUINode9TreeListNode == null))
                {
                    this.mUINode9TreeListNode = new UINode9TreeListNode(this);
                }
                return this.mUINode9TreeListNode;
            }
        }
        
        public UINode10TreeListNode UINode10TreeListNode
        {
            get
            {
                if ((this.mUINode10TreeListNode == null))
                {
                    this.mUINode10TreeListNode = new UINode10TreeListNode(this);
                }
                return this.mUINode10TreeListNode;
            }
        }
        
        public UINode11TreeListNode UINode11TreeListNode
        {
            get
            {
                if ((this.mUINode11TreeListNode == null))
                {
                    this.mUINode11TreeListNode = new UINode11TreeListNode(this);
                }
                return this.mUINode11TreeListNode;
            }
        }
        
        public UINode12TreeListNode UINode12TreeListNode
        {
            get
            {
                if ((this.mUINode12TreeListNode == null))
                {
                    this.mUINode12TreeListNode = new UINode12TreeListNode(this);
                }
                return this.mUINode12TreeListNode;
            }
        }
        
        public UINode13TreeListNode UINode13TreeListNode
        {
            get
            {
                if ((this.mUINode13TreeListNode == null))
                {
                    this.mUINode13TreeListNode = new UINode13TreeListNode(this);
                }
                return this.mUINode13TreeListNode;
            }
        }
        
        public UINode14TreeListNode UINode14TreeListNode
        {
            get
            {
                if ((this.mUINode14TreeListNode == null))
                {
                    this.mUINode14TreeListNode = new UINode14TreeListNode(this);
                }
                return this.mUINode14TreeListNode;
            }
        }
        
        public UINode15TreeListNode UINode15TreeListNode
        {
            get
            {
                if ((this.mUINode15TreeListNode == null))
                {
                    this.mUINode15TreeListNode = new UINode15TreeListNode(this);
                }
                return this.mUINode15TreeListNode;
            }
        }
        
        public UINode16TreeListNode UINode16TreeListNode
        {
            get
            {
                if ((this.mUINode16TreeListNode == null))
                {
                    this.mUINode16TreeListNode = new UINode16TreeListNode(this);
                }
                return this.mUINode16TreeListNode;
            }
        }
        
        public UINode17TreeListNode UINode17TreeListNode
        {
            get
            {
                if ((this.mUINode17TreeListNode == null))
                {
                    this.mUINode17TreeListNode = new UINode17TreeListNode(this);
                }
                return this.mUINode17TreeListNode;
            }
        }
        
        public UINode18TreeListNode UINode18TreeListNode
        {
            get
            {
                if ((this.mUINode18TreeListNode == null))
                {
                    this.mUINode18TreeListNode = new UINode18TreeListNode(this);
                }
                return this.mUINode18TreeListNode;
            }
        }
        
        public UINode19TreeListNode UINode19TreeListNode
        {
            get
            {
                if ((this.mUINode19TreeListNode == null))
                {
                    this.mUINode19TreeListNode = new UINode19TreeListNode(this);
                }
                return this.mUINode19TreeListNode;
            }
        }
        
        public UINode20TreeListNode UINode20TreeListNode
        {
            get
            {
                if ((this.mUINode20TreeListNode == null))
                {
                    this.mUINode20TreeListNode = new UINode20TreeListNode(this);
                }
                return this.mUINode20TreeListNode;
            }
        }
        
        public UINode21TreeListNode UINode21TreeListNode
        {
            get
            {
                if ((this.mUINode21TreeListNode == null))
                {
                    this.mUINode21TreeListNode = new UINode21TreeListNode(this);
                }
                return this.mUINode21TreeListNode;
            }
        }
        
        public UINode22TreeListNode UINode22TreeListNode
        {
            get
            {
                if ((this.mUINode22TreeListNode == null))
                {
                    this.mUINode22TreeListNode = new UINode22TreeListNode(this);
                }
                return this.mUINode22TreeListNode;
            }
        }
        
        public UINode23TreeListNode UINode23TreeListNode
        {
            get
            {
                if ((this.mUINode23TreeListNode == null))
                {
                    this.mUINode23TreeListNode = new UINode23TreeListNode(this);
                }
                return this.mUINode23TreeListNode;
            }
        }
        
        public UINode24TreeListNode UINode24TreeListNode
        {
            get
            {
                if ((this.mUINode24TreeListNode == null))
                {
                    this.mUINode24TreeListNode = new UINode24TreeListNode(this);
                }
                return this.mUINode24TreeListNode;
            }
        }
        
        public UINode25TreeListNode UINode25TreeListNode
        {
            get
            {
                if ((this.mUINode25TreeListNode == null))
                {
                    this.mUINode25TreeListNode = new UINode25TreeListNode(this);
                }
                return this.mUINode25TreeListNode;
            }
        }
        
        public UINode26TreeListNode UINode26TreeListNode
        {
            get
            {
                if ((this.mUINode26TreeListNode == null))
                {
                    this.mUINode26TreeListNode = new UINode26TreeListNode(this);
                }
                return this.mUINode26TreeListNode;
            }
        }
        
        public UINode27TreeListNode UINode27TreeListNode
        {
            get
            {
                if ((this.mUINode27TreeListNode == null))
                {
                    this.mUINode27TreeListNode = new UINode27TreeListNode(this);
                }
                return this.mUINode27TreeListNode;
            }
        }
        
        public UINode28TreeListNode UINode28TreeListNode
        {
            get
            {
                if ((this.mUINode28TreeListNode == null))
                {
                    this.mUINode28TreeListNode = new UINode28TreeListNode(this);
                }
                return this.mUINode28TreeListNode;
            }
        }
        
        public UINode29TreeListNode UINode29TreeListNode
        {
            get
            {
                if ((this.mUINode29TreeListNode == null))
                {
                    this.mUINode29TreeListNode = new UINode29TreeListNode(this);
                }
                return this.mUINode29TreeListNode;
            }
        }
        
        public UINode30TreeListNode UINode30TreeListNode
        {
            get
            {
                if ((this.mUINode30TreeListNode == null))
                {
                    this.mUINode30TreeListNode = new UINode30TreeListNode(this);
                }
                return this.mUINode30TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode mUINode0TreeListNode;
        
        private UINode1TreeListNode mUINode1TreeListNode;
        
        private UINode2TreeListNode mUINode2TreeListNode;
        
        private UINode3TreeListNode mUINode3TreeListNode;
        
        private UINode4TreeListNode mUINode4TreeListNode;
        
        private UINode5TreeListNode mUINode5TreeListNode;
        
        private UINode6TreeListNode mUINode6TreeListNode;
        
        private UINode7TreeListNode mUINode7TreeListNode;
        
        private UINode8TreeListNode mUINode8TreeListNode;
        
        private UINode9TreeListNode mUINode9TreeListNode;
        
        private UINode10TreeListNode mUINode10TreeListNode;
        
        private UINode11TreeListNode mUINode11TreeListNode;
        
        private UINode12TreeListNode mUINode12TreeListNode;
        
        private UINode13TreeListNode mUINode13TreeListNode;
        
        private UINode14TreeListNode mUINode14TreeListNode;
        
        private UINode15TreeListNode mUINode15TreeListNode;
        
        private UINode16TreeListNode mUINode16TreeListNode;
        
        private UINode17TreeListNode mUINode17TreeListNode;
        
        private UINode18TreeListNode mUINode18TreeListNode;
        
        private UINode19TreeListNode mUINode19TreeListNode;
        
        private UINode20TreeListNode mUINode20TreeListNode;
        
        private UINode21TreeListNode mUINode21TreeListNode;
        
        private UINode22TreeListNode mUINode22TreeListNode;
        
        private UINode23TreeListNode mUINode23TreeListNode;
        
        private UINode24TreeListNode mUINode24TreeListNode;
        
        private UINode25TreeListNode mUINode25TreeListNode;
        
        private UINode26TreeListNode mUINode26TreeListNode;
        
        private UINode27TreeListNode mUINode27TreeListNode;
        
        private UINode28TreeListNode mUINode28TreeListNode;
        
        private UINode29TreeListNode mUINode29TreeListNode;
        
        private UINode30TreeListNode mUINode30TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode : DXTreeListNode
    {
        
        public UINode0TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode1 UINode0TreeListNode1
        {
            get
            {
                if ((this.mUINode0TreeListNode1 == null))
                {
                    this.mUINode0TreeListNode1 = new UINode0TreeListNode1(this);
                }
                return this.mUINode0TreeListNode1;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode1 mUINode0TreeListNode1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode1 : DXTreeListNode
    {
        
        public UINode0TreeListNode1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode1TreeListNode : DXTreeListNode
    {
        
        public UINode1TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode2 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode2(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode2 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode2 : DXTreeListNode
    {
        
        public UINode0TreeListNode2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode2TreeListNode : DXTreeListNode
    {
        
        public UINode2TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode3 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode3(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode3 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode3 : DXTreeListNode
    {
        
        public UINode0TreeListNode3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode3TreeListNode : DXTreeListNode
    {
        
        public UINode3TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode4 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode4(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode4 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode4 : DXTreeListNode
    {
        
        public UINode0TreeListNode4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode4TreeListNode : DXTreeListNode
    {
        
        public UINode4TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode5 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode5(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode5 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode5 : DXTreeListNode
    {
        
        public UINode0TreeListNode5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItemTreeListCell
        {
            get
            {
                if ((this.mUIItemTreeListCell == null))
                {
                    this.mUIItemTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItemTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colFromDateMain";
                    this.mUIItemTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItemTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItemTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItemTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode5TreeListNode : DXTreeListNode
    {
        
        public UINode5TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode6 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode6(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode6 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode6 : DXTreeListNode
    {
        
        public UINode0TreeListNode6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode6TreeListNode : DXTreeListNode
    {
        
        public UINode6TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode7 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode7(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode7 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode7 : DXTreeListNode
    {
        
        public UINode0TreeListNode7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode7TreeListNode : DXTreeListNode
    {
        
        public UINode7TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node7";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode8 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode8(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode8 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode8 : DXTreeListNode
    {
        
        public UINode0TreeListNode8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode8TreeListNode : DXTreeListNode
    {
        
        public UINode8TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node8";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode9 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode9(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode9 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode9 : DXTreeListNode
    {
        
        public UINode0TreeListNode9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode9TreeListNode : DXTreeListNode
    {
        
        public UINode9TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode10 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode10(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode10 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode10 : DXTreeListNode
    {
        
        public UINode0TreeListNode10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode10TreeListNode : DXTreeListNode
    {
        
        public UINode10TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node10";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode11 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode11(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode11 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode11 : DXTreeListNode
    {
        
        public UINode0TreeListNode11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode11TreeListNode : DXTreeListNode
    {
        
        public UINode11TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node11";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode12 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode12(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode12 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode12 : DXTreeListNode
    {
        
        public UINode0TreeListNode12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode12TreeListNode : DXTreeListNode
    {
        
        public UINode12TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node12";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode13 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode13(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode13 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode13 : DXTreeListNode
    {
        
        public UINode0TreeListNode13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode13TreeListNode : DXTreeListNode
    {
        
        public UINode13TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node13";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode14 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode14(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode14 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode14 : DXTreeListNode
    {
        
        public UINode0TreeListNode14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode14TreeListNode : DXTreeListNode
    {
        
        public UINode14TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node14";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode15 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode15(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode15 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode15 : DXTreeListNode
    {
        
        public UINode0TreeListNode15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode15TreeListNode : DXTreeListNode
    {
        
        public UINode15TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node15";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode16 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode16(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode16 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode16 : DXTreeListNode
    {
        
        public UINode0TreeListNode16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode16TreeListNode : DXTreeListNode
    {
        
        public UINode16TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node16";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode17 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode17(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode17 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode17 : DXTreeListNode
    {
        
        public UINode0TreeListNode17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode17TreeListNode : DXTreeListNode
    {
        
        public UINode17TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node17";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode18 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode18(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode18 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode18 : DXTreeListNode
    {
        
        public UINode0TreeListNode18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode18TreeListNode : DXTreeListNode
    {
        
        public UINode18TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node18";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode19 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode19(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode19 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode19 : DXTreeListNode
    {
        
        public UINode0TreeListNode19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode19TreeListNode : DXTreeListNode
    {
        
        public UINode19TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node19";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode20 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode20(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode20 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode20 : DXTreeListNode
    {
        
        public UINode0TreeListNode20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode20TreeListNode : DXTreeListNode
    {
        
        public UINode20TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node20";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode21 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode21(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode21 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode21 : DXTreeListNode
    {
        
        public UINode0TreeListNode21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode21TreeListNode : DXTreeListNode
    {
        
        public UINode21TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node21";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode22 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode22(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode22 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode22 : DXTreeListNode
    {
        
        public UINode0TreeListNode22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode22TreeListNode : DXTreeListNode
    {
        
        public UINode22TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node22";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode23 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode23(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode23 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode23 : DXTreeListNode
    {
        
        public UINode0TreeListNode23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode23TreeListNode : DXTreeListNode
    {
        
        public UINode23TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node23";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode24 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode24(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode24 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode24 : DXTreeListNode
    {
        
        public UINode0TreeListNode24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode24TreeListNode : DXTreeListNode
    {
        
        public UINode24TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node24";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode25 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode25(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode25 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode25 : DXTreeListNode
    {
        
        public UINode0TreeListNode25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode25TreeListNode : DXTreeListNode
    {
        
        public UINode25TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node25";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode26 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode26(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode26 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode26 : DXTreeListNode
    {
        
        public UINode0TreeListNode26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode26TreeListNode : DXTreeListNode
    {
        
        public UINode26TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node26";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode27 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode27(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode27 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode27 : DXTreeListNode
    {
        
        public UINode0TreeListNode27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode27TreeListNode : DXTreeListNode
    {
        
        public UINode27TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node27";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode28 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode28(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode28 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode28 : DXTreeListNode
    {
        
        public UINode0TreeListNode28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode28TreeListNode : DXTreeListNode
    {
        
        public UINode28TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node28";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode29 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode29(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode29 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode29 : DXTreeListNode
    {
        
        public UINode0TreeListNode29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode29TreeListNode : DXTreeListNode
    {
        
        public UINode29TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node29";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode30 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode30(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode30 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode30 : DXTreeListNode
    {
        
        public UINode0TreeListNode30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode30TreeListNode : DXTreeListNode
    {
        
        public UINode30TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node30";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode31 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode31(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode31 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode31 : DXTreeListNode
    {
        
        public UINode0TreeListNode31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem1100TreeListCell
        {
            get
            {
                if ((this.mUIItem1100TreeListCell == null))
                {
                    this.mUIItem1100TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem1100TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem1100TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem1100TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem1100TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlRightClient : DXTestControl
    {
        
        public UIPanelControlRightClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeEditorsViewCustom UIEmployeeEditorsViewCustom
        {
            get
            {
                if ((this.mUIEmployeeEditorsViewCustom == null))
                {
                    this.mUIEmployeeEditorsViewCustom = new UIEmployeeEditorsViewCustom(this);
                }
                return this.mUIEmployeeEditorsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeEditorsViewCustom mUIEmployeeEditorsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeEditorsViewCustom : DXTestControl
    {
        
        public UIEmployeeEditorsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeEditorsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeEditorsView";
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIXscContentScrollableControl UIXscContentScrollableControl
        {
            get
            {
                if ((this.mUIXscContentScrollableControl == null))
                {
                    this.mUIXscContentScrollableControl = new UIXscContentScrollableControl(this);
                }
                return this.mUIXscContentScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscContentScrollableControl mUIXscContentScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIXscContentScrollableControl : DXScrollableControl
    {
        
        public UIXscContentScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            #endregion
        }
        
        #region Properties
        public UIGroupControlViewHostCustom UIGroupControlViewHostCustom
        {
            get
            {
                if ((this.mUIGroupControlViewHostCustom == null))
                {
                    this.mUIGroupControlViewHostCustom = new UIGroupControlViewHostCustom(this);
                }
                return this.mUIGroupControlViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlViewHostCustom mUIGroupControlViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGroupControlViewHostCustom : DXTestControl
    {
        
        public UIGroupControlViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient mUIGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGroupControlClient : DXTestControl
    {
        
        public UIGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerOvertCustom UIEmployeeManagerOvertCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerOvertCustom == null))
                {
                    this.mUIEmployeeManagerOvertCustom = new UIEmployeeManagerOvertCustom(this);
                }
                return this.mUIEmployeeManagerOvertCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerOvertCustom mUIEmployeeManagerOvertCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeManagerOvertCustom : DXTestControl
    {
        
        public UIEmployeeManagerOvertCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerOvertimeCodeView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerOvertimeCodeView";
            #endregion
        }
        
        #region Properties
        public UIEOvertimeCodeLookUpEdit UIEOvertimeCodeLookUpEdit
        {
            get
            {
                if ((this.mUIEOvertimeCodeLookUpEdit == null))
                {
                    this.mUIEOvertimeCodeLookUpEdit = new UIEOvertimeCodeLookUpEdit(this);
                }
                return this.mUIEOvertimeCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIEOvertimeCodeLookUpEdit mUIEOvertimeCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEOvertimeCodeLookUpEdit : DXLookUpEdit
    {
        
        public UIEOvertimeCodeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eOvertimeCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupSearchLookUpEdiWindow : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eOvertimeCodePopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchEditLookUpPopuCustom : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            #endregion
        }
        
        #region Properties
        public UILCCustom UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILCCustom : DXTestControl
    {
        
        public UILCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            #endregion
        }
        
        #region Properties
        public UILciGridLayoutControlItem UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciGridLayoutControlItem mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciGridLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            #endregion
        }
        
        #region Properties
        public UIGridControlTable UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGridControlTable : DXGrid
    {
        
        public UIGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            #endregion
        }
        
        #region Properties
        public DXCell UISCell
        {
            get
            {
                if ((this.mUISCell == null))
                {
                    this.mUISCell = new DXCell(this);
                    #region Search Criteria
                    this.mUISCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gvOvertimeCode[Row]2[Column]colCodeOver" +
                        "timeCode";
                    this.mUISCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUISCell;
            }
        }
        
        public DXCell UIPCell
        {
            get
            {
                if ((this.mUIPCell == null))
                {
                    this.mUIPCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gvOvertimeCode[Row]0[Column]colCodeOver" +
                        "timeCode";
                    this.mUIPCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIPCell;
            }
        }
        
        public DXCell UIVCell
        {
            get
            {
                if ((this.mUIVCell == null))
                {
                    this.mUIVCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gvOvertimeCode[Row]1[Column]colCodeOver" +
                        "timeCode";
                    this.mUIVCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIVCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISCell;
        
        private DXCell mUIPCell;
        
        private DXCell mUIVCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63030730ASCLAvWindow : WinWindow
    {
        
        public UIGatver63030730ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow5 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow5(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow22 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow22(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow31 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow31(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow41 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow41(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow51 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow51(this);
                }
                return this.mUIItemWindow5;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow5 mUIItemWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIItemWindow22 mUIItemWindow2;
        
        private UIItemWindow31 mUIItemWindow3;
        
        private UIItemWindow41 mUIItemWindow4;
        
        private UIItemWindow51 mUIItemWindow5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAdministrasjonClient
        {
            get
            {
                if ((this.mUIAdministrasjonClient == null))
                {
                    this.mUIAdministrasjonClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAdministrasjonClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAdministrasjonClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAdministrasjonClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63030730ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63030730ASCLAvClient == null))
                {
                    this.mUIGatver63030730ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63030730ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63030730ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63030730ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow22 : WinWindow
    {
        
        public UIItemWindow22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63030730ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63030730ASCLAvClient == null))
                {
                    this.mUIGatver63030730ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63030730ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63030730ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63030730ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow31 : WinWindow
    {
        
        public UIItemWindow31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63030730ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63030730ASCLAvClient == null))
                {
                    this.mUIGatver63030730ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63030730ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63030730ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63030730ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow41 : WinWindow
    {
        
        public UIItemWindow41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63030730ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63030730ASCLAvClient == null))
                {
                    this.mUIGatver63030730ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63030730ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63030730ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63030730ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow51 : WinWindow
    {
        
        public UIItemWindow51(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63030730ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63030730ASCLAvClient == null))
                {
                    this.mUIGatver63030730ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63030730ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63030730ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63030730ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRegelsettWindow : WinWindow
    {
        
        public UIRegelsettWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Regelsett";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmRegEdit";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public UIItemWindow6 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow6(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIRegelsettClient UIRegelsettClient
        {
            get
            {
                if ((this.mUIRegelsettClient == null))
                {
                    this.mUIRegelsettClient = new UIRegelsettClient(this);
                }
                return this.mUIRegelsettClient;
            }
        }
        
        public UIItemWindow13 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemClient2 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient2(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIItemClient1 UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new UIItemClient1(this);
                }
                return this.mUIItemClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow6 mUIItemWindow;
        
        private UIRegelsettClient mUIRegelsettClient;
        
        private UIItemWindow13 mUIItemWindow1;
        
        private UIItemClient2 mUIItemClient;
        
        private UIItemClient1 mUIItemClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRegelsettClient : WinClient
    {
        
        public UIRegelsettClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Regelsett";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TScrollBox";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIOnsdagførskjærtorsdaCheckBox
        {
            get
            {
                if ((this.mUIOnsdagførskjærtorsdaCheckBox == null))
                {
                    this.mUIOnsdagførskjærtorsdaCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIOnsdagførskjærtorsdaCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Onsdag før skjærtorsdag er helligdag i turnusplanen";
                    this.mUIOnsdagførskjærtorsdaCheckBox.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIOnsdagførskjærtorsdaCheckBox;
            }
        }
        
        public WinCheckBox UIOnsdagførskjærtorsdaCheckBox1
        {
            get
            {
                if ((this.mUIOnsdagførskjærtorsdaCheckBox1 == null))
                {
                    this.mUIOnsdagførskjærtorsdaCheckBox1 = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIOnsdagførskjærtorsdaCheckBox1.SearchProperties[WinCheckBox.PropertyNames.Name] = "Onsdag før skjærtorsdag er helligdag i arbeidsplan";
                    this.mUIOnsdagførskjærtorsdaCheckBox1.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIOnsdagførskjærtorsdaCheckBox1;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIOnsdagførskjærtorsdaCheckBox;
        
        private WinCheckBox mUIOnsdagførskjærtorsdaCheckBox1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient2 : WinClient
    {
        
        public UIItemClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public WinButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[WinButton.PropertyNames.Name] = "Avbryt";
                    this.mUIAvbrytButton.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public WinClient UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient1.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient1.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIItemClient1;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        
        private WinButton mUIAvbrytButton;
        
        private WinClient mUIItemClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient1 : WinClient
    {
        
        public UIItemClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63030730ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver63030730ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow7 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow7(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow7 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63030730ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63030730ASCLAvClient == null))
                {
                    this.mUIGatver63030730ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63030730ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver63030730ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63030730ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgradWindow : WinWindow
    {
        
        public UIVelgradWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Velg rad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmGridSearch";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow8 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow8(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow14 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow14(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow8 mUIItemWindow;
        
        private UIItemWindow14 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TEdit";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Velg rad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow14 : WinWindow
    {
        
        public UIItemWindow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.WindowTitles.Add("Velg rad");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63030869ASCLAvWindow : WinWindow
    {
        
        public UIGatver63030869ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient1 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient1(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient1 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient1 : DXTestControl
    {
        
        public UIPcMainPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList1 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList1(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList1 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList1 : DXTestControl
    {
        
        public UITcPanListsTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient1 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient1(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient1 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient1 : DXTestControl
    {
        
        public UITpRosterPlanListClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient1 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient1(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient1 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient1 : DXTestControl
    {
        
        public UIPnlGridClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlansTable1 UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable1(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlansTable1 mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlansTable1 : DXGrid
    {
        
        public UIGcRosterPlansTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UILØNNSBEREGNINGERCell
        {
            get
            {
                if ((this.mUILØNNSBEREGNINGERCell == null))
                {
                    this.mUILØNNSBEREGNINGERCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILØNNSBEREGNINGERCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]0[Column]gcolPlan";
                    this.mUILØNNSBEREGNINGERCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILØNNSBEREGNINGERCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUILØNNSBEREGNINGERCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUILØNNSBEREGNINGERCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63030891ASCLAvWindow : WinWindow
    {
        
        public UIGatver63030891ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient2 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient2(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient2 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient2 : DXTestControl
    {
        
        public UIPcMainPanelClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList2 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList2(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList2 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList2 : DXTestControl
    {
        
        public UITcPanListsTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient2 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient2(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient2 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient2 : DXTestControl
    {
        
        public UITpRosterPlanListClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient2 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient2(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient2 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient2 : DXTestControl
    {
        
        public UIPnlGridClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlansTable2 UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable2(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlansTable2 mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlansTable2 : DXGrid
    {
        
        public UIGcRosterPlansTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIKopiavLØNNSBEREGNINGCell
        {
            get
            {
                if ((this.mUIKopiavLØNNSBEREGNINGCell == null))
                {
                    this.mUIKopiavLØNNSBEREGNINGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKopiavLØNNSBEREGNINGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]1[Column]gcolPlan";
                    this.mUIKopiavLØNNSBEREGNINGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKopiavLØNNSBEREGNINGCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIKopiavLØNNSBEREGNINGCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIKopiavLØNNSBEREGNINGCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINyhjelpeplanWindow : DXWindow
    {
        
        public UINyhjelpeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny hjelpeplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient2 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient2(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        
        public UIPnlButtonsClient3 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient3(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient2 mUIPnlMainClient;
        
        private UIPnlButtonsClient3 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainClient2 : DXTestControl
    {
        
        public UIPnlMainClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom2 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom2(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom2 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControlMainCustom2 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup2 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup2(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup2 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNaLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup2 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup2(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup2 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroupNeLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem2 UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem2(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem2 mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainInfoLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient2 UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient2(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient2 mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainInfoClient2 : DXTestControl
    {
        
        public UIPnlMainInfoClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDate1PopupEdit
        {
            get
            {
                if ((this.mUIPceDate1PopupEdit == null))
                {
                    this.mUIPceDate1PopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate[1]";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDate1PopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDate1PopupEdit.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIPceDate1PopupEdit;
            }
        }
        
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber0Edit.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        
        public DXTextEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtName";
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtNameEdit.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDate1PopupEdit;
        
        private DXTextEdit mUIENumber0Edit;
        
        private DXTextEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient3 : DXTestControl
    {
        
        public UIPnlButtonsClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanHjelpeplaWindow : DXWindow
    {
        
        public UIArbeidsplanHjelpeplaWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon2 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon2(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon2 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon2 : DXRibbon
    {
        
        public UIRcMenuRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage2 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage2(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage2 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage2 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEffectuateNoneRevRibbonPageGroup UIGrpEffectuateNoneRevRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateNoneRevRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateNoneRevRibbonPageGroup = new UIGrpEffectuateNoneRevRibbonPageGroup(this);
                }
                return this.mUIGrpEffectuateNoneRevRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEffectuateNoneRevRibbonPageGroup mUIGrpEffectuateNoneRevRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEffectuateNoneRevRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateNoneRevRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow32 : WinWindow
    {
        
        public UIItemWindow32()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIKopierMenuItem
        {
            get
            {
                if ((this.mUIKopierMenuItem == null))
                {
                    this.mUIKopierMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIKopierMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Kopier";
                    #endregion
                }
                return this.mUIKopierMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIKopierMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanHjelpeplaWindow1 : DXWindow
    {
        
        public UIArbeidsplanHjelpeplaWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon3 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon3(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon3 mUIRcMenuRibbon;
        
        private DXButton mUICloseButton;
        
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon3 : DXRibbon
    {
        
        public UIRcMenuRibbon3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage3 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage3(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage3 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage3 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        
        public UIRibbonPageGroup9RibbonPageGroup UIRibbonPageGroup9RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup9RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup9RibbonPageGroup = new UIRibbonPageGroup9RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup9RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
              private UIRibbonPageGroup9RibbonPageGroup mUIRibbonPageGroup9RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonPageGroup9RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup9RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            this.WindowTitles.Add("Arbeidsplan: HjelpeplanLØNNSBEREGNINGER (Redigeringsmodus [Planen er låst av deg]" +
                    ")");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigerRibbonBaseButtonItem == null))
                {
                    this.mUIRedigerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRedigerRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: HjelpeplanLØNNSBEREGNINGER (Redigeringsmodus [Planen er låst av deg]" +
                            ")");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigerRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: HjelpeplanLØNNSBEREGNINGER (Redigeringsmodus [Planen er låst av deg]" +
                    ")");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: HjelpeplanLØNNSBEREGNINGER (Redigeringsmodus [Planen er låst av deg]" +
                    ")");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: HjelpeplanLØNNSBEREGNINGER (Redigeringsmodus [Planen er låst av deg]" +
                            ")");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit == null))
                {
                    this.mUIRow1ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_0";
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: HjelpeplanLØNNSBEREGNINGER (Redigeringsmodus [Planen er låst av deg]" +
                            ")");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63030995ASCLAvWindow : WinWindow
    {
        
        public UIGatver63030995ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient3 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient3(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient3 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient3 : DXTestControl
    {
        
        public UIPcMainPanelClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList3 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList3(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList3 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList3 : DXTestControl
    {
        
        public UITcPanListsTabList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient3 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient3(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient3 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient3 : DXTestControl
    {
        
        public UITpRosterPlanListClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlButtonsClient4 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient4(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlButtonsClient4 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient4 : DXTestControl
    {
        
        public UIPnlButtonsClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbRosterPlanFilterLookUpEdit
        {
            get
            {
                if ((this.mUICbRosterPlanFilterLookUpEdit == null))
                {
                    this.mUICbRosterPlanFilterLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbRosterPlanFilterLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbRosterPlanFilter";
                    this.mUICbRosterPlanFilterLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUICbRosterPlanFilterLookUpEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUICbRosterPlanFilterLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbRosterPlanFilterLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow42 : DXWindow
    {
        
        public UIItemWindow42()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("GT-4003 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow52 : DXWindow
    {
        
        public UIItemWindow52()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Forhåndsvisning av iverksettingsdata";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forhåndsvisning av iverksettingsdata");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient3 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient3(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Forhåndsvisning av iverksettingsdata");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient3 mUIGSPanelControlClient;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient3 : DXTestControl
    {
        
        public UIGSPanelControlClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forhåndsvisning av iverksettingsdata");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuation";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Forhåndsvisning av iverksettingsdata");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanFASTETILLWindow : DXWindow
    {
        
        public UIArbeidsplanFASTETILLWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan:", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDpnlVisualizationDockPanel UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlVisualizationDockPanel mUIDpnlVisualizationDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDpnlVisualizationDockPanel : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UITcVisualizationTabList UITcVisualizationTabList
        {
            get
            {
                if ((this.mUITcVisualizationTabList == null))
                {
                    this.mUITcVisualizationTabList = new UITcVisualizationTabList(this);
                }
                return this.mUITcVisualizationTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcVisualizationTabList mUITcVisualizationTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcVisualizationTabList : DXTestControl
    {
        
        public UITcVisualizationTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
            
        public UITpFTTClient UITpFTTClient
        {
            get
            {
                if ((this.mUITpFTTClient == null))
                {
                    this.mUITpFTTClient = new UITpFTTClient(this);
                }
                return this.mUITpFTTClient;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private UITpFTTClient mUITpFTTClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpFTTClient : DXTestControl
    {
        
        public UITpFTTClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpFTT";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIPnlMenuClient UIPnlMenuClient
        {
            get
            {
                if ((this.mUIPnlMenuClient == null))
                {
                    this.mUIPnlMenuClient = new UIPnlMenuClient(this);
                }
                return this.mUIPnlMenuClient;
            }
        }
        
        public UIPnlGridClient3 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient3(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMenuClient mUIPnlMenuClient;
        
        private UIPnlGridClient3 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMenuClient : DXTestControl
    {
        
        public UIPnlMenuClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXButton UIRekalkulertilleggButton
        {
            get
            {
                if ((this.mUIRekalkulertilleggButton == null))
                {
                    this.mUIRekalkulertilleggButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRekalkulertilleggButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btCalculate";
                    this.mUIRekalkulertilleggButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIRekalkulertilleggButton.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    this.mUIRekalkulertilleggButton.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIRekalkulertilleggButton;
            }
        }
        
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIRekalkulertilleggButton;
        
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UICeAverageForMonthCheckBox
        {
            get
            {
                if ((this.mUICeAverageForMonthCheckBox == null))
                {
                    this.mUICeAverageForMonthCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICeAverageForMonthCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ceAverageForMonth";
                    this.mUICeAverageForMonthCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICeAverageForMonthCheckBox.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    this.mUICeAverageForMonthCheckBox.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUICeAverageForMonthCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUICeAverageForMonthCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient3 : DXTestControl
    {
        
        public UIPnlGridClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIGcFTTTable UIGcFTTTable
        {
            get
            {
                if ((this.mUIGcFTTTable == null))
                {
                    this.mUIGcFTTTable = new UIGcFTTTable(this);
                }
                return this.mUIGcFTTTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcFTTTable mUIGcFTTTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcFTTTable : DXGrid
    {
        
        public UIGcFTTTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFTT";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem2Cell
        {
            get
            {
                if ((this.mUIItem2Cell == null))
                {
                    this.mUIItem2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFTTGridControlCell[View]gvFTT[Row]2[Column]PaymentCell_400";
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    this.mUIItem2Cell.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIItem2Cell;
            }
        }
        
        public DXColumnHeader UIColNameColumnHeader
        {
            get
            {
                if ((this.mUIColNameColumnHeader == null))
                {
                    this.mUIColNameColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUIColNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFTTGridControlColumnHeader[View]gvFTT[Column]colName";
                    this.mUIColNameColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUIColNameColumnHeader.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    this.mUIColNameColumnHeader.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIColNameColumnHeader;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem2Cell;
        
        private DXColumnHeader mUIColNameColumnHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63031120ASCLAvWindow : WinWindow
    {
        
        public UIGatver63031120ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcTopPanelClient UIPcTopPanelClient
        {
            get
            {
                if ((this.mUIPcTopPanelClient == null))
                {
                    this.mUIPcTopPanelClient = new UIPcTopPanelClient(this);
                }
                return this.mUIPcTopPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcTopPanelClient mUIPcTopPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcTopPanelClient : DXTestControl
    {
        
        public UIPcTopPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcTopPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UINivåButton
        {
            get
            {
                if ((this.mUINivåButton == null))
                {
                    this.mUINivåButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINivåButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnLevel";
                    this.mUINivåButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINivåButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINivåButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINivåButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT2004AdvarselWindow : WinWindow
    {
        
        public UIGT2004AdvarselWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GT-2004 - Advarsel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public UIItemWindow9 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow9(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow9 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public UIGT2004AdvarselClient UIGT2004AdvarselClient
        {
            get
            {
                if ((this.mUIGT2004AdvarselClient == null))
                {
                    this.mUIGT2004AdvarselClient = new UIGT2004AdvarselClient(this);
                }
                return this.mUIGT2004AdvarselClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGT2004AdvarselClient mUIGT2004AdvarselClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT2004AdvarselClient : WinClient
    {
        
        public UIGT2004AdvarselClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("GT-2004 - Advarsel");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIResultaterfrasystemsWindow : WinWindow
    {
        
        public UIResultaterfrasystemsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Resultater fra systemsjekk / faste SQL scripts";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmSQLViewResult";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public UIResultaterfrasystemsTitleBar UIResultaterfrasystemsTitleBar
        {
            get
            {
                if ((this.mUIResultaterfrasystemsTitleBar == null))
                {
                    this.mUIResultaterfrasystemsTitleBar = new UIResultaterfrasystemsTitleBar(this);
                }
                return this.mUIResultaterfrasystemsTitleBar;
            }
        }
        
        public UIItemWindow10 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow10(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIResultaterfrasystemsTitleBar mUIResultaterfrasystemsTitleBar;
        
        private UIItemWindow10 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIResultaterfrasystemsTitleBar : WinTitleBar
    {
        
        public UIResultaterfrasystemsTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow10 : WinWindow
    {
        
        public UIItemWindow10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public WinClient UIResultaterfrasystemsClient
        {
            get
            {
                if ((this.mUIResultaterfrasystemsClient == null))
                {
                    this.mUIResultaterfrasystemsClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIResultaterfrasystemsClient.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
                    #endregion
                }
                return this.mUIResultaterfrasystemsClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIResultaterfrasystemsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65041130ASCLAvWindow : WinWindow
    {
        
        public UIGatver65041130ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient4 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient4(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient4 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient4 : DXTestControl
    {
        
        public UIPcMainPanelClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList4 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList4(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList4 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList4 : DXTestControl
    {
        
        public UITcPanListsTabList4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient4 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient4(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient4 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient4 : DXTestControl
    {
        
        public UITpRosterPlanListClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRosterPlanListCustom : DXTestControl
    {
        
        public UIRosterPlanListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient4 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient4(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient4 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient4 : DXTestControl
    {
        
        public UIPnlGridClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpgFiltersRibbonPageGroup UIRpgFiltersRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFiltersRibbonPageGroup == null))
                {
                    this.mUIRpgFiltersRibbonPageGroup = new UIRpgFiltersRibbonPageGroup(this);
                }
                return this.mUIRpgFiltersRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFiltersRibbonPageGroup mUIRpgFiltersRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgFiltersRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgFiltersRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilters";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIGamleRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIGamleRibbonBaseButtonItem == null))
                {
                    this.mUIGamleRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowOldPlans";
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIGamleRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGamleRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIGamleRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65041253ASCLAvWindow : WinWindow
    {
        
        public UIGatver65041253ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient5 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient5(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient5 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient5 : DXTestControl
    {
        
        public UIPcMainPanelClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList5 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList5(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList5 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList5 : DXTestControl
    {
        
        public UITcPanListsTabList5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient5 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient5(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient5 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient5 : DXTestControl
    {
        
        public UITpRosterPlanListClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom1 UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom1(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom1 mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRosterPlanListCustom1 : DXTestControl
    {
        
        public UIRosterPlanListCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient5 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient5(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient5 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient5 : DXTestControl
    {
        
        public UIPnlGridClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlansTable3 UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable3(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        
        public UIRibbonControlRibbon1 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon1(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlansTable3 mUIGcRosterPlansTable;
        
        private UIRibbonControlRibbon1 mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlansTable3 : DXGrid
    {
        
        public UIGcRosterPlansTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UILØNNSBEREGNINGERCell
        {
            get
            {
                if ((this.mUILØNNSBEREGNINGERCell == null))
                {
                    this.mUILØNNSBEREGNINGERCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILØNNSBEREGNINGERCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]0[Column]gcolPlan";
                    this.mUILØNNSBEREGNINGERCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILØNNSBEREGNINGERCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUILØNNSBEREGNINGERCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUILØNNSBEREGNINGERCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon1 : DXRibbon
    {
        
        public UIRibbonControlRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage1 UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage1(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage1 mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpHomeRibbonPage1 : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpgFiltersRibbonPageGroup1 UIRpgFiltersRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFiltersRibbonPageGroup == null))
                {
                    this.mUIRpgFiltersRibbonPageGroup = new UIRpgFiltersRibbonPageGroup1(this);
                }
                return this.mUIRpgFiltersRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFiltersRibbonPageGroup1 mUIRpgFiltersRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgFiltersRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgFiltersRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilters";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIGamleRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIGamleRibbonBaseButtonItem == null))
                {
                    this.mUIGamleRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowOldPlans";
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIGamleRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGamleRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UINyeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINyeRibbonBaseButtonItem == null))
                {
                    this.mUINyeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINyeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowNewPlans";
                    this.mUINyeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINyeRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINyeRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIGamleRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUINyeRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65041321ASCLAvWindow : WinWindow
    {
        
        public UIGatver65041321ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient6 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient6(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient6 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient6 : DXTestControl
    {
        
        public UIPcMainPanelClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList6 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList6(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList6 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList6 : DXTestControl
    {
        
        public UITcPanListsTabList6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient6 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient6(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient6 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient6 : DXTestControl
    {
        
        public UITpRosterPlanListClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom2 UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom2(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom2 mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRosterPlanListCustom2 : DXTestControl
    {
        
        public UIRosterPlanListCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient6 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient6(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient6 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient6 : DXTestControl
    {
        
        public UIPnlGridClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon2 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon2(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon2 mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon2 : DXRibbon
    {
        
        public UIRibbonControlRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage2 UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage2(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage2 mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpHomeRibbonPage2 : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup1 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup1(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        
        public UIRpgLevelRibbonPageGroup UIRpgLevelRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgLevelRibbonPageGroup == null))
                {
                    this.mUIRpgLevelRibbonPageGroup = new UIRpgLevelRibbonPageGroup(this);
                }
                return this.mUIRpgLevelRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup1 mUIRpgPlanRibbonPageGroup;
        
        private UIRpgLevelRibbonPageGroup mUIRpgLevelRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UISlettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISlettRibbonBaseButtonItem == null))
                {
                    this.mUISlettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiDeletePlan";
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUISlettRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUISlettRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgLevelRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgLevelRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgLevel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINivåRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINivåRibbonBaseButtonItem == null))
                {
                    this.mUINivåRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINivåRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiChangeLevel";
                    this.mUINivåRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINivåRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINivåRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINivåRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanFASTETILLWindow1 : DXWindow
    {
        
        public UIArbeidsplanFASTETILLWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan:", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDpnlVisualizationDockPanel1 UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel1(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlVisualizationDockPanel1 mUIDpnlVisualizationDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDpnlVisualizationDockPanel1 : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom1 UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom1(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom1 mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDockPanel3_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UITcVisualizationTabList1 UITcVisualizationTabList
        {
            get
            {
                if ((this.mUITcVisualizationTabList == null))
                {
                    this.mUITcVisualizationTabList = new UITcVisualizationTabList1(this);
                }
                return this.mUITcVisualizationTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcVisualizationTabList1 mUITcVisualizationTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcVisualizationTabList1 : DXTestControl
    {
        
        public UITcVisualizationTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
       
        public UITpFixedPaymentClient UITpFixedPaymentClient
        {
            get
            {
                if ((this.mUITpFixedPaymentClient == null))
                {
                    this.mUITpFixedPaymentClient = new UITpFixedPaymentClient(this);
                }
                return this.mUITpFixedPaymentClient;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private UITpFixedPaymentClient mUITpFixedPaymentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpFixedPaymentClient : DXTestControl
    {
        
        public UITpFixedPaymentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpFixedPayment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFixedPaymentControlCustom : DXTestControl
    {
        
        public UIFixedPaymentControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControllerToViewModelWrapper";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIViewHost1Custom : DXTestControl
    {
        
        public UIViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom1 UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom1(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom1 mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFixedPaymentControlCustom1 : DXTestControl
    {
        
        public UIFixedPaymentControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedPaymentControl";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIPgcCalculationResultPivotGrid UIPgcCalculationResultPivotGrid
        {
            get
            {
                if ((this.mUIPgcCalculationResultPivotGrid == null))
                {
                    this.mUIPgcCalculationResultPivotGrid = new UIPgcCalculationResultPivotGrid(this);
                }
                return this.mUIPgcCalculationResultPivotGrid;
            }
        }
        
        public DXButton UIKalkulerButton
        {
            get
            {
                if ((this.mUIKalkulerButton == null))
                {
                    this.mUIKalkulerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIKalkulerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCalculate";
                    this.mUIKalkulerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIKalkulerButton.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    this.mUIKalkulerButton.WindowTitles.Add("Arbeidsplan:");
                    #endregion
                }
                return this.mUIKalkulerButton;
            }
        }
        
        public DXButton UISkrivutButton
        {
            get
            {
                if ((this.mUISkrivutButton == null))
                {
                    this.mUISkrivutButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISkrivutButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPrint";
                    this.mUISkrivutButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISkrivutButton.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    #endregion
                }
                return this.mUISkrivutButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPgcCalculationResultPivotGrid mUIPgcCalculationResultPivotGrid;
        
        private DXButton mUIKalkulerButton;
        
        private DXButton mUISkrivutButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPgcCalculationResultPivotGrid : DXPivotGrid
    {
        
        public UIPgcCalculationResultPivotGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pgcCalculationResults";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridControl";
            this.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXPivotGridFieldValue UIVaktkode1PivotGridFieldValue
        {
            get
            {
                if ((this.mUIVaktkode1PivotGridFieldValue == null))
                {
                    this.mUIVaktkode1PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIVaktkode1PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Employee[LastLevelIndex]0";
                    this.mUIVaktkode1PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIVaktkode1PivotGridFieldValue.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIVaktkode1PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIItem24102011PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem24102011PivotGridFieldValue == null))
                {
                    this.mUIItem24102011PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem24102011PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Start[LastLevelIndex]0";
                    this.mUIItem24102011PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem24102011PivotGridFieldValue.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem24102011PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIItem28122014PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem28122014PivotGridFieldValue == null))
                {
                    this.mUIItem28122014PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem28122014PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]End[LastLevelIndex]0";
                    this.mUIItem28122014PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem28122014PivotGridFieldValue.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem28122014PivotGridFieldValue;
            }
        }
        
        public DXPivotGridCell UIItem8PivotGridCell
        {
            get
            {
                if ((this.mUIItem8PivotGridCell == null))
                {
                    this.mUIItem8PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem8PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]0[Row]0";
                    this.mUIItem8PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem8PivotGridCell.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem8PivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItemPivotGridCell
        {
            get
            {
                if ((this.mUIItemPivotGridCell == null))
                {
                    this.mUIItemPivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItemPivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]1[Row]0";
                    this.mUIItemPivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItemPivotGridCell.WindowTitles.Add("Arbeidsplan: FASTE TILLEGG (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItemPivotGridCell;
            }
        }
        #endregion
        
        #region Fields
        private DXPivotGridFieldValue mUIVaktkode1PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIItem24102011PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIItem28122014PivotGridFieldValue;
        
        private DXPivotGridCell mUIItem8PivotGridCell;
        
        private DXPivotGridCell mUIItemPivotGridCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIForhåndsvisningWindow : DXWindow
    {
        
        public UIForhåndsvisningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Forhåndsvisning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon3 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon3(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon3 mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon3 : DXRibbon
    {
        
        public UIRibbonControlRibbon3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIPrintPreviewRibbonPaRibbonPage UIPrintPreviewRibbonPaRibbonPage
        {
            get
            {
                if ((this.mUIPrintPreviewRibbonPaRibbonPage == null))
                {
                    this.mUIPrintPreviewRibbonPaRibbonPage = new UIPrintPreviewRibbonPaRibbonPage(this);
                }
                return this.mUIPrintPreviewRibbonPaRibbonPage;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPrintPreviewRibbonPaRibbonPage mUIPrintPreviewRibbonPaRibbonPage;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPrintPreviewRibbonPaRibbonPage : DXRibbonPage
    {
        
        public UIPrintPreviewRibbonPaRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PrintPreviewRibbonPage0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIExportRibbonPageGroup UIExportRibbonPageGroup
        {
            get
            {
                if ((this.mUIExportRibbonPageGroup == null))
                {
                    this.mUIExportRibbonPageGroup = new UIExportRibbonPageGroup(this);
                }
                return this.mUIExportRibbonPageGroup;
            }
        }
        
        public UICloseRibbonPageGroup UICloseRibbonPageGroup
        {
            get
            {
                if ((this.mUICloseRibbonPageGroup == null))
                {
                    this.mUICloseRibbonPageGroup = new UICloseRibbonPageGroup(this);
                }
                return this.mUICloseRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIExportRibbonPageGroup mUIExportRibbonPageGroup;
        
        private UICloseRibbonPageGroup mUICloseRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIExportRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIExportRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Export";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIEksportertilRibbonItem UIEksportertilRibbonItem
        {
            get
            {
                if ((this.mUIEksportertilRibbonItem == null))
                {
                    this.mUIEksportertilRibbonItem = new UIEksportertilRibbonItem(this);
                }
                return this.mUIEksportertilRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private UIEksportertilRibbonItem mUIEksportertilRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEksportertilRibbonItem : DXRibbonItem
    {
        
        public UIEksportertilRibbonItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXButton UIBarButtonItemLink0Button
        {
            get
            {
                if ((this.mUIBarButtonItemLink0Button == null))
                {
                    this.mUIBarButtonItemLink0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItemDrop";
                    this.mUIBarButtonItemLink0Button.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIBarButtonItemLink0Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBarButtonItemLink0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICloseRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UICloseRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBarButtonItemLink0RibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink0RibbonBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink0RibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0RibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBarButtonItemLink0RibbonBaseButtonItem.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIBarButtonItemLink0RibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBarButtonItemLink0RibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow61 : DXWindow
    {
        
        public UIItemWindow61()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "XLSX Export Options";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("XLSX Export Options");
            #endregion
        }
        
        #region Properties
        public UIPanelControlClient UIPanelControlClient
        {
            get
            {
                if ((this.mUIPanelControlClient == null))
                {
                    this.mUIPanelControlClient = new UIPanelControlClient(this);
                }
                return this.mUIPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlClient mUIPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlClient : DXTestControl
    {
        
        public UIPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("XLSX Export Options");
            #endregion
        }
        
        #region Properties
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("XLSX Export Options");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIDetailsPanePane UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsPanePane mUIDetailsPanePane;
        
        private UISaveWindow mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDetailsPanePane : WinPane
    {
        
        public UIDetailsPanePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow71 : WinWindow
    {
        
        public UIItemWindow71()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIExportWindow UIExportWindow
        {
            get
            {
                if ((this.mUIExportWindow == null))
                {
                    this.mUIExportWindow = new UIExportWindow(this);
                }
                return this.mUIExportWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIExportWindow mUIExportWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIExportWindow : DXWindow
    {
        
        public UIExportWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Export";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
            #endregion
        }
        
        #region Properties
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ExportSimpleButton[1]";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanFASTETILLWindow2 : DXWindow
    {
        
        public UIArbeidsplanFASTETILLWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan:", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIDpnlVisualizationDockPanel2 UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel2(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlVisualizationDockPanel2 mUIDpnlVisualizationDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDpnlVisualizationDockPanel2 : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom2 UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom2(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom2 mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDockPanel3_ContainerCustom2 : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            #endregion
        }
        
        #region Properties
        public UITcVisualizationTabList2 UITcVisualizationTabList
        {
            get
            {
                if ((this.mUITcVisualizationTabList == null))
                {
                    this.mUITcVisualizationTabList = new UITcVisualizationTabList2(this);
                }
                return this.mUITcVisualizationTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcVisualizationTabList2 mUITcVisualizationTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcVisualizationTabList2 : DXTestControl
    {
        
        public UITcVisualizationTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            #endregion
        }
        
        #region Properties
        public UITpFixedPaymentClient1 UITpFixedPaymentClient
        {
            get
            {
                if ((this.mUITpFixedPaymentClient == null))
                {
                    this.mUITpFixedPaymentClient = new UITpFixedPaymentClient1(this);
                }
                return this.mUITpFixedPaymentClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpFixedPaymentClient1 mUITpFixedPaymentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpFixedPaymentClient1 : DXTestControl
    {
        
        public UITpFixedPaymentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpFixedPayment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom2 UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom2(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom2 mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFixedPaymentControlCustom2 : DXTestControl
    {
        
        public UIFixedPaymentControlCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControllerToViewModelWrapper";
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom1 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom1(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom1 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIViewHost1Custom1 : DXTestControl
    {
        
        public UIViewHost1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom3 UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom3(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom3 mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFixedPaymentControlCustom3 : DXTestControl
    {
        
        public UIFixedPaymentControlCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedPaymentControl";
            #endregion
        }
        
        #region Properties
        public DXComboBox UICbeCalculationTypeComboBox
        {
            get
            {
                if ((this.mUICbeCalculationTypeComboBox == null))
                {
                    this.mUICbeCalculationTypeComboBox = new DXComboBox(this);
                    #region Search Criteria
                    this.mUICbeCalculationTypeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeCalculationType";
                    this.mUICbeCalculationTypeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
                    #endregion
                }
                return this.mUICbeCalculationTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private DXComboBox mUICbeCalculationTypeComboBox;
        #endregion
    }
}
