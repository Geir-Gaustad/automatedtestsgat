// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _020_Test_Arbeidsplan_Beregninger
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddAbsence41ToRoger
        /// </summary>
        public void AddAbsence41ToRoger()
        {
            #region Variable Declarations
            DXCell uIA3Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIA3Cell;
            DXCell uIItemCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItemCell1;
            #endregion

            // Move 'A3' cell to cell
            uIItemCell1.EnsureClickable(new Point(18, 9));
            Mouse.StartDragging(uIA3Cell, new Point(20, 8));
            Mouse.StopDragging(uIItemCell1, new Point(18, 9));

            // Right-Click cell
            Mouse.Click(uIItemCell1, MouseButtons.Right, ModifierKeys.None, new Point(18, 9));
        }
        
        /// <summary>
        /// CheckF3AndNormalSelectDepartmentRosterplanTab - Use 'CheckF3AndNormalSelectDepartmentRosterplanTabParams' to pass parameters into this method.
        /// </summary>
        public void CheckF3AndNormalSelectDepartmentRosterplanTab()
        {
            #region Variable Declarations
            DXCheckBox uIChkAdjustF3StaticValCheckBox = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIViewTabPageClient.UIWorkPlanDepartmentSeCustom.UIGroupControl3Client.UIChkAdjustF3StaticValCheckBox;
            DXRadioGroup uIRgCalculateNormalHouRadioGroup = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIViewTabPageClient.UIWorkPlanDepartmentSeCustom.UIGroupControl3Client.UIRgCalculateNormalHouRadioGroup;
            DXRibbonButtonItem uILagreRibbonBaseButtonItem = this.UIAvdelingsoppsettWindow.UIRibbonControl1Ribbon.UIRpHomeRibbonPage.UIRpgHjemRibbonPageGroup.UILagreRibbonBaseButtonItem;
            DXButton uICloseButton = this.UIAvdelingsoppsettWindow.UIRibbonControl1Ribbon.UICloseButton;
            #endregion

            // Select 'chkAdjustF3StaticValueToPositionPercent' check box
            uIChkAdjustF3StaticValCheckBox.Checked = this.CheckF3AndNormalSelectDepartmentRosterplanTabParams.UIChkAdjustF3StaticValCheckBoxChecked;

            // Type '1' in 'rgCalculateNormalHoursOnRedDays' RadioGroup
            //SelectedIndex
            uIRgCalculateNormalHouRadioGroup.SelectedIndex = this.CheckF3AndNormalSelectDepartmentRosterplanTabParams.UIRgCalculateNormalHouRadioGroupSelectedIndex;

            // Click 'Lagre' RibbonBaseButtonItem
            Mouse.Click(uILagreRibbonBaseButtonItem, new Point(16, 26));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(10, 9));
        }
        
        /// <summary>
        /// CheckValues_Step_10_2 - Use 'CheckValues_Step_10_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_10_2()
        {
            #region Variable Declarations
            DXCell uIItem355Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell;
            DXCell uIItem84Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem84Cell;
            DXCell uIItem271Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem271Cell;
            DXCell uIItem142Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem142Cell;
            DXCell uIItem336Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem336Cell;
            DXCell uIItem336Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem336Cell1;
            DXCell uIItem1084Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1084Cell;
            DXCell uIItem1084Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1084Cell1;
            DXCell uIItem2366Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2366Cell;
            #endregion

            // Verify that the 'Text' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckValues_Step_10_2ExpectedValues.UIItem355CellText, uIItem355Cell.Text);

            // Verify that the 'Text' property of '8,4' cell equals '8,4'
            Assert.AreEqual(this.CheckValues_Step_10_2ExpectedValues.UIItem84CellText, uIItem84Cell.Text);

            // Verify that the 'Text' property of '-27,1' cell equals '-27,1'
            Assert.AreEqual(this.CheckValues_Step_10_2ExpectedValues.UIItem271CellText, uIItem271Cell.Text);

            // Verify that the 'Text' property of '142' cell equals '142'
            Assert.AreEqual(this.CheckValues_Step_10_2ExpectedValues.UIItem142CellText, uIItem142Cell.Text);

            // Verify that the 'Text' property of '33,6' cell equals '33,6'
            Assert.AreEqual(this.CheckValues_Step_10_2ExpectedValues.UIItem336CellText, uIItem336Cell.Text);

            // Verify that the 'Text' property of '33,6' cell equals '33,6'
            Assert.AreEqual(this.CheckValues_Step_10_2ExpectedValues.UIItem336Cell1Text, uIItem336Cell1.Text);

            // Verify that the 'Text' property of '-108,4' cell equals '-108,4'
            Assert.AreEqual(this.CheckValues_Step_10_2ExpectedValues.UIItem1084CellText, uIItem1084Cell.Text);

            // Verify that the 'Text' property of '-108,4' cell equals '-108,4'
            Assert.AreEqual(this.CheckValues_Step_10_2ExpectedValues.UIItem1084Cell1Text, uIItem1084Cell1.Text);

            // Verify that the 'Text' property of '23,66%' cell equals '23,66%'
            Assert.AreEqual(this.CheckValues_Step_10_2ExpectedValues.UIItem2366CellText, uIItem2366Cell.Text);
        }
        
        /// <summary>
        /// CheckValues_Step_11 - Use 'CheckValues_Step_11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_11()
        {
            #region Variable Declarations
            DXCell uIItem375Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem375Cell1;
            DXCell uIItem355Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell2;
            DXCell uIItem2506Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2506Cell1;
            DXCell uIItem355Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell1;
            DXCell uIItem2506Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2506Cell;
            DXCell uIItem1044Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1044Cell;
            DXCell uIItem1065Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1065Cell1;
            DXCell uIItem7517Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7517Cell;
            DXCell uIItem7517Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7517Cell1;
            DXCell uIItem3133Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3133Cell;
            #endregion

            // Verify that the 'Text' property of '37,5' cell equals '37,5'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem375Cell1Text, uIItem375Cell1.Text);

            // Verify that the 'Text' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem355Cell2Text, uIItem355Cell2.Text);

            // Verify that the 'Text' property of '25,06' cell equals '35,89'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem2506Cell1Text, uIItem2506Cell1.Text);

            // Verify that the 'Text' property of '35,5' cell equals '0,39'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem355Cell1Text, uIItem355Cell1.Text);

            // Verify that the 'Text' property of '25,06' cell equals '106,5'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem2506CellText, uIItem2506Cell.Text);

            // Verify that the 'Text' property of '-10,44' cell equals '107,67'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem1044CellText, uIItem1044Cell.Text);

            // Verify that the 'Text' property of '106,5' cell equals '107,67'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem1065Cell1Text, uIItem1065Cell1.Text);

            // Verify that the 'Text' property of '75,17' cell equals '1,17'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem7517CellText, uIItem7517Cell.Text);

            // Verify that the 'Text' property of '75,17' cell equals '1,17'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem7517Cell1Text, uIItem7517Cell1.Text);

            // Verify that the 'Text' property of '-31,33' cell equals '101,1%'
            Assert.AreEqual(this.CheckValues_Step_11ExpectedValues.UIItem3133CellText, uIItem3133Cell.Text);
        }
        
        /// <summary>
        /// CheckValues_Step_12 - Use 'CheckValues_Step_12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_12()
        {
            #region Variable Declarations
            DXCell uIVAKANTCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIVAKANTCell;
            DXCell uIItem100Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem100Cell1;
            DXCell uIItem75Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem75Cell1;
            DXCell uIItem075Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem075Cell1;
            DXCell uIItem355Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell2;
            DXCell uIItem2506Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2506Cell1;
            #endregion

            // Verify that the 'Text' property of 'VAKANT' cell equals 'Roger, Rally'
            Assert.AreEqual(this.CheckValues_Step_12ExpectedValues.UIVAKANTCellText, uIVAKANTCell.Text);

            // Verify that the 'Text' property of '100' cell equals '100'
            Assert.AreEqual(this.CheckValues_Step_12ExpectedValues.UIItem100Cell1Text, uIItem100Cell1.Text);

            // Verify that the 'Text' property of '75' cell equals '75'
            Assert.AreEqual(this.CheckValues_Step_12ExpectedValues.UIItem75Cell1Text, uIItem75Cell1.Text);

            // Verify that the 'Text' property of '0,75' cell equals '0,75'
            Assert.AreEqual(this.CheckValues_Step_12ExpectedValues.UIItem075Cell1Text, uIItem075Cell1.Text);

            // Verify that the 'Text' property of '35,5' cell equals '109,86%'
            Assert.AreEqual(this.CheckValues_Step_12ExpectedValues.UIItem355Cell2Text, uIItem355Cell2.Text);

            // Verify that the 'Text' property of '25,06' cell equals '75,82%'
            Assert.AreEqual(this.CheckValues_Step_12ExpectedValues.UIItem2506Cell1Text, uIItem2506Cell1.Text);
        }
        
        /// <summary>
        /// CheckValues_Step_2 - Use 'CheckValues_Step_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_2()
        {
            #region Variable Declarations
            DXCell uIItem8Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem8Cell;
            DXCell uIItem8Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem8Cell1;
            DXCell uIItem1867Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem1867Cell;
            DXCell uIItem1867Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem1867Cell1;
            DXCell uIItem4Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem4Cell;
            DXCell uIItem4Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem4Cell1;
            DXCell uIItem253Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem253Cell;
            DXCell uIItem253Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem253Cell1;
            DXCell uIItem375Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem375Cell;
            DXCell uIItem375Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem375Cell1;
            DXCell uIItem42Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem42Cell;
            DXCell uIItem42Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem42Cell1;
            DXCell uIItem325Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem325Cell;
            DXCell uIItem325Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem325Cell1;
            DXCell uIItem30Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem30Cell;
            DXCell uIItem30Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem30Cell1;
            DXCell uIItem155Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem155Cell;
            DXCell uIItem0Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell;
            DXCell uIItem155Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem155Cell1;
            DXCell uIItem20Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem20Cell;
            DXCell uIItem0Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell1;
            DXCell uIItem20Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem20Cell1;
            DXCell uIItem0Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell2;
            DXCell uIItem8Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem8Cell2;
            DXCell uIItem8Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem8Cell3;
            DXCell uIItem0Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell3;
            DXCell uIItem8Cell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem8Cell4;
            DXCell uIItem8Cell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem8Cell5;
            DXCell uIItem0Cell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell4;
            DXCell uIItem0Cell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell5;
            DXCell uIItem0Cell6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell6;
            DXCell uIItem0Cell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell7;
            DXCell uIItem3933Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3933Cell;
            DXCell uIItem3933Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem3933Cell1;
            DXCell uIItem355Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem355Cell;
            DXCell uIItem355Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem355Cell1;
            DXCell uIItem22Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem22Cell;
            DXCell uIItem0Cell8 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell8;
            DXCell uIItem22Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem22Cell1;
            DXCell uIItem15Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem15Cell;
            DXCell uIItem0Cell9 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell9;
            DXCell uIItem15Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem15Cell1;
            DXCell uIItem0Cell10 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell10;
            DXCell uIItem15Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem15Cell2;
            DXCell uIItem15Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem15Cell3;
            DXCell uIItem0Cell11 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell11;
            DXCell uIItem20Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem20Cell2;
            DXCell uIItem20Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem20Cell3;
            DXCell uIItem40Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem40Cell;
            DXCell uIItem533Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem533Cell;
            DXCell uIItem4533Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem4533Cell;
            DXCell uIItem40Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem40Cell1;
            DXCell uIItem0Cell12 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem0Cell12;
            DXCell uIItem40Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem40Cell2;
            DXCell uIItem40Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem40Cell3;
            DXCell uIItem8Cell6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem8Cell6;
            DXCell uIItem48Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem48Cell;
            DXCell uIItem24Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem24Cell;
            DXCell uIItem32Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem32Cell;
            DXCell uIItem272Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem272Cell;
            DXCell uIItem30Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem30Cell2;
            DXCell uIItem30Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem30Cell3;
            DXCell uIItem29Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem29Cell;
            DXCell uIItem29Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem29Cell1;
            DXCell uIItem315Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem315Cell;
            DXCell uIItem315Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem315Cell1;
            DXCell uIItem1467Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem1467Cell;
            DXCell uIItem1467Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem1467Cell1;
            #endregion

            // Verify that the 'ValueAsString' property of '8' cell equals '8'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem8CellValueAsString, uIItem8Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '8' cell equals '8'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem8Cell1ValueAsString, uIItem8Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '18,67' cell equals '10,67'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem1867CellValueAsString, uIItem1867Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '18,67' cell equals '10,67'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem1867Cell1ValueAsString, uIItem1867Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '4' cell equals '4'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem4CellValueAsString, uIItem4Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '4' cell equals '4'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem4Cell1ValueAsString, uIItem4Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '2,53' cell equals '2,53'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem253CellValueAsString, uIItem253Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '2,53' cell equals '2,53'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem253Cell1ValueAsString, uIItem253Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '37,5' cell equals '37,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem375CellValueAsString, uIItem375Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '37,5' cell equals '37,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem375Cell1ValueAsString, uIItem375Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '42' cell equals '42'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem42CellValueAsString, uIItem42Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '42' cell equals '42'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem42Cell1ValueAsString, uIItem42Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '32,5' cell equals '32,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem325CellValueAsString, uIItem325Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '32,5' cell equals '32,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem325Cell1ValueAsString, uIItem325Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '30' cell equals '30'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem30CellValueAsString, uIItem30Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '30' cell equals '30'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem30Cell1ValueAsString, uIItem30Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '15,5' cell equals '15,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem155CellValueAsString, uIItem155Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0CellValueAsString, uIItem0Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '15,5' cell equals '15,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem155Cell1ValueAsString, uIItem155Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '20' cell equals '20'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem20CellValueAsString, uIItem20Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell1ValueAsString, uIItem0Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '20' cell equals '20'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem20Cell1ValueAsString, uIItem20Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell2ValueAsString, uIItem0Cell2.ValueAsString);

            // Verify that the 'ValueAsString' property of '8' cell equals '8'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem8Cell2ValueAsString, uIItem8Cell2.ValueAsString);

            // Verify that the 'ValueAsString' property of '8' cell equals '8'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem8Cell3ValueAsString, uIItem8Cell3.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell3ValueAsString, uIItem0Cell3.ValueAsString);

            // Verify that the 'ValueAsString' property of '8' cell equals '8'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem8Cell4ValueAsString, uIItem8Cell4.ValueAsString);

            // Verify that the 'ValueAsString' property of '8' cell equals '8'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem8Cell5ValueAsString, uIItem8Cell5.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell4ValueAsString, uIItem0Cell4.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell5ValueAsString, uIItem0Cell5.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell6ValueAsString, uIItem0Cell6.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell7ValueAsString, uIItem0Cell7.ValueAsString);

            // Verify that the 'ValueAsString' property of '39,33' cell equals '39,33'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem3933CellValueAsString, uIItem3933Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '39,33' cell equals '39,33'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem3933Cell1ValueAsString, uIItem3933Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem355CellValueAsString, uIItem355Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem355Cell1ValueAsString, uIItem355Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '22' cell equals '22'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem22CellValueAsString, uIItem22Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell8ValueAsString, uIItem0Cell8.ValueAsString);

            // Verify that the 'ValueAsString' property of '22' cell equals '22'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem22Cell1ValueAsString, uIItem22Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '15' cell equals '15'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem15CellValueAsString, uIItem15Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell9ValueAsString, uIItem0Cell9.ValueAsString);

            // Verify that the 'ValueAsString' property of '15' cell equals '15'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem15Cell1ValueAsString, uIItem15Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell10ValueAsString, uIItem0Cell10.ValueAsString);

            // Verify that the 'ValueAsString' property of '15' cell equals '15'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem15Cell2ValueAsString, uIItem15Cell2.ValueAsString);

            // Verify that the 'ValueAsString' property of '15' cell equals '15'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem15Cell3ValueAsString, uIItem15Cell3.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell11ValueAsString, uIItem0Cell11.ValueAsString);

            // Verify that the 'ValueAsString' property of '20' cell equals '20'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem20Cell2ValueAsString, uIItem20Cell2.ValueAsString);

            // Verify that the 'ValueAsString' property of '20' cell equals '20'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem20Cell3ValueAsString, uIItem20Cell3.ValueAsString);

            // Verify that the 'ValueAsString' property of '40' cell equals '40'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem40CellValueAsString, uIItem40Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '5,33' cell equals '5,33'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem533CellValueAsString, uIItem533Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '45,33' cell equals '45,33'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem4533CellValueAsString, uIItem4533Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '40' cell equals '40'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem40Cell1ValueAsString, uIItem40Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem0Cell12ValueAsString, uIItem0Cell12.ValueAsString);

            // Verify that the 'ValueAsString' property of '40' cell equals '40'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem40Cell2ValueAsString, uIItem40Cell2.ValueAsString);

            // Verify that the 'ValueAsString' property of '40' cell equals '40'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem40Cell3ValueAsString, uIItem40Cell3.ValueAsString);

            // Verify that the 'ValueAsString' property of '8' cell equals '8'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem8Cell6ValueAsString, uIItem8Cell6.ValueAsString);

            // Verify that the 'ValueAsString' property of '48' cell equals '48'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem48CellValueAsString, uIItem48Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '24' cell equals '24'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem24CellValueAsString, uIItem24Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '3,2' cell equals '3,2'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem32CellValueAsString, uIItem32Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '27,2' cell equals '27,2'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem272CellValueAsString, uIItem272Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '30' cell equals '30'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem30Cell2ValueAsString, uIItem30Cell2.ValueAsString);

            // Verify that the 'ValueAsString' property of '30' cell equals '30'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem30Cell3ValueAsString, uIItem30Cell3.ValueAsString);

            // Verify that the 'ValueAsString' property of '29' cell equals '29'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem29CellValueAsString, uIItem29Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '29' cell equals '29'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem29Cell1ValueAsString, uIItem29Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '31,5' cell equals '31,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem315CellValueAsString, uIItem315Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '31,5' cell equals '31,5'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem315Cell1ValueAsString, uIItem315Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '14,67' cell equals '14,67'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem1467CellValueAsString, uIItem1467Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '14,67' cell equals '14,67'
            Assert.AreEqual(this.CheckValues_Step_2ExpectedValues.UIItem1467Cell1ValueAsString, uIItem1467Cell1.ValueAsString);
        }
        
        /// <summary>
        /// CheckValues_Step_4 - Use 'CheckValues_Step_4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_4()
        {
            #region Variable Declarations
            DXCell uIItem2Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem2Cell;
            DXCell uIItem2Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem2Cell1;
            DXCell uIItem64Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem64Cell;
            DXCell uIItem64Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItem64Cell1;
            #endregion

            // Verify that the 'ValueAsString' property of '2' cell equals '2'
            Assert.AreEqual(this.CheckValues_Step_4ExpectedValues.UIItem2CellValueAsString, uIItem2Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '2' cell equals '2'
            Assert.AreEqual(this.CheckValues_Step_4ExpectedValues.UIItem2Cell1ValueAsString, uIItem2Cell1.ValueAsString);

            // Verify that the 'ValueAsString' property of '6,4' cell equals '6,4'
            Assert.AreEqual(this.CheckValues_Step_4ExpectedValues.UIItem64CellValueAsString, uIItem64Cell.ValueAsString);

            // Verify that the 'ValueAsString' property of '6,4' cell equals '6,4'
            Assert.AreEqual(this.CheckValues_Step_4ExpectedValues.UIItem64Cell1ValueAsString, uIItem64Cell1.ValueAsString);
        }
        
        /// <summary>
        /// CheckValues_Step_7 - Use 'CheckValues_Step_7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_7()
        {
            #region Variable Declarations
            DXCell uIItem0Cell9 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell9;
            DXCell uIItem0Cell10 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell10;
            DXCell uIItem0Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell3;
            DXCell uIItem0Cell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell4;
            DXCell uIItem0Cell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell5;
            DXCell uIItem0Cell6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell6;
            DXCell uIItem0Cell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell7;
            DXCell uIItemCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell1;
            DXCell uIItem0Cell8 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell8;
            #endregion

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_7ExpectedValues.UIItem0Cell9Text, uIItem0Cell9.Text);

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_7ExpectedValues.UIItem0Cell10Text, uIItem0Cell10.Text);

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_7ExpectedValues.UIItem0Cell3Text, uIItem0Cell3.Text);

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_7ExpectedValues.UIItem0Cell4Text, uIItem0Cell4.Text);

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_7ExpectedValues.UIItem0Cell5Text, uIItem0Cell5.Text);

            // Verify that the 'Text' property of '0' cell equals ''
            Assert.AreEqual(this.CheckValues_Step_7ExpectedValues.UIItem0Cell6Text, uIItem0Cell6.Text);

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValues_Step_7ExpectedValues.UIItem0Cell7Text, uIItem0Cell7.Text);

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckValues_Step_7ExpectedValues.UIItemCell1Text, uIItemCell1.Text);

            // Verify that the 'Text' property of '0' cell equals ''
            Assert.AreEqual(this.CheckValues_Step_7ExpectedValues.UIItem0Cell8Text, uIItem0Cell8.Text);
        }
        
        /// <summary>
        /// CheckValues_Step_8 - Use 'CheckValues_Step_8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_8()
        {
            #region Variable Declarations
            DXCell uIItem0Cell9 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell9;
            DXCell uIItem0Cell10 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell10;
            DXCell uIItem0Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell3;
            DXCell uIItem0Cell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell4;
            DXCell uIItem0Cell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell5;
            DXCell uIItem0Cell6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell6;
            DXCell uIItem0Cell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell7;
            DXCell uIItemCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell1;
            DXCell uIItem0Cell8 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell8;
            DXCell uIItem355Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell2;
            DXCell uIItem2506Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2506Cell1;
            DXCell uIItem355Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell1;
            DXCell uIItem2506Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2506Cell;
            DXCell uIItem1044Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1044Cell;
            DXCell uIItem1065Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1065Cell1;
            DXCell uIItem7517Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7517Cell;
            DXCell uIItem7517Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7517Cell1;
            DXCell uIItem3133Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3133Cell;
            #endregion

            // Verify that the 'Text' property of '0' cell equals '26,63'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem0Cell9Text, uIItem0Cell9.Text);

            // Verify that the 'Text' property of '0' cell equals '30'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem0Cell10Text, uIItem0Cell10.Text);

            // Verify that the 'Text' property of '0' cell equals '3,38'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem0Cell3Text, uIItem0Cell3.Text);

            // Verify that the 'Text' property of '0' cell equals '26,63'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem0Cell4Text, uIItem0Cell4.Text);

            // Verify that the 'Text' property of '0' cell equals '30'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem0Cell5Text, uIItem0Cell5.Text);

            // Verify that the 'Text' property of '0' cell equals '30'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem0Cell6Text, uIItem0Cell6.Text);

            // Verify that the 'Text' property of '0' cell equals '3,38'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem0Cell7Text, uIItem0Cell7.Text);

            // Verify that the 'Text' property of cell equals '3,38'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItemCell1Text, uIItemCell1.Text);

            // Verify that the 'Text' property of '0' cell equals '84,51%'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem0Cell8Text, uIItem0Cell8.Text);

            // Verify that the 'Text' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem355Cell2Text, uIItem355Cell2.Text);

            // Verify that the 'Text' property of '25,06' cell equals '25,06'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem2506Cell1Text, uIItem2506Cell1.Text);

            // Verify that the 'Text' property of '35,5' cell equals '-10,44'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem355Cell1Text, uIItem355Cell1.Text);

            // Verify that the 'Text' property of '25,06' cell equals '106,5'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem2506CellText, uIItem2506Cell.Text);

            // Verify that the 'Text' property of '-10,44' cell equals '75,17'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem1044CellText, uIItem1044Cell.Text);

            // Verify that the 'Text' property of '106,5' cell equals '75,17'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem1065Cell1Text, uIItem1065Cell1.Text);

            // Verify that the 'Text' property of '75,17' cell equals '-31,33'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem7517CellText, uIItem7517Cell.Text);

            // Verify that the 'Text' property of '75,17' cell equals '-31,33'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem7517Cell1Text, uIItem7517Cell1.Text);

            // Verify that the 'Text' property of '-31,33' cell equals '70,58%'
            Assert.AreEqual(this.CheckValues_Step_8ExpectedValues.UIItem3133CellText, uIItem3133Cell.Text);
        }
        
        /// <summary>
        /// CheckValues_Step_9 - Use 'CheckValues_Step_9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_9()
        {
            #region Variable Declarations
            DXCell uIItem355Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell2;
            DXCell uIItem2506Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2506Cell1;
            DXCell uIItem355Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell1;
            DXCell uIItem2506Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2506Cell;
            DXCell uIItem1044Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1044Cell;
            DXCell uIItem1065Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1065Cell1;
            DXCell uIItem7517Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7517Cell;
            DXCell uIItem7517Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7517Cell1;
            DXCell uIItem3133Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3133Cell;
            #endregion

            // Verify that the 'Text' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckValues_Step_9ExpectedValues.UIItem355Cell2Text, uIItem355Cell2.Text);

            // Verify that the 'Text' property of '25,06' cell equals '33,06'
            Assert.AreEqual(this.CheckValues_Step_9ExpectedValues.UIItem2506Cell1Text, uIItem2506Cell1.Text);

            // Verify that the 'Text' property of '35,5' cell equals '-2,44'
            Assert.AreEqual(this.CheckValues_Step_9ExpectedValues.UIItem355Cell1Text, uIItem355Cell1.Text);

            // Verify that the 'Text' property of '25,06' cell equals '106,5'
            Assert.AreEqual(this.CheckValues_Step_9ExpectedValues.UIItem2506CellText, uIItem2506Cell.Text);

            // Verify that the 'Text' property of '-10,44' cell equals '99,17'
            Assert.AreEqual(this.CheckValues_Step_9ExpectedValues.UIItem1044CellText, uIItem1044Cell.Text);

            // Verify that the 'Text' property of '106,5' cell equals '99,17'
            Assert.AreEqual(this.CheckValues_Step_9ExpectedValues.UIItem1065Cell1Text, uIItem1065Cell1.Text);

            // Verify that the 'Text' property of '75,17' cell equals '-7,33'
            Assert.AreEqual(this.CheckValues_Step_9ExpectedValues.UIItem7517CellText, uIItem7517Cell.Text);

            // Verify that the 'Text' property of '75,17' cell equals '-7,33'
            Assert.AreEqual(this.CheckValues_Step_9ExpectedValues.UIItem7517Cell1Text, uIItem7517Cell1.Text);

            // Verify that the 'Text' property of '-31,33' cell equals '93,11%'
            Assert.AreEqual(this.CheckValues_Step_9ExpectedValues.UIItem3133CellText, uIItem3133Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesAdel_Step_18 - Use 'CheckValuesAdel_Step_18ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesAdel_Step_18()
        {
            #region Variable Declarations
            DXCell uIOrmingeOskarCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIOrmingeOskarCell;
            DXCell uIItem445Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem445Cell;
            DXCell uIItem32Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem32Cell;
            DXCell uIItem1067Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem1067Cell;
            DXCell uIItem4Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem4Cell;
            DXCell uIItem355Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell3;
            DXCell uIItem84Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem84Cell;
            DXCell uIGCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell;
            DXCell uIItem3av5Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell;
            DXCell uIItem33Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem33Cell;
            DXCell uIItem4399Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4399Cell;
            DXCell uIItem0Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell;
            #endregion

            // Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Adel, Albert'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIOrmingeOskarCellText, uIOrmingeOskarCell.Text);

            // Verify that the 'Text' property of '44,5' cell equals '2'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem445CellText, uIItem445Cell.Text);

            // Verify that the 'Text' property of '32' cell equals '8'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem32CellText, uIItem32Cell.Text);

            // Verify that the 'Text' property of '10,67' cell equals '10,67'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem1067CellText, uIItem1067Cell.Text);

            // Verify that the 'Text' property of '4' cell equals '4'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem4CellText, uIItem4Cell.Text);

            // Verify that the 'Text' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem355Cell3Text, uIItem355Cell3.Text);

            // Verify that the 'Text' property of '8,4' cell equals '6,17'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem84CellText, uIItem84Cell.Text);

            // Verify that the 'Text' property of 'G' cell equals '-29,33'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIGCellText, uIGCell.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '142'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem3av5CellText, uIItem3av5Cell.Text);

            // Verify that the 'Text' property of '33' cell equals '24,67'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem33CellText, uIItem33Cell.Text);

            // Verify that the 'Text' property of '43,99' cell equals '-117,33'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem4399CellText, uIItem4399Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '17,37%'
            Assert.AreEqual(this.CheckValuesAdel_Step_18ExpectedValues.UIItem0CellText, uIItem0Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesClue_Step_18 - Use 'CheckValuesClue_Step_18ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesClue_Step_18()
        {
            #region Variable Declarations
            DXCell uIClueCelesteCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIClueCelesteCell;
            DXCell uIItem175Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem175Cell;
            DXCell uIItem175Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem175Cell1;
            DXCell uIItem175Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem175Cell2;
            DXCell uIItem175Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem175Cell3;
            DXCell uIGCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell2;
            DXCell uIItem2Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2Cell2;
            DXCell uIItem142Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem142Cell;
            DXCell uIItem2Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2Cell;
            DXCell uIItemCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell;
            DXCell uIItem2Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2Cell1;
            DXCell uIItem28Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem28Cell;
            #endregion

            // Verify that the 'Text' property of 'Clue, Celeste' cell equals 'Clue, Celeste'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIClueCelesteCellText, uIClueCelesteCell.Text);

            // Verify that the 'Text' property of '17,5' cell equals '17,5'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItem175CellText, uIItem175Cell.Text);

            // Verify that the 'Text' property of '17,5' cell equals '17,5'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItem175Cell1Text, uIItem175Cell1.Text);

            // Verify that the 'Text' property of '17,5' cell equals '17,5'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItem175Cell2Text, uIItem175Cell2.Text);

            // Verify that the 'Text' property of '17,5' cell equals '17,5'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItem175Cell3Text, uIItem175Cell3.Text);

            // Verify that the 'Text' property of 'G' cell equals '17,75'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIGCell2Text, uIGCell2.Text);

            // Verify that the 'Text' property of '2' cell equals '17,5'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItem2Cell2Text, uIItem2Cell2.Text);

            // Verify that the 'Text' property of '1,42' cell equals '-0,25'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItem142CellText, uIItem142Cell.Text);

            // Verify that the 'Text' property of '2' cell equals '71'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItem2CellText, uIItem2Cell.Text);

            // Verify that the 'Text' property of cell equals '70'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItemCellText, uIItemCell.Text);

            // Verify that the 'Text' property of '2' cell equals '-1'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItem2Cell1Text, uIItem2Cell1.Text);

            // Verify that the 'Text' property of '2,8' cell equals '49,3%'
            Assert.AreEqual(this.CheckValuesClue_Step_18ExpectedValues.UIItem28CellText, uIItem28Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesLene_Step_17 - Use 'CheckValuesLene_Step_17ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesLene_Step_17()
        {
            #region Variable Declarations
            DXCell uIOrmingeOskarCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIOrmingeOskarCell;
            DXCell uIItem355Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell3;
            DXCell uIItem84Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem84Cell;
            DXCell uIGCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell;
            DXCell uIItem3av5Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell;
            DXCell uIItem33Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem33Cell;
            #endregion

            // Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Lerke, Lene'
            Assert.AreEqual(this.CheckValuesLene_Step_17ExpectedValues.UIOrmingeOskarCellText, uIOrmingeOskarCell.Text);

            // Verify that the 'Text' property of '35,5' cell equals '1,33'
            Assert.AreEqual(this.CheckValuesLene_Step_17ExpectedValues.UIItem355Cell3Text, uIItem355Cell3.Text);

            // Verify that the 'Text' property of '8,4' cell equals '1,33'
            Assert.AreEqual(this.CheckValuesLene_Step_17ExpectedValues.UIItem84CellText, uIItem84Cell.Text);

            // Verify that the 'Text' property of 'G' cell equals '1,5'
            Assert.AreEqual(this.CheckValuesLene_Step_17ExpectedValues.UIGCellText, uIGCell.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '1,86'
            Assert.AreEqual(this.CheckValuesLene_Step_17ExpectedValues.UIItem3av5CellText, uIItem3av5Cell.Text);

            // Verify that the 'Text' property of '33' cell equals '1,86'
            Assert.AreEqual(this.CheckValuesLene_Step_17ExpectedValues.UIItem33CellText, uIItem33Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesMagne_Step_15 - Use 'CheckValuesMagne_Step_15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesMagne_Step_15()
        {
            #region Variable Declarations
            DXCell uIMøllMagneCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIMøllMagneCell;
            DXCell uIItem225Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem225Cell;
            DXCell uIItem305Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem305Cell1;
            DXCell uIACell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell1;
            DXCell uIItem2av5Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2av5Cell1;
            DXCell uIACell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell;
            DXCell uIItem2av5Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2av5Cell;
            DXCell uIItem155Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem155Cell;
            DXCell uIItem2066Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2066Cell;
            DXCell uIItem0Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell2;
            DXCell uIItem2066Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2066Cell1;
            #endregion

            // Verify that the 'Text' property of 'Møll, Magne' cell equals 'Møll, Magne'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIMøllMagneCellText, uIMøllMagneCell.Text);

            // Verify that the 'Text' property of '22,5' cell equals '22,5'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIItem225CellText, uIItem225Cell.Text);

            // Verify that the 'Text' property of '30,5' cell equals '30,5'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIItem305Cell1Text, uIItem305Cell1.Text);

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIACell1Text, uIACell1.Text);

            // Verify that the 'Text' property of '2 av 5' cell equals '2 av 5'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIItem2av5Cell1Text, uIItem2av5Cell1.Text);

            // Verify that the 'Text' property of 'A' cell equals '15,5'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIACellText, uIACell.Text);

            // Verify that the 'Text' property of '2 av 5' cell equals '20,66'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIItem2av5CellText, uIItem2av5Cell.Text);

            // Verify that the 'Text' property of '15,5' cell equals '0'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIItem155CellText, uIItem155Cell.Text);

            // Verify that the 'Text' property of '20,66' cell equals '20,66'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIItem2066CellText, uIItem2066Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '0 av 1'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIItem0Cell2Text, uIItem0Cell2.Text);

            // Verify that the 'Text' property of '20,66' cell equals '0 av 0'
            Assert.AreEqual(this.CheckValuesMagne_Step_15ExpectedValues.UIItem2066Cell1Text, uIItem2066Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesMagne_Step_16 - Use 'CheckValuesMagne_Step_16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesMagne_Step_16()
        {
            #region Variable Declarations
            DXCell uIMøllMagneCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIMøllMagneCell;
            DXCell uIItem225Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem225Cell;
            DXCell uIItem305Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem305Cell1;
            DXCell uIACell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell1;
            DXCell uIItem2av5Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2av5Cell1;
            DXCell uIACell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell;
            DXCell uIItem2av5Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2av5Cell;
            DXCell uIItem155Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem155Cell;
            DXCell uIItem2066Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2066Cell;
            DXCell uIItem0Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell2;
            DXCell uIItem2066Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2066Cell1;
            #endregion

            // Verify that the 'Text' property of 'Møll, Magne' cell equals 'Møll, Magne'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIMøllMagneCellText, uIMøllMagneCell.Text);

            // Verify that the 'Text' property of '22,5' cell equals '22,5'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIItem225CellText, uIItem225Cell.Text);

            // Verify that the 'Text' property of '30,5' cell equals '30,5'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIItem305Cell1Text, uIItem305Cell1.Text);

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIACell1Text, uIACell1.Text);

            // Verify that the 'Text' property of '2 av 5' cell equals '2 av 5'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIItem2av5Cell1Text, uIItem2av5Cell1.Text);

            // Verify that the 'Text' property of 'A' cell equals '15,5'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIACellText, uIACell.Text);

            // Verify that the 'Text' property of '2 av 5' cell equals '20,66'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIItem2av5CellText, uIItem2av5Cell.Text);

            // Verify that the 'Text' property of '15,5' cell equals '7,5'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIItem155CellText, uIItem155Cell.Text);

            // Verify that the 'Text' property of '20,66' cell equals '13,16'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIItem2066CellText, uIItem2066Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '0 av 1'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIItem0Cell2Text, uIItem0Cell2.Text);

            // Verify that the 'Text' property of '20,66' cell equals '0 av 0'
            Assert.AreEqual(this.CheckValuesMagne_Step_16ExpectedValues.UIItem2066Cell1Text, uIItem2066Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesMagne_Step_17 - Use 'CheckValuesMagne_Step_17ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesMagne_Step_17()
        {
            #region Variable Declarations
            DXCell uIClueCelesteCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIClueCelesteCell;
            DXCell uIGCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell2;
            DXCell uIItem2Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2Cell2;
            DXCell uIItem3av5Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell2;
            DXCell uIGCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell1;
            DXCell uIItem2Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2Cell;
            DXCell uIItemCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell;
            DXCell uIItem27Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem27Cell;
            #endregion

            // Verify that the 'Text' property of 'Clue, Celeste' cell equals 'Møll, Magne'
            Assert.AreEqual(this.CheckValuesMagne_Step_17ExpectedValues.UIClueCelesteCellText, uIClueCelesteCell.Text);

            // Verify that the 'Text' property of 'G' cell equals '1,42'
            Assert.AreEqual(this.CheckValuesMagne_Step_17ExpectedValues.UIGCell2Text, uIGCell2.Text);

            // Verify that the 'Text' property of '2' cell equals '2'
            Assert.AreEqual(this.CheckValuesMagne_Step_17ExpectedValues.UIItem2Cell2Text, uIItem2Cell2.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '2,5'
            Assert.AreEqual(this.CheckValuesMagne_Step_17ExpectedValues.UIItem3av5Cell2Text, uIItem3av5Cell2.Text);

            // Verify that the 'Text' property of 'G' cell equals ''
            Assert.AreEqual(this.CheckValuesMagne_Step_17ExpectedValues.UIGCell1Text, uIGCell1.Text);

            // Verify that the 'Text' property of '2' cell equals '2'
            Assert.AreEqual(this.CheckValuesMagne_Step_17ExpectedValues.UIItem2CellText, uIItem2Cell.Text);

            // Verify that the 'Text' property of cell equals '2,8'
            Assert.AreEqual(this.CheckValuesMagne_Step_17ExpectedValues.UIItemCellText, uIItemCell.Text);

            // Verify that the 'Text' property of '27' cell equals '3,5'
            Assert.AreEqual(this.CheckValuesMagne_Step_17ExpectedValues.UIItem27CellText, uIItem27Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesOrminge_Step_15 - Use 'CheckValuesOrminge_Step_15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesOrminge_Step_15()
        {
            #region Variable Declarations
            DXCell uIOrmingeOskarCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIOrmingeOskarCell;
            DXCell uIItem445Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem445Cell;
            DXCell uIItem32Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem32Cell;
            DXCell uIGCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell2;
            DXCell uIItem84Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem84Cell;
            DXCell uIGCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell;
            DXCell uIItem3av5Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell;
            DXCell uIItem33Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem33Cell;
            DXCell uIItem4399Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4399Cell;
            DXCell uIItem0Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell;
            DXCell uIItem4399Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4399Cell1;
            #endregion

            // Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Orminge, Oskar'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIOrmingeOskarCellText, uIOrmingeOskarCell.Text);

            // Verify that the 'Text' property of '44,5' cell equals '44,5'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIItem445CellText, uIItem445Cell.Text);

            // Verify that the 'Text' property of '32' cell equals '32'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIItem32CellText, uIItem32Cell.Text);

            // Verify that the 'Text' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIGCell2Text, uIGCell2.Text);

            // Verify that the 'Text' property of '8,4' cell equals '3 av 5'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIItem84CellText, uIItem84Cell.Text);

            // Verify that the 'Text' property of 'G' cell equals '33'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIGCellText, uIGCell.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '43,99'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIItem3av5CellText, uIItem3av5Cell.Text);

            // Verify that the 'Text' property of '33' cell equals '0'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIItem33CellText, uIItem33Cell.Text);

            // Verify that the 'Text' property of '43,99' cell equals '43,99'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIItem4399CellText, uIItem4399Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '0 av 1'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIItem0CellText, uIItem0Cell.Text);

            // Verify that the 'Text' property of '43,99' cell equals '0 av 0'
            Assert.AreEqual(this.CheckValuesOrminge_Step_15ExpectedValues.UIItem4399Cell1Text, uIItem4399Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesOrminge_Step_16 - Use 'CheckValuesOrminge_Step_16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesOrminge_Step_16()
        {
            #region Variable Declarations
            DXCell uIOrmingeOskarCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIOrmingeOskarCell;
            DXCell uIItem445Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem445Cell;
            DXCell uIItem32Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem32Cell;
            DXCell uIItem355Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell3;
            DXCell uIItem84Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem84Cell;
            DXCell uIGCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell;
            DXCell uIItem3av5Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell;
            DXCell uIItem33Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem33Cell;
            DXCell uIItem4399Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4399Cell;
            DXCell uIItem0Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell;
            DXCell uIItem4399Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4399Cell1;
            #endregion

            // Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Orminge, Oskar'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIOrmingeOskarCellText, uIOrmingeOskarCell.Text);

            // Verify that the 'Text' property of '44,5' cell equals '44,5'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIItem445CellText, uIItem445Cell.Text);

            // Verify that the 'Text' property of '32' cell equals '32'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIItem32CellText, uIItem32Cell.Text);

            // Verify that the 'Text' property of '35,5' cell equals 'G'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIItem355Cell3Text, uIItem355Cell3.Text);

            // Verify that the 'Text' property of '8,4' cell equals '2 av 5'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIItem84CellText, uIItem84Cell.Text);

            // Verify that the 'Text' property of 'G' cell equals '23'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIGCellText, uIGCell.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '30,66'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIItem3av5CellText, uIItem3av5Cell.Text);

            // Verify that the 'Text' property of '33' cell equals '0'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIItem33CellText, uIItem33Cell.Text);

            // Verify that the 'Text' property of '43,99' cell equals '30,66'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIItem4399CellText, uIItem4399Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '1 av 1'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIItem0CellText, uIItem0Cell.Text);

            // Verify that the 'Text' property of '43,99' cell equals '0 av 0'
            Assert.AreEqual(this.CheckValuesOrminge_Step_16ExpectedValues.UIItem4399Cell1Text, uIItem4399Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesRoger_Step_15 - Use 'CheckValuesRoger_Step_15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesRoger_Step_15()
        {
            #region Variable Declarations
            DXCell uIRogerRallyCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIRogerRallyCell1;
            DXCell uIItem305Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem305Cell;
            DXCell uIItem27Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem27Cell;
            DXCell uIGCell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell3;
            DXCell uIItem3av5Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell2;
            DXCell uIGCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell1;
            DXCell uIItem3av5Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell1;
            DXCell uIItem27Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem27Cell;
            DXCell uIItem3599Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3599Cell;
            DXCell uIItem0Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell1;
            DXCell uIItem3599Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3599Cell1;
            #endregion

            // Verify that the 'Text' property of 'Roger, Rally' cell equals 'Roger, Rally'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIRogerRallyCell1Text, uIRogerRallyCell1.Text);

            // Verify that the 'Text' property of '30,5' cell equals '30,5'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIItem305CellText, uIItem305Cell.Text);

            // Verify that the 'Text' property of '27' cell equals '27'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIItem27CellText, uIItem27Cell.Text);

            // Verify that the 'Text' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIGCell3Text, uIGCell3.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '3 av 5'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIItem3av5Cell2Text, uIItem3av5Cell2.Text);

            // Verify that the 'Text' property of 'G' cell equals '27'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIGCell1Text, uIGCell1.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '35,99'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIItem3av5Cell1Text, uIItem3av5Cell1.Text);

            // Verify that the 'Text' property of '27' cell equals '0'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIItem27CellText1, uIItem27Cell1.Text);

            // Verify that the 'Text' property of '35,99' cell equals '35,99'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIItem3599CellText, uIItem3599Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '0 av 1'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIItem0Cell1Text, uIItem0Cell1.Text);

            // Verify that the 'Text' property of '35,99' cell equals '0 av 1'
            Assert.AreEqual(this.CheckValuesRoger_Step_15ExpectedValues.UIItem3599Cell1Text, uIItem3599Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesRoger_Step_16 - Use 'CheckValuesRoger_Step_16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesRoger_Step_16()
        {
            #region Variable Declarations
            DXCell uIRogerRallyCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIRogerRallyCell1;
            DXCell uIItem305Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem305Cell;
            DXCell uIItem27Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem27Cell;
            DXCell uIGCell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell3;
            DXCell uIItem3av5Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell2;
            DXCell uIGCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell1;
            DXCell uIItem3av5Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell1;
            DXCell uIItem27Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem27Cell;
            DXCell uIItem3599Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3599Cell;
            DXCell uIItem0Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell1;
            DXCell uIItem3599Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3599Cell1;
            #endregion

            // Verify that the 'Text' property of 'Roger, Rally' cell equals 'Roger, Rally'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIRogerRallyCell1Text, uIRogerRallyCell1.Text);

            // Verify that the 'Text' property of '30,5' cell equals '30,5'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIItem305CellText, uIItem305Cell.Text);

            // Verify that the 'Text' property of '27' cell equals '27'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIItem27CellText, uIItem27Cell.Text);

            // Verify that the 'Text' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIGCell3Text, uIGCell3.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '3 av 5'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIItem3av5Cell2Text, uIItem3av5Cell2.Text);

            // Verify that the 'Text' property of 'G' cell equals '27'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIGCell1Text, uIGCell1.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '35,99'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIItem3av5Cell1Text, uIItem3av5Cell1.Text);

            // Verify that the 'Text' property of '27' cell equals '0'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIItem27CellText1, uIItem27Cell1.Text);

            // Verify that the 'Text' property of '35,99' cell equals '35,99'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIItem3599CellText, uIItem3599Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '0 av 1'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIItem0Cell1Text, uIItem0Cell1.Text);

            // Verify that the 'Text' property of '35,99' cell equals '1 av 1'
            Assert.AreEqual(this.CheckValuesRoger_Step_16ExpectedValues.UIItem3599Cell1Text, uIItem3599Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesSilke_Step_18 - Use 'CheckValuesSilke_Step_18ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesSilke_Step_18()
        {
            #region Variable Declarations
            DXCell uIRogerRallyCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIRogerRallyCell1;
            DXCell uIItem305Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem305Cell;
            DXCell uIItem27Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem27Cell;
            DXCell uIItem0Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem0Cell2;
            DXCell uIItem32Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem32Cell1;
            DXCell uIGCell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell3;
            DXCell uIItem3av5Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell2;
            DXCell uIGCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell1;
            DXCell uIItem3av5Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av5Cell1;
            DXCell uIItem27Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem27Cell;
            DXCell uIItem3599Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3599Cell;
            DXCell uIItem0Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell1;
            #endregion

            // Verify that the 'Text' property of 'Roger, Rally' cell equals 'Silke, Søvn'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIRogerRallyCell1Text, uIRogerRallyCell1.Text);

            // Verify that the 'Text' property of '30,5' cell equals '40'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIItem305CellText, uIItem305Cell.Text);

            // Verify that the 'Text' property of '27' cell equals '16'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIItem27CellText, uIItem27Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIItem0Cell2Text, uIItem0Cell2.Text);

            // Verify that the 'Text' property of '32' cell equals '32'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIItem32Cell1Text, uIItem32Cell1.Text);

            // Verify that the 'Text' property of 'G' cell equals '35,5'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIGCell3Text, uIGCell3.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '22'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIItem3av5Cell2Text, uIItem3av5Cell2.Text);

            // Verify that the 'Text' property of 'G' cell equals '-13,5'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIGCell1Text, uIGCell1.Text);

            // Verify that the 'Text' property of '3 av 5' cell equals '142'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIItem3av5Cell1Text, uIItem3av5Cell1.Text);

            // Verify that the 'Text' property of '27' cell equals '88'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIItem27CellText1, uIItem27Cell1.Text);

            // Verify that the 'Text' property of '35,99' cell equals '-54'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIItem3599CellText, uIItem3599Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '61,97%'
            Assert.AreEqual(this.CheckValuesSilke_Step_18ExpectedValues.UIItem0Cell1Text, uIItem0Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesVakant_Step_9 - Use 'CheckValuesVakant_Step_9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesVakant_Step_9()
        {
            #region Variable Declarations
            DXCell uIItem0Cell9 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell9;
            DXCell uIItem0Cell10 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell10;
            DXCell uIItem0Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell3;
            DXCell uIItem0Cell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell4;
            DXCell uIItem0Cell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell5;
            DXCell uIItem0Cell6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell6;
            DXCell uIItem0Cell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell7;
            DXCell uIItemCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell1;
            DXCell uIItem0Cell8 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0Cell8;
            #endregion

            // Verify that the 'Text' property of '0' cell equals '26,63'
            Assert.AreEqual(this.CheckValuesVakant_Step_9ExpectedValues.UIItem0Cell9Text, uIItem0Cell9.Text);

            // Verify that the 'Text' property of '0' cell equals '25,1'
            Assert.AreEqual(this.CheckValuesVakant_Step_9ExpectedValues.UIItem0Cell10Text, uIItem0Cell10.Text);

            // Verify that the 'Text' property of '0' cell equals '-1,53'
            Assert.AreEqual(this.CheckValuesVakant_Step_9ExpectedValues.UIItem0Cell3Text, uIItem0Cell3.Text);

            // Verify that the 'Text' property of '0' cell equals '26,63'
            Assert.AreEqual(this.CheckValuesVakant_Step_9ExpectedValues.UIItem0Cell4Text, uIItem0Cell4.Text);

            // Verify that the 'Text' property of '0' cell equals '25,1'
            Assert.AreEqual(this.CheckValuesVakant_Step_9ExpectedValues.UIItem0Cell5Text, uIItem0Cell5.Text);

            // Verify that the 'ClassName' property of '0' cell equals 'GridControlCell'
            Assert.AreEqual(this.CheckValuesVakant_Step_9ExpectedValues.UIItem0Cell6ClassName, uIItem0Cell6.ClassName);

            // Verify that the 'Text' property of '0' cell equals '-1,53'
            Assert.AreEqual(this.CheckValuesVakant_Step_9ExpectedValues.UIItem0Cell7Text, uIItem0Cell7.Text);

            // Verify that the 'ClassName' property of cell equals 'GridControlCell'
            Assert.AreEqual(this.CheckValuesVakant_Step_9ExpectedValues.UIItemCell1ClassName, uIItemCell1.ClassName);

            // Verify that the 'Text' property of '0' cell equals '70,7%'
            Assert.AreEqual(this.CheckValuesVakant_Step_9ExpectedValues.UIItem0Cell8Text, uIItem0Cell8.Text);
        }
        
        /// <summary>
        /// CheckWeekSumStep_22 - Use 'CheckWeekSumStep_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWeekSumStep_22()
        {
            #region Variable Declarations
            DXCell uIOrmingeOskarCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIOrmingeOskarCell;
            DXCell uIItem445Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem445Cell;
            DXCell uIItem32Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem32Cell;
            DXCell uIItem1067Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem1067Cell;
            #endregion

            // Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Forsberg, Peter'
            Assert.AreEqual(this.CheckWeekSumStep_22ExpectedValues.UIOrmingeOskarCellText, uIOrmingeOskarCell.Text);

            // Verify that the 'Text' property of '44,5' cell equals '40'
            Assert.AreEqual(this.CheckWeekSumStep_22ExpectedValues.UIItem445CellText, uIItem445Cell.Text);

            // Verify that the 'Text' property of '32' cell equals '24'
            Assert.AreEqual(this.CheckWeekSumStep_22ExpectedValues.UIItem32CellText, uIItem32Cell.Text);

            // Verify that the 'Text' property of '10,67' cell equals '3,55'
            Assert.AreEqual(this.CheckWeekSumStep_22ExpectedValues.UIItem1067CellText, uIItem1067Cell.Text);
        }
        
        /// <summary>
        /// CheckWeeksumValuesJalle_Step_5 - Use 'CheckWeeksumValuesJalle_Step_5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWeeksumValuesJalle_Step_5()
        {
            #region Variable Declarations
            DXCell uIItem0Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem0Cell;
            DXCell uIItem10Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem10Cell;
            DXCell uIItem893Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem893Cell;
            DXCell uIItem0Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem0Cell1;
            #endregion

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckWeeksumValuesJalle_Step_5ExpectedValues.UIItem0CellText, uIItem0Cell.Text);

            // Verify that the 'Text' property of '10' cell equals '10'
            Assert.AreEqual(this.CheckWeeksumValuesJalle_Step_5ExpectedValues.UIItem10CellText, uIItem10Cell.Text);

            // Verify that the 'Text' property of '8,93' cell equals '8,93'
            Assert.AreEqual(this.CheckWeeksumValuesJalle_Step_5ExpectedValues.UIItem893CellText, uIItem893Cell.Text);

            // Verify that the 'Text' property of '0' cell equals '0'
            Assert.AreEqual(this.CheckWeeksumValuesJalle_Step_5ExpectedValues.UIItem0Cell1Text, uIItem0Cell1.Text);
        }
        
        /// <summary>
        /// CheckWeeksumValuesStep_23 - Use 'CheckWeeksumValuesStep_23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWeeksumValuesStep_23()
        {
            #region Variable Declarations
            DXCell uIItem445Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem445Cell;
            DXCell uIItem32Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem32Cell;
            DXCell uIItem1067Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem1067Cell;
            #endregion

            // Verify that the 'Text' property of '44,5' cell equals '40'
            Assert.AreEqual(this.CheckWeeksumValuesStep_23ExpectedValues.UIItem445CellText, uIItem445Cell.Text);

            // Verify that the 'Text' property of '32' cell equals '8'
            Assert.AreEqual(this.CheckWeeksumValuesStep_23ExpectedValues.UIItem32CellText, uIItem32Cell.Text);

            // Verify that the 'Text' property of '10,67' cell equals '7,1'
            Assert.AreEqual(this.CheckWeeksumValuesStep_23ExpectedValues.UIItem1067CellText, uIItem1067Cell.Text);
        }
        
        /// <summary>
        /// CheckWeeksumValuesStep_24_25 - Use 'CheckWeeksumValuesStep_24_25ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWeeksumValuesStep_24_25()
        {
            #region Variable Declarations
            DXCell uIItem445Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem445Cell;
            DXCell uIItem32Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem32Cell;
            #endregion

            // Verify that the 'Text' property of '44,5' cell equals '24'
            Assert.AreEqual(this.CheckWeeksumValuesStep_24_25ExpectedValues.UIItem445CellText, uIItem445Cell.Text);

            // Verify that the 'Text' property of '32' cell equals '16'
            Assert.AreEqual(this.CheckWeeksumValuesStep_24_25ExpectedValues.UIItem32CellText, uIItem32Cell.Text);
        }
        
        /// <summary>
        /// DeleteJamDHCode - Use 'DeleteJamDHCodeParams' to pass parameters into this method.
        /// </summary>
        public void DeleteJamDHCode()
        {
            #region Variable Declarations
            DXCell uIItemCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell2;
            DXGrid uIGcRosterPlanTable = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell2, new Point(19, 9));

            // Type '{Delete}{Tab}' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.DeleteJamDHCodeParams.UIGcRosterPlanTableSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// InsertJamDHCodes - Use 'InsertJamDHCodesParams' to pass parameters into this method.
        /// </summary>
        public void InsertJamDHCodes()
        {
            #region Variable Declarations
            DXCell uIItemCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell2;
            DXTextEdit uIRow0ColumnRosterCellEdit1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow0ColumnRosterCellEdit1;
            DXRibbonButtonItem uISettinnRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpRosterPlanRibbonPage.UIGrpInsertToolsRibbonPageGroup.UISettinnRibbonBaseButtonItem;
            DXCell uIItemCell12 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell12;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell2, new Point(14, 6));

            // Type 'DH{Tab}' in '[Row]0[Column]RosterCell_5' text box
            Keyboard.SendKeys(uIRow0ColumnRosterCellEdit1, this.InsertJamDHCodesParams.UIRow0ColumnRosterCellEdit1SendKeys, ModifierKeys.None);

            // Click 'Sett inn' RibbonBaseButtonItem
            Mouse.Click(uISettinnRibbonBaseButtonItem, new Point(47, 12));

            // Click cell
            Mouse.Click(uIItemCell12, new Point(9, 8));
        }
        
        /// <summary>
        /// InsertPluttA3Code - Use 'InsertPluttA3CodeParams' to pass parameters into this method.
        /// </summary>
        public void InsertPluttA3Code()
        {
            #region Variable Declarations
            DXCell uIItemCell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell4;
            DXTextEdit uIRow7ColumnRosterCellEdit1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit1;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell4, new Point(16, 8));

            // Type 'A3{Tab}' in '[Row]7[Column]RosterCell_26' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit1, this.InsertPluttA3CodeParams.UIRow7ColumnRosterCellEdit1SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// InsertShiftCodesInHelpplan - Use 'InsertShiftCodesInHelpplanParams' to pass parameters into this method.
        /// </summary>
        public void InsertShiftCodesInHelpplan()
        {
            #region Variable Declarations
            DXCell uIItemCell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell5;
            DXTextEdit uIRow1ColumnRosterCellEdit = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow1ColumnRosterCellEdit;
            DXCell uIItemCell13 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell13;
            DXTextEdit uIRow3ColumnRosterCellEdit = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow3ColumnRosterCellEdit;
            DXCell uIItemCell21 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell21;
            DXTextEdit uIRow5ColumnRosterCellEdit1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit1;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell5, new Point(18, 9));

            // Type 'F3{Tab}' in '[Row]1[Column]RosterCell_7' text box
            Keyboard.SendKeys(uIRow1ColumnRosterCellEdit, this.InsertShiftCodesInHelpplanParams.UIRow1ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell13, new Point(16, 11));

            // Type 'F5{Tab}' in '[Row]3[Column]RosterCell_9' text box
            Keyboard.SendKeys(uIRow3ColumnRosterCellEdit, this.InsertShiftCodesInHelpplanParams.UIRow3ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell21, new Point(17, 11));

            // Type 'F4{Tab}' in '[Row]5[Column]RosterCell_1' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit1, this.InsertShiftCodesInHelpplanParams.UIRow5ColumnRosterCellEdit1SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// RightClickVakant
        /// </summary>
        public void RightClickVakant()
        {
            #region Variable Declarations
            DXCell uIVAKANTCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIVAKANTCell;
            #endregion

            // Right-Click 'VAKANT' cell
            Mouse.Click(uIVAKANTCell, MouseButtons.Right, ModifierKeys.None, new Point(74, 7));
        }
        
        /// <summary>
        /// SelectDepartmentRosterplanTab
        /// </summary>
        public void SelectDepartmentRosterplanTab()
        {
            #region Variable Declarations
            DXTestControl uIXtraTabControlHeaderTabPage = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIXtraTabControlHeaderTabPage;
            DXTestControl uIXtraTabControlHeaderTabPage1 = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIXtraTabControlHeaderTabPage1;
            DXTestControl uIXtraTabControlHeaderTabPage2 = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIXtraTabControlHeaderTabPage2;
            DXTestControl uIXtraTabControlHeaderTabPage3 = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIXtraTabControlHeaderTabPage3;
            DXTestControl uIXtraTabControlHeaderTabPage4 = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIXtraTabControlHeaderTabPage4;
            DXTestControl uIXtraTabControlHeaderTabPage5 = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIXtraTabControlHeaderTabPage5;
            DXTestControl uIXtraTabControlHeaderTabPage6 = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIXtraTabControlHeaderTabPage6;
            DXTestControl uIXtraTabControlHeaderTabPage7 = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIXtraTabControlHeaderTabPage7;
            #endregion

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(25, 7));

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage1, new Point(18, 9));

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage2, new Point(12, 7));

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage3, new Point(25, 9));

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage4, new Point(27, 9));

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage5, new Point(40, 7));

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage6, new Point(23, 6));

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage7, new Point(33, 9));
        }
        
        /// <summary>
        /// SelectRallyRogerInExchangeEmpWindow - Use 'SelectRallyRogerInExchangeEmpWindowParams' to pass parameters into this method.
        /// </summary>
        public void SelectRallyRogerInExchangeEmpWindow()
        {
            #region Variable Declarations
            DXLookUpEdit uILueNewEmployeeLookUpEdit = this.UIByttansattWindow.UIPcContentClient.UIGsPanelControl3Client.UIGsPanelControl2Client.UILueNewEmployeeLookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataAccessLayers.RosterEmploymentEntity' in 'lueNewEmployee' LookUpEdit
            //ValueTypeName
            uILueNewEmployeeLookUpEdit.ValueTypeName = this.SelectRallyRogerInExchangeEmpWindowParams.UILueNewEmployeeLookUpEditValueTypeName;

            // Type 'Roger, Rally - TURNUS/S 100 % 01.01.2017-31.12.2099' in 'lueNewEmployee' LookUpEdit
            //ValueAsString
            uILueNewEmployeeLookUpEdit.ValueAsString = this.SelectRallyRogerInExchangeEmpWindowParams.UILueNewEmployeeLookUpEditValueAsString;
        }
        
        /// <summary>
        /// SetHelpplanEmployeeCalculationTypes - Use 'SetHelpplanEmployeeCalculationTypesParams' to pass parameters into this method.
        /// </summary>
        public void SetHelpplanEmployeeCalculationTypes()
        {
            #region Variable Declarations
            DXCell uIOrmingeOskarCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIOrmingeOskarCell;
            DXTestControl uIGsLayoutControlMainCustom = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom;
            DXButton uIGjennomsnittsberegniButton = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem4LayoutControlItem.UIPnlRuleButtonsClient.UIGjennomsnittsberegniButton;
            DXCell uIMøllMagneCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIMøllMagneCell;
            DXButton uIAnnenhverberegningavButton = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem4LayoutControlItem.UIPnlRuleButtonsClient.UIAnnenhverberegningavButton;
            #endregion

            // Click 'Orminge, Oskar' cell
            Mouse.Click(uIOrmingeOskarCell, new Point(107, 8));

            // Type 'Shift + {Down}' in 'gsLayoutControlMain' custom control
            Keyboard.SendKeys(uIGsLayoutControlMainCustom, this.SetHelpplanEmployeeCalculationTypesParams.UIGsLayoutControlMainCustomSendKeys, ModifierKeys.Shift);

            // Click 'Gjennomsnittsberegning av F3' button
            Mouse.Click(uIGjennomsnittsberegniButton, new Point(1, 1));

            // Click 'Møll, Magne' cell
            Mouse.Click(uIMøllMagneCell, new Point(93, 9));

            // Click 'Annenhver beregning av F3' button
            Mouse.Click(uIAnnenhverberegningavButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SetPlutt2LineInactive
        /// </summary>
        public void SetPlutt2LineInactive()
        {
            #region Variable Declarations
            DXCell uIPluttPelleCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient1.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIPluttPelleCell1;
            DXMenuItem uISettlinjeraktiveinakMenuItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UISettlinjeraktiveinakMenuItem;
            DXMenuBaseButtonItem uISettlinje2inaktiv509MenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UISettlinjeraktiveinakMenuItem.UISettlinje2inaktiv509MenuBaseButtonItem;
            #endregion

            // Right-Click 'Plutt, Pelle' cell
            Mouse.Click(uIPluttPelleCell1, MouseButtons.Right, ModifierKeys.None, new Point(100, 10));

            // Click 'Sett linjer aktive/inaktive' menu item
            Mouse.Click(uISettlinjeraktiveinakMenuItem, new Point(153, 9));

            // Click 'Sett linje 2 inaktiv (5090 - Lønnsberegninger)' MenuBaseButtonItem
            Mouse.Click(uISettlinje2inaktiv509MenuBaseButtonItem, new Point(137, 10));
        }
        
        /// <summary>
        /// UnCheckF3AndNormalInSelectDepartmentRosterplanTab - Use 'UnCheckF3AndNormalInSelectDepartmentRosterplanTabParams' to pass parameters into this method.
        /// </summary>
        public void UnCheckF3AndNormalInSelectDepartmentRosterplanTab()
        {
            #region Variable Declarations
            DXCheckBox uIChkAdjustF3StaticValCheckBox = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIViewTabPageClient.UIWorkPlanDepartmentSeCustom.UIGroupControl3Client.UIChkAdjustF3StaticValCheckBox;
            DXRadioGroup uIRgCalculateNormalHouRadioGroup = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIViewTabPageClient.UIWorkPlanDepartmentSeCustom.UIGroupControl3Client.UIRgCalculateNormalHouRadioGroup;
            DXRibbonButtonItem uILagreRibbonBaseButtonItem = this.UIAvdelingsoppsettWindow.UIRibbonControl1Ribbon.UIRpHomeRibbonPage.UIRpgHjemRibbonPageGroup.UILagreRibbonBaseButtonItem;
            DXButton uICloseButton = this.UIAvdelingsoppsettWindow.UIRibbonControl1Ribbon.UICloseButton;
            #endregion

            // Clear 'chkAdjustF3StaticValueToPositionPercent' check box
            uIChkAdjustF3StaticValCheckBox.Checked = this.UnCheckF3AndNormalInSelectDepartmentRosterplanTabParams.UIChkAdjustF3StaticValCheckBoxChecked;

            // Type '0' in 'rgCalculateNormalHoursOnRedDays' RadioGroup
            //SelectedIndex
            uIRgCalculateNormalHouRadioGroup.SelectedIndex = this.UnCheckF3AndNormalInSelectDepartmentRosterplanTabParams.UIRgCalculateNormalHouRadioGroupSelectedIndex;

            // Click 'Lagre' RibbonBaseButtonItem
            Mouse.Click(uILagreRibbonBaseButtonItem, new Point(22, 20));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(6, 9));
        }
        
        /// <summary>
        /// CheckValues_Step_10 - Use 'CheckValues_Step_10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_10()
        {
            #region Variable Declarations
            DXCell uIItem16Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem16Cell;
            DXCell uIItem1067Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem1067Cell;
            DXCell uIItem4Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem4Cell;
            DXCell uIItem253Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem253Cell;
            DXCell uIItem355Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem355Cell;
            DXCell uIItem84Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem84Cell;
            DXCell uIItem271Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem271Cell;
            DXCell uIItem142Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem142Cell;
            DXCell uIItem336Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem336Cell;
            DXCell uIItem336Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem336Cell1;
            DXCell uIItem1084Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1084Cell;
            DXCell uIItem1084Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1084Cell1;
            DXCell uIItem2366Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2366Cell;
            #endregion

            // Verify that the 'Text' property of '16' cell equals '16'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem16CellText, uIItem16Cell.Text);

            // Verify that the 'Text' property of '10,67' cell equals '10,67'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem1067CellText, uIItem1067Cell.Text);

            // Verify that the 'Text' property of '4' cell equals '4'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem4CellText, uIItem4Cell.Text);

            // Verify that the 'Text' property of '2,53' cell equals '2,53'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem253CellText, uIItem253Cell.Text);

            // Verify that the 'Text' property of '35,5' cell equals '35,5'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem355CellText, uIItem355Cell.Text);

            // Verify that the 'Text' property of '8,4' cell equals '10,4'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem84CellText, uIItem84Cell.Text);

            // Verify that the 'Text' property of '-27,1' cell equals '-25,1'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem271CellText, uIItem271Cell.Text);

            // Verify that the 'Text' property of '142' cell equals '142'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem142CellText, uIItem142Cell.Text);

            // Verify that the 'Text' property of '33,6' cell equals '41,6'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem336CellText, uIItem336Cell.Text);

            // Verify that the 'Text' property of '33,6' cell equals '41,6'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem336Cell1Text, uIItem336Cell1.Text);

            // Verify that the 'Text' property of '-108,4' cell equals '-100,4'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem1084CellText, uIItem1084Cell.Text);

            // Verify that the 'Text' property of '-108,4' cell equals '-100,4'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem1084Cell1Text, uIItem1084Cell1.Text);

            // Verify that the 'Text' property of '23,66%' cell equals '29,3%'
            Assert.AreEqual(this.CheckValues_Step_10ExpectedValues.UIItem2366CellText, uIItem2366Cell.Text);
        }
        
        /// <summary>
        /// SetRosterplanDisplayDateStep18 - Use 'SetRosterplanDisplayDateStep18Params' to pass parameters into this method.
        /// </summary>
        public void SetRosterplanDisplayDateStep18()
        {
            #region Variable Declarations
            DXLookUpEdit uILeDisplayStartDateLookUpEdit = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UILeDisplayStartDateLookUpEdit;
            #endregion

            // Type 'System.DateTime' in 'leDisplayStartDate' LookUpEdit
            //ValueTypeName
            uILeDisplayStartDateLookUpEdit.ValueTypeName = this.SetRosterplanDisplayDateStep18Params.UILeDisplayStartDateLookUpEditValueTypeName;

            // Type '2024-04-08' in 'leDisplayStartDate' LookUpEdit
            //ValueAsString
            uILeDisplayStartDateLookUpEdit.ValueAsString = this.SetRosterplanDisplayDateStep18Params.UILeDisplayStartDateLookUpEditValueAsString;
        }
        
        /// <summary>
        /// CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21 - Use 'CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21()
        {
            #region Variable Declarations
            DXCheckBox uIChkAdjustF3StaticValCheckBox = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIViewTabPageClient.UIWorkPlanDepartmentSeCustom.UIGroupControl3Client.UIChkAdjustF3StaticValCheckBox;
            DXRadioButton uIRadioGroupItemRadioButton = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIViewTabPageClient.UIWorkPlanDepartmentSeCustom.UIGroupControl3Client.UIRgCalculateNormalHouRadioGroup.UIRadioGroupItemRadioButton;
            DXRadioButton uIRadioGroupItemRadioButton1 = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIViewTabPageClient.UIWorkPlanDepartmentSeCustom.UIGroupControl3Client.UIRgCalculateNormalHouRadioGroup.UIRadioGroupItemRadioButton1;
            DXRadioButton uIRadioGroupItemRadioButton2 = this.UIAvdelingsoppsettWindow.UIRibbonViewHost1Custom.UIPcViewClient.UIContextViewCustom.UISplitContainerControSplitContainerControl.UISplitGroupPanelClient.UIRibbonViewHost1Custom.UIPcViewClient.UITabViewCustom.UITabControlViewHost1TabList.UIViewTabPageClient.UIWorkPlanDepartmentSeCustom.UIGroupControl3Client.UIRgCalculateNormalHouRadioGroup.UIRadioGroupItemRadioButton2;
            #endregion

            // Verify that the 'ValueAsString' property of 'chkAdjustF3StaticValueToPositionPercent' check box equals 'False'
            Assert.AreEqual(this.CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues.UIChkAdjustF3StaticValCheckBoxValueAsString, uIChkAdjustF3StaticValCheckBox.ValueAsString);

            // Verify that the 'Checked' property of 'chkAdjustF3StaticValueToPositionPercent' check box equals 'False'
            Assert.AreEqual(this.CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues.UIChkAdjustF3StaticValCheckBoxChecked, uIChkAdjustF3StaticValCheckBox.Checked);

            // Verify that the 'Selected' property of 'RadioGroupItem' radio button equals 'True'
            Assert.AreEqual(this.CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues.UIRadioGroupItemRadioButtonSelected, uIRadioGroupItemRadioButton.Selected);

            // Verify that the 'Selected' property of 'RadioGroupItem' radio button equals 'False'
            Assert.AreEqual(this.CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues.UIRadioGroupItemRadioButton1Selected, uIRadioGroupItemRadioButton1.Selected);

            // Verify that the 'Selected' property of 'RadioGroupItem' radio button equals 'False'
            Assert.AreEqual(this.CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues.UIRadioGroupItemRadioButton2Selected, uIRadioGroupItemRadioButton2.Selected);
        }
        
        #region Properties
        public virtual CheckF3AndNormalSelectDepartmentRosterplanTabParams CheckF3AndNormalSelectDepartmentRosterplanTabParams
        {
            get
            {
                if ((this.mCheckF3AndNormalSelectDepartmentRosterplanTabParams == null))
                {
                    this.mCheckF3AndNormalSelectDepartmentRosterplanTabParams = new CheckF3AndNormalSelectDepartmentRosterplanTabParams();
                }
                return this.mCheckF3AndNormalSelectDepartmentRosterplanTabParams;
            }
        }
        
        public virtual CheckValues_Step_10_2ExpectedValues CheckValues_Step_10_2ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_10_2ExpectedValues == null))
                {
                    this.mCheckValues_Step_10_2ExpectedValues = new CheckValues_Step_10_2ExpectedValues();
                }
                return this.mCheckValues_Step_10_2ExpectedValues;
            }
        }
        
        public virtual CheckValues_Step_11ExpectedValues CheckValues_Step_11ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_11ExpectedValues == null))
                {
                    this.mCheckValues_Step_11ExpectedValues = new CheckValues_Step_11ExpectedValues();
                }
                return this.mCheckValues_Step_11ExpectedValues;
            }
        }
        
        public virtual CheckValues_Step_12ExpectedValues CheckValues_Step_12ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_12ExpectedValues == null))
                {
                    this.mCheckValues_Step_12ExpectedValues = new CheckValues_Step_12ExpectedValues();
                }
                return this.mCheckValues_Step_12ExpectedValues;
            }
        }
        
        public virtual CheckValues_Step_2ExpectedValues CheckValues_Step_2ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_2ExpectedValues == null))
                {
                    this.mCheckValues_Step_2ExpectedValues = new CheckValues_Step_2ExpectedValues();
                }
                return this.mCheckValues_Step_2ExpectedValues;
            }
        }
        
        public virtual CheckValues_Step_4ExpectedValues CheckValues_Step_4ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_4ExpectedValues == null))
                {
                    this.mCheckValues_Step_4ExpectedValues = new CheckValues_Step_4ExpectedValues();
                }
                return this.mCheckValues_Step_4ExpectedValues;
            }
        }
        
        public virtual CheckValues_Step_7ExpectedValues CheckValues_Step_7ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_7ExpectedValues == null))
                {
                    this.mCheckValues_Step_7ExpectedValues = new CheckValues_Step_7ExpectedValues();
                }
                return this.mCheckValues_Step_7ExpectedValues;
            }
        }
        
        public virtual CheckValues_Step_8ExpectedValues CheckValues_Step_8ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_8ExpectedValues == null))
                {
                    this.mCheckValues_Step_8ExpectedValues = new CheckValues_Step_8ExpectedValues();
                }
                return this.mCheckValues_Step_8ExpectedValues;
            }
        }
        
        public virtual CheckValues_Step_9ExpectedValues CheckValues_Step_9ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_9ExpectedValues == null))
                {
                    this.mCheckValues_Step_9ExpectedValues = new CheckValues_Step_9ExpectedValues();
                }
                return this.mCheckValues_Step_9ExpectedValues;
            }
        }
        
        public virtual CheckValuesAdel_Step_18ExpectedValues CheckValuesAdel_Step_18ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesAdel_Step_18ExpectedValues == null))
                {
                    this.mCheckValuesAdel_Step_18ExpectedValues = new CheckValuesAdel_Step_18ExpectedValues();
                }
                return this.mCheckValuesAdel_Step_18ExpectedValues;
            }
        }
        
        public virtual CheckValuesClue_Step_18ExpectedValues CheckValuesClue_Step_18ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesClue_Step_18ExpectedValues == null))
                {
                    this.mCheckValuesClue_Step_18ExpectedValues = new CheckValuesClue_Step_18ExpectedValues();
                }
                return this.mCheckValuesClue_Step_18ExpectedValues;
            }
        }
        
        public virtual CheckValuesLene_Step_17ExpectedValues CheckValuesLene_Step_17ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesLene_Step_17ExpectedValues == null))
                {
                    this.mCheckValuesLene_Step_17ExpectedValues = new CheckValuesLene_Step_17ExpectedValues();
                }
                return this.mCheckValuesLene_Step_17ExpectedValues;
            }
        }
        
        public virtual CheckValuesMagne_Step_15ExpectedValues CheckValuesMagne_Step_15ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesMagne_Step_15ExpectedValues == null))
                {
                    this.mCheckValuesMagne_Step_15ExpectedValues = new CheckValuesMagne_Step_15ExpectedValues();
                }
                return this.mCheckValuesMagne_Step_15ExpectedValues;
            }
        }
        
        public virtual CheckValuesMagne_Step_16ExpectedValues CheckValuesMagne_Step_16ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesMagne_Step_16ExpectedValues == null))
                {
                    this.mCheckValuesMagne_Step_16ExpectedValues = new CheckValuesMagne_Step_16ExpectedValues();
                }
                return this.mCheckValuesMagne_Step_16ExpectedValues;
            }
        }
        
        public virtual CheckValuesMagne_Step_17ExpectedValues CheckValuesMagne_Step_17ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesMagne_Step_17ExpectedValues == null))
                {
                    this.mCheckValuesMagne_Step_17ExpectedValues = new CheckValuesMagne_Step_17ExpectedValues();
                }
                return this.mCheckValuesMagne_Step_17ExpectedValues;
            }
        }
        
        public virtual CheckValuesOrminge_Step_15ExpectedValues CheckValuesOrminge_Step_15ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesOrminge_Step_15ExpectedValues == null))
                {
                    this.mCheckValuesOrminge_Step_15ExpectedValues = new CheckValuesOrminge_Step_15ExpectedValues();
                }
                return this.mCheckValuesOrminge_Step_15ExpectedValues;
            }
        }
        
        public virtual CheckValuesOrminge_Step_16ExpectedValues CheckValuesOrminge_Step_16ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesOrminge_Step_16ExpectedValues == null))
                {
                    this.mCheckValuesOrminge_Step_16ExpectedValues = new CheckValuesOrminge_Step_16ExpectedValues();
                }
                return this.mCheckValuesOrminge_Step_16ExpectedValues;
            }
        }
        
        public virtual CheckValuesRoger_Step_15ExpectedValues CheckValuesRoger_Step_15ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesRoger_Step_15ExpectedValues == null))
                {
                    this.mCheckValuesRoger_Step_15ExpectedValues = new CheckValuesRoger_Step_15ExpectedValues();
                }
                return this.mCheckValuesRoger_Step_15ExpectedValues;
            }
        }
        
        public virtual CheckValuesRoger_Step_16ExpectedValues CheckValuesRoger_Step_16ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesRoger_Step_16ExpectedValues == null))
                {
                    this.mCheckValuesRoger_Step_16ExpectedValues = new CheckValuesRoger_Step_16ExpectedValues();
                }
                return this.mCheckValuesRoger_Step_16ExpectedValues;
            }
        }
        
        public virtual CheckValuesSilke_Step_18ExpectedValues CheckValuesSilke_Step_18ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesSilke_Step_18ExpectedValues == null))
                {
                    this.mCheckValuesSilke_Step_18ExpectedValues = new CheckValuesSilke_Step_18ExpectedValues();
                }
                return this.mCheckValuesSilke_Step_18ExpectedValues;
            }
        }
        
        public virtual CheckValuesVakant_Step_9ExpectedValues CheckValuesVakant_Step_9ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesVakant_Step_9ExpectedValues == null))
                {
                    this.mCheckValuesVakant_Step_9ExpectedValues = new CheckValuesVakant_Step_9ExpectedValues();
                }
                return this.mCheckValuesVakant_Step_9ExpectedValues;
            }
        }
        
        public virtual CheckWeekSumStep_22ExpectedValues CheckWeekSumStep_22ExpectedValues
        {
            get
            {
                if ((this.mCheckWeekSumStep_22ExpectedValues == null))
                {
                    this.mCheckWeekSumStep_22ExpectedValues = new CheckWeekSumStep_22ExpectedValues();
                }
                return this.mCheckWeekSumStep_22ExpectedValues;
            }
        }
        
        public virtual CheckWeeksumValuesJalle_Step_5ExpectedValues CheckWeeksumValuesJalle_Step_5ExpectedValues
        {
            get
            {
                if ((this.mCheckWeeksumValuesJalle_Step_5ExpectedValues == null))
                {
                    this.mCheckWeeksumValuesJalle_Step_5ExpectedValues = new CheckWeeksumValuesJalle_Step_5ExpectedValues();
                }
                return this.mCheckWeeksumValuesJalle_Step_5ExpectedValues;
            }
        }
        
        public virtual CheckWeeksumValuesStep_23ExpectedValues CheckWeeksumValuesStep_23ExpectedValues
        {
            get
            {
                if ((this.mCheckWeeksumValuesStep_23ExpectedValues == null))
                {
                    this.mCheckWeeksumValuesStep_23ExpectedValues = new CheckWeeksumValuesStep_23ExpectedValues();
                }
                return this.mCheckWeeksumValuesStep_23ExpectedValues;
            }
        }
        
        public virtual CheckWeeksumValuesStep_24_25ExpectedValues CheckWeeksumValuesStep_24_25ExpectedValues
        {
            get
            {
                if ((this.mCheckWeeksumValuesStep_24_25ExpectedValues == null))
                {
                    this.mCheckWeeksumValuesStep_24_25ExpectedValues = new CheckWeeksumValuesStep_24_25ExpectedValues();
                }
                return this.mCheckWeeksumValuesStep_24_25ExpectedValues;
            }
        }
        
        public virtual DeleteJamDHCodeParams DeleteJamDHCodeParams
        {
            get
            {
                if ((this.mDeleteJamDHCodeParams == null))
                {
                    this.mDeleteJamDHCodeParams = new DeleteJamDHCodeParams();
                }
                return this.mDeleteJamDHCodeParams;
            }
        }
        
        public virtual InsertJamDHCodesParams InsertJamDHCodesParams
        {
            get
            {
                if ((this.mInsertJamDHCodesParams == null))
                {
                    this.mInsertJamDHCodesParams = new InsertJamDHCodesParams();
                }
                return this.mInsertJamDHCodesParams;
            }
        }
        
        public virtual InsertPluttA3CodeParams InsertPluttA3CodeParams
        {
            get
            {
                if ((this.mInsertPluttA3CodeParams == null))
                {
                    this.mInsertPluttA3CodeParams = new InsertPluttA3CodeParams();
                }
                return this.mInsertPluttA3CodeParams;
            }
        }
        
        public virtual InsertShiftCodesInHelpplanParams InsertShiftCodesInHelpplanParams
        {
            get
            {
                if ((this.mInsertShiftCodesInHelpplanParams == null))
                {
                    this.mInsertShiftCodesInHelpplanParams = new InsertShiftCodesInHelpplanParams();
                }
                return this.mInsertShiftCodesInHelpplanParams;
            }
        }
        
        public virtual SelectRallyRogerInExchangeEmpWindowParams SelectRallyRogerInExchangeEmpWindowParams
        {
            get
            {
                if ((this.mSelectRallyRogerInExchangeEmpWindowParams == null))
                {
                    this.mSelectRallyRogerInExchangeEmpWindowParams = new SelectRallyRogerInExchangeEmpWindowParams();
                }
                return this.mSelectRallyRogerInExchangeEmpWindowParams;
            }
        }
        
        public virtual SetHelpplanEmployeeCalculationTypesParams SetHelpplanEmployeeCalculationTypesParams
        {
            get
            {
                if ((this.mSetHelpplanEmployeeCalculationTypesParams == null))
                {
                    this.mSetHelpplanEmployeeCalculationTypesParams = new SetHelpplanEmployeeCalculationTypesParams();
                }
                return this.mSetHelpplanEmployeeCalculationTypesParams;
            }
        }
        
        public virtual UnCheckF3AndNormalInSelectDepartmentRosterplanTabParams UnCheckF3AndNormalInSelectDepartmentRosterplanTabParams
        {
            get
            {
                if ((this.mUnCheckF3AndNormalInSelectDepartmentRosterplanTabParams == null))
                {
                    this.mUnCheckF3AndNormalInSelectDepartmentRosterplanTabParams = new UnCheckF3AndNormalInSelectDepartmentRosterplanTabParams();
                }
                return this.mUnCheckF3AndNormalInSelectDepartmentRosterplanTabParams;
            }
        }
        
        public virtual CheckValues_Step_10ExpectedValues CheckValues_Step_10ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_10ExpectedValues == null))
                {
                    this.mCheckValues_Step_10ExpectedValues = new CheckValues_Step_10ExpectedValues();
                }
                return this.mCheckValues_Step_10ExpectedValues;
            }
        }
        
        public virtual SetRosterplanDisplayDateStep18Params SetRosterplanDisplayDateStep18Params
        {
            get
            {
                if ((this.mSetRosterplanDisplayDateStep18Params == null))
                {
                    this.mSetRosterplanDisplayDateStep18Params = new SetRosterplanDisplayDateStep18Params();
                }
                return this.mSetRosterplanDisplayDateStep18Params;
            }
        }
        
        public virtual CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues
        {
            get
            {
                if ((this.mCheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues == null))
                {
                    this.mCheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues = new CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues();
                }
                return this.mCheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIByttansattWindow UIByttansattWindow
        {
            get
            {
                if ((this.mUIByttansattWindow == null))
                {
                    this.mUIByttansattWindow = new UIByttansattWindow();
                }
                return this.mUIByttansattWindow;
            }
        }
        
        public UINyhjelpeplanWindow UINyhjelpeplanWindow
        {
            get
            {
                if ((this.mUINyhjelpeplanWindow == null))
                {
                    this.mUINyhjelpeplanWindow = new UINyhjelpeplanWindow();
                }
                return this.mUINyhjelpeplanWindow;
            }
        }
        
        public UIOppsettforavdeling51Window UIOppsettforavdeling51Window
        {
            get
            {
                if ((this.mUIOppsettforavdeling51Window == null))
                {
                    this.mUIOppsettforavdeling51Window = new UIOppsettforavdeling51Window();
                }
                return this.mUIOppsettforavdeling51Window;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIArbeidsplanInnstilliWindow UIArbeidsplanInnstilliWindow
        {
            get
            {
                if ((this.mUIArbeidsplanInnstilliWindow == null))
                {
                    this.mUIArbeidsplanInnstilliWindow = new UIArbeidsplanInnstilliWindow();
                }
                return this.mUIArbeidsplanInnstilliWindow;
            }
        }
        
        public UIAvdelingsoppsettWindow UIAvdelingsoppsettWindow
        {
            get
            {
                if ((this.mUIAvdelingsoppsettWindow == null))
                {
                    this.mUIAvdelingsoppsettWindow = new UIAvdelingsoppsettWindow();
                }
                return this.mUIAvdelingsoppsettWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckF3AndNormalSelectDepartmentRosterplanTabParams mCheckF3AndNormalSelectDepartmentRosterplanTabParams;
        
        private CheckValues_Step_10_2ExpectedValues mCheckValues_Step_10_2ExpectedValues;
        
        private CheckValues_Step_11ExpectedValues mCheckValues_Step_11ExpectedValues;
        
        private CheckValues_Step_12ExpectedValues mCheckValues_Step_12ExpectedValues;
        
        private CheckValues_Step_2ExpectedValues mCheckValues_Step_2ExpectedValues;
        
        private CheckValues_Step_4ExpectedValues mCheckValues_Step_4ExpectedValues;
        
        private CheckValues_Step_7ExpectedValues mCheckValues_Step_7ExpectedValues;
        
        private CheckValues_Step_8ExpectedValues mCheckValues_Step_8ExpectedValues;
        
        private CheckValues_Step_9ExpectedValues mCheckValues_Step_9ExpectedValues;
        
        private CheckValuesAdel_Step_18ExpectedValues mCheckValuesAdel_Step_18ExpectedValues;
        
        private CheckValuesClue_Step_18ExpectedValues mCheckValuesClue_Step_18ExpectedValues;
        
        private CheckValuesLene_Step_17ExpectedValues mCheckValuesLene_Step_17ExpectedValues;
        
        private CheckValuesMagne_Step_15ExpectedValues mCheckValuesMagne_Step_15ExpectedValues;
        
        private CheckValuesMagne_Step_16ExpectedValues mCheckValuesMagne_Step_16ExpectedValues;
        
        private CheckValuesMagne_Step_17ExpectedValues mCheckValuesMagne_Step_17ExpectedValues;
        
        private CheckValuesOrminge_Step_15ExpectedValues mCheckValuesOrminge_Step_15ExpectedValues;
        
        private CheckValuesOrminge_Step_16ExpectedValues mCheckValuesOrminge_Step_16ExpectedValues;
        
        private CheckValuesRoger_Step_15ExpectedValues mCheckValuesRoger_Step_15ExpectedValues;
        
        private CheckValuesRoger_Step_16ExpectedValues mCheckValuesRoger_Step_16ExpectedValues;
        
        private CheckValuesSilke_Step_18ExpectedValues mCheckValuesSilke_Step_18ExpectedValues;
        
        private CheckValuesVakant_Step_9ExpectedValues mCheckValuesVakant_Step_9ExpectedValues;
        
        private CheckWeekSumStep_22ExpectedValues mCheckWeekSumStep_22ExpectedValues;
        
        private CheckWeeksumValuesJalle_Step_5ExpectedValues mCheckWeeksumValuesJalle_Step_5ExpectedValues;
        
        private CheckWeeksumValuesStep_23ExpectedValues mCheckWeeksumValuesStep_23ExpectedValues;
        
        private CheckWeeksumValuesStep_24_25ExpectedValues mCheckWeeksumValuesStep_24_25ExpectedValues;
        
        private DeleteJamDHCodeParams mDeleteJamDHCodeParams;
        
        private InsertJamDHCodesParams mInsertJamDHCodesParams;
        
        private InsertPluttA3CodeParams mInsertPluttA3CodeParams;
        
        private InsertShiftCodesInHelpplanParams mInsertShiftCodesInHelpplanParams;
        
        private SelectRallyRogerInExchangeEmpWindowParams mSelectRallyRogerInExchangeEmpWindowParams;
        
        private SetHelpplanEmployeeCalculationTypesParams mSetHelpplanEmployeeCalculationTypesParams;
        
        private UnCheckF3AndNormalInSelectDepartmentRosterplanTabParams mUnCheckF3AndNormalInSelectDepartmentRosterplanTabParams;
        
        private CheckValues_Step_10ExpectedValues mCheckValues_Step_10ExpectedValues;
        
        private SetRosterplanDisplayDateStep18Params mSetRosterplanDisplayDateStep18Params;
        
        private CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues mCheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIByttansattWindow mUIByttansattWindow;
        
        private UINyhjelpeplanWindow mUINyhjelpeplanWindow;
        
        private UIOppsettforavdeling51Window mUIOppsettforavdeling51Window;
        
        private UIItemWindow21 mUIItemWindow2;
        
        private UIArbeidsplanInnstilliWindow mUIArbeidsplanInnstilliWindow;
        
        private UIAvdelingsoppsettWindow mUIAvdelingsoppsettWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckF3AndNormalSelectDepartmentRosterplanTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckF3AndNormalSelectDepartmentRosterplanTabParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'chkAdjustF3StaticValueToPositionPercent' check box
        /// </summary>
        public bool UIChkAdjustF3StaticValCheckBoxChecked = true;
        
        /// <summary>
        /// Type '1' in 'rgCalculateNormalHoursOnRedDays' RadioGroup
        /// </summary>
        public int UIRgCalculateNormalHouRadioGroupSelectedIndex = 1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_10_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_10_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355CellText = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,4' cell equals '8,4'
        /// </summary>
        public string UIItem84CellText = "8,4";
        
        /// <summary>
        /// Verify that the 'Text' property of '-27,1' cell equals '-27,1'
        /// </summary>
        public string UIItem271CellText = "-27,1";
        
        /// <summary>
        /// Verify that the 'Text' property of '142' cell equals '142'
        /// </summary>
        public string UIItem142CellText = "142";
        
        /// <summary>
        /// Verify that the 'Text' property of '33,6' cell equals '33,6'
        /// </summary>
        public string UIItem336CellText = "33,6";
        
        /// <summary>
        /// Verify that the 'Text' property of '33,6' cell equals '33,6'
        /// </summary>
        public string UIItem336Cell1Text = "33,6";
        
        /// <summary>
        /// Verify that the 'Text' property of '-108,4' cell equals '-108,4'
        /// </summary>
        public string UIItem1084CellText = "-108,4";
        
        /// <summary>
        /// Verify that the 'Text' property of '-108,4' cell equals '-108,4'
        /// </summary>
        public string UIItem1084Cell1Text = "-108,4";
        
        /// <summary>
        /// Verify that the 'Text' property of '23,66%' cell equals '23,66%'
        /// </summary>
        public string UIItem2366CellText = "23,66%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '37,5' cell equals '37,5'
        /// </summary>
        public string UIItem375Cell1Text = "37,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355Cell2Text = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '25,06' cell equals '35,89'
        /// </summary>
        public string UIItem2506Cell1Text = "35,89";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '0,39'
        /// </summary>
        public string UIItem355Cell1Text = "0,39";
        
        /// <summary>
        /// Verify that the 'Text' property of '25,06' cell equals '106,5'
        /// </summary>
        public string UIItem2506CellText = "106,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '-10,44' cell equals '107,67'
        /// </summary>
        public string UIItem1044CellText = "107,67";
        
        /// <summary>
        /// Verify that the 'Text' property of '106,5' cell equals '107,67'
        /// </summary>
        public string UIItem1065Cell1Text = "107,67";
        
        /// <summary>
        /// Verify that the 'Text' property of '75,17' cell equals '1,17'
        /// </summary>
        public string UIItem7517CellText = "1,17";
        
        /// <summary>
        /// Verify that the 'Text' property of '75,17' cell equals '1,17'
        /// </summary>
        public string UIItem7517Cell1Text = "1,17";
        
        /// <summary>
        /// Verify that the 'Text' property of '-31,33' cell equals '101,1%'
        /// </summary>
        public string UIItem3133CellText = "101,1%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'VAKANT' cell equals 'Roger, Rally'
        /// </summary>
        public string UIVAKANTCellText = "Roger, Rally";
        
        /// <summary>
        /// Verify that the 'Text' property of '100' cell equals '100'
        /// </summary>
        public string UIItem100Cell1Text = "100";
        
        /// <summary>
        /// Verify that the 'Text' property of '75' cell equals '75'
        /// </summary>
        public string UIItem75Cell1Text = "75";
        
        /// <summary>
        /// Verify that the 'Text' property of '0,75' cell equals '0,75'
        /// </summary>
        public string UIItem075Cell1Text = "0,75";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '109,86%'
        /// </summary>
        public string UIItem355Cell2Text = "109,86%";
        
        /// <summary>
        /// Verify that the 'Text' property of '25,06' cell equals '75,82%'
        /// </summary>
        public string UIItem2506Cell1Text = "75,82%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '8' cell equals '8'
        /// </summary>
        public string UIItem8CellValueAsString = "8";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '8' cell equals '8'
        /// </summary>
        public string UIItem8Cell1ValueAsString = "8";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '18,67' cell equals '10,67'
        /// </summary>
        public string UIItem1867CellValueAsString = "10,67";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '18,67' cell equals '10,67'
        /// </summary>
        public string UIItem1867Cell1ValueAsString = "10,67";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4' cell equals '4'
        /// </summary>
        public string UIItem4CellValueAsString = "4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '4' cell equals '4'
        /// </summary>
        public string UIItem4Cell1ValueAsString = "4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '2,53' cell equals '2,53'
        /// </summary>
        public string UIItem253CellValueAsString = "2,53";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '2,53' cell equals '2,53'
        /// </summary>
        public string UIItem253Cell1ValueAsString = "2,53";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '37,5' cell equals '37,5'
        /// </summary>
        public string UIItem375CellValueAsString = "37,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '37,5' cell equals '37,5'
        /// </summary>
        public string UIItem375Cell1ValueAsString = "37,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '42' cell equals '42'
        /// </summary>
        public string UIItem42CellValueAsString = "42";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '42' cell equals '42'
        /// </summary>
        public string UIItem42Cell1ValueAsString = "42";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '32,5' cell equals '32,5'
        /// </summary>
        public string UIItem325CellValueAsString = "32,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '32,5' cell equals '32,5'
        /// </summary>
        public string UIItem325Cell1ValueAsString = "32,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30' cell equals '30'
        /// </summary>
        public string UIItem30CellValueAsString = "30";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30' cell equals '30'
        /// </summary>
        public string UIItem30Cell1ValueAsString = "30";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '15,5' cell equals '15,5'
        /// </summary>
        public string UIItem155CellValueAsString = "15,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0CellValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '15,5' cell equals '15,5'
        /// </summary>
        public string UIItem155Cell1ValueAsString = "15,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '20' cell equals '20'
        /// </summary>
        public string UIItem20CellValueAsString = "20";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell1ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '20' cell equals '20'
        /// </summary>
        public string UIItem20Cell1ValueAsString = "20";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell2ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '8' cell equals '8'
        /// </summary>
        public string UIItem8Cell2ValueAsString = "8";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '8' cell equals '8'
        /// </summary>
        public string UIItem8Cell3ValueAsString = "8";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell3ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '8' cell equals '8'
        /// </summary>
        public string UIItem8Cell4ValueAsString = "8";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '8' cell equals '8'
        /// </summary>
        public string UIItem8Cell5ValueAsString = "8";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell4ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell5ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell6ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell7ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '39,33' cell equals '39,33'
        /// </summary>
        public string UIItem3933CellValueAsString = "39,33";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '39,33' cell equals '39,33'
        /// </summary>
        public string UIItem3933Cell1ValueAsString = "39,33";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355CellValueAsString = "35,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355Cell1ValueAsString = "35,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '22' cell equals '22'
        /// </summary>
        public string UIItem22CellValueAsString = "22";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell8ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '22' cell equals '22'
        /// </summary>
        public string UIItem22Cell1ValueAsString = "22";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '15' cell equals '15'
        /// </summary>
        public string UIItem15CellValueAsString = "15";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell9ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '15' cell equals '15'
        /// </summary>
        public string UIItem15Cell1ValueAsString = "15";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell10ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '15' cell equals '15'
        /// </summary>
        public string UIItem15Cell2ValueAsString = "15";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '15' cell equals '15'
        /// </summary>
        public string UIItem15Cell3ValueAsString = "15";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell11ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '20' cell equals '20'
        /// </summary>
        public string UIItem20Cell2ValueAsString = "20";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '20' cell equals '20'
        /// </summary>
        public string UIItem20Cell3ValueAsString = "20";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '40' cell equals '40'
        /// </summary>
        public string UIItem40CellValueAsString = "40";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '5,33' cell equals '5,33'
        /// </summary>
        public string UIItem533CellValueAsString = "5,33";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '45,33' cell equals '45,33'
        /// </summary>
        public string UIItem4533CellValueAsString = "45,33";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '40' cell equals '40'
        /// </summary>
        public string UIItem40Cell1ValueAsString = "40";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell12ValueAsString = "0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '40' cell equals '40'
        /// </summary>
        public string UIItem40Cell2ValueAsString = "40";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '40' cell equals '40'
        /// </summary>
        public string UIItem40Cell3ValueAsString = "40";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '8' cell equals '8'
        /// </summary>
        public string UIItem8Cell6ValueAsString = "8";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '48' cell equals '48'
        /// </summary>
        public string UIItem48CellValueAsString = "48";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '24' cell equals '24'
        /// </summary>
        public string UIItem24CellValueAsString = "24";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '3,2' cell equals '3,2'
        /// </summary>
        public string UIItem32CellValueAsString = "3,2";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '27,2' cell equals '27,2'
        /// </summary>
        public string UIItem272CellValueAsString = "27,2";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30' cell equals '30'
        /// </summary>
        public string UIItem30Cell2ValueAsString = "30";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '30' cell equals '30'
        /// </summary>
        public string UIItem30Cell3ValueAsString = "30";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '29' cell equals '29'
        /// </summary>
        public string UIItem29CellValueAsString = "29";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '29' cell equals '29'
        /// </summary>
        public string UIItem29Cell1ValueAsString = "29";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '31,5' cell equals '31,5'
        /// </summary>
        public string UIItem315CellValueAsString = "31,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '31,5' cell equals '31,5'
        /// </summary>
        public string UIItem315Cell1ValueAsString = "31,5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '14,67' cell equals '14,67'
        /// </summary>
        public string UIItem1467CellValueAsString = "14,67";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '14,67' cell equals '14,67'
        /// </summary>
        public string UIItem1467Cell1ValueAsString = "14,67";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '2' cell equals '2'
        /// </summary>
        public string UIItem2CellValueAsString = "2";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '2' cell equals '2'
        /// </summary>
        public string UIItem2Cell1ValueAsString = "2";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '6,4' cell equals '6,4'
        /// </summary>
        public string UIItem64CellValueAsString = "6,4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '6,4' cell equals '6,4'
        /// </summary>
        public string UIItem64Cell1ValueAsString = "6,4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell9Text = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell10Text = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell3Text = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell4Text = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell5Text = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals ''
        /// </summary>
        public string UIItem0Cell6Text = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell7Text = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCell1Text = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals ''
        /// </summary>
        public string UIItem0Cell8Text = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '26,63'
        /// </summary>
        public string UIItem0Cell9Text = "26,63";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '30'
        /// </summary>
        public string UIItem0Cell10Text = "30";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '3,38'
        /// </summary>
        public string UIItem0Cell3Text = "3,38";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '26,63'
        /// </summary>
        public string UIItem0Cell4Text = "26,63";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '30'
        /// </summary>
        public string UIItem0Cell5Text = "30";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '30'
        /// </summary>
        public string UIItem0Cell6Text = "30";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '3,38'
        /// </summary>
        public string UIItem0Cell7Text = "3,38";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '3,38'
        /// </summary>
        public string UIItemCell1Text = "3,38";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '84,51%'
        /// </summary>
        public string UIItem0Cell8Text = "84,51%";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355Cell2Text = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '25,06' cell equals '25,06'
        /// </summary>
        public string UIItem2506Cell1Text = "25,06";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '-10,44'
        /// </summary>
        public string UIItem355Cell1Text = "-10,44";
        
        /// <summary>
        /// Verify that the 'Text' property of '25,06' cell equals '106,5'
        /// </summary>
        public string UIItem2506CellText = "106,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '-10,44' cell equals '75,17'
        /// </summary>
        public string UIItem1044CellText = "75,17";
        
        /// <summary>
        /// Verify that the 'Text' property of '106,5' cell equals '75,17'
        /// </summary>
        public string UIItem1065Cell1Text = "75,17";
        
        /// <summary>
        /// Verify that the 'Text' property of '75,17' cell equals '-31,33'
        /// </summary>
        public string UIItem7517CellText = "-31,33";
        
        /// <summary>
        /// Verify that the 'Text' property of '75,17' cell equals '-31,33'
        /// </summary>
        public string UIItem7517Cell1Text = "-31,33";
        
        /// <summary>
        /// Verify that the 'Text' property of '-31,33' cell equals '70,58%'
        /// </summary>
        public string UIItem3133CellText = "70,58%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355Cell2Text = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '25,06' cell equals '33,06'
        /// </summary>
        public string UIItem2506Cell1Text = "33,06";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '-2,44'
        /// </summary>
        public string UIItem355Cell1Text = "-2,44";
        
        /// <summary>
        /// Verify that the 'Text' property of '25,06' cell equals '106,5'
        /// </summary>
        public string UIItem2506CellText = "106,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '-10,44' cell equals '99,17'
        /// </summary>
        public string UIItem1044CellText = "99,17";
        
        /// <summary>
        /// Verify that the 'Text' property of '106,5' cell equals '99,17'
        /// </summary>
        public string UIItem1065Cell1Text = "99,17";
        
        /// <summary>
        /// Verify that the 'Text' property of '75,17' cell equals '-7,33'
        /// </summary>
        public string UIItem7517CellText = "-7,33";
        
        /// <summary>
        /// Verify that the 'Text' property of '75,17' cell equals '-7,33'
        /// </summary>
        public string UIItem7517Cell1Text = "-7,33";
        
        /// <summary>
        /// Verify that the 'Text' property of '-31,33' cell equals '93,11%'
        /// </summary>
        public string UIItem3133CellText = "93,11%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesAdel_Step_18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesAdel_Step_18ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Adel, Albert'
        /// </summary>
        public string UIOrmingeOskarCellText = "Adel, Albert";
        
        /// <summary>
        /// Verify that the 'Text' property of '44,5' cell equals '2'
        /// </summary>
        public string UIItem445CellText = "2";
        
        /// <summary>
        /// Verify that the 'Text' property of '32' cell equals '8'
        /// </summary>
        public string UIItem32CellText = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '10,67' cell equals '10,67'
        /// </summary>
        public string UIItem1067CellText = "10,67";
        
        /// <summary>
        /// Verify that the 'Text' property of '4' cell equals '4'
        /// </summary>
        public string UIItem4CellText = "4";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355Cell3Text = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,4' cell equals '6,17'
        /// </summary>
        public string UIItem84CellText = "6,17";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '-29,33'
        /// </summary>
        public string UIGCellText = "-29,33";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '142'
        /// </summary>
        public string UIItem3av5CellText = "142";
        
        /// <summary>
        /// Verify that the 'Text' property of '33' cell equals '24,67'
        /// </summary>
        public string UIItem33CellText = "24,67";
        
        /// <summary>
        /// Verify that the 'Text' property of '43,99' cell equals '-117,33'
        /// </summary>
        public string UIItem4399CellText = "-117,33";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '17,37%'
        /// </summary>
        public string UIItem0CellText = "17,37%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesClue_Step_18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesClue_Step_18ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Clue, Celeste' cell equals 'Clue, Celeste'
        /// </summary>
        public string UIClueCelesteCellText = "Clue, Celeste";
        
        /// <summary>
        /// Verify that the 'Text' property of '17,5' cell equals '17,5'
        /// </summary>
        public string UIItem175CellText = "17,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '17,5' cell equals '17,5'
        /// </summary>
        public string UIItem175Cell1Text = "17,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '17,5' cell equals '17,5'
        /// </summary>
        public string UIItem175Cell2Text = "17,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '17,5' cell equals '17,5'
        /// </summary>
        public string UIItem175Cell3Text = "17,5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '17,75'
        /// </summary>
        public string UIGCell2Text = "17,75";
        
        /// <summary>
        /// Verify that the 'Text' property of '2' cell equals '17,5'
        /// </summary>
        public string UIItem2Cell2Text = "17,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '1,42' cell equals '-0,25'
        /// </summary>
        public string UIItem142CellText = "-0,25";
        
        /// <summary>
        /// Verify that the 'Text' property of '2' cell equals '71'
        /// </summary>
        public string UIItem2CellText = "71";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '70'
        /// </summary>
        public string UIItemCellText = "70";
        
        /// <summary>
        /// Verify that the 'Text' property of '2' cell equals '-1'
        /// </summary>
        public string UIItem2Cell1Text = "-1";
        
        /// <summary>
        /// Verify that the 'Text' property of '2,8' cell equals '49,3%'
        /// </summary>
        public string UIItem28CellText = "49,3%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesLene_Step_17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesLene_Step_17ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Lerke, Lene'
        /// </summary>
        public string UIOrmingeOskarCellText = "Lerke, Lene";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '1,33'
        /// </summary>
        public string UIItem355Cell3Text = "1,33";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,4' cell equals '1,33'
        /// </summary>
        public string UIItem84CellText = "1,33";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '1,5'
        /// </summary>
        public string UIGCellText = "1,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '1,86'
        /// </summary>
        public string UIItem3av5CellText = "1,86";
        
        /// <summary>
        /// Verify that the 'Text' property of '33' cell equals '1,86'
        /// </summary>
        public string UIItem33CellText = "1,86";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesMagne_Step_15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesMagne_Step_15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Møll, Magne' cell equals 'Møll, Magne'
        /// </summary>
        public string UIMøllMagneCellText = "Møll, Magne";
        
        /// <summary>
        /// Verify that the 'Text' property of '22,5' cell equals '22,5'
        /// </summary>
        public string UIItem225CellText = "22,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '30,5' cell equals '30,5'
        /// </summary>
        public string UIItem305Cell1Text = "30,5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell1Text = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of '2 av 5' cell equals '2 av 5'
        /// </summary>
        public string UIItem2av5Cell1Text = "2 av 5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals '15,5'
        /// </summary>
        public string UIACellText = "15,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '2 av 5' cell equals '20,66'
        /// </summary>
        public string UIItem2av5CellText = "20,66";
        
        /// <summary>
        /// Verify that the 'Text' property of '15,5' cell equals '0'
        /// </summary>
        public string UIItem155CellText = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '20,66' cell equals '20,66'
        /// </summary>
        public string UIItem2066CellText = "20,66";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0 av 1'
        /// </summary>
        public string UIItem0Cell2Text = "0 av 1";
        
        /// <summary>
        /// Verify that the 'Text' property of '20,66' cell equals '0 av 0'
        /// </summary>
        public string UIItem2066Cell1Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesMagne_Step_16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesMagne_Step_16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Møll, Magne' cell equals 'Møll, Magne'
        /// </summary>
        public string UIMøllMagneCellText = "Møll, Magne";
        
        /// <summary>
        /// Verify that the 'Text' property of '22,5' cell equals '22,5'
        /// </summary>
        public string UIItem225CellText = "22,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '30,5' cell equals '30,5'
        /// </summary>
        public string UIItem305Cell1Text = "30,5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell1Text = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of '2 av 5' cell equals '2 av 5'
        /// </summary>
        public string UIItem2av5Cell1Text = "2 av 5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals '15,5'
        /// </summary>
        public string UIACellText = "15,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '2 av 5' cell equals '20,66'
        /// </summary>
        public string UIItem2av5CellText = "20,66";
        
        /// <summary>
        /// Verify that the 'Text' property of '15,5' cell equals '7,5'
        /// </summary>
        public string UIItem155CellText = "7,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '20,66' cell equals '13,16'
        /// </summary>
        public string UIItem2066CellText = "13,16";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0 av 1'
        /// </summary>
        public string UIItem0Cell2Text = "0 av 1";
        
        /// <summary>
        /// Verify that the 'Text' property of '20,66' cell equals '0 av 0'
        /// </summary>
        public string UIItem2066Cell1Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesMagne_Step_17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesMagne_Step_17ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Clue, Celeste' cell equals 'Møll, Magne'
        /// </summary>
        public string UIClueCelesteCellText = "Møll, Magne";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '1,42'
        /// </summary>
        public string UIGCell2Text = "1,42";
        
        /// <summary>
        /// Verify that the 'Text' property of '2' cell equals '2'
        /// </summary>
        public string UIItem2Cell2Text = "2";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '2,5'
        /// </summary>
        public string UIItem3av5Cell2Text = "2,5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals ''
        /// </summary>
        public string UIGCell1Text = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '2' cell equals '2'
        /// </summary>
        public string UIItem2CellText = "2";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '2,8'
        /// </summary>
        public string UIItemCellText = "2,8";
        
        /// <summary>
        /// Verify that the 'Text' property of '27' cell equals '3,5'
        /// </summary>
        public string UIItem27CellText = "3,5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesOrminge_Step_15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesOrminge_Step_15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Orminge, Oskar'
        /// </summary>
        public string UIOrmingeOskarCellText = "Orminge, Oskar";
        
        /// <summary>
        /// Verify that the 'Text' property of '44,5' cell equals '44,5'
        /// </summary>
        public string UIItem445CellText = "44,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '32' cell equals '32'
        /// </summary>
        public string UIItem32CellText = "32";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell2Text = "G";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,4' cell equals '3 av 5'
        /// </summary>
        public string UIItem84CellText = "3 av 5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '33'
        /// </summary>
        public string UIGCellText = "33";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '43,99'
        /// </summary>
        public string UIItem3av5CellText = "43,99";
        
        /// <summary>
        /// Verify that the 'Text' property of '33' cell equals '0'
        /// </summary>
        public string UIItem33CellText = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '43,99' cell equals '43,99'
        /// </summary>
        public string UIItem4399CellText = "43,99";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0 av 1'
        /// </summary>
        public string UIItem0CellText = "0 av 1";
        
        /// <summary>
        /// Verify that the 'Text' property of '43,99' cell equals '0 av 0'
        /// </summary>
        public string UIItem4399Cell1Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesOrminge_Step_16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesOrminge_Step_16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Orminge, Oskar'
        /// </summary>
        public string UIOrmingeOskarCellText = "Orminge, Oskar";
        
        /// <summary>
        /// Verify that the 'Text' property of '44,5' cell equals '44,5'
        /// </summary>
        public string UIItem445CellText = "44,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '32' cell equals '32'
        /// </summary>
        public string UIItem32CellText = "32";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals 'G'
        /// </summary>
        public string UIItem355Cell3Text = "G";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,4' cell equals '2 av 5'
        /// </summary>
        public string UIItem84CellText = "2 av 5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '23'
        /// </summary>
        public string UIGCellText = "23";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '30,66'
        /// </summary>
        public string UIItem3av5CellText = "30,66";
        
        /// <summary>
        /// Verify that the 'Text' property of '33' cell equals '0'
        /// </summary>
        public string UIItem33CellText = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '43,99' cell equals '30,66'
        /// </summary>
        public string UIItem4399CellText = "30,66";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '1 av 1'
        /// </summary>
        public string UIItem0CellText = "1 av 1";
        
        /// <summary>
        /// Verify that the 'Text' property of '43,99' cell equals '0 av 0'
        /// </summary>
        public string UIItem4399Cell1Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesRoger_Step_15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesRoger_Step_15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Roger, Rally' cell equals 'Roger, Rally'
        /// </summary>
        public string UIRogerRallyCell1Text = "Roger, Rally";
        
        /// <summary>
        /// Verify that the 'Text' property of '30,5' cell equals '30,5'
        /// </summary>
        public string UIItem305CellText = "30,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '27' cell equals '27'
        /// </summary>
        public string UIItem27CellText = "27";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell3Text = "G";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '3 av 5'
        /// </summary>
        public string UIItem3av5Cell2Text = "3 av 5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '27'
        /// </summary>
        public string UIGCell1Text = "27";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '35,99'
        /// </summary>
        public string UIItem3av5Cell1Text = "35,99";
        
        /// <summary>
        /// Verify that the 'Text' property of '27' cell equals '0'
        /// </summary>
        public string UIItem27CellText1 = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,99' cell equals '35,99'
        /// </summary>
        public string UIItem3599CellText = "35,99";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0 av 1'
        /// </summary>
        public string UIItem0Cell1Text = "0 av 1";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,99' cell equals '0 av 1'
        /// </summary>
        public string UIItem3599Cell1Text = "0 av 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesRoger_Step_16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesRoger_Step_16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Roger, Rally' cell equals 'Roger, Rally'
        /// </summary>
        public string UIRogerRallyCell1Text = "Roger, Rally";
        
        /// <summary>
        /// Verify that the 'Text' property of '30,5' cell equals '30,5'
        /// </summary>
        public string UIItem305CellText = "30,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '27' cell equals '27'
        /// </summary>
        public string UIItem27CellText = "27";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell3Text = "G";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '3 av 5'
        /// </summary>
        public string UIItem3av5Cell2Text = "3 av 5";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '27'
        /// </summary>
        public string UIGCell1Text = "27";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '35,99'
        /// </summary>
        public string UIItem3av5Cell1Text = "35,99";
        
        /// <summary>
        /// Verify that the 'Text' property of '27' cell equals '0'
        /// </summary>
        public string UIItem27CellText1 = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,99' cell equals '35,99'
        /// </summary>
        public string UIItem3599CellText = "35,99";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0 av 1'
        /// </summary>
        public string UIItem0Cell1Text = "0 av 1";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,99' cell equals '1 av 1'
        /// </summary>
        public string UIItem3599Cell1Text = "1 av 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesSilke_Step_18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesSilke_Step_18ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Roger, Rally' cell equals 'Silke, Søvn'
        /// </summary>
        public string UIRogerRallyCell1Text = "Silke, Søvn";
        
        /// <summary>
        /// Verify that the 'Text' property of '30,5' cell equals '40'
        /// </summary>
        public string UIItem305CellText = "40";
        
        /// <summary>
        /// Verify that the 'Text' property of '27' cell equals '16'
        /// </summary>
        public string UIItem27CellText = "16";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell2Text = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '32' cell equals '32'
        /// </summary>
        public string UIItem32Cell1Text = "32";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '35,5'
        /// </summary>
        public string UIGCell3Text = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '22'
        /// </summary>
        public string UIItem3av5Cell2Text = "22";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals '-13,5'
        /// </summary>
        public string UIGCell1Text = "-13,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '3 av 5' cell equals '142'
        /// </summary>
        public string UIItem3av5Cell1Text = "142";
        
        /// <summary>
        /// Verify that the 'Text' property of '27' cell equals '88'
        /// </summary>
        public string UIItem27CellText1 = "88";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,99' cell equals '-54'
        /// </summary>
        public string UIItem3599CellText = "-54";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '61,97%'
        /// </summary>
        public string UIItem0Cell1Text = "61,97%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesVakant_Step_9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesVakant_Step_9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '26,63'
        /// </summary>
        public string UIItem0Cell9Text = "26,63";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '25,1'
        /// </summary>
        public string UIItem0Cell10Text = "25,1";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '-1,53'
        /// </summary>
        public string UIItem0Cell3Text = "-1,53";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '26,63'
        /// </summary>
        public string UIItem0Cell4Text = "26,63";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '25,1'
        /// </summary>
        public string UIItem0Cell5Text = "25,1";
        
        /// <summary>
        /// Verify that the 'ClassName' property of '0' cell equals 'GridControlCell'
        /// </summary>
        public string UIItem0Cell6ClassName = "GridControlCell";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '-1,53'
        /// </summary>
        public string UIItem0Cell7Text = "-1,53";
        
        /// <summary>
        /// Verify that the 'ClassName' property of cell equals 'GridControlCell'
        /// </summary>
        public string UIItemCell1ClassName = "GridControlCell";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '70,7%'
        /// </summary>
        public string UIItem0Cell8Text = "70,7%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWeekSumStep_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckWeekSumStep_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Orminge, Oskar' cell equals 'Forsberg, Peter'
        /// </summary>
        public string UIOrmingeOskarCellText = "Forsberg, Peter";
        
        /// <summary>
        /// Verify that the 'Text' property of '44,5' cell equals '40'
        /// </summary>
        public string UIItem445CellText = "40";
        
        /// <summary>
        /// Verify that the 'Text' property of '32' cell equals '24'
        /// </summary>
        public string UIItem32CellText = "24";
        
        /// <summary>
        /// Verify that the 'Text' property of '10,67' cell equals '3,55'
        /// </summary>
        public string UIItem1067CellText = "3,55";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWeeksumValuesJalle_Step_5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckWeeksumValuesJalle_Step_5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0CellText = "0";
        
        /// <summary>
        /// Verify that the 'Text' property of '10' cell equals '10'
        /// </summary>
        public string UIItem10CellText = "10";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,93' cell equals '8,93'
        /// </summary>
        public string UIItem893CellText = "8,93";
        
        /// <summary>
        /// Verify that the 'Text' property of '0' cell equals '0'
        /// </summary>
        public string UIItem0Cell1Text = "0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWeeksumValuesStep_23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckWeeksumValuesStep_23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '44,5' cell equals '40'
        /// </summary>
        public string UIItem445CellText = "40";
        
        /// <summary>
        /// Verify that the 'Text' property of '32' cell equals '8'
        /// </summary>
        public string UIItem32CellText = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '10,67' cell equals '7,1'
        /// </summary>
        public string UIItem1067CellText = "7,1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWeeksumValuesStep_24_25'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckWeeksumValuesStep_24_25ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '44,5' cell equals '24'
        /// </summary>
        public string UIItem445CellText = "24";
        
        /// <summary>
        /// Verify that the 'Text' property of '32' cell equals '16'
        /// </summary>
        public string UIItem32CellText = "16";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DeleteJamDHCode'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class DeleteJamDHCodeParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Delete}{Tab}' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys = "{Delete}{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertJamDHCodes'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class InsertJamDHCodesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'DH{Tab}' in '[Row]0[Column]RosterCell_5' text box
        /// </summary>
        public string UIRow0ColumnRosterCellEdit1SendKeys = "DH{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertPluttA3Code'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class InsertPluttA3CodeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'A3{Tab}' in '[Row]7[Column]RosterCell_26' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit1SendKeys = "A3{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertShiftCodesInHelpplan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class InsertShiftCodesInHelpplanParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'F3{Tab}' in '[Row]1[Column]RosterCell_7' text box
        /// </summary>
        public string UIRow1ColumnRosterCellEditSendKeys = "F3{Tab}";
        
        /// <summary>
        /// Type 'F5{Tab}' in '[Row]3[Column]RosterCell_9' text box
        /// </summary>
        public string UIRow3ColumnRosterCellEditSendKeys = "F5{Tab}";
        
        /// <summary>
        /// Type 'F4{Tab}' in '[Row]5[Column]RosterCell_1' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit1SendKeys = "F4{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectRallyRogerInExchangeEmpWindow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectRallyRogerInExchangeEmpWindowParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataAccessLayers.RosterEmploymentEntity' in 'lueNewEmployee' LookUpEdit
        /// </summary>
        public string UILueNewEmployeeLookUpEditValueTypeName = "Gatsoft.Gat.BusinessLogic.Planning.RosterPlanning.DataAccessLayers.RosterEmployme" +
            "ntEntity";
        
        /// <summary>
        /// Type 'Roger, Rally - TURNUS/S 100 % 01.01.2017-31.12.2099' in 'lueNewEmployee' LookUpEdit
        /// </summary>
        public string UILueNewEmployeeLookUpEditValueAsString = "Roger, Rally - TURNUS/S 100 % 01.01.2017-31.12.2099";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetHelpplanEmployeeCalculationTypes'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SetHelpplanEmployeeCalculationTypesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Shift + {Down}' in 'gsLayoutControlMain' custom control
        /// </summary>
        public string UIGsLayoutControlMainCustomSendKeys = "{Down}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnCheckF3AndNormalInSelectDepartmentRosterplanTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UnCheckF3AndNormalInSelectDepartmentRosterplanTabParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'chkAdjustF3StaticValueToPositionPercent' check box
        /// </summary>
        public bool UIChkAdjustF3StaticValCheckBoxChecked = false;
        
        /// <summary>
        /// Type '0' in 'rgCalculateNormalHoursOnRedDays' RadioGroup
        /// </summary>
        public int UIRgCalculateNormalHouRadioGroupSelectedIndex = 0;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '16' cell equals '16'
        /// </summary>
        public string UIItem16CellText = "16";
        
        /// <summary>
        /// Verify that the 'Text' property of '10,67' cell equals '10,67'
        /// </summary>
        public string UIItem1067CellText = "10,67";
        
        /// <summary>
        /// Verify that the 'Text' property of '4' cell equals '4'
        /// </summary>
        public string UIItem4CellText = "4";
        
        /// <summary>
        /// Verify that the 'Text' property of '2,53' cell equals '2,53'
        /// </summary>
        public string UIItem253CellText = "2,53";
        
        /// <summary>
        /// Verify that the 'Text' property of '35,5' cell equals '35,5'
        /// </summary>
        public string UIItem355CellText = "35,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,4' cell equals '10,4'
        /// </summary>
        public string UIItem84CellText = "10,4";
        
        /// <summary>
        /// Verify that the 'Text' property of '-27,1' cell equals '-25,1'
        /// </summary>
        public string UIItem271CellText = "-25,1";
        
        /// <summary>
        /// Verify that the 'Text' property of '142' cell equals '142'
        /// </summary>
        public string UIItem142CellText = "142";
        
        /// <summary>
        /// Verify that the 'Text' property of '33,6' cell equals '41,6'
        /// </summary>
        public string UIItem336CellText = "41,6";
        
        /// <summary>
        /// Verify that the 'Text' property of '33,6' cell equals '41,6'
        /// </summary>
        public string UIItem336Cell1Text = "41,6";
        
        /// <summary>
        /// Verify that the 'Text' property of '-108,4' cell equals '-100,4'
        /// </summary>
        public string UIItem1084CellText = "-100,4";
        
        /// <summary>
        /// Verify that the 'Text' property of '-108,4' cell equals '-100,4'
        /// </summary>
        public string UIItem1084Cell1Text = "-100,4";
        
        /// <summary>
        /// Verify that the 'Text' property of '23,66%' cell equals '29,3%'
        /// </summary>
        public string UIItem2366CellText = "29,3%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetRosterplanDisplayDateStep18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SetRosterplanDisplayDateStep18Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'System.DateTime' in 'leDisplayStartDate' LookUpEdit
        /// </summary>
        public string UILeDisplayStartDateLookUpEditValueTypeName = "System.DateTime";
        
        /// <summary>
        /// Type '2024-04-08' in 'leDisplayStartDate' LookUpEdit
        /// </summary>
        public string UILeDisplayStartDateLookUpEditValueAsString = "2024-04-08";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckF3AndNormalNotCheckedInSelectDepartmentRosterplanTab_step_21ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'chkAdjustF3StaticValueToPositionPercent' check box equals 'False'
        /// </summary>
        public string UIChkAdjustF3StaticValCheckBoxValueAsString = "False";
        
        /// <summary>
        /// Verify that the 'Checked' property of 'chkAdjustF3StaticValueToPositionPercent' check box equals 'False'
        /// </summary>
        public bool UIChkAdjustF3StaticValCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Selected' property of 'RadioGroupItem' radio button equals 'True'
        /// </summary>
        public bool UIRadioGroupItemRadioButtonSelected = true;
        
        /// <summary>
        /// Verify that the 'Selected' property of 'RadioGroupItem' radio button equals 'False'
        /// </summary>
        public bool UIRadioGroupItemRadioButton1Selected = false;
        
        /// <summary>
        /// Verify that the 'Selected' property of 'RadioGroupItem' radio button equals 'False'
        /// </summary>
        public bool UIRadioGroupItemRadioButton2Selected = false;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIPnlRosterPlanClient1 UIPnlRosterPlanClient1
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient1 == null))
                {
                    this.mUIPnlRosterPlanClient1 = new UIPnlRosterPlanClient1(this);
                }
                return this.mUIPnlRosterPlanClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private UIPnlRosterPlanClient1 mUIPnlRosterPlanClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIDpnlColumnsDockPanel UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        
        public UIRosterPlanGrid1Custom UIRosterPlanGrid1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGrid1Custom == null))
                {
                    this.mUIRosterPlanGrid1Custom = new UIRosterPlanGrid1Custom(this);
                }
                return this.mUIRosterPlanGrid1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        
        private UIDpnlColumnsDockPanel mUIDpnlColumnsDockPanel;
        
        private UIRosterPlanGrid1Custom mUIRosterPlanGrid1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIJamJalleCell
        {
            get
            {
                if ((this.mUIJamJalleCell == null))
                {
                    this.mUIJamJalleCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIJamJalleCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_EmployeeName";
                    this.mUIJamJalleCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIJamJalleCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIJamJalleCell;
            }
        }
        
        public DXCell UIItem8Cell
        {
            get
            {
                if ((this.mUIItem8Cell == null))
                {
                    this.mUIItem8Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem8Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8Cell;
            }
        }
        
        public DXCell UIItem8Cell1
        {
            get
            {
                if ((this.mUIItem8Cell1 == null))
                {
                    this.mUIItem8Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_1";
                    this.mUIItem8Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8Cell1;
            }
        }
        
        public DXCell UIItem1867Cell
        {
            get
            {
                if ((this.mUIItem1867Cell == null))
                {
                    this.mUIItem1867Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1867Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem1867Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1867Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1867Cell;
            }
        }
        
        public DXCell UIItem1867Cell1
        {
            get
            {
                if ((this.mUIItem1867Cell1 == null))
                {
                    this.mUIItem1867Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1867Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_2";
                    this.mUIItem1867Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1867Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1867Cell1;
            }
        }
        
        public DXCell UIItem4Cell
        {
            get
            {
                if ((this.mUIItem4Cell == null))
                {
                    this.mUIItem4Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem4Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4Cell;
            }
        }
        
        public DXCell UIItem4Cell1
        {
            get
            {
                if ((this.mUIItem4Cell1 == null))
                {
                    this.mUIItem4Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_3";
                    this.mUIItem4Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4Cell1;
            }
        }
        
        public DXCell UIItem253Cell
        {
            get
            {
                if ((this.mUIItem253Cell == null))
                {
                    this.mUIItem253Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem253Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem253Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem253Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem253Cell;
            }
        }
        
        public DXCell UIItem253Cell1
        {
            get
            {
                if ((this.mUIItem253Cell1 == null))
                {
                    this.mUIItem253Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem253Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_4";
                    this.mUIItem253Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem253Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem253Cell1;
            }
        }
        
        public DXCell UILerkeLeneCell
        {
            get
            {
                if ((this.mUILerkeLeneCell == null))
                {
                    this.mUILerkeLeneCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILerkeLeneCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_EmployeeName";
                    this.mUILerkeLeneCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILerkeLeneCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILerkeLeneCell;
            }
        }
        
        public DXCell UIItem375Cell
        {
            get
            {
                if ((this.mUIItem375Cell == null))
                {
                    this.mUIItem375Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem375Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem375Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem375Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem375Cell;
            }
        }
        
        public DXCell UIItem375Cell1
        {
            get
            {
                if ((this.mUIItem375Cell1 == null))
                {
                    this.mUIItem375Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem375Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_1";
                    this.mUIItem375Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem375Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem375Cell1;
            }
        }
        
        public DXCell UIItem42Cell
        {
            get
            {
                if ((this.mUIItem42Cell == null))
                {
                    this.mUIItem42Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem42Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem42Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem42Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem42Cell;
            }
        }
        
        public DXCell UIItem42Cell1
        {
            get
            {
                if ((this.mUIItem42Cell1 == null))
                {
                    this.mUIItem42Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem42Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_2";
                    this.mUIItem42Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem42Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem42Cell1;
            }
        }
        
        public DXCell UIItem325Cell
        {
            get
            {
                if ((this.mUIItem325Cell == null))
                {
                    this.mUIItem325Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem325Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem325Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem325Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem325Cell;
            }
        }
        
        public DXCell UIItem325Cell1
        {
            get
            {
                if ((this.mUIItem325Cell1 == null))
                {
                    this.mUIItem325Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem325Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_3";
                    this.mUIItem325Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem325Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem325Cell1;
            }
        }
        
        public DXCell UIItem30Cell
        {
            get
            {
                if ((this.mUIItem30Cell == null))
                {
                    this.mUIItem30Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem30Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem30Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem30Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem30Cell;
            }
        }
        
        public DXCell UIItem30Cell1
        {
            get
            {
                if ((this.mUIItem30Cell1 == null))
                {
                    this.mUIItem30Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem30Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_4";
                    this.mUIItem30Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem30Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem30Cell1;
            }
        }
        
        public DXCell UIMøllMagneCell
        {
            get
            {
                if ((this.mUIMøllMagneCell == null))
                {
                    this.mUIMøllMagneCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMøllMagneCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_EmployeeName";
                    this.mUIMøllMagneCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMøllMagneCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIMøllMagneCell;
            }
        }
        
        public DXCell UIItem155Cell
        {
            get
            {
                if ((this.mUIItem155Cell == null))
                {
                    this.mUIItem155Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem155Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem155Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem155Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem155Cell;
            }
        }
        
        public DXCell UIItem0Cell
        {
            get
            {
                if ((this.mUIItem0Cell == null))
                {
                    this.mUIItem0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell;
            }
        }
        
        public DXCell UIItem155Cell1
        {
            get
            {
                if ((this.mUIItem155Cell1 == null))
                {
                    this.mUIItem155Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem155Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_1";
                    this.mUIItem155Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem155Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem155Cell1;
            }
        }
        
        public DXCell UIItem20Cell
        {
            get
            {
                if ((this.mUIItem20Cell == null))
                {
                    this.mUIItem20Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem20Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem20Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem20Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem20Cell;
            }
        }
        
        public DXCell UIItem0Cell1
        {
            get
            {
                if ((this.mUIItem0Cell1 == null))
                {
                    this.mUIItem0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell1;
            }
        }
        
        public DXCell UIItem20Cell1
        {
            get
            {
                if ((this.mUIItem20Cell1 == null))
                {
                    this.mUIItem20Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem20Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_2";
                    this.mUIItem20Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem20Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem20Cell1;
            }
        }
        
        public DXCell UIItem0Cell2
        {
            get
            {
                if ((this.mUIItem0Cell2 == null))
                {
                    this.mUIItem0Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell2;
            }
        }
        
        public DXCell UIItem8Cell2
        {
            get
            {
                if ((this.mUIItem8Cell2 == null))
                {
                    this.mUIItem8Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem8Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8Cell2;
            }
        }
        
        public DXCell UIItem8Cell3
        {
            get
            {
                if ((this.mUIItem8Cell3 == null))
                {
                    this.mUIItem8Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_3";
                    this.mUIItem8Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8Cell3;
            }
        }
        
        public DXCell UIItem0Cell3
        {
            get
            {
                if ((this.mUIItem0Cell3 == null))
                {
                    this.mUIItem0Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem0Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell3;
            }
        }
        
        public DXCell UIItem8Cell4
        {
            get
            {
                if ((this.mUIItem8Cell4 == null))
                {
                    this.mUIItem8Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem8Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8Cell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8Cell4;
            }
        }
        
        public DXCell UIItem8Cell5
        {
            get
            {
                if ((this.mUIItem8Cell5 == null))
                {
                    this.mUIItem8Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_4";
                    this.mUIItem8Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8Cell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8Cell5;
            }
        }
        
        public DXCell UINedrigNiklasCell
        {
            get
            {
                if ((this.mUINedrigNiklasCell == null))
                {
                    this.mUINedrigNiklasCell = new DXCell(this);
                    #region Search Criteria
                    this.mUINedrigNiklasCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_EmployeeName";
                    this.mUINedrigNiklasCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINedrigNiklasCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUINedrigNiklasCell;
            }
        }
        
        public DXCell UIItem0Cell4
        {
            get
            {
                if ((this.mUIItem0Cell4 == null))
                {
                    this.mUIItem0Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem0Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell4;
            }
        }
        
        public DXCell UIItem0Cell5
        {
            get
            {
                if ((this.mUIItem0Cell5 == null))
                {
                    this.mUIItem0Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_TotalSum_1";
                    this.mUIItem0Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell5;
            }
        }
        
        public DXCell UIItem0Cell6
        {
            get
            {
                if ((this.mUIItem0Cell6 == null))
                {
                    this.mUIItem0Cell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem0Cell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell6;
            }
        }
        
        public DXCell UIItem0Cell7
        {
            get
            {
                if ((this.mUIItem0Cell7 == null))
                {
                    this.mUIItem0Cell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_TotalSum_2";
                    this.mUIItem0Cell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell7;
            }
        }
        
        public DXCell UIItem3933Cell
        {
            get
            {
                if ((this.mUIItem3933Cell == null))
                {
                    this.mUIItem3933Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3933Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem3933Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3933Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3933Cell;
            }
        }
        
        public DXCell UIItem3933Cell1
        {
            get
            {
                if ((this.mUIItem3933Cell1 == null))
                {
                    this.mUIItem3933Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3933Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_TotalSum_3";
                    this.mUIItem3933Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3933Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3933Cell1;
            }
        }
        
        public DXCell UIItem355Cell
        {
            get
            {
                if ((this.mUIItem355Cell == null))
                {
                    this.mUIItem355Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell;
            }
        }
        
        public DXCell UIItem355Cell1
        {
            get
            {
                if ((this.mUIItem355Cell1 == null))
                {
                    this.mUIItem355Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_TotalSum_4";
                    this.mUIItem355Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell1;
            }
        }
        
        public DXCell UIOrmingeOskarCell
        {
            get
            {
                if ((this.mUIOrmingeOskarCell == null))
                {
                    this.mUIOrmingeOskarCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOrmingeOskarCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]Col_EmployeeName";
                    this.mUIOrmingeOskarCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOrmingeOskarCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOrmingeOskarCell;
            }
        }
        
        public DXCell UIItem22Cell
        {
            get
            {
                if ((this.mUIItem22Cell == null))
                {
                    this.mUIItem22Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem22Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem22Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem22Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem22Cell;
            }
        }
        
        public DXCell UIItem0Cell8
        {
            get
            {
                if ((this.mUIItem0Cell8 == null))
                {
                    this.mUIItem0Cell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem0Cell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell8;
            }
        }
        
        public DXCell UIItem22Cell1
        {
            get
            {
                if ((this.mUIItem22Cell1 == null))
                {
                    this.mUIItem22Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem22Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]Col_Calc_TotalSum_1";
                    this.mUIItem22Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem22Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem22Cell1;
            }
        }
        
        public DXCell UIItem15Cell
        {
            get
            {
                if ((this.mUIItem15Cell == null))
                {
                    this.mUIItem15Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem15Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem15Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem15Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem15Cell;
            }
        }
        
        public DXCell UIItem0Cell9
        {
            get
            {
                if ((this.mUIItem0Cell9 == null))
                {
                    this.mUIItem0Cell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem0Cell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell9;
            }
        }
        
        public DXCell UIItem15Cell1
        {
            get
            {
                if ((this.mUIItem15Cell1 == null))
                {
                    this.mUIItem15Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem15Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]Col_Calc_TotalSum_2";
                    this.mUIItem15Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem15Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem15Cell1;
            }
        }
        
        public DXCell UIItem0Cell10
        {
            get
            {
                if ((this.mUIItem0Cell10 == null))
                {
                    this.mUIItem0Cell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem0Cell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell10;
            }
        }
        
        public DXCell UIItem15Cell2
        {
            get
            {
                if ((this.mUIItem15Cell2 == null))
                {
                    this.mUIItem15Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem15Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem15Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem15Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem15Cell2;
            }
        }
        
        public DXCell UIItem15Cell3
        {
            get
            {
                if ((this.mUIItem15Cell3 == null))
                {
                    this.mUIItem15Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem15Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]Col_Calc_TotalSum_3";
                    this.mUIItem15Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem15Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem15Cell3;
            }
        }
        
        public DXCell UIItem0Cell11
        {
            get
            {
                if ((this.mUIItem0Cell11 == null))
                {
                    this.mUIItem0Cell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem0Cell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell11;
            }
        }
        
        public DXCell UIItem20Cell2
        {
            get
            {
                if ((this.mUIItem20Cell2 == null))
                {
                    this.mUIItem20Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem20Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem20Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem20Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem20Cell2;
            }
        }
        
        public DXCell UIItem20Cell3
        {
            get
            {
                if ((this.mUIItem20Cell3 == null))
                {
                    this.mUIItem20Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem20Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]Col_Calc_TotalSum_4";
                    this.mUIItem20Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem20Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem20Cell3;
            }
        }
        
        public DXCell UIPluttPelleCell
        {
            get
            {
                if ((this.mUIPluttPelleCell == null))
                {
                    this.mUIPluttPelleCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPluttPelleCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]Col_EmployeeName";
                    this.mUIPluttPelleCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPluttPelleCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIPluttPelleCell;
            }
        }
        
        public DXCell UIItem40Cell
        {
            get
            {
                if ((this.mUIItem40Cell == null))
                {
                    this.mUIItem40Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem40Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem40Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem40Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem40Cell;
            }
        }
        
        public DXCell UIItem533Cell
        {
            get
            {
                if ((this.mUIItem533Cell == null))
                {
                    this.mUIItem533Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem533Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem533Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem533Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem533Cell;
            }
        }
        
        public DXCell UIItem4533Cell
        {
            get
            {
                if ((this.mUIItem4533Cell == null))
                {
                    this.mUIItem4533Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4533Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]Col_Calc_TotalSum_1";
                    this.mUIItem4533Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4533Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4533Cell;
            }
        }
        
        public DXCell UIItem40Cell1
        {
            get
            {
                if ((this.mUIItem40Cell1 == null))
                {
                    this.mUIItem40Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem40Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem40Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem40Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem40Cell1;
            }
        }
        
        public DXCell UIItem0Cell12
        {
            get
            {
                if ((this.mUIItem0Cell12 == null))
                {
                    this.mUIItem0Cell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem0Cell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell12.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell12;
            }
        }
        
        public DXCell UIItem40Cell2
        {
            get
            {
                if ((this.mUIItem40Cell2 == null))
                {
                    this.mUIItem40Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem40Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]Col_Calc_TotalSum_2";
                    this.mUIItem40Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem40Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem40Cell2;
            }
        }
        
        public DXCell UIItem40Cell3
        {
            get
            {
                if ((this.mUIItem40Cell3 == null))
                {
                    this.mUIItem40Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem40Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem40Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem40Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem40Cell3;
            }
        }
        
        public DXCell UIItem8Cell6
        {
            get
            {
                if ((this.mUIItem8Cell6 == null))
                {
                    this.mUIItem8Cell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8Cell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem8Cell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8Cell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8Cell6;
            }
        }
        
        public DXCell UIItem48Cell
        {
            get
            {
                if ((this.mUIItem48Cell == null))
                {
                    this.mUIItem48Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem48Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]Col_Calc_TotalSum_3";
                    this.mUIItem48Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem48Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem48Cell;
            }
        }
        
        public DXCell UIItem24Cell
        {
            get
            {
                if ((this.mUIItem24Cell == null))
                {
                    this.mUIItem24Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem24Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem24Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem24Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem24Cell;
            }
        }
        
        public DXCell UIItem32Cell
        {
            get
            {
                if ((this.mUIItem32Cell == null))
                {
                    this.mUIItem32Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem32Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem32Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem32Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem32Cell;
            }
        }
        
        public DXCell UIItem272Cell
        {
            get
            {
                if ((this.mUIItem272Cell == null))
                {
                    this.mUIItem272Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem272Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]Col_Calc_TotalSum_4";
                    this.mUIItem272Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem272Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem272Cell;
            }
        }
        
        public DXCell UIVAKANTCell
        {
            get
            {
                if ((this.mUIVAKANTCell == null))
                {
                    this.mUIVAKANTCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_EmployeeName";
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVAKANTCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVAKANTCell;
            }
        }
        
        public DXCell UIItem30Cell2
        {
            get
            {
                if ((this.mUIItem30Cell2 == null))
                {
                    this.mUIItem30Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem30Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem30Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem30Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem30Cell2;
            }
        }
        
        public DXCell UIItem30Cell3
        {
            get
            {
                if ((this.mUIItem30Cell3 == null))
                {
                    this.mUIItem30Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem30Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_Calc_TotalSum_1";
                    this.mUIItem30Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem30Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem30Cell3;
            }
        }
        
        public DXCell UIItem29Cell
        {
            get
            {
                if ((this.mUIItem29Cell == null))
                {
                    this.mUIItem29Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem29Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_Calc_IndividualSum" +
                        "_2";
                    this.mUIItem29Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem29Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem29Cell;
            }
        }
        
        public DXCell UIItem29Cell1
        {
            get
            {
                if ((this.mUIItem29Cell1 == null))
                {
                    this.mUIItem29Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem29Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_Calc_TotalSum_2";
                    this.mUIItem29Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem29Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem29Cell1;
            }
        }
        
        public DXCell UIItem315Cell
        {
            get
            {
                if ((this.mUIItem315Cell == null))
                {
                    this.mUIItem315Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem315Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_Calc_IndividualSum" +
                        "_3";
                    this.mUIItem315Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem315Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem315Cell;
            }
        }
        
        public DXCell UIItem315Cell1
        {
            get
            {
                if ((this.mUIItem315Cell1 == null))
                {
                    this.mUIItem315Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem315Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_Calc_TotalSum_3";
                    this.mUIItem315Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem315Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem315Cell1;
            }
        }
        
        public DXCell UIItem1467Cell
        {
            get
            {
                if ((this.mUIItem1467Cell == null))
                {
                    this.mUIItem1467Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1467Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem1467Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1467Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1467Cell;
            }
        }
        
        public DXCell UIItem1467Cell1
        {
            get
            {
                if ((this.mUIItem1467Cell1 == null))
                {
                    this.mUIItem1467Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1467Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_Calc_TotalSum_4";
                    this.mUIItem1467Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1467Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1467Cell1;
            }
        }
        
        public DXCell UIItem2Cell
        {
            get
            {
                if ((this.mUIItem2Cell == null))
                {
                    this.mUIItem2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_0";
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2Cell;
            }
        }
        
        public DXCell UIItem2Cell1
        {
            get
            {
                if ((this.mUIItem2Cell1 == null))
                {
                    this.mUIItem2Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_0";
                    this.mUIItem2Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2Cell1;
            }
        }
        
        public DXCell UIItem64Cell
        {
            get
            {
                if ((this.mUIItem64Cell == null))
                {
                    this.mUIItem64Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem64Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_5";
                    this.mUIItem64Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem64Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem64Cell;
            }
        }
        
        public DXCell UIItem64Cell1
        {
            get
            {
                if ((this.mUIItem64Cell1 == null))
                {
                    this.mUIItem64Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem64Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_5";
                    this.mUIItem64Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem64Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem64Cell1;
            }
        }
        
        public DXCell UIPluttPelleCell1
        {
            get
            {
                if ((this.mUIPluttPelleCell1 == null))
                {
                    this.mUIPluttPelleCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIPluttPelleCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]Col_EmployeeName";
                    this.mUIPluttPelleCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPluttPelleCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIPluttPelleCell1;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIRogerRallyCell
        {
            get
            {
                if ((this.mUIRogerRallyCell == null))
                {
                    this.mUIRogerRallyCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIRogerRallyCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]Col_EmployeeName";
                    this.mUIRogerRallyCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRogerRallyCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRogerRallyCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]RosterCell_0";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXTextEdit UIRow9ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow9ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow9ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow9ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]9[Column]RosterCell_3";
                    this.mUIRow9ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow9ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow9ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIN2Cell1
        {
            get
            {
                if ((this.mUIN2Cell1 == null))
                {
                    this.mUIN2Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIN2Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]RosterCell_24";
                    this.mUIN2Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN2Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIN2Cell1;
            }
        }
        
        public DXTextEdit UIRow10ColumnRosterCelEdit
        {
            get
            {
                if ((this.mUIRow10ColumnRosterCelEdit == null))
                {
                    this.mUIRow10ColumnRosterCelEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow10ColumnRosterCelEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]10[Column]RosterCell_24";
                    this.mUIRow10ColumnRosterCelEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow10ColumnRosterCelEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow10ColumnRosterCelEdit;
            }
        }
        
        public DXCell UIN2Cell2
        {
            get
            {
                if ((this.mUIN2Cell2 == null))
                {
                    this.mUIN2Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIN2Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]RosterCell_25";
                    this.mUIN2Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN2Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIN2Cell2;
            }
        }
        
        public DXTextEdit UIRow10ColumnRosterCelEdit3
        {
            get
            {
                if ((this.mUIRow10ColumnRosterCelEdit3 == null))
                {
                    this.mUIRow10ColumnRosterCelEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow10ColumnRosterCelEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]10[Column]RosterCell_25";
                    this.mUIRow10ColumnRosterCelEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow10ColumnRosterCelEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow10ColumnRosterCelEdit3;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]RosterCell_26";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXTextEdit UIRow10ColumnRosterCelEdit5
        {
            get
            {
                if ((this.mUIRow10ColumnRosterCelEdit5 == null))
                {
                    this.mUIRow10ColumnRosterCelEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow10ColumnRosterCelEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]10[Column]RosterCell_26";
                    this.mUIRow10ColumnRosterCelEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow10ColumnRosterCelEdit5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow10ColumnRosterCelEdit5;
            }
        }
        
        public DXCell UIItem0Cell13
        {
            get
            {
                if ((this.mUIItem0Cell13 == null))
                {
                    this.mUIItem0Cell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]Col_Calc_TotalSum_1";
                    this.mUIItem0Cell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell13.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell13;
            }
        }
        
        public DXCell UIItem29Cell2
        {
            get
            {
                if ((this.mUIItem29Cell2 == null))
                {
                    this.mUIItem29Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem29Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]Col_Calc_TotalSum_2";
                    this.mUIItem29Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem29Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem29Cell2;
            }
        }
        
        public DXCell UIItem315Cell2
        {
            get
            {
                if ((this.mUIItem315Cell2 == null))
                {
                    this.mUIItem315Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem315Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]Col_Calc_TotalSum_3";
                    this.mUIItem315Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem315Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem315Cell2;
            }
        }
        
        public DXCell UIItem4467Cell
        {
            get
            {
                if ((this.mUIItem4467Cell == null))
                {
                    this.mUIItem4467Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4467Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]Col_Calc_TotalSum_4";
                    this.mUIItem4467Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4467Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4467Cell;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_5";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXTextEdit UIRow0ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow0ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow0ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]0[Column]RosterCell_5";
                    this.mUIRow0ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow0ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow0ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_4";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXCell UIA3Cell
        {
            get
            {
                if ((this.mUIA3Cell == null))
                {
                    this.mUIA3Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIA3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]RosterCell_7";
                    this.mUIA3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIA3Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIA3Cell;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]RosterCell_11";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItem100Cell
        {
            get
            {
                if ((this.mUIItem100Cell == null))
                {
                    this.mUIItem100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_PositionPercent";
                    this.mUIItem100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem100Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem100Cell;
            }
        }
        
        public DXCell UIItem75Cell
        {
            get
            {
                if ((this.mUIItem75Cell == null))
                {
                    this.mUIItem75Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem75Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_CalculatedPosition" +
                        "Percent";
                    this.mUIItem75Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem75Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem75Cell;
            }
        }
        
        public DXCell UIItem075Cell
        {
            get
            {
                if ((this.mUIItem075Cell == null))
                {
                    this.mUIItem075Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem075Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_CalculatedManHours" +
                        "";
                    this.mUIItem075Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem075Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem075Cell;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_26";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow7ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_26";
                    this.mUIRow7ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIRogerRallyCell1
        {
            get
            {
                if ((this.mUIRogerRallyCell1 == null))
                {
                    this.mUIRogerRallyCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIRogerRallyCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_EmployeeName";
                    this.mUIRogerRallyCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRogerRallyCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRogerRallyCell1;
            }
        }
        
        public DXCell UIItem305Cell
        {
            get
            {
                if ((this.mUIItem305Cell == null))
                {
                    this.mUIItem305Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem305Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_Calc_TotalSum_1";
                    this.mUIItem305Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem305Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem305Cell;
            }
        }
        
        public DXCell UIItem27Cell
        {
            get
            {
                if ((this.mUIItem27Cell == null))
                {
                    this.mUIItem27Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem27Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]Col_Calc_TotalSum_2";
                    this.mUIItem27Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem27Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem27Cell;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_7";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit == null))
                {
                    this.mUIRow1ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_7";
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell13
        {
            get
            {
                if ((this.mUIItemCell13 == null))
                {
                    this.mUIItemCell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]RosterCell_9";
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell13.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell13;
            }
        }
        
        public DXTextEdit UIRow3ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow3ColumnRosterCellEdit == null))
                {
                    this.mUIRow3ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow3ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]3[Column]RosterCell_9";
                    this.mUIRow3ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow3ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow3ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell21
        {
            get
            {
                if ((this.mUIItemCell21 == null))
                {
                    this.mUIItemCell21 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_1";
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell21.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell21;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_1";
                    this.mUIRow5ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItem100Cell1
        {
            get
            {
                if ((this.mUIItem100Cell1 == null))
                {
                    this.mUIItem100Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem100Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]Col_PositionPercent";
                    this.mUIItem100Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem100Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem100Cell1;
            }
        }
        
        public DXCell UIItem75Cell1
        {
            get
            {
                if ((this.mUIItem75Cell1 == null))
                {
                    this.mUIItem75Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem75Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]Col_CalculatedPositio" +
                        "nPercent";
                    this.mUIItem75Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem75Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem75Cell1;
            }
        }
        
        public DXCell UIItem075Cell1
        {
            get
            {
                if ((this.mUIItem075Cell1 == null))
                {
                    this.mUIItem075Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem075Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]Col_CalculatedManHour" +
                        "s";
                    this.mUIItem075Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem075Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem075Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIJamJalleCell;
        
        private DXCell mUIItem8Cell;
        
        private DXCell mUIItem8Cell1;
        
        private DXCell mUIItem1867Cell;
        
        private DXCell mUIItem1867Cell1;
        
        private DXCell mUIItem4Cell;
        
        private DXCell mUIItem4Cell1;
        
        private DXCell mUIItem253Cell;
        
        private DXCell mUIItem253Cell1;
        
        private DXCell mUILerkeLeneCell;
        
        private DXCell mUIItem375Cell;
        
        private DXCell mUIItem375Cell1;
        
        private DXCell mUIItem42Cell;
        
        private DXCell mUIItem42Cell1;
        
        private DXCell mUIItem325Cell;
        
        private DXCell mUIItem325Cell1;
        
        private DXCell mUIItem30Cell;
        
        private DXCell mUIItem30Cell1;
        
        private DXCell mUIMøllMagneCell;
        
        private DXCell mUIItem155Cell;
        
        private DXCell mUIItem0Cell;
        
        private DXCell mUIItem155Cell1;
        
        private DXCell mUIItem20Cell;
        
        private DXCell mUIItem0Cell1;
        
        private DXCell mUIItem20Cell1;
        
        private DXCell mUIItem0Cell2;
        
        private DXCell mUIItem8Cell2;
        
        private DXCell mUIItem8Cell3;
        
        private DXCell mUIItem0Cell3;
        
        private DXCell mUIItem8Cell4;
        
        private DXCell mUIItem8Cell5;
        
        private DXCell mUINedrigNiklasCell;
        
        private DXCell mUIItem0Cell4;
        
        private DXCell mUIItem0Cell5;
        
        private DXCell mUIItem0Cell6;
        
        private DXCell mUIItem0Cell7;
        
        private DXCell mUIItem3933Cell;
        
        private DXCell mUIItem3933Cell1;
        
        private DXCell mUIItem355Cell;
        
        private DXCell mUIItem355Cell1;
        
        private DXCell mUIOrmingeOskarCell;
        
        private DXCell mUIItem22Cell;
        
        private DXCell mUIItem0Cell8;
        
        private DXCell mUIItem22Cell1;
        
        private DXCell mUIItem15Cell;
        
        private DXCell mUIItem0Cell9;
        
        private DXCell mUIItem15Cell1;
        
        private DXCell mUIItem0Cell10;
        
        private DXCell mUIItem15Cell2;
        
        private DXCell mUIItem15Cell3;
        
        private DXCell mUIItem0Cell11;
        
        private DXCell mUIItem20Cell2;
        
        private DXCell mUIItem20Cell3;
        
        private DXCell mUIPluttPelleCell;
        
        private DXCell mUIItem40Cell;
        
        private DXCell mUIItem533Cell;
        
        private DXCell mUIItem4533Cell;
        
        private DXCell mUIItem40Cell1;
        
        private DXCell mUIItem0Cell12;
        
        private DXCell mUIItem40Cell2;
        
        private DXCell mUIItem40Cell3;
        
        private DXCell mUIItem8Cell6;
        
        private DXCell mUIItem48Cell;
        
        private DXCell mUIItem24Cell;
        
        private DXCell mUIItem32Cell;
        
        private DXCell mUIItem272Cell;
        
        private DXCell mUIVAKANTCell;
        
        private DXCell mUIItem30Cell2;
        
        private DXCell mUIItem30Cell3;
        
        private DXCell mUIItem29Cell;
        
        private DXCell mUIItem29Cell1;
        
        private DXCell mUIItem315Cell;
        
        private DXCell mUIItem315Cell1;
        
        private DXCell mUIItem1467Cell;
        
        private DXCell mUIItem1467Cell1;
        
        private DXCell mUIItem2Cell;
        
        private DXCell mUIItem2Cell1;
        
        private DXCell mUIItem64Cell;
        
        private DXCell mUIItem64Cell1;
        
        private DXCell mUIPluttPelleCell1;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIRogerRallyCell;
        
        private DXCell mUIItemCell1;
        
        private DXTextEdit mUIRow9ColumnRosterCellEdit5;
        
        private DXCell mUIN2Cell1;
        
        private DXTextEdit mUIRow10ColumnRosterCelEdit;
        
        private DXCell mUIN2Cell2;
        
        private DXTextEdit mUIRow10ColumnRosterCelEdit3;
        
        private DXCell mUIItemCell11;
        
        private DXTextEdit mUIRow10ColumnRosterCelEdit5;
        
        private DXCell mUIItem0Cell13;
        
        private DXCell mUIItem29Cell2;
        
        private DXCell mUIItem315Cell2;
        
        private DXCell mUIItem4467Cell;
        
        private DXCell mUIItemCell2;
        
        private DXTextEdit mUIRow0ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell12;
        
        private DXCell mUIA3Cell;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItem100Cell;
        
        private DXCell mUIItem75Cell;
        
        private DXCell mUIItem075Cell;
        
        private DXCell mUIItemCell4;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit1;
        
        private DXCell mUIRogerRallyCell1;
        
        private DXCell mUIItem305Cell;
        
        private DXCell mUIItem27Cell;
        
        private DXCell mUIItemCell5;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit;
        
        private DXCell mUIItemCell13;
        
        private DXTextEdit mUIRow3ColumnRosterCellEdit;
        
        private DXCell mUIItemCell21;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit1;
        
        private DXCell mUIItem100Cell1;
        
        private DXCell mUIItem75Cell1;
        
        private DXCell mUIItem075Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlColumnsDockPanel : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcExtraGridTable : DXGrid
    {
        
        public UIGcExtraGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXColumnHeader UICol_HoursPerWeekBaseColumnHeader
        {
            get
            {
                if ((this.mUICol_HoursPerWeekBaseColumnHeader == null))
                {
                    this.mUICol_HoursPerWeekBaseColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUICol_HoursPerWeekBaseColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlColumnHeader[View]gvExtraGrid[Column]Col_HoursPerWeekBasedO" +
                        "nPosition";
                    this.mUICol_HoursPerWeekBaseColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUICol_HoursPerWeekBaseColumnHeader.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUICol_HoursPerWeekBaseColumnHeader;
            }
        }
        
        public DXCell UIItem0Cell
        {
            get
            {
                if ((this.mUIItem0Cell == null))
                {
                    this.mUIItem0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_HoursPerWeekBasedOnP" +
                        "osition";
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell;
            }
        }
        
        public DXCell UIItem0Cell1
        {
            get
            {
                if ((this.mUIItem0Cell1 == null))
                {
                    this.mUIItem0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_HoursPerWeekAverage";
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell1;
            }
        }
        
        public DXCell UIItem0Cell2
        {
            get
            {
                if ((this.mUIItem0Cell2 == null))
                {
                    this.mUIItem0Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_ActualAverageDiffere" +
                        "nceWorkingHours";
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell2;
            }
        }
        
        public DXCell UIItem0Cell3
        {
            get
            {
                if ((this.mUIItem0Cell3 == null))
                {
                    this.mUIItem0Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_TotalWorkingHoursBas" +
                        "edOnPosition";
                    this.mUIItem0Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell3;
            }
        }
        
        public DXCell UIItem0Cell4
        {
            get
            {
                if ((this.mUIItem0Cell4 == null))
                {
                    this.mUIItem0Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_TotalWorkingHoursFor" +
                        "Line";
                    this.mUIItem0Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell4;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_TotalWorkingHours";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItem0Cell5
        {
            get
            {
                if ((this.mUIItem0Cell5 == null))
                {
                    this.mUIItem0Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_ActualTotalDifferenc" +
                        "eForLine";
                    this.mUIItem0Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell5;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_ActualTotalDifferenc" +
                        "e";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItem2663Cell
        {
            get
            {
                if ((this.mUIItem2663Cell == null))
                {
                    this.mUIItem2663Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2663Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_HoursPerWeekBasedOnP" +
                        "osition";
                    this.mUIItem2663Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2663Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2663Cell;
            }
        }
        
        public DXCell UIItem30Cell
        {
            get
            {
                if ((this.mUIItem30Cell == null))
                {
                    this.mUIItem30Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem30Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_HoursPerWeekAverage";
                    this.mUIItem30Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem30Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem30Cell;
            }
        }
        
        public DXCell UIItem338Cell
        {
            get
            {
                if ((this.mUIItem338Cell == null))
                {
                    this.mUIItem338Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem338Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_ActualAverageDiffere" +
                        "nceWorkingHours";
                    this.mUIItem338Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem338Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem338Cell;
            }
        }
        
        public DXCell UIItem2663Cell1
        {
            get
            {
                if ((this.mUIItem2663Cell1 == null))
                {
                    this.mUIItem2663Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2663Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_TotalWorkingHoursBas" +
                        "edOnPosition";
                    this.mUIItem2663Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2663Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2663Cell1;
            }
        }
        
        public DXCell UIItem30Cell1
        {
            get
            {
                if ((this.mUIItem30Cell1 == null))
                {
                    this.mUIItem30Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem30Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_TotalWorkingHoursFor" +
                        "Line";
                    this.mUIItem30Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem30Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem30Cell1;
            }
        }
        
        public DXCell UIItem30Cell2
        {
            get
            {
                if ((this.mUIItem30Cell2 == null))
                {
                    this.mUIItem30Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem30Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_TotalWorkingHours";
                    this.mUIItem30Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem30Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem30Cell2;
            }
        }
        
        public DXCell UIItem338Cell1
        {
            get
            {
                if ((this.mUIItem338Cell1 == null))
                {
                    this.mUIItem338Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem338Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_ActualTotalDifferenc" +
                        "eForLine";
                    this.mUIItem338Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem338Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem338Cell1;
            }
        }
        
        public DXCell UIItem338Cell2
        {
            get
            {
                if ((this.mUIItem338Cell2 == null))
                {
                    this.mUIItem338Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem338Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_ActualTotalDifferenc" +
                        "e";
                    this.mUIItem338Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem338Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem338Cell2;
            }
        }
        
        public DXCell UIItem8451Cell
        {
            get
            {
                if ((this.mUIItem8451Cell == null))
                {
                    this.mUIItem8451Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8451Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItem8451Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8451Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8451Cell;
            }
        }
        
        public DXCell UIItem355Cell
        {
            get
            {
                if ((this.mUIItem355Cell == null))
                {
                    this.mUIItem355Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_HoursPerWeekBasedOn" +
                        "Position";
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell;
            }
        }
        
        public DXCell UIItem2506Cell
        {
            get
            {
                if ((this.mUIItem2506Cell == null))
                {
                    this.mUIItem2506Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2506Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_HoursPerWeekAverage" +
                        "";
                    this.mUIItem2506Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2506Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2506Cell;
            }
        }
        
        public DXCell UIItem1044Cell
        {
            get
            {
                if ((this.mUIItem1044Cell == null))
                {
                    this.mUIItem1044Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1044Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_ActualAverageDiffer" +
                        "enceWorkingHours";
                    this.mUIItem1044Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1044Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1044Cell;
            }
        }
        
        public DXCell UIItem1065Cell
        {
            get
            {
                if ((this.mUIItem1065Cell == null))
                {
                    this.mUIItem1065Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1065Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_TotalWorkingHoursBa" +
                        "sedOnPosition";
                    this.mUIItem1065Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1065Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1065Cell;
            }
        }
        
        public DXCell UIItem7517Cell
        {
            get
            {
                if ((this.mUIItem7517Cell == null))
                {
                    this.mUIItem7517Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7517Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_TotalWorkingHoursFo" +
                        "rLine";
                    this.mUIItem7517Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7517Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7517Cell;
            }
        }
        
        public DXCell UIItem7517Cell1
        {
            get
            {
                if ((this.mUIItem7517Cell1 == null))
                {
                    this.mUIItem7517Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7517Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_TotalWorkingHours";
                    this.mUIItem7517Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7517Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7517Cell1;
            }
        }
        
        public DXCell UIItem3133Cell
        {
            get
            {
                if ((this.mUIItem3133Cell == null))
                {
                    this.mUIItem3133Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3133Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_ActualTotalDifferen" +
                        "ceForLine";
                    this.mUIItem3133Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3133Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3133Cell;
            }
        }
        
        public DXCell UIItem3133Cell1
        {
            get
            {
                if ((this.mUIItem3133Cell1 == null))
                {
                    this.mUIItem3133Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3133Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_ActualTotalDifferen" +
                        "ce";
                    this.mUIItem3133Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3133Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3133Cell1;
            }
        }
        
        public DXCell UIItem7058Cell
        {
            get
            {
                if ((this.mUIItem7058Cell == null))
                {
                    this.mUIItem7058Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7058Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_ActualPositionDiffe" +
                        "rence";
                    this.mUIItem7058Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7058Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7058Cell;
            }
        }
        
        public DXCell UIItem355Cell1
        {
            get
            {
                if ((this.mUIItem355Cell1 == null))
                {
                    this.mUIItem355Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_HoursPerWeekBasedOnP" +
                        "osition";
                    this.mUIItem355Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell1;
            }
        }
        
        public DXCell UIItem84Cell
        {
            get
            {
                if ((this.mUIItem84Cell == null))
                {
                    this.mUIItem84Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem84Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_HoursPerWeekAverage";
                    this.mUIItem84Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem84Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem84Cell;
            }
        }
        
        public DXCell UIItem271Cell
        {
            get
            {
                if ((this.mUIItem271Cell == null))
                {
                    this.mUIItem271Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem271Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualAverageDiffere" +
                        "nceWorkingHours";
                    this.mUIItem271Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem271Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem271Cell;
            }
        }
        
        public DXCell UIItem142Cell
        {
            get
            {
                if ((this.mUIItem142Cell == null))
                {
                    this.mUIItem142Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_TotalWorkingHoursBas" +
                        "edOnPosition";
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem142Cell;
            }
        }
        
        public DXCell UIItem336Cell
        {
            get
            {
                if ((this.mUIItem336Cell == null))
                {
                    this.mUIItem336Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem336Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_TotalWorkingHoursFor" +
                        "Line";
                    this.mUIItem336Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem336Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem336Cell;
            }
        }
        
        public DXCell UIItem336Cell1
        {
            get
            {
                if ((this.mUIItem336Cell1 == null))
                {
                    this.mUIItem336Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem336Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_TotalWorkingHours";
                    this.mUIItem336Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem336Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem336Cell1;
            }
        }
        
        public DXCell UIItem1084Cell
        {
            get
            {
                if ((this.mUIItem1084Cell == null))
                {
                    this.mUIItem1084Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1084Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualTotalDifferenc" +
                        "eForLine";
                    this.mUIItem1084Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1084Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1084Cell;
            }
        }
        
        public DXCell UIItem1084Cell1
        {
            get
            {
                if ((this.mUIItem1084Cell1 == null))
                {
                    this.mUIItem1084Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1084Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualTotalDifferenc" +
                        "e";
                    this.mUIItem1084Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1084Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1084Cell1;
            }
        }
        
        public DXCell UIItem2366Cell
        {
            get
            {
                if ((this.mUIItem2366Cell == null))
                {
                    this.mUIItem2366Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2366Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItem2366Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2366Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2366Cell;
            }
        }
        
        public DXCell UIItem11549Cell
        {
            get
            {
                if ((this.mUIItem11549Cell == null))
                {
                    this.mUIItem11549Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem11549Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_TotalAmountWorkedClo" +
                        "ckHours";
                    this.mUIItem11549Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem11549Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem11549Cell;
            }
        }
        
        public DXCell UIItem8005Cell
        {
            get
            {
                if ((this.mUIItem8005Cell == null))
                {
                    this.mUIItem8005Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8005Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_ActualPositionPercen" +
                        "t";
                    this.mUIItem8005Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8005Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8005Cell;
            }
        }
        
        public DXScrollBar UIHCrkScrollBarScrollBarControl
        {
            get
            {
                if ((this.mUIHCrkScrollBarScrollBarControl == null))
                {
                    this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
                    #region Search Criteria
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridHCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIHCrkScrollBarScrollBarControl;
            }
        }
        
        public DXCell UIGCell
        {
            get
            {
                if ((this.mUIGCell == null))
                {
                    this.mUIGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_F3Calc";
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell;
            }
        }
        
        public DXCell UIItem3av5Cell
        {
            get
            {
                if ((this.mUIItem3av5Cell == null))
                {
                    this.mUIItem3av5Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av5Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_SH";
                    this.mUIItem3av5Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av5Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av5Cell;
            }
        }
        
        public DXCell UIItem33Cell
        {
            get
            {
                if ((this.mUIItem33Cell == null))
                {
                    this.mUIItem33Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem33Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ColumnA";
                    this.mUIItem33Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem33Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem33Cell;
            }
        }
        
        public DXCell UIItem4399Cell
        {
            get
            {
                if ((this.mUIItem4399Cell == null))
                {
                    this.mUIItem4399Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4399Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ColumnB";
                    this.mUIItem4399Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4399Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4399Cell;
            }
        }
        
        public DXCell UIItem0Cell6
        {
            get
            {
                if ((this.mUIItem0Cell6 == null))
                {
                    this.mUIItem0Cell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ColumnC";
                    this.mUIItem0Cell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell6;
            }
        }
        
        public DXCell UIItem4399Cell1
        {
            get
            {
                if ((this.mUIItem4399Cell1 == null))
                {
                    this.mUIItem4399Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4399Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ColumnD";
                    this.mUIItem4399Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4399Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4399Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell
        {
            get
            {
                if ((this.mUIItem0av1Cell == null))
                {
                    this.mUIItem0av1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_F3";
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell;
            }
        }
        
        public DXCell UIItem0av0Cell
        {
            get
            {
                if ((this.mUIItem0av0Cell == null))
                {
                    this.mUIItem0av0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_F1F5";
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell;
            }
        }
        
        public DXCell UIGCell1
        {
            get
            {
                if ((this.mUIGCell1 == null))
                {
                    this.mUIGCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_F3Calc";
                    this.mUIGCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell1;
            }
        }
        
        public DXCell UIItem3av5Cell1
        {
            get
            {
                if ((this.mUIItem3av5Cell1 == null))
                {
                    this.mUIItem3av5Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av5Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_SH";
                    this.mUIItem3av5Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av5Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av5Cell1;
            }
        }
        
        public DXCell UIItem27Cell
        {
            get
            {
                if ((this.mUIItem27Cell == null))
                {
                    this.mUIItem27Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem27Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_ColumnA";
                    this.mUIItem27Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem27Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem27Cell;
            }
        }
        
        public DXCell UIItem3599Cell
        {
            get
            {
                if ((this.mUIItem3599Cell == null))
                {
                    this.mUIItem3599Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3599Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_ColumnB";
                    this.mUIItem3599Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3599Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3599Cell;
            }
        }
        
        public DXCell UIItem0Cell7
        {
            get
            {
                if ((this.mUIItem0Cell7 == null))
                {
                    this.mUIItem0Cell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_ColumnC";
                    this.mUIItem0Cell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell7;
            }
        }
        
        public DXCell UIItem3599Cell1
        {
            get
            {
                if ((this.mUIItem3599Cell1 == null))
                {
                    this.mUIItem3599Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3599Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_ColumnD";
                    this.mUIItem3599Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3599Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3599Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell1
        {
            get
            {
                if ((this.mUIItem0av1Cell1 == null))
                {
                    this.mUIItem0av1Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_F3";
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell2
        {
            get
            {
                if ((this.mUIItem0av1Cell2 == null))
                {
                    this.mUIItem0av1Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_F1F5";
                    this.mUIItem0av1Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell2;
            }
        }
        
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_F3Calc";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        
        public DXCell UIItem2av5Cell
        {
            get
            {
                if ((this.mUIItem2av5Cell == null))
                {
                    this.mUIItem2av5Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2av5Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_SH";
                    this.mUIItem2av5Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2av5Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2av5Cell;
            }
        }
        
        public DXCell UIItem155Cell
        {
            get
            {
                if ((this.mUIItem155Cell == null))
                {
                    this.mUIItem155Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem155Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_ColumnA";
                    this.mUIItem155Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem155Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem155Cell;
            }
        }
        
        public DXCell UIItem2066Cell
        {
            get
            {
                if ((this.mUIItem2066Cell == null))
                {
                    this.mUIItem2066Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2066Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_ColumnB";
                    this.mUIItem2066Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2066Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2066Cell;
            }
        }
        
        public DXCell UIItem0Cell8
        {
            get
            {
                if ((this.mUIItem0Cell8 == null))
                {
                    this.mUIItem0Cell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_ColumnC";
                    this.mUIItem0Cell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell8;
            }
        }
        
        public DXCell UIItem2066Cell1
        {
            get
            {
                if ((this.mUIItem2066Cell1 == null))
                {
                    this.mUIItem2066Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2066Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_ColumnD";
                    this.mUIItem2066Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2066Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2066Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell3
        {
            get
            {
                if ((this.mUIItem0av1Cell3 == null))
                {
                    this.mUIItem0av1Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_F3";
                    this.mUIItem0av1Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell3;
            }
        }
        
        public DXCell UIItem0av0Cell1
        {
            get
            {
                if ((this.mUIItem0av0Cell1 == null))
                {
                    this.mUIItem0av0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_F1F5";
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell1;
            }
        }
        
        public DXCell UIItem133Cell
        {
            get
            {
                if ((this.mUIItem133Cell == null))
                {
                    this.mUIItem133Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem133Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_HolidayQuota";
                    this.mUIItem133Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem133Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem133Cell;
            }
        }
        
        public DXCell UIItem133Cell1
        {
            get
            {
                if ((this.mUIItem133Cell1 == null))
                {
                    this.mUIItem133Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem133Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_HolidayQuotaLine";
                    this.mUIItem133Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem133Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem133Cell1;
            }
        }
        
        public DXCell UIItem15Cell
        {
            get
            {
                if ((this.mUIItem15Cell == null))
                {
                    this.mUIItem15Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem15Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_FixedHolidayQuota";
                    this.mUIItem15Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem15Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem15Cell;
            }
        }
        
        public DXCell UIItem186Cell
        {
            get
            {
                if ((this.mUIItem186Cell == null))
                {
                    this.mUIItem186Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem186Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_CalendarDayFactor";
                    this.mUIItem186Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem186Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem186Cell;
            }
        }
        
        public DXCell UIItem186Cell1
        {
            get
            {
                if ((this.mUIItem186Cell1 == null))
                {
                    this.mUIItem186Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem186Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_CalendarDayFactorLin" +
                        "e";
                    this.mUIItem186Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem186Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem186Cell1;
            }
        }
        
        public DXCell UIItem142Cell1
        {
            get
            {
                if ((this.mUIItem142Cell1 == null))
                {
                    this.mUIItem142Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_HolidayQuota";
                    this.mUIItem142Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem142Cell1;
            }
        }
        
        public DXCell UIItem2Cell
        {
            get
            {
                if ((this.mUIItem2Cell == null))
                {
                    this.mUIItem2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_HolidayQuotaLine";
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2Cell;
            }
        }
        
        public DXCell UIItem25Cell
        {
            get
            {
                if ((this.mUIItem25Cell == null))
                {
                    this.mUIItem25Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem25Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_HolidayQuotaLine";
                    this.mUIItem25Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem25Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem25Cell;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_FixedHolidayQuota";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItem2Cell1
        {
            get
            {
                if ((this.mUIItem2Cell1 == null))
                {
                    this.mUIItem2Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_CalendarDayFactor";
                    this.mUIItem2Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2Cell1;
            }
        }
        
        public DXCell UIItem28Cell
        {
            get
            {
                if ((this.mUIItem28Cell == null))
                {
                    this.mUIItem28Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem28Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_CalendarDayFactorLin" +
                        "e";
                    this.mUIItem28Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem28Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem28Cell;
            }
        }
        
        public DXCell UIItem35Cell
        {
            get
            {
                if ((this.mUIItem35Cell == null))
                {
                    this.mUIItem35Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem35Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_CalendarDayFactorLin" +
                        "e";
                    this.mUIItem35Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem35Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem35Cell;
            }
        }
        
        public DXCell UIItem1775Cell
        {
            get
            {
                if ((this.mUIItem1775Cell == null))
                {
                    this.mUIItem1775Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1775Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_HoursPerWeekBasedOnP" +
                        "osition";
                    this.mUIItem1775Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1775Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1775Cell;
            }
        }
        
        public DXCell UIItem175Cell
        {
            get
            {
                if ((this.mUIItem175Cell == null))
                {
                    this.mUIItem175Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_HoursPerWeekAverage";
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem175Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem175Cell;
            }
        }
        
        public DXCell UIItem025Cell
        {
            get
            {
                if ((this.mUIItem025Cell == null))
                {
                    this.mUIItem025Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem025Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ActualAverageDiffere" +
                        "nceWorkingHours";
                    this.mUIItem025Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem025Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem025Cell;
            }
        }
        
        public DXCell UIItem71Cell
        {
            get
            {
                if ((this.mUIItem71Cell == null))
                {
                    this.mUIItem71Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem71Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_TotalWorkingHoursBas" +
                        "edOnPosition";
                    this.mUIItem71Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem71Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem71Cell;
            }
        }
        
        public DXCell UIItem70Cell
        {
            get
            {
                if ((this.mUIItem70Cell == null))
                {
                    this.mUIItem70Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem70Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_TotalWorkingHoursFor" +
                        "Line";
                    this.mUIItem70Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem70Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem70Cell;
            }
        }
        
        public DXCell UIItem1Cell
        {
            get
            {
                if ((this.mUIItem1Cell == null))
                {
                    this.mUIItem1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ActualTotalDifferenc" +
                        "eForLine";
                    this.mUIItem1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1Cell;
            }
        }
        
        public DXCell UIItem493Cell
        {
            get
            {
                if ((this.mUIItem493Cell == null))
                {
                    this.mUIItem493Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem493Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItem493Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem493Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem493Cell;
            }
        }
        
        public DXCell UIItem355Cell2
        {
            get
            {
                if ((this.mUIItem355Cell2 == null))
                {
                    this.mUIItem355Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_HoursPerWeekBasedOnP" +
                        "osition";
                    this.mUIItem355Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell2;
            }
        }
        
        public DXCell UIItem22Cell
        {
            get
            {
                if ((this.mUIItem22Cell == null))
                {
                    this.mUIItem22Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem22Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_HoursPerWeekAverage";
                    this.mUIItem22Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem22Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem22Cell;
            }
        }
        
        public DXCell UIItem135Cell
        {
            get
            {
                if ((this.mUIItem135Cell == null))
                {
                    this.mUIItem135Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem135Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_ActualAverageDiffere" +
                        "nceWorkingHours";
                    this.mUIItem135Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem135Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem135Cell;
            }
        }
        
        public DXCell UIItem142Cell2
        {
            get
            {
                if ((this.mUIItem142Cell2 == null))
                {
                    this.mUIItem142Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_TotalWorkingHoursBas" +
                        "edOnPosition";
                    this.mUIItem142Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem142Cell2;
            }
        }
        
        public DXCell UIItem88Cell
        {
            get
            {
                if ((this.mUIItem88Cell == null))
                {
                    this.mUIItem88Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem88Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_TotalWorkingHoursFor" +
                        "Line";
                    this.mUIItem88Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem88Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem88Cell;
            }
        }
        
        public DXCell UIItem54Cell
        {
            get
            {
                if ((this.mUIItem54Cell == null))
                {
                    this.mUIItem54Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem54Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_ActualTotalDifferenc" +
                        "eForLine";
                    this.mUIItem54Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem54Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem54Cell;
            }
        }
        
        public DXCell UIItem6197Cell
        {
            get
            {
                if ((this.mUIItem6197Cell == null))
                {
                    this.mUIItem6197Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6197Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_ActualPositionDiffer" +
                        "ence";
                    this.mUIItem6197Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6197Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6197Cell;
            }
        }
        
        public DXCell UIItem11549Cell1
        {
            get
            {
                if ((this.mUIItem11549Cell1 == null))
                {
                    this.mUIItem11549Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem11549Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_TotalAmountWorkedCl" +
                        "ockHours";
                    this.mUIItem11549Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem11549Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem11549Cell1;
            }
        }
        
        public DXCell UIItem8005Cell1
        {
            get
            {
                if ((this.mUIItem8005Cell1 == null))
                {
                    this.mUIItem8005Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8005Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_ActualPositionPerce" +
                        "nt";
                    this.mUIItem8005Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8005Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8005Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXColumnHeader mUICol_HoursPerWeekBaseColumnHeader;
        
        private DXCell mUIItem0Cell;
        
        private DXCell mUIItem0Cell1;
        
        private DXCell mUIItem0Cell2;
        
        private DXCell mUIItem0Cell3;
        
        private DXCell mUIItem0Cell4;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItem0Cell5;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItem2663Cell;
        
        private DXCell mUIItem30Cell;
        
        private DXCell mUIItem338Cell;
        
        private DXCell mUIItem2663Cell1;
        
        private DXCell mUIItem30Cell1;
        
        private DXCell mUIItem30Cell2;
        
        private DXCell mUIItem338Cell1;
        
        private DXCell mUIItem338Cell2;
        
        private DXCell mUIItem8451Cell;
        
        private DXCell mUIItem355Cell;
        
        private DXCell mUIItem2506Cell;
        
        private DXCell mUIItem1044Cell;
        
        private DXCell mUIItem1065Cell;
        
        private DXCell mUIItem7517Cell;
        
        private DXCell mUIItem7517Cell1;
        
        private DXCell mUIItem3133Cell;
        
        private DXCell mUIItem3133Cell1;
        
        private DXCell mUIItem7058Cell;
        
        private DXCell mUIItem355Cell1;
        
        private DXCell mUIItem84Cell;
        
        private DXCell mUIItem271Cell;
        
        private DXCell mUIItem142Cell;
        
        private DXCell mUIItem336Cell;
        
        private DXCell mUIItem336Cell1;
        
        private DXCell mUIItem1084Cell;
        
        private DXCell mUIItem1084Cell1;
        
        private DXCell mUIItem2366Cell;
        
        private DXCell mUIItem11549Cell;
        
        private DXCell mUIItem8005Cell;
        
        private DXScrollBar mUIHCrkScrollBarScrollBarControl;
        
        private DXCell mUIGCell;
        
        private DXCell mUIItem3av5Cell;
        
        private DXCell mUIItem33Cell;
        
        private DXCell mUIItem4399Cell;
        
        private DXCell mUIItem0Cell6;
        
        private DXCell mUIItem4399Cell1;
        
        private DXCell mUIItem0av1Cell;
        
        private DXCell mUIItem0av0Cell;
        
        private DXCell mUIGCell1;
        
        private DXCell mUIItem3av5Cell1;
        
        private DXCell mUIItem27Cell;
        
        private DXCell mUIItem3599Cell;
        
        private DXCell mUIItem0Cell7;
        
        private DXCell mUIItem3599Cell1;
        
        private DXCell mUIItem0av1Cell1;
        
        private DXCell mUIItem0av1Cell2;
        
        private DXCell mUIACell;
        
        private DXCell mUIItem2av5Cell;
        
        private DXCell mUIItem155Cell;
        
        private DXCell mUIItem2066Cell;
        
        private DXCell mUIItem0Cell8;
        
        private DXCell mUIItem2066Cell1;
        
        private DXCell mUIItem0av1Cell3;
        
        private DXCell mUIItem0av0Cell1;
        
        private DXCell mUIItem133Cell;
        
        private DXCell mUIItem133Cell1;
        
        private DXCell mUIItem15Cell;
        
        private DXCell mUIItem186Cell;
        
        private DXCell mUIItem186Cell1;
        
        private DXCell mUIItem142Cell1;
        
        private DXCell mUIItem2Cell;
        
        private DXCell mUIItem25Cell;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItem2Cell1;
        
        private DXCell mUIItem28Cell;
        
        private DXCell mUIItem35Cell;
        
        private DXCell mUIItem1775Cell;
        
        private DXCell mUIItem175Cell;
        
        private DXCell mUIItem025Cell;
        
        private DXCell mUIItem71Cell;
        
        private DXCell mUIItem70Cell;
        
        private DXCell mUIItem1Cell;
        
        private DXCell mUIItem493Cell;
        
        private DXCell mUIItem355Cell2;
        
        private DXCell mUIItem22Cell;
        
        private DXCell mUIItem135Cell;
        
        private DXCell mUIItem142Cell2;
        
        private DXCell mUIItem88Cell;
        
        private DXCell mUIItem54Cell;
        
        private DXCell mUIItem6197Cell;
        
        private DXCell mUIItem11549Cell1;
        
        private DXCell mUIItem8005Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGrid1Custom : DXTestControl
    {
        
        public UIRosterPlanGrid1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGrid1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGrid";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable1 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable1(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIDpnlColumnsDockPanel1 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel1(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable1 mUIGcRosterPlanTable;
        
        private UIDpnlColumnsDockPanel1 mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable1 : DXGrid
    {
        
        public UIGcRosterPlanTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIVAKANTCell
        {
            get
            {
                if ((this.mUIVAKANTCell == null))
                {
                    this.mUIVAKANTCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]EmployeeName";
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVAKANTCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVAKANTCell;
            }
        }
        
        public DXCell UIAllerCeciliaCell
        {
            get
            {
                if ((this.mUIAllerCeciliaCell == null))
                {
                    this.mUIAllerCeciliaCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAllerCeciliaCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]EmployeeName";
                    this.mUIAllerCeciliaCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAllerCeciliaCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAllerCeciliaCell;
            }
        }
        
        public DXCell UIDHCell
        {
            get
            {
                if ((this.mUIDHCell == null))
                {
                    this.mUIDHCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDHCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_5";
                    this.mUIDHCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDHCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDHCell;
            }
        }
        
        public DXCell UIItem16Cell
        {
            get
            {
                if ((this.mUIItem16Cell == null))
                {
                    this.mUIItem16Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem16Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_1";
                    this.mUIItem16Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem16Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem16Cell;
            }
        }
        
        public DXCell UIItem1067Cell
        {
            get
            {
                if ((this.mUIItem1067Cell == null))
                {
                    this.mUIItem1067Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1067Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_2";
                    this.mUIItem1067Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1067Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1067Cell;
            }
        }
        
        public DXCell UIItem4Cell
        {
            get
            {
                if ((this.mUIItem4Cell == null))
                {
                    this.mUIItem4Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_3";
                    this.mUIItem4Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4Cell;
            }
        }
        
        public DXCell UIItem253Cell
        {
            get
            {
                if ((this.mUIItem253Cell == null))
                {
                    this.mUIItem253Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem253Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_4";
                    this.mUIItem253Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem253Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem253Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIVAKANTCell;
        
        private DXCell mUIAllerCeciliaCell;
        
        private DXCell mUIDHCell;
        
        private DXCell mUIItem16Cell;
        
        private DXCell mUIItem1067Cell;
        
        private DXCell mUIItem4Cell;
        
        private DXCell mUIItem253Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlColumnsDockPanel1 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom1 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom1(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom1 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable1 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable1(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable1 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcExtraGridTable1 : DXGrid
    {
        
        public UIGcExtraGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem355Cell
        {
            get
            {
                if ((this.mUIItem355Cell == null))
                {
                    this.mUIItem355Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]HoursPerWeekBasedOnPosit" +
                        "ion";
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell;
            }
        }
        
        public DXCell UIItem84Cell
        {
            get
            {
                if ((this.mUIItem84Cell == null))
                {
                    this.mUIItem84Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem84Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]HoursPerWeekAverage";
                    this.mUIItem84Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem84Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem84Cell;
            }
        }
        
        public DXCell UIItem271Cell
        {
            get
            {
                if ((this.mUIItem271Cell == null))
                {
                    this.mUIItem271Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem271Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ActualAverageDifferenceW" +
                        "orkingHours";
                    this.mUIItem271Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem271Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem271Cell;
            }
        }
        
        public DXCell UIItem142Cell
        {
            get
            {
                if ((this.mUIItem142Cell == null))
                {
                    this.mUIItem142Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]TotalWorkingHoursBasedOn" +
                        "Position";
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem142Cell;
            }
        }
        
        public DXCell UIItem336Cell
        {
            get
            {
                if ((this.mUIItem336Cell == null))
                {
                    this.mUIItem336Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem336Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]TotalWorkingHoursForLine" +
                        "";
                    this.mUIItem336Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem336Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem336Cell;
            }
        }
        
        public DXCell UIItem336Cell1
        {
            get
            {
                if ((this.mUIItem336Cell1 == null))
                {
                    this.mUIItem336Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem336Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]TotalWorkingHours";
                    this.mUIItem336Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem336Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem336Cell1;
            }
        }
        
        public DXCell UIItem1084Cell
        {
            get
            {
                if ((this.mUIItem1084Cell == null))
                {
                    this.mUIItem1084Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1084Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ActualTotalDifferenceFor" +
                        "Line";
                    this.mUIItem1084Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1084Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1084Cell;
            }
        }
        
        public DXCell UIItem1084Cell1
        {
            get
            {
                if ((this.mUIItem1084Cell1 == null))
                {
                    this.mUIItem1084Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1084Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ActualTotalDifference";
                    this.mUIItem1084Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1084Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1084Cell1;
            }
        }
        
        public DXCell UIItem2366Cell
        {
            get
            {
                if ((this.mUIItem2366Cell == null))
                {
                    this.mUIItem2366Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2366Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ActualPositionDifference" +
                        "";
                    this.mUIItem2366Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2366Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2366Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem355Cell;
        
        private DXCell mUIItem84Cell;
        
        private DXCell mUIItem271Cell;
        
        private DXCell mUIItem142Cell;
        
        private DXCell mUIItem336Cell;
        
        private DXCell mUIItem336Cell1;
        
        private DXCell mUIItem1084Cell;
        
        private DXCell mUIItem1084Cell1;
        
        private DXCell mUIItem2366Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpRosterPlanRibbonPage UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        
        public DXRibbonPage UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpFilterRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
                    this.mUIRpFilterRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpFilterRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpRosterPlanRibbonPage mUIRpRosterPlanRibbonPage;
        
        private DXRibbonPage mUIRpFilterRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpRosterPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpInsertToolsRibbonPageGroup UIGrpInsertToolsRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpInsertToolsRibbonPageGroup == null))
                {
                    this.mUIGrpInsertToolsRibbonPageGroup = new UIGrpInsertToolsRibbonPageGroup(this);
                }
                return this.mUIGrpInsertToolsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpInsertToolsRibbonPageGroup mUIGrpInsertToolsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpInsertToolsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpInsertToolsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpInsertTools";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UISettinnRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISettinnRibbonBaseButtonItem == null))
                {
                    this.mUISettinnRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISettinnRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnInsert";
                    this.mUISettinnRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISettinnRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISettinnRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUISettinnRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient1 : DXTestControl
    {
        
        public UIPnlRosterPlanClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanGrid1Custom1 UIRosterPlanGrid1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGrid1Custom == null))
                {
                    this.mUIRosterPlanGrid1Custom = new UIRosterPlanGrid1Custom1(this);
                }
                return this.mUIRosterPlanGrid1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanGrid1Custom1 mUIRosterPlanGrid1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGrid1Custom1 : DXTestControl
    {
        
        public UIRosterPlanGrid1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGrid1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGrid";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable2 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable2(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIDpnlColumnsDockPanel2 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel2(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable2 mUIGcRosterPlanTable;
        
        private UIDpnlColumnsDockPanel2 mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable2 : DXGrid
    {
        
        public UIGcRosterPlanTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIPluttPelleCell
        {
            get
            {
                if ((this.mUIPluttPelleCell == null))
                {
                    this.mUIPluttPelleCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIPluttPelleCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]ColumnHandle1";
                    this.mUIPluttPelleCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPluttPelleCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIPluttPelleCell;
            }
        }
        
        public DXCell UIVAKANTCell
        {
            get
            {
                if ((this.mUIVAKANTCell == null))
                {
                    this.mUIVAKANTCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]ColumnHandle1";
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVAKANTCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVAKANTCell;
            }
        }
        
        public DXCell UIItem0Cell
        {
            get
            {
                if ((this.mUIItem0Cell == null))
                {
                    this.mUIItem0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_0";
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell;
            }
        }
        
        public DXCell UIItem10Cell
        {
            get
            {
                if ((this.mUIItem10Cell == null))
                {
                    this.mUIItem10Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_1";
                    this.mUIItem10Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem10Cell;
            }
        }
        
        public DXCell UIItem893Cell
        {
            get
            {
                if ((this.mUIItem893Cell == null))
                {
                    this.mUIItem893Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem893Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_4";
                    this.mUIItem893Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem893Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem893Cell;
            }
        }
        
        public DXCell UIItem0Cell1
        {
            get
            {
                if ((this.mUIItem0Cell1 == null))
                {
                    this.mUIItem0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_IndividualSum" +
                        "_5";
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell1;
            }
        }
        
        public DXCell UIItem375Cell
        {
            get
            {
                if ((this.mUIItem375Cell == null))
                {
                    this.mUIItem375Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem375Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]Col_Calc_TotalSum_2";
                    this.mUIItem375Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem375Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem375Cell;
            }
        }
        
        public DXCell UIRogerRallyCell
        {
            get
            {
                if ((this.mUIRogerRallyCell == null))
                {
                    this.mUIRogerRallyCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIRogerRallyCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]ColumnHandle1";
                    this.mUIRogerRallyCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRogerRallyCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRogerRallyCell;
            }
        }
        
        public DXCell UIItem100Cell
        {
            get
            {
                if ((this.mUIItem100Cell == null))
                {
                    this.mUIItem100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]ColumnHandle8-2";
                    this.mUIItem100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem100Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem100Cell;
            }
        }
        
        public DXCell UIItem75Cell
        {
            get
            {
                if ((this.mUIItem75Cell == null))
                {
                    this.mUIItem75Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem75Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]ColumnHandle9";
                    this.mUIItem75Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem75Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem75Cell;
            }
        }
        
        public DXCell UIItem075Cell
        {
            get
            {
                if ((this.mUIItem075Cell == null))
                {
                    this.mUIItem075Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem075Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]ColumnHandle10";
                    this.mUIItem075Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem075Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem075Cell;
            }
        }
        
        public DXCell UIOrmingeOskarCell
        {
            get
            {
                if ((this.mUIOrmingeOskarCell == null))
                {
                    this.mUIOrmingeOskarCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOrmingeOskarCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]ColumnHandle1";
                    this.mUIOrmingeOskarCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOrmingeOskarCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOrmingeOskarCell;
            }
        }
        
        public DXCell UIItem445Cell
        {
            get
            {
                if ((this.mUIItem445Cell == null))
                {
                    this.mUIItem445Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem445Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_1";
                    this.mUIItem445Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem445Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem445Cell;
            }
        }
        
        public DXCell UIItem32Cell
        {
            get
            {
                if ((this.mUIItem32Cell == null))
                {
                    this.mUIItem32Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem32Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_2";
                    this.mUIItem32Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem32Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem32Cell;
            }
        }
        
        public DXCell UIRogerRallyCell1
        {
            get
            {
                if ((this.mUIRogerRallyCell1 == null))
                {
                    this.mUIRogerRallyCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIRogerRallyCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]ColumnHandle1";
                    this.mUIRogerRallyCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRogerRallyCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRogerRallyCell1;
            }
        }
        
        public DXCell UIItem305Cell
        {
            get
            {
                if ((this.mUIItem305Cell == null))
                {
                    this.mUIItem305Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem305Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_1";
                    this.mUIItem305Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem305Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem305Cell;
            }
        }
        
        public DXCell UIItem27Cell
        {
            get
            {
                if ((this.mUIItem27Cell == null))
                {
                    this.mUIItem27Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem27Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_2";
                    this.mUIItem27Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem27Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem27Cell;
            }
        }
        
        public DXCell UIMøllMagneCell
        {
            get
            {
                if ((this.mUIMøllMagneCell == null))
                {
                    this.mUIMøllMagneCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMøllMagneCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]ColumnHandle1";
                    this.mUIMøllMagneCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMøllMagneCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIMøllMagneCell;
            }
        }
        
        public DXCell UIItem225Cell
        {
            get
            {
                if ((this.mUIItem225Cell == null))
                {
                    this.mUIItem225Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem225Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_TotalSum_1";
                    this.mUIItem225Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem225Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem225Cell;
            }
        }
        
        public DXCell UIItem305Cell1
        {
            get
            {
                if ((this.mUIItem305Cell1 == null))
                {
                    this.mUIItem305Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem305Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_Calc_TotalSum_2";
                    this.mUIItem305Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem305Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem305Cell1;
            }
        }
        
        public DXCell UIItem1067Cell
        {
            get
            {
                if ((this.mUIItem1067Cell == null))
                {
                    this.mUIItem1067Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1067Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_3";
                    this.mUIItem1067Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1067Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1067Cell;
            }
        }
        
        public DXCell UIItem4Cell
        {
            get
            {
                if ((this.mUIItem4Cell == null))
                {
                    this.mUIItem4Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]Col_Calc_TotalSum_4";
                    this.mUIItem4Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4Cell;
            }
        }
        
        public DXCell UIClueCelesteCell
        {
            get
            {
                if ((this.mUIClueCelesteCell == null))
                {
                    this.mUIClueCelesteCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIClueCelesteCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]ColumnHandle1";
                    this.mUIClueCelesteCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIClueCelesteCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIClueCelesteCell;
            }
        }
        
        public DXCell UIItem175Cell
        {
            get
            {
                if ((this.mUIItem175Cell == null))
                {
                    this.mUIItem175Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_1";
                    this.mUIItem175Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem175Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem175Cell;
            }
        }
        
        public DXCell UIItem175Cell1
        {
            get
            {
                if ((this.mUIItem175Cell1 == null))
                {
                    this.mUIItem175Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem175Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_2";
                    this.mUIItem175Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem175Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem175Cell1;
            }
        }
        
        public DXCell UIItem175Cell2
        {
            get
            {
                if ((this.mUIItem175Cell2 == null))
                {
                    this.mUIItem175Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem175Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_3";
                    this.mUIItem175Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem175Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem175Cell2;
            }
        }
        
        public DXCell UIItem175Cell3
        {
            get
            {
                if ((this.mUIItem175Cell3 == null))
                {
                    this.mUIItem175Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem175Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]Col_Calc_TotalSum_4";
                    this.mUIItem175Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem175Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem175Cell3;
            }
        }
        
        public DXCell UIItem0Cell2
        {
            get
            {
                if ((this.mUIItem0Cell2 == null))
                {
                    this.mUIItem0Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_3";
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell2;
            }
        }
        
        public DXCell UIItem32Cell1
        {
            get
            {
                if ((this.mUIItem32Cell1 == null))
                {
                    this.mUIItem32Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem32Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]Col_Calc_TotalSum_4";
                    this.mUIItem32Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem32Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem32Cell1;
            }
        }
        
        public DXCell UIN2Cell
        {
            get
            {
                if ((this.mUIN2Cell == null))
                {
                    this.mUIN2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIN2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_3";
                    this.mUIN2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN2Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIN2Cell;
            }
        }
        
        public DXTextEdit UIRow8ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow8ColumnRosterCellEdit == null))
                {
                    this.mUIRow8ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow8ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_3";
                    this.mUIRow8ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow8ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow8ColumnRosterCellEdit;
            }
        }
        
        public DXTextEdit UIRow8ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow8ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow8ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow8ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan[View]gvRosterPlan[Row]8[Column]RosterCell_3";
                    this.mUIRow8ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow8ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_24";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXTextEdit UIRow9ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow9ColumnRosterCellEdit == null))
                {
                    this.mUIRow9ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow9ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]9[Column]RosterCell_24";
                    this.mUIRow9ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow9ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow9ColumnRosterCellEdit;
            }
        }
        
        public DXTextEdit UIRow9ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow9ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow9ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow9ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan[View]gvRosterPlan[Row]9[Column]RosterCell_24";
                    this.mUIRow9ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow9ColumnRosterCellEdit1;
            }
        }
        
        public DXTextEdit UIRow9ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow9ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow9ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow9ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan[View]gvRosterPlan[Row]9[Column]RosterCell_25";
                    this.mUIRow9ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow9ColumnRosterCellEdit2;
            }
        }
        
        public DXTextEdit UIRow9ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow9ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow9ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow9ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan[View]gvRosterPlan[Row]9[Column]RosterCell_26";
                    this.mUIRow9ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow9ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIA3Cell
        {
            get
            {
                if ((this.mUIA3Cell == null))
                {
                    this.mUIA3Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIA3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_7";
                    this.mUIA3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIA3Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIA3Cell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_11";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItem375Cell1
        {
            get
            {
                if ((this.mUIItem375Cell1 == null))
                {
                    this.mUIItem375Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem375Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]Col_Calc_TotalSum_2";
                    this.mUIItem375Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem375Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem375Cell1;
            }
        }
        
        public DXCell UIItem100Cell1
        {
            get
            {
                if ((this.mUIItem100Cell1 == null))
                {
                    this.mUIItem100Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem100Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]ColumnHandle8-2";
                    this.mUIItem100Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem100Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem100Cell1;
            }
        }
        
        public DXCell UIItem75Cell1
        {
            get
            {
                if ((this.mUIItem75Cell1 == null))
                {
                    this.mUIItem75Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem75Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]ColumnHandle9";
                    this.mUIItem75Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem75Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem75Cell1;
            }
        }
        
        public DXCell UIItem075Cell1
        {
            get
            {
                if ((this.mUIItem075Cell1 == null))
                {
                    this.mUIItem075Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem075Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]ColumnHandle10";
                    this.mUIItem075Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem075Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem075Cell1;
            }
        }
        
        public DXCell UIPluttPelleCell1
        {
            get
            {
                if ((this.mUIPluttPelleCell1 == null))
                {
                    this.mUIPluttPelleCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIPluttPelleCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]EmployeeName";
                    this.mUIPluttPelleCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIPluttPelleCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIPluttPelleCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIPluttPelleCell;
        
        private DXCell mUIVAKANTCell;
        
        private DXCell mUIItem0Cell;
        
        private DXCell mUIItem10Cell;
        
        private DXCell mUIItem893Cell;
        
        private DXCell mUIItem0Cell1;
        
        private DXCell mUIItem375Cell;
        
        private DXCell mUIRogerRallyCell;
        
        private DXCell mUIItem100Cell;
        
        private DXCell mUIItem75Cell;
        
        private DXCell mUIItem075Cell;
        
        private DXCell mUIOrmingeOskarCell;
        
        private DXCell mUIItem445Cell;
        
        private DXCell mUIItem32Cell;
        
        private DXCell mUIRogerRallyCell1;
        
        private DXCell mUIItem305Cell;
        
        private DXCell mUIItem27Cell;
        
        private DXCell mUIMøllMagneCell;
        
        private DXCell mUIItem225Cell;
        
        private DXCell mUIItem305Cell1;
        
        private DXCell mUIItem1067Cell;
        
        private DXCell mUIItem4Cell;
        
        private DXCell mUIClueCelesteCell;
        
        private DXCell mUIItem175Cell;
        
        private DXCell mUIItem175Cell1;
        
        private DXCell mUIItem175Cell2;
        
        private DXCell mUIItem175Cell3;
        
        private DXCell mUIItem0Cell2;
        
        private DXCell mUIItem32Cell1;
        
        private DXCell mUIN2Cell;
        
        private DXTextEdit mUIRow8ColumnRosterCellEdit;
        
        private DXTextEdit mUIRow8ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell;
        
        private DXTextEdit mUIRow9ColumnRosterCellEdit;
        
        private DXTextEdit mUIRow9ColumnRosterCellEdit1;
        
        private DXTextEdit mUIRow9ColumnRosterCellEdit2;
        
        private DXTextEdit mUIRow9ColumnRosterCellEdit3;
        
        private DXCell mUIA3Cell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItem375Cell1;
        
        private DXCell mUIItem100Cell1;
        
        private DXCell mUIItem75Cell1;
        
        private DXCell mUIItem075Cell1;
        
        private DXCell mUIPluttPelleCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlColumnsDockPanel2 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom2 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom2(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom2 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom2 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable2 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable2(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable2 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcExtraGridTable2 : DXGrid
    {
        
        public UIGcExtraGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem355Cell
        {
            get
            {
                if ((this.mUIItem355Cell == null))
                {
                    this.mUIItem355Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle42";
                    this.mUIItem355Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell;
            }
        }
        
        public DXCell UIItem3789Cell
        {
            get
            {
                if ((this.mUIItem3789Cell == null))
                {
                    this.mUIItem3789Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3789Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle43";
                    this.mUIItem3789Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3789Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3789Cell;
            }
        }
        
        public DXCell UIItem239Cell
        {
            get
            {
                if ((this.mUIItem239Cell == null))
                {
                    this.mUIItem239Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem239Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle44";
                    this.mUIItem239Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem239Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem239Cell;
            }
        }
        
        public DXCell UIItem1065Cell
        {
            get
            {
                if ((this.mUIItem1065Cell == null))
                {
                    this.mUIItem1065Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1065Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle45";
                    this.mUIItem1065Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1065Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1065Cell;
            }
        }
        
        public DXCell UIItem11367Cell
        {
            get
            {
                if ((this.mUIItem11367Cell == null))
                {
                    this.mUIItem11367Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem11367Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle46";
                    this.mUIItem11367Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem11367Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem11367Cell;
            }
        }
        
        public DXCell UIItem11367Cell1
        {
            get
            {
                if ((this.mUIItem11367Cell1 == null))
                {
                    this.mUIItem11367Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem11367Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle47";
                    this.mUIItem11367Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem11367Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem11367Cell1;
            }
        }
        
        public DXCell UIItem717Cell
        {
            get
            {
                if ((this.mUIItem717Cell == null))
                {
                    this.mUIItem717Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem717Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle48";
                    this.mUIItem717Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem717Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem717Cell;
            }
        }
        
        public DXCell UIItem717Cell1
        {
            get
            {
                if ((this.mUIItem717Cell1 == null))
                {
                    this.mUIItem717Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem717Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle49";
                    this.mUIItem717Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem717Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem717Cell1;
            }
        }
        
        public DXCell UIItem10673Cell
        {
            get
            {
                if ((this.mUIItem10673Cell == null))
                {
                    this.mUIItem10673Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10673Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle50";
                    this.mUIItem10673Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10673Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem10673Cell;
            }
        }
        
        public DXCell UIGCell
        {
            get
            {
                if ((this.mUIGCell == null))
                {
                    this.mUIGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle42";
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell;
            }
        }
        
        public DXCell UIItem3av5Cell
        {
            get
            {
                if ((this.mUIItem3av5Cell == null))
                {
                    this.mUIItem3av5Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av5Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle43";
                    this.mUIItem3av5Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av5Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av5Cell;
            }
        }
        
        public DXCell UIItem33Cell
        {
            get
            {
                if ((this.mUIItem33Cell == null))
                {
                    this.mUIItem33Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem33Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle44";
                    this.mUIItem33Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem33Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem33Cell;
            }
        }
        
        public DXCell UIItem4399Cell
        {
            get
            {
                if ((this.mUIItem4399Cell == null))
                {
                    this.mUIItem4399Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4399Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle45";
                    this.mUIItem4399Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4399Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4399Cell;
            }
        }
        
        public DXCell UIItem0Cell
        {
            get
            {
                if ((this.mUIItem0Cell == null))
                {
                    this.mUIItem0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle46";
                    this.mUIItem0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell;
            }
        }
        
        public DXCell UIItem4399Cell1
        {
            get
            {
                if ((this.mUIItem4399Cell1 == null))
                {
                    this.mUIItem4399Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4399Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle47";
                    this.mUIItem4399Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4399Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4399Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell
        {
            get
            {
                if ((this.mUIItem0av1Cell == null))
                {
                    this.mUIItem0av1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle48";
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell;
            }
        }
        
        public DXCell UIItem0av0Cell
        {
            get
            {
                if ((this.mUIItem0av0Cell == null))
                {
                    this.mUIItem0av0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle49";
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell;
            }
        }
        
        public DXCell UIGCell1
        {
            get
            {
                if ((this.mUIGCell1 == null))
                {
                    this.mUIGCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle42";
                    this.mUIGCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell1;
            }
        }
        
        public DXCell UIItem3av5Cell1
        {
            get
            {
                if ((this.mUIItem3av5Cell1 == null))
                {
                    this.mUIItem3av5Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av5Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle43";
                    this.mUIItem3av5Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av5Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av5Cell1;
            }
        }
        
        public DXCell UIItem27Cell
        {
            get
            {
                if ((this.mUIItem27Cell == null))
                {
                    this.mUIItem27Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem27Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle44";
                    this.mUIItem27Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem27Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem27Cell;
            }
        }
        
        public DXCell UIItem3599Cell
        {
            get
            {
                if ((this.mUIItem3599Cell == null))
                {
                    this.mUIItem3599Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3599Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle45";
                    this.mUIItem3599Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3599Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3599Cell;
            }
        }
        
        public DXCell UIItem0Cell1
        {
            get
            {
                if ((this.mUIItem0Cell1 == null))
                {
                    this.mUIItem0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle46";
                    this.mUIItem0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell1;
            }
        }
        
        public DXCell UIItem3599Cell1
        {
            get
            {
                if ((this.mUIItem3599Cell1 == null))
                {
                    this.mUIItem3599Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3599Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle47";
                    this.mUIItem3599Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3599Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3599Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell1
        {
            get
            {
                if ((this.mUIItem0av1Cell1 == null))
                {
                    this.mUIItem0av1Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle48";
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell2
        {
            get
            {
                if ((this.mUIItem0av1Cell2 == null))
                {
                    this.mUIItem0av1Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle49";
                    this.mUIItem0av1Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell2;
            }
        }
        
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle42";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        
        public DXCell UIItem2av5Cell
        {
            get
            {
                if ((this.mUIItem2av5Cell == null))
                {
                    this.mUIItem2av5Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2av5Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle43";
                    this.mUIItem2av5Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2av5Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2av5Cell;
            }
        }
        
        public DXCell UIItem155Cell
        {
            get
            {
                if ((this.mUIItem155Cell == null))
                {
                    this.mUIItem155Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem155Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle44";
                    this.mUIItem155Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem155Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem155Cell;
            }
        }
        
        public DXCell UIItem2066Cell
        {
            get
            {
                if ((this.mUIItem2066Cell == null))
                {
                    this.mUIItem2066Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2066Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle45";
                    this.mUIItem2066Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2066Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2066Cell;
            }
        }
        
        public DXCell UIItem0Cell2
        {
            get
            {
                if ((this.mUIItem0Cell2 == null))
                {
                    this.mUIItem0Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle46";
                    this.mUIItem0Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell2;
            }
        }
        
        public DXCell UIItem2066Cell1
        {
            get
            {
                if ((this.mUIItem2066Cell1 == null))
                {
                    this.mUIItem2066Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2066Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle47";
                    this.mUIItem2066Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2066Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2066Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell3
        {
            get
            {
                if ((this.mUIItem0av1Cell3 == null))
                {
                    this.mUIItem0av1Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle48";
                    this.mUIItem0av1Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell3;
            }
        }
        
        public DXCell UIItem0av0Cell1
        {
            get
            {
                if ((this.mUIItem0av0Cell1 == null))
                {
                    this.mUIItem0av0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle49";
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell1;
            }
        }
        
        public DXCell UIItem142Cell
        {
            get
            {
                if ((this.mUIItem142Cell == null))
                {
                    this.mUIItem142Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle42";
                    this.mUIItem142Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem142Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem142Cell;
            }
        }
        
        public DXCell UIItem2Cell
        {
            get
            {
                if ((this.mUIItem2Cell == null))
                {
                    this.mUIItem2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle43";
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2Cell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle44";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItem2Cell1
        {
            get
            {
                if ((this.mUIItem2Cell1 == null))
                {
                    this.mUIItem2Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle45";
                    this.mUIItem2Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2Cell1;
            }
        }
        
        public DXCell UIItem28Cell
        {
            get
            {
                if ((this.mUIItem28Cell == null))
                {
                    this.mUIItem28Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem28Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle46";
                    this.mUIItem28Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem28Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem28Cell;
            }
        }
        
        public DXCell UIItem1Cell
        {
            get
            {
                if ((this.mUIItem1Cell == null))
                {
                    this.mUIItem1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle47";
                    this.mUIItem1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1Cell;
            }
        }
        
        public DXCell UIItem493Cell
        {
            get
            {
                if ((this.mUIItem493Cell == null))
                {
                    this.mUIItem493Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem493Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle48";
                    this.mUIItem493Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem493Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem493Cell;
            }
        }
        
        public DXCell UIItem0Cell3
        {
            get
            {
                if ((this.mUIItem0Cell3 == null))
                {
                    this.mUIItem0Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle42";
                    this.mUIItem0Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell3;
            }
        }
        
        public DXCell UIItem0Cell4
        {
            get
            {
                if ((this.mUIItem0Cell4 == null))
                {
                    this.mUIItem0Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle43";
                    this.mUIItem0Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell4;
            }
        }
        
        public DXCell UIItem0Cell5
        {
            get
            {
                if ((this.mUIItem0Cell5 == null))
                {
                    this.mUIItem0Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle44";
                    this.mUIItem0Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell5;
            }
        }
        
        public DXCell UIItem0Cell6
        {
            get
            {
                if ((this.mUIItem0Cell6 == null))
                {
                    this.mUIItem0Cell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle45";
                    this.mUIItem0Cell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell6;
            }
        }
        
        public DXCell UIItem0Cell7
        {
            get
            {
                if ((this.mUIItem0Cell7 == null))
                {
                    this.mUIItem0Cell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle46";
                    this.mUIItem0Cell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell7;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle47";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItem0Cell8
        {
            get
            {
                if ((this.mUIItem0Cell8 == null))
                {
                    this.mUIItem0Cell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle48";
                    this.mUIItem0Cell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell8;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle49";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle50";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItem355Cell1
        {
            get
            {
                if ((this.mUIItem355Cell1 == null))
                {
                    this.mUIItem355Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle42";
                    this.mUIItem355Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell1;
            }
        }
        
        public DXCell UIItem2506Cell
        {
            get
            {
                if ((this.mUIItem2506Cell == null))
                {
                    this.mUIItem2506Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2506Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle43";
                    this.mUIItem2506Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2506Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2506Cell;
            }
        }
        
        public DXCell UIItem1044Cell
        {
            get
            {
                if ((this.mUIItem1044Cell == null))
                {
                    this.mUIItem1044Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1044Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle44";
                    this.mUIItem1044Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1044Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1044Cell;
            }
        }
        
        public DXCell UIItem1065Cell1
        {
            get
            {
                if ((this.mUIItem1065Cell1 == null))
                {
                    this.mUIItem1065Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1065Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle45";
                    this.mUIItem1065Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1065Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1065Cell1;
            }
        }
        
        public DXCell UIItem7517Cell
        {
            get
            {
                if ((this.mUIItem7517Cell == null))
                {
                    this.mUIItem7517Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7517Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle46";
                    this.mUIItem7517Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7517Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7517Cell;
            }
        }
        
        public DXCell UIItem7517Cell1
        {
            get
            {
                if ((this.mUIItem7517Cell1 == null))
                {
                    this.mUIItem7517Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7517Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle47";
                    this.mUIItem7517Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7517Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7517Cell1;
            }
        }
        
        public DXCell UIItem3133Cell
        {
            get
            {
                if ((this.mUIItem3133Cell == null))
                {
                    this.mUIItem3133Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3133Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle48";
                    this.mUIItem3133Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3133Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3133Cell;
            }
        }
        
        public DXCell UIItem3133Cell1
        {
            get
            {
                if ((this.mUIItem3133Cell1 == null))
                {
                    this.mUIItem3133Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3133Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle49";
                    this.mUIItem3133Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3133Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3133Cell1;
            }
        }
        
        public DXCell UIItem7058Cell
        {
            get
            {
                if ((this.mUIItem7058Cell == null))
                {
                    this.mUIItem7058Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7058Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle50";
                    this.mUIItem7058Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7058Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7058Cell;
            }
        }
        
        public DXCell UIItem2366Cell
        {
            get
            {
                if ((this.mUIItem2366Cell == null))
                {
                    this.mUIItem2366Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2366Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle50";
                    this.mUIItem2366Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2366Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2366Cell;
            }
        }
        
        public DXCell UIItem0Cell9
        {
            get
            {
                if ((this.mUIItem0Cell9 == null))
                {
                    this.mUIItem0Cell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle40";
                    this.mUIItem0Cell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell9;
            }
        }
        
        public DXCell UIItem0Cell10
        {
            get
            {
                if ((this.mUIItem0Cell10 == null))
                {
                    this.mUIItem0Cell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0Cell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnHandle41";
                    this.mUIItem0Cell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0Cell10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0Cell10;
            }
        }
        
        public DXCell UIItem355Cell2
        {
            get
            {
                if ((this.mUIItem355Cell2 == null))
                {
                    this.mUIItem355Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle40";
                    this.mUIItem355Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell2;
            }
        }
        
        public DXCell UIItem2506Cell1
        {
            get
            {
                if ((this.mUIItem2506Cell1 == null))
                {
                    this.mUIItem2506Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2506Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]ColumnHandle41";
                    this.mUIItem2506Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2506Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2506Cell1;
            }
        }
        
        public DXCell UIItem355Cell3
        {
            get
            {
                if ((this.mUIItem355Cell3 == null))
                {
                    this.mUIItem355Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem355Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle40";
                    this.mUIItem355Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem355Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem355Cell3;
            }
        }
        
        public DXCell UIItem84Cell
        {
            get
            {
                if ((this.mUIItem84Cell == null))
                {
                    this.mUIItem84Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem84Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]ColumnHandle41";
                    this.mUIItem84Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem84Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem84Cell;
            }
        }
        
        public DXCell UIGCell2
        {
            get
            {
                if ((this.mUIGCell2 == null))
                {
                    this.mUIGCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle40";
                    this.mUIGCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell2;
            }
        }
        
        public DXCell UIGCell3
        {
            get
            {
                if ((this.mUIGCell3 == null))
                {
                    this.mUIGCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle40";
                    this.mUIGCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell3;
            }
        }
        
        public DXCell UIItem3av5Cell2
        {
            get
            {
                if ((this.mUIItem3av5Cell2 == null))
                {
                    this.mUIItem3av5Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av5Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]ColumnHandle41";
                    this.mUIItem3av5Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av5Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av5Cell2;
            }
        }
        
        public DXCell UIACell1
        {
            get
            {
                if ((this.mUIACell1 == null))
                {
                    this.mUIACell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle40";
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell1;
            }
        }
        
        public DXCell UIItem2av5Cell1
        {
            get
            {
                if ((this.mUIItem2av5Cell1 == null))
                {
                    this.mUIItem2av5Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2av5Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle41";
                    this.mUIItem2av5Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2av5Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2av5Cell1;
            }
        }
        
        public DXCell UIItem2Cell2
        {
            get
            {
                if ((this.mUIItem2Cell2 == null))
                {
                    this.mUIItem2Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]ColumnHandle41";
                    this.mUIItem2Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2Cell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem355Cell;
        
        private DXCell mUIItem3789Cell;
        
        private DXCell mUIItem239Cell;
        
        private DXCell mUIItem1065Cell;
        
        private DXCell mUIItem11367Cell;
        
        private DXCell mUIItem11367Cell1;
        
        private DXCell mUIItem717Cell;
        
        private DXCell mUIItem717Cell1;
        
        private DXCell mUIItem10673Cell;
        
        private DXCell mUIGCell;
        
        private DXCell mUIItem3av5Cell;
        
        private DXCell mUIItem33Cell;
        
        private DXCell mUIItem4399Cell;
        
        private DXCell mUIItem0Cell;
        
        private DXCell mUIItem4399Cell1;
        
        private DXCell mUIItem0av1Cell;
        
        private DXCell mUIItem0av0Cell;
        
        private DXCell mUIGCell1;
        
        private DXCell mUIItem3av5Cell1;
        
        private DXCell mUIItem27Cell;
        
        private DXCell mUIItem3599Cell;
        
        private DXCell mUIItem0Cell1;
        
        private DXCell mUIItem3599Cell1;
        
        private DXCell mUIItem0av1Cell1;
        
        private DXCell mUIItem0av1Cell2;
        
        private DXCell mUIACell;
        
        private DXCell mUIItem2av5Cell;
        
        private DXCell mUIItem155Cell;
        
        private DXCell mUIItem2066Cell;
        
        private DXCell mUIItem0Cell2;
        
        private DXCell mUIItem2066Cell1;
        
        private DXCell mUIItem0av1Cell3;
        
        private DXCell mUIItem0av0Cell1;
        
        private DXCell mUIItem142Cell;
        
        private DXCell mUIItem2Cell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItem2Cell1;
        
        private DXCell mUIItem28Cell;
        
        private DXCell mUIItem1Cell;
        
        private DXCell mUIItem493Cell;
        
        private DXCell mUIItem0Cell3;
        
        private DXCell mUIItem0Cell4;
        
        private DXCell mUIItem0Cell5;
        
        private DXCell mUIItem0Cell6;
        
        private DXCell mUIItem0Cell7;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItem0Cell8;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItem355Cell1;
        
        private DXCell mUIItem2506Cell;
        
        private DXCell mUIItem1044Cell;
        
        private DXCell mUIItem1065Cell1;
        
        private DXCell mUIItem7517Cell;
        
        private DXCell mUIItem7517Cell1;
        
        private DXCell mUIItem3133Cell;
        
        private DXCell mUIItem3133Cell1;
        
        private DXCell mUIItem7058Cell;
        
        private DXCell mUIItem2366Cell;
        
        private DXCell mUIItem0Cell9;
        
        private DXCell mUIItem0Cell10;
        
        private DXCell mUIItem355Cell2;
        
        private DXCell mUIItem2506Cell1;
        
        private DXCell mUIItem355Cell3;
        
        private DXCell mUIItem84Cell;
        
        private DXCell mUIGCell2;
        
        private DXCell mUIGCell3;
        
        private DXCell mUIItem3av5Cell2;
        
        private DXCell mUIACell1;
        
        private DXCell mUIItem2av5Cell1;
        
        private DXCell mUIItem2Cell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink2MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink2MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink2MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink2MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[2]";
                    this.mUIBarButtonItemLink2MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink2MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIMerklinjeMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIMerklinjeMenuBaseButtonItem == null))
                {
                    this.mUIMerklinjeMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIMerklinjeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[8]";
                    this.mUIMerklinjeMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIMerklinjeMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIKopierMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIKopierMenuBaseButtonItem == null))
                {
                    this.mUIKopierMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIKopierMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[11]";
                    this.mUIKopierMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIKopierMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink2MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIMerklinjeMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIKopierMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu1(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu1 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UISettlinjeraktiveinakMenuItem UISettlinjeraktiveinakMenuItem
        {
            get
            {
                if ((this.mUISettlinjeraktiveinakMenuItem == null))
                {
                    this.mUISettlinjeraktiveinakMenuItem = new UISettlinjeraktiveinakMenuItem(this);
                }
                return this.mUISettlinjeraktiveinakMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UISettlinjeraktiveinakMenuItem mUISettlinjeraktiveinakMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISettlinjeraktiveinakMenuItem : DXMenuItem
    {
        
        public UISettlinjeraktiveinakMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UISettlinje2inaktiv509MenuBaseButtonItem
        {
            get
            {
                if ((this.mUISettlinje2inaktiv509MenuBaseButtonItem == null))
                {
                    this.mUISettlinje2inaktiv509MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUISettlinje2inaktiv509MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUISettlinje2inaktiv509MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUISettlinje2inaktiv509MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUISettlinje2inaktiv509MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIByttansattWindow : DXWindow
    {
        
        public UIByttansattWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytt ansatt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl3Client UIGsPanelControl3Client
        {
            get
            {
                if ((this.mUIGsPanelControl3Client == null))
                {
                    this.mUIGsPanelControl3Client = new UIGsPanelControl3Client(this);
                }
                return this.mUIGsPanelControl3Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl3Client mUIGsPanelControl3Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl3Client : DXTestControl
    {
        
        public UIGsPanelControl3Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl2Client UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl2Client mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl2Client : DXTestControl
    {
        
        public UIGsPanelControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILueNewEmployeeLookUpEdit
        {
            get
            {
                if ((this.mUILueNewEmployeeLookUpEdit == null))
                {
                    this.mUILueNewEmployeeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILueNewEmployeeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lueNewEmployee";
                    this.mUILueNewEmployeeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUILueNewEmployeeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILueNewEmployeeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINyhjelpeplanWindow : DXWindow
    {
        
        public UINyhjelpeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny hjelpeplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        
        public UILayoutControlItem4LayoutControlItem UILayoutControlItem4LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem4LayoutControlItem == null))
                {
                    this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem(this);
                }
                return this.mUILayoutControlItem4LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
        
        private UILayoutControlItem4LayoutControlItem mUILayoutControlItem4LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlGridSumClient UIPnlGridSumClient
        {
            get
            {
                if ((this.mUIPnlGridSumClient == null))
                {
                    this.mUIPnlGridSumClient = new UIPnlGridSumClient(this);
                }
                return this.mUIPnlGridSumClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridSumClient mUIPnlGridSumClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGridSumClient : DXTestControl
    {
        
        public UIPnlGridSumClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGridSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlTable UIGsGridControlTable
        {
            get
            {
                if ((this.mUIGsGridControlTable == null))
                {
                    this.mUIGsGridControlTable = new UIGsGridControlTable(this);
                }
                return this.mUIGsGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlTable mUIGsGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsGridControlTable : DXGrid
    {
        
        public UIGsGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIOrmingeOskarCell
        {
            get
            {
                if ((this.mUIOrmingeOskarCell == null))
                {
                    this.mUIOrmingeOskarCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOrmingeOskarCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]0[Column]clmName";
                    this.mUIOrmingeOskarCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOrmingeOskarCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIOrmingeOskarCell;
            }
        }
        
        public DXCell UIMøllMagneCell
        {
            get
            {
                if ((this.mUIMøllMagneCell == null))
                {
                    this.mUIMøllMagneCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMøllMagneCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]2[Column]clmName";
                    this.mUIMøllMagneCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMøllMagneCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIMøllMagneCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIOrmingeOskarCell;
        
        private DXCell mUIMøllMagneCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem4LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem4LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRuleButtonsClient UIPnlRuleButtonsClient
        {
            get
            {
                if ((this.mUIPnlRuleButtonsClient == null))
                {
                    this.mUIPnlRuleButtonsClient = new UIPnlRuleButtonsClient(this);
                }
                return this.mUIPnlRuleButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRuleButtonsClient mUIPnlRuleButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRuleButtonsClient : DXTestControl
    {
        
        public UIPnlRuleButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRuleButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIGjennomsnittsberegniButton
        {
            get
            {
                if ((this.mUIGjennomsnittsberegniButton == null))
                {
                    this.mUIGjennomsnittsberegniButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGjennomsnittsberegniButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAverage";
                    this.mUIGjennomsnittsberegniButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGjennomsnittsberegniButton.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIGjennomsnittsberegniButton;
            }
        }
        
        public DXButton UIAnnenhverberegningavButton
        {
            get
            {
                if ((this.mUIAnnenhverberegningavButton == null))
                {
                    this.mUIAnnenhverberegningavButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnnenhverberegningavButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEveryOther";
                    this.mUIAnnenhverberegningavButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAnnenhverberegningavButton.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIAnnenhverberegningavButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGjennomsnittsberegniButton;
        
        private DXButton mUIAnnenhverberegningavButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppsettforavdeling51Window : WinWindow
    {
        
        public UIOppsettforavdeling51Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Oppsett for avdeling: 5180 - Beregninger";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmDepSetup";
            this.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIArbeidsplanClient UIArbeidsplanClient
        {
            get
            {
                if ((this.mUIArbeidsplanClient == null))
                {
                    this.mUIArbeidsplanClient = new UIArbeidsplanClient(this);
                }
                return this.mUIArbeidsplanClient;
            }
        }
        
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIInnstillingerforbereClient UIInnstillingerforbereClient
        {
            get
            {
                if ((this.mUIInnstillingerforbereClient == null))
                {
                    this.mUIInnstillingerforbereClient = new UIInnstillingerforbereClient(this);
                }
                return this.mUIInnstillingerforbereClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        
        private UIArbeidsplanClient mUIArbeidsplanClient;
        
        private UIItemClient mUIItemClient;
        
        private UIInnstillingerforbereClient mUIInnstillingerforbereClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
            #endregion
        }
        
        #region Properties
        public WinClient UIOppsettforavdeling51Client
        {
            get
            {
                if ((this.mUIOppsettforavdeling51Client == null))
                {
                    this.mUIOppsettforavdeling51Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIOppsettforavdeling51Client.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
                    #endregion
                }
                return this.mUIOppsettforavdeling51Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIOppsettforavdeling51Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanClient : WinClient
    {
        
        public UIArbeidsplanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Arbeidsplan";
            this.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIJusterefastverdipåF3CheckBox
        {
            get
            {
                if ((this.mUIJusterefastverdipåF3CheckBox == null))
                {
                    this.mUIJusterefastverdipåF3CheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIJusterefastverdipåF3CheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Justere fast verdi på F3 lengde iht. stillingsprosent";
                    this.mUIJusterefastverdipåF3CheckBox.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
                    #endregion
                }
                return this.mUIJusterefastverdipåF3CheckBox;
            }
        }
        
        public WinCheckBox UIBeregnenormalarbeidsCheckBox
        {
            get
            {
                if ((this.mUIBeregnenormalarbeidsCheckBox == null))
                {
                    this.mUIBeregnenormalarbeidsCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIBeregnenormalarbeidsCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Beregne normal arbeidstid for vaktkoder i ikke-rullerende Arbeidsplan";
                    this.mUIBeregnenormalarbeidsCheckBox.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
                    #endregion
                }
                return this.mUIBeregnenormalarbeidsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIJusterefastverdipåF3CheckBox;
        
        private WinCheckBox mUIBeregnenormalarbeidsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
            #endregion
        }
        
        #region Properties
        public WinButton UILagreoglukkButton
        {
            get
            {
                if ((this.mUILagreoglukkButton == null))
                {
                    this.mUILagreoglukkButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILagreoglukkButton.SearchProperties[WinButton.PropertyNames.Name] = "Lagre og lukk";
                    this.mUILagreoglukkButton.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
                    #endregion
                }
                return this.mUILagreoglukkButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILagreoglukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIInnstillingerforbereClient : WinClient
    {
        
        public UIInnstillingerforbereClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Innstillinger for beregning av ukesum i ikke-rullerende planer.";
            this.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UITahensyntilhelligdagRadioButton
        {
            get
            {
                if ((this.mUITahensyntilhelligdagRadioButton == null))
                {
                    this.mUITahensyntilhelligdagRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUITahensyntilhelligdagRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Ta hensyn til helligdager i planen.";
                    this.mUITahensyntilhelligdagRadioButton.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
                    #endregion
                }
                return this.mUITahensyntilhelligdagRadioButton;
            }
        }
        
        public WinRadioButton UIIkketahensyntilhelliRadioButton
        {
            get
            {
                if ((this.mUIIkketahensyntilhelliRadioButton == null))
                {
                    this.mUIIkketahensyntilhelliRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIIkketahensyntilhelliRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Ikke ta hensyn til helligdager i planen.";
                    this.mUIIkketahensyntilhelliRadioButton.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
                    #endregion
                }
                return this.mUIIkketahensyntilhelliRadioButton;
            }
        }
        
        public WinRadioButton UITahensyntilhelligdagRadioButton1
        {
            get
            {
                if ((this.mUITahensyntilhelligdagRadioButton1 == null))
                {
                    this.mUITahensyntilhelligdagRadioButton1 = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUITahensyntilhelligdagRadioButton1.SearchProperties[WinRadioButton.PropertyNames.Name] = "Ta hensyn til helligdager for vaktkoder som kan benyttes på helligdager i planen." +
                        "";
                    this.mUITahensyntilhelligdagRadioButton1.WindowTitles.Add("Oppsett for avdeling: 5180 - Beregninger");
                    #endregion
                }
                return this.mUITahensyntilhelligdagRadioButton1;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUITahensyntilhelligdagRadioButton;
        
        private WinRadioButton mUIIkketahensyntilhelliRadioButton;
        
        private WinRadioButton mUITahensyntilhelligdagRadioButton1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu2 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu2(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu2 mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu2 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UISettlinjeraktiveinakMenuItem1 UISettlinjeraktiveinakMenuItem
        {
            get
            {
                if ((this.mUISettlinjeraktiveinakMenuItem == null))
                {
                    this.mUISettlinjeraktiveinakMenuItem = new UISettlinjeraktiveinakMenuItem1(this);
                }
                return this.mUISettlinjeraktiveinakMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UISettlinjeraktiveinakMenuItem1 mUISettlinjeraktiveinakMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISettlinjeraktiveinakMenuItem1 : DXMenuItem
    {
        
        public UISettlinjeraktiveinakMenuItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UISettlinje2inaktiv509MenuBaseButtonItem
        {
            get
            {
                if ((this.mUISettlinje2inaktiv509MenuBaseButtonItem == null))
                {
                    this.mUISettlinje2inaktiv509MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUISettlinje2inaktiv509MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUISettlinje2inaktiv509MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUISettlinje2inaktiv509MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUISettlinje2inaktiv509MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanInnstilliWindow : DXWindow
    {
        
        public UIArbeidsplanInnstilliWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan - Innstillinger";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UITcDataTabList UITcDataTabList
        {
            get
            {
                if ((this.mUITcDataTabList == null))
                {
                    this.mUITcDataTabList = new UITcDataTabList(this);
                }
                return this.mUITcDataTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcDataTabList mUITcDataTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcDataTabList : DXTestControl
    {
        
        public UITcDataTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcData";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            #endregion
        }
        
        #region Properties
        public UITpConfigurationClient UITpConfigurationClient
        {
            get
            {
                if ((this.mUITpConfigurationClient == null))
                {
                    this.mUITpConfigurationClient = new UITpConfigurationClient(this);
                }
                return this.mUITpConfigurationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpConfigurationClient mUITpConfigurationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpConfigurationClient : DXTestControl
    {
        
        public UITpConfigurationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpConfiguration";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            #endregion
        }
        
        #region Properties
        public UIPaCenterClient UIPaCenterClient
        {
            get
            {
                if ((this.mUIPaCenterClient == null))
                {
                    this.mUIPaCenterClient = new UIPaCenterClient(this);
                }
                return this.mUIPaCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaCenterClient mUIPaCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaCenterClient : DXTestControl
    {
        
        public UIPaCenterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILeDisplayStartDateLookUpEdit
        {
            get
            {
                if ((this.mUILeDisplayStartDateLookUpEdit == null))
                {
                    this.mUILeDisplayStartDateLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeDisplayStartDateLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leDisplayStartDate";
                    this.mUILeDisplayStartDateLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUILeDisplayStartDateLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILeDisplayStartDateLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAvdelingsoppsettWindow : DXWindow
    {
        
        public UIAvdelingsoppsettWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Avdelingsoppsett";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UIRibbonViewHost1Custom UIRibbonViewHost1Custom
        {
            get
            {
                if ((this.mUIRibbonViewHost1Custom == null))
                {
                    this.mUIRibbonViewHost1Custom = new UIRibbonViewHost1Custom(this);
                }
                return this.mUIRibbonViewHost1Custom;
            }
        }
        
        public UIRibbonControl1Ribbon UIRibbonControl1Ribbon
        {
            get
            {
                if ((this.mUIRibbonControl1Ribbon == null))
                {
                    this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon(this);
                }
                return this.mUIRibbonControl1Ribbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonViewHost1Custom mUIRibbonViewHost1Custom;
        
        private UIRibbonControl1Ribbon mUIRibbonControl1Ribbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonViewHost1Custom : DXTestControl
    {
        
        public UIRibbonViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UIContextViewCustom UIContextViewCustom
        {
            get
            {
                if ((this.mUIContextViewCustom == null))
                {
                    this.mUIContextViewCustom = new UIContextViewCustom(this);
                }
                return this.mUIContextViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIContextViewCustom mUIContextViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContextViewCustom : DXTestControl
    {
        
        public UIContextViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ContextView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ContextView";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UISplitContainerControSplitContainerControl UISplitContainerControSplitContainerControl
        {
            get
            {
                if ((this.mUISplitContainerControSplitContainerControl == null))
                {
                    this.mUISplitContainerControSplitContainerControl = new UISplitContainerControSplitContainerControl(this);
                }
                return this.mUISplitContainerControSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UISplitContainerControSplitContainerControl mUISplitContainerControSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitContainerControSplitContainerControl : DXSplitContainerControl
    {
        
        public UISplitContainerControSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitContainerControl";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient : DXTestControl
    {
        
        public UISplitGroupPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "splitContainerControl1SplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UIRibbonViewHost1Custom1 UIRibbonViewHost1Custom
        {
            get
            {
                if ((this.mUIRibbonViewHost1Custom == null))
                {
                    this.mUIRibbonViewHost1Custom = new UIRibbonViewHost1Custom1(this);
                }
                return this.mUIRibbonViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonViewHost1Custom1 mUIRibbonViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonViewHost1Custom1 : DXTestControl
    {
        
        public UIRibbonViewHost1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UITabViewCustom UITabViewCustom
        {
            get
            {
                if ((this.mUITabViewCustom == null))
                {
                    this.mUITabViewCustom = new UITabViewCustom(this);
                }
                return this.mUITabViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UITabViewCustom mUITabViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabViewCustom : DXTestControl
    {
        
        public UITabViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "TabView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabView";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UITabControlViewHost1TabList UITabControlViewHost1TabList
        {
            get
            {
                if ((this.mUITabControlViewHost1TabList == null))
                {
                    this.mUITabControlViewHost1TabList = new UITabControlViewHost1TabList(this);
                }
                return this.mUITabControlViewHost1TabList;
            }
        }
        #endregion
        
        #region Fields
        private UITabControlViewHost1TabList mUITabControlViewHost1TabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlViewHost1TabList : DXTestControl
    {
        
        public UITabControlViewHost1TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader0";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage1
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage1 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage1 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader1";
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage1.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage1;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage2
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage2 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage2 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage2.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader2";
                    this.mUIXtraTabControlHeaderTabPage2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage2.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage2;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage3
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage3 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage3 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage3.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader3";
                    this.mUIXtraTabControlHeaderTabPage3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage3.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage3;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage4
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage4 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage4 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage4.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader4";
                    this.mUIXtraTabControlHeaderTabPage4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage4.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage4;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage5
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage5 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage5 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage5.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader5";
                    this.mUIXtraTabControlHeaderTabPage5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage5.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage5;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage6
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage6 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage6 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage6.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader6";
                    this.mUIXtraTabControlHeaderTabPage6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage6.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage6;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage7
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage7 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage7 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage7.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader7";
                    this.mUIXtraTabControlHeaderTabPage7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage7.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage7;
            }
        }
        
        public UIViewTabPageClient UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage1;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage2;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage3;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage4;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage5;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage6;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage7;
        
        private UIViewTabPageClient mUIViewTabPageClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient : DXTestControl
    {
        
        public UIViewTabPageClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1ViewTabPage[7]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UIWorkPlanDepartmentSeCustom UIWorkPlanDepartmentSeCustom
        {
            get
            {
                if ((this.mUIWorkPlanDepartmentSeCustom == null))
                {
                    this.mUIWorkPlanDepartmentSeCustom = new UIWorkPlanDepartmentSeCustom(this);
                }
                return this.mUIWorkPlanDepartmentSeCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIWorkPlanDepartmentSeCustom mUIWorkPlanDepartmentSeCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWorkPlanDepartmentSeCustom : DXTestControl
    {
        
        public UIWorkPlanDepartmentSeCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "WorkPlanDepartmentSetupView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkPlanDepartmentSetupView";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UIGroupControl3Client UIGroupControl3Client
        {
            get
            {
                if ((this.mUIGroupControl3Client == null))
                {
                    this.mUIGroupControl3Client = new UIGroupControl3Client(this);
                }
                return this.mUIGroupControl3Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControl3Client mUIGroupControl3Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControl3Client : DXTestControl
    {
        
        public UIGroupControl3Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkAdjustF3StaticValCheckBox
        {
            get
            {
                if ((this.mUIChkAdjustF3StaticValCheckBox == null))
                {
                    this.mUIChkAdjustF3StaticValCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkAdjustF3StaticValCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkAdjustF3StaticValueToPositionPercent";
                    this.mUIChkAdjustF3StaticValCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIChkAdjustF3StaticValCheckBox.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIChkAdjustF3StaticValCheckBox;
            }
        }
        
        public UIRgCalculateNormalHouRadioGroup UIRgCalculateNormalHouRadioGroup
        {
            get
            {
                if ((this.mUIRgCalculateNormalHouRadioGroup == null))
                {
                    this.mUIRgCalculateNormalHouRadioGroup = new UIRgCalculateNormalHouRadioGroup(this);
                }
                return this.mUIRgCalculateNormalHouRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkAdjustF3StaticValCheckBox;
        
        private UIRgCalculateNormalHouRadioGroup mUIRgCalculateNormalHouRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRgCalculateNormalHouRadioGroup : DXRadioGroup
    {
        
        public UIRgCalculateNormalHouRadioGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculateNormalHoursOnRedDays";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroup";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public DXRadioButton UIRadioGroupItemRadioButton
        {
            get
            {
                if ((this.mUIRadioGroupItemRadioButton == null))
                {
                    this.mUIRadioGroupItemRadioButton = new DXRadioButton(this);
                    #region Search Criteria
                    this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculateNormalHoursOnRedDaysItem[0]";
                    this.mUIRadioGroupItemRadioButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroupItem";
                    this.mUIRadioGroupItemRadioButton.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIRadioGroupItemRadioButton;
            }
        }
        
        public DXRadioButton UIRadioGroupItemRadioButton1
        {
            get
            {
                if ((this.mUIRadioGroupItemRadioButton1 == null))
                {
                    this.mUIRadioGroupItemRadioButton1 = new DXRadioButton(this);
                    #region Search Criteria
                    this.mUIRadioGroupItemRadioButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculateNormalHoursOnRedDaysItem[1]";
                    this.mUIRadioGroupItemRadioButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroupItem";
                    this.mUIRadioGroupItemRadioButton1.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIRadioGroupItemRadioButton1;
            }
        }
        
        public DXRadioButton UIRadioGroupItemRadioButton2
        {
            get
            {
                if ((this.mUIRadioGroupItemRadioButton2 == null))
                {
                    this.mUIRadioGroupItemRadioButton2 = new DXRadioButton(this);
                    #region Search Criteria
                    this.mUIRadioGroupItemRadioButton2.SearchProperties[DXTestControl.PropertyNames.Name] = "rgCalculateNormalHoursOnRedDaysItem[2]";
                    this.mUIRadioGroupItemRadioButton2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroupItem";
                    this.mUIRadioGroupItemRadioButton2.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUIRadioGroupItemRadioButton2;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioButton mUIRadioGroupItemRadioButton;
        
        private DXRadioButton mUIRadioGroupItemRadioButton1;
        
        private DXRadioButton mUIRadioGroupItemRadioButton2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControl1Ribbon : DXRibbon
    {
        
        public UIRibbonControl1Ribbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage mUIRpHomeRibbonPage;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public UIRpgHjemRibbonPageGroup UIRpgHjemRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgHjemRibbonPageGroup == null))
                {
                    this.mUIRpgHjemRibbonPageGroup = new UIRpgHjemRibbonPageGroup(this);
                }
                return this.mUIRpgHjemRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgHjemRibbonPageGroup mUIRpgHjemRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgHjemRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgHjemRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgHjem";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Avdelingsoppsett");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILagreRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILagreRibbonBaseButtonItem == null))
                {
                    this.mUILagreRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiSave";
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILagreRibbonBaseButtonItem.WindowTitles.Add("Avdelingsoppsett");
                    #endregion
                }
                return this.mUILagreRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILagreRibbonBaseButtonItem;
        #endregion
    }
}
