// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _040_Beregningsregler_grunnlag_deltid_pr_uke_avvik_uten_ot_GATW_3560
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CheckAbsenceAddedStep12 - Use 'CheckAbsenceAddedStep12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAbsenceAddedStep12()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBottomPanelDockPanel.UIFraværDockPanel.UIControlContainerCustom.UIGcAbsenceColumnTable.UITurnusEksklForetterkCell;
            #endregion

            // Verify that the 'Text' property of 'Turnus, Ekskl For-/etterkant' cell equals 'Turnus, Ekskl For-/etterkant'
            Assert.AreEqual(this.CheckAbsenceAddedStep12ExpectedValues.UITurnusEksklForetterkCellText, uITurnusEksklForetterkCell.Text);
        }
        
        /// <summary>
        /// CheckRecalcValuesStep10 - Use 'CheckRecalcValuesStep10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRecalcValuesStep10()
        {
            #region Variable Declarations
            DXCell uIItem05112023Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem05112023Cell;
            DXCell uIOvertidEkstravaktCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIOvertidEkstravaktCell;
            DXCell uIItem200TimelønnCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem200TimelønnCell;
            DXCell uIItem800Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem800Cell;
            DXCell uIItem310Overtid100Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem310Overtid100Cell;
            DXCell uIItem450Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem450Cell;
            #endregion

            // Verify that the 'Text' property of '05.11.2023' cell equals '05.11.2023'
            Assert.AreEqual(this.CheckRecalcValuesStep10ExpectedValues.UIItem05112023CellText, uIItem05112023Cell.Text);

            // Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
            Assert.AreEqual(this.CheckRecalcValuesStep10ExpectedValues.UIOvertidEkstravaktCellText, uIOvertidEkstravaktCell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckRecalcValuesStep10ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '8,00' cell equals '7,00'
            Assert.AreEqual(this.CheckRecalcValuesStep10ExpectedValues.UIItem800CellText, uIItem800Cell.Text);

            // Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckRecalcValuesStep10ExpectedValues.UIItem310Overtid100CellText, uIItem310Overtid100Cell.Text);

            // Verify that the 'Text' property of '4,50' cell equals '1,00'
            Assert.AreEqual(this.CheckRecalcValuesStep10ExpectedValues.UIItem450CellText, uIItem450Cell.Text);
        }
        
        /// <summary>
        /// CheckRecalcValuesStep13 - Use 'CheckRecalcValuesStep13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRecalcValuesStep13()
        {
            #region Variable Declarations
            DXCell uIItem05112023Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem05112023Cell;
            DXCell uIOvertidEkstravaktCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIOvertidEkstravaktCell;
            DXCell uIItem200TimelønnCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem200TimelønnCell;
            DXCell uIItem800Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem800Cell;
            #endregion

            // Verify that the 'Text' property of '05.11.2023' cell equals '09.11.2023'
            Assert.AreEqual(this.CheckRecalcValuesStep13ExpectedValues.UIItem05112023CellText, uIItem05112023Cell.Text);

            // Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
            Assert.AreEqual(this.CheckRecalcValuesStep13ExpectedValues.UIOvertidEkstravaktCellText, uIOvertidEkstravaktCell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckRecalcValuesStep13ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '8,00' cell equals '8,00'
            Assert.AreEqual(this.CheckRecalcValuesStep13ExpectedValues.UIItem800CellText, uIItem800Cell.Text);
        }
        
        /// <summary>
        /// CheckRecalcValuesStep15 - Use 'CheckRecalcValuesStep15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRecalcValuesStep15()
        {
            #region Variable Declarations
            DXCell uIItem05112023Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem05112023Cell;
            DXCell uIOvertidEkstravaktCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIOvertidEkstravaktCell;
            DXCell uIItem200TimelønnCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem200TimelønnCell;
            DXCell uIItem800Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem800Cell;
            DXCell uIItem400LørSøndagstilCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem400LørSøndagstilCell;
            DXCell uIItem800Cell1 = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem800Cell1;
            #endregion

            // Verify that the 'Text' property of '05.11.2023' cell equals '09.11.2023'
            Assert.AreEqual(this.CheckRecalcValuesStep15ExpectedValues.UIItem05112023CellText, uIItem05112023Cell.Text);

            // Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
            Assert.AreEqual(this.CheckRecalcValuesStep15ExpectedValues.UIOvertidEkstravaktCellText, uIOvertidEkstravaktCell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckRecalcValuesStep15ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '8,00' cell equals '1,50'
            Assert.AreEqual(this.CheckRecalcValuesStep15ExpectedValues.UIItem800CellText, uIItem800Cell.Text);

            // Verify that the 'Text' property of '400 - Lør./Søndagstillegg' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckRecalcValuesStep15ExpectedValues.UIItem400LørSøndagstilCellText, uIItem400LørSøndagstilCell.Text);

            // Verify that the 'Text' property of '8,00' cell equals '6,50'
            Assert.AreEqual(this.CheckRecalcValuesStep15ExpectedValues.UIItem800Cell1Text, uIItem800Cell1.Text);
        }
        
        /// <summary>
        /// CheckRecalcValuesStep5 - Use 'CheckRecalcValuesStep5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRecalcValuesStep5()
        {
            #region Variable Declarations
            DXCell uIItem05112023Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem05112023Cell;
            DXCell uIOvertidEkstravaktCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIOvertidEkstravaktCell;
            DXCell uIItem200TimelønnCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem200TimelønnCell;
            DXCell uIItem800Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem800Cell;
            DXCell uIItem400LørSøndagstilCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem400LørSøndagstilCell;
            DXCell uIItem800Cell1 = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem800Cell1;
            #endregion

            // Verify that the 'Text' property of '05.11.2023' cell equals '05.11.2023'
            Assert.AreEqual(this.CheckRecalcValuesStep5ExpectedValues.UIItem05112023CellText, uIItem05112023Cell.Text);

            // Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
            Assert.AreEqual(this.CheckRecalcValuesStep5ExpectedValues.UIOvertidEkstravaktCellText, uIOvertidEkstravaktCell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckRecalcValuesStep5ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '8,00' cell equals '8,00'
            Assert.AreEqual(this.CheckRecalcValuesStep5ExpectedValues.UIItem800CellText, uIItem800Cell.Text);

            // Verify that the 'Text' property of '400 - Lør./Søndagstillegg' cell equals '400 - Lør./Søndagstillegg'
            Assert.AreEqual(this.CheckRecalcValuesStep5ExpectedValues.UIItem400LørSøndagstilCellText, uIItem400LørSøndagstilCell.Text);

            // Verify that the 'Text' property of '8,00' cell equals '8,00'
            Assert.AreEqual(this.CheckRecalcValuesStep5ExpectedValues.UIItem800Cell1Text, uIItem800Cell1.Text);
        }
        
        /// <summary>
        /// CheckRecalcValuesStep7 - Use 'CheckRecalcValuesStep7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRecalcValuesStep7()
        {
            #region Variable Declarations
            DXCell uIItem05112023Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem05112023Cell;
            DXCell uIOvertidEkstravaktCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIOvertidEkstravaktCell;
            DXCell uIItem200TimelønnCell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem200TimelønnCell;
            DXCell uIItem800Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem800Cell;
            DXCell uIItem310Overtid100Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem310Overtid100Cell;
            DXCell uIItem450Cell = this.UIRekalkuleringWindow.UIPcContentClient.UIGcRecalculationTable.UIItem450Cell;
            #endregion

            // Verify that the 'Text' property of '05.11.2023' cell equals '05.11.2023'
            Assert.AreEqual(this.CheckRecalcValuesStep7ExpectedValues.UIItem05112023CellText, uIItem05112023Cell.Text);

            // Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
            Assert.AreEqual(this.CheckRecalcValuesStep7ExpectedValues.UIOvertidEkstravaktCellText, uIOvertidEkstravaktCell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckRecalcValuesStep7ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '8,00' cell equals '3,50'
            Assert.AreEqual(this.CheckRecalcValuesStep7ExpectedValues.UIItem800CellText, uIItem800Cell.Text);

            // Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckRecalcValuesStep7ExpectedValues.UIItem310Overtid100CellText, uIItem310Overtid100Cell.Text);

            // Verify that the 'Text' property of '4,50' cell equals '4,50'
            Assert.AreEqual(this.CheckRecalcValuesStep7ExpectedValues.UIItem450CellText, uIItem450Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep1 - Use 'CheckValuesStep1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep1()
        {
            #region Variable Declarations
            DXCell uIItem310Overtid100Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem310Overtid100Cell;
            DXCell uIItem400Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell;
            DXCell uIItem300Overtid50Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem400Cell1 = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell1;
            #endregion

            // Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep1ExpectedValues.UIItem310Overtid100CellText, uIItem310Overtid100Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '4,00'
            Assert.AreEqual(this.CheckValuesStep1ExpectedValues.UIItem400CellText, uIItem400Cell.Text);

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep1ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '4,00'
            Assert.AreEqual(this.CheckValuesStep1ExpectedValues.UIItem400Cell1Text, uIItem400Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep11 - Use 'CheckValuesStep11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep11()
        {
            #region Variable Declarations
            DXCell uIItem310Overtid100Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem310Overtid100Cell;
            DXCell uIItem400Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell;
            DXCell uIItem300Overtid50Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem400Cell1 = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell1;
            #endregion

            // Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep11ExpectedValues.UIItem310Overtid100CellText, uIItem310Overtid100Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '6,50'
            Assert.AreEqual(this.CheckValuesStep11ExpectedValues.UIItem400CellText, uIItem400Cell.Text);

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckValuesStep11ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '1,50'
            Assert.AreEqual(this.CheckValuesStep11ExpectedValues.UIItem400Cell1Text, uIItem400Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep13 - Use 'CheckValuesStep13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep13()
        {
            #region Variable Declarations
            DXCell uIItem01112023Cell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcSalaryClient.UITcDeductPaymentTabList.UITabDeductPaymentClient.UIGcPaymentLinesTable.UIItem01112023Cell;
            DXCell uIItem200TimelønnCell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcSalaryClient.UITcDeductPaymentTabList.UITabDeductPaymentClient.UIGcPaymentLinesTable.UIItem200TimelønnCell;
            DXCell uIItem8Cell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcSalaryClient.UITcDeductPaymentTabList.UITabDeductPaymentClient.UIGcPaymentLinesTable.UIItem8Cell;
            #endregion

            // Verify that the 'Text' property of '01.11.2023' cell equals '06.11.2023'
            Assert.AreEqual(this.CheckValuesStep13ExpectedValues.UIItem01112023CellText, uIItem01112023Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckValuesStep13ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-8' cell equals '-8'
            Assert.AreEqual(this.CheckValuesStep13ExpectedValues.UIItem8CellText, uIItem8Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep17 - Use 'CheckValuesStep17ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep17()
        {
            #region Variable Declarations
            DXCell uIItem310Overtid100Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem310Overtid100Cell;
            DXCell uIItem400Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell;
            DXCell uIItem300Overtid50Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem400Cell1 = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell1;
            DXGroupRow uIGridControlGroupRowGroupRow = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIGridControlGroupRowGroupRow;
            #endregion

            // Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep17ExpectedValues.UIItem310Overtid100CellText, uIItem310Overtid100Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '4,00'
            Assert.AreEqual(this.CheckValuesStep17ExpectedValues.UIItem400CellText, uIItem400Cell.Text);

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep17ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '4,00'
            Assert.AreEqual(this.CheckValuesStep17ExpectedValues.UIItem400Cell1Text, uIItem400Cell1.Text);

            // Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals 'T-Overtid i etterkant av vakt 100%'
            Assert.AreEqual(this.CheckValuesStep17ExpectedValues.UIGridControlGroupRowGroupRowValueAsString, uIGridControlGroupRowGroupRow.ValueAsString);
        }
        
        /// <summary>
        /// CheckValuesStep18 - Use 'CheckValuesStep18ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep18()
        {
            #region Variable Declarations
            DXCell uIItem310Overtid100Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem310Overtid100Cell;
            DXCell uIItem400Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell;
            #endregion

            // Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep18ExpectedValues.UIItem310Overtid100CellText, uIItem310Overtid100Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '8,00'
            Assert.AreEqual(this.CheckValuesStep18ExpectedValues.UIItem400CellText, uIItem400Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep2 - Use 'CheckValuesStep2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep2()
        {
            #region Variable Declarations
            DXCell uIItem310Overtid100Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem310Overtid100Cell;
            DXCell uIItem400Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell;
            DXCell uIItem300Overtid50Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem400Cell1 = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell1;
            #endregion

            // Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIItem310Overtid100CellText, uIItem310Overtid100Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '4,00'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIItem400CellText, uIItem400Cell.Text);

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '4,00'
            Assert.AreEqual(this.CheckValuesStep2ExpectedValues.UIItem400Cell1Text, uIItem400Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep3 - Use 'CheckValuesStep3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep3()
        {
            #region Variable Declarations
            DXCell uIItem300Overtid50Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem300Overtid50Cell;
            DXCell uIItem400Cell1 = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell1;
            #endregion

            // Verify that the 'Text' property of '300 - Overtid 50%' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckValuesStep3ExpectedValues.UIItem300Overtid50CellText, uIItem300Overtid50Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '8,00'
            Assert.AreEqual(this.CheckValuesStep3ExpectedValues.UIItem400Cell1Text, uIItem400Cell1.Text);
        }
        
        /// <summary>
        /// CheckValuesStep4 - Use 'CheckValuesStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep4()
        {
            #region Variable Declarations
            DXCell uIItem310Overtid100Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem310Overtid100Cell;
            DXCell uIItem400Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell;
            DXCell uIItem200TimelønnCell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem200TimelønnCell;
            DXCell uIItem350Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem350Cell;
            #endregion

            // Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
            Assert.AreEqual(this.CheckValuesStep4ExpectedValues.UIItem310Overtid100CellText, uIItem310Overtid100Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '4,50'
            Assert.AreEqual(this.CheckValuesStep4ExpectedValues.UIItem400CellText, uIItem400Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckValuesStep4ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '3,50' cell equals '3,50'
            Assert.AreEqual(this.CheckValuesStep4ExpectedValues.UIItem350CellText, uIItem350Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep5 - Use 'CheckValuesStep5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep5()
        {
            #region Variable Declarations
            DXCell uIItem01112023Cell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcSalaryClient.UITcDeductPaymentTabList.UITabDeductPaymentClient.UIGcPaymentLinesTable.UIItem01112023Cell;
            DXCell uIItem200TimelønnCell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcSalaryClient.UITcDeductPaymentTabList.UITabDeductPaymentClient.UIGcPaymentLinesTable.UIItem200TimelønnCell;
            DXCell uIItem8Cell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcSalaryClient.UITcDeductPaymentTabList.UITabDeductPaymentClient.UIGcPaymentLinesTable.UIItem8Cell;
            #endregion

            // Verify that the 'Text' property of '01.11.2023' cell equals '01.11.2023'
            Assert.AreEqual(this.CheckValuesStep5ExpectedValues.UIItem01112023CellText, uIItem01112023Cell.Text);

            // Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckValuesStep5ExpectedValues.UIItem200TimelønnCellText, uIItem200TimelønnCell.Text);

            // Verify that the 'Text' property of '-8' cell equals '-8'
            Assert.AreEqual(this.CheckValuesStep5ExpectedValues.UIItem8CellText, uIItem8Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep9 - Use 'CheckValuesStep9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep9()
        {
            #region Variable Declarations
            DXCell uIItem310Overtid100Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem310Overtid100Cell;
            DXCell uIItem400Cell = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpSalaryCalcClient.UIGcAccountingLinesTable.UIItem400Cell;
            #endregion

            // Verify that the 'Text' property of '310 - Overtid 100%' cell equals '200 - Timelønn'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem310Overtid100CellText, uIItem310Overtid100Cell.Text);

            // Verify that the 'Text' property of '4,00' cell equals '9,00'
            Assert.AreEqual(this.CheckValuesStep9ExpectedValues.UIItem400CellText, uIItem400Cell.Text);
        }
        
        /// <summary>
        /// CreateWeekSeparationStep16 - Use 'CreateWeekSeparationStep16Params' to pass parameters into this method.
        /// </summary>
        public void CreateWeekSeparationStep16()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIDøgnogukeskilleWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIDøgnogukeskilleWindow.UIItemWindow1.UIItemEdit;
            WinButton uIOKButton = this.UIDøgnogukeskilleWindow.UIItemClient.UIOKButton;
            #endregion

            // Type '27.09.2023' in text box
            uIItemEdit.Text = this.CreateWeekSeparationStep16Params.UIItemEditText;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit, this.CreateWeekSeparationStep16Params.UIItemEditSendKeys, ModifierKeys.None);

            // Type '08:00' in text box
            uIItemEdit1.Text = this.CreateWeekSeparationStep16Params.UIItemEditText1;

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(28, 23));
        }
        
        /// <summary>
        /// DeleteAbsenceStep14
        /// </summary>
        public void DeleteAbsenceStep14()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBottomPanelDockPanel.UIFraværDockPanel.UIControlContainerCustom.UIGcAbsenceColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpMiscRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Slett' RibbonBaseButtonItem
            uISlettRibbonBaseButtonItem.EnsureClickable(new Point(19, 26));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(73, -8));
            Mouse.StopDragging(uISlettRibbonBaseButtonItem, new Point(19, 26));
        }
        
        /// <summary>
        /// DeleteAbsenceStep15
        /// </summary>
        public void DeleteAbsenceStep15()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBottomPanelDockPanel.UIFraværDockPanel.UIControlContainerCustom.UIGcAbsenceColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpMiscRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Slett' RibbonBaseButtonItem
            uISlettRibbonBaseButtonItem.EnsureClickable(new Point(26, 15));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(84, 9));
            Mouse.StopDragging(uISlettRibbonBaseButtonItem, new Point(26, 15));
        }
        
        /// <summary>
        /// DeleteAbsenceStep7
        /// </summary>
        public void DeleteAbsenceStep7()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBottomPanelDockPanel.UIFraværDockPanel.UIControlContainerCustom.UIGcAbsenceColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpMiscRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Slett' RibbonBaseButtonItem
            uISlettRibbonBaseButtonItem.EnsureClickable(new Point(22, 19));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(81, -16));
            Mouse.StopDragging(uISlettRibbonBaseButtonItem, new Point(22, 19));
        }
        
        /// <summary>
        /// DeleteShiftStep6
        /// </summary>
        public void DeleteShiftStep6()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UINatttiltirsdag001677DockPanel.UIControlContainerCustom.UIGcDayColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpMiscRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Slett' RibbonBaseButtonItem
            uISlettRibbonBaseButtonItem.EnsureClickable(new Point(25, 20));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(62, -4));
            Mouse.StopDragging(uISlettRibbonBaseButtonItem, new Point(25, 20));
        }
        
        /// <summary>
        /// DeleteShiftStep6_2
        /// </summary>
        public void DeleteShiftStep6_2()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UITurnusEksklForetterkCell1;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpMiscRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Slett' RibbonBaseButtonItem
            uISlettRibbonBaseButtonItem.EnsureClickable(new Point(20, 26));
            Mouse.StartDragging(uITurnusEksklForetterkCell1, new Point(125, -6));
            Mouse.StopDragging(uISlettRibbonBaseButtonItem, new Point(20, 26));
        }
        
        /// <summary>
        /// DragEksklTurnusToExtraStep1
        /// </summary>
        public void DragEksklTurnusToExtraStep1()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Ekstra' RibbonBaseButtonItem
            uIEkstraRibbonBaseButtonItem.EnsureClickable(new Point(24, 18));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(25, 7));
            Mouse.StopDragging(uIEkstraRibbonBaseButtonItem, new Point(24, 18));
        }
        
        /// <summary>
        /// DragEksklTurnusToExtraStep11
        /// </summary>
        public void DragEksklTurnusToExtraStep11()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UITurnusEksklForetterkCell1;
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Ekstra' RibbonBaseButtonItem
            uIEkstraRibbonBaseButtonItem.EnsureClickable(new Point(23, 21));
            Mouse.StartDragging(uITurnusEksklForetterkCell1, new Point(-55, -5));
            Mouse.StopDragging(uIEkstraRibbonBaseButtonItem, new Point(23, 21));
        }
        
        /// <summary>
        /// DragEksklTurnusToExtraStep17
        /// </summary>
        public void DragEksklTurnusToExtraStep17()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UITurnusEksklForetterkCell1;
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Ekstra' RibbonBaseButtonItem
            uIEkstraRibbonBaseButtonItem.EnsureClickable(new Point(18, 15));
            Mouse.StartDragging(uITurnusEksklForetterkCell1, new Point(-153, -26));
            Mouse.StopDragging(uIEkstraRibbonBaseButtonItem, new Point(18, 15));
        }
        
        /// <summary>
        /// DragEksklTurnusToExtraStep2
        /// </summary>
        public void DragEksklTurnusToExtraStep2()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Ekstra' RibbonBaseButtonItem
            uIEkstraRibbonBaseButtonItem.EnsureClickable(new Point(23, 18));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(110, -2));
            Mouse.StopDragging(uIEkstraRibbonBaseButtonItem, new Point(23, 18));
        }
        
        /// <summary>
        /// DragEksklTurnusToExtraStep3
        /// </summary>
        public void DragEksklTurnusToExtraStep3()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Ekstra' RibbonBaseButtonItem
            uIEkstraRibbonBaseButtonItem.EnsureClickable(new Point(12, 15));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(-65, -7));
            Mouse.StopDragging(uIEkstraRibbonBaseButtonItem, new Point(12, 15));
        }
        
        /// <summary>
        /// DragEksklTurnusToExtraStep4
        /// </summary>
        public void DragEksklTurnusToExtraStep4()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Ekstra' RibbonBaseButtonItem
            uIEkstraRibbonBaseButtonItem.EnsureClickable(new Point(21, 18));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(-37, 2));
            Mouse.StopDragging(uIEkstraRibbonBaseButtonItem, new Point(21, 18));
        }
        
        /// <summary>
        /// DragEksklTurnusToExtraStep9
        /// </summary>
        public void DragEksklTurnusToExtraStep9()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UITurnusEksklForetterkCell1;
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Ekstra' RibbonBaseButtonItem
            uIEkstraRibbonBaseButtonItem.EnsureClickable(new Point(22, 19));
            Mouse.StartDragging(uITurnusEksklForetterkCell1, new Point(34, 6));
            Mouse.StopDragging(uIEkstraRibbonBaseButtonItem, new Point(22, 19));
        }
        
        /// <summary>
        /// DragEksklTurnusToToAbsenceStep12
        /// </summary>
        public void DragEksklTurnusToToAbsenceStep12()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UINatttiltirsdag001677DockPanel.UIControlContainerCustom.UIGcDayColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uIFraværRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIFraværRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Fravær' RibbonBaseButtonItem
            uIFraværRibbonBaseButtonItem.EnsureClickable(new Point(25, 23));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(56, 4));
            Mouse.StopDragging(uIFraværRibbonBaseButtonItem, new Point(25, 23));
        }
        
        /// <summary>
        /// DragEksklTurnusToToAbsenceStep13
        /// </summary>
        public void DragEksklTurnusToToAbsenceStep13()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UINatttiltirsdag001677DockPanel.UIControlContainerCustom.UIGcDayColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uIFraværRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIFraværRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Fravær' RibbonBaseButtonItem
            uIFraværRibbonBaseButtonItem.EnsureClickable(new Point(21, 23));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(47, 7));
            Mouse.StopDragging(uIFraværRibbonBaseButtonItem, new Point(21, 23));
        }
        
        /// <summary>
        /// DragEksklTurnusToToAbsenceStep5
        /// </summary>
        public void DragEksklTurnusToToAbsenceStep5()
        {
            #region Variable Declarations
            DXCell uITurnusEksklForetterkCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UITurnusEksklForetterkCell;
            DXRibbonButtonItem uIFraværRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIFraværRibbonBaseButtonItem;
            #endregion

            // Move 'Turnus, Ekskl For-/etterkant' cell to 'Fravær' RibbonBaseButtonItem
            uIFraværRibbonBaseButtonItem.EnsureClickable(new Point(19, 23));
            Mouse.StartDragging(uITurnusEksklForetterkCell, new Point(98, -29));
            Mouse.StopDragging(uIFraværRibbonBaseButtonItem, new Point(19, 23));
        }
        
        /// <summary>
        /// SelectEkskl
        /// </summary>
        public void SelectEkskl()
        {
            #region Variable Declarations
            WinClient uIAnsatteClient = this.UIGatWindow.UIItemWindow.UIAnsatteClient;
            #endregion

            // Click 'Ansatte' client
            Mouse.Click(uIAnsatteClient, new Point(71, 44));
        }
        
        /// <summary>
        /// SelectEksklTurnus - Use 'SelectEksklTurnusParams' to pass parameters into this method.
        /// </summary>
        public void SelectEksklTurnus()
        {
            #region Variable Declarations
            DXLookUpEdit uICbEmploymentLookUpEdit = this.UIMerarbeidovertidWindow.UIPanClientClient.UINbMenuNavBar.UINbgccEmployeeScrollableControl.UICbEmploymentLookUpEdit;
            DXCell uIEksklForetterkantCell = this.UIMerarbeidovertidWindow.UIPanClientClient.UINbMenuNavBar.UINbgccEmployeeScrollableControl.UICbEmploymentLookUpEdit.UIPopupSearchLookUpEdiWindow.UISearchEditLookUpPopuCustom.UILCCustom.UILcMainLayoutGroup.UILciGridLayoutControlItem.UIGridControlTable.UIEksklForetterkantCell;
            #endregion

            // Type 'Gatsoft.Gat.DataStructures.SimpleEmployment' in 'cbEmployment' LookUpEdit
            //ValueTypeName
            uICbEmploymentLookUpEdit.ValueTypeName = this.SelectEksklTurnusParams.UICbEmploymentLookUpEditValueTypeName;

            // Click 'Ekskl For-/etterkant' cell
            Mouse.Click(uIEksklForetterkantCell, new Point(64, 7));
        }
        
        /// <summary>
        /// SetRulesetValuesStep19 - Use 'SetRulesetValuesStep19Params' to pass parameters into this method.
        /// </summary>
        public void SetRulesetValuesStep19()
        {
            #region Variable Declarations
            WinClient uIItemClient = this.UIRegelsettWindow.UIItemWindow.UIItemClient;
            WinClient uIItemClient1 = this.UIRegelsettWindow.UIRegelsettClient.UIItemClient;
            WinComboBox uIItemComboBox = this.UIRegelsettWindow.UIItemWindow1.UIItemComboBox;
            WinEdit uIItemEdit = this.UIRegelsettWindow.UIItem42Window.UIItemEdit;
            WinButton uIOKButton = this.UIRegelsettWindow.UIItemClient.UIOKButton;
            WinClient uIItemClient2 = this.UIRegelsettWindow.UIItemClient1.UIItemClient;
            #endregion

            // Click client
            Mouse.Click(uIItemClient, new Point(28, 205));

            // Click client
            Mouse.Click(uIItemClient1, new Point(94, 28));

            // Select 'Beregning pr. uke (f.eks. 35,5 t)' in combo box
            uIItemComboBox.SelectedItem = this.SetRulesetValuesStep19Params.UIItemComboBoxSelectedItem;

            // Type '35,5' in text box
            uIItemEdit.Text = this.SetRulesetValuesStep19Params.UIItemEditText;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit, this.SetRulesetValuesStep19Params.UIItemEditSendKeys, ModifierKeys.None);

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(28, 24));

            // Click client
            Mouse.Click(uIItemClient2, new Point(335, 28));
        }
        
        /// <summary>
        /// SetRulesetValuesStep8 - Use 'SetRulesetValuesStep8Params' to pass parameters into this method.
        /// </summary>
        public void SetRulesetValuesStep8()
        {
            #region Variable Declarations
            WinClient uIItemClient = this.UIRegelsettWindow.UIItemWindow.UIItemClient;
            WinClient uIItemClient1 = this.UIRegelsettWindow.UIRegelsettClient.UIItemClient;
            WinComboBox uIItemComboBox = this.UIRegelsettWindow.UIItemWindow1.UIItemComboBox;
            WinEdit uIItemEdit = this.UIRegelsettWindow.UIItem42Window.UIItemEdit;
            WinButton uIOKButton = this.UIRegelsettWindow.UIItemClient.UIOKButton;
            WinClient uIItemClient2 = this.UIRegelsettWindow.UIItemClient1.UIItemClient;
            #endregion

            // Click client
            Mouse.Click(uIItemClient, new Point(36, 210));

            // Click client
            Mouse.Click(uIItemClient1, new Point(91, 36));

            // Select 'Snitt pr. turnusperiode' in combo box
            uIItemComboBox.SelectedItem = this.SetRulesetValuesStep8Params.UIItemComboBoxSelectedItem;

            // Type '48' in text box
            uIItemEdit.Text = this.SetRulesetValuesStep8Params.UIItemEditText;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(29, 32));

            // Click client
            Mouse.Click(uIItemClient2, new Point(345, 30));
        }
        
        /// <summary>
        /// CheckValuesStep4_2 - Use 'CheckValuesStep4_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep4_2()
        {
            #region Variable Declarations
            DXGroupRow uIGridControlGroupRowGroupRow = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpShiftCalculationBaClient.UIVhShiftCalculationBaCustom.UIPcViewClient.UIWeekSumPeriodsViewCustom.UIGcShiftsTable.UIGridControlGroupRowGroupRow;
            #endregion

            // Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals '(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 32t + 8t = 40t / 35,5t'
            Assert.AreEqual(this.CheckValuesStep4_2ExpectedValues.UIGridControlGroupRowGroupRowValueAsString, uIGridControlGroupRowGroupRow.ValueAsString);
        }
        
        /// <summary>
        /// CheckValuesStep3_2 - Use 'CheckValuesStep3_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep3_2()
        {
            #region Variable Declarations
            DXGroupRow uIGridControlGroupRowGroupRow = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpShiftCalculationBaClient.UIVhShiftCalculationBaCustom.UIPcViewClient.UIWeekSumPeriodsViewCustom.UIGcShiftsTable.UIGridControlGroupRowGroupRow;
            #endregion

            // Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals '(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 24t + 8t = 32t / 35,5t'
            Assert.AreEqual(this.CheckValuesStep3_2ExpectedValues.UIGridControlGroupRowGroupRowValueAsString, uIGridControlGroupRowGroupRow.ValueAsString);
        }
        
        /// <summary>
        /// CheckValuesStep4_2_org - Use 'CheckValuesStep4_2_orgExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep4_2_org()
        {
            #region Variable Declarations
            DXGroupRow uIGridControlGroupRowGroupRow = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpClockTypeCalculatiClient.UIGcClockTypeCalculatiTable.UIGridControlGroupRowGroupRow;
            #endregion

            // Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals '(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 32t + 8t = 40t / 35,5t'
            Assert.AreEqual(this.CheckValuesStep4_2_orgExpectedValues.UIGridControlGroupRowGroupRowValueAsString, uIGridControlGroupRowGroupRow.ValueAsString);
        }
        
        /// <summary>
        /// CheckValuesStep3_2_org - Use 'CheckValuesStep3_2_orgExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep3_2_org()
        {
            #region Variable Declarations
            DXGroupRow uIGridControlGroupRowGroupRow = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UITpClockTypeCalculatiClient.UIGcClockTypeCalculatiTable.UIGridControlGroupRowGroupRow;
            #endregion

            // Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals '(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 24t + 8t = 32t / 35,5t'
            Assert.AreEqual(this.CheckValuesStep3_2_orgExpectedValues.UIGridControlGroupRowGroupRowValueAsString, uIGridControlGroupRowGroupRow.ValueAsString);
        }
        
        #region Properties
        public virtual CheckAbsenceAddedStep12ExpectedValues CheckAbsenceAddedStep12ExpectedValues
        {
            get
            {
                if ((this.mCheckAbsenceAddedStep12ExpectedValues == null))
                {
                    this.mCheckAbsenceAddedStep12ExpectedValues = new CheckAbsenceAddedStep12ExpectedValues();
                }
                return this.mCheckAbsenceAddedStep12ExpectedValues;
            }
        }
        
        public virtual CheckRecalcValuesStep10ExpectedValues CheckRecalcValuesStep10ExpectedValues
        {
            get
            {
                if ((this.mCheckRecalcValuesStep10ExpectedValues == null))
                {
                    this.mCheckRecalcValuesStep10ExpectedValues = new CheckRecalcValuesStep10ExpectedValues();
                }
                return this.mCheckRecalcValuesStep10ExpectedValues;
            }
        }
        
        public virtual CheckRecalcValuesStep13ExpectedValues CheckRecalcValuesStep13ExpectedValues
        {
            get
            {
                if ((this.mCheckRecalcValuesStep13ExpectedValues == null))
                {
                    this.mCheckRecalcValuesStep13ExpectedValues = new CheckRecalcValuesStep13ExpectedValues();
                }
                return this.mCheckRecalcValuesStep13ExpectedValues;
            }
        }
        
        public virtual CheckRecalcValuesStep15ExpectedValues CheckRecalcValuesStep15ExpectedValues
        {
            get
            {
                if ((this.mCheckRecalcValuesStep15ExpectedValues == null))
                {
                    this.mCheckRecalcValuesStep15ExpectedValues = new CheckRecalcValuesStep15ExpectedValues();
                }
                return this.mCheckRecalcValuesStep15ExpectedValues;
            }
        }
        
        public virtual CheckRecalcValuesStep5ExpectedValues CheckRecalcValuesStep5ExpectedValues
        {
            get
            {
                if ((this.mCheckRecalcValuesStep5ExpectedValues == null))
                {
                    this.mCheckRecalcValuesStep5ExpectedValues = new CheckRecalcValuesStep5ExpectedValues();
                }
                return this.mCheckRecalcValuesStep5ExpectedValues;
            }
        }
        
        public virtual CheckRecalcValuesStep7ExpectedValues CheckRecalcValuesStep7ExpectedValues
        {
            get
            {
                if ((this.mCheckRecalcValuesStep7ExpectedValues == null))
                {
                    this.mCheckRecalcValuesStep7ExpectedValues = new CheckRecalcValuesStep7ExpectedValues();
                }
                return this.mCheckRecalcValuesStep7ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep1ExpectedValues CheckValuesStep1ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep1ExpectedValues == null))
                {
                    this.mCheckValuesStep1ExpectedValues = new CheckValuesStep1ExpectedValues();
                }
                return this.mCheckValuesStep1ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep11ExpectedValues CheckValuesStep11ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep11ExpectedValues == null))
                {
                    this.mCheckValuesStep11ExpectedValues = new CheckValuesStep11ExpectedValues();
                }
                return this.mCheckValuesStep11ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep13ExpectedValues CheckValuesStep13ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep13ExpectedValues == null))
                {
                    this.mCheckValuesStep13ExpectedValues = new CheckValuesStep13ExpectedValues();
                }
                return this.mCheckValuesStep13ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep17ExpectedValues CheckValuesStep17ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep17ExpectedValues == null))
                {
                    this.mCheckValuesStep17ExpectedValues = new CheckValuesStep17ExpectedValues();
                }
                return this.mCheckValuesStep17ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep18ExpectedValues CheckValuesStep18ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep18ExpectedValues == null))
                {
                    this.mCheckValuesStep18ExpectedValues = new CheckValuesStep18ExpectedValues();
                }
                return this.mCheckValuesStep18ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep2ExpectedValues CheckValuesStep2ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep2ExpectedValues == null))
                {
                    this.mCheckValuesStep2ExpectedValues = new CheckValuesStep2ExpectedValues();
                }
                return this.mCheckValuesStep2ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep3ExpectedValues CheckValuesStep3ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep3ExpectedValues == null))
                {
                    this.mCheckValuesStep3ExpectedValues = new CheckValuesStep3ExpectedValues();
                }
                return this.mCheckValuesStep3ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep4ExpectedValues CheckValuesStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep4ExpectedValues == null))
                {
                    this.mCheckValuesStep4ExpectedValues = new CheckValuesStep4ExpectedValues();
                }
                return this.mCheckValuesStep4ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep5ExpectedValues CheckValuesStep5ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep5ExpectedValues == null))
                {
                    this.mCheckValuesStep5ExpectedValues = new CheckValuesStep5ExpectedValues();
                }
                return this.mCheckValuesStep5ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep9ExpectedValues CheckValuesStep9ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep9ExpectedValues == null))
                {
                    this.mCheckValuesStep9ExpectedValues = new CheckValuesStep9ExpectedValues();
                }
                return this.mCheckValuesStep9ExpectedValues;
            }
        }
        
        public virtual CreateWeekSeparationStep16Params CreateWeekSeparationStep16Params
        {
            get
            {
                if ((this.mCreateWeekSeparationStep16Params == null))
                {
                    this.mCreateWeekSeparationStep16Params = new CreateWeekSeparationStep16Params();
                }
                return this.mCreateWeekSeparationStep16Params;
            }
        }
        
        public virtual SelectEksklTurnusParams SelectEksklTurnusParams
        {
            get
            {
                if ((this.mSelectEksklTurnusParams == null))
                {
                    this.mSelectEksklTurnusParams = new SelectEksklTurnusParams();
                }
                return this.mSelectEksklTurnusParams;
            }
        }
        
        public virtual SetRulesetValuesStep19Params SetRulesetValuesStep19Params
        {
            get
            {
                if ((this.mSetRulesetValuesStep19Params == null))
                {
                    this.mSetRulesetValuesStep19Params = new SetRulesetValuesStep19Params();
                }
                return this.mSetRulesetValuesStep19Params;
            }
        }
        
        public virtual SetRulesetValuesStep8Params SetRulesetValuesStep8Params
        {
            get
            {
                if ((this.mSetRulesetValuesStep8Params == null))
                {
                    this.mSetRulesetValuesStep8Params = new SetRulesetValuesStep8Params();
                }
                return this.mSetRulesetValuesStep8Params;
            }
        }
        
        public virtual CheckValuesStep4_2ExpectedValues CheckValuesStep4_2ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep4_2ExpectedValues == null))
                {
                    this.mCheckValuesStep4_2ExpectedValues = new CheckValuesStep4_2ExpectedValues();
                }
                return this.mCheckValuesStep4_2ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep3_2ExpectedValues CheckValuesStep3_2ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep3_2ExpectedValues == null))
                {
                    this.mCheckValuesStep3_2ExpectedValues = new CheckValuesStep3_2ExpectedValues();
                }
                return this.mCheckValuesStep3_2ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep4_2_orgExpectedValues CheckValuesStep4_2_orgExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep4_2_orgExpectedValues == null))
                {
                    this.mCheckValuesStep4_2_orgExpectedValues = new CheckValuesStep4_2_orgExpectedValues();
                }
                return this.mCheckValuesStep4_2_orgExpectedValues;
            }
        }
        
        public virtual CheckValuesStep3_2_orgExpectedValues CheckValuesStep3_2_orgExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep3_2_orgExpectedValues == null))
                {
                    this.mCheckValuesStep3_2_orgExpectedValues = new CheckValuesStep3_2_orgExpectedValues();
                }
                return this.mCheckValuesStep3_2_orgExpectedValues;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIMerarbeidovertidWindow UIMerarbeidovertidWindow
        {
            get
            {
                if ((this.mUIMerarbeidovertidWindow == null))
                {
                    this.mUIMerarbeidovertidWindow = new UIMerarbeidovertidWindow();
                }
                return this.mUIMerarbeidovertidWindow;
            }
        }
        
        public UIFraværsregistreringWindow UIFraværsregistreringWindow
        {
            get
            {
                if ((this.mUIFraværsregistreringWindow == null))
                {
                    this.mUIFraværsregistreringWindow = new UIFraværsregistreringWindow();
                }
                return this.mUIFraværsregistreringWindow;
            }
        }
        
        public UIRekalkuleringWindow UIRekalkuleringWindow
        {
            get
            {
                if ((this.mUIRekalkuleringWindow == null))
                {
                    this.mUIRekalkuleringWindow = new UIRekalkuleringWindow();
                }
                return this.mUIRekalkuleringWindow;
            }
        }
        
        public UIRegelsettWindow UIRegelsettWindow
        {
            get
            {
                if ((this.mUIRegelsettWindow == null))
                {
                    this.mUIRegelsettWindow = new UIRegelsettWindow();
                }
                return this.mUIRegelsettWindow;
            }
        }
        
        public UIDøgnogukeskilleWindow UIDøgnogukeskilleWindow
        {
            get
            {
                if ((this.mUIDøgnogukeskilleWindow == null))
                {
                    this.mUIDøgnogukeskilleWindow = new UIDøgnogukeskilleWindow();
                }
                return this.mUIDøgnogukeskilleWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckAbsenceAddedStep12ExpectedValues mCheckAbsenceAddedStep12ExpectedValues;
        
        private CheckRecalcValuesStep10ExpectedValues mCheckRecalcValuesStep10ExpectedValues;
        
        private CheckRecalcValuesStep13ExpectedValues mCheckRecalcValuesStep13ExpectedValues;
        
        private CheckRecalcValuesStep15ExpectedValues mCheckRecalcValuesStep15ExpectedValues;
        
        private CheckRecalcValuesStep5ExpectedValues mCheckRecalcValuesStep5ExpectedValues;
        
        private CheckRecalcValuesStep7ExpectedValues mCheckRecalcValuesStep7ExpectedValues;
        
        private CheckValuesStep1ExpectedValues mCheckValuesStep1ExpectedValues;
        
        private CheckValuesStep11ExpectedValues mCheckValuesStep11ExpectedValues;
        
        private CheckValuesStep13ExpectedValues mCheckValuesStep13ExpectedValues;
        
        private CheckValuesStep17ExpectedValues mCheckValuesStep17ExpectedValues;
        
        private CheckValuesStep18ExpectedValues mCheckValuesStep18ExpectedValues;
        
        private CheckValuesStep2ExpectedValues mCheckValuesStep2ExpectedValues;
        
        private CheckValuesStep3ExpectedValues mCheckValuesStep3ExpectedValues;
        
        private CheckValuesStep4ExpectedValues mCheckValuesStep4ExpectedValues;
        
        private CheckValuesStep5ExpectedValues mCheckValuesStep5ExpectedValues;
        
        private CheckValuesStep9ExpectedValues mCheckValuesStep9ExpectedValues;
        
        private CreateWeekSeparationStep16Params mCreateWeekSeparationStep16Params;
        
        private SelectEksklTurnusParams mSelectEksklTurnusParams;
        
        private SetRulesetValuesStep19Params mSetRulesetValuesStep19Params;
        
        private SetRulesetValuesStep8Params mSetRulesetValuesStep8Params;
        
        private CheckValuesStep4_2ExpectedValues mCheckValuesStep4_2ExpectedValues;
        
        private CheckValuesStep3_2ExpectedValues mCheckValuesStep3_2ExpectedValues;
        
        private CheckValuesStep4_2_orgExpectedValues mCheckValuesStep4_2_orgExpectedValues;
        
        private CheckValuesStep3_2_orgExpectedValues mCheckValuesStep3_2_orgExpectedValues;
        
        private UIGatWindow mUIGatWindow;
        
        private UIMerarbeidovertidWindow mUIMerarbeidovertidWindow;
        
        private UIFraværsregistreringWindow mUIFraværsregistreringWindow;
        
        private UIRekalkuleringWindow mUIRekalkuleringWindow;
        
        private UIRegelsettWindow mUIRegelsettWindow;
        
        private UIDøgnogukeskilleWindow mUIDøgnogukeskilleWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAbsenceAddedStep12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAbsenceAddedStep12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Turnus, Ekskl For-/etterkant' cell equals 'Turnus, Ekskl For-/etterkant'
        /// </summary>
        public string UITurnusEksklForetterkCellText = "Turnus, Ekskl For-/etterkant";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRecalcValuesStep10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRecalcValuesStep10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '05.11.2023' cell equals '05.11.2023'
        /// </summary>
        public string UIItem05112023CellText = "05.11.2023";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
        /// </summary>
        public string UIOvertidEkstravaktCellText = "Overtid/Ekstravakt";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,00' cell equals '7,00'
        /// </summary>
        public string UIItem800CellText = "7,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem310Overtid100CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,50' cell equals '1,00'
        /// </summary>
        public string UIItem450CellText = "1,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRecalcValuesStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRecalcValuesStep13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '05.11.2023' cell equals '09.11.2023'
        /// </summary>
        public string UIItem05112023CellText = "09.11.2023";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
        /// </summary>
        public string UIOvertidEkstravaktCellText = "Overtid/Ekstravakt";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,00' cell equals '8,00'
        /// </summary>
        public string UIItem800CellText = "8,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRecalcValuesStep15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRecalcValuesStep15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '05.11.2023' cell equals '09.11.2023'
        /// </summary>
        public string UIItem05112023CellText = "09.11.2023";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
        /// </summary>
        public string UIOvertidEkstravaktCellText = "Overtid/Ekstravakt";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,00' cell equals '1,50'
        /// </summary>
        public string UIItem800CellText = "1,50";
        
        /// <summary>
        /// Verify that the 'Text' property of '400 - Lør./Søndagstillegg' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem400LørSøndagstilCellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,00' cell equals '6,50'
        /// </summary>
        public string UIItem800Cell1Text = "6,50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRecalcValuesStep5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRecalcValuesStep5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '05.11.2023' cell equals '05.11.2023'
        /// </summary>
        public string UIItem05112023CellText = "05.11.2023";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
        /// </summary>
        public string UIOvertidEkstravaktCellText = "Overtid/Ekstravakt";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,00' cell equals '8,00'
        /// </summary>
        public string UIItem800CellText = "8,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '400 - Lør./Søndagstillegg' cell equals '400 - Lør./Søndagstillegg'
        /// </summary>
        public string UIItem400LørSøndagstilCellText = "400 - Lør./Søndagstillegg";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,00' cell equals '8,00'
        /// </summary>
        public string UIItem800Cell1Text = "8,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRecalcValuesStep7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRecalcValuesStep7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '05.11.2023' cell equals '05.11.2023'
        /// </summary>
        public string UIItem05112023CellText = "05.11.2023";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Overtid/Ekstravakt' cell equals 'Overtid/Ekstravakt'
        /// </summary>
        public string UIOvertidEkstravaktCellText = "Overtid/Ekstravakt";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '8,00' cell equals '3,50'
        /// </summary>
        public string UIItem800CellText = "3,50";
        
        /// <summary>
        /// Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem310Overtid100CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,50' cell equals '4,50'
        /// </summary>
        public string UIItem450CellText = "4,50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem310Overtid100CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '4,00'
        /// </summary>
        public string UIItem400CellText = "4,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '4,00'
        /// </summary>
        public string UIItem400Cell1Text = "4,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem310Overtid100CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '6,50'
        /// </summary>
        public string UIItem400CellText = "6,50";
        
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem300Overtid50CellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '1,50'
        /// </summary>
        public string UIItem400Cell1Text = "1,50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '01.11.2023' cell equals '06.11.2023'
        /// </summary>
        public string UIItem01112023CellText = "06.11.2023";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '-8' cell equals '-8'
        /// </summary>
        public string UIItem8CellText = "-8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep17ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem310Overtid100CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '4,00'
        /// </summary>
        public string UIItem400CellText = "4,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '4,00'
        /// </summary>
        public string UIItem400Cell1Text = "4,00";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals 'T-Overtid i etterkant av vakt 100%'
        /// </summary>
        public string UIGridControlGroupRowGroupRowValueAsString = "T-Overtid i etterkant av vakt 100%";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep18ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem310Overtid100CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '8,00'
        /// </summary>
        public string UIItem400CellText = "8,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem310Overtid100CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '4,00'
        /// </summary>
        public string UIItem400CellText = "4,00";
        
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '300 - Overtid 50%'
        /// </summary>
        public string UIItem300Overtid50CellText = "300 - Overtid 50%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '4,00'
        /// </summary>
        public string UIItem400Cell1Text = "4,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '300 - Overtid 50%' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem300Overtid50CellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '8,00'
        /// </summary>
        public string UIItem400Cell1Text = "8,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '310 - Overtid 100%' cell equals '310 - Overtid 100%'
        /// </summary>
        public string UIItem310Overtid100CellText = "310 - Overtid 100%";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '4,50'
        /// </summary>
        public string UIItem400CellText = "4,50";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '3,50' cell equals '3,50'
        /// </summary>
        public string UIItem350CellText = "3,50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '01.11.2023' cell equals '01.11.2023'
        /// </summary>
        public string UIItem01112023CellText = "01.11.2023";
        
        /// <summary>
        /// Verify that the 'Text' property of '200 - Timelønn' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem200TimelønnCellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '-8' cell equals '-8'
        /// </summary>
        public string UIItem8CellText = "-8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '310 - Overtid 100%' cell equals '200 - Timelønn'
        /// </summary>
        public string UIItem310Overtid100CellText = "200 - Timelønn";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,00' cell equals '9,00'
        /// </summary>
        public string UIItem400CellText = "9,00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateWeekSeparationStep16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CreateWeekSeparationStep16Params
    {
        
        #region Fields
        /// <summary>
        /// Type '27.09.2023' in text box
        /// </summary>
        public string UIItemEditText = "27.09.2023";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '08:00' in text box
        /// </summary>
        public string UIItemEditText1 = "08:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectEksklTurnus'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectEksklTurnusParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.DataStructures.SimpleEmployment' in 'cbEmployment' LookUpEdit
        /// </summary>
        public string UICbEmploymentLookUpEditValueTypeName = "Gatsoft.Gat.DataStructures.SimpleEmployment";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetRulesetValuesStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SetRulesetValuesStep19Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Beregning pr. uke (f.eks. 35,5 t)' in combo box
        /// </summary>
        public string UIItemComboBoxSelectedItem = "Beregning pr. uke (f.eks. 35,5 t)";
        
        /// <summary>
        /// Type '35,5' in text box
        /// </summary>
        public string UIItemEditText = "35,5";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetRulesetValuesStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SetRulesetValuesStep8Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Snitt pr. turnusperiode' in combo box
        /// </summary>
        public string UIItemComboBoxSelectedItem = "Snitt pr. turnusperiode";
        
        /// <summary>
        /// Type '48' in text box
        /// </summary>
        public string UIItemEditText = "48";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep4_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep4_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals '(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 32t + 8t = 40t / 35,5t'
        /// </summary>
        public string UIGridControlGroupRowGroupRowValueAsString = "(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 32t + 8t = 40t / 35,5t";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep3_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep3_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals '(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 24t + 8t = 32t / 35,5t'
        /// </summary>
        public string UIGridControlGroupRowGroupRowValueAsString = "(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 24t + 8t = 32t / 35,5t";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep4_2_org'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep4_2_orgExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals '(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 32t + 8t = 40t / 35,5t'
        /// </summary>
        public string UIGridControlGroupRowGroupRowValueAsString = "(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 32t + 8t = 40t / 35,5t";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep3_2_org'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep3_2_orgExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'GridControlGroupRow' GroupRow equals '(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 24t + 8t = 32t / 35,5t'
        /// </summary>
        public string UIGridControlGroupRowGroupRowValueAsString = "(Uke 44, man. 30.10.2023 - søn. 05.11.2023): 24t + 8t = 32t / 35,5t";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UIBottomPanelDockPanel UIBottomPanelDockPanel
        {
            get
            {
                if ((this.mUIBottomPanelDockPanel == null))
                {
                    this.mUIBottomPanelDockPanel = new UIBottomPanelDockPanel(this);
                }
                return this.mUIBottomPanelDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        
        private UIBottomPanelDockPanel mUIBottomPanelDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIAften00167770770FalsDockPanel UIAften00167770770FalsDockPanel
        {
            get
            {
                if ((this.mUIAften00167770770FalsDockPanel == null))
                {
                    this.mUIAften00167770770FalsDockPanel = new UIAften00167770770FalsDockPanel(this);
                }
                return this.mUIAften00167770770FalsDockPanel;
            }
        }
        
        public UIDag00167770770FalseDockPanel UIDag00167770770FalseDockPanel
        {
            get
            {
                if ((this.mUIDag00167770770FalseDockPanel == null))
                {
                    this.mUIDag00167770770FalseDockPanel = new UIDag00167770770FalseDockPanel(this);
                }
                return this.mUIDag00167770770FalseDockPanel;
            }
        }
        
        public UIFriVikar00167770770FDockPanel UIFriVikar00167770770FDockPanel
        {
            get
            {
                if ((this.mUIFriVikar00167770770FDockPanel == null))
                {
                    this.mUIFriVikar00167770770FDockPanel = new UIFriVikar00167770770FDockPanel(this);
                }
                return this.mUIFriVikar00167770770FDockPanel;
            }
        }
        
        public UINatttiltirsdag001677DockPanel UINatttiltirsdag001677DockPanel
        {
            get
            {
                if ((this.mUINatttiltirsdag001677DockPanel == null))
                {
                    this.mUINatttiltirsdag001677DockPanel = new UINatttiltirsdag001677DockPanel(this);
                }
                return this.mUINatttiltirsdag001677DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIAften00167770770FalsDockPanel mUIAften00167770770FalsDockPanel;
        
        private UIDag00167770770FalseDockPanel mUIDag00167770770FalseDockPanel;
        
        private UIFriVikar00167770770FDockPanel mUIFriVikar00167770770FDockPanel;
        
        private UINatttiltirsdag001677DockPanel mUINatttiltirsdag001677DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAften00167770770FalsDockPanel : DXDockPanel
    {
        
        public UIAften00167770770FalsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable : DXGrid
    {
        
        public UIGcDayColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UITurnusEksklForetterkCell
        {
            get
            {
                if ((this.mUITurnusEksklForetterkCell == null))
                {
                    this.mUITurnusEksklForetterkCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITurnusEksklForetterkCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITurnusEksklForetterkCell;
            }
        }
        
        public DXCell UITurnusEksklForetterkCell1
        {
            get
            {
                if ((this.mUITurnusEksklForetterkCell1 == null))
                {
                    this.mUITurnusEksklForetterkCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUITurnusEksklForetterkCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]1[Column]colEmployeeName";
                    this.mUITurnusEksklForetterkCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITurnusEksklForetterkCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITurnusEksklForetterkCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITurnusEksklForetterkCell;
        
        private DXCell mUITurnusEksklForetterkCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDag00167770770FalseDockPanel : DXDockPanel
    {
        
        public UIDag00167770770FalseDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom2 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom2 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom2 : DXTestControl
    {
        
        public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable1 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable1(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable1 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable1 : DXGrid
    {
        
        public UIGcDayColumnTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UITurnusEksklForetterkCell
        {
            get
            {
                if ((this.mUITurnusEksklForetterkCell == null))
                {
                    this.mUITurnusEksklForetterkCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITurnusEksklForetterkCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITurnusEksklForetterkCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITurnusEksklForetterkCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFriVikar00167770770FDockPanel : DXDockPanel
    {
        
        public UIFriVikar00167770770FDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom3 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom3 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom3 : DXTestControl
    {
        
        public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcFreeColumnTable UIGcFreeColumnTable
        {
            get
            {
                if ((this.mUIGcFreeColumnTable == null))
                {
                    this.mUIGcFreeColumnTable = new UIGcFreeColumnTable(this);
                }
                return this.mUIGcFreeColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcFreeColumnTable mUIGcFreeColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcFreeColumnTable : DXGrid
    {
        
        public UIGcFreeColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UITurnusEksklForetterkCell
        {
            get
            {
                if ((this.mUITurnusEksklForetterkCell == null))
                {
                    this.mUITurnusEksklForetterkCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]1[Column]colEmployeeName";
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITurnusEksklForetterkCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITurnusEksklForetterkCell;
            }
        }
        
        public DXCell UITurnusEksklForetterkCell1
        {
            get
            {
                if ((this.mUITurnusEksklForetterkCell1 == null))
                {
                    this.mUITurnusEksklForetterkCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUITurnusEksklForetterkCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]0[Column]colEmployeeName";
                    this.mUITurnusEksklForetterkCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITurnusEksklForetterkCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITurnusEksklForetterkCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITurnusEksklForetterkCell;
        
        private DXCell mUITurnusEksklForetterkCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINatttiltirsdag001677DockPanel : DXDockPanel
    {
        
        public UINatttiltirsdag001677DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Natt til tirsdag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom4 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom4(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom4 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom4 : DXTestControl
    {
        
        public UIControlContainerCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Natt til tirsdag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable2 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable2(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable2 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable2 : DXGrid
    {
        
        public UIGcDayColumnTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UITurnusEksklForetterkCell
        {
            get
            {
                if ((this.mUITurnusEksklForetterkCell == null))
                {
                    this.mUITurnusEksklForetterkCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITurnusEksklForetterkCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITurnusEksklForetterkCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITurnusEksklForetterkCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpMainMenuRibbonPage : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGrpDevianceRibbonPageGroup UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        
        public UIGrpMiscRibbonPageGroup UIGrpMiscRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpMiscRibbonPageGroup == null))
                {
                    this.mUIGrpMiscRibbonPageGroup = new UIGrpMiscRibbonPageGroup(this);
                }
                return this.mUIGrpMiscRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDevianceRibbonPageGroup mUIGrpDevianceRibbonPageGroup;
        
        private UIGrpMiscRibbonPageGroup mUIGrpMiscRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpDevianceRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIEkstraRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEkstraRibbonBaseButtonItem == null))
                {
                    this.mUIEkstraRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExtra";
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEkstraRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEkstraRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIFraværRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIFraværRibbonBaseButtonItem == null))
                {
                    this.mUIFraværRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAbsence";
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIFraværRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFraværRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIEkstraRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIFraværRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpMiscRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpMiscRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpMisc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UISlettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISlettRibbonBaseButtonItem == null))
                {
                    this.mUISlettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUISlettRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUISlettRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBottomPanelDockPanel : DXDockPanel
    {
        
        public UIBottomPanelDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIFraværDockPanel UIFraværDockPanel
        {
            get
            {
                if ((this.mUIFraværDockPanel == null))
                {
                    this.mUIFraværDockPanel = new UIFraværDockPanel(this);
                }
                return this.mUIFraværDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIFraværDockPanel mUIFraværDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFraværDockPanel : DXDockPanel
    {
        
        public UIFraværDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fravær";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom5 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom5(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom5 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom5 : DXTestControl
    {
        
        public UIControlContainerCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FraværControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcAbsenceColumnTable UIGcAbsenceColumnTable
        {
            get
            {
                if ((this.mUIGcAbsenceColumnTable == null))
                {
                    this.mUIGcAbsenceColumnTable = new UIGcAbsenceColumnTable(this);
                }
                return this.mUIGcAbsenceColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAbsenceColumnTable mUIGcAbsenceColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAbsenceColumnTable : DXGrid
    {
        
        public UIGcAbsenceColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UITurnusEksklForetterkCell
        {
            get
            {
                if ((this.mUITurnusEksklForetterkCell == null))
                {
                    this.mUITurnusEksklForetterkCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceColumnGridControlCell[View]gvAbsenceColumn[Row]0[Column]gccFullName";
                    this.mUITurnusEksklForetterkCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITurnusEksklForetterkCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITurnusEksklForetterkCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITurnusEksklForetterkCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMerarbeidovertidWindow : DXWindow
    {
        
        public UIMerarbeidovertidWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Merarbeid / overtid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIPanClientClient UIPanClientClient
        {
            get
            {
                if ((this.mUIPanClientClient == null))
                {
                    this.mUIPanClientClient = new UIPanClientClient(this);
                }
                return this.mUIPanClientClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientClient mUIPanClientClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanClientClient : DXTestControl
    {
        
        public UIPanClientClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList(this);
                }
                return this.mUITcClientTabList;
            }
        }
        
        public UINbMenuNavBar UINbMenuNavBar
        {
            get
            {
                if ((this.mUINbMenuNavBar == null))
                {
                    this.mUINbMenuNavBar = new UINbMenuNavBar(this);
                }
                return this.mUINbMenuNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList mUITcClientTabList;
        
        private UINbMenuNavBar mUINbMenuNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcClientTabList : DXTestControl
    {
        
        public UITcClientTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpMainClient UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpMainClient : DXTestControl
    {
        
        public UITpMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcExtraDetailTabList UITcExtraDetailTabList
        {
            get
            {
                if ((this.mUITcExtraDetailTabList == null))
                {
                    this.mUITcExtraDetailTabList = new UITcExtraDetailTabList(this);
                }
                return this.mUITcExtraDetailTabList;
            }
        }
        
        public UIGcShiftDetailsClient UIGcShiftDetailsClient
        {
            get
            {
                if ((this.mUIGcShiftDetailsClient == null))
                {
                    this.mUIGcShiftDetailsClient = new UIGcShiftDetailsClient(this);
                }
                return this.mUIGcShiftDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UITcExtraDetailTabList mUITcExtraDetailTabList;
        
        private UIGcShiftDetailsClient mUIGcShiftDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcExtraDetailTabList : DXTestControl
    {
        
        public UITcExtraDetailTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcExtraDetail";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpSalaryCalcClient UITpSalaryCalcClient
        {
            get
            {
                if ((this.mUITpSalaryCalcClient == null))
                {
                    this.mUITpSalaryCalcClient = new UITpSalaryCalcClient(this);
                }
                return this.mUITpSalaryCalcClient;
            }
        }
        
        public UITpClockTypeCalculatiClient UITpClockTypeCalculatiClient
        {
            get
            {
                if ((this.mUITpClockTypeCalculatiClient == null))
                {
                    this.mUITpClockTypeCalculatiClient = new UITpClockTypeCalculatiClient(this);
                }
                return this.mUITpClockTypeCalculatiClient;
            }
        }
        
        public UITpShiftCalculationBaClient UITpShiftCalculationBaClient
        {
            get
            {
                if ((this.mUITpShiftCalculationBaClient == null))
                {
                    this.mUITpShiftCalculationBaClient = new UITpShiftCalculationBaClient(this);
                }
                return this.mUITpShiftCalculationBaClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpSalaryCalcClient mUITpSalaryCalcClient;
        
        private UITpClockTypeCalculatiClient mUITpClockTypeCalculatiClient;
        
        private UITpShiftCalculationBaClient mUITpShiftCalculationBaClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpSalaryCalcClient : DXTestControl
    {
        
        public UITpSalaryCalcClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpSalaryCalc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcAccountingLinesTable UIGcAccountingLinesTable
        {
            get
            {
                if ((this.mUIGcAccountingLinesTable == null))
                {
                    this.mUIGcAccountingLinesTable = new UIGcAccountingLinesTable(this);
                }
                return this.mUIGcAccountingLinesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAccountingLinesTable mUIGcAccountingLinesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAccountingLinesTable : DXGrid
    {
        
        public UIGcAccountingLinesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLines";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem310Overtid100Cell
        {
            get
            {
                if ((this.mUIItem310Overtid100Cell == null))
                {
                    this.mUIItem310Overtid100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem310Overtid100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]0[Column]colCostType";
                    this.mUIItem310Overtid100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem310Overtid100Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem310Overtid100Cell;
            }
        }
        
        public DXCell UIItem400Cell
        {
            get
            {
                if ((this.mUIItem400Cell == null))
                {
                    this.mUIItem400Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem400Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]0[Column]colAmount";
                    this.mUIItem400Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem400Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem400Cell;
            }
        }
        
        public DXCell UIItem300Overtid50Cell
        {
            get
            {
                if ((this.mUIItem300Overtid50Cell == null))
                {
                    this.mUIItem300Overtid50Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem300Overtid50Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]1[Column]colCostType";
                    this.mUIItem300Overtid50Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem300Overtid50Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem300Overtid50Cell;
            }
        }
        
        public DXCell UIItem400Cell1
        {
            get
            {
                if ((this.mUIItem400Cell1 == null))
                {
                    this.mUIItem400Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem400Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]1[Column]colAmount";
                    this.mUIItem400Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem400Cell1.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem400Cell1;
            }
        }
        
        public DXCell UIItem200TimelønnCell
        {
            get
            {
                if ((this.mUIItem200TimelønnCell == null))
                {
                    this.mUIItem200TimelønnCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem200TimelønnCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]2[Column]colCostType";
                    this.mUIItem200TimelønnCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem200TimelønnCell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem200TimelønnCell;
            }
        }
        
        public DXCell UIItem350Cell
        {
            get
            {
                if ((this.mUIItem350Cell == null))
                {
                    this.mUIItem350Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem350Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlCell[View]gvAccountingLines[Row]2[Column]colAmount";
                    this.mUIItem350Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem350Cell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIItem350Cell;
            }
        }
        
        public DXGroupRow UIGridControlGroupRowGroupRow
        {
            get
            {
                if ((this.mUIGridControlGroupRowGroupRow == null))
                {
                    this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
                    #region Search Criteria
                    this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAccountingLinesGridControlGroupRow[View]gvAccountingLines[Row]-1[Column]gvcGrou" +
                        "p";
                    this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
                    this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIGridControlGroupRowGroupRow;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem310Overtid100Cell;
        
        private DXCell mUIItem400Cell;
        
        private DXCell mUIItem300Overtid50Cell;
        
        private DXCell mUIItem400Cell1;
        
        private DXCell mUIItem200TimelønnCell;
        
        private DXCell mUIItem350Cell;
        
        private DXGroupRow mUIGridControlGroupRowGroupRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpClockTypeCalculatiClient : DXTestControl
    {
        
        public UITpClockTypeCalculatiClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpClockTypeCalculationBasis";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcClockTypeCalculatiTable UIGcClockTypeCalculatiTable
        {
            get
            {
                if ((this.mUIGcClockTypeCalculatiTable == null))
                {
                    this.mUIGcClockTypeCalculatiTable = new UIGcClockTypeCalculatiTable(this);
                }
                return this.mUIGcClockTypeCalculatiTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcClockTypeCalculatiTable mUIGcClockTypeCalculatiTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcClockTypeCalculatiTable : DXGrid
    {
        
        public UIGcClockTypeCalculatiTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcClockTypeCalculationBasis";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXGroupRow UIGridControlGroupRowGroupRow
        {
            get
            {
                if ((this.mUIGridControlGroupRowGroupRow == null))
                {
                    this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
                    #region Search Criteria
                    this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gcClockTypeCalculationBasisGridControlGroupRow[View]gvClockTypeCalculationBasis[R" +
                        "ow]-1[Column]colDescription";
                    this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
                    this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIGridControlGroupRowGroupRow;
            }
        }
        #endregion
        
        #region Fields
        private DXGroupRow mUIGridControlGroupRowGroupRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpShiftCalculationBaClient : DXTestControl
    {
        
        public UITpShiftCalculationBaClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpShiftCalculationBasis";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIVhShiftCalculationBaCustom UIVhShiftCalculationBaCustom
        {
            get
            {
                if ((this.mUIVhShiftCalculationBaCustom == null))
                {
                    this.mUIVhShiftCalculationBaCustom = new UIVhShiftCalculationBaCustom(this);
                }
                return this.mUIVhShiftCalculationBaCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhShiftCalculationBaCustom mUIVhShiftCalculationBaCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhShiftCalculationBaCustom : DXTestControl
    {
        
        public UIVhShiftCalculationBaCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhShiftCalculationBasis";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIWeekSumPeriodsViewCustom UIWeekSumPeriodsViewCustom
        {
            get
            {
                if ((this.mUIWeekSumPeriodsViewCustom == null))
                {
                    this.mUIWeekSumPeriodsViewCustom = new UIWeekSumPeriodsViewCustom(this);
                }
                return this.mUIWeekSumPeriodsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIWeekSumPeriodsViewCustom mUIWeekSumPeriodsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeekSumPeriodsViewCustom : DXTestControl
    {
        
        public UIWeekSumPeriodsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "WeekSumPeriodsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WeekSumPeriodsView";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcShiftsTable UIGcShiftsTable
        {
            get
            {
                if ((this.mUIGcShiftsTable == null))
                {
                    this.mUIGcShiftsTable = new UIGcShiftsTable(this);
                }
                return this.mUIGcShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftsTable mUIGcShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcShiftsTable : DXGrid
    {
        
        public UIGcShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXGroupRow UIGridControlGroupRowGroupRow
        {
            get
            {
                if ((this.mUIGridControlGroupRowGroupRow == null))
                {
                    this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
                    #region Search Criteria
                    this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlGroupRow[View]gvShifts[Row]-1[Column]colPeriodDescription";
                    this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
                    this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIGridControlGroupRowGroupRow;
            }
        }
        #endregion
        
        #region Fields
        private DXGroupRow mUIGridControlGroupRowGroupRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcShiftDetailsClient : DXTestControl
    {
        
        public UIGcShiftDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            #endregion
        }
        
        #region Properties
        public UITcRegistrationTypeTabList UITcRegistrationTypeTabList
        {
            get
            {
                if ((this.mUITcRegistrationTypeTabList == null))
                {
                    this.mUITcRegistrationTypeTabList = new UITcRegistrationTypeTabList(this);
                }
                return this.mUITcRegistrationTypeTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcRegistrationTypeTabList mUITcRegistrationTypeTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcRegistrationTypeTabList : DXTestControl
    {
        
        public UITcRegistrationTypeTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcRegistrationType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            #endregion
        }
        
        #region Properties
        public UITpNewShiftClient UITpNewShiftClient
        {
            get
            {
                if ((this.mUITpNewShiftClient == null))
                {
                    this.mUITpNewShiftClient = new UITpNewShiftClient(this);
                }
                return this.mUITpNewShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpNewShiftClient mUITpNewShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpNewShiftClient : DXTestControl
    {
        
        public UITpNewShiftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbCrewColumnLookUpEdit
        {
            get
            {
                if ((this.mUICbCrewColumnLookUpEdit == null))
                {
                    this.mUICbCrewColumnLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbCrewColumn";
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUICbCrewColumnLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbCrewColumnLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbMenuNavBar : DXNavBar
    {
        
        public UINbMenuNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UINbgccEmployeeScrollableControl UINbgccEmployeeScrollableControl
        {
            get
            {
                if ((this.mUINbgccEmployeeScrollableControl == null))
                {
                    this.mUINbgccEmployeeScrollableControl = new UINbgccEmployeeScrollableControl(this);
                }
                return this.mUINbgccEmployeeScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccEmployeeScrollableControl mUINbgccEmployeeScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgccEmployeeScrollableControl : DXScrollableControl
    {
        
        public UINbgccEmployeeScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UICbEmploymentLookUpEdit UICbEmploymentLookUpEdit
        {
            get
            {
                if ((this.mUICbEmploymentLookUpEdit == null))
                {
                    this.mUICbEmploymentLookUpEdit = new UICbEmploymentLookUpEdit(this);
                }
                return this.mUICbEmploymentLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UICbEmploymentLookUpEdit mUICbEmploymentLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICbEmploymentLookUpEdit : DXLookUpEdit
    {
        
        public UICbEmploymentLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "cbEmployment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "cbEmploymentPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            #endregion
        }
        
        #region Properties
        public UILCCustom UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom : DXTestControl
    {
        
        public UILCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            #endregion
        }
        
        #region Properties
        public UILciGridLayoutControlItem UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciGridLayoutControlItem mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciGridLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable : DXGrid
    {
        
        public UIGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXCell UIEksklForetterkantCell
        {
            get
            {
                if ((this.mUIEksklForetterkantCell == null))
                {
                    this.mUIEksklForetterkantCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIEksklForetterkantCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gridView1[Row]1[Column]gvcEmployeeNickn" +
                        "ameOrFirstName";
                    this.mUIEksklForetterkantCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIEksklForetterkantCell.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIEksklForetterkantCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIEksklForetterkantCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFraværsregistreringWindow : DXWindow
    {
        
        public UIFraværsregistreringWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsregistrering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlShiftManagementClient UIPnlShiftManagementClient
        {
            get
            {
                if ((this.mUIPnlShiftManagementClient == null))
                {
                    this.mUIPnlShiftManagementClient = new UIPnlShiftManagementClient(this);
                }
                return this.mUIPnlShiftManagementClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlShiftManagementClient mUIPnlShiftManagementClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlShiftManagementClient : DXTestControl
    {
        
        public UIPnlShiftManagementClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISccShiftManagementSplitContainerControl UISccShiftManagementSplitContainerControl
        {
            get
            {
                if ((this.mUISccShiftManagementSplitContainerControl == null))
                {
                    this.mUISccShiftManagementSplitContainerControl = new UISccShiftManagementSplitContainerControl(this);
                }
                return this.mUISccShiftManagementSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UISccShiftManagementSplitContainerControl mUISccShiftManagementSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISccShiftManagementSplitContainerControl : DXSplitContainerControl
    {
        
        public UISccShiftManagementSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient : DXTestControl
    {
        
        public UISplitGroupPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagementSplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcSalaryClient UIGrcSalaryClient
        {
            get
            {
                if ((this.mUIGrcSalaryClient == null))
                {
                    this.mUIGrcSalaryClient = new UIGrcSalaryClient(this);
                }
                return this.mUIGrcSalaryClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcSalaryClient mUIGrcSalaryClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrcSalaryClient : DXTestControl
    {
        
        public UIGrcSalaryClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcSalary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITcDeductPaymentTabList UITcDeductPaymentTabList
        {
            get
            {
                if ((this.mUITcDeductPaymentTabList == null))
                {
                    this.mUITcDeductPaymentTabList = new UITcDeductPaymentTabList(this);
                }
                return this.mUITcDeductPaymentTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcDeductPaymentTabList mUITcDeductPaymentTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcDeductPaymentTabList : DXTestControl
    {
        
        public UITcDeductPaymentTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcDeductPayment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITabDeductPaymentClient UITabDeductPaymentClient
        {
            get
            {
                if ((this.mUITabDeductPaymentClient == null))
                {
                    this.mUITabDeductPaymentClient = new UITabDeductPaymentClient(this);
                }
                return this.mUITabDeductPaymentClient;
            }
        }
        #endregion
        
        #region Fields
        private UITabDeductPaymentClient mUITabDeductPaymentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabDeductPaymentClient : DXTestControl
    {
        
        public UITabDeductPaymentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabDeductPayment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGcPaymentLinesTable UIGcPaymentLinesTable
        {
            get
            {
                if ((this.mUIGcPaymentLinesTable == null))
                {
                    this.mUIGcPaymentLinesTable = new UIGcPaymentLinesTable(this);
                }
                return this.mUIGcPaymentLinesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcPaymentLinesTable mUIGcPaymentLinesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcPaymentLinesTable : DXGrid
    {
        
        public UIGcPaymentLinesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPaymentLines";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem01112023Cell
        {
            get
            {
                if ((this.mUIItem01112023Cell == null))
                {
                    this.mUIItem01112023Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem01112023Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPaymentLinesGridControlCell[View]gvPaymentLines[Row]0[Column]gccPlDate";
                    this.mUIItem01112023Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem01112023Cell.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIItem01112023Cell;
            }
        }
        
        public DXCell UIItem200TimelønnCell
        {
            get
            {
                if ((this.mUIItem200TimelønnCell == null))
                {
                    this.mUIItem200TimelønnCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem200TimelønnCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPaymentLinesGridControlCell[View]gvPaymentLines[Row]0[Column]gccPlTT";
                    this.mUIItem200TimelønnCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem200TimelønnCell.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIItem200TimelønnCell;
            }
        }
        
        public DXCell UIItem8Cell
        {
            get
            {
                if ((this.mUIItem8Cell == null))
                {
                    this.mUIItem8Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPaymentLinesGridControlCell[View]gvPaymentLines[Row]0[Column]gccPlHours";
                    this.mUIItem8Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8Cell.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIItem8Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem01112023Cell;
        
        private DXCell mUIItem200TimelønnCell;
        
        private DXCell mUIItem8Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRekalkuleringWindow : DXWindow
    {
        
        public UIRekalkuleringWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Rekalkulering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public UIGcRecalculationTable UIGcRecalculationTable
        {
            get
            {
                if ((this.mUIGcRecalculationTable == null))
                {
                    this.mUIGcRecalculationTable = new UIGcRecalculationTable(this);
                }
                return this.mUIGcRecalculationTable;
            }
        }
        
        public UIWeToWeekCustom UIWeToWeekCustom
        {
            get
            {
                if ((this.mUIWeToWeekCustom == null))
                {
                    this.mUIWeToWeekCustom = new UIWeToWeekCustom(this);
                }
                return this.mUIWeToWeekCustom;
            }
        }
        
        public UIWeFromWeekCustom UIWeFromWeekCustom
        {
            get
            {
                if ((this.mUIWeFromWeekCustom == null))
                {
                    this.mUIWeFromWeekCustom = new UIWeFromWeekCustom(this);
                }
                return this.mUIWeFromWeekCustom;
            }
        }
        
        public DXButton UIRekalkulerButton
        {
            get
            {
                if ((this.mUIRekalkulerButton == null))
                {
                    this.mUIRekalkulerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRekalkulerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRecalculate";
                    this.mUIRekalkulerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIRekalkulerButton.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIRekalkulerButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRecalculationTable mUIGcRecalculationTable;
        
        private UIWeToWeekCustom mUIWeToWeekCustom;
        
        private UIWeFromWeekCustom mUIWeFromWeekCustom;
        
        private DXButton mUIRekalkulerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRecalculationTable : DXGrid
    {
        
        public UIGcRecalculationTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem05112023Cell
        {
            get
            {
                if ((this.mUIItem05112023Cell == null))
                {
                    this.mUIItem05112023Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem05112023Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvRecalculation[Row]0[Column]colShiftDate";
                    this.mUIItem05112023Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem05112023Cell.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem05112023Cell;
            }
        }
        
        public DXCell UIOvertidEkstravaktCell
        {
            get
            {
                if ((this.mUIOvertidEkstravaktCell == null))
                {
                    this.mUIOvertidEkstravaktCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOvertidEkstravaktCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvRecalculation[Row]0[Column]colPreviousStatu" +
                        "sDisplayText";
                    this.mUIOvertidEkstravaktCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOvertidEkstravaktCell.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIOvertidEkstravaktCell;
            }
        }
        
        public DXCell UIItem200TimelønnCell
        {
            get
            {
                if ((this.mUIItem200TimelønnCell == null))
                {
                    this.mUIItem200TimelønnCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem200TimelønnCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvAccounting[Row]0[Column]colCostType";
                    this.mUIItem200TimelønnCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem200TimelønnCell.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem200TimelønnCell;
            }
        }
        
        public DXCell UIItem800Cell
        {
            get
            {
                if ((this.mUIItem800Cell == null))
                {
                    this.mUIItem800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvAccounting[Row]0[Column]colAmount";
                    this.mUIItem800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem800Cell.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem800Cell;
            }
        }
        
        public DXCell UIItem400LørSøndagstilCell
        {
            get
            {
                if ((this.mUIItem400LørSøndagstilCell == null))
                {
                    this.mUIItem400LørSøndagstilCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem400LørSøndagstilCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvAccounting[Row]1[Column]colCostType";
                    this.mUIItem400LørSøndagstilCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem400LørSøndagstilCell.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem400LørSøndagstilCell;
            }
        }
        
        public DXCell UIItem800Cell1
        {
            get
            {
                if ((this.mUIItem800Cell1 == null))
                {
                    this.mUIItem800Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem800Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvAccounting[Row]1[Column]colAmount";
                    this.mUIItem800Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem800Cell1.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem800Cell1;
            }
        }
        
        public DXCell UIItem310Overtid100Cell
        {
            get
            {
                if ((this.mUIItem310Overtid100Cell == null))
                {
                    this.mUIItem310Overtid100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem310Overtid100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvAccounting[Row]2[Column]colCostType";
                    this.mUIItem310Overtid100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem310Overtid100Cell.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem310Overtid100Cell;
            }
        }
        
        public DXCell UIItem450Cell
        {
            get
            {
                if ((this.mUIItem450Cell == null))
                {
                    this.mUIItem450Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem450Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvAccounting[Row]2[Column]colAmount";
                    this.mUIItem450Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem450Cell.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem450Cell;
            }
        }
        
        public DXCell UIItem05112023Cell1
        {
            get
            {
                if ((this.mUIItem05112023Cell1 == null))
                {
                    this.mUIItem05112023Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem05112023Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvRecalculation[Row]1[Column]colShiftDate";
                    this.mUIItem05112023Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem05112023Cell1.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem05112023Cell1;
            }
        }
        
        public DXCell UIOvertidEkstravaktCell1
        {
            get
            {
                if ((this.mUIOvertidEkstravaktCell1 == null))
                {
                    this.mUIOvertidEkstravaktCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIOvertidEkstravaktCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvRecalculation[Row]1[Column]colPreviousStatu" +
                        "sDisplayText";
                    this.mUIOvertidEkstravaktCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOvertidEkstravaktCell1.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIOvertidEkstravaktCell1;
            }
        }
        
        public DXCell UIItem200TimelønnCell1
        {
            get
            {
                if ((this.mUIItem200TimelønnCell1 == null))
                {
                    this.mUIItem200TimelønnCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem200TimelønnCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvAccounting-2[Row]0[Column]colCostType";
                    this.mUIItem200TimelønnCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem200TimelønnCell1.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem200TimelønnCell1;
            }
        }
        
        public DXCell UIItem800Cell2
        {
            get
            {
                if ((this.mUIItem800Cell2 == null))
                {
                    this.mUIItem800Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem800Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRecalculationGridControlCell[View]gvAccounting-2[Row]0[Column]colAmount";
                    this.mUIItem800Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem800Cell2.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIItem800Cell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem05112023Cell;
        
        private DXCell mUIOvertidEkstravaktCell;
        
        private DXCell mUIItem200TimelønnCell;
        
        private DXCell mUIItem800Cell;
        
        private DXCell mUIItem400LørSøndagstilCell;
        
        private DXCell mUIItem800Cell1;
        
        private DXCell mUIItem310Overtid100Cell;
        
        private DXCell mUIItem450Cell;
        
        private DXCell mUIItem05112023Cell1;
        
        private DXCell mUIOvertidEkstravaktCell1;
        
        private DXCell mUIItem200TimelønnCell1;
        
        private DXCell mUIItem800Cell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeToWeekCustom : DXTestControl
    {
        
        public UIWeToWeekCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "weToWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekEdit";
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeFromWeekCustom : DXTestControl
    {
        
        public UIWeFromWeekCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "weFromWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekEdit";
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRegelsettWindow : WinWindow
    {
        
        public UIRegelsettWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Regelsett";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmRegEdit";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIRegelsettClient UIRegelsettClient
        {
            get
            {
                if ((this.mUIRegelsettClient == null))
                {
                    this.mUIRegelsettClient = new UIRegelsettClient(this);
                }
                return this.mUIRegelsettClient;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItem42Window UIItem42Window
        {
            get
            {
                if ((this.mUIItem42Window == null))
                {
                    this.mUIItem42Window = new UIItem42Window(this);
                }
                return this.mUIItem42Window;
            }
        }
        
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIItemClient1 UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new UIItemClient1(this);
                }
                return this.mUIItemClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        
        private UIRegelsettClient mUIRegelsettClient;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItem42Window mUIItem42Window;
        
        private UIItemClient mUIItemClient;
        
        private UIItemClient1 mUIItemClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRegelsettClient : WinClient
    {
        
        public UIRegelsettClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Regelsett";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItem42Window : WinWindow
    {
        
        public UIItem42Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "42";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient1 : WinClient
    {
        
        public UIItemClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Regelsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient.WindowTitles.Add("Regelsett");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDøgnogukeskilleWindow : WinWindow
    {
        
        public UIDøgnogukeskilleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Døgn- og ukeskille";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmDayAndWeekSeparatorEdit";
            this.WindowTitles.Add("Døgn- og ukeskille");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemClient2 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient2(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIItemClient2 mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.WindowTitles.Add("Døgn- og ukeskille");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Døgn- og ukeskille");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicTimeEdit";
            this.WindowTitles.Add("Døgn- og ukeskille");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Døgn- og ukeskille");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient2 : WinClient
    {
        
        public UIItemClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Døgn- og ukeskille");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Døgn- og ukeskille");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
