// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _020_Test_Arbeidsplan_Frikoder_Hjelpeplan_GATP_304
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CheckStep14Errors - Use 'CheckStep14ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep14Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Larsson, Henrik'
            Assert.AreEqual(this.CheckStep14ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Søndag'
            Assert.AreEqual(this.CheckStep14ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).'
            Assert.AreEqual(this.CheckStep14ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep16Errors - Use 'CheckStep16ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep16Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Andersson, Kenneth'
            Assert.AreEqual(this.CheckStep16ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Onsdag'
            Assert.AreEqual(this.CheckStep16ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
            Assert.AreEqual(this.CheckStep16ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep17Errors - Use 'CheckStep17ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep17Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Brolin, Thomas'
            Assert.AreEqual(this.CheckStep17ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Torsdag'
            Assert.AreEqual(this.CheckStep17ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
            Assert.AreEqual(this.CheckStep17ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep18Errors - Use 'CheckStep18ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep18Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Brolin, Thomas'
            Assert.AreEqual(this.CheckStep18ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Lørdag'
            Assert.AreEqual(this.CheckStep18ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
            Assert.AreEqual(this.CheckStep18ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep19Errors - Use 'CheckStep19ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep19Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Andersson, Kenneth'
            Assert.AreEqual(this.CheckStep19ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Søndag'
            Assert.AreEqual(this.CheckStep19ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
            Assert.AreEqual(this.CheckStep19ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep23Errors - Use 'CheckStep23ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep23Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIItem20Cell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIItem20Cell1;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Andersson, Kenneth'
            Assert.AreEqual(this.CheckStep23ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Mandag'
            Assert.AreEqual(this.CheckStep23ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of '20' cell equals '20'
            Assert.AreEqual(this.CheckStep23ErrorsExpectedValues.UIItem20Cell1Text, uIItem20Cell1.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'Krav til F1-vakt i ukeintervallet fra 16.05.2022 til 22.05.2022 er ikke oppfylt.'
            Assert.AreEqual(this.CheckStep23ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep25Errors - Use 'CheckStep25ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep25Errors()
        {
            #region Variable Declarations
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            #endregion

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Tirsdag'
            Assert.AreEqual(this.CheckStep25ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
            Assert.AreEqual(this.CheckStep25ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Andersson, Kenneth'
            Assert.AreEqual(this.CheckStep25ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);
        }
        
        /// <summary>
        /// CheckStep26Errors - Use 'CheckStep26ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep26Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Brolin, Thomas'
            Assert.AreEqual(this.CheckStep26ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Onsdag'
            Assert.AreEqual(this.CheckStep26ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
            Assert.AreEqual(this.CheckStep26ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep27Errors - Use 'CheckStep27ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep27Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Brolin, Thomas'
            Assert.AreEqual(this.CheckStep27ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Fredag'
            Assert.AreEqual(this.CheckStep27ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
            Assert.AreEqual(this.CheckStep27ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep5Errors - Use 'CheckStep5ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep5Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Ibrahimovic, Zlatan'
            Assert.AreEqual(this.CheckStep5ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Onsdag'
            Assert.AreEqual(this.CheckStep5ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).'
            Assert.AreEqual(this.CheckStep5ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep7_2Errors - Use 'CheckStep7_2ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep7_2Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Dahlin, Martin'
            Assert.AreEqual(this.CheckStep7_2ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Lørdag'
            Assert.AreEqual(this.CheckStep7_2ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F3 (Helgefridag) skal kun brukes som markering av fri på dager med vaktkode på grunnlinjen. Feil bruk av denne koden kan gi feil beregninger.'
            Assert.AreEqual(this.CheckStep7_2ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// CheckStep7Errors - Use 'CheckStep7ErrorsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep7Errors()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIIbrahimovicZlatanCell;
            DXCell uIOnsdagCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIOnsdagCell;
            DXCell uIF3HelgefridagskalkunCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIGsPanelControl7Client.UIGridValidationMessagTable.UIF3HelgefridagskalkunCell;
            #endregion

            // Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Dahlin, Martin'
            Assert.AreEqual(this.CheckStep7ErrorsExpectedValues.UIIbrahimovicZlatanCellText, uIIbrahimovicZlatanCell.Text);

            // Verify that the 'Text' property of 'Onsdag' cell equals 'Fredag'
            Assert.AreEqual(this.CheckStep7ErrorsExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F3 (Helgefridag) skal kun brukes som markering av fri på dager med vaktkode på grunnlinjen. Feil bruk av denne koden kan gi feil beregninger.'
            Assert.AreEqual(this.CheckStep7ErrorsExpectedValues.UIF3HelgefridagskalkunCellText, uIF3HelgefridagskalkunCell.Text);
        }
        
        /// <summary>
        /// ClickCellStep_10
        /// </summary>
        public void ClickCellStep_10()
        {
            #region Variable Declarations
            DXCell uIItemCell6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell6;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell6, MouseButtons.Right, ModifierKeys.None, new Point(22, 8));
        }
        
        /// <summary>
        /// ClickCellStep_11
        /// </summary>
        public void ClickCellStep_11()
        {
            #region Variable Declarations
            DXCell uIItemCell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell7;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell7, MouseButtons.Right, ModifierKeys.None, new Point(11, 9));
        }
        
        /// <summary>
        /// ClickCellStep_12
        /// </summary>
        public void ClickCellStep_12()
        {
            #region Variable Declarations
            DXCell uIItemCell8 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell8;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell8, MouseButtons.Right, ModifierKeys.None, new Point(13, 7));
        }
        
        /// <summary>
        /// ClickCellStep_13
        /// </summary>
        public void ClickCellStep_13()
        {
            #region Variable Declarations
            DXCell uIItemCell9 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell9;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell9, MouseButtons.Right, ModifierKeys.None, new Point(13, 7));
        }
        
        /// <summary>
        /// ClickCellStep_14
        /// </summary>
        public void ClickCellStep_14()
        {
            #region Variable Declarations
            DXCell uIItemCell10 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell10;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell10, MouseButtons.Right, ModifierKeys.None, new Point(13, 10));
        }
        
        /// <summary>
        /// ClickCellStep_15
        /// </summary>
        public void ClickCellStep_15()
        {
            #region Variable Declarations
            DXCell uIItemCell11 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell11;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell11, MouseButtons.Right, ModifierKeys.None, new Point(16, 14));
        }
        
        /// <summary>
        /// ClickCellStep_17
        /// </summary>
        public void ClickCellStep_17()
        {
            #region Variable Declarations
            DXCell uIItemCell12 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell12;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell12, MouseButtons.Right, ModifierKeys.None, new Point(20, 10));
        }
        
        /// <summary>
        /// ClickCellStep_18
        /// </summary>
        public void ClickCellStep_18()
        {
            #region Variable Declarations
            DXCell uIItemCell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell7;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell7, MouseButtons.Right, ModifierKeys.None, new Point(21, 8));
        }
        
        /// <summary>
        /// ClickCellStep_19
        /// </summary>
        public void ClickCellStep_19()
        {
            #region Variable Declarations
            DXCell uIItemCell13 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell13;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell13, MouseButtons.Right, ModifierKeys.None, new Point(14, 9));
        }
        
        /// <summary>
        /// ClickCellStep_22
        /// </summary>
        public void ClickCellStep_22()
        {
            #region Variable Declarations
            DXCell uIItemCell15 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell15;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell15, MouseButtons.Right, ModifierKeys.None, new Point(14, 9));
        }
        
        /// <summary>
        /// ClickCellStep_23
        /// </summary>
        public void ClickCellStep_23()
        {
            #region Variable Declarations
            DXCell uIItemCell16 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell16;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell16, MouseButtons.Right, ModifierKeys.None, new Point(9, 7));
        }
        
        /// <summary>
        /// ClickCellStep_24
        /// </summary>
        public void ClickCellStep_24()
        {
            #region Variable Declarations
            DXCell uIItemCell17 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell17;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell17, MouseButtons.Right, ModifierKeys.None, new Point(12, 5));
        }
        
        /// <summary>
        /// ClickCellStep_26
        /// </summary>
        public void ClickCellStep_26()
        {
            #region Variable Declarations
            DXCell uIItemCell18 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell18;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell18, MouseButtons.Right, ModifierKeys.None, new Point(14, 7));
        }
        
        /// <summary>
        /// ClickCellStep_27
        /// </summary>
        public void ClickCellStep_27()
        {
            #region Variable Declarations
            DXCell uIItemCell15 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell15;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell15, MouseButtons.Right, ModifierKeys.None, new Point(17, 14));
        }
        
        /// <summary>
        /// ClickCellStep_4
        /// </summary>
        public void ClickCellStep_4()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell, MouseButtons.Right, ModifierKeys.None, new Point(14, 11));
        }
        
        /// <summary>
        /// ClickCellStep_5
        /// </summary>
        public void ClickCellStep_5()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell1;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell1, MouseButtons.Right, ModifierKeys.None, new Point(19, 7));
        }
        
        /// <summary>
        /// ClickCellStep_6
        /// </summary>
        public void ClickCellStep_6()
        {
            #region Variable Declarations
            DXCell uIItemCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell2;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell2, MouseButtons.Right, ModifierKeys.None, new Point(19, 13));
        }
        
        /// <summary>
        /// ClickCellStep_7
        /// </summary>
        public void ClickCellStep_7()
        {
            #region Variable Declarations
            DXCell uIItemCell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell3;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell3, MouseButtons.Right, ModifierKeys.None, new Point(15, 10));
        }
        
        /// <summary>
        /// ClickCellStep_7_2
        /// </summary>
        public void ClickCellStep_7_2()
        {
            #region Variable Declarations
            DXCell uIItemCell14 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell14;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell14, MouseButtons.Right, ModifierKeys.None, new Point(16, 11));
        }
        
        /// <summary>
        /// ClickCellStep_8
        /// </summary>
        public void ClickCellStep_8()
        {
            #region Variable Declarations
            DXCell uIItemCell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell4;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell4, MouseButtons.Right, ModifierKeys.None, new Point(12, 12));
        }
        
        /// <summary>
        /// ClickCellStep_9
        /// </summary>
        public void ClickCellStep_9()
        {
            #region Variable Declarations
            DXCell uIItemCell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell5;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell5, MouseButtons.Right, ModifierKeys.None, new Point(16, 10));
        }
        
        #region Properties
        public virtual CheckStep14ErrorsExpectedValues CheckStep14ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep14ErrorsExpectedValues == null))
                {
                    this.mCheckStep14ErrorsExpectedValues = new CheckStep14ErrorsExpectedValues();
                }
                return this.mCheckStep14ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep16ErrorsExpectedValues CheckStep16ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep16ErrorsExpectedValues == null))
                {
                    this.mCheckStep16ErrorsExpectedValues = new CheckStep16ErrorsExpectedValues();
                }
                return this.mCheckStep16ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep17ErrorsExpectedValues CheckStep17ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep17ErrorsExpectedValues == null))
                {
                    this.mCheckStep17ErrorsExpectedValues = new CheckStep17ErrorsExpectedValues();
                }
                return this.mCheckStep17ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep18ErrorsExpectedValues CheckStep18ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep18ErrorsExpectedValues == null))
                {
                    this.mCheckStep18ErrorsExpectedValues = new CheckStep18ErrorsExpectedValues();
                }
                return this.mCheckStep18ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep19ErrorsExpectedValues CheckStep19ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep19ErrorsExpectedValues == null))
                {
                    this.mCheckStep19ErrorsExpectedValues = new CheckStep19ErrorsExpectedValues();
                }
                return this.mCheckStep19ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep23ErrorsExpectedValues CheckStep23ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep23ErrorsExpectedValues == null))
                {
                    this.mCheckStep23ErrorsExpectedValues = new CheckStep23ErrorsExpectedValues();
                }
                return this.mCheckStep23ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep25ErrorsExpectedValues CheckStep25ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep25ErrorsExpectedValues == null))
                {
                    this.mCheckStep25ErrorsExpectedValues = new CheckStep25ErrorsExpectedValues();
                }
                return this.mCheckStep25ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep26ErrorsExpectedValues CheckStep26ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep26ErrorsExpectedValues == null))
                {
                    this.mCheckStep26ErrorsExpectedValues = new CheckStep26ErrorsExpectedValues();
                }
                return this.mCheckStep26ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep27ErrorsExpectedValues CheckStep27ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep27ErrorsExpectedValues == null))
                {
                    this.mCheckStep27ErrorsExpectedValues = new CheckStep27ErrorsExpectedValues();
                }
                return this.mCheckStep27ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep5ErrorsExpectedValues CheckStep5ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep5ErrorsExpectedValues == null))
                {
                    this.mCheckStep5ErrorsExpectedValues = new CheckStep5ErrorsExpectedValues();
                }
                return this.mCheckStep5ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep7_2ErrorsExpectedValues CheckStep7_2ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep7_2ErrorsExpectedValues == null))
                {
                    this.mCheckStep7_2ErrorsExpectedValues = new CheckStep7_2ErrorsExpectedValues();
                }
                return this.mCheckStep7_2ErrorsExpectedValues;
            }
        }
        
        public virtual CheckStep7ErrorsExpectedValues CheckStep7ErrorsExpectedValues
        {
            get
            {
                if ((this.mCheckStep7ErrorsExpectedValues == null))
                {
                    this.mCheckStep7ErrorsExpectedValues = new CheckStep7ErrorsExpectedValues();
                }
                return this.mCheckStep7ErrorsExpectedValues;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckStep14ErrorsExpectedValues mCheckStep14ErrorsExpectedValues;
        
        private CheckStep16ErrorsExpectedValues mCheckStep16ErrorsExpectedValues;
        
        private CheckStep17ErrorsExpectedValues mCheckStep17ErrorsExpectedValues;
        
        private CheckStep18ErrorsExpectedValues mCheckStep18ErrorsExpectedValues;
        
        private CheckStep19ErrorsExpectedValues mCheckStep19ErrorsExpectedValues;
        
        private CheckStep23ErrorsExpectedValues mCheckStep23ErrorsExpectedValues;
        
        private CheckStep25ErrorsExpectedValues mCheckStep25ErrorsExpectedValues;
        
        private CheckStep26ErrorsExpectedValues mCheckStep26ErrorsExpectedValues;
        
        private CheckStep27ErrorsExpectedValues mCheckStep27ErrorsExpectedValues;
        
        private CheckStep5ErrorsExpectedValues mCheckStep5ErrorsExpectedValues;
        
        private CheckStep7_2ErrorsExpectedValues mCheckStep7_2ErrorsExpectedValues;
        
        private CheckStep7ErrorsExpectedValues mCheckStep7ErrorsExpectedValues;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep14Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep14ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Larsson, Henrik'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Larsson, Henrik";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Søndag'
        /// </summary>
        public string UIOnsdagCellText = "Søndag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = "F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helli" +
            "gdager(avhengig av oppsett) og søndager(avhengig av oppsett).";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep16Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep16ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Andersson, Kenneth'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Andersson, Kenneth";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Onsdag'
        /// </summary>
        public string UIOnsdagCellText = "Onsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = @"F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep17Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep17ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Brolin, Thomas'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Brolin, Thomas";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Torsdag'
        /// </summary>
        public string UIOnsdagCellText = "Torsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = @"F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep18Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep18ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Brolin, Thomas'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Brolin, Thomas";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Lørdag'
        /// </summary>
        public string UIOnsdagCellText = "Lørdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = @"F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep19Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep19ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Andersson, Kenneth'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Andersson, Kenneth";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Søndag'
        /// </summary>
        public string UIOnsdagCellText = "Søndag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = @"F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep23Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep23ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Andersson, Kenneth'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Andersson, Kenneth";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Mandag'
        /// </summary>
        public string UIOnsdagCellText = "Mandag";
        
        /// <summary>
        /// Verify that the 'Text' property of '20' cell equals '20'
        /// </summary>
        public string UIItem20Cell1Text = "20";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'Krav til F1-vakt i ukeintervallet fra 16.05.2022 til 22.05.2022 er ikke oppfylt.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = "Krav til F1-vakt i ukeintervallet fra 16.05.2022 til 22.05.2022 er ikke oppfylt.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep25Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep25ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Tirsdag'
        /// </summary>
        public string UIOnsdagCellText = "Tirsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = @"F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Andersson, Kenneth'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Andersson, Kenneth";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep26Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep26ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Brolin, Thomas'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Brolin, Thomas";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Onsdag'
        /// </summary>
        public string UIOnsdagCellText = "Onsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = @"F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep27Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep27ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Brolin, Thomas'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Brolin, Thomas";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Fredag'
        /// </summary>
        public string UIOnsdagCellText = "Fredag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = @"F43 (F4/F3 samme dag) skal kun brukes som markering av fri på vakter i overgangen fra en en virkedag til en helligdag, eller på halve hellidager hvor vakten passerer innslagspunktet for helligdagsgodtgjørelse. Feil bruk av denne koden kan gi feil beregninger og få konsekvenser for ansattes lønn.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep5Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep5ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Ibrahimovic, Zlatan'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Ibrahimovic, Zlatan";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Onsdag'
        /// </summary>
        public string UIOnsdagCellText = "Onsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = "F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helli" +
            "gdager(avhengig av oppsett) og søndager(avhengig av oppsett).";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep7_2Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep7_2ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Dahlin, Martin'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Dahlin, Martin";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Lørdag'
        /// </summary>
        public string UIOnsdagCellText = "Lørdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F3 (Helgefridag) skal kun brukes som markering av fri på dager med vaktkode på grunnlinjen. Feil bruk av denne koden kan gi feil beregninger.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = "F3 (Helgefridag) skal kun brukes som markering av fri på dager med vaktkode på gr" +
            "unnlinjen. Feil bruk av denne koden kan gi feil beregninger.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep7Errors'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep7ErrorsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ibrahimovic, Zlatan' cell equals 'Dahlin, Martin'
        /// </summary>
        public string UIIbrahimovicZlatanCellText = "Dahlin, Martin";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Onsdag' cell equals 'Fredag'
        /// </summary>
        public string UIOnsdagCellText = "Fredag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3 (Helgefridag) skal kun brukes som markering av fri på helligdager, halve helligdager(avhengig av oppsett) og søndager(avhengig av oppsett).' cell equals 'F3 (Helgefridag) skal kun brukes som markering av fri på dager med vaktkode på grunnlinjen. Feil bruk av denne koden kan gi feil beregninger.'
        /// </summary>
        public string UIF3HelgefridagskalkunCellText = "F3 (Helgefridag) skal kun brukes som markering av fri på dager med vaktkode på gr" +
            "unnlinjen. Feil bruk av denne koden kan gi feil beregninger.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIDpnlVisualizationDockPanel UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        
        private UIDpnlVisualizationDockPanel mUIDpnlVisualizationDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_2";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_2";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_3";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_4";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_2";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_8";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_6";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]RosterCell_5";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXCell UIItemCell8
        {
            get
            {
                if ((this.mUIItemCell8 == null))
                {
                    this.mUIItemCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_36";
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell8;
            }
        }
        
        public DXCell UIItemCell9
        {
            get
            {
                if ((this.mUIItemCell9 == null))
                {
                    this.mUIItemCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_27";
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell9;
            }
        }
        
        public DXCell UIItemCell10
        {
            get
            {
                if ((this.mUIItemCell10 == null))
                {
                    this.mUIItemCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]9[Column]RosterCell_27";
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell10;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_2";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]RosterCell_3";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXCell UIItemCell13
        {
            get
            {
                if ((this.mUIItemCell13 == null))
                {
                    this.mUIItemCell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_6";
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell13.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell13;
            }
        }
        
        public DXCell UIItemCell14
        {
            get
            {
                if ((this.mUIItemCell14 == null))
                {
                    this.mUIItemCell14 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell14.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_5";
                    this.mUIItemCell14.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell14.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell14;
            }
        }
        
        public DXCell UIItemCell15
        {
            get
            {
                if ((this.mUIItemCell15 == null))
                {
                    this.mUIItemCell15 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell15.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]RosterCell_4";
                    this.mUIItemCell15.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell15.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell15;
            }
        }
        
        public DXCell UIItemCell16
        {
            get
            {
                if ((this.mUIItemCell16 == null))
                {
                    this.mUIItemCell16 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell16.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_35";
                    this.mUIItemCell16.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell16.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell16;
            }
        }
        
        public DXCell UIItemCell17
        {
            get
            {
                if ((this.mUIItemCell17 == null))
                {
                    this.mUIItemCell17 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell17.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_1";
                    this.mUIItemCell17.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell17.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell17;
            }
        }
        
        public DXCell UIItemCell18
        {
            get
            {
                if ((this.mUIItemCell18 == null))
                {
                    this.mUIItemCell18 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell18.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]RosterCell_2";
                    this.mUIItemCell18.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell18.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell18;
            }
        }
        
        public DXTextEdit UIRow3ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow3ColumnRosterCellEdit == null))
                {
                    this.mUIRow3ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow3ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]3[Column]RosterCell_2";
                    this.mUIRow3ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow3ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow3ColumnRosterCellEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItemCell5;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUIItemCell7;
        
        private DXCell mUIItemCell8;
        
        private DXCell mUIItemCell9;
        
        private DXCell mUIItemCell10;
        
        private DXCell mUIItemCell11;
        
        private DXCell mUIItemCell12;
        
        private DXCell mUIItemCell13;
        
        private DXCell mUIItemCell14;
        
        private DXCell mUIItemCell15;
        
        private DXCell mUIItemCell16;
        
        private DXCell mUIItemCell17;
        
        private DXCell mUIItemCell18;
        
        private DXTextEdit mUIRow3ColumnRosterCellEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlVisualizationDockPanel : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITcVisualizationTabList UITcVisualizationTabList
        {
            get
            {
                if ((this.mUITcVisualizationTabList == null))
                {
                    this.mUITcVisualizationTabList = new UITcVisualizationTabList(this);
                }
                return this.mUITcVisualizationTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcVisualizationTabList mUITcVisualizationTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcVisualizationTabList : DXTestControl
    {
        
        public UITcVisualizationTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITpValidationMessagesClient UITpValidationMessagesClient
        {
            get
            {
                if ((this.mUITpValidationMessagesClient == null))
                {
                    this.mUITpValidationMessagesClient = new UITpValidationMessagesClient(this);
                }
                return this.mUITpValidationMessagesClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpValidationMessagesClient mUITpValidationMessagesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpValidationMessagesClient : DXTestControl
    {
        
        public UITpValidationMessagesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpValidationMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl7Client UIGsPanelControl7Client
        {
            get
            {
                if ((this.mUIGsPanelControl7Client == null))
                {
                    this.mUIGsPanelControl7Client = new UIGsPanelControl7Client(this);
                }
                return this.mUIGsPanelControl7Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl7Client mUIGsPanelControl7Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl7Client : DXTestControl
    {
        
        public UIGsPanelControl7Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl7";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGridValidationMessagTable UIGridValidationMessagTable
        {
            get
            {
                if ((this.mUIGridValidationMessagTable == null))
                {
                    this.mUIGridValidationMessagTable = new UIGridValidationMessagTable(this);
                }
                return this.mUIGridValidationMessagTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridValidationMessagTable mUIGridValidationMessagTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridValidationMessagTable : DXGrid
    {
        
        public UIGridValidationMessagTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gridValidationMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem20Cell
        {
            get
            {
                if ((this.mUIItem20Cell == null))
                {
                    this.mUIItem20Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem20Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridValidationMessagesGridControlCell[View]viewValidationMessages[Row]38[Column]c" +
                        "olWeeknumber";
                    this.mUIItem20Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem20Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem20Cell;
            }
        }
        
        public DXCell UIIbrahimovicZlatanCell
        {
            get
            {
                if ((this.mUIIbrahimovicZlatanCell == null))
                {
                    this.mUIIbrahimovicZlatanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridValidationMessagesGridControlCell[View]viewValidationMessages[Row]0[Column]co" +
                        "lFullname";
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIbrahimovicZlatanCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIIbrahimovicZlatanCell;
            }
        }
        
        public DXCell UIOnsdagCell
        {
            get
            {
                if ((this.mUIOnsdagCell == null))
                {
                    this.mUIOnsdagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOnsdagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridValidationMessagesGridControlCell[View]viewValidationMessages[Row]0[Column]co" +
                        "lWeekDay";
                    this.mUIOnsdagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOnsdagCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOnsdagCell;
            }
        }
        
        public DXCell UIF3HelgefridagskalkunCell
        {
            get
            {
                if ((this.mUIF3HelgefridagskalkunCell == null))
                {
                    this.mUIF3HelgefridagskalkunCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3HelgefridagskalkunCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gridValidationMessagesGridControlCell[View]viewValidationMessages[Row]0[Column]co" +
                        "lDescription";
                    this.mUIF3HelgefridagskalkunCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3HelgefridagskalkunCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3HelgefridagskalkunCell;
            }
        }
        
        public DXCell UIItem20Cell1
        {
            get
            {
                if ((this.mUIItem20Cell1 == null))
                {
                    this.mUIItem20Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem20Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gridValidationMessagesGridControlCell[View]viewValidationMessages[Row]0[Column]co" +
                        "lWeeknumber";
                    this.mUIItem20Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem20Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem20Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem20Cell;
        
        private DXCell mUIIbrahimovicZlatanCell;
        
        private DXCell mUIOnsdagCell;
        
        private DXCell mUIF3HelgefridagskalkunCell;
        
        private DXCell mUIItem20Cell1;
        #endregion
    }
    
    //[GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    //public class UIItemWindow : WinWindow
    //{
        
    //    public UIItemWindow()
    //    {
    //        #region Search Criteria
    //        this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
    //        #endregion
    //    }
        
    //    #region Properties
    //    public DXTextEdit UIUnknownEdit
    //    {
    //        get
    //        {
    //            if ((this.mUIUnknownEdit == null))
    //            {
    //                this.mUIUnknownEdit = new DXTextEdit(this);
    //                #region Search Criteria
    //                this.mUIUnknownEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Unknown";
    //                #endregion
    //            }
    //            return this.mUIUnknownEdit;
    //        }
    //    }
    //    #endregion
        
    //    #region Fields
    //    private DXTextEdit mUIUnknownEdit;
    //    #endregion
    //}
}
