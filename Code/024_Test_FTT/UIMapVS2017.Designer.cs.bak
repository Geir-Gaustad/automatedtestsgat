// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _024_Test_FTT.UIMapVS2017Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMapVS2017
    {
        
        /// <summary>
        /// AaaaVAkltbutt - Use 'AaaaVAkltbuttExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AaaaVAkltbutt()
        {
            #region Variable Declarations
            DXButton uIVaktklasserButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIVaktklasserButton;
            #endregion

            // Verify that the 'Text' property of 'Vaktklasser' button equals 'Vaktklasser'
            Assert.AreEqual(this.AaaaVAkltbuttExpectedValues.UIVaktklasserButtonText, uIVaktklasserButton.Text);
        }
        
        /// <summary>
        /// Add50PersentTo5140HaberEmployment - Use 'Add50PersentTo5140HaberEmploymentParams' to pass parameters into this method.
        /// </summary>
        public void Add50PersentTo5140HaberEmployment()
        {
            #region Variable Declarations
            DXTestControl uINode1TreeListNodeSelectImage = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeeTreeList.UINode3TreeListNode.UINode1TreeListNode.UINode1TreeListNodeSelectImage;
            DXTextEdit uIEPositionPercentEdit = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerLineVCustom.UIEPositionPercentEdit;
            #endregion

            // Click 'Node1' TreeListNodeSelectImage
            Mouse.Click(uINode1TreeListNodeSelectImage, new Point(9, 11));

            // Type 'System.Double' in 'ePositionPercent' text box
            //ValueTypeName
            uIEPositionPercentEdit.ValueTypeName = this.Add50PersentTo5140HaberEmploymentParams.UIEPositionPercentEditValueTypeName;

            // Type '50' in 'ePositionPercent' text box
            //ValueAsString
            uIEPositionPercentEdit.ValueAsString = this.Add50PersentTo5140HaberEmploymentParams.UIEPositionPercentEditValueAsString;

            // Type '{Tab}' in 'ePositionPercent' text box
            Keyboard.SendKeys(uIEPositionPercentEdit, this.Add50PersentTo5140HaberEmploymentParams.UIEPositionPercentEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// AddHaberToPlan - Use 'AddHaberToPlanParams' to pass parameters into this method.
        /// </summary>
        public void AddHaberToPlan()
        {
            #region Variable Declarations
            DXButton uIAnsatteButton = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UIAnsatteButton;
            DXButton uIUtvalgsalternativerButton = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UILeftAutoHideContaineClient.UIUtvalgsalternativerButton;
            DXTreeListNode uINode12TreeListNode1 = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIAutoHideControlClient.UIDpDepartmentSelectorDockPanel.UIDepartmentSelectorCoCustom.UITlAccessibleDepartmeTreeList.UINode0TreeListNode.UINode12TreeListNode.UINode12TreeListNode1;
            DXCell uIGcDepartmentEmployeeCell1 = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UIGcDepartmentEmployeeCell1;
            DXCell uIHaberPeterCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UIHaberPeterCell;
            DXGrid uIGcDepartmentEmployeeTable = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable;
            DXButton uIOKButton = this.UILeggtilansatteWindow.UIOKButton;
            #endregion

            // Click 'Ansatte...' button
            Mouse.Click(uIAnsatteButton, new Point(1, 1));

            // Click 'Utvalgsalternativer' button
            Mouse.Click(uIUtvalgsalternativerButton, new Point(7, 53));

            // Type 'True' in 'Node12' TreeListNode
            //Checked
            uINode12TreeListNode1.Checked = this.AddHaberToPlanParams.UINode12TreeListNode1Checked;

            // Click 'gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]17[Column]colToDate' cell
            Mouse.Click(uIGcDepartmentEmployeeCell1, new Point(32, 12));

            // Click 'Haber, Peter' cell
            Mouse.Click(uIHaberPeterCell, new Point(50, 5));

            // Type 'Shift + {Down}' in 'gcDepartmentEmployees' table
            Keyboard.SendKeys(uIGcDepartmentEmployeeTable, this.AddHaberToPlanParams.UIGcDepartmentEmployeeTableSendKeys, ModifierKeys.Shift);

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddNewLineFromDepartment
        /// </summary>
        public void AddNewLineFromDepartment()
        {
            #region Variable Declarations
            DXMenuItem uILeggtilblanklinjefraMenuItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UILeggtilblanklinjefraMenuItem;
            DXMenuBaseButtonItem uIItem5150FastetilleggMenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UILeggtilblanklinjefraMenuItem.UIItem5150FastetilleggMenuBaseButtonItem;
            #endregion

            // Click 'Legg til blank linje fra avdeling' menu item
            Mouse.Click(uILeggtilblanklinjefraMenuItem, new Point(157, 10));

            // Click '5150 - Faste tillegg' MenuBaseButtonItem
            Mouse.Click(uIItem5150FastetilleggMenuBaseButtonItem, new Point(87, 9));
        }
        
        /// <summary>
        /// CheckCalculateFTTButtonDisabled - Use 'CheckCalculateFTTButtonDisabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculateFTTButtonDisabled()
        {
            #region Variable Declarations
            DXButton uIKalkulerButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIKalkulerButton;
            #endregion

            // Verify that the 'Enabled' property of 'Kalkuler' button equals 'False'
            Assert.AreEqual(this.CheckCalculateFTTButtonDisabledExpectedValues.UIKalkulerButtonEnabled, uIKalkulerButton.Enabled);
        }
        
        /// <summary>
        /// CheckCalculationEkland_C1_S8 - Use 'CheckCalculationEkland_C1_S8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculationEkland_C1_S8()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIOhlinLenaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIOhlinLenaPivotGridFieldValue;
            DXPivotGridCell uIItem18PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Ekland, Britt'
            Assert.AreEqual(this.CheckCalculationEkland_C1_S8ExpectedValues.UIOhlinLenaPivotGridFieldValueText, uIOhlinLenaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals '2'
            Assert.AreEqual(this.CheckCalculationEkland_C1_S8ExpectedValues.UIItem18PivotGridCellText, uIItem18PivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculationEkland_C1_S8ExpectedValues.UIItem26PivotGridCell1Text, uIItem26PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckCalculationEkland_C1_S9 - Use 'CheckCalculationEkland_C1_S9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculationEkland_C1_S9()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIOhlinLenaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIOhlinLenaPivotGridFieldValue;
            DXPivotGridCell uIItem18PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Ekland, Britt'
            Assert.AreEqual(this.CheckCalculationEkland_C1_S9ExpectedValues.UIOhlinLenaPivotGridFieldValueText, uIOhlinLenaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals '6'
            Assert.AreEqual(this.CheckCalculationEkland_C1_S9ExpectedValues.UIItem18PivotGridCellText, uIItem18PivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '24'
            Assert.AreEqual(this.CheckCalculationEkland_C1_S9ExpectedValues.UIItem26PivotGridCell1Text, uIItem26PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckCalculationEklandTwoLines_C1_S12 - Use 'CheckCalculationEklandTwoLines_C1_S12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculationEklandTwoLines_C1_S12()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIOhlinLenaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIOhlinLenaPivotGridFieldValue;
            DXPivotGridCell uIItem18PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell;
            DXPivotGridCell uIItem18PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell1;
            DXPivotGridCell uIItem26PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell1;
            DXPivotGridCell uIItem26PivotGridCell2 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell2;
            #endregion

            // Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Ekland, Britt'
            Assert.AreEqual(this.CheckCalculationEklandTwoLines_C1_S12ExpectedValues.UIOhlinLenaPivotGridFieldValueText, uIOhlinLenaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals '2'
            Assert.AreEqual(this.CheckCalculationEklandTwoLines_C1_S12ExpectedValues.UIItem18PivotGridCellText, uIItem18PivotGridCell.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals '2'
            Assert.AreEqual(this.CheckCalculationEklandTwoLines_C1_S12ExpectedValues.UIItem18PivotGridCell1Text, uIItem18PivotGridCell1.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculationEklandTwoLines_C1_S12ExpectedValues.UIItem26PivotGridCell1Text, uIItem26PivotGridCell1.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculationEklandTwoLines_C1_S12ExpectedValues.UIItem26PivotGridCell2Text, uIItem26PivotGridCell2.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C1_S19 - Use 'CheckCalculations_C1_S19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C1_S19()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            DXPivotGridFieldValue uIEklandBrittPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIEklandBrittPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            DXPivotGridCell uIItem13PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem13PivotGridCell;
            DXPivotGridFieldValue uIItem19082024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem19082024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem15092024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem15092024PivotGridFieldValue;
            DXPivotGridCell uIItem18PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell1;
            DXPivotGridFieldValue uIVAKANT6PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIVAKANT6PivotGridFieldValue;
            DXPivotGridCell uIItem18PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell1;
            DXPivotGridCell uIItem26PivotGridCell2 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell2;
            DXPivotGridFieldValue uIVAKANT6PivotGridFieldValue1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIVAKANT6PivotGridFieldValue1;
            DXPivotGridCell uIItem18PivotGridCell2 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell2;
            DXPivotGridCell uIItem26PivotGridCell3 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell3;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Adams, Maud'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '18'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '26'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Bergman, Ingrid'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '16,25'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);

            // Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Ekland, Britt'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIEklandBrittPivotGridFieldValueText, uIEklandBrittPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '2'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);

            // Verify that the 'Text' property of '13' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem13PivotGridCellText, uIItem13PivotGridCell.Text);

            // Verify that the 'Text' property of '19.08.2024' PivotGridFieldValue equals '19.08.2024'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem19082024PivotGridFieldValueText, uIItem19082024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '15.09.2024' PivotGridFieldValue equals '15.09.2024'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem15092024PivotGridFieldValueText, uIItem15092024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals '6'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem18PivotGridCellText, uIItem18PivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '24'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem26PivotGridCell1Text, uIItem26PivotGridCell1.Text);

            // Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'Ohlin, Lena'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIVAKANT6PivotGridFieldValueText, uIVAKANT6PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals '18'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem18PivotGridCell1Text, uIItem18PivotGridCell1.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '26'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem26PivotGridCell2Text, uIItem26PivotGridCell2.Text);

            // Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'VAKANT6'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIVAKANT6PivotGridFieldValue1Text, uIVAKANT6PivotGridFieldValue1.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals '18'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem18PivotGridCell2Text, uIItem18PivotGridCell2.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '26'
            Assert.AreEqual(this.CheckCalculations_C1_S19ExpectedValues.UIItem26PivotGridCell3Text, uIItem26PivotGridCell3.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C2_S2 - Use 'CheckCalculations_C2_S2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C2_S2()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            DXPivotGridFieldValue uIEklandBrittPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIEklandBrittPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            DXPivotGridCell uIItem13PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem13PivotGridCell;
            DXPivotGridFieldValue uIOhlinLenaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIOhlinLenaPivotGridFieldValue;
            DXPivotGridCell uIItem18PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '10'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '20'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Stormare, Peter'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '10'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '20'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);

            // Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Edwall, Allan'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIEklandBrittPivotGridFieldValueText, uIEklandBrittPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);

            // Verify that the 'Text' property of '13' PivotGridCell equals '3,25'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIItem13PivotGridCellText, uIItem13PivotGridCell.Text);

            // Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'VAKANT4'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIOhlinLenaPivotGridFieldValueText, uIOhlinLenaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIItem18PivotGridCellText, uIItem18PivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '3,25'
            Assert.AreEqual(this.CheckCalculations_C2_S2ExpectedValues.UIItem26PivotGridCell1Text, uIItem26PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C2_S3 - Use 'CheckCalculations_C2_S3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C2_S3()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            DXPivotGridFieldValue uIEklandBrittPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIEklandBrittPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            DXPivotGridCell uIItem13PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem13PivotGridCell;
            DXPivotGridFieldValue uIOhlinLenaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIOhlinLenaPivotGridFieldValue;
            DXPivotGridCell uIItem18PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '11,15'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '22,3'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Stormare, Peter'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '11,15'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '22,3'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);

            // Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Edwall, Allan'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIEklandBrittPivotGridFieldValueText, uIEklandBrittPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);

            // Verify that the 'Text' property of '13' PivotGridCell equals '3,62'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIItem13PivotGridCellText, uIItem13PivotGridCell.Text);

            // Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'VAKANT4'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIOhlinLenaPivotGridFieldValueText, uIOhlinLenaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIItem18PivotGridCellText, uIItem18PivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '3,62'
            Assert.AreEqual(this.CheckCalculations_C2_S3ExpectedValues.UIItem26PivotGridCell1Text, uIItem26PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C3_S11 - Use 'CheckCalculations_C3_S11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C3_S11()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridCell uIItem2973PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem2973PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Von Sudow, Max'
            Assert.AreEqual(this.CheckCalculations_C3_S11ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculations_C3_S11ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '42'
            Assert.AreEqual(this.CheckCalculations_C3_S11ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of '29,73' PivotGridCell equals '20'
            Assert.AreEqual(this.CheckCalculations_C3_S11ExpectedValues.UIItem2973PivotGridCellText, uIItem2973PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C3_S15 - Use 'CheckCalculations_C3_S15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C3_S15()
        {
            #region Variable Declarations
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            #endregion

            // Verify that the 'Text' property of PivotGridCell equals '36'
            Assert.AreEqual(this.CheckCalculations_C3_S15ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '20'
            Assert.AreEqual(this.CheckCalculations_C3_S15ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C3_S16 - Use 'CheckCalculations_C3_S16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C3_S16()
        {
            #region Variable Declarations
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridCell uIItem2973PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem2973PivotGridCell;
            #endregion

            // Verify that the 'Text' property of PivotGridCell equals '10'
            Assert.AreEqual(this.CheckCalculations_C3_S16ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '26'
            Assert.AreEqual(this.CheckCalculations_C3_S16ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of '29,73' PivotGridCell equals '16'
            Assert.AreEqual(this.CheckCalculations_C3_S16ExpectedValues.UIItem2973PivotGridCellText, uIItem2973PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C3_S3 - Use 'CheckCalculations_C3_S3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C3_S3()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridCell uIItem2973PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem2973PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Von Sudow, Max'
            Assert.AreEqual(this.CheckCalculations_C3_S3ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '11,89'
            Assert.AreEqual(this.CheckCalculations_C3_S3ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '62,44'
            Assert.AreEqual(this.CheckCalculations_C3_S3ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of '29,73' PivotGridCell equals '29,73'
            Assert.AreEqual(this.CheckCalculations_C3_S3ExpectedValues.UIItem2973PivotGridCellText, uIItem2973PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S10 - Use 'CheckCalculations_C4_S10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S10()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Gustavsson, Robert'
            Assert.AreEqual(this.CheckCalculations_C4_S10ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '23,53'
            Assert.AreEqual(this.CheckCalculations_C4_S10ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '31,25'
            Assert.AreEqual(this.CheckCalculations_C4_S10ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S13 - Use 'CheckCalculations_C4_S13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S13()
        {
            #region Variable Declarations
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of '8' PivotGridCell equals '31,53'
            Assert.AreEqual(this.CheckCalculations_C4_S13ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '31,25'
            Assert.AreEqual(this.CheckCalculations_C4_S13ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S15 - Use 'CheckCalculations_C4_S15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S15()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Gustavsson, Robert'
            Assert.AreEqual(this.CheckCalculations_C4_S15ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Rheborg, Johan'
            Assert.AreEqual(this.CheckCalculations_C4_S15ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S19 - Use 'CheckCalculations_C4_S19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S19()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItem2973PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem2973PivotGridCell;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Persbrandt, Mikael'
            Assert.AreEqual(this.CheckCalculations_C4_S19ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '29,73' PivotGridCell equals '6'
            Assert.AreEqual(this.CheckCalculations_C4_S19ExpectedValues.UIItem2973PivotGridCellText, uIItem2973PivotGridCell.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '16'
            Assert.AreEqual(this.CheckCalculations_C4_S19ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '12'
            Assert.AreEqual(this.CheckCalculations_C4_S19ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S20 - Use 'CheckCalculations_C4_S20ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S20()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIOhlinLenaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIOhlinLenaPivotGridFieldValue;
            DXPivotGridCell uIItem2002PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem2002PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Rheborg, Johan'
            Assert.AreEqual(this.CheckCalculations_C4_S20ExpectedValues.UIOhlinLenaPivotGridFieldValueText, uIOhlinLenaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '20,02' PivotGridCell equals '20,02'
            Assert.AreEqual(this.CheckCalculations_C4_S20ExpectedValues.UIItem2002PivotGridCellText, uIItem2002PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S21 - Use 'CheckCalculations_C4_S21ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S21()
        {
            #region Variable Declarations
            DXPivotGridCell uIItem2002PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem2002PivotGridCell;
            #endregion

            // Verify that the 'Text' property of '20,02' PivotGridCell equals '13,02'
            Assert.AreEqual(this.CheckCalculations_C4_S21ExpectedValues.UIItem2002PivotGridCellText, uIItem2002PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S25 - Use 'CheckCalculations_C4_S25ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S25()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIOhlinLenaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIOhlinLenaPivotGridFieldValue;
            DXPivotGridCell uIItem2002PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem2002PivotGridCell;
            DXPivotGridCell uIItem6PivotGridCell2 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem6PivotGridCell2;
            #endregion

            // Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Rheborg, Johan'
            Assert.AreEqual(this.CheckCalculations_C4_S25ExpectedValues.UIOhlinLenaPivotGridFieldValueText, uIOhlinLenaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '20,02' PivotGridCell equals '13,02'
            Assert.AreEqual(this.CheckCalculations_C4_S25ExpectedValues.UIItem2002PivotGridCellText, uIItem2002PivotGridCell.Text);

            // Verify that the 'Text' property of '6' PivotGridCell equals '6'
            Assert.AreEqual(this.CheckCalculations_C4_S25ExpectedValues.UIItem6PivotGridCell2Text, uIItem6PivotGridCell2.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S26 - Use 'CheckCalculations_C4_S26ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S26()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIOhlinLenaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIOhlinLenaPivotGridFieldValue;
            DXPivotGridCell uIItem2002PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem2002PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Rheborg, Johan'
            Assert.AreEqual(this.CheckCalculations_C4_S26ExpectedValues.UIOhlinLenaPivotGridFieldValueText, uIOhlinLenaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '20,02' PivotGridCell equals '13,02'
            Assert.AreEqual(this.CheckCalculations_C4_S26ExpectedValues.UIItem2002PivotGridCellText, uIItem2002PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S28 - Use 'CheckCalculations_C4_S28ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S28()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIVAKANT6PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIVAKANT6PivotGridFieldValue;
            DXPivotGridCell uIItem6PivotGridCell2 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem6PivotGridCell2;
            #endregion

            // Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'Haber, Peter'
            Assert.AreEqual(this.CheckCalculations_C4_S28ExpectedValues.UIVAKANT6PivotGridFieldValueText, uIVAKANT6PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '6' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculations_C4_S28ExpectedValues.UIItem6PivotGridCell2Text, uIItem6PivotGridCell2.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S29 - Use 'CheckCalculations_C4_S29ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S29()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIEklandBrittPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIEklandBrittPivotGridFieldValue;
            DXPivotGridCell uIItem3153PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem3153PivotGridCell;
            DXPivotGridCell uIItem3125PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem3125PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Gustavsson, Robert'
            Assert.AreEqual(this.CheckCalculations_C4_S29ExpectedValues.UIEklandBrittPivotGridFieldValueText, uIEklandBrittPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '31,53' PivotGridCell equals '31,53'
            Assert.AreEqual(this.CheckCalculations_C4_S29ExpectedValues.UIItem3153PivotGridCellText, uIItem3153PivotGridCell.Text);

            // Verify that the 'Text' property of '31,25' PivotGridCell equals '31,25'
            Assert.AreEqual(this.CheckCalculations_C4_S29ExpectedValues.UIItem3125PivotGridCellText, uIItem3125PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S3 - Use 'CheckCalculations_C4_S3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S3()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridFieldValue uIEklandBrittPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIEklandBrittPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Persbrandt, Mikael'
            Assert.AreEqual(this.CheckCalculations_C4_S3ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculations_C4_S3ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Rheborg, Johan'
            Assert.AreEqual(this.CheckCalculations_C4_S3ExpectedValues.UIEklandBrittPivotGridFieldValueText, uIEklandBrittPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '0,02'
            Assert.AreEqual(this.CheckCalculations_C4_S3ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S30 - Use 'CheckCalculations_C4_S30ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S30()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIEklandBrittPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIEklandBrittPivotGridFieldValue;
            DXPivotGridCell uIItem3153PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem3153PivotGridCell;
            DXPivotGridCell uIItem3125PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem3125PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Gustavsson, Robert'
            Assert.AreEqual(this.CheckCalculations_C4_S30ExpectedValues.UIEklandBrittPivotGridFieldValueText, uIEklandBrittPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '31,53' PivotGridCell equals '14,02'
            Assert.AreEqual(this.CheckCalculations_C4_S30ExpectedValues.UIItem3153PivotGridCellText, uIItem3153PivotGridCell.Text);

            // Verify that the 'Text' property of '31,25' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculations_C4_S30ExpectedValues.UIItem3125PivotGridCellText, uIItem3125PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C4_S5 - Use 'CheckCalculations_C4_S5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C4_S5()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            DXPivotGridCell uIItem13PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem13PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Gustavsson, Robert'
            Assert.AreEqual(this.CheckCalculations_C4_S5ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '8'
            Assert.AreEqual(this.CheckCalculations_C4_S5ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '15,53'
            Assert.AreEqual(this.CheckCalculations_C4_S5ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '0,02'
            Assert.AreEqual(this.CheckCalculations_C4_S5ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C4_S5ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '23,25'
            Assert.AreEqual(this.CheckCalculations_C4_S5ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);

            // Verify that the 'Text' property of '13' PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C4_S5ExpectedValues.UIItem13PivotGridCellText, uIItem13PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C5_S2 - Use 'CheckCalculations_C5_S2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C5_S2()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Jähkel, Lennart'
            Assert.AreEqual(this.CheckCalculations_C5_S2ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '6'
            Assert.AreEqual(this.CheckCalculations_C5_S2ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Lassgård, Rolf'
            Assert.AreEqual(this.CheckCalculations_C5_S2ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '126'
            Assert.AreEqual(this.CheckCalculations_C5_S2ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C5_S4 - Use 'CheckCalculations_C5_S4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C5_S4()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Jähkel, Lennart'
            Assert.AreEqual(this.CheckCalculations_C5_S4ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '4'
            Assert.AreEqual(this.CheckCalculations_C5_S4ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C5_S5 - Use 'CheckCalculations_C5_S5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C5_S5()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Lassgård, Rolf'
            Assert.AreEqual(this.CheckCalculations_C5_S5ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '115,71'
            Assert.AreEqual(this.CheckCalculations_C5_S5ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '6'
            Assert.AreEqual(this.CheckCalculations_C5_S5ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C5_S6 - Use 'CheckCalculations_C5_S6ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C5_S6()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Lassgård, Rolf'
            Assert.AreEqual(this.CheckCalculations_C5_S6ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '11,71'
            Assert.AreEqual(this.CheckCalculations_C5_S6ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '6'
            Assert.AreEqual(this.CheckCalculations_C5_S6ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C6_S13 - Use 'CheckCalculations_C6_S13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C6_S13()
        {
            #region Variable Declarations
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of '26' PivotGridCell equals '303'
            Assert.AreEqual(this.CheckCalculations_C6_S13ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '1414'
            Assert.AreEqual(this.CheckCalculations_C6_S13ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C6_S17 - Use 'CheckCalculations_C6_S17ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C6_S17()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridFieldValue uIItem05082024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem05082024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem25082024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem25082024PivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridFieldValue uIItem23012024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem23012024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem04022024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem04022024PivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Oscarsson, Per'
            Assert.AreEqual(this.CheckCalculations_C6_S17ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '05.08.2024' PivotGridFieldValue equals '08.01.2024'
            Assert.AreEqual(this.CheckCalculations_C6_S17ExpectedValues.UIItem05082024PivotGridFieldValueText, uIItem05082024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '25.08.2024' PivotGridFieldValue equals '21.01.2024'
            Assert.AreEqual(this.CheckCalculations_C6_S17ExpectedValues.UIItem25082024PivotGridFieldValueText, uIItem25082024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '16'
            Assert.AreEqual(this.CheckCalculations_C6_S17ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '303'
            Assert.AreEqual(this.CheckCalculations_C6_S17ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of '23.01.2024' PivotGridFieldValue equals '29.01.2024'
            Assert.AreEqual(this.CheckCalculations_C6_S17ExpectedValues.UIItem23012024PivotGridFieldValueText, uIItem23012024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '04.02.2024' PivotGridFieldValue equals '04.02.2024'
            Assert.AreEqual(this.CheckCalculations_C6_S17ExpectedValues.UIItem04022024PivotGridFieldValueText, uIItem04022024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '3,5'
            Assert.AreEqual(this.CheckCalculations_C6_S17ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '600'
            Assert.AreEqual(this.CheckCalculations_C6_S17ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C6_S21 - Use 'CheckCalculations_C6_S21ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C6_S21()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridFieldValue uIItem08012024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem08012024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem22012024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem22012024PivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            DXPivotGridCell uIItem13PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem13PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Oscarsson, Per'
            Assert.AreEqual(this.CheckCalculations_C6_S21ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '08.01.2024' PivotGridFieldValue equals '22.01.2024'
            Assert.AreEqual(this.CheckCalculations_C6_S21ExpectedValues.UIItem08012024PivotGridFieldValueText, uIItem08012024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '22.01.2024' PivotGridFieldValue equals '28.01.2024'
            Assert.AreEqual(this.CheckCalculations_C6_S21ExpectedValues.UIItem22012024PivotGridFieldValueText, uIItem22012024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C6_S21ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);

            // Verify that the 'Text' property of '13' PivotGridCell equals '1000'
            Assert.AreEqual(this.CheckCalculations_C6_S21ExpectedValues.UIItem13PivotGridCellText, uIItem13PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C6_S26 - Use 'CheckCalculations_C6_S26ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C6_S26()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Nyqvist, Mikael'
            Assert.AreEqual(this.CheckCalculations_C6_S26ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '21,17'
            Assert.AreEqual(this.CheckCalculations_C6_S26ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '36'
            Assert.AreEqual(this.CheckCalculations_C6_S26ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Kulle, Nils'
            Assert.AreEqual(this.CheckCalculations_C6_S26ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C6_S26ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '60'
            Assert.AreEqual(this.CheckCalculations_C6_S26ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C6_S30 - Use 'CheckCalculations_C6_S30ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C6_S30()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridFieldValue uIItem23012024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem23012024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem04022024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem04022024PivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Kulle, Nils'
            Assert.AreEqual(this.CheckCalculations_C6_S30ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '23.01.2024' PivotGridFieldValue equals '29.01.2024'
            Assert.AreEqual(this.CheckCalculations_C6_S30ExpectedValues.UIItem23012024PivotGridFieldValueText, uIItem23012024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '04.02.2024' PivotGridFieldValue equals '25.02.2024'
            Assert.AreEqual(this.CheckCalculations_C6_S30ExpectedValues.UIItem04022024PivotGridFieldValueText, uIItem04022024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C6_S30ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '60'
            Assert.AreEqual(this.CheckCalculations_C6_S30ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Nyqvist, Mikael'
            Assert.AreEqual(this.CheckCalculations_C6_S30ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '21,17'
            Assert.AreEqual(this.CheckCalculations_C6_S30ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '33'
            Assert.AreEqual(this.CheckCalculations_C6_S30ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C6_S33 - Use 'CheckCalculations_C6_S33ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C6_S33()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Nyqvist, Mikael'
            Assert.AreEqual(this.CheckCalculations_C6_S33ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '105000'
            Assert.AreEqual(this.CheckCalculations_C6_S33ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Kulle, Nils'
            Assert.AreEqual(this.CheckCalculations_C6_S33ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '240000'
            Assert.AreEqual(this.CheckCalculations_C6_S33ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C6_S5 - Use 'CheckCalculations_C6_S5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C6_S5()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Oscarsson, Per'
            Assert.AreEqual(this.CheckCalculations_C6_S5ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals ''
            Assert.AreEqual(this.CheckCalculations_C6_S5ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '1'
            Assert.AreEqual(this.CheckCalculations_C6_S5ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Vollter, Sven'
            Assert.AreEqual(this.CheckCalculations_C6_S5ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '3,75'
            Assert.AreEqual(this.CheckCalculations_C6_S5ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '6'
            Assert.AreEqual(this.CheckCalculations_C6_S5ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C6_S7 - Use 'CheckCalculations_C6_S7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C6_S7()
        {
            #region Variable Declarations
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of '26' PivotGridCell equals '3'
            Assert.AreEqual(this.CheckCalculations_C6_S7ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '11'
            Assert.AreEqual(this.CheckCalculations_C6_S7ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckCalculations_C6_S9 - Use 'CheckCalculations_C6_S9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalculations_C6_S9()
        {
            #region Variable Declarations
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '28'
            Assert.AreEqual(this.CheckCalculations_C6_S9ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckFTTcode400_C1_S5 - Use 'CheckFTTcode400_C1_S5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckFTTcode400_C1_S5()
        {
            #region Variable Declarations
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            DXPivotGridCell uIItem18PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell;
            DXPivotGridCell uIItem18PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem18PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of PivotGridCell equals '18'
            Assert.AreEqual(this.CheckFTTcode400_C1_S5ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckFTTcode400_C1_S5ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckFTTcode400_C1_S5ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals '18'
            Assert.AreEqual(this.CheckFTTcode400_C1_S5ExpectedValues.UIItem18PivotGridCellText, uIItem18PivotGridCell.Text);

            // Verify that the 'Text' property of '18' PivotGridCell equals '18'
            Assert.AreEqual(this.CheckFTTcode400_C1_S5ExpectedValues.UIItem18PivotGridCell1Text, uIItem18PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckFTTcode410_C1_S5 - Use 'CheckFTTcode410_C1_S5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckFTTcode410_C1_S5()
        {
            #region Variable Declarations
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            DXPivotGridCell uIItem13PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem13PivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell1;
            DXPivotGridCell uIItem26PivotGridCell2 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell2;
            #endregion

            // Verify that the 'Text' property of '26' PivotGridCell equals '26'
            Assert.AreEqual(this.CheckFTTcode410_C1_S5ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '16,25'
            Assert.AreEqual(this.CheckFTTcode410_C1_S5ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);

            // Verify that the 'Text' property of '13' PivotGridCell equals '13'
            Assert.AreEqual(this.CheckFTTcode410_C1_S5ExpectedValues.UIItem13PivotGridCellText, uIItem13PivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '26'
            Assert.AreEqual(this.CheckFTTcode410_C1_S5ExpectedValues.UIItem26PivotGridCell1Text, uIItem26PivotGridCell1.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '26'
            Assert.AreEqual(this.CheckFTTcode410_C1_S5ExpectedValues.UIItem26PivotGridCell2Text, uIItem26PivotGridCell2.Text);
        }
        
        /// <summary>
        /// CheckFTThasEmptyList - Use 'CheckFTThasEmptyListExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckFTThasEmptyList()
        {
            #region Variable Declarations
            DXButton uIKalkulerButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIKalkulerButton;
            DXButton uIOverførButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIOverførButton;
            DXButton uIStoppButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIStoppButton;
            DXButton uIViseksportloggButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIViseksportloggButton;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            #endregion

            // Verify that the 'Enabled' property of 'Kalkuler' button equals 'True'
            Assert.AreEqual(this.CheckFTThasEmptyListExpectedValues.UIKalkulerButtonEnabled, uIKalkulerButton.Enabled);

            // Verify that the 'Enabled' property of 'Overfør...' button equals 'False'
            Assert.AreEqual(this.CheckFTThasEmptyListExpectedValues.UIOverførButtonEnabled, uIOverførButton.Enabled);

            // Verify that the 'Enabled' property of 'Stopp...' button equals 'False'
            Assert.AreEqual(this.CheckFTThasEmptyListExpectedValues.UIStoppButtonEnabled, uIStoppButton.Enabled);

            // Verify that the 'Enabled' property of 'Vis eksportlogg...' button equals 'True'
            Assert.AreEqual(this.CheckFTThasEmptyListExpectedValues.UIViseksportloggButtonEnabled, uIViseksportloggButton.Enabled);

            // Verify that the 'Text' property of PivotGridCell equals ''
            Assert.AreEqual(this.CheckFTThasEmptyListExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckFTTPeriod_C1_S5 - Use 'CheckFTTPeriod_C1_S5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckFTTPeriod_C1_S5()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIItem05082024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem05082024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem25082024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem25082024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem05082024PivotGridFieldValue1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem05082024PivotGridFieldValue1;
            DXPivotGridFieldValue uIItem25082024PivotGridFieldValue1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem25082024PivotGridFieldValue1;
            #endregion

            // Verify that the 'Text' property of '05.08.2024' PivotGridFieldValue equals '05.08.2024'
            Assert.AreEqual(this.CheckFTTPeriod_C1_S5ExpectedValues.UIItem05082024PivotGridFieldValueText, uIItem05082024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '25.08.2024' PivotGridFieldValue equals '25.08.2024'
            Assert.AreEqual(this.CheckFTTPeriod_C1_S5ExpectedValues.UIItem25082024PivotGridFieldValueText, uIItem25082024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '05.08.2024' PivotGridFieldValue equals '05.08.2024'
            Assert.AreEqual(this.CheckFTTPeriod_C1_S5ExpectedValues.UIItem05082024PivotGridFieldValue1Text, uIItem05082024PivotGridFieldValue1.Text);

            // Verify that the 'Text' property of '25.08.2024' PivotGridFieldValue equals '25.08.2024'
            Assert.AreEqual(this.CheckFTTPeriod_C1_S5ExpectedValues.UIItem25082024PivotGridFieldValue1Text, uIItem25082024PivotGridFieldValue1.Text);
        }
        
        /// <summary>
        /// CheckFTTransfereButtonIsDisabled - Use 'CheckFTTransfereButtonIsDisabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckFTTransfereButtonIsDisabled()
        {
            #region Variable Declarations
            DXButton uIOverførButton = this.UIOverførtilleggWindow.UIOverførButton;
            #endregion

            // Verify that the 'Enabled' property of '&Overfør' button equals 'False'
            Assert.AreEqual(this.CheckFTTransfereButtonIsDisabledExpectedValues.UIOverførButtonEnabled, uIOverførButton.Enabled);
        }
        
        /// <summary>
        /// CheckFTTransfereStormareHasOneOkLine - Use 'CheckFTTransfereStormareHasOneOkLineExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckFTTransfereStormareHasOneOkLine()
        {
            #region Variable Declarations
            DXTextEdit uIRow1ColumncolToEdit = this.UIOverførtilleggWindow.UIGcExportsTable.UIRow1ColumncolToEdit;
            DXTextEdit uIRow2ColumncolToEdit = this.UIOverførtilleggWindow.UIGcExportsTable.UIRow2ColumncolToEdit;
            DXCell uIStormarePeterCell = this.UIOverførtilleggWindow.UIGcExportsTable.UIStormarePeterCell;
            DXCell uIStormarePeterCell1 = this.UIOverførtilleggWindow.UIGcExportsTable.UIStormarePeterCell1;
            #endregion

            // Verify that the 'ErrorText' property of '[Row]1[Column]colTo' text box equals 'Valgt linje slutter før eksport start.'
            Assert.AreEqual(this.CheckFTTransfereStormareHasOneOkLineExpectedValues.UIRow1ColumncolToEditErrorText, uIRow1ColumncolToEdit.ErrorText);

            // Verify that the 'Text' property of '[Row]2[Column]colTo' text box equals '04.02.2024'
            Assert.AreEqual(this.CheckFTTransfereStormareHasOneOkLineExpectedValues.UIRow2ColumncolToEditText, uIRow2ColumncolToEdit.Text);

            // Verify that the 'Text' property of '[Row]1[Column]colTo' text box equals '22.01.2024'
            Assert.AreEqual(this.CheckFTTransfereStormareHasOneOkLineExpectedValues.UIRow1ColumncolToEditText, uIRow1ColumncolToEdit.Text);

            // Verify that the 'Text' property of 'Stormare, Peter' cell equals 'Stormare, Peter'
            Assert.AreEqual(this.CheckFTTransfereStormareHasOneOkLineExpectedValues.UIStormarePeterCellText, uIStormarePeterCell.Text);

            // Verify that the 'Text' property of 'Stormare, Peter' cell equals 'Stormare, Peter'
            Assert.AreEqual(this.CheckFTTransfereStormareHasOneOkLineExpectedValues.UIStormarePeterCell1Text, uIStormarePeterCell1.Text);
        }
        
        /// <summary>
        /// CheckNoCalculationEkland_C1_S7 - Use 'CheckNoCalculationEkland_C1_S7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckNoCalculationEkland_C1_S7()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridFieldValue uIOhlinLenaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIOhlinLenaPivotGridFieldValue;
            DXPivotGridFieldValue uIVAKANT6PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIVAKANT6PivotGridFieldValue;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Adams, Maud'
            Assert.AreEqual(this.CheckNoCalculationEkland_C1_S7ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Bergman, Ingrid'
            Assert.AreEqual(this.CheckNoCalculationEkland_C1_S7ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Ohlin, Lena'
            Assert.AreEqual(this.CheckNoCalculationEkland_C1_S7ExpectedValues.UIOhlinLenaPivotGridFieldValueText, uIOhlinLenaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'VAKANT6'
            Assert.AreEqual(this.CheckNoCalculationEkland_C1_S7ExpectedValues.UIVAKANT6PivotGridFieldValueText, uIVAKANT6PivotGridFieldValue.Text);
        }
        
        /// <summary>
        /// CheckStellanCalculations_C2_S10 - Use 'CheckStellanCalculations_C2_S10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStellanCalculations_C2_S10()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
            Assert.AreEqual(this.CheckStellanCalculations_C2_S10ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '11,56'
            Assert.AreEqual(this.CheckStellanCalculations_C2_S10ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '16,19'
            Assert.AreEqual(this.CheckStellanCalculations_C2_S10ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckStellanCalculations_C2_S11 - Use 'CheckStellanCalculations_C2_S11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStellanCalculations_C2_S11()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
            Assert.AreEqual(this.CheckStellanCalculations_C2_S11ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '14,87'
            Assert.AreEqual(this.CheckStellanCalculations_C2_S11ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '11,89'
            Assert.AreEqual(this.CheckStellanCalculations_C2_S11ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckStellanCalculations_C2_S9 - Use 'CheckStellanCalculations_C2_S9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStellanCalculations_C2_S9()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridCell uIItemPivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItemPivotGridCell;
            DXPivotGridCell uIItem26PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem26PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
            Assert.AreEqual(this.CheckStellanCalculations_C2_S9ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of PivotGridCell equals '10'
            Assert.AreEqual(this.CheckStellanCalculations_C2_S9ExpectedValues.UIItemPivotGridCellText, uIItemPivotGridCell.Text);

            // Verify that the 'Text' property of '26' PivotGridCell equals '14'
            Assert.AreEqual(this.CheckStellanCalculations_C2_S9ExpectedValues.UIItem26PivotGridCellText, uIItem26PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckStormareCalculations_C2_S14 - Use 'CheckStormareCalculations_C2_S14ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStormareCalculations_C2_S14()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            #endregion

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Stormare, Peter'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S14ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals ''
            Assert.AreEqual(this.CheckStormareCalculations_C2_S14ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '41,63'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S14ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);
        }
        
        /// <summary>
        /// CheckStormareCalculations_C2_S23 - Use 'CheckStormareCalculations_C2_S23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStormareCalculations_C2_S23()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridCell uIItem8PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell;
            DXPivotGridCell uIItem1625PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem1625PivotGridCell;
            DXPivotGridCell uIItem8PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem8PivotGridCell1;
            DXPivotGridCell uIItem13PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem13PivotGridCell;
            DXPivotGridFieldValue uIItem23012024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem23012024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem04022024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem04022024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem08012024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem08012024PivotGridFieldValue;
            DXPivotGridFieldValue uIItem22012024PivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem22012024PivotGridFieldValue;
            #endregion

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Stormare, Peter'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S23ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals '8'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S23ExpectedValues.UIItem8PivotGridCellText, uIItem8PivotGridCell.Text);

            // Verify that the 'Text' property of '16,25' PivotGridCell equals '12'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S23ExpectedValues.UIItem1625PivotGridCellText, uIItem1625PivotGridCell.Text);

            // Verify that the 'Text' property of '8' PivotGridCell equals ''
            Assert.AreEqual(this.CheckStormareCalculations_C2_S23ExpectedValues.UIItem8PivotGridCell1Text, uIItem8PivotGridCell1.Text);

            // Verify that the 'Text' property of '13' PivotGridCell equals '20'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S23ExpectedValues.UIItem13PivotGridCellText, uIItem13PivotGridCell.Text);

            // Verify that the 'Text' property of '23.01.2024' PivotGridFieldValue equals '23.01.2024'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S23ExpectedValues.UIItem23012024PivotGridFieldValueText, uIItem23012024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '04.02.2024' PivotGridFieldValue equals '04.02.2024'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S23ExpectedValues.UIItem04022024PivotGridFieldValueText, uIItem04022024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '08.01.2024' PivotGridFieldValue equals '08.01.2024'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S23ExpectedValues.UIItem08012024PivotGridFieldValueText, uIItem08012024PivotGridFieldValue.Text);

            // Verify that the 'Text' property of '22.01.2024' PivotGridFieldValue equals '22.01.2024'
            Assert.AreEqual(this.CheckStormareCalculations_C2_S23ExpectedValues.UIItem22012024PivotGridFieldValueText, uIItem22012024PivotGridFieldValue.Text);
        }
        
        /// <summary>
        /// CheckStormareNoCalculations_C2_S21 - Use 'CheckStormareNoCalculations_C2_S21ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStormareNoCalculations_C2_S21()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIAdamsMaudPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIAdamsMaudPivotGridFieldValue;
            DXPivotGridFieldValue uIBergmanIngridPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIBergmanIngridPivotGridFieldValue;
            DXPivotGridFieldValue uIEklandBrittPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIEklandBrittPivotGridFieldValue;
            #endregion

            // Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
            Assert.AreEqual(this.CheckStormareNoCalculations_C2_S21ExpectedValues.UIAdamsMaudPivotGridFieldValueText, uIAdamsMaudPivotGridFieldValue.Text);

            // Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Edwall, Allan'
            Assert.AreEqual(this.CheckStormareNoCalculations_C2_S21ExpectedValues.UIBergmanIngridPivotGridFieldValueText, uIBergmanIngridPivotGridFieldValue.Text);

            // Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'VAKANT4'
            Assert.AreEqual(this.CheckStormareNoCalculations_C2_S21ExpectedValues.UIEklandBrittPivotGridFieldValueText, uIEklandBrittPivotGridFieldValue.Text);
        }
        
        /// <summary>
        /// CheckTransAndStopIsDisabled_C1_S11 - Use 'CheckTransAndStopIsDisabled_C1_S11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTransAndStopIsDisabled_C1_S11()
        {
            #region Variable Declarations
            DXButton uIOverførButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIOverførButton;
            DXButton uIStoppButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIStoppButton;
            #endregion

            // Verify that the 'Enabled' property of 'Overfør...' button equals 'False'
            Assert.AreEqual(this.CheckTransAndStopIsDisabled_C1_S11ExpectedValues.UIOverførButtonEnabled, uIOverførButton.Enabled);

            // Verify that the 'Enabled' property of 'Stopp...' button equals 'False'
            Assert.AreEqual(this.CheckTransAndStopIsDisabled_C1_S11ExpectedValues.UIStoppButtonEnabled, uIStoppButton.Enabled);
        }
        
        /// <summary>
        /// CheckTransferFTTButtonDisabled - Use 'CheckTransferFTTButtonDisabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTransferFTTButtonDisabled()
        {
            #region Variable Declarations
            DXButton uIKalkulerButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIKalkulerButton;
            #endregion

            // Verify that the 'Enabled' property of 'Kalkuler' button equals 'False'
            Assert.AreEqual(this.CheckTransferFTTButtonDisabledExpectedValues.UIKalkulerButtonEnabled, uIKalkulerButton.Enabled);
        }
        
        /// <summary>
        /// CheckTransferFTTButtonEnabled - Use 'CheckTransferFTTButtonEnabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTransferFTTButtonEnabled()
        {
            #region Variable Declarations
            DXButton uIOverførButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIOverførButton;
            #endregion

            // Verify that the 'Enabled' property of 'Overfør...' button equals 'True'
            Assert.AreEqual(this.CheckTransferFTTButtonEnabledExpectedValues.UIOverførButtonEnabled, uIOverførButton.Enabled);
        }
        
        /// <summary>
        /// CheckUTACalculationEndre_Garbo_C1_S23 - Use 'CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckUTACalculationEndre_Garbo_C1_S23()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIVAKANT6PivotGridFieldValue1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIVAKANT6PivotGridFieldValue1;
            DXPivotGridCell uIItem6PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem6PivotGridCell;
            DXPivotGridFieldValue uIGarboGretaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIGarboGretaPivotGridFieldValue;
            DXPivotGridCell uIItem6PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem6PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'Endre, Lena'
            Assert.AreEqual(this.CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues.UIVAKANT6PivotGridFieldValue1Text, uIVAKANT6PivotGridFieldValue1.Text);

            // Verify that the 'Text' property of '6' PivotGridCell equals '6'
            Assert.AreEqual(this.CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues.UIItem6PivotGridCellText, uIItem6PivotGridCell.Text);

            // Verify that the 'Text' property of 'Garbo, Greta' PivotGridFieldValue equals 'Garbo, Greta'
            Assert.AreEqual(this.CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues.UIGarboGretaPivotGridFieldValueText, uIGarboGretaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '6' PivotGridCell equals '6'
            Assert.AreEqual(this.CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues.UIItem6PivotGridCell1Text, uIItem6PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckUTACalculationGarbo_C1_S24 - Use 'CheckUTACalculationGarbo_C1_S24ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckUTACalculationGarbo_C1_S24()
        {
            #region Variable Declarations
            DXPivotGridFieldValue uIGarboGretaPivotGridFieldValue = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIGarboGretaPivotGridFieldValue;
            DXPivotGridCell uIItem6PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem6PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of 'Garbo, Greta' PivotGridFieldValue equals 'Garbo, Greta'
            Assert.AreEqual(this.CheckUTACalculationGarbo_C1_S24ExpectedValues.UIGarboGretaPivotGridFieldValueText, uIGarboGretaPivotGridFieldValue.Text);

            // Verify that the 'Text' property of '6' PivotGridCell equals '5,57'
            Assert.AreEqual(this.CheckUTACalculationGarbo_C1_S24ExpectedValues.UIItem6PivotGridCell1Text, uIItem6PivotGridCell1.Text);
        }
        
        /// <summary>
        /// CheckUTCalculationEndre_Garbo_C1_S24 - Use 'CheckUTCalculationEndre_Garbo_C1_S24ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckUTCalculationEndre_Garbo_C1_S24()
        {
            #region Variable Declarations
            DXPivotGridCell uIItem6PivotGridCell = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem6PivotGridCell;
            DXPivotGridCell uIItem6PivotGridCell1 = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIPgcCalculationResultPivotGrid.UIItem6PivotGridCell1;
            #endregion

            // Verify that the 'Text' property of '6' PivotGridCell equals '8,67'
            Assert.AreEqual(this.CheckUTCalculationEndre_Garbo_C1_S24ExpectedValues.UIItem6PivotGridCellText, uIItem6PivotGridCell.Text);

            // Verify that the 'Text' property of '6' PivotGridCell equals '21,13'
            Assert.AreEqual(this.CheckUTCalculationEndre_Garbo_C1_S24ExpectedValues.UIItem6PivotGridCell1Text, uIItem6PivotGridCell1.Text);
        }
        
        /// <summary>
        /// ClickButtonShiftClasses
        /// </summary>
        public void ClickButtonShiftClasses()
        {
            #region Variable Declarations
            DXButton uIVaktklasserButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIVaktklasserButton;
            #endregion

            // Click 'Vaktklasser' button
            Mouse.Click(uIVaktklasserButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RightClickGustavssonCell
        /// </summary>
        public void RightClickGustavssonCell()
        {
            #region Variable Declarations
            DXCell uIGustavssonRobertCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIGustavssonRobertCell2;
            #endregion

            // Right-Click 'Gustavsson, Robert' cell
            Mouse.Click(uIGustavssonRobertCell2, MouseButtons.Right, ModifierKeys.None, new Point(122, 9));
        }
        
        /// <summary>
        /// RightClickGustavssonCellLine3
        /// </summary>
        public void RightClickGustavssonCellLine3()
        {
            #region Variable Declarations
            DXCell uIGustavssonRobertCell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIGustavssonRobertCell3;
            #endregion

            // Right-Click 'Gustavsson, Robert' cell
            Mouse.Click(uIGustavssonRobertCell3, MouseButtons.Right, ModifierKeys.None, new Point(134, 11));
        }
        
        /// <summary>
        /// RightClickKulleCell
        /// </summary>
        public void RightClickKulleCell()
        {
            #region Variable Declarations
            DXCell uIGustavssonRobertCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIGustavssonRobertCell2;
            #endregion

            // Right-Click 'Gustavsson, Robert' cell
            Mouse.Click(uIGustavssonRobertCell2, MouseButtons.Right, ModifierKeys.None, new Point(95, 8));
        }
        
        /// <summary>
        /// RightClickLennartLine1
        /// </summary>
        public void RightClickLennartLine1()
        {
            #region Variable Declarations
            DXCell uIVonSudowMaxCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIVonSudowMaxCell1;
            #endregion

            // Right-Click 'Von Sudow, Max' cell
            Mouse.Click(uIVonSudowMaxCell1, MouseButtons.Right, ModifierKeys.None, new Point(107, 10));
        }
        
        /// <summary>
        /// RightClickNyquistCell
        /// </summary>
        public void RightClickNyquistCell()
        {
            #region Variable Declarations
            DXCell uIVonSudowMaxCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIVonSudowMaxCell1;
            #endregion

            // Right-Click 'Von Sudow, Max' cell
            Mouse.Click(uIVonSudowMaxCell1, MouseButtons.Right, ModifierKeys.None, new Point(79, 9));
        }
        
        /// <summary>
        /// RightClickOscarssonPerCell
        /// </summary>
        public void RightClickOscarssonPerCell()
        {
            #region Variable Declarations
            DXCell uIVonSudowMaxCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIVonSudowMaxCell1;
            #endregion

            // Right-Click 'Von Sudow, Max' cell
            Mouse.Click(uIVonSudowMaxCell1, MouseButtons.Right, ModifierKeys.None, new Point(84, 9));
        }
        
        /// <summary>
        /// RightClickOscarssonPerCellLine2
        /// </summary>
        public void RightClickOscarssonPerCellLine2()
        {
            #region Variable Declarations
            DXCell uIGustavssonRobertCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIGustavssonRobertCell2;
            #endregion

            // Right-Click 'Gustavsson, Robert' cell
            Mouse.Click(uIGustavssonRobertCell2, MouseButtons.Right, ModifierKeys.None, new Point(99, 13));
        }
        
        /// <summary>
        /// RightClickPersbandtLine1
        /// </summary>
        public void RightClickPersbandtLine1()
        {
            #region Variable Declarations
            DXCell uIVonSudowMaxCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIVonSudowMaxCell1;
            #endregion

            // Right-Click 'Von Sudow, Max' cell
            Mouse.Click(uIVonSudowMaxCell1, MouseButtons.Right, ModifierKeys.None, new Point(80, 9));
        }
        
        /// <summary>
        /// RightClickPersbandtLine2
        /// </summary>
        public void RightClickPersbandtLine2()
        {
            #region Variable Declarations
            DXCell uIGustavssonRobertCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIGustavssonRobertCell2;
            #endregion

            // Right-Click 'Gustavsson, Robert' cell
            Mouse.Click(uIGustavssonRobertCell2, MouseButtons.Right, ModifierKeys.None, new Point(99, 13));
        }
        
        /// <summary>
        /// RightClickPersbrandtCell
        /// </summary>
        public void RightClickPersbrandtCell()
        {
            #region Variable Declarations
            DXCell uIVonSudowMaxCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIVonSudowMaxCell1;
            #endregion

            // Right-Click 'Von Sudow, Max' cell
            Mouse.Click(uIVonSudowMaxCell1, MouseButtons.Right, ModifierKeys.None, new Point(118, 12));
        }
        
        /// <summary>
        /// RightClickRheborgCell
        /// </summary>
        public void RightClickRheborgCell()
        {
            #region Variable Declarations
            DXCell uIRheborgJohanCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIRheborgJohanCell1;
            #endregion

            // Right-Click 'Rheborg, Johan' cell
            Mouse.Click(uIRheborgJohanCell1, MouseButtons.Right, ModifierKeys.None, new Point(132, 10));
        }
        
        /// <summary>
        /// RightClickRheborgLine2Cell
        /// </summary>
        public void RightClickRheborgLine2Cell()
        {
            #region Variable Declarations
            DXCell uIRheborgJohanCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIRheborgJohanCell2;
            #endregion

            // Right-Click 'Rheborg, Johan' cell
            Mouse.Click(uIRheborgJohanCell2, MouseButtons.Right, ModifierKeys.None, new Point(110, 10));
        }
        
        /// <summary>
        /// RightClickRolfLine1
        /// </summary>
        public void RightClickRolfLine1()
        {
            #region Variable Declarations
            DXCell uIGustavssonRobertCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIGustavssonRobertCell2;
            #endregion

            // Right-Click 'Gustavsson, Robert' cell
            Mouse.Click(uIGustavssonRobertCell2, MouseButtons.Right, ModifierKeys.None, new Point(106, 7));
        }
        
        /// <summary>
        /// RightClickRolfLine2
        /// </summary>
        public void RightClickRolfLine2()
        {
            #region Variable Declarations
            DXCell uILassgårdRolfCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UILassgårdRolfCell1;
            #endregion

            // Right-Click 'Lassgård, Rolf' cell
            Mouse.Click(uILassgårdRolfCell1, MouseButtons.Right, ModifierKeys.None, new Point(110, 11));
        }
        
        /// <summary>
        /// RightClickStormareLine2Cell
        /// </summary>
        public void RightClickStormareLine2Cell()
        {
            #region Variable Declarations
            DXCell uILassgårdRolfCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UILassgårdRolfCell1;
            #endregion

            // Right-Click 'Lassgård, Rolf' cell
            Mouse.Click(uILassgårdRolfCell1, MouseButtons.Right, ModifierKeys.None, new Point(112, 11));
        }
        
        /// <summary>
        /// SetLine2RheborgInactive
        /// </summary>
        public void SetLine2RheborgInactive()
        {
            #region Variable Declarations
            DXCell uIRheborgJohanCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIRheborgJohanCell2;
            DXMenuItem uISettlinjeraktiveinakMenuItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UISettlinjeraktiveinakMenuItem;
            DXMenuBaseButtonItem uISettlinje2inaktiv515MenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UISettlinjeraktiveinakMenuItem.UISettlinje2inaktiv515MenuBaseButtonItem;
            #endregion

            // Right-Click 'Rheborg, Johan' cell
            Mouse.Click(uIRheborgJohanCell2, MouseButtons.Right, ModifierKeys.None, new Point(119, 13));

            // Click 'Sett linjer aktive/inaktive' menu item
            Mouse.Click(uISettlinjeraktiveinakMenuItem, new Point(108, 8));

            // Click 'Sett linje 2 inaktiv (5150 - Faste tillegg)' MenuBaseButtonItem
            Mouse.Click(uISettlinje2inaktiv515MenuBaseButtonItem, new Point(110, 9));
        }
        
        /// <summary>
        /// ShowFTTAsAveragePrMnd - Use 'ShowFTTAsAveragePrMndParams' to pass parameters into this method.
        /// </summary>
        public void ShowFTTAsAveragePrMnd()
        {
            #region Variable Declarations
            DXComboBox uICbeCalculationTypeComboBox = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UICbeCalculationTypeComboBox;
            #endregion

            // Select 'Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.AveragePerMonthCalculationTypeModel' in 'cbeCalculationType' combo box
            //ValueTypeName
            uICbeCalculationTypeComboBox.ValueTypeName = this.ShowFTTAsAveragePrMndParams.UICbeCalculationTypeComboBoxValueTypeName;

            // Select 'Gjennomsnitt per. Mnd. [SelectionStart]0' in 'cbeCalculationType' combo box
            //ValueAsString
            uICbeCalculationTypeComboBox.ValueAsString = this.ShowFTTAsAveragePrMndParams.UICbeCalculationTypeComboBoxValueAsString;
        }
        
        /// <summary>
        /// ShowFTTAsAveragePrMndCalendarPlan - Use 'ShowFTTAsAveragePrMndCalendarPlanParams' to pass parameters into this method.
        /// </summary>
        public void ShowFTTAsAveragePrMndCalendarPlan()
        {
            #region Variable Declarations
            DXComboBox uICbeCalculationTypeComboBox = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UICbeCalculationTypeComboBox;
            #endregion

            // Select 'Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.AveragePerMonthCalculationTypeModel' in 'cbeCalculationType' combo box
            //ValueTypeName
            uICbeCalculationTypeComboBox.ValueTypeName = this.ShowFTTAsAveragePrMndCalendarPlanParams.UICbeCalculationTypeComboBoxValueTypeName;

            // Select 'Gjennomsnitt per. Mnd. [SelectionStart]0' in 'cbeCalculationType' combo box
            //ValueAsString
            uICbeCalculationTypeComboBox.ValueAsString = this.ShowFTTAsAveragePrMndCalendarPlanParams.UICbeCalculationTypeComboBoxValueAsString;
        }
        
        /// <summary>
        /// ShowFTTAsTotalCalendarPlan - Use 'ShowFTTAsTotalCalendarPlanParams' to pass parameters into this method.
        /// </summary>
        public void ShowFTTAsTotalCalendarPlan()
        {
            #region Variable Declarations
            DXComboBox uICbeCalculationTypeComboBox = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UICbeCalculationTypeComboBox;
            #endregion

            // Select 'Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.TotalCalculationTypeModel' in 'cbeCalculationType' combo box
            //ValueTypeName
            uICbeCalculationTypeComboBox.ValueTypeName = this.ShowFTTAsTotalCalendarPlanParams.UICbeCalculationTypeComboBoxValueTypeName;

            // Select 'Totalt for hele arbeidsplan [SelectionStart]0' in 'cbeCalculationType' combo box
            //ValueAsString
            uICbeCalculationTypeComboBox.ValueAsString = this.ShowFTTAsTotalCalendarPlanParams.UICbeCalculationTypeComboBoxValueAsString;
        }
        
        /// <summary>
        /// UnlockAndEditShiftOnLineMax
        /// </summary>
        public void UnlockAndEditShiftOnLineMax()
        {
            #region Variable Declarations
            DXCell uIVonSudowMaxCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIVonSudowMaxCell1;
            DXMenuBaseButtonItem uIBarButtonItemLink7MenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UIBarButtonItemLink7MenuBaseButtonItem;
            #endregion

            // Right-Click 'Von Sudow, Max' cell
            Mouse.Click(uIVonSudowMaxCell1, MouseButtons.Right, ModifierKeys.None, new Point(88, 9));

            // Click 'BarButtonItemLink[7]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink7MenuBaseButtonItem, new Point(122, 9));
        }
        
        #region Properties
        public virtual AaaaVAkltbuttExpectedValues AaaaVAkltbuttExpectedValues
        {
            get
            {
                if ((this.mAaaaVAkltbuttExpectedValues == null))
                {
                    this.mAaaaVAkltbuttExpectedValues = new AaaaVAkltbuttExpectedValues();
                }
                return this.mAaaaVAkltbuttExpectedValues;
            }
        }
        
        public virtual Add50PersentTo5140HaberEmploymentParams Add50PersentTo5140HaberEmploymentParams
        {
            get
            {
                if ((this.mAdd50PersentTo5140HaberEmploymentParams == null))
                {
                    this.mAdd50PersentTo5140HaberEmploymentParams = new Add50PersentTo5140HaberEmploymentParams();
                }
                return this.mAdd50PersentTo5140HaberEmploymentParams;
            }
        }
        
        public virtual AddHaberToPlanParams AddHaberToPlanParams
        {
            get
            {
                if ((this.mAddHaberToPlanParams == null))
                {
                    this.mAddHaberToPlanParams = new AddHaberToPlanParams();
                }
                return this.mAddHaberToPlanParams;
            }
        }
        
        public virtual CheckCalculateFTTButtonDisabledExpectedValues CheckCalculateFTTButtonDisabledExpectedValues
        {
            get
            {
                if ((this.mCheckCalculateFTTButtonDisabledExpectedValues == null))
                {
                    this.mCheckCalculateFTTButtonDisabledExpectedValues = new CheckCalculateFTTButtonDisabledExpectedValues();
                }
                return this.mCheckCalculateFTTButtonDisabledExpectedValues;
            }
        }
        
        public virtual CheckCalculationEkland_C1_S8ExpectedValues CheckCalculationEkland_C1_S8ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculationEkland_C1_S8ExpectedValues == null))
                {
                    this.mCheckCalculationEkland_C1_S8ExpectedValues = new CheckCalculationEkland_C1_S8ExpectedValues();
                }
                return this.mCheckCalculationEkland_C1_S8ExpectedValues;
            }
        }
        
        public virtual CheckCalculationEkland_C1_S9ExpectedValues CheckCalculationEkland_C1_S9ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculationEkland_C1_S9ExpectedValues == null))
                {
                    this.mCheckCalculationEkland_C1_S9ExpectedValues = new CheckCalculationEkland_C1_S9ExpectedValues();
                }
                return this.mCheckCalculationEkland_C1_S9ExpectedValues;
            }
        }
        
        public virtual CheckCalculationEklandTwoLines_C1_S12ExpectedValues CheckCalculationEklandTwoLines_C1_S12ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculationEklandTwoLines_C1_S12ExpectedValues == null))
                {
                    this.mCheckCalculationEklandTwoLines_C1_S12ExpectedValues = new CheckCalculationEklandTwoLines_C1_S12ExpectedValues();
                }
                return this.mCheckCalculationEklandTwoLines_C1_S12ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C1_S19ExpectedValues CheckCalculations_C1_S19ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C1_S19ExpectedValues == null))
                {
                    this.mCheckCalculations_C1_S19ExpectedValues = new CheckCalculations_C1_S19ExpectedValues();
                }
                return this.mCheckCalculations_C1_S19ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C2_S2ExpectedValues CheckCalculations_C2_S2ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C2_S2ExpectedValues == null))
                {
                    this.mCheckCalculations_C2_S2ExpectedValues = new CheckCalculations_C2_S2ExpectedValues();
                }
                return this.mCheckCalculations_C2_S2ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C2_S3ExpectedValues CheckCalculations_C2_S3ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C2_S3ExpectedValues == null))
                {
                    this.mCheckCalculations_C2_S3ExpectedValues = new CheckCalculations_C2_S3ExpectedValues();
                }
                return this.mCheckCalculations_C2_S3ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C3_S11ExpectedValues CheckCalculations_C3_S11ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C3_S11ExpectedValues == null))
                {
                    this.mCheckCalculations_C3_S11ExpectedValues = new CheckCalculations_C3_S11ExpectedValues();
                }
                return this.mCheckCalculations_C3_S11ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C3_S15ExpectedValues CheckCalculations_C3_S15ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C3_S15ExpectedValues == null))
                {
                    this.mCheckCalculations_C3_S15ExpectedValues = new CheckCalculations_C3_S15ExpectedValues();
                }
                return this.mCheckCalculations_C3_S15ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C3_S16ExpectedValues CheckCalculations_C3_S16ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C3_S16ExpectedValues == null))
                {
                    this.mCheckCalculations_C3_S16ExpectedValues = new CheckCalculations_C3_S16ExpectedValues();
                }
                return this.mCheckCalculations_C3_S16ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C3_S3ExpectedValues CheckCalculations_C3_S3ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C3_S3ExpectedValues == null))
                {
                    this.mCheckCalculations_C3_S3ExpectedValues = new CheckCalculations_C3_S3ExpectedValues();
                }
                return this.mCheckCalculations_C3_S3ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S10ExpectedValues CheckCalculations_C4_S10ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S10ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S10ExpectedValues = new CheckCalculations_C4_S10ExpectedValues();
                }
                return this.mCheckCalculations_C4_S10ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S13ExpectedValues CheckCalculations_C4_S13ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S13ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S13ExpectedValues = new CheckCalculations_C4_S13ExpectedValues();
                }
                return this.mCheckCalculations_C4_S13ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S15ExpectedValues CheckCalculations_C4_S15ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S15ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S15ExpectedValues = new CheckCalculations_C4_S15ExpectedValues();
                }
                return this.mCheckCalculations_C4_S15ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S19ExpectedValues CheckCalculations_C4_S19ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S19ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S19ExpectedValues = new CheckCalculations_C4_S19ExpectedValues();
                }
                return this.mCheckCalculations_C4_S19ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S20ExpectedValues CheckCalculations_C4_S20ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S20ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S20ExpectedValues = new CheckCalculations_C4_S20ExpectedValues();
                }
                return this.mCheckCalculations_C4_S20ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S21ExpectedValues CheckCalculations_C4_S21ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S21ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S21ExpectedValues = new CheckCalculations_C4_S21ExpectedValues();
                }
                return this.mCheckCalculations_C4_S21ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S25ExpectedValues CheckCalculations_C4_S25ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S25ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S25ExpectedValues = new CheckCalculations_C4_S25ExpectedValues();
                }
                return this.mCheckCalculations_C4_S25ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S26ExpectedValues CheckCalculations_C4_S26ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S26ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S26ExpectedValues = new CheckCalculations_C4_S26ExpectedValues();
                }
                return this.mCheckCalculations_C4_S26ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S28ExpectedValues CheckCalculations_C4_S28ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S28ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S28ExpectedValues = new CheckCalculations_C4_S28ExpectedValues();
                }
                return this.mCheckCalculations_C4_S28ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S29ExpectedValues CheckCalculations_C4_S29ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S29ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S29ExpectedValues = new CheckCalculations_C4_S29ExpectedValues();
                }
                return this.mCheckCalculations_C4_S29ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S3ExpectedValues CheckCalculations_C4_S3ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S3ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S3ExpectedValues = new CheckCalculations_C4_S3ExpectedValues();
                }
                return this.mCheckCalculations_C4_S3ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S30ExpectedValues CheckCalculations_C4_S30ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S30ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S30ExpectedValues = new CheckCalculations_C4_S30ExpectedValues();
                }
                return this.mCheckCalculations_C4_S30ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C4_S5ExpectedValues CheckCalculations_C4_S5ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C4_S5ExpectedValues == null))
                {
                    this.mCheckCalculations_C4_S5ExpectedValues = new CheckCalculations_C4_S5ExpectedValues();
                }
                return this.mCheckCalculations_C4_S5ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C5_S2ExpectedValues CheckCalculations_C5_S2ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C5_S2ExpectedValues == null))
                {
                    this.mCheckCalculations_C5_S2ExpectedValues = new CheckCalculations_C5_S2ExpectedValues();
                }
                return this.mCheckCalculations_C5_S2ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C5_S4ExpectedValues CheckCalculations_C5_S4ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C5_S4ExpectedValues == null))
                {
                    this.mCheckCalculations_C5_S4ExpectedValues = new CheckCalculations_C5_S4ExpectedValues();
                }
                return this.mCheckCalculations_C5_S4ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C5_S5ExpectedValues CheckCalculations_C5_S5ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C5_S5ExpectedValues == null))
                {
                    this.mCheckCalculations_C5_S5ExpectedValues = new CheckCalculations_C5_S5ExpectedValues();
                }
                return this.mCheckCalculations_C5_S5ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C5_S6ExpectedValues CheckCalculations_C5_S6ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C5_S6ExpectedValues == null))
                {
                    this.mCheckCalculations_C5_S6ExpectedValues = new CheckCalculations_C5_S6ExpectedValues();
                }
                return this.mCheckCalculations_C5_S6ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C6_S13ExpectedValues CheckCalculations_C6_S13ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C6_S13ExpectedValues == null))
                {
                    this.mCheckCalculations_C6_S13ExpectedValues = new CheckCalculations_C6_S13ExpectedValues();
                }
                return this.mCheckCalculations_C6_S13ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C6_S17ExpectedValues CheckCalculations_C6_S17ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C6_S17ExpectedValues == null))
                {
                    this.mCheckCalculations_C6_S17ExpectedValues = new CheckCalculations_C6_S17ExpectedValues();
                }
                return this.mCheckCalculations_C6_S17ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C6_S21ExpectedValues CheckCalculations_C6_S21ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C6_S21ExpectedValues == null))
                {
                    this.mCheckCalculations_C6_S21ExpectedValues = new CheckCalculations_C6_S21ExpectedValues();
                }
                return this.mCheckCalculations_C6_S21ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C6_S26ExpectedValues CheckCalculations_C6_S26ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C6_S26ExpectedValues == null))
                {
                    this.mCheckCalculations_C6_S26ExpectedValues = new CheckCalculations_C6_S26ExpectedValues();
                }
                return this.mCheckCalculations_C6_S26ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C6_S30ExpectedValues CheckCalculations_C6_S30ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C6_S30ExpectedValues == null))
                {
                    this.mCheckCalculations_C6_S30ExpectedValues = new CheckCalculations_C6_S30ExpectedValues();
                }
                return this.mCheckCalculations_C6_S30ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C6_S33ExpectedValues CheckCalculations_C6_S33ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C6_S33ExpectedValues == null))
                {
                    this.mCheckCalculations_C6_S33ExpectedValues = new CheckCalculations_C6_S33ExpectedValues();
                }
                return this.mCheckCalculations_C6_S33ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C6_S5ExpectedValues CheckCalculations_C6_S5ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C6_S5ExpectedValues == null))
                {
                    this.mCheckCalculations_C6_S5ExpectedValues = new CheckCalculations_C6_S5ExpectedValues();
                }
                return this.mCheckCalculations_C6_S5ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C6_S7ExpectedValues CheckCalculations_C6_S7ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C6_S7ExpectedValues == null))
                {
                    this.mCheckCalculations_C6_S7ExpectedValues = new CheckCalculations_C6_S7ExpectedValues();
                }
                return this.mCheckCalculations_C6_S7ExpectedValues;
            }
        }
        
        public virtual CheckCalculations_C6_S9ExpectedValues CheckCalculations_C6_S9ExpectedValues
        {
            get
            {
                if ((this.mCheckCalculations_C6_S9ExpectedValues == null))
                {
                    this.mCheckCalculations_C6_S9ExpectedValues = new CheckCalculations_C6_S9ExpectedValues();
                }
                return this.mCheckCalculations_C6_S9ExpectedValues;
            }
        }
        
        public virtual CheckFTTcode400_C1_S5ExpectedValues CheckFTTcode400_C1_S5ExpectedValues
        {
            get
            {
                if ((this.mCheckFTTcode400_C1_S5ExpectedValues == null))
                {
                    this.mCheckFTTcode400_C1_S5ExpectedValues = new CheckFTTcode400_C1_S5ExpectedValues();
                }
                return this.mCheckFTTcode400_C1_S5ExpectedValues;
            }
        }
        
        public virtual CheckFTTcode410_C1_S5ExpectedValues CheckFTTcode410_C1_S5ExpectedValues
        {
            get
            {
                if ((this.mCheckFTTcode410_C1_S5ExpectedValues == null))
                {
                    this.mCheckFTTcode410_C1_S5ExpectedValues = new CheckFTTcode410_C1_S5ExpectedValues();
                }
                return this.mCheckFTTcode410_C1_S5ExpectedValues;
            }
        }
        
        public virtual CheckFTThasEmptyListExpectedValues CheckFTThasEmptyListExpectedValues
        {
            get
            {
                if ((this.mCheckFTThasEmptyListExpectedValues == null))
                {
                    this.mCheckFTThasEmptyListExpectedValues = new CheckFTThasEmptyListExpectedValues();
                }
                return this.mCheckFTThasEmptyListExpectedValues;
            }
        }
        
        public virtual CheckFTTPeriod_C1_S5ExpectedValues CheckFTTPeriod_C1_S5ExpectedValues
        {
            get
            {
                if ((this.mCheckFTTPeriod_C1_S5ExpectedValues == null))
                {
                    this.mCheckFTTPeriod_C1_S5ExpectedValues = new CheckFTTPeriod_C1_S5ExpectedValues();
                }
                return this.mCheckFTTPeriod_C1_S5ExpectedValues;
            }
        }
        
        public virtual CheckFTTransfereButtonIsDisabledExpectedValues CheckFTTransfereButtonIsDisabledExpectedValues
        {
            get
            {
                if ((this.mCheckFTTransfereButtonIsDisabledExpectedValues == null))
                {
                    this.mCheckFTTransfereButtonIsDisabledExpectedValues = new CheckFTTransfereButtonIsDisabledExpectedValues();
                }
                return this.mCheckFTTransfereButtonIsDisabledExpectedValues;
            }
        }
        
        public virtual CheckFTTransfereStormareHasOneOkLineExpectedValues CheckFTTransfereStormareHasOneOkLineExpectedValues
        {
            get
            {
                if ((this.mCheckFTTransfereStormareHasOneOkLineExpectedValues == null))
                {
                    this.mCheckFTTransfereStormareHasOneOkLineExpectedValues = new CheckFTTransfereStormareHasOneOkLineExpectedValues();
                }
                return this.mCheckFTTransfereStormareHasOneOkLineExpectedValues;
            }
        }
        
        public virtual CheckNoCalculationEkland_C1_S7ExpectedValues CheckNoCalculationEkland_C1_S7ExpectedValues
        {
            get
            {
                if ((this.mCheckNoCalculationEkland_C1_S7ExpectedValues == null))
                {
                    this.mCheckNoCalculationEkland_C1_S7ExpectedValues = new CheckNoCalculationEkland_C1_S7ExpectedValues();
                }
                return this.mCheckNoCalculationEkland_C1_S7ExpectedValues;
            }
        }
        
        public virtual CheckStellanCalculations_C2_S10ExpectedValues CheckStellanCalculations_C2_S10ExpectedValues
        {
            get
            {
                if ((this.mCheckStellanCalculations_C2_S10ExpectedValues == null))
                {
                    this.mCheckStellanCalculations_C2_S10ExpectedValues = new CheckStellanCalculations_C2_S10ExpectedValues();
                }
                return this.mCheckStellanCalculations_C2_S10ExpectedValues;
            }
        }
        
        public virtual CheckStellanCalculations_C2_S11ExpectedValues CheckStellanCalculations_C2_S11ExpectedValues
        {
            get
            {
                if ((this.mCheckStellanCalculations_C2_S11ExpectedValues == null))
                {
                    this.mCheckStellanCalculations_C2_S11ExpectedValues = new CheckStellanCalculations_C2_S11ExpectedValues();
                }
                return this.mCheckStellanCalculations_C2_S11ExpectedValues;
            }
        }
        
        public virtual CheckStellanCalculations_C2_S9ExpectedValues CheckStellanCalculations_C2_S9ExpectedValues
        {
            get
            {
                if ((this.mCheckStellanCalculations_C2_S9ExpectedValues == null))
                {
                    this.mCheckStellanCalculations_C2_S9ExpectedValues = new CheckStellanCalculations_C2_S9ExpectedValues();
                }
                return this.mCheckStellanCalculations_C2_S9ExpectedValues;
            }
        }
        
        public virtual CheckStormareCalculations_C2_S14ExpectedValues CheckStormareCalculations_C2_S14ExpectedValues
        {
            get
            {
                if ((this.mCheckStormareCalculations_C2_S14ExpectedValues == null))
                {
                    this.mCheckStormareCalculations_C2_S14ExpectedValues = new CheckStormareCalculations_C2_S14ExpectedValues();
                }
                return this.mCheckStormareCalculations_C2_S14ExpectedValues;
            }
        }
        
        public virtual CheckStormareCalculations_C2_S23ExpectedValues CheckStormareCalculations_C2_S23ExpectedValues
        {
            get
            {
                if ((this.mCheckStormareCalculations_C2_S23ExpectedValues == null))
                {
                    this.mCheckStormareCalculations_C2_S23ExpectedValues = new CheckStormareCalculations_C2_S23ExpectedValues();
                }
                return this.mCheckStormareCalculations_C2_S23ExpectedValues;
            }
        }
        
        public virtual CheckStormareNoCalculations_C2_S21ExpectedValues CheckStormareNoCalculations_C2_S21ExpectedValues
        {
            get
            {
                if ((this.mCheckStormareNoCalculations_C2_S21ExpectedValues == null))
                {
                    this.mCheckStormareNoCalculations_C2_S21ExpectedValues = new CheckStormareNoCalculations_C2_S21ExpectedValues();
                }
                return this.mCheckStormareNoCalculations_C2_S21ExpectedValues;
            }
        }
        
        public virtual CheckTransAndStopIsDisabled_C1_S11ExpectedValues CheckTransAndStopIsDisabled_C1_S11ExpectedValues
        {
            get
            {
                if ((this.mCheckTransAndStopIsDisabled_C1_S11ExpectedValues == null))
                {
                    this.mCheckTransAndStopIsDisabled_C1_S11ExpectedValues = new CheckTransAndStopIsDisabled_C1_S11ExpectedValues();
                }
                return this.mCheckTransAndStopIsDisabled_C1_S11ExpectedValues;
            }
        }
        
        public virtual CheckTransferFTTButtonDisabledExpectedValues CheckTransferFTTButtonDisabledExpectedValues
        {
            get
            {
                if ((this.mCheckTransferFTTButtonDisabledExpectedValues == null))
                {
                    this.mCheckTransferFTTButtonDisabledExpectedValues = new CheckTransferFTTButtonDisabledExpectedValues();
                }
                return this.mCheckTransferFTTButtonDisabledExpectedValues;
            }
        }
        
        public virtual CheckTransferFTTButtonEnabledExpectedValues CheckTransferFTTButtonEnabledExpectedValues
        {
            get
            {
                if ((this.mCheckTransferFTTButtonEnabledExpectedValues == null))
                {
                    this.mCheckTransferFTTButtonEnabledExpectedValues = new CheckTransferFTTButtonEnabledExpectedValues();
                }
                return this.mCheckTransferFTTButtonEnabledExpectedValues;
            }
        }
        
        public virtual CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues
        {
            get
            {
                if ((this.mCheckUTACalculationEndre_Garbo_C1_S23ExpectedValues == null))
                {
                    this.mCheckUTACalculationEndre_Garbo_C1_S23ExpectedValues = new CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues();
                }
                return this.mCheckUTACalculationEndre_Garbo_C1_S23ExpectedValues;
            }
        }
        
        public virtual CheckUTACalculationGarbo_C1_S24ExpectedValues CheckUTACalculationGarbo_C1_S24ExpectedValues
        {
            get
            {
                if ((this.mCheckUTACalculationGarbo_C1_S24ExpectedValues == null))
                {
                    this.mCheckUTACalculationGarbo_C1_S24ExpectedValues = new CheckUTACalculationGarbo_C1_S24ExpectedValues();
                }
                return this.mCheckUTACalculationGarbo_C1_S24ExpectedValues;
            }
        }
        
        public virtual CheckUTCalculationEndre_Garbo_C1_S24ExpectedValues CheckUTCalculationEndre_Garbo_C1_S24ExpectedValues
        {
            get
            {
                if ((this.mCheckUTCalculationEndre_Garbo_C1_S24ExpectedValues == null))
                {
                    this.mCheckUTCalculationEndre_Garbo_C1_S24ExpectedValues = new CheckUTCalculationEndre_Garbo_C1_S24ExpectedValues();
                }
                return this.mCheckUTCalculationEndre_Garbo_C1_S24ExpectedValues;
            }
        }
        
        public virtual ShowFTTAsAveragePrMndParams ShowFTTAsAveragePrMndParams
        {
            get
            {
                if ((this.mShowFTTAsAveragePrMndParams == null))
                {
                    this.mShowFTTAsAveragePrMndParams = new ShowFTTAsAveragePrMndParams();
                }
                return this.mShowFTTAsAveragePrMndParams;
            }
        }
        
        public virtual ShowFTTAsAveragePrMndCalendarPlanParams ShowFTTAsAveragePrMndCalendarPlanParams
        {
            get
            {
                if ((this.mShowFTTAsAveragePrMndCalendarPlanParams == null))
                {
                    this.mShowFTTAsAveragePrMndCalendarPlanParams = new ShowFTTAsAveragePrMndCalendarPlanParams();
                }
                return this.mShowFTTAsAveragePrMndCalendarPlanParams;
            }
        }
        
        public virtual ShowFTTAsTotalCalendarPlanParams ShowFTTAsTotalCalendarPlanParams
        {
            get
            {
                if ((this.mShowFTTAsTotalCalendarPlanParams == null))
                {
                    this.mShowFTTAsTotalCalendarPlanParams = new ShowFTTAsTotalCalendarPlanParams();
                }
                return this.mShowFTTAsTotalCalendarPlanParams;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIAnsatteiarbeidsplanWindow UIAnsatteiarbeidsplanWindow
        {
            get
            {
                if ((this.mUIAnsatteiarbeidsplanWindow == null))
                {
                    this.mUIAnsatteiarbeidsplanWindow = new UIAnsatteiarbeidsplanWindow();
                }
                return this.mUIAnsatteiarbeidsplanWindow;
            }
        }
        
        public UILeggtilansatteWindow UILeggtilansatteWindow
        {
            get
            {
                if ((this.mUILeggtilansatteWindow == null))
                {
                    this.mUILeggtilansatteWindow = new UILeggtilansatteWindow();
                }
                return this.mUILeggtilansatteWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIOverførtilleggWindow UIOverførtilleggWindow
        {
            get
            {
                if ((this.mUIOverførtilleggWindow == null))
                {
                    this.mUIOverførtilleggWindow = new UIOverførtilleggWindow();
                }
                return this.mUIOverførtilleggWindow;
            }
        }
        #endregion
        
        #region Fields
        private AaaaVAkltbuttExpectedValues mAaaaVAkltbuttExpectedValues;
        
        private Add50PersentTo5140HaberEmploymentParams mAdd50PersentTo5140HaberEmploymentParams;
        
        private AddHaberToPlanParams mAddHaberToPlanParams;
        
        private CheckCalculateFTTButtonDisabledExpectedValues mCheckCalculateFTTButtonDisabledExpectedValues;
        
        private CheckCalculationEkland_C1_S8ExpectedValues mCheckCalculationEkland_C1_S8ExpectedValues;
        
        private CheckCalculationEkland_C1_S9ExpectedValues mCheckCalculationEkland_C1_S9ExpectedValues;
        
        private CheckCalculationEklandTwoLines_C1_S12ExpectedValues mCheckCalculationEklandTwoLines_C1_S12ExpectedValues;
        
        private CheckCalculations_C1_S19ExpectedValues mCheckCalculations_C1_S19ExpectedValues;
        
        private CheckCalculations_C2_S2ExpectedValues mCheckCalculations_C2_S2ExpectedValues;
        
        private CheckCalculations_C2_S3ExpectedValues mCheckCalculations_C2_S3ExpectedValues;
        
        private CheckCalculations_C3_S11ExpectedValues mCheckCalculations_C3_S11ExpectedValues;
        
        private CheckCalculations_C3_S15ExpectedValues mCheckCalculations_C3_S15ExpectedValues;
        
        private CheckCalculations_C3_S16ExpectedValues mCheckCalculations_C3_S16ExpectedValues;
        
        private CheckCalculations_C3_S3ExpectedValues mCheckCalculations_C3_S3ExpectedValues;
        
        private CheckCalculations_C4_S10ExpectedValues mCheckCalculations_C4_S10ExpectedValues;
        
        private CheckCalculations_C4_S13ExpectedValues mCheckCalculations_C4_S13ExpectedValues;
        
        private CheckCalculations_C4_S15ExpectedValues mCheckCalculations_C4_S15ExpectedValues;
        
        private CheckCalculations_C4_S19ExpectedValues mCheckCalculations_C4_S19ExpectedValues;
        
        private CheckCalculations_C4_S20ExpectedValues mCheckCalculations_C4_S20ExpectedValues;
        
        private CheckCalculations_C4_S21ExpectedValues mCheckCalculations_C4_S21ExpectedValues;
        
        private CheckCalculations_C4_S25ExpectedValues mCheckCalculations_C4_S25ExpectedValues;
        
        private CheckCalculations_C4_S26ExpectedValues mCheckCalculations_C4_S26ExpectedValues;
        
        private CheckCalculations_C4_S28ExpectedValues mCheckCalculations_C4_S28ExpectedValues;
        
        private CheckCalculations_C4_S29ExpectedValues mCheckCalculations_C4_S29ExpectedValues;
        
        private CheckCalculations_C4_S3ExpectedValues mCheckCalculations_C4_S3ExpectedValues;
        
        private CheckCalculations_C4_S30ExpectedValues mCheckCalculations_C4_S30ExpectedValues;
        
        private CheckCalculations_C4_S5ExpectedValues mCheckCalculations_C4_S5ExpectedValues;
        
        private CheckCalculations_C5_S2ExpectedValues mCheckCalculations_C5_S2ExpectedValues;
        
        private CheckCalculations_C5_S4ExpectedValues mCheckCalculations_C5_S4ExpectedValues;
        
        private CheckCalculations_C5_S5ExpectedValues mCheckCalculations_C5_S5ExpectedValues;
        
        private CheckCalculations_C5_S6ExpectedValues mCheckCalculations_C5_S6ExpectedValues;
        
        private CheckCalculations_C6_S13ExpectedValues mCheckCalculations_C6_S13ExpectedValues;
        
        private CheckCalculations_C6_S17ExpectedValues mCheckCalculations_C6_S17ExpectedValues;
        
        private CheckCalculations_C6_S21ExpectedValues mCheckCalculations_C6_S21ExpectedValues;
        
        private CheckCalculations_C6_S26ExpectedValues mCheckCalculations_C6_S26ExpectedValues;
        
        private CheckCalculations_C6_S30ExpectedValues mCheckCalculations_C6_S30ExpectedValues;
        
        private CheckCalculations_C6_S33ExpectedValues mCheckCalculations_C6_S33ExpectedValues;
        
        private CheckCalculations_C6_S5ExpectedValues mCheckCalculations_C6_S5ExpectedValues;
        
        private CheckCalculations_C6_S7ExpectedValues mCheckCalculations_C6_S7ExpectedValues;
        
        private CheckCalculations_C6_S9ExpectedValues mCheckCalculations_C6_S9ExpectedValues;
        
        private CheckFTTcode400_C1_S5ExpectedValues mCheckFTTcode400_C1_S5ExpectedValues;
        
        private CheckFTTcode410_C1_S5ExpectedValues mCheckFTTcode410_C1_S5ExpectedValues;
        
        private CheckFTThasEmptyListExpectedValues mCheckFTThasEmptyListExpectedValues;
        
        private CheckFTTPeriod_C1_S5ExpectedValues mCheckFTTPeriod_C1_S5ExpectedValues;
        
        private CheckFTTransfereButtonIsDisabledExpectedValues mCheckFTTransfereButtonIsDisabledExpectedValues;
        
        private CheckFTTransfereStormareHasOneOkLineExpectedValues mCheckFTTransfereStormareHasOneOkLineExpectedValues;
        
        private CheckNoCalculationEkland_C1_S7ExpectedValues mCheckNoCalculationEkland_C1_S7ExpectedValues;
        
        private CheckStellanCalculations_C2_S10ExpectedValues mCheckStellanCalculations_C2_S10ExpectedValues;
        
        private CheckStellanCalculations_C2_S11ExpectedValues mCheckStellanCalculations_C2_S11ExpectedValues;
        
        private CheckStellanCalculations_C2_S9ExpectedValues mCheckStellanCalculations_C2_S9ExpectedValues;
        
        private CheckStormareCalculations_C2_S14ExpectedValues mCheckStormareCalculations_C2_S14ExpectedValues;
        
        private CheckStormareCalculations_C2_S23ExpectedValues mCheckStormareCalculations_C2_S23ExpectedValues;
        
        private CheckStormareNoCalculations_C2_S21ExpectedValues mCheckStormareNoCalculations_C2_S21ExpectedValues;
        
        private CheckTransAndStopIsDisabled_C1_S11ExpectedValues mCheckTransAndStopIsDisabled_C1_S11ExpectedValues;
        
        private CheckTransferFTTButtonDisabledExpectedValues mCheckTransferFTTButtonDisabledExpectedValues;
        
        private CheckTransferFTTButtonEnabledExpectedValues mCheckTransferFTTButtonEnabledExpectedValues;
        
        private CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues mCheckUTACalculationEndre_Garbo_C1_S23ExpectedValues;
        
        private CheckUTACalculationGarbo_C1_S24ExpectedValues mCheckUTACalculationGarbo_C1_S24ExpectedValues;
        
        private CheckUTCalculationEndre_Garbo_C1_S24ExpectedValues mCheckUTCalculationEndre_Garbo_C1_S24ExpectedValues;
        
        private ShowFTTAsAveragePrMndParams mShowFTTAsAveragePrMndParams;
        
        private ShowFTTAsAveragePrMndCalendarPlanParams mShowFTTAsAveragePrMndCalendarPlanParams;
        
        private ShowFTTAsTotalCalendarPlanParams mShowFTTAsTotalCalendarPlanParams;
        
        private UIItemWindow mUIItemWindow;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIAnsatteiarbeidsplanWindow mUIAnsatteiarbeidsplanWindow;
        
        private UILeggtilansatteWindow mUILeggtilansatteWindow;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIOverførtilleggWindow mUIOverførtilleggWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AaaaVAkltbutt'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AaaaVAkltbuttExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Vaktklasser' button equals 'Vaktklasser'
        /// </summary>
        public string UIVaktklasserButtonText = "Vaktklasser";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Add50PersentTo5140HaberEmployment'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Add50PersentTo5140HaberEmploymentParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'System.Double' in 'ePositionPercent' text box
        /// </summary>
        public string UIEPositionPercentEditValueTypeName = "System.Double";
        
        /// <summary>
        /// Type '50' in 'ePositionPercent' text box
        /// </summary>
        public string UIEPositionPercentEditValueAsString = "50";
        
        /// <summary>
        /// Type '{Tab}' in 'ePositionPercent' text box
        /// </summary>
        public string UIEPositionPercentEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddHaberToPlan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddHaberToPlanParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'True' in 'Node12' TreeListNode
        /// </summary>
        public bool UINode12TreeListNode1Checked = true;
        
        /// <summary>
        /// Type 'Shift + {Down}' in 'gcDepartmentEmployees' table
        /// </summary>
        public string UIGcDepartmentEmployeeTableSendKeys = "{Down}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculateFTTButtonDisabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculateFTTButtonDisabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Kalkuler' button equals 'False'
        /// </summary>
        public bool UIKalkulerButtonEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculationEkland_C1_S8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculationEkland_C1_S8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Ekland, Britt'
        /// </summary>
        public string UIOhlinLenaPivotGridFieldValueText = "Ekland, Britt";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals '2'
        /// </summary>
        public string UIItem18PivotGridCellText = "2";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '8'
        /// </summary>
        public string UIItem26PivotGridCell1Text = "8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculationEkland_C1_S9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculationEkland_C1_S9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Ekland, Britt'
        /// </summary>
        public string UIOhlinLenaPivotGridFieldValueText = "Ekland, Britt";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals '6'
        /// </summary>
        public string UIItem18PivotGridCellText = "6";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '24'
        /// </summary>
        public string UIItem26PivotGridCell1Text = "24";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculationEklandTwoLines_C1_S12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculationEklandTwoLines_C1_S12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Ekland, Britt'
        /// </summary>
        public string UIOhlinLenaPivotGridFieldValueText = "Ekland, Britt";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals '2'
        /// </summary>
        public string UIItem18PivotGridCellText = "2";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals '2'
        /// </summary>
        public string UIItem18PivotGridCell1Text = "2";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '8'
        /// </summary>
        public string UIItem26PivotGridCell1Text = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '8'
        /// </summary>
        public string UIItem26PivotGridCell2Text = "8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C1_S19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C1_S19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Adams, Maud'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Adams, Maud";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '18'
        /// </summary>
        public string UIItemPivotGridCellText = "18";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '26'
        /// </summary>
        public string UIItem26PivotGridCellText = "26";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Bergman, Ingrid'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Bergman, Ingrid";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '8'
        /// </summary>
        public string UIItem8PivotGridCellText = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '16,25'
        /// </summary>
        public string UIItem1625PivotGridCellText = "16,25";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Ekland, Britt'
        /// </summary>
        public string UIEklandBrittPivotGridFieldValueText = "Ekland, Britt";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '2'
        /// </summary>
        public string UIItem8PivotGridCell1Text = "2";
        
        /// <summary>
        /// Verify that the 'Text' property of '13' PivotGridCell equals '8'
        /// </summary>
        public string UIItem13PivotGridCellText = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '19.08.2024' PivotGridFieldValue equals '19.08.2024'
        /// </summary>
        public string UIItem19082024PivotGridFieldValueText = "19.08.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '15.09.2024' PivotGridFieldValue equals '15.09.2024'
        /// </summary>
        public string UIItem15092024PivotGridFieldValueText = "15.09.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals '6'
        /// </summary>
        public string UIItem18PivotGridCellText = "6";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '24'
        /// </summary>
        public string UIItem26PivotGridCell1Text = "24";
        
        /// <summary>
        /// Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'Ohlin, Lena'
        /// </summary>
        public string UIVAKANT6PivotGridFieldValueText = "Ohlin, Lena";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals '18'
        /// </summary>
        public string UIItem18PivotGridCell1Text = "18";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '26'
        /// </summary>
        public string UIItem26PivotGridCell2Text = "26";
        
        /// <summary>
        /// Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'VAKANT6'
        /// </summary>
        public string UIVAKANT6PivotGridFieldValue1Text = "VAKANT6";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals '18'
        /// </summary>
        public string UIItem18PivotGridCell2Text = "18";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '26'
        /// </summary>
        public string UIItem26PivotGridCell3Text = "26";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C2_S2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C2_S2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Skarsgård, Stellan";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '10'
        /// </summary>
        public string UIItemPivotGridCellText = "10";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '20'
        /// </summary>
        public string UIItem26PivotGridCellText = "20";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Stormare, Peter'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Stormare, Peter";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '10'
        /// </summary>
        public string UIItem8PivotGridCellText = "10";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '20'
        /// </summary>
        public string UIItem1625PivotGridCellText = "20";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Edwall, Allan'
        /// </summary>
        public string UIEklandBrittPivotGridFieldValueText = "Edwall, Allan";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals ''
        /// </summary>
        public string UIItem8PivotGridCell1Text = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '13' PivotGridCell equals '3,25'
        /// </summary>
        public string UIItem13PivotGridCellText = "3,25";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'VAKANT4'
        /// </summary>
        public string UIOhlinLenaPivotGridFieldValueText = "VAKANT4";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals ''
        /// </summary>
        public string UIItem18PivotGridCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '3,25'
        /// </summary>
        public string UIItem26PivotGridCell1Text = "3,25";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C2_S3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C2_S3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Skarsgård, Stellan";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '11,15'
        /// </summary>
        public string UIItemPivotGridCellText = "11,15";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '22,3'
        /// </summary>
        public string UIItem26PivotGridCellText = "22,3";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Stormare, Peter'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Stormare, Peter";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '11,15'
        /// </summary>
        public string UIItem8PivotGridCellText = "11,15";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '22,3'
        /// </summary>
        public string UIItem1625PivotGridCellText = "22,3";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Edwall, Allan'
        /// </summary>
        public string UIEklandBrittPivotGridFieldValueText = "Edwall, Allan";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals ''
        /// </summary>
        public string UIItem8PivotGridCell1Text = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '13' PivotGridCell equals '3,62'
        /// </summary>
        public string UIItem13PivotGridCellText = "3,62";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'VAKANT4'
        /// </summary>
        public string UIOhlinLenaPivotGridFieldValueText = "VAKANT4";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals ''
        /// </summary>
        public string UIItem18PivotGridCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '3,62'
        /// </summary>
        public string UIItem26PivotGridCell1Text = "3,62";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C3_S11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C3_S11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Von Sudow, Max'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Von Sudow, Max";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '8'
        /// </summary>
        public string UIItemPivotGridCellText = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '42'
        /// </summary>
        public string UIItem26PivotGridCellText = "42";
        
        /// <summary>
        /// Verify that the 'Text' property of '29,73' PivotGridCell equals '20'
        /// </summary>
        public string UIItem2973PivotGridCellText = "20";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C3_S15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C3_S15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '36'
        /// </summary>
        public string UIItemPivotGridCellText = "36";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '20'
        /// </summary>
        public string UIItem26PivotGridCellText = "20";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C3_S16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C3_S16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '10'
        /// </summary>
        public string UIItemPivotGridCellText = "10";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '26'
        /// </summary>
        public string UIItem26PivotGridCellText = "26";
        
        /// <summary>
        /// Verify that the 'Text' property of '29,73' PivotGridCell equals '16'
        /// </summary>
        public string UIItem2973PivotGridCellText = "16";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C3_S3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C3_S3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Von Sudow, Max'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Von Sudow, Max";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '11,89'
        /// </summary>
        public string UIItemPivotGridCellText = "11,89";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '62,44'
        /// </summary>
        public string UIItem26PivotGridCellText = "62,44";
        
        /// <summary>
        /// Verify that the 'Text' property of '29,73' PivotGridCell equals '29,73'
        /// </summary>
        public string UIItem2973PivotGridCellText = "29,73";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Gustavsson, Robert'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Gustavsson, Robert";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '23,53'
        /// </summary>
        public string UIItem8PivotGridCellText = "23,53";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '31,25'
        /// </summary>
        public string UIItem1625PivotGridCellText = "31,25";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '31,53'
        /// </summary>
        public string UIItem8PivotGridCellText = "31,53";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '31,25'
        /// </summary>
        public string UIItem1625PivotGridCellText = "31,25";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Gustavsson, Robert'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Gustavsson, Robert";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Rheborg, Johan'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Rheborg, Johan";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Persbrandt, Mikael'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Persbrandt, Mikael";
        
        /// <summary>
        /// Verify that the 'Text' property of '29,73' PivotGridCell equals '6'
        /// </summary>
        public string UIItem2973PivotGridCellText = "6";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '16'
        /// </summary>
        public string UIItem8PivotGridCellText = "16";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '12'
        /// </summary>
        public string UIItem1625PivotGridCellText = "12";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S20'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S20ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Rheborg, Johan'
        /// </summary>
        public string UIOhlinLenaPivotGridFieldValueText = "Rheborg, Johan";
        
        /// <summary>
        /// Verify that the 'Text' property of '20,02' PivotGridCell equals '20,02'
        /// </summary>
        public string UIItem2002PivotGridCellText = "20,02";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S21'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S21ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '20,02' PivotGridCell equals '13,02'
        /// </summary>
        public string UIItem2002PivotGridCellText = "13,02";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S25'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S25ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Rheborg, Johan'
        /// </summary>
        public string UIOhlinLenaPivotGridFieldValueText = "Rheborg, Johan";
        
        /// <summary>
        /// Verify that the 'Text' property of '20,02' PivotGridCell equals '13,02'
        /// </summary>
        public string UIItem2002PivotGridCellText = "13,02";
        
        /// <summary>
        /// Verify that the 'Text' property of '6' PivotGridCell equals '6'
        /// </summary>
        public string UIItem6PivotGridCell2Text = "6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S26'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S26ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Rheborg, Johan'
        /// </summary>
        public string UIOhlinLenaPivotGridFieldValueText = "Rheborg, Johan";
        
        /// <summary>
        /// Verify that the 'Text' property of '20,02' PivotGridCell equals '13,02'
        /// </summary>
        public string UIItem2002PivotGridCellText = "13,02";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S28'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S28ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'Haber, Peter'
        /// </summary>
        public string UIVAKANT6PivotGridFieldValueText = "Haber, Peter";
        
        /// <summary>
        /// Verify that the 'Text' property of '6' PivotGridCell equals '8'
        /// </summary>
        public string UIItem6PivotGridCell2Text = "8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S29'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S29ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Gustavsson, Robert'
        /// </summary>
        public string UIEklandBrittPivotGridFieldValueText = "Gustavsson, Robert";
        
        /// <summary>
        /// Verify that the 'Text' property of '31,53' PivotGridCell equals '31,53'
        /// </summary>
        public string UIItem3153PivotGridCellText = "31,53";
        
        /// <summary>
        /// Verify that the 'Text' property of '31,25' PivotGridCell equals '31,25'
        /// </summary>
        public string UIItem3125PivotGridCellText = "31,25";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Persbrandt, Mikael'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Persbrandt, Mikael";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '8'
        /// </summary>
        public string UIItemPivotGridCellText = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Rheborg, Johan'
        /// </summary>
        public string UIEklandBrittPivotGridFieldValueText = "Rheborg, Johan";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '0,02'
        /// </summary>
        public string UIItem8PivotGridCell1Text = "0,02";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S30'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S30ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'Gustavsson, Robert'
        /// </summary>
        public string UIEklandBrittPivotGridFieldValueText = "Gustavsson, Robert";
        
        /// <summary>
        /// Verify that the 'Text' property of '31,53' PivotGridCell equals '14,02'
        /// </summary>
        public string UIItem3153PivotGridCellText = "14,02";
        
        /// <summary>
        /// Verify that the 'Text' property of '31,25' PivotGridCell equals '8'
        /// </summary>
        public string UIItem3125PivotGridCellText = "8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C4_S5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C4_S5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Gustavsson, Robert'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Gustavsson, Robert";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '8'
        /// </summary>
        public string UIItemPivotGridCellText = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '15,53'
        /// </summary>
        public string UIItem8PivotGridCellText = "15,53";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '0,02'
        /// </summary>
        public string UIItem8PivotGridCell1Text = "0,02";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals ''
        /// </summary>
        public string UIItem26PivotGridCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '23,25'
        /// </summary>
        public string UIItem1625PivotGridCellText = "23,25";
        
        /// <summary>
        /// Verify that the 'Text' property of '13' PivotGridCell equals ''
        /// </summary>
        public string UIItem13PivotGridCellText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C5_S2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C5_S2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Jähkel, Lennart'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Jähkel, Lennart";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '6'
        /// </summary>
        public string UIItemPivotGridCellText = "6";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Lassgård, Rolf'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Lassgård, Rolf";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '126'
        /// </summary>
        public string UIItem8PivotGridCellText = "126";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C5_S4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C5_S4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Jähkel, Lennart'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Jähkel, Lennart";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '4'
        /// </summary>
        public string UIItemPivotGridCellText = "4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C5_S5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C5_S5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Lassgård, Rolf'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Lassgård, Rolf";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '115,71'
        /// </summary>
        public string UIItem8PivotGridCellText = "115,71";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '6'
        /// </summary>
        public string UIItem8PivotGridCell1Text = "6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C5_S6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C5_S6ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Lassgård, Rolf'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Lassgård, Rolf";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '11,71'
        /// </summary>
        public string UIItem8PivotGridCellText = "11,71";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '6'
        /// </summary>
        public string UIItem8PivotGridCell1Text = "6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C6_S13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C6_S13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '303'
        /// </summary>
        public string UIItem26PivotGridCellText = "303";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '1414'
        /// </summary>
        public string UIItem1625PivotGridCellText = "1414";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C6_S17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C6_S17ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Oscarsson, Per'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Oscarsson, Per";
        
        /// <summary>
        /// Verify that the 'Text' property of '05.08.2024' PivotGridFieldValue equals '08.01.2024'
        /// </summary>
        public string UIItem05082024PivotGridFieldValueText = "08.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '25.08.2024' PivotGridFieldValue equals '21.01.2024'
        /// </summary>
        public string UIItem25082024PivotGridFieldValueText = "21.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '16'
        /// </summary>
        public string UIItemPivotGridCellText = "16";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '303'
        /// </summary>
        public string UIItem26PivotGridCellText = "303";
        
        /// <summary>
        /// Verify that the 'Text' property of '23.01.2024' PivotGridFieldValue equals '29.01.2024'
        /// </summary>
        public string UIItem23012024PivotGridFieldValueText = "29.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '04.02.2024' PivotGridFieldValue equals '04.02.2024'
        /// </summary>
        public string UIItem04022024PivotGridFieldValueText = "04.02.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '3,5'
        /// </summary>
        public string UIItem8PivotGridCellText = "3,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '600'
        /// </summary>
        public string UIItem1625PivotGridCellText = "600";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C6_S21'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C6_S21ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Oscarsson, Per'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Oscarsson, Per";
        
        /// <summary>
        /// Verify that the 'Text' property of '08.01.2024' PivotGridFieldValue equals '22.01.2024'
        /// </summary>
        public string UIItem08012024PivotGridFieldValueText = "22.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '22.01.2024' PivotGridFieldValue equals '28.01.2024'
        /// </summary>
        public string UIItem22012024PivotGridFieldValueText = "28.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals ''
        /// </summary>
        public string UIItem8PivotGridCell1Text = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '13' PivotGridCell equals '1000'
        /// </summary>
        public string UIItem13PivotGridCellText = "1000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C6_S26'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C6_S26ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Nyqvist, Mikael'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Nyqvist, Mikael";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '21,17'
        /// </summary>
        public string UIItemPivotGridCellText = "21,17";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '36'
        /// </summary>
        public string UIItem26PivotGridCellText = "36";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Kulle, Nils'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Kulle, Nils";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals ''
        /// </summary>
        public string UIItem8PivotGridCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '60'
        /// </summary>
        public string UIItem1625PivotGridCellText = "60";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C6_S30'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C6_S30ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Kulle, Nils'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Kulle, Nils";
        
        /// <summary>
        /// Verify that the 'Text' property of '23.01.2024' PivotGridFieldValue equals '29.01.2024'
        /// </summary>
        public string UIItem23012024PivotGridFieldValueText = "29.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '04.02.2024' PivotGridFieldValue equals '25.02.2024'
        /// </summary>
        public string UIItem04022024PivotGridFieldValueText = "25.02.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals ''
        /// </summary>
        public string UIItem8PivotGridCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '60'
        /// </summary>
        public string UIItem1625PivotGridCellText = "60";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Nyqvist, Mikael'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Nyqvist, Mikael";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '21,17'
        /// </summary>
        public string UIItemPivotGridCellText = "21,17";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '33'
        /// </summary>
        public string UIItem26PivotGridCellText = "33";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C6_S33'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C6_S33ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Nyqvist, Mikael'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Nyqvist, Mikael";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '105000'
        /// </summary>
        public string UIItem26PivotGridCellText = "105000";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Kulle, Nils'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Kulle, Nils";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '240000'
        /// </summary>
        public string UIItem1625PivotGridCellText = "240000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C6_S5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C6_S5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Oscarsson, Per'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Oscarsson, Per";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals ''
        /// </summary>
        public string UIItemPivotGridCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '1'
        /// </summary>
        public string UIItem26PivotGridCellText = "1";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Vollter, Sven'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Vollter, Sven";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '3,75'
        /// </summary>
        public string UIItem8PivotGridCellText = "3,75";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '6'
        /// </summary>
        public string UIItem1625PivotGridCellText = "6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C6_S7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C6_S7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '3'
        /// </summary>
        public string UIItem26PivotGridCellText = "3";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '11'
        /// </summary>
        public string UIItem1625PivotGridCellText = "11";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalculations_C6_S9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCalculations_C6_S9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '28'
        /// </summary>
        public string UIItem1625PivotGridCellText = "28";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFTTcode400_C1_S5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckFTTcode400_C1_S5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '18'
        /// </summary>
        public string UIItemPivotGridCellText = "18";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '8'
        /// </summary>
        public string UIItem8PivotGridCellText = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '8'
        /// </summary>
        public string UIItem8PivotGridCell1Text = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals '18'
        /// </summary>
        public string UIItem18PivotGridCellText = "18";
        
        /// <summary>
        /// Verify that the 'Text' property of '18' PivotGridCell equals '18'
        /// </summary>
        public string UIItem18PivotGridCell1Text = "18";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFTTcode410_C1_S5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckFTTcode410_C1_S5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '26'
        /// </summary>
        public string UIItem26PivotGridCellText = "26";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '16,25'
        /// </summary>
        public string UIItem1625PivotGridCellText = "16,25";
        
        /// <summary>
        /// Verify that the 'Text' property of '13' PivotGridCell equals '13'
        /// </summary>
        public string UIItem13PivotGridCellText = "13";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '26'
        /// </summary>
        public string UIItem26PivotGridCell1Text = "26";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '26'
        /// </summary>
        public string UIItem26PivotGridCell2Text = "26";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFTThasEmptyList'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckFTThasEmptyListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Kalkuler' button equals 'True'
        /// </summary>
        public bool UIKalkulerButtonEnabled = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'Overfør...' button equals 'False'
        /// </summary>
        public bool UIOverførButtonEnabled = false;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'Stopp...' button equals 'False'
        /// </summary>
        public bool UIStoppButtonEnabled = false;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'Vis eksportlogg...' button equals 'True'
        /// </summary>
        public bool UIViseksportloggButtonEnabled = true;
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals ''
        /// </summary>
        public string UIItemPivotGridCellText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFTTPeriod_C1_S5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckFTTPeriod_C1_S5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '05.08.2024' PivotGridFieldValue equals '05.08.2024'
        /// </summary>
        public string UIItem05082024PivotGridFieldValueText = "05.08.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '25.08.2024' PivotGridFieldValue equals '25.08.2024'
        /// </summary>
        public string UIItem25082024PivotGridFieldValueText = "25.08.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '05.08.2024' PivotGridFieldValue equals '05.08.2024'
        /// </summary>
        public string UIItem05082024PivotGridFieldValue1Text = "05.08.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '25.08.2024' PivotGridFieldValue equals '25.08.2024'
        /// </summary>
        public string UIItem25082024PivotGridFieldValue1Text = "25.08.2024";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFTTransfereButtonIsDisabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckFTTransfereButtonIsDisabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of '&Overfør' button equals 'False'
        /// </summary>
        public bool UIOverførButtonEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckFTTransfereStormareHasOneOkLine'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckFTTransfereStormareHasOneOkLineExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ErrorText' property of '[Row]1[Column]colTo' text box equals 'Valgt linje slutter før eksport start.'
        /// </summary>
        public string UIRow1ColumncolToEditErrorText = "Valgt linje slutter før eksport start.";
        
        /// <summary>
        /// Verify that the 'Text' property of '[Row]2[Column]colTo' text box equals '04.02.2024'
        /// </summary>
        public string UIRow2ColumncolToEditText = "04.02.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '[Row]1[Column]colTo' text box equals '22.01.2024'
        /// </summary>
        public string UIRow1ColumncolToEditText = "22.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Stormare, Peter' cell equals 'Stormare, Peter'
        /// </summary>
        public string UIStormarePeterCellText = "Stormare, Peter";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Stormare, Peter' cell equals 'Stormare, Peter'
        /// </summary>
        public string UIStormarePeterCell1Text = "Stormare, Peter";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckNoCalculationEkland_C1_S7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckNoCalculationEkland_C1_S7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Adams, Maud'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Adams, Maud";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Bergman, Ingrid'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Bergman, Ingrid";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ohlin, Lena' PivotGridFieldValue equals 'Ohlin, Lena'
        /// </summary>
        public string UIOhlinLenaPivotGridFieldValueText = "Ohlin, Lena";
        
        /// <summary>
        /// Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'VAKANT6'
        /// </summary>
        public string UIVAKANT6PivotGridFieldValueText = "VAKANT6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStellanCalculations_C2_S10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStellanCalculations_C2_S10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Skarsgård, Stellan";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '11,56'
        /// </summary>
        public string UIItemPivotGridCellText = "11,56";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '16,19'
        /// </summary>
        public string UIItem26PivotGridCellText = "16,19";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStellanCalculations_C2_S11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStellanCalculations_C2_S11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Skarsgård, Stellan";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '14,87'
        /// </summary>
        public string UIItemPivotGridCellText = "14,87";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '11,89'
        /// </summary>
        public string UIItem26PivotGridCellText = "11,89";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStellanCalculations_C2_S9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStellanCalculations_C2_S9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Skarsgård, Stellan";
        
        /// <summary>
        /// Verify that the 'Text' property of PivotGridCell equals '10'
        /// </summary>
        public string UIItemPivotGridCellText = "10";
        
        /// <summary>
        /// Verify that the 'Text' property of '26' PivotGridCell equals '14'
        /// </summary>
        public string UIItem26PivotGridCellText = "14";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStormareCalculations_C2_S14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStormareCalculations_C2_S14ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Stormare, Peter'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Stormare, Peter";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals ''
        /// </summary>
        public string UIItem8PivotGridCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '41,63'
        /// </summary>
        public string UIItem1625PivotGridCellText = "41,63";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStormareCalculations_C2_S23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStormareCalculations_C2_S23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Stormare, Peter'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Stormare, Peter";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals '8'
        /// </summary>
        public string UIItem8PivotGridCellText = "8";
        
        /// <summary>
        /// Verify that the 'Text' property of '16,25' PivotGridCell equals '12'
        /// </summary>
        public string UIItem1625PivotGridCellText = "12";
        
        /// <summary>
        /// Verify that the 'Text' property of '8' PivotGridCell equals ''
        /// </summary>
        public string UIItem8PivotGridCell1Text = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '13' PivotGridCell equals '20'
        /// </summary>
        public string UIItem13PivotGridCellText = "20";
        
        /// <summary>
        /// Verify that the 'Text' property of '23.01.2024' PivotGridFieldValue equals '23.01.2024'
        /// </summary>
        public string UIItem23012024PivotGridFieldValueText = "23.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '04.02.2024' PivotGridFieldValue equals '04.02.2024'
        /// </summary>
        public string UIItem04022024PivotGridFieldValueText = "04.02.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '08.01.2024' PivotGridFieldValue equals '08.01.2024'
        /// </summary>
        public string UIItem08012024PivotGridFieldValueText = "08.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of '22.01.2024' PivotGridFieldValue equals '22.01.2024'
        /// </summary>
        public string UIItem22012024PivotGridFieldValueText = "22.01.2024";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStormareNoCalculations_C2_S21'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStormareNoCalculations_C2_S21ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Adams, Maud' PivotGridFieldValue equals 'Skarsgård, Stellan'
        /// </summary>
        public string UIAdamsMaudPivotGridFieldValueText = "Skarsgård, Stellan";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bergman, Ingrid' PivotGridFieldValue equals 'Edwall, Allan'
        /// </summary>
        public string UIBergmanIngridPivotGridFieldValueText = "Edwall, Allan";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ekland, Britt' PivotGridFieldValue equals 'VAKANT4'
        /// </summary>
        public string UIEklandBrittPivotGridFieldValueText = "VAKANT4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTransAndStopIsDisabled_C1_S11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckTransAndStopIsDisabled_C1_S11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Overfør...' button equals 'False'
        /// </summary>
        public bool UIOverførButtonEnabled = false;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'Stopp...' button equals 'False'
        /// </summary>
        public bool UIStoppButtonEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTransferFTTButtonDisabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckTransferFTTButtonDisabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Kalkuler' button equals 'False'
        /// </summary>
        public bool UIKalkulerButtonEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTransferFTTButtonEnabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckTransferFTTButtonEnabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Overfør...' button equals 'True'
        /// </summary>
        public bool UIOverførButtonEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckUTACalculationEndre_Garbo_C1_S23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckUTACalculationEndre_Garbo_C1_S23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'VAKANT6' PivotGridFieldValue equals 'Endre, Lena'
        /// </summary>
        public string UIVAKANT6PivotGridFieldValue1Text = "Endre, Lena";
        
        /// <summary>
        /// Verify that the 'Text' property of '6' PivotGridCell equals '6'
        /// </summary>
        public string UIItem6PivotGridCellText = "6";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Garbo, Greta' PivotGridFieldValue equals 'Garbo, Greta'
        /// </summary>
        public string UIGarboGretaPivotGridFieldValueText = "Garbo, Greta";
        
        /// <summary>
        /// Verify that the 'Text' property of '6' PivotGridCell equals '6'
        /// </summary>
        public string UIItem6PivotGridCell1Text = "6";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckUTACalculationGarbo_C1_S24'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckUTACalculationGarbo_C1_S24ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Garbo, Greta' PivotGridFieldValue equals 'Garbo, Greta'
        /// </summary>
        public string UIGarboGretaPivotGridFieldValueText = "Garbo, Greta";
        
        /// <summary>
        /// Verify that the 'Text' property of '6' PivotGridCell equals '5,57'
        /// </summary>
        public string UIItem6PivotGridCell1Text = "5,57";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckUTCalculationEndre_Garbo_C1_S24'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckUTCalculationEndre_Garbo_C1_S24ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '6' PivotGridCell equals '8,67'
        /// </summary>
        public string UIItem6PivotGridCellText = "8,67";
        
        /// <summary>
        /// Verify that the 'Text' property of '6' PivotGridCell equals '21,13'
        /// </summary>
        public string UIItem6PivotGridCell1Text = "21,13";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ShowFTTAsAveragePrMnd'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ShowFTTAsAveragePrMndParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.AveragePerMonthCalculationTypeModel' in 'cbeCalculationType' combo box
        /// </summary>
        public string UICbeCalculationTypeComboBoxValueTypeName = "Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.AveragePerMonth" +
            "CalculationTypeModel";
        
        /// <summary>
        /// Select 'Gjennomsnitt per. Mnd. [SelectionStart]0' in 'cbeCalculationType' combo box
        /// </summary>
        public string UICbeCalculationTypeComboBoxValueAsString = "Gjennomsnitt per. Mnd. [SelectionStart]0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ShowFTTAsAveragePrMndCalendarPlan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ShowFTTAsAveragePrMndCalendarPlanParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.AveragePerMonthCalculationTypeModel' in 'cbeCalculationType' combo box
        /// </summary>
        public string UICbeCalculationTypeComboBoxValueTypeName = "Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.AveragePerMonth" +
            "CalculationTypeModel";
        
        /// <summary>
        /// Select 'Gjennomsnitt per. Mnd. [SelectionStart]0' in 'cbeCalculationType' combo box
        /// </summary>
        public string UICbeCalculationTypeComboBoxValueAsString = "Gjennomsnitt per. Mnd. [SelectionStart]0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ShowFTTAsTotalCalendarPlan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ShowFTTAsTotalCalendarPlanParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.TotalCalculationTypeModel' in 'cbeCalculationType' combo box
        /// </summary>
        public string UICbeCalculationTypeComboBoxValueTypeName = "Gatsoft.Gat.RosterPlan.FixedPayment.Logic.Models.CalculationTypes.TotalCalculatio" +
            "nTypeModel";
        
        /// <summary>
        /// Select 'Totalt for hele arbeidsplan [SelectionStart]0' in 'cbeCalculationType' combo box
        /// </summary>
        public string UICbeCalculationTypeComboBoxValueAsString = "Totalt for hele arbeidsplan [SelectionStart]0";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UILeggtilblanklinjefraMenuItem UILeggtilblanklinjefraMenuItem
        {
            get
            {
                if ((this.mUILeggtilblanklinjefraMenuItem == null))
                {
                    this.mUILeggtilblanklinjefraMenuItem = new UILeggtilblanklinjefraMenuItem(this);
                }
                return this.mUILeggtilblanklinjefraMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UILeggtilblanklinjefraMenuItem mUILeggtilblanklinjefraMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeggtilblanklinjefraMenuItem : DXMenuItem
    {
        
        public UILeggtilblanklinjefraMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIItem5150FastetilleggMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIItem5150FastetilleggMenuBaseButtonItem == null))
                {
                    this.mUIItem5150FastetilleggMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIItem5150FastetilleggMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIItem5150FastetilleggMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIItem5150FastetilleggMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIItem5150FastetilleggMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIDpnlVisualizationDockPanel UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        
        private UIDpnlVisualizationDockPanel mUIDpnlVisualizationDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIRosterPlanGrid1Custom UIRosterPlanGrid1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGrid1Custom == null))
                {
                    this.mUIRosterPlanGrid1Custom = new UIRosterPlanGrid1Custom(this);
                }
                return this.mUIRosterPlanGrid1Custom;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        
        private UIRosterPlanGrid1Custom mUIRosterPlanGrid1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGrid1Custom : DXTestControl
    {
        
        public UIRosterPlanGrid1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGrid1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGrid";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIVonSudowMaxCell
        {
            get
            {
                if ((this.mUIVonSudowMaxCell == null))
                {
                    this.mUIVonSudowMaxCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVonSudowMaxCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]ColumnHandle1";
                    this.mUIVonSudowMaxCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVonSudowMaxCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVonSudowMaxCell;
            }
        }
        
        public DXCell UIGustavssonRobertCell
        {
            get
            {
                if ((this.mUIGustavssonRobertCell == null))
                {
                    this.mUIGustavssonRobertCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGustavssonRobertCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]ColumnHandle1";
                    this.mUIGustavssonRobertCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGustavssonRobertCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGustavssonRobertCell;
            }
        }
        
        public DXCell UIGustavssonRobertCell1
        {
            get
            {
                if ((this.mUIGustavssonRobertCell1 == null))
                {
                    this.mUIGustavssonRobertCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGustavssonRobertCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]ColumnHandle1";
                    this.mUIGustavssonRobertCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGustavssonRobertCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGustavssonRobertCell1;
            }
        }
        
        public DXCell UIRheborgJohanCell
        {
            get
            {
                if ((this.mUIRheborgJohanCell == null))
                {
                    this.mUIRheborgJohanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIRheborgJohanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]ColumnHandle1";
                    this.mUIRheborgJohanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRheborgJohanCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRheborgJohanCell;
            }
        }
        
        public DXCell UILassgårdRolfCell
        {
            get
            {
                if ((this.mUILassgårdRolfCell == null))
                {
                    this.mUILassgårdRolfCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILassgårdRolfCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]ColumnHandle1";
                    this.mUILassgårdRolfCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILassgårdRolfCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILassgårdRolfCell;
            }
        }
        
        public DXCell UIVonSudowMaxCell1
        {
            get
            {
                if ((this.mUIVonSudowMaxCell1 == null))
                {
                    this.mUIVonSudowMaxCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIVonSudowMaxCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]EmployeeName";
                    this.mUIVonSudowMaxCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVonSudowMaxCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVonSudowMaxCell1;
            }
        }
        
        public DXCell UIGustavssonRobertCell2
        {
            get
            {
                if ((this.mUIGustavssonRobertCell2 == null))
                {
                    this.mUIGustavssonRobertCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGustavssonRobertCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]EmployeeName";
                    this.mUIGustavssonRobertCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGustavssonRobertCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGustavssonRobertCell2;
            }
        }
        
        public DXCell UIGustavssonRobertCell3
        {
            get
            {
                if ((this.mUIGustavssonRobertCell3 == null))
                {
                    this.mUIGustavssonRobertCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGustavssonRobertCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]EmployeeName";
                    this.mUIGustavssonRobertCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGustavssonRobertCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGustavssonRobertCell3;
            }
        }
        
        public DXCell UIRheborgJohanCell1
        {
            get
            {
                if ((this.mUIRheborgJohanCell1 == null))
                {
                    this.mUIRheborgJohanCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIRheborgJohanCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]EmployeeName";
                    this.mUIRheborgJohanCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRheborgJohanCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRheborgJohanCell1;
            }
        }
        
        public DXCell UILassgårdRolfCell1
        {
            get
            {
                if ((this.mUILassgårdRolfCell1 == null))
                {
                    this.mUILassgårdRolfCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUILassgårdRolfCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]EmployeeName";
                    this.mUILassgårdRolfCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILassgårdRolfCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILassgårdRolfCell1;
            }
        }
        
        public DXCell UIRheborgJohanCell2
        {
            get
            {
                if ((this.mUIRheborgJohanCell2 == null))
                {
                    this.mUIRheborgJohanCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIRheborgJohanCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]EmployeeName";
                    this.mUIRheborgJohanCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRheborgJohanCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRheborgJohanCell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIVonSudowMaxCell;
        
        private DXCell mUIGustavssonRobertCell;
        
        private DXCell mUIGustavssonRobertCell1;
        
        private DXCell mUIRheborgJohanCell;
        
        private DXCell mUILassgårdRolfCell;
        
        private DXCell mUIVonSudowMaxCell1;
        
        private DXCell mUIGustavssonRobertCell2;
        
        private DXCell mUIGustavssonRobertCell3;
        
        private DXCell mUIRheborgJohanCell1;
        
        private DXCell mUILassgårdRolfCell1;
        
        private DXCell mUIRheborgJohanCell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlVisualizationDockPanel : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITcVisualizationTabList UITcVisualizationTabList
        {
            get
            {
                if ((this.mUITcVisualizationTabList == null))
                {
                    this.mUITcVisualizationTabList = new UITcVisualizationTabList(this);
                }
                return this.mUITcVisualizationTabList;
            }
        }
        
        public UITcSubtabsTabList UITcSubtabsTabList
        {
            get
            {
                if ((this.mUITcSubtabsTabList == null))
                {
                    this.mUITcSubtabsTabList = new UITcSubtabsTabList(this);
                }
                return this.mUITcSubtabsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcVisualizationTabList mUITcVisualizationTabList;
        
        private UITcSubtabsTabList mUITcSubtabsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcVisualizationTabList : DXTestControl
    {
        
        public UITcVisualizationTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITpFixedPaymentClient UITpFixedPaymentClient
        {
            get
            {
                if ((this.mUITpFixedPaymentClient == null))
                {
                    this.mUITpFixedPaymentClient = new UITpFixedPaymentClient(this);
                }
                return this.mUITpFixedPaymentClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpFixedPaymentClient mUITpFixedPaymentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpFixedPaymentClient : DXTestControl
    {
        
        public UITpFixedPaymentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpFixedPayment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentControlCustom : DXTestControl
    {
        
        public UIFixedPaymentControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControllerToViewModelWrapper";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom : DXTestControl
    {
        
        public UIViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom1 UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom1(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom1 mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentControlCustom1 : DXTestControl
    {
        
        public UIFixedPaymentControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedPaymentControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPgcCalculationResultPivotGrid UIPgcCalculationResultPivotGrid
        {
            get
            {
                if ((this.mUIPgcCalculationResultPivotGrid == null))
                {
                    this.mUIPgcCalculationResultPivotGrid = new UIPgcCalculationResultPivotGrid(this);
                }
                return this.mUIPgcCalculationResultPivotGrid;
            }
        }
        #endregion
        
        #region Fields
        private UIPgcCalculationResultPivotGrid mUIPgcCalculationResultPivotGrid;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPgcCalculationResultPivotGrid : DXPivotGrid
    {
        
        public UIPgcCalculationResultPivotGrid(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pgcCalculationResults";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXPivotGridCell UIItemPivotGridCell
        {
            get
            {
                if ((this.mUIItemPivotGridCell == null))
                {
                    this.mUIItemPivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItemPivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]0[Row]0";
                    this.mUIItemPivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItemPivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemPivotGridCell;
            }
        }
        #endregion
        
        #region Fields
        private DXPivotGridCell mUIItemPivotGridCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcSubtabsTabList : DXTestControl
    {
        
        public UITcSubtabsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabs";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewTabPageClient UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        #endregion
        
        #region Fields
        private UIViewTabPageClient mUIViewTabPageClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient : DXTestControl
    {
        
        public UIViewTabPageClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabsViewTabPage[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentViewCustom UIFixedPaymentViewCustom
        {
            get
            {
                if ((this.mUIFixedPaymentViewCustom == null))
                {
                    this.mUIFixedPaymentViewCustom = new UIFixedPaymentViewCustom(this);
                }
                return this.mUIFixedPaymentViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentViewCustom mUIFixedPaymentViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentViewCustom : DXTestControl
    {
        
        public UIFixedPaymentViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedPaymentView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedPaymentView";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom2 UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom2(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom2 mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentControlCustom2 : DXTestControl
    {
        
        public UIFixedPaymentControlCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControllerToViewModelWrapper";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom1 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom1(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom1 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom1 : DXTestControl
    {
        
        public UIViewHost1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom3 UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom3(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom3 mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentControlCustom3 : DXTestControl
    {
        
        public UIFixedPaymentControlCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedPaymentControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPgcCalculationResultPivotGrid1 UIPgcCalculationResultPivotGrid
        {
            get
            {
                if ((this.mUIPgcCalculationResultPivotGrid == null))
                {
                    this.mUIPgcCalculationResultPivotGrid = new UIPgcCalculationResultPivotGrid1(this);
                }
                return this.mUIPgcCalculationResultPivotGrid;
            }
        }
        
        public DXButton UIVaktklasserButton
        {
            get
            {
                if ((this.mUIVaktklasserButton == null))
                {
                    this.mUIVaktklasserButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVaktklasserButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnShiftClass";
                    this.mUIVaktklasserButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIVaktklasserButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVaktklasserButton;
            }
        }
        
        public DXButton UIKalkulerButton
        {
            get
            {
                if ((this.mUIKalkulerButton == null))
                {
                    this.mUIKalkulerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIKalkulerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCalculate";
                    this.mUIKalkulerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIKalkulerButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIKalkulerButton;
            }
        }
        
        public DXButton UIOverførButton
        {
            get
            {
                if ((this.mUIOverførButton == null))
                {
                    this.mUIOverførButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExport";
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOverførButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOverførButton;
            }
        }
        
        public DXButton UIStoppButton
        {
            get
            {
                if ((this.mUIStoppButton == null))
                {
                    this.mUIStoppButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIStoppButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnStop";
                    this.mUIStoppButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIStoppButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIStoppButton;
            }
        }
        
        public DXButton UIViseksportloggButton
        {
            get
            {
                if ((this.mUIViseksportloggButton == null))
                {
                    this.mUIViseksportloggButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIViseksportloggButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbExportLogs";
                    this.mUIViseksportloggButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUIViseksportloggButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIViseksportloggButton;
            }
        }
        
        public DXComboBox UICbeCalculationTypeComboBox
        {
            get
            {
                if ((this.mUICbeCalculationTypeComboBox == null))
                {
                    this.mUICbeCalculationTypeComboBox = new DXComboBox(this);
                    #region Search Criteria
                    this.mUICbeCalculationTypeComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeCalculationType";
                    this.mUICbeCalculationTypeComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
                    #endregion
                }
                return this.mUICbeCalculationTypeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIPgcCalculationResultPivotGrid1 mUIPgcCalculationResultPivotGrid;
        
        private DXButton mUIVaktklasserButton;
        
        private DXButton mUIKalkulerButton;
        
        private DXButton mUIOverførButton;
        
        private DXButton mUIStoppButton;
        
        private DXButton mUIViseksportloggButton;
        
        private DXComboBox mUICbeCalculationTypeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPgcCalculationResultPivotGrid1 : DXPivotGrid
    {
        
        public UIPgcCalculationResultPivotGrid1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pgcCalculationResults";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXPivotGridCell UIItemPivotGridCell
        {
            get
            {
                if ((this.mUIItemPivotGridCell == null))
                {
                    this.mUIItemPivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItemPivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]0[Row]0";
                    this.mUIItemPivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItemPivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemPivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItem8PivotGridCell
        {
            get
            {
                if ((this.mUIItem8PivotGridCell == null))
                {
                    this.mUIItem8PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem8PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]0[Row]1";
                    this.mUIItem8PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem8PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8PivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItem8PivotGridCell1
        {
            get
            {
                if ((this.mUIItem8PivotGridCell1 == null))
                {
                    this.mUIItem8PivotGridCell1 = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem8PivotGridCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]0[Row]2";
                    this.mUIItem8PivotGridCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem8PivotGridCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem8PivotGridCell1;
            }
        }
        
        public DXPivotGridCell UIItem18PivotGridCell
        {
            get
            {
                if ((this.mUIItem18PivotGridCell == null))
                {
                    this.mUIItem18PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem18PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]0[Row]3";
                    this.mUIItem18PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem18PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem18PivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItem18PivotGridCell1
        {
            get
            {
                if ((this.mUIItem18PivotGridCell1 == null))
                {
                    this.mUIItem18PivotGridCell1 = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem18PivotGridCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]0[Row]4";
                    this.mUIItem18PivotGridCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem18PivotGridCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem18PivotGridCell1;
            }
        }
        
        public DXPivotGridCell UIItem26PivotGridCell
        {
            get
            {
                if ((this.mUIItem26PivotGridCell == null))
                {
                    this.mUIItem26PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem26PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]1[Row]0";
                    this.mUIItem26PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem26PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem26PivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItem1625PivotGridCell
        {
            get
            {
                if ((this.mUIItem1625PivotGridCell == null))
                {
                    this.mUIItem1625PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem1625PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]1[Row]1";
                    this.mUIItem1625PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem1625PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1625PivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItem13PivotGridCell
        {
            get
            {
                if ((this.mUIItem13PivotGridCell == null))
                {
                    this.mUIItem13PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem13PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]1[Row]2";
                    this.mUIItem13PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem13PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem13PivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItem26PivotGridCell1
        {
            get
            {
                if ((this.mUIItem26PivotGridCell1 == null))
                {
                    this.mUIItem26PivotGridCell1 = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem26PivotGridCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]1[Row]3";
                    this.mUIItem26PivotGridCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem26PivotGridCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem26PivotGridCell1;
            }
        }
        
        public DXPivotGridCell UIItem26PivotGridCell2
        {
            get
            {
                if ((this.mUIItem26PivotGridCell2 == null))
                {
                    this.mUIItem26PivotGridCell2 = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem26PivotGridCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]1[Row]4";
                    this.mUIItem26PivotGridCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem26PivotGridCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem26PivotGridCell2;
            }
        }
        
        public DXPivotGridFieldValue UIItem05082024PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem05082024PivotGridFieldValue == null))
                {
                    this.mUIItem05082024PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem05082024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Start[LastLevelIndex]0";
                    this.mUIItem05082024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem05082024PivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem05082024PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIItem25082024PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem25082024PivotGridFieldValue == null))
                {
                    this.mUIItem25082024PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem25082024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]End[LastLevelIndex]0";
                    this.mUIItem25082024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem25082024PivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem25082024PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIItem05082024PivotGridFieldValue1
        {
            get
            {
                if ((this.mUIItem05082024PivotGridFieldValue1 == null))
                {
                    this.mUIItem05082024PivotGridFieldValue1 = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem05082024PivotGridFieldValue1.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Start[LastLevelIndex]4";
                    this.mUIItem05082024PivotGridFieldValue1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem05082024PivotGridFieldValue1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem05082024PivotGridFieldValue1;
            }
        }
        
        public DXPivotGridFieldValue UIItem25082024PivotGridFieldValue1
        {
            get
            {
                if ((this.mUIItem25082024PivotGridFieldValue1 == null))
                {
                    this.mUIItem25082024PivotGridFieldValue1 = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem25082024PivotGridFieldValue1.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]End[LastLevelIndex]4";
                    this.mUIItem25082024PivotGridFieldValue1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem25082024PivotGridFieldValue1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem25082024PivotGridFieldValue1;
            }
        }
        
        public DXPivotGridFieldValue UIAdamsMaudPivotGridFieldValue
        {
            get
            {
                if ((this.mUIAdamsMaudPivotGridFieldValue == null))
                {
                    this.mUIAdamsMaudPivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIAdamsMaudPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Employee[LastLevelIndex]0";
                    this.mUIAdamsMaudPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIAdamsMaudPivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAdamsMaudPivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIBergmanIngridPivotGridFieldValue
        {
            get
            {
                if ((this.mUIBergmanIngridPivotGridFieldValue == null))
                {
                    this.mUIBergmanIngridPivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIBergmanIngridPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Employee[LastLevelIndex]1";
                    this.mUIBergmanIngridPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIBergmanIngridPivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBergmanIngridPivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIOhlinLenaPivotGridFieldValue
        {
            get
            {
                if ((this.mUIOhlinLenaPivotGridFieldValue == null))
                {
                    this.mUIOhlinLenaPivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIOhlinLenaPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Employee[LastLevelIndex]3";
                    this.mUIOhlinLenaPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIOhlinLenaPivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOhlinLenaPivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIVAKANT6PivotGridFieldValue
        {
            get
            {
                if ((this.mUIVAKANT6PivotGridFieldValue == null))
                {
                    this.mUIVAKANT6PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIVAKANT6PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Employee[LastLevelIndex]4";
                    this.mUIVAKANT6PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIVAKANT6PivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVAKANT6PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIEklandBrittPivotGridFieldValue
        {
            get
            {
                if ((this.mUIEklandBrittPivotGridFieldValue == null))
                {
                    this.mUIEklandBrittPivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIEklandBrittPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Employee[LastLevelIndex]2";
                    this.mUIEklandBrittPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIEklandBrittPivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIEklandBrittPivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIItem19082024PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem19082024PivotGridFieldValue == null))
                {
                    this.mUIItem19082024PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem19082024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Start[LastLevelIndex]3";
                    this.mUIItem19082024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem19082024PivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem19082024PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIItem15092024PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem15092024PivotGridFieldValue == null))
                {
                    this.mUIItem15092024PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem15092024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]End[LastLevelIndex]3";
                    this.mUIItem15092024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem15092024PivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem15092024PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIVAKANT6PivotGridFieldValue1
        {
            get
            {
                if ((this.mUIVAKANT6PivotGridFieldValue1 == null))
                {
                    this.mUIVAKANT6PivotGridFieldValue1 = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIVAKANT6PivotGridFieldValue1.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Employee[LastLevelIndex]5";
                    this.mUIVAKANT6PivotGridFieldValue1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIVAKANT6PivotGridFieldValue1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVAKANT6PivotGridFieldValue1;
            }
        }
        
        public DXPivotGridCell UIItem18PivotGridCell2
        {
            get
            {
                if ((this.mUIItem18PivotGridCell2 == null))
                {
                    this.mUIItem18PivotGridCell2 = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem18PivotGridCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]0[Row]5";
                    this.mUIItem18PivotGridCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem18PivotGridCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem18PivotGridCell2;
            }
        }
        
        public DXPivotGridCell UIItem26PivotGridCell3
        {
            get
            {
                if ((this.mUIItem26PivotGridCell3 == null))
                {
                    this.mUIItem26PivotGridCell3 = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem26PivotGridCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]1[Row]5";
                    this.mUIItem26PivotGridCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem26PivotGridCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem26PivotGridCell3;
            }
        }
        
        public DXPivotGridCell UIItem6PivotGridCell
        {
            get
            {
                if ((this.mUIItem6PivotGridCell == null))
                {
                    this.mUIItem6PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem6PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]2[Row]5";
                    this.mUIItem6PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem6PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6PivotGridCell;
            }
        }
        
        public DXPivotGridFieldValue UIGarboGretaPivotGridFieldValue
        {
            get
            {
                if ((this.mUIGarboGretaPivotGridFieldValue == null))
                {
                    this.mUIGarboGretaPivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIGarboGretaPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Employee[LastLevelIndex]6";
                    this.mUIGarboGretaPivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIGarboGretaPivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGarboGretaPivotGridFieldValue;
            }
        }
        
        public DXPivotGridCell UIItem6PivotGridCell1
        {
            get
            {
                if ((this.mUIItem6PivotGridCell1 == null))
                {
                    this.mUIItem6PivotGridCell1 = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem6PivotGridCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]2[Row]6";
                    this.mUIItem6PivotGridCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem6PivotGridCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6PivotGridCell1;
            }
        }
        
        public DXPivotGridFieldValue UIItem23012024PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem23012024PivotGridFieldValue == null))
                {
                    this.mUIItem23012024PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem23012024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Start[LastLevelIndex]1";
                    this.mUIItem23012024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem23012024PivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem23012024PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIItem04022024PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem04022024PivotGridFieldValue == null))
                {
                    this.mUIItem04022024PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem04022024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]End[LastLevelIndex]1";
                    this.mUIItem04022024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem04022024PivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem04022024PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIItem08012024PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem08012024PivotGridFieldValue == null))
                {
                    this.mUIItem08012024PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem08012024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]Start[LastLevelIndex]2";
                    this.mUIItem08012024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem08012024PivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem08012024PivotGridFieldValue;
            }
        }
        
        public DXPivotGridFieldValue UIItem22012024PivotGridFieldValue
        {
            get
            {
                if ((this.mUIItem22012024PivotGridFieldValue == null))
                {
                    this.mUIItem22012024PivotGridFieldValue = new DXPivotGridFieldValue(this);
                    #region Search Criteria
                    this.mUIItem22012024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.Name] = "[Field]End[LastLevelIndex]2";
                    this.mUIItem22012024PivotGridFieldValue.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridFieldValue";
                    this.mUIItem22012024PivotGridFieldValue.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem22012024PivotGridFieldValue;
            }
        }
        
        public DXPivotGridCell UIItem2973PivotGridCell
        {
            get
            {
                if ((this.mUIItem2973PivotGridCell == null))
                {
                    this.mUIItem2973PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem2973PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]2[Row]0";
                    this.mUIItem2973PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem2973PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2973PivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItem2002PivotGridCell
        {
            get
            {
                if ((this.mUIItem2002PivotGridCell == null))
                {
                    this.mUIItem2002PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem2002PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]2[Row]3";
                    this.mUIItem2002PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem2002PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2002PivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItem6PivotGridCell2
        {
            get
            {
                if ((this.mUIItem6PivotGridCell2 == null))
                {
                    this.mUIItem6PivotGridCell2 = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem6PivotGridCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]2[Row]4";
                    this.mUIItem6PivotGridCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem6PivotGridCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6PivotGridCell2;
            }
        }
        
        public DXPivotGridCell UIItem3153PivotGridCell
        {
            get
            {
                if ((this.mUIItem3153PivotGridCell == null))
                {
                    this.mUIItem3153PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem3153PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]2[Row]2";
                    this.mUIItem3153PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem3153PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3153PivotGridCell;
            }
        }
        
        public DXPivotGridCell UIItem3125PivotGridCell
        {
            get
            {
                if ((this.mUIItem3125PivotGridCell == null))
                {
                    this.mUIItem3125PivotGridCell = new DXPivotGridCell(this);
                    #region Search Criteria
                    this.mUIItem3125PivotGridCell.SearchProperties[DXTestControl.PropertyNames.Name] = "[Column]3[Row]2";
                    this.mUIItem3125PivotGridCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PivotGridCell";
                    this.mUIItem3125PivotGridCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3125PivotGridCell;
            }
        }
        #endregion
        
        #region Fields
        private DXPivotGridCell mUIItemPivotGridCell;
        
        private DXPivotGridCell mUIItem8PivotGridCell;
        
        private DXPivotGridCell mUIItem8PivotGridCell1;
        
        private DXPivotGridCell mUIItem18PivotGridCell;
        
        private DXPivotGridCell mUIItem18PivotGridCell1;
        
        private DXPivotGridCell mUIItem26PivotGridCell;
        
        private DXPivotGridCell mUIItem1625PivotGridCell;
        
        private DXPivotGridCell mUIItem13PivotGridCell;
        
        private DXPivotGridCell mUIItem26PivotGridCell1;
        
        private DXPivotGridCell mUIItem26PivotGridCell2;
        
        private DXPivotGridFieldValue mUIItem05082024PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIItem25082024PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIItem05082024PivotGridFieldValue1;
        
        private DXPivotGridFieldValue mUIItem25082024PivotGridFieldValue1;
        
        private DXPivotGridFieldValue mUIAdamsMaudPivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIBergmanIngridPivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIOhlinLenaPivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIVAKANT6PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIEklandBrittPivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIItem19082024PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIItem15092024PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIVAKANT6PivotGridFieldValue1;
        
        private DXPivotGridCell mUIItem18PivotGridCell2;
        
        private DXPivotGridCell mUIItem26PivotGridCell3;
        
        private DXPivotGridCell mUIItem6PivotGridCell;
        
        private DXPivotGridFieldValue mUIGarboGretaPivotGridFieldValue;
        
        private DXPivotGridCell mUIItem6PivotGridCell1;
        
        private DXPivotGridFieldValue mUIItem23012024PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIItem04022024PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIItem08012024PivotGridFieldValue;
        
        private DXPivotGridFieldValue mUIItem22012024PivotGridFieldValue;
        
        private DXPivotGridCell mUIItem2973PivotGridCell;
        
        private DXPivotGridCell mUIItem2002PivotGridCell;
        
        private DXPivotGridCell mUIItem6PivotGridCell2;
        
        private DXPivotGridCell mUIItem3153PivotGridCell;
        
        private DXPivotGridCell mUIItem3125PivotGridCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu1(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu1 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UILåsoppogredigervakteMenuBaseButtonItem
        {
            get
            {
                if ((this.mUILåsoppogredigervakteMenuBaseButtonItem == null))
                {
                    this.mUILåsoppogredigervakteMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUILåsoppogredigervakteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[7]";
                    this.mUILåsoppogredigervakteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUILåsoppogredigervakteMenuBaseButtonItem;
            }
        }
        
        public UILeggtilblanklinjefraMenuItem1 UILeggtilblanklinjefraMenuItem
        {
            get
            {
                if ((this.mUILeggtilblanklinjefraMenuItem == null))
                {
                    this.mUILeggtilblanklinjefraMenuItem = new UILeggtilblanklinjefraMenuItem1(this);
                }
                return this.mUILeggtilblanklinjefraMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUILåsoppogredigervakteMenuBaseButtonItem;
        
        private UILeggtilblanklinjefraMenuItem1 mUILeggtilblanklinjefraMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeggtilblanklinjefraMenuItem1 : DXMenuItem
    {
        
        public UILeggtilblanklinjefraMenuItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIItem5150FastetilleggMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIItem5150FastetilleggMenuBaseButtonItem == null))
                {
                    this.mUIItem5150FastetilleggMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIItem5150FastetilleggMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIItem5150FastetilleggMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIItem5150FastetilleggMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIItem5150FastetilleggMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAnsatteiarbeidsplanWindow : DXWindow
    {
        
        public UIAnsatteiarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte i arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlOuterClient UIPanelControlOuterClient
        {
            get
            {
                if ((this.mUIPanelControlOuterClient == null))
                {
                    this.mUIPanelControlOuterClient = new UIPanelControlOuterClient(this);
                }
                return this.mUIPanelControlOuterClient;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlOuterClient mUIPanelControlOuterClient;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlOuterClient : DXTestControl
    {
        
        public UIPanelControlOuterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlLeftClient UIPanelControlLeftClient
        {
            get
            {
                if ((this.mUIPanelControlLeftClient == null))
                {
                    this.mUIPanelControlLeftClient = new UIPanelControlLeftClient(this);
                }
                return this.mUIPanelControlLeftClient;
            }
        }
        
        public UIPanelControlRightClient UIPanelControlRightClient
        {
            get
            {
                if ((this.mUIPanelControlRightClient == null))
                {
                    this.mUIPanelControlRightClient = new UIPanelControlRightClient(this);
                }
                return this.mUIPanelControlRightClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlLeftClient mUIPanelControlLeftClient;
        
        private UIPanelControlRightClient mUIPanelControlRightClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlLeftClient : DXTestControl
    {
        
        public UIPanelControlLeftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIAnsatteButton
        {
            get
            {
                if ((this.mUIAnsatteButton == null))
                {
                    this.mUIAnsatteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonAdd";
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUIAnsatteButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteButton;
            }
        }
        
        public UITreeListEmployeeTreeList UITreeListEmployeeTreeList
        {
            get
            {
                if ((this.mUITreeListEmployeeTreeList == null))
                {
                    this.mUITreeListEmployeeTreeList = new UITreeListEmployeeTreeList(this);
                }
                return this.mUITreeListEmployeeTreeList;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAnsatteButton;
        
        private UITreeListEmployeeTreeList mUITreeListEmployeeTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITreeListEmployeeTreeList : DXTreeList
    {
        
        public UITreeListEmployeeTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "treeListEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode4TreeListNode UINode4TreeListNode
        {
            get
            {
                if ((this.mUINode4TreeListNode == null))
                {
                    this.mUINode4TreeListNode = new UINode4TreeListNode(this);
                }
                return this.mUINode4TreeListNode;
            }
        }
        
        public UINode3TreeListNode UINode3TreeListNode
        {
            get
            {
                if ((this.mUINode3TreeListNode == null))
                {
                    this.mUINode3TreeListNode = new UINode3TreeListNode(this);
                }
                return this.mUINode3TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode4TreeListNode mUINode4TreeListNode;
        
        private UINode3TreeListNode mUINode3TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode4TreeListNode : DXTreeListNode
    {
        
        public UINode4TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode1TreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new UINode1TreeListNode(this);
                }
                return this.mUINode1TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode1TreeListNode mUINode1TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode1TreeListNode : DXTreeListNode
    {
        
        public UINode1TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem5140OmregnettidTreeListCell
        {
            get
            {
                if ((this.mUIItem5140OmregnettidTreeListCell == null))
                {
                    this.mUIItem5140OmregnettidTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem5140OmregnettidTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colDepartmentDisplayNameMain";
                    this.mUIItem5140OmregnettidTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem5140OmregnettidTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem5140OmregnettidTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem5140OmregnettidTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode3TreeListNode : DXTreeListNode
    {
        
        public UINode3TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode1TreeListNode1 UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new UINode1TreeListNode1(this);
                }
                return this.mUINode1TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode1TreeListNode1 mUINode1TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode1TreeListNode1 : DXTreeListNode
    {
        
        public UINode1TreeListNode1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTestControl UINode1TreeListNodeSelectImage
        {
            get
            {
                if ((this.mUINode1TreeListNodeSelectImage == null))
                {
                    this.mUINode1TreeListNodeSelectImage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUINode1TreeListNodeSelectImage.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
                    this.mUINode1TreeListNodeSelectImage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNodeSelectImage";
                    this.mUINode1TreeListNodeSelectImage.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUINode1TreeListNodeSelectImage;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUINode1TreeListNodeSelectImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlRightClient : DXTestControl
    {
        
        public UIPanelControlRightClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeEditorsViewCustom UIEmployeeEditorsViewCustom
        {
            get
            {
                if ((this.mUIEmployeeEditorsViewCustom == null))
                {
                    this.mUIEmployeeEditorsViewCustom = new UIEmployeeEditorsViewCustom(this);
                }
                return this.mUIEmployeeEditorsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeEditorsViewCustom mUIEmployeeEditorsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeEditorsViewCustom : DXTestControl
    {
        
        public UIEmployeeEditorsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeEditorsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeEditorsView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIXscContentScrollableControl UIXscContentScrollableControl
        {
            get
            {
                if ((this.mUIXscContentScrollableControl == null))
                {
                    this.mUIXscContentScrollableControl = new UIXscContentScrollableControl(this);
                }
                return this.mUIXscContentScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscContentScrollableControl mUIXscContentScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXscContentScrollableControl : DXScrollableControl
    {
        
        public UIXscContentScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlViewHostCustom UIGroupControlViewHostCustom
        {
            get
            {
                if ((this.mUIGroupControlViewHostCustom == null))
                {
                    this.mUIGroupControlViewHostCustom = new UIGroupControlViewHostCustom(this);
                }
                return this.mUIGroupControlViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlViewHostCustom mUIGroupControlViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControlViewHostCustom : DXTestControl
    {
        
        public UIGroupControlViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient mUIGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControlClient : DXTestControl
    {
        
        public UIGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerLineVCustom UIEmployeeManagerLineVCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerLineVCustom == null))
                {
                    this.mUIEmployeeManagerLineVCustom = new UIEmployeeManagerLineVCustom(this);
                }
                return this.mUIEmployeeManagerLineVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerLineVCustom mUIEmployeeManagerLineVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeManagerLineVCustom : DXTestControl
    {
        
        public UIEmployeeManagerLineVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerLineView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerLineView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIEPositionPercentEdit
        {
            get
            {
                if ((this.mUIEPositionPercentEdit == null))
                {
                    this.mUIEPositionPercentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIEPositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ePositionPercent";
                    this.mUIEPositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDoubleEdit";
                    this.mUIEPositionPercentEdit.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIEPositionPercentEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIEPositionPercentEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeggtilansatteWindow : DXWindow
    {
        
        public UILeggtilansatteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom1 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom1(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom1 mUIViewHostCustom;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom1 : DXTestControl
    {
        
        public UIViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient3 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient3(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient3 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient3 : DXTestControl
    {
        
        public UIPcViewClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UISelectDepartmentEmplCustom UISelectDepartmentEmplCustom
        {
            get
            {
                if ((this.mUISelectDepartmentEmplCustom == null))
                {
                    this.mUISelectDepartmentEmplCustom = new UISelectDepartmentEmplCustom(this);
                }
                return this.mUISelectDepartmentEmplCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISelectDepartmentEmplCustom mUISelectDepartmentEmplCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISelectDepartmentEmplCustom : DXTestControl
    {
        
        public UISelectDepartmentEmplCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectDepartmentEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectDepartmentEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UILeftAutoHideContaineClient UILeftAutoHideContaineClient
        {
            get
            {
                if ((this.mUILeftAutoHideContaineClient == null))
                {
                    this.mUILeftAutoHideContaineClient = new UILeftAutoHideContaineClient(this);
                }
                return this.mUILeftAutoHideContaineClient;
            }
        }
        
        public UIAutoHideControlClient UIAutoHideControlClient
        {
            get
            {
                if ((this.mUIAutoHideControlClient == null))
                {
                    this.mUIAutoHideControlClient = new UIAutoHideControlClient(this);
                }
                return this.mUIAutoHideControlClient;
            }
        }
        
        public UIPcContentContainerClient UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UILeftAutoHideContaineClient mUILeftAutoHideContaineClient;
        
        private UIAutoHideControlClient mUIAutoHideControlClient;
        
        private UIPcContentContainerClient mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeftAutoHideContaineClient : DXTestControl
    {
        
        public UILeftAutoHideContaineClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LeftAutoHideContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXButton UIUtvalgsalternativerButton
        {
            get
            {
                if ((this.mUIUtvalgsalternativerButton == null))
                {
                    this.mUIUtvalgsalternativerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIUtvalgsalternativerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Utvalgsalternativer";
                    this.mUIUtvalgsalternativerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainerButton";
                    this.mUIUtvalgsalternativerButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIUtvalgsalternativerButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIUtvalgsalternativerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAutoHideControlClient : DXTestControl
    {
        
        public UIAutoHideControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LeftAutoHideControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIDpDepartmentSelectorDockPanel UIDpDepartmentSelectorDockPanel
        {
            get
            {
                if ((this.mUIDpDepartmentSelectorDockPanel == null))
                {
                    this.mUIDpDepartmentSelectorDockPanel = new UIDpDepartmentSelectorDockPanel(this);
                }
                return this.mUIDpDepartmentSelectorDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDepartmentSelectorDockPanel mUIDpDepartmentSelectorDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDepartmentSelectorDockPanel : DXDockPanel
    {
        
        public UIDpDepartmentSelectorDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDepartmentSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIDepartmentSelectorCoCustom UIDepartmentSelectorCoCustom
        {
            get
            {
                if ((this.mUIDepartmentSelectorCoCustom == null))
                {
                    this.mUIDepartmentSelectorCoCustom = new UIDepartmentSelectorCoCustom(this);
                }
                return this.mUIDepartmentSelectorCoCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDepartmentSelectorCoCustom mUIDepartmentSelectorCoCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDepartmentSelectorCoCustom : DXTestControl
    {
        
        public UIDepartmentSelectorCoCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "departmentSelectorContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UITlAccessibleDepartmeTreeList UITlAccessibleDepartmeTreeList
        {
            get
            {
                if ((this.mUITlAccessibleDepartmeTreeList == null))
                {
                    this.mUITlAccessibleDepartmeTreeList = new UITlAccessibleDepartmeTreeList(this);
                }
                return this.mUITlAccessibleDepartmeTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UITlAccessibleDepartmeTreeList mUITlAccessibleDepartmeTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITlAccessibleDepartmeTreeList : DXTreeList
    {
        
        public UITlAccessibleDepartmeTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlAccessibleDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode0TreeListNode : DXTreeListNode
    {
        
        public UINode0TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UINode9TreeListNode UINode9TreeListNode
        {
            get
            {
                if ((this.mUINode9TreeListNode == null))
                {
                    this.mUINode9TreeListNode = new UINode9TreeListNode(this);
                }
                return this.mUINode9TreeListNode;
            }
        }
        
        public UINode12TreeListNode UINode12TreeListNode
        {
            get
            {
                if ((this.mUINode12TreeListNode == null))
                {
                    this.mUINode12TreeListNode = new UINode12TreeListNode(this);
                }
                return this.mUINode12TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode9TreeListNode mUINode9TreeListNode;
        
        private UINode12TreeListNode mUINode12TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode9TreeListNode : DXTreeListNode
    {
        
        public UINode9TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXTreeListNode UINode12TreeListNode
        {
            get
            {
                if ((this.mUINode12TreeListNode == null))
                {
                    this.mUINode12TreeListNode = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode12TreeListNode.SearchProperties[DXTestControl.PropertyNames.Name] = "Node12";
                    this.mUINode12TreeListNode.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode12TreeListNode.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUINode12TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListNode mUINode12TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode12TreeListNode : DXTreeListNode
    {
        
        public UINode12TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node12";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            #endregion
        }
        
        #region Properties
        public DXTreeListNode UINode12TreeListNode1
        {
            get
            {
                if ((this.mUINode12TreeListNode1 == null))
                {
                    this.mUINode12TreeListNode1 = new DXTreeListNode(this);
                    #region Search Criteria
                    this.mUINode12TreeListNode1.SearchProperties[DXTestControl.PropertyNames.Name] = "Node12";
                    this.mUINode12TreeListNode1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
                    this.mUINode12TreeListNode1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUINode12TreeListNode1.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUINode12TreeListNode1;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListNode mUINode12TreeListNode1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentContainerClient : DXTestControl
    {
        
        public UIPcContentContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient1 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient1(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient1 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient1 : DXTestControl
    {
        
        public UIPcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentEmployeeTable UIGcDepartmentEmployeeTable
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeTable == null))
                {
                    this.mUIGcDepartmentEmployeeTable = new UIGcDepartmentEmployeeTable(this);
                }
                return this.mUIGcDepartmentEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentEmployeeTable mUIGcDepartmentEmployeeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDepartmentEmployeeTable : DXGrid
    {
        
        public UIGcDepartmentEmployeeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIGcDepartmentEmployeeCell
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeCell == null))
                {
                    this.mUIGcDepartmentEmployeeCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDepartmentEmployeeCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]25[Column]col" +
                        "ToDate";
                    this.mUIGcDepartmentEmployeeCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDepartmentEmployeeCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIGcDepartmentEmployeeCell;
            }
        }
        
        public DXCell UIHaberPeterCell
        {
            get
            {
                if ((this.mUIHaberPeterCell == null))
                {
                    this.mUIHaberPeterCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIHaberPeterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]11[Column]col" +
                        "Employee";
                    this.mUIHaberPeterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIHaberPeterCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIHaberPeterCell;
            }
        }
        
        public DXCell UIGcDepartmentEmployeeCell1
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeCell1 == null))
                {
                    this.mUIGcDepartmentEmployeeCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDepartmentEmployeeCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]17[Column]col" +
                        "ToDate";
                    this.mUIGcDepartmentEmployeeCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDepartmentEmployeeCell1.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIGcDepartmentEmployeeCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGcDepartmentEmployeeCell;
        
        private DXCell mUIHaberPeterCell;
        
        private DXCell mUIGcDepartmentEmployeeCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu2 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu2(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu2 mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu2 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink7MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink7MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink7MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink7MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[7]";
                    this.mUIBarButtonItemLink7MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink7MenuBaseButtonItem;
            }
        }
        
        public UISettlinjeraktiveinakMenuItem UISettlinjeraktiveinakMenuItem
        {
            get
            {
                if ((this.mUISettlinjeraktiveinakMenuItem == null))
                {
                    this.mUISettlinjeraktiveinakMenuItem = new UISettlinjeraktiveinakMenuItem(this);
                }
                return this.mUISettlinjeraktiveinakMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink7MenuBaseButtonItem;
        
        private UISettlinjeraktiveinakMenuItem mUISettlinjeraktiveinakMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISettlinjeraktiveinakMenuItem : DXMenuItem
    {
        
        public UISettlinjeraktiveinakMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UISettlinje2inaktiv515MenuBaseButtonItem
        {
            get
            {
                if ((this.mUISettlinje2inaktiv515MenuBaseButtonItem == null))
                {
                    this.mUISettlinje2inaktiv515MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUISettlinje2inaktiv515MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUISettlinje2inaktiv515MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUISettlinje2inaktiv515MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUISettlinje2inaktiv515MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOverførtilleggWindow : DXWindow
    {
        
        public UIOverførtilleggWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Overfør tillegg";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Overfør tillegg");
            #endregion
        }
        
        #region Properties
        public DXButton UIOverførButton
        {
            get
            {
                if ((this.mUIOverførButton == null))
                {
                    this.mUIOverførButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExport";
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOverførButton.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIOverførButton;
            }
        }
        
        public UIGcExportsTable UIGcExportsTable
        {
            get
            {
                if ((this.mUIGcExportsTable == null))
                {
                    this.mUIGcExportsTable = new UIGcExportsTable(this);
                }
                return this.mUIGcExportsTable;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOverførButton;
        
        private UIGcExportsTable mUIGcExportsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcExportsTable : DXGrid
    {
        
        public UIGcExportsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExports";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Overfør tillegg");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIRow1ColumncolToEdit
        {
            get
            {
                if ((this.mUIRow1ColumncolToEdit == null))
                {
                    this.mUIRow1ColumncolToEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumncolToEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExportsTextEdit[View]gvExports[Row]1[Column]colTo";
                    this.mUIRow1ColumncolToEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumncolToEdit.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIRow1ColumncolToEdit;
            }
        }
        
        public DXTextEdit UIRow2ColumncolToEdit
        {
            get
            {
                if ((this.mUIRow2ColumncolToEdit == null))
                {
                    this.mUIRow2ColumncolToEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow2ColumncolToEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExportsTextEdit[View]gvExports[Row]2[Column]colTo";
                    this.mUIRow2ColumncolToEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow2ColumncolToEdit.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIRow2ColumncolToEdit;
            }
        }
        
        public DXCell UIStormarePeterCell
        {
            get
            {
                if ((this.mUIStormarePeterCell == null))
                {
                    this.mUIStormarePeterCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIStormarePeterCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExportsGridControlCell[View]gvExports[Row]1[Column]colEmployee";
                    this.mUIStormarePeterCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIStormarePeterCell.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIStormarePeterCell;
            }
        }
        
        public DXCell UIStormarePeterCell1
        {
            get
            {
                if ((this.mUIStormarePeterCell1 == null))
                {
                    this.mUIStormarePeterCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIStormarePeterCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExportsGridControlCell[View]gvExports[Row]2[Column]colEmployee";
                    this.mUIStormarePeterCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIStormarePeterCell1.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIStormarePeterCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIRow1ColumncolToEdit;
        
        private DXTextEdit mUIRow2ColumncolToEdit;
        
        private DXCell mUIStormarePeterCell;
        
        private DXCell mUIStormarePeterCell1;
        #endregion
    }
}
