// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _027_Test_Helligdagsberegning_kalenderplan
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddVakantToPlan - Use 'AddVakantToPlanParams' to pass parameters into this method.
        /// </summary>
        public void AddVakantToPlan()
        {
            #region Variable Declarations
            DXButton uIVakantButton = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UIVakantButton;
            DXTreeListCell uIItem10TreeListCell = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeesTreeList.UINode6TreeListNode.UINode0TreeListNode.UIItem10TreeListCell;
            DXLookUpEdit uIEPositionCategoryLookUpEdit = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient1.UIEmployeeManagerLineVCustom.UIEPositionCategoryLookUpEdit;
            DXLookUpEdit uIERuleSetLookUpEdit = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient1.UIEmployeeManagerLineVCustom.UIERuleSetLookUpEdit;
            #endregion

            // Click 'Vakant' button
            Mouse.Click(uIVakantButton, new Point(1, 1));

            // Click '1. 0%' TreeListCell
            Mouse.Click(uIItem10TreeListCell, new Point(21, 8));

            // Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.PositionCategoryViewModel' in 'ePositionCategory' LookUpEdit
            //ValueTypeName
            uIEPositionCategoryLookUpEdit.ValueTypeName = this.AddVakantToPlanParams.UIEPositionCategoryLookUpEditValueTypeName;

            // Type 'S - Sykepleier' in 'ePositionCategory' LookUpEdit
            //ValueAsString
            uIEPositionCategoryLookUpEdit.ValueAsString = this.AddVakantToPlanParams.UIEPositionCategoryLookUpEditValueAsString;

            // Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.RuleSetViewModel' in 'eRuleSet' LookUpEdit
            //ValueTypeName
            uIERuleSetLookUpEdit.ValueTypeName = this.AddVakantToPlanParams.UIERuleSetLookUpEditValueTypeName;

            // Type 'TURNUS - Turnus 35,5t/uke' in 'eRuleSet' LookUpEdit
            //ValueAsString
            uIERuleSetLookUpEdit.ValueAsString = this.AddVakantToPlanParams.UIERuleSetLookUpEditValueAsString;
        }
        
        /// <summary>
        /// ChangeBrolinCalculationType - Use 'ChangeBrolinCalculationTypeParams' to pass parameters into this method.
        /// </summary>
        public void ChangeEmployeesCalculationType()
        {
            #region Variable Declarations
            var  treList = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeesTreeList;//.UINode1TreeListNode.UIItem2BrolinThomasTreeListCell;
            DXLookUpEdit uILueF3CalculationOptiLookUpEdit = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerF3CalCustom.UILueF3CalculationOptiLookUpEdit;
            #endregion
            
            Keyboard.SendKeys(treList, "a", ModifierKeys.Control);
            Playback.Wait(2000);
            
            // Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionViewModel' in 'lueF3CalculationOption' LookUpEdit
            //ValueTypeName
            uILueF3CalculationOptiLookUpEdit.ValueTypeName = this.ChangeBrolinCalculationTypeParams.UILueF3CalculationOptiLookUpEditValueTypeName;

            // Type 'Annenhver' in 'lueF3CalculationOption' LookUpEdit
            //ValueAsString
            uILueF3CalculationOptiLookUpEdit.ValueAsString = this.ChangeBrolinCalculationTypeParams.UILueF3CalculationOptiLookUpEditValueAsString;
        }
        
        /// <summary>
        /// ChangeIbrahimovicCalculationType - Use 'ChangeIbrahimovicCalculationTypeParams' to pass parameters into this method.
        /// </summary>
        public void ChangeIbrahimovicCalculationType()
        {
            #region Variable Declarations
            DXTreeListCell uIItem4IbrahimovicZlatTreeListCell = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeesTreeList.UINode3TreeListNode.UIItem4IbrahimovicZlatTreeListCell;
            DXLookUpEdit uILueF3CalculationOptiLookUpEdit = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerF3CalCustom.UILueF3CalculationOptiLookUpEdit;
            #endregion

            // Click '4. Ibrahimovic, Zlatan' TreeListCell
            Mouse.Click(uIItem4IbrahimovicZlatTreeListCell, new Point(62, 9));

            // Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionViewModel' in 'lueF3CalculationOption' LookUpEdit
            //ValueTypeName
            uILueF3CalculationOptiLookUpEdit.ValueTypeName = this.ChangeIbrahimovicCalculationTypeParams.UILueF3CalculationOptiLookUpEditValueTypeName;

            // Type 'Annenhver' in 'lueF3CalculationOption' LookUpEdit
            //ValueAsString
            uILueF3CalculationOptiLookUpEdit.ValueAsString = this.ChangeIbrahimovicCalculationTypeParams.UILueF3CalculationOptiLookUpEditValueAsString;
        }
        
        /// <summary>
        /// CheckAnderssonStep4 - Use 'CheckAnderssonStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAnderssonStep4()
        {
            #region Variable Declarations
            DXCell uIGCell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell;
            DXCell uIItem7av7Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7av7Cell;
            DXCell uIItem0av4Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av4Cell;
            DXCell uIItem0av0Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckAnderssonStep4ExpectedValues.UIGCellValueAsString, uIGCell.ValueAsString, "Feil i F3b.(Andersson)");

            // Verify that the 'ValueAsString' property of '7 av 7' cell equals '7 av 7'
            Assert.AreEqual(this.CheckAnderssonStep4ExpectedValues.UIItem7av7CellValueAsString, uIItem7av7Cell.ValueAsString, "Feil i SH.(Andersson)");

            // Verify that the 'ValueAsString' property of '0 av 4' cell equals '0 av 4'
            Assert.AreEqual(this.CheckAnderssonStep4ExpectedValues.UIItem0av4CellValueAsString, uIItem0av4Cell.ValueAsString, "Feil i F3.(Andersson)");

            // Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckAnderssonStep4ExpectedValues.UIItem0av0CellValueAsString, uIItem0av0Cell.ValueAsString, "Feil i F5.(Andersson)");
        }
        
        /// <summary>
        /// CheckAnderssonStep8 - Use 'CheckAnderssonStep8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAnderssonStep8()
        {
            #region Variable Declarations
            DXCell uIACell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell;
            DXCell uIItem7av7Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem7av7Cell;
            DXCell uIItem0av4Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av4Cell;
            DXCell uIItem0av0Cell2 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell2;
            #endregion

            // Verify that the 'ValueAsString' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckAnderssonStep8ExpectedValues.UIACellValueAsString, uIACell.ValueAsString, "Feil i F3b.(Andersson)");

            // Verify that the 'ValueAsString' property of '9 av 9' cell equals '9 av 9'
            Assert.AreEqual(this.CheckAnderssonStep8ExpectedValues.UIItem7av7CellValueAsString, uIItem7av7Cell.ValueAsString, "Feil i SH.(Andersson)");

            // Verify that the 'ValueAsString' property of '0 av 4' cell equals '0 av 4'
            Assert.AreEqual(this.CheckAnderssonStep8ExpectedValues.UIItem0av4CellValueAsString, uIItem0av4Cell.ValueAsString, "Feil i F3.(Andersson)");

            // Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckAnderssonStep8ExpectedValues.UIItem0av0Cell2ValueAsString, uIItem0av0Cell2.ValueAsString, "Feil i F5.(Andersson)");
        }
        
        /// <summary>
        /// CheckBrolinStep4 - Use 'CheckBrolinStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBrolinStep4()
        {
            #region Variable Declarations
            DXCell uIGCell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell1;
            DXCell uIItem3av7Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av7Cell;
            DXCell uIItem0av0Cell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell1;
            DXCell uIItem0av2Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckBrolinStep4ExpectedValues.UIGCell1ValueAsString, uIGCell1.ValueAsString, "Feil i F3b.(Brolin)");

            // Verify that the 'ValueAsString' property of '2 av 7' cell equals '2 av 7'
            Assert.AreEqual(this.CheckBrolinStep4ExpectedValues.UIItem3av7CellValueAsString, uIItem3av7Cell.ValueAsString, "Feil i SH.(Brolin)");

            // Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckBrolinStep4ExpectedValues.UIItem0av0Cell1ValueAsString, uIItem0av0Cell1.ValueAsString, "Feil i F3.(Brolin)");

            // Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckBrolinStep4ExpectedValues.UIItem0av2CellValueAsString, uIItem0av2Cell.ValueAsString, "Feil i F5.(Brolin)");
        }
        
        /// <summary>
        /// CheckBrolinStep8 - Use 'CheckBrolinStep8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBrolinStep8()
        {
            #region Variable Declarations
            DXCell uIGCell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell1;
            DXCell uIItem5av9Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem5av9Cell;
            DXCell uIItem0av1Cell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av1Cell1;
            DXCell uIItem0av2Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckBrolinStep8ExpectedValues.UIGCell1ValueAsString, uIGCell1.ValueAsString, "Feil i F3b.(Brolin)");

            // Verify that the 'ValueAsString' property of '5 av 9' cell equals '5 av 9'
            Assert.AreEqual(this.CheckBrolinStep8ExpectedValues.UIItem5av9CellValueAsString, uIItem5av9Cell.ValueAsString, "Feil i SH.(Brolin)");

            // Verify that the 'ValueAsString' property of '0 av 1' cell equals '0 av 1'
            Assert.AreEqual(this.CheckBrolinStep8ExpectedValues.UIItem0av1Cell1ValueAsString, uIItem0av1Cell1.ValueAsString, "Feil i F3.(Brolin)");

            // Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 2'
            Assert.AreEqual(this.CheckBrolinStep8ExpectedValues.UIItem0av2CellValueAsString, uIItem0av2Cell.ValueAsString, "Feil i F5.(Brolin)");
        }
        
        /// <summary>
        /// CheckBrolinStep9 - Use 'CheckBrolinStep9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBrolinStep9()
        {
            #region Variable Declarations
            DXCell uIACell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell1;
            DXCell uIItem5av9Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem5av9Cell;
            DXCell uIItem0av0Cell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell1;
            DXCell uIItem0av2Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckBrolinStep9ExpectedValues.UIACell1ValueAsString, uIACell1.ValueAsString, "Feil i F3b.(Brolin)");

            // Verify that the 'ValueAsString' property of cell equals '2 av 9'
            Assert.AreEqual(this.CheckBrolinStep9ExpectedValues.UIItem5av9CellValueAsString, uIItem5av9Cell.ValueAsString, "Feil i SH.(Brolin)");

            // Verify that the 'ValueAsString' property of cell equals '0 av 1'
            Assert.AreEqual(this.CheckBrolinStep9ExpectedValues.UIItem0av0Cell1ValueAsString, uIItem0av0Cell1.ValueAsString, "Feil i F3.(Brolin)");

            // Verify that the 'ValueAsString' property of cell equals '0 av 0'
            Assert.AreEqual(this.CheckBrolinStep9ExpectedValues.UIItem0av2CellValueAsString, uIItem0av2Cell.ValueAsString, "Feil i F5.(Brolin)");
        }
        
        /// <summary>
        /// CheckDahlinStep4 - Use 'CheckDahlinStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDahlinStep4()
        {
            #region Variable Declarations
            DXCell uIGCell2 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell2;
            DXCell uIItem5av7Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem5av7Cell;
            DXCell uIItem0av2Cell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell1;
            DXCell uIItem0av1Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av1Cell;
            #endregion

            // Verify that the 'ValueAsString' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckDahlinStep4ExpectedValues.UIGCell2ValueAsString, uIGCell2.ValueAsString, "Feil i F3b.(Dahlin)");

            // Verify that the 'ValueAsString' property of '5 av 7' cell equals '5 av 7'
            Assert.AreEqual(this.CheckDahlinStep4ExpectedValues.UIItem5av7CellValueAsString, uIItem5av7Cell.ValueAsString, "Feil i SH.(Dahlin)");

            // Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 2'
            Assert.AreEqual(this.CheckDahlinStep4ExpectedValues.UIItem0av2Cell1ValueAsString, uIItem0av2Cell1.ValueAsString, "Feil i F3.(Dahlin)");

            // Verify that the 'ValueAsString' property of '0 av 1' cell equals '0 av 1'
            Assert.AreEqual(this.CheckDahlinStep4ExpectedValues.UIItem0av1CellValueAsString, uIItem0av1Cell.ValueAsString, "Feil i F5.(Dahlin)");
        }
        
        /// <summary>
        /// CheckDahlinStep8 - Use 'CheckDahlinStep8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDahlinStep8()
        {
            #region Variable Declarations
            DXCell uIGCell2 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell2;
            DXCell uIItem6av9Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6av9Cell;
            DXCell uIItem0av2Cell2 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell2;
            DXCell uIItem0av2Cell3 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell3;
            #endregion

            // Verify that the 'ValueAsString' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckDahlinStep8ExpectedValues.UIGCell2ValueAsString, uIGCell2.ValueAsString, "Feil i F3b.(Dahlin)");

            // Verify that the 'ValueAsString' property of '6 av 9' cell equals '6 av 9'
            Assert.AreEqual(this.CheckDahlinStep8ExpectedValues.UIItem6av9CellValueAsString, uIItem6av9Cell.ValueAsString, "Feil i SH.(Dahlin)");

            // Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 2'
            Assert.AreEqual(this.CheckDahlinStep8ExpectedValues.UIItem0av2Cell2ValueAsString, uIItem0av2Cell2.ValueAsString, "Feil i F3.(Dahlin)");

            // Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 2'
            Assert.AreEqual(this.CheckDahlinStep8ExpectedValues.UIItem0av2Cell3ValueAsString, uIItem0av2Cell3.ValueAsString, "Feil i F5.(Dahlin)");
        }
        
        /// <summary>
        /// CheckEmpFromBaseplanSorting - Use 'CheckEmpFromBaseplanSortingExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEmpFromBaseplanSorting()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectPlanEmployeesVCustom.UIPcContentContainerClient.UIPcContentClient.UIGcPlanEmployeesTable.UIIbrahimovicZlatanCell;
            DXCell uILarssonHenrikCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectPlanEmployeesVCustom.UIPcContentContainerClient.UIPcContentClient.UIGcPlanEmployeesTable.UILarssonHenrikCell;
            DXCell uIMildHåkanCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectPlanEmployeesVCustom.UIPcContentContainerClient.UIPcContentClient.UIGcPlanEmployeesTable.UIMildHåkanCell;
            DXCell uIVAKANTCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectPlanEmployeesVCustom.UIPcContentContainerClient.UIPcContentClient.UIGcPlanEmployeesTable.UIVAKANTCell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Ibrahimovic, Zlatan' cell equals 'Ibrahimovic, Zlatan'
            Assert.AreEqual(this.CheckEmpFromBaseplanSortingExpectedValues.UIIbrahimovicZlatanCellValueAsString, uIIbrahimovicZlatanCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Larsson, Henrik' cell equals 'Larsson, Henrik'
            Assert.AreEqual(this.CheckEmpFromBaseplanSortingExpectedValues.UILarssonHenrikCellValueAsString, uILarssonHenrikCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Mild, Håkan' cell equals 'Mild, Håkan'
            Assert.AreEqual(this.CheckEmpFromBaseplanSortingExpectedValues.UIMildHåkanCellValueAsString, uIMildHåkanCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'VAKANT' cell equals 'VAKANT'
            Assert.AreEqual(this.CheckEmpFromBaseplanSortingExpectedValues.UIVAKANTCellValueAsString, uIVAKANTCell.ValueAsString);
        }
        
        /// <summary>
        /// CheckIbrahimovicCalculationsStep19 - Use 'CheckIbrahimovicCalculationsStep19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckIbrahimovicCalculationsStep19()
        {
            #region Variable Declarations
            DXCell uIACell2 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell2;
            DXCell uIItem3av9Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av9Cell;
            DXCell uIItem2224Cell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2224Cell1;
            DXCell uIItem2965Cell2 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem2965Cell2;
            DXCell uIItem0av0Cell3 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell3;
            DXCell uIItemCell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell;
            #endregion
            
            // Verify that the 'ValueAsString' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep19ExpectedValues.UIACell2ValueAsString, uIACell2.ValueAsString, "Feil i f3b. Kolonna(Ibrahimovic)");

            // Verify that the 'ValueAsString' property of  cell equals '6 av 9'
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep19ExpectedValues.UIItem3av9CellValueAsString, uIItem3av9Cell.ValueAsString, "Feil i SH Kolonna(Ibrahimovic)");

            // Verify that the 'ValueAsString' property of '22,24' cell equals '22,24'
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep19ExpectedValues.UIItem2224Cell1ValueAsString, uIItem2224Cell1.ValueAsString, "Feil i A Kolonna(Ibrahimovic)");

            // Verify that the 'ValueAsString' property of '29,65' cell equals '29,65'
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep19ExpectedValues.UIItem2965Cell2ValueAsString, uIItem2965Cell2.ValueAsString, "Feil i B Kolonna(Ibrahimovic)");

            // Verify that the 'ValueAsString' property of cell equals '0 av 2'
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep19ExpectedValues.UIItem0av0Cell3ValueAsString, uIItem0av0Cell3.ValueAsString, "Feil i F3 Kolonna(Ibrahimovic)");

            // Verify that the 'ValueAsString' property of cell equals ''
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep19ExpectedValues.UIItemCellValueAsString, uIItemCell.ValueAsString, "Feil i F5 Kolonna(Ibrahimovic)");
        }
        
        /// <summary>
        /// CheckLarsonF3 - Use 'CheckLarsonF3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckLarsonF3()
        {
            #region Variable Declarations
            DXCell uIItem0av2Cell4 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell4;
            #endregion

            // Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 3'
            Assert.AreEqual(this.CheckLarsonF3ExpectedValues.UIItem0av2Cell4ValueAsString, uIItem0av2Cell4.ValueAsString, "Feil i F3 kolonna(Larsson)");
        }
        
        /// <summary>
        /// CheckLarssonCalculationsStep19 - Use 'CheckLarssonCalculationsStep19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckLarssonCalculationsStep19()
        {
            #region Variable Declarations
            DXCell uIGCell5 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell5;
            DXCell uIItem6av9Cell3 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6av9Cell3;
            DXCell uIItem966Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem966Cell;
            DXCell uIItem1288Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1288Cell;
            DXCell uIItem0av2Cell4 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell4;
            DXCell uIItem0av0Cell10 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell10;
            #endregion

            // Verify that the 'ValueAsString' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckLarssonCalculationsStep19ExpectedValues.UIGCell5ValueAsString, uIGCell5.ValueAsString, "Feil i f3b. Kolonna(Larsson)");

            // Verify that the 'ValueAsString' property of '6 av 9' cell equals '6 av 9'
            Assert.AreEqual(this.CheckLarssonCalculationsStep19ExpectedValues.UIItem6av9Cell3ValueAsString, uIItem6av9Cell3.ValueAsString, "Feil i SH Kolonna(Larsson)");

            // Verify that the 'ValueAsString' property of '9,66' cell equals '12,16'
            Assert.AreEqual(this.CheckLarssonCalculationsStep19ExpectedValues.UIItem966CellValueAsString, uIItem966Cell.ValueAsString, "Feil i A Kolonna(Larsson)");

            // Verify that the 'ValueAsString' property of '12,88' cell equals '16,21'
            Assert.AreEqual(this.CheckLarssonCalculationsStep19ExpectedValues.UIItem1288CellValueAsString, uIItem1288Cell.ValueAsString, "Feil i B Kolonna(Larsson)");

            // Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 2'
            Assert.AreEqual(this.CheckLarssonCalculationsStep19ExpectedValues.UIItem0av2Cell4ValueAsString, uIItem0av2Cell4.ValueAsString, "Feil i F3 Kolonna(Larsson)");

            // Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 1'
            Assert.AreEqual(this.CheckLarssonCalculationsStep19ExpectedValues.UIItem0av0Cell10ValueAsString, uIItem0av0Cell10.ValueAsString, "Feil i F5 Kolonna(Larsson)");
        }
        
        /// <summary>
        /// CheckMildCalculationsStep19 - Use 'CheckMildCalculationsStep19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMildCalculationsStep19()
        {
            #region Variable Declarations
            DXCell uIGCell6 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell6;
            DXCell uIItem6av9Cell2 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6av9Cell2;
            DXCell uIItem966Cell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem966Cell1;
            DXCell uIItem1621Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1621Cell;
            DXCell uIItem0av0Cell9 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell9;
            DXCell uIItem0av1Cell2 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av1Cell2;
            #endregion
            
            // Verify that the 'ValueAsString' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckMildCalculationsStep19ExpectedValues.UIGCell6ValueAsString, uIGCell6.ValueAsString, "Feil i f3b. Kolonna(Mild)");

            // Verify that the 'ValueAsString' property of cell equals '6 av 7'
            Assert.AreEqual(this.CheckMildCalculationsStep19ExpectedValues.UIItem6av9Cell2ValueAsString, uIItem6av9Cell2.ValueAsString, "Feil i SH Kolonna(Mild)");

            // Verify that the 'ValueAsString' property of '9,66' cell equals '9,66'
            Assert.AreEqual(this.CheckMildCalculationsStep19ExpectedValues.UIItem966Cell1ValueAsString, uIItem966Cell1.ValueAsString, "Feil i A Kolonna(Mild)");

            // Verify that the 'ValueAsString' property of '16,21' cell equals '12,88'
            Assert.AreEqual(this.CheckMildCalculationsStep19ExpectedValues.UIItem1621CellValueAsString, uIItem1621Cell.ValueAsString, "Feil i B Kolonna(Mild)");

            // Verify that the 'ValueAsString' property of cell equals '0 av 3'
            Assert.AreEqual(this.CheckMildCalculationsStep19ExpectedValues.UIItem0av0Cell9ValueAsString, uIItem0av0Cell9.ValueAsString, "Feil i F3 Kolonna(Mild)");

            // Verify that the 'ValueAsString' property of cell equals '0 av 0'
            Assert.AreEqual(this.CheckMildCalculationsStep19ExpectedValues.UIItem0av1Cell2ValueAsString, uIItem0av1Cell2.ValueAsString, "Feil i F5. Kolonna(Mild)");
        }
        
        /// <summary>
        /// CheckVakantCalculationsStep19 - Use 'CheckVakantCalculationsStep19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckVakantCalculationsStep19()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell1;
            DXCell uIItem8av9Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem8av9Cell;
            DXCell uIItem1066Cell1 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1066Cell1;
            DXCell uIItem1421Cell = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem1421Cell;
            DXCell uIItem0av0Cell12 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell12;
            DXCell uIItem0av0Cell8 = this.UIArbeidsplanHjelpeplaWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell8;
            #endregion
            
            // Verify that the 'ValueAsString' property of '-' cell equals 'I'
            Assert.AreEqual(this.CheckVakantCalculationsStep19ExpectedValues.UIItemCell1ValueAsString, uIItemCell1.ValueAsString, "Feil i f3b. Kolonna(Vakant)");

            // Verify that the 'ValueAsString' property of '8 av 9' cell equals '8 av 9'
            Assert.AreEqual(this.CheckVakantCalculationsStep19ExpectedValues.UIItem8av9CellValueAsString, uIItem8av9Cell.ValueAsString, "Feil i SH Kolonna(Vakant)");

            // Verify that the 'ValueAsString' property of '10,66' cell equals '10,66'
            Assert.AreEqual(this.CheckVakantCalculationsStep19ExpectedValues.UIItem1066Cell1ValueAsString, uIItem1066Cell1.ValueAsString, "Feil i A Kolonna(Vakant)");

            // Verify that the 'ValueAsString' property of '14,21' cell equals '14,21'
            Assert.AreEqual(this.CheckVakantCalculationsStep19ExpectedValues.UIItem1421CellValueAsString, uIItem1421Cell.ValueAsString, "Feil i B Kolonna(Vakant)");

            // Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckVakantCalculationsStep19ExpectedValues.UIItem0av0Cell12ValueAsString, uIItem0av0Cell12.ValueAsString, "Feil i F3 Kolonna(Vakant)");

            // Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckVakantCalculationsStep19ExpectedValues.UIItem0av0Cell8ValueAsString, uIItem0av0Cell8.ValueAsString, "Feil i F5 Kolonna(Vakant)");
        }
        
        /// <summary>
        /// ClickReverseSorting
        /// </summary>
        public void ClickReverseSorting()
        {
            #region Variable Declarations
            DXColumnHeader uIColEmployeeColumnHeader = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectPlanEmployeesVCustom.UIPcContentContainerClient.UIPcContentClient.UIGcPlanEmployeesTable.UIColEmployeeColumnHeader;
            #endregion

            // Click 'colEmployee' column header
            Mouse.Click(uIColEmployeeColumnHeader, new Point(53, 8));
        }
        
        /// <summary>
        /// InsertIbrahimovicshifts - Use 'InsertIbrahimovicshiftsParams' to pass parameters into this method.
        /// </summary>
        public void InsertIbrahimovicshifts()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell;
            DXTextEdit uIRow4ColumnRosterCellEdit = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow4ColumnRosterCellEdit;
            DXCell uIItemCell1 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell1;
            DXTextEdit uIRow4ColumnRosterCellEdit1 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow4ColumnRosterCellEdit1;
            DXCell uIItemCell2 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell2;
            DXTextEdit uIRow4ColumnRosterCellEdit2 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow4ColumnRosterCellEdit2;
            DXCell uIItemCell3 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell3;
            DXTextEdit uIRow4ColumnRosterCellEdit3 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow4ColumnRosterCellEdit3;
            DXCell uIItemCell4 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell4;
            DXTextEdit uIRow4ColumnRosterCellEdit4 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow4ColumnRosterCellEdit4;
            DXCell uIItemCell5 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell5;
            DXTextEdit uIRow4ColumnRosterCellEdit5 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow4ColumnRosterCellEdit5;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(16, 9));

            // Click cell
            Mouse.Click(uIItemCell, new Point(16, 9));

            // Type 'd{Tab}' in '[Row]4[Column]RosterCell_5' text box
            Keyboard.SendKeys(uIRow4ColumnRosterCellEdit, this.InsertIbrahimovicshiftsParams.UIRow4ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell1, new Point(20, 10));

            // Click cell
            Mouse.Click(uIItemCell1, new Point(20, 10));

            // Type 'n5{Tab}' in '[Row]4[Column]RosterCell_18' text box
            Keyboard.SendKeys(uIRow4ColumnRosterCellEdit1, this.InsertIbrahimovicshiftsParams.UIRow4ColumnRosterCellEdit1SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell2, new Point(20, 7));

            // Click cell
            Mouse.Click(uIItemCell2, new Point(20, 7));

            // Type 'n5{Tab}' in '[Row]4[Column]RosterCell_22' text box
            Keyboard.SendKeys(uIRow4ColumnRosterCellEdit2, this.InsertIbrahimovicshiftsParams.UIRow4ColumnRosterCellEdit2SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell3, new Point(17, 6));

            // Click cell
            Mouse.Click(uIItemCell3, new Point(17, 9));

            // Type 'a{Tab}' in '[Row]4[Column]RosterCell_26' text box
            Keyboard.SendKeys(uIRow4ColumnRosterCellEdit3, this.InsertIbrahimovicshiftsParams.UIRow4ColumnRosterCellEdit3SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell4, new Point(18, 8));

            // Click cell
            Mouse.Click(uIItemCell4, new Point(18, 8));

            // Type 'n5{Tab}' in '[Row]4[Column]RosterCell_29' text box
            Keyboard.SendKeys(uIRow4ColumnRosterCellEdit4, this.InsertIbrahimovicshiftsParams.UIRow4ColumnRosterCellEdit4SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell5, new Point(18, 7));

            // Click cell
            Mouse.Click(uIItemCell5, new Point(18, 7));

            // Type 'd{Tab}' in '[Row]4[Column]RosterCell_34' text box
            Keyboard.SendKeys(uIRow4ColumnRosterCellEdit5, this.InsertIbrahimovicshiftsParams.UIRow4ColumnRosterCellEdit5SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// InsertLarssonshifts - Use 'InsertLarssonshiftsParams' to pass parameters into this method.
        /// </summary>
        public void InsertLarssonshifts()
        {
            #region Variable Declarations
            DXCell uIItemCell6 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell6;
            DXTextEdit uIRow5ColumnRosterCellEdit = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit;
            DXCell uIItemCell11 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell11;
            DXTextEdit uIRow5ColumnRosterCellEdit1 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit1;
            DXCell uIItemCell21 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell21;
            DXTextEdit uIRow5ColumnRosterCellEdit2 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit2;
            DXCell uIItemCell31 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell31;
            DXTextEdit uIRow5ColumnRosterCellEdit3 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit3;
            DXCell uIItemCell41 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell41;
            DXTextEdit uIRow5ColumnRosterCellEdit4 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit4;
            DXCell uIItemCell51 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell51;
            DXTextEdit uIRow5ColumnRosterCellEdit5 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit5;
            DXCell uIItemCell61 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell61;
            DXTextEdit uIRow5ColumnRosterCellEdit6 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit6;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell6, new Point(14, 13));

            // Click cell
            Mouse.Click(uIItemCell6, new Point(14, 10));

            // Type 'f1' in '[Row]5[Column]RosterCell_5' text box
            // Type '{Tab}' in '[Row]5[Column]RosterCell_5' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEditValueAsString + this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell11, new Point(13, 7));

            // Type 'd{Tab}' in '[Row]5[Column]RosterCell_6' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit1, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEdit1SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell21, new Point(18, 10));

            // Click cell
            Mouse.Click(uIItemCell21, new Point(18, 10));

            // Type 'n5{Tab}' in '[Row]5[Column]RosterCell_14' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit2, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEdit2SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell31, new Point(12, 10));

            // Click cell
            Mouse.Click(uIItemCell31, new Point(13, 10));

            // Type 'n5{Tab}' in '[Row]5[Column]RosterCell_18' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit3, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEdit3SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell41, new Point(14, 8));

            // Click cell
            Mouse.Click(uIItemCell41, new Point(14, 8));

            // Type 'd{Tab}' in '[Row]5[Column]RosterCell_20' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit4, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEdit4SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell51, new Point(19, 6));

            // Click cell
            Mouse.Click(uIItemCell51, new Point(19, 6));

            // Type 'n5{Tab}' in '[Row]5[Column]RosterCell_22' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit5, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEdit5SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell61, new Point(19, 7));

            // Click cell
            Mouse.Click(uIItemCell61, new Point(19, 7));

            // Type 'a{Tab}' in '[Row]5[Column]RosterCell_26' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit6, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEdit6SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// InsertMildVakantshifts - Use 'InsertMildVakantshiftsParams' to pass parameters into this method.
        /// </summary>
        public void InsertMildVakantshifts()
        {
            #region Variable Declarations
            DXCell uIItemCell7 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell7;
            DXTextEdit uIRow6ColumnRosterCellEdit = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit;
            DXCell uIItemCell12 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell12;
            DXTextEdit uIRow7ColumnRosterCellEdit = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit;
            DXCell uIItemCell22 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell22;
            DXTextEdit uIRow6ColumnRosterCellEdit1 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit1;
            DXCell uIItemCell32 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell32;
            DXTextEdit uIRow7ColumnRosterCellEdit1 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit1;
            DXCell uIItemCell42 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell42;
            DXTextEdit uIRow6ColumnRosterCellEdit2 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit2;
            DXCell uIItemCell52 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell52;
            DXTextEdit uIRow7ColumnRosterCellEdit2 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit2;
            DXCell uIItemCell62 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell62;
            DXTextEdit uIRow6ColumnRosterCellEdit3 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit3;
            DXCell uIItemCell71 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell71;
            DXTextEdit uIRow7ColumnRosterCellEdit3 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit3;
            DXCell uIItemCell8 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell8;
            DXTextEdit uIRow6ColumnRosterCellEdit4 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit4;
            DXCell uIItemCell9 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell9;
            DXTextEdit uIRow7ColumnRosterCellEdit4 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit4;
            DXCell uIItemCell10 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell10;
            DXTextEdit uIRow6ColumnRosterCellEdit5 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit5;
            DXCell uIItemCell111 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell111;
            DXTextEdit uIRow7ColumnRosterCellEdit5 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit5;
            DXCell uIItemCell121 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell121;
            DXTextEdit uIRow6ColumnRosterCellEdit6 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit6;
            DXCell uIItemCell13 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell13;
            DXTextEdit uIRow7ColumnRosterCellEdit6 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit6;
            DXCell uIItemCell14 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell14;
            DXTextEdit uIRow6ColumnRosterCellEdit7 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit7;
            DXCell uIItemCell15 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell15;
            DXTextEdit uIRow6ColumnRosterCellEdit8 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit8;
            DXCell uIItemCell16 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell16;
            DXTextEdit uIRow7ColumnRosterCellEdit7 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit7;
            DXCell uIItemCell17 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell17;
            DXTextEdit uIRow7ColumnRosterCellEdit8 = this.UIArbeidsplanBEREGNINGWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow7ColumnRosterCellEdit8;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell7, new Point(15, 9));

            // Click cell
            Mouse.Click(uIItemCell7, new Point(15, 9));
            
            // Type '{Tab}' in '[Row]6[Column]RosterCell_4' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit, this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEditValueAsString + this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell12, new Point(13, 8));

            // Click cell
            Mouse.Click(uIItemCell12, new Point(13, 8));
            
            // Type '{Tab}' in '[Row]7[Column]RosterCell_4' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit,this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEditValueAsString + this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell22, new Point(18, 12));

            // Click cell
            Mouse.Click(uIItemCell22, new Point(18, 12));
            
            // Type '{Tab}' in '[Row]6[Column]RosterCell_6' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit1,this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit1ValueAsString + this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit1SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell32, new Point(16, 16));

            // Click cell
            Mouse.Click(uIItemCell32, new Point(16, 12));
            
            // Type '{Tab}' in '[Row]7[Column]RosterCell_6' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit1,this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit1ValueAsString + this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit1SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell42, new Point(20, 8));

            // Click cell
            Mouse.Click(uIItemCell42, new Point(20, 8));

            // Type 'a' in '[Row]6[Column]RosterCell_12' text box
            // Type '{Tab}' in '[Row]6[Column]RosterCell_12' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit2,this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit2ValueAsString + this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit2SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell52, new Point(15, 7));

            // Click cell
            Mouse.Click(uIItemCell52, new Point(15, 7));

            // Type 'a' in '[Row]7[Column]RosterCell_12' text box
            // Type '{Tab}' in '[Row]7[Column]RosterCell_12' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit2, this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit2ValueAsString + this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit2SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell62, new Point(17, 12));

            // Click cell
            Mouse.Click(uIItemCell62, new Point(17, 12));

            // Type 'kk1' in '[Row]6[Column]RosterCell_16' text box
            // Type '{Tab}' in '[Row]6[Column]RosterCell_16' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit3, this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit3ValueAsString + this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit3SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell71, new Point(13, 8));

            // Click cell
            Mouse.Click(uIItemCell71, new Point(13, 8));

            // Type 'kk1' in '[Row]7[Column]RosterCell_16' text box
            // Type '{Tab}' in '[Row]7[Column]RosterCell_16' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit3, this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit3ValueAsString + this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit3SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell8, new Point(12, 11));

            // Click cell
            Mouse.Click(uIItemCell8, new Point(12, 11));

            // Type 'kk2' in '[Row]6[Column]RosterCell_22' text box
            // Type '{Tab}' in '[Row]6[Column]RosterCell_22' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit4, this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit4ValueAsString + this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit4SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell9, new Point(13, 11));

            // Click cell
            Mouse.Click(uIItemCell9, new Point(13, 11));

            // Type 'kk2' in '[Row]7[Column]RosterCell_22' text box
            // Type '{Tab}' in '[Row]7[Column]RosterCell_22' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit4, this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit4ValueAsString + this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit4SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell10, new Point(20, 10));

            // Click cell
            Mouse.Click(uIItemCell10, new Point(20, 10));

            // Type 'a' in '[Row]6[Column]RosterCell_26' text box
            // Type '{Tab}' in '[Row]6[Column]RosterCell_26' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit5, this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit5ValueAsString + this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit5SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell111, new Point(15, 9));

            // Click cell
            Mouse.Click(uIItemCell111, new Point(15, 9));

            // Type 'a{Tab}' in '[Row]7[Column]RosterCell_26' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit5, this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit5SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell121, new Point(16, 8));

            // Click cell
            Mouse.Click(uIItemCell121, new Point(16, 8));

            // Type 'kk2' in '[Row]6[Column]RosterCell_29' text box
            // Type '{Tab}' in '[Row]6[Column]RosterCell_29' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit6, this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit6ValueAsString + this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit6SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell13, new Point(16, 9));

            // Click cell
            Mouse.Click(uIItemCell13, new Point(16, 9));

            // Type 'kk2' in '[Row]7[Column]RosterCell_29' text box
            // Type '{Tab}' in '[Row]7[Column]RosterCell_29' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit6, this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit6ValueAsString + this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit6SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell14, new Point(14, 9));

            // Click cell
            Mouse.Click(uIItemCell14, new Point(14, 9));

            // Type 'a{Tab}' in '[Row]6[Column]RosterCell_33' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit7, this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit7SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell15, new Point(17, 10));

            // Type 'd' in '[Row]6[Column]RosterCell_34' text box
            // Type '{Tab}' in '[Row]6[Column]RosterCell_34' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit8, this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit8ValueAsString + this.InsertMildVakantshiftsParams.UIRow6ColumnRosterCellEdit8SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell16, new Point(16, 9));

            // Click cell
            Mouse.Click(uIItemCell16, new Point(16, 9));

            // Type 'a' in '[Row]7[Column]RosterCell_33' text box
            // Type '{Tab}' in '[Row]7[Column]RosterCell_33' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit7, this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit7ValueAsString + this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit7SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell17, new Point(9, 8));

            // Type 'd' in '[Row]7[Column]RosterCell_34' text box
            // Type '{Tab}' in '[Row]7[Column]RosterCell_34' text box
            Keyboard.SendKeys(uIRow7ColumnRosterCellEdit8, this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit8ValueAsString + this.InsertMildVakantshiftsParams.UIRow7ColumnRosterCellEdit8SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// SelectIbrahimovi_Larsson_Mild
        /// </summary>
        public void SelectIbrahimovi_Larsson_Mild()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UIIbrahimovicZlatanCell;
            DXCell uILarssonHenrikCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UILarssonHenrikCell;
            DXCell uIMildHåkanCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UIMildHåkanCell;
            #endregion

            // Click 'Ibrahimovic, Zlatan' cell
            Mouse.Click(uIIbrahimovicZlatanCell, new Point(41, 6));

            // Click 'Larsson, Henrik' cell while pressing Control
            Mouse.Click(uILarssonHenrikCell, MouseButtons.Left, ModifierKeys.Control, new Point(40, 8));

            // Click 'Mild, Håkan' cell while pressing Control
            Mouse.Click(uIMildHåkanCell, MouseButtons.Left, ModifierKeys.Control, new Point(31, 9));
        }
        
        /// <summary>
        /// SelectMildInList
        /// </summary>
        public void SelectMildInList()
        {
            #region Variable Declarations
            DXTreeListCell uIItem175TreeListCell = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeesTreeList.UINode5TreeListNode.UINode0TreeListNode.UIItem175TreeListCell;
            #endregion

            // Click '1. 75%' TreeListCell
            Mouse.Click(uIItem175TreeListCell, new Point(23, 7));
        }
        
        /// <summary>
        /// SetEmployeeF3Calculations - Use 'SetEmployeeF3CalculationsParams' to pass parameters into this method.
        /// </summary>
        public void SetEmployeeF3Calculations()
        {
            #region Variable Declarations
            DXCell uIAnderssonKennethCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIAnderssonKennethCell;
            DXGrid uIGsGridControlTable = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable;
            DXButton uIGjennomsnittsberegniButton = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem4LayoutControlItem.UIPnlRuleButtonsClient.UIGjennomsnittsberegniButton;
            #endregion

            // Click 'Andersson, Kenneth' cell
            Mouse.Click(uIAnderssonKennethCell, new Point(65, 10));

            // Type 'Control + a' in 'gsGridControl' table
            Keyboard.SendKeys(uIGsGridControlTable, this.SetEmployeeF3CalculationsParams.UIGsGridControlTableSendKeys, ModifierKeys.Control);

            // Click 'Gjennomsnittsberegning av F3' button
            Mouse.Click(uIGjennomsnittsberegniButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SetEmployeeF3CalculationsStep4
        /// </summary>
        public void SetEmployeeF3CalculationsStep4()
        {
            #region Variable Declarations
            var table = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable;
            DXButton uIGjennomsnittsberegniButton = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem4LayoutControlItem.UIPnlRuleButtonsClient.UIGjennomsnittsberegniButton;
           #endregion
            
            Keyboard.SendKeys(table, "a", ModifierKeys.Control);
            Playback.Wait(2000);
            
            // Click 'Gjennomsnittsberegning av F3' button
            Mouse.Click(uIGjennomsnittsberegniButton, new Point(1, 1));
        }
        
        #region Properties
        public virtual AddVakantToPlanParams AddVakantToPlanParams
        {
            get
            {
                if ((this.mAddVakantToPlanParams == null))
                {
                    this.mAddVakantToPlanParams = new AddVakantToPlanParams();
                }
                return this.mAddVakantToPlanParams;
            }
        }
        
        public virtual ChangeBrolinCalculationTypeParams ChangeBrolinCalculationTypeParams
        {
            get
            {
                if ((this.mChangeBrolinCalculationTypeParams == null))
                {
                    this.mChangeBrolinCalculationTypeParams = new ChangeBrolinCalculationTypeParams();
                }
                return this.mChangeBrolinCalculationTypeParams;
            }
        }
        
        public virtual ChangeIbrahimovicCalculationTypeParams ChangeIbrahimovicCalculationTypeParams
        {
            get
            {
                if ((this.mChangeIbrahimovicCalculationTypeParams == null))
                {
                    this.mChangeIbrahimovicCalculationTypeParams = new ChangeIbrahimovicCalculationTypeParams();
                }
                return this.mChangeIbrahimovicCalculationTypeParams;
            }
        }
        
        public virtual CheckAnderssonStep4ExpectedValues CheckAnderssonStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckAnderssonStep4ExpectedValues == null))
                {
                    this.mCheckAnderssonStep4ExpectedValues = new CheckAnderssonStep4ExpectedValues();
                }
                return this.mCheckAnderssonStep4ExpectedValues;
            }
        }
        
        public virtual CheckAnderssonStep8ExpectedValues CheckAnderssonStep8ExpectedValues
        {
            get
            {
                if ((this.mCheckAnderssonStep8ExpectedValues == null))
                {
                    this.mCheckAnderssonStep8ExpectedValues = new CheckAnderssonStep8ExpectedValues();
                }
                return this.mCheckAnderssonStep8ExpectedValues;
            }
        }
        
        public virtual CheckBrolinStep4ExpectedValues CheckBrolinStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckBrolinStep4ExpectedValues == null))
                {
                    this.mCheckBrolinStep4ExpectedValues = new CheckBrolinStep4ExpectedValues();
                }
                return this.mCheckBrolinStep4ExpectedValues;
            }
        }
        
        public virtual CheckBrolinStep8ExpectedValues CheckBrolinStep8ExpectedValues
        {
            get
            {
                if ((this.mCheckBrolinStep8ExpectedValues == null))
                {
                    this.mCheckBrolinStep8ExpectedValues = new CheckBrolinStep8ExpectedValues();
                }
                return this.mCheckBrolinStep8ExpectedValues;
            }
        }
        
        public virtual CheckBrolinStep9ExpectedValues CheckBrolinStep9ExpectedValues
        {
            get
            {
                if ((this.mCheckBrolinStep9ExpectedValues == null))
                {
                    this.mCheckBrolinStep9ExpectedValues = new CheckBrolinStep9ExpectedValues();
                }
                return this.mCheckBrolinStep9ExpectedValues;
            }
        }
        
        public virtual CheckDahlinStep4ExpectedValues CheckDahlinStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckDahlinStep4ExpectedValues == null))
                {
                    this.mCheckDahlinStep4ExpectedValues = new CheckDahlinStep4ExpectedValues();
                }
                return this.mCheckDahlinStep4ExpectedValues;
            }
        }
        
        public virtual CheckDahlinStep8ExpectedValues CheckDahlinStep8ExpectedValues
        {
            get
            {
                if ((this.mCheckDahlinStep8ExpectedValues == null))
                {
                    this.mCheckDahlinStep8ExpectedValues = new CheckDahlinStep8ExpectedValues();
                }
                return this.mCheckDahlinStep8ExpectedValues;
            }
        }
        
        public virtual CheckEmpFromBaseplanSortingExpectedValues CheckEmpFromBaseplanSortingExpectedValues
        {
            get
            {
                if ((this.mCheckEmpFromBaseplanSortingExpectedValues == null))
                {
                    this.mCheckEmpFromBaseplanSortingExpectedValues = new CheckEmpFromBaseplanSortingExpectedValues();
                }
                return this.mCheckEmpFromBaseplanSortingExpectedValues;
            }
        }
        
        public virtual CheckIbrahimovicCalculationsStep19ExpectedValues CheckIbrahimovicCalculationsStep19ExpectedValues
        {
            get
            {
                if ((this.mCheckIbrahimovicCalculationsStep19ExpectedValues == null))
                {
                    this.mCheckIbrahimovicCalculationsStep19ExpectedValues = new CheckIbrahimovicCalculationsStep19ExpectedValues();
                }
                return this.mCheckIbrahimovicCalculationsStep19ExpectedValues;
            }
        }
        
        public virtual CheckLarsonF3ExpectedValues CheckLarsonF3ExpectedValues
        {
            get
            {
                if ((this.mCheckLarsonF3ExpectedValues == null))
                {
                    this.mCheckLarsonF3ExpectedValues = new CheckLarsonF3ExpectedValues();
                }
                return this.mCheckLarsonF3ExpectedValues;
            }
        }
        
        public virtual CheckLarssonCalculationsStep19ExpectedValues CheckLarssonCalculationsStep19ExpectedValues
        {
            get
            {
                if ((this.mCheckLarssonCalculationsStep19ExpectedValues == null))
                {
                    this.mCheckLarssonCalculationsStep19ExpectedValues = new CheckLarssonCalculationsStep19ExpectedValues();
                }
                return this.mCheckLarssonCalculationsStep19ExpectedValues;
            }
        }
        
        public virtual CheckMildCalculationsStep19ExpectedValues CheckMildCalculationsStep19ExpectedValues
        {
            get
            {
                if ((this.mCheckMildCalculationsStep19ExpectedValues == null))
                {
                    this.mCheckMildCalculationsStep19ExpectedValues = new CheckMildCalculationsStep19ExpectedValues();
                }
                return this.mCheckMildCalculationsStep19ExpectedValues;
            }
        }
        
        public virtual CheckVakantCalculationsStep19ExpectedValues CheckVakantCalculationsStep19ExpectedValues
        {
            get
            {
                if ((this.mCheckVakantCalculationsStep19ExpectedValues == null))
                {
                    this.mCheckVakantCalculationsStep19ExpectedValues = new CheckVakantCalculationsStep19ExpectedValues();
                }
                return this.mCheckVakantCalculationsStep19ExpectedValues;
            }
        }
        
        public virtual InsertIbrahimovicshiftsParams InsertIbrahimovicshiftsParams
        {
            get
            {
                if ((this.mInsertIbrahimovicshiftsParams == null))
                {
                    this.mInsertIbrahimovicshiftsParams = new InsertIbrahimovicshiftsParams();
                }
                return this.mInsertIbrahimovicshiftsParams;
            }
        }
        
        public virtual InsertLarssonshiftsParams InsertLarssonshiftsParams
        {
            get
            {
                if ((this.mInsertLarssonshiftsParams == null))
                {
                    this.mInsertLarssonshiftsParams = new InsertLarssonshiftsParams();
                }
                return this.mInsertLarssonshiftsParams;
            }
        }
        
        public virtual InsertMildVakantshiftsParams InsertMildVakantshiftsParams
        {
            get
            {
                if ((this.mInsertMildVakantshiftsParams == null))
                {
                    this.mInsertMildVakantshiftsParams = new InsertMildVakantshiftsParams();
                }
                return this.mInsertMildVakantshiftsParams;
            }
        }
        
        public virtual SetEmployeeF3CalculationsParams SetEmployeeF3CalculationsParams
        {
            get
            {
                if ((this.mSetEmployeeF3CalculationsParams == null))
                {
                    this.mSetEmployeeF3CalculationsParams = new SetEmployeeF3CalculationsParams();
                }
                return this.mSetEmployeeF3CalculationsParams;
            }
        }
        
        public UINyhjelpeplanWindow UINyhjelpeplanWindow
        {
            get
            {
                if ((this.mUINyhjelpeplanWindow == null))
                {
                    this.mUINyhjelpeplanWindow = new UINyhjelpeplanWindow();
                }
                return this.mUINyhjelpeplanWindow;
            }
        }
        
        public UIArbeidsplanHjelpeplaWindow UIArbeidsplanHjelpeplaWindow
        {
            get
            {
                if ((this.mUIArbeidsplanHjelpeplaWindow == null))
                {
                    this.mUIArbeidsplanHjelpeplaWindow = new UIArbeidsplanHjelpeplaWindow();
                }
                return this.mUIArbeidsplanHjelpeplaWindow;
            }
        }
        
        public UIAnsatteiarbeidsplanWindow UIAnsatteiarbeidsplanWindow
        {
            get
            {
                if ((this.mUIAnsatteiarbeidsplanWindow == null))
                {
                    this.mUIAnsatteiarbeidsplanWindow = new UIAnsatteiarbeidsplanWindow();
                }
                return this.mUIAnsatteiarbeidsplanWindow;
            }
        }
        
        public UILeggtilansatteWindow UILeggtilansatteWindow
        {
            get
            {
                if ((this.mUILeggtilansatteWindow == null))
                {
                    this.mUILeggtilansatteWindow = new UILeggtilansatteWindow();
                }
                return this.mUILeggtilansatteWindow;
            }
        }
        
        public UIArbeidsplanBEREGNINGWindow UIArbeidsplanBEREGNINGWindow
        {
            get
            {
                if ((this.mUIArbeidsplanBEREGNINGWindow == null))
                {
                    this.mUIArbeidsplanBEREGNINGWindow = new UIArbeidsplanBEREGNINGWindow();
                }
                return this.mUIArbeidsplanBEREGNINGWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddVakantToPlanParams mAddVakantToPlanParams;
        
        private ChangeBrolinCalculationTypeParams mChangeBrolinCalculationTypeParams;
        
        private ChangeIbrahimovicCalculationTypeParams mChangeIbrahimovicCalculationTypeParams;
        
        private CheckAnderssonStep4ExpectedValues mCheckAnderssonStep4ExpectedValues;
        
        private CheckAnderssonStep8ExpectedValues mCheckAnderssonStep8ExpectedValues;
        
        private CheckBrolinStep4ExpectedValues mCheckBrolinStep4ExpectedValues;
        
        private CheckBrolinStep8ExpectedValues mCheckBrolinStep8ExpectedValues;
        
        private CheckBrolinStep9ExpectedValues mCheckBrolinStep9ExpectedValues;
        
        private CheckDahlinStep4ExpectedValues mCheckDahlinStep4ExpectedValues;
        
        private CheckDahlinStep8ExpectedValues mCheckDahlinStep8ExpectedValues;
        
        private CheckEmpFromBaseplanSortingExpectedValues mCheckEmpFromBaseplanSortingExpectedValues;
        
        private CheckIbrahimovicCalculationsStep19ExpectedValues mCheckIbrahimovicCalculationsStep19ExpectedValues;
        
        private CheckLarsonF3ExpectedValues mCheckLarsonF3ExpectedValues;
        
        private CheckLarssonCalculationsStep19ExpectedValues mCheckLarssonCalculationsStep19ExpectedValues;
        
        private CheckMildCalculationsStep19ExpectedValues mCheckMildCalculationsStep19ExpectedValues;
        
        private CheckVakantCalculationsStep19ExpectedValues mCheckVakantCalculationsStep19ExpectedValues;
        
        private InsertIbrahimovicshiftsParams mInsertIbrahimovicshiftsParams;
        
        private InsertLarssonshiftsParams mInsertLarssonshiftsParams;
        
        private InsertMildVakantshiftsParams mInsertMildVakantshiftsParams;
        
        private SetEmployeeF3CalculationsParams mSetEmployeeF3CalculationsParams;
        
        private UINyhjelpeplanWindow mUINyhjelpeplanWindow;
        
        private UIArbeidsplanHjelpeplaWindow mUIArbeidsplanHjelpeplaWindow;
        
        private UIAnsatteiarbeidsplanWindow mUIAnsatteiarbeidsplanWindow;
        
        private UILeggtilansatteWindow mUILeggtilansatteWindow;
        
        private UIArbeidsplanBEREGNINGWindow mUIArbeidsplanBEREGNINGWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddVakantToPlan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddVakantToPlanParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.PositionCategoryViewModel' in 'ePositionCategory' LookUpEdit
        /// </summary>
        public string UIEPositionCategoryLookUpEditValueTypeName = "Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.PositionCategoryViewMod" +
            "el";
        
        /// <summary>
        /// Type 'S - Sykepleier' in 'ePositionCategory' LookUpEdit
        /// </summary>
        public string UIEPositionCategoryLookUpEditValueAsString = "S - Sykepleier";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.RuleSetViewModel' in 'eRuleSet' LookUpEdit
        /// </summary>
        public string UIERuleSetLookUpEditValueTypeName = "Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.RuleSetViewModel";
        
        /// <summary>
        /// Type 'TURNUS - Turnus 35,5t/uke' in 'eRuleSet' LookUpEdit
        /// </summary>
        public string UIERuleSetLookUpEditValueAsString = "TURNUS - Turnus 35,5t/uke";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangeBrolinCalculationType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ChangeBrolinCalculationTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionViewModel' in 'lueF3CalculationOption' LookUpEdit
        /// </summary>
        public string UILueF3CalculationOptiLookUpEditValueTypeName = "Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionView" +
            "Model";
        
        /// <summary>
        /// Type 'Annenhver' in 'lueF3CalculationOption' LookUpEdit
        /// </summary>
        public string UILueF3CalculationOptiLookUpEditValueAsString = "Annenhver";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangeIbrahimovicCalculationType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ChangeIbrahimovicCalculationTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionViewModel' in 'lueF3CalculationOption' LookUpEdit
        /// </summary>
        public string UILueF3CalculationOptiLookUpEditValueTypeName = "Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionView" +
            "Model";
        
        /// <summary>
        /// Type 'Annenhver' in 'lueF3CalculationOption' LookUpEdit
        /// </summary>
        public string UILueF3CalculationOptiLookUpEditValueAsString = "Annenhver";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAnderssonStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAnderssonStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCellValueAsString = "G";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '7 av 7' cell equals '7 av 7'
        /// </summary>
        public string UIItem7av7CellValueAsString = "7 av 7";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 4' cell equals '0 av 4'
        /// </summary>
        public string UIItem0av4CellValueAsString = "0 av 4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0CellValueAsString = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAnderssonStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAnderssonStep8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACellValueAsString = "G";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '9 av 9'
        /// </summary>
        public string UIItem7av7CellValueAsString = "9 av 9";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '0 av 5'
        /// </summary>
        public string UIItem0av4CellValueAsString = "0 av 5";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell2ValueAsString = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBrolinStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBrolinStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell1ValueAsString = "G";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '3 av 7' cell equals '3 av 7'
        /// </summary>
        public string UIItem3av7CellValueAsString = "2 av 7";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell1ValueAsString = "0 av 0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 2'
        /// </summary>
        public string UIItem0av2CellValueAsString = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBrolinStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBrolinStep8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell1ValueAsString = "G";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '2 av 9'
        /// </summary>
        public string UIItem5av9CellValueAsString = "2 av 9";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '0 av 0'
        /// </summary>
        public string UIItem0av1Cell1ValueAsString = "0 av 0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '0 av 0'
        /// </summary>
        public string UIItem0av2CellValueAsString = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBrolinStep9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBrolinStep9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell1ValueAsString = "A";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '2 av 9'
        /// </summary>
        public string UIItem5av9CellValueAsString = "2 av 9";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '0 av 1'
        /// </summary>
        public string UIItem0av0Cell1ValueAsString = "0 av 1";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '0 av 0'
        /// </summary>
        public string UIItem0av2CellValueAsString = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDahlinStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckDahlinStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell2ValueAsString = "G";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '5 av 7' cell equals '5 av 7'
        /// </summary>
        public string UIItem5av7CellValueAsString = "5 av 7";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 2'
        /// </summary>
        public string UIItem0av2Cell1ValueAsString = "0 av 2";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 1' cell equals '0 av 1'
        /// </summary>
        public string UIItem0av1CellValueAsString = "0 av 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDahlinStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckDahlinStep8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell2ValueAsString = "G";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '6 av 9'
        /// </summary>
        public string UIItem6av9CellValueAsString = "6 av 9";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '0 av 2'
        /// </summary>
        public string UIItem0av2Cell2ValueAsString = "0 av 2";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '0 av 2'
        /// </summary>
        public string UIItem0av2Cell3ValueAsString = "0 av 2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEmpFromBaseplanSorting'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckEmpFromBaseplanSortingExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Ibrahimovic, Zlatan' cell equals 'Ibrahimovic, Zlatan'
        /// </summary>
        public string UIIbrahimovicZlatanCellValueAsString = "Ibrahimovic, Zlatan";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Larsson, Henrik' cell equals 'Larsson, Henrik'
        /// </summary>
        public string UILarssonHenrikCellValueAsString = "Larsson, Henrik";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Mild, Håkan' cell equals 'Mild, Håkan'
        /// </summary>
        public string UIMildHåkanCellValueAsString = "Mild, Håkan";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'VAKANT' cell equals 'VAKANT'
        /// </summary>
        public string UIVAKANTCellValueAsString = "VAKANT";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckIbrahimovicCalculationsStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckIbrahimovicCalculationsStep19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell2ValueAsString = "A";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals '6 av 9'
        /// </summary>
        public string UIItem3av9CellValueAsString = "6 av 9";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '22,24' cell equals '22,24'
        /// </summary>
        public string UIItem2224Cell1ValueAsString = "22,24";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '29,65' cell equals '29,65'
        /// </summary>
        public string UIItem2965Cell2ValueAsString = "29,65";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 2'
        /// </summary>
        public string UIItem0av0Cell3ValueAsString = "0 av 2";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals ''
        /// </summary>
        public string UIItemCellValueAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckLarsonF3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckLarsonF3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 3'
        /// </summary>
        public string UIItem0av2Cell4ValueAsString = "0 av 3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckLarssonCalculationsStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckLarssonCalculationsStep19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell5ValueAsString = "G";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '6 av 9' cell equals '6 av 9'
        /// </summary>
        public string UIItem6av9Cell3ValueAsString = "6 av 9";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '9,66' cell equals '12,16'
        /// </summary>
        public string UIItem966CellValueAsString = "12,16";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '12,88' cell equals '16,21'
        /// </summary>
        public string UIItem1288CellValueAsString = "16,21";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 2' cell equals '0 av 2'
        /// </summary>
        public string UIItem0av2Cell4ValueAsString = "0 av 2";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 1'
        /// </summary>
        public string UIItem0av0Cell10ValueAsString = "0 av 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMildCalculationsStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMildCalculationsStep19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell6ValueAsString = "G";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '6 av 7' cell equals '6 av 9'
        /// </summary>
        public string UIItem6av9Cell2ValueAsString = "6 av 7";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '9,66' cell equals '9,66'
        /// </summary>
        public string UIItem966Cell1ValueAsString = "9,66";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '16,21' cell equals '12,88'
        /// </summary>
        public string UIItem1621CellValueAsString = "12,88";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 2'
        /// </summary>
        public string UIItem0av0Cell9ValueAsString = "0 av 3";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 1' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av1Cell2ValueAsString = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckVakantCalculationsStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckVakantCalculationsStep19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of cell equals 'I'
        /// </summary>
        public string UIItemCell1ValueAsString = "I";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '8 av 9' cell equals '8 av 9'
        /// </summary>
        public string UIItem8av9CellValueAsString = "8 av 9";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '10,66' cell equals '10,66'
        /// </summary>
        public string UIItem1066Cell1ValueAsString = "10,66";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '14,21' cell equals '14,21'
        /// </summary>
        public string UIItem1421CellValueAsString = "14,21";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell12ValueAsString = "0 av 0";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell8ValueAsString = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertIbrahimovicshifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertIbrahimovicshiftsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'd{Tab}' in '[Row]4[Column]RosterCell_5' text box
        /// </summary>
        public string UIRow4ColumnRosterCellEditSendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]4[Column]RosterCell_18' text box
        /// </summary>
        public string UIRow4ColumnRosterCellEdit1SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]4[Column]RosterCell_22' text box
        /// </summary>
        public string UIRow4ColumnRosterCellEdit2SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'a{Tab}' in '[Row]4[Column]RosterCell_26' text box
        /// </summary>
        public string UIRow4ColumnRosterCellEdit3SendKeys = "a{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]4[Column]RosterCell_29' text box
        /// </summary>
        public string UIRow4ColumnRosterCellEdit4SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]4[Column]RosterCell_34' text box
        /// </summary>
        public string UIRow4ColumnRosterCellEdit5SendKeys = "d{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertLarssonshifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertLarssonshiftsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'f1' in '[Row]5[Column]RosterCell_5' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEditValueAsString = "f1";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]5[Column]RosterCell_5' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]5[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit1SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]5[Column]RosterCell_14' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit2SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]5[Column]RosterCell_18' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit3SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]5[Column]RosterCell_20' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit4SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]5[Column]RosterCell_22' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit5SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'a{Tab}' in '[Row]5[Column]RosterCell_26' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit6SendKeys = "a{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertMildVakantshifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class InsertMildVakantshiftsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'kk1' in '[Row]6[Column]RosterCell_4' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEditValueAsString = "kk1";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]6[Column]RosterCell_4' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'kk1' in '[Row]7[Column]RosterCell_4' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEditValueAsString = "kk1";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]7[Column]RosterCell_4' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'd' in '[Row]6[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit1ValueAsString = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]6[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit1SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'd' in '[Row]7[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit1ValueAsString = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]7[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit1SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'a' in '[Row]6[Column]RosterCell_12' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit2ValueAsString = "a";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]6[Column]RosterCell_12' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit2SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'a' in '[Row]7[Column]RosterCell_12' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit2ValueAsString = "a";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]7[Column]RosterCell_12' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit2SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'kk1' in '[Row]6[Column]RosterCell_16' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit3ValueAsString = "kk1";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]6[Column]RosterCell_16' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit3SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'kk1' in '[Row]7[Column]RosterCell_16' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit3ValueAsString = "kk1";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]7[Column]RosterCell_16' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit3SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'kk2' in '[Row]6[Column]RosterCell_22' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit4ValueAsString = "kk2";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]6[Column]RosterCell_22' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit4SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'kk2' in '[Row]7[Column]RosterCell_22' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit4ValueAsString = "kk2";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]7[Column]RosterCell_22' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit4SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'a' in '[Row]6[Column]RosterCell_26' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit5ValueAsString = "a";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]6[Column]RosterCell_26' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit5SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'a{Tab}' in '[Row]7[Column]RosterCell_26' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit5SendKeys = "a{Tab}";
        
        /// <summary>
        /// Type 'kk2' in '[Row]6[Column]RosterCell_29' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit6ValueAsString = "kk2";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]6[Column]RosterCell_29' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit6SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'kk2' in '[Row]7[Column]RosterCell_29' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit6ValueAsString = "kk2";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]7[Column]RosterCell_29' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit6SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'a{Tab}' in '[Row]6[Column]RosterCell_33' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit7SendKeys = "a{Tab}";
        
        /// <summary>
        /// Type 'd' in '[Row]6[Column]RosterCell_34' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit8ValueAsString = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]6[Column]RosterCell_34' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit8SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'a' in '[Row]7[Column]RosterCell_33' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit7ValueAsString = "a";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]7[Column]RosterCell_33' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit7SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'd' in '[Row]7[Column]RosterCell_34' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit8ValueAsString = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]7[Column]RosterCell_34' text box
        /// </summary>
        public string UIRow7ColumnRosterCellEdit8SendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetEmployeeF3Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetEmployeeF3CalculationsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + a' in 'gsGridControl' table
        /// </summary>
        public string UIGsGridControlTableSendKeys = "a";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINyhjelpeplanWindow : DXWindow
    {
        
        public UINyhjelpeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny hjelpeplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControlMainCustom : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNaLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNeLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        
        public UILayoutControlItem4LayoutControlItem UILayoutControlItem4LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem4LayoutControlItem == null))
                {
                    this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem(this);
                }
                return this.mUILayoutControlItem4LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
        
        private UILayoutControlItem4LayoutControlItem mUILayoutControlItem4LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlGridSumClient UIPnlGridSumClient
        {
            get
            {
                if ((this.mUIPnlGridSumClient == null))
                {
                    this.mUIPnlGridSumClient = new UIPnlGridSumClient(this);
                }
                return this.mUIPnlGridSumClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridSumClient mUIPnlGridSumClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlGridSumClient : DXTestControl
    {
        
        public UIPnlGridSumClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGridSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlTable UIGsGridControlTable
        {
            get
            {
                if ((this.mUIGsGridControlTable == null))
                {
                    this.mUIGsGridControlTable = new UIGsGridControlTable(this);
                }
                return this.mUIGsGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlTable mUIGsGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsGridControlTable : DXGrid
    {
        
        public UIGsGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIAnderssonKennethCell
        {
            get
            {
                if ((this.mUIAnderssonKennethCell == null))
                {
                    this.mUIAnderssonKennethCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAnderssonKennethCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]0[Column]clmName";
                    this.mUIAnderssonKennethCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAnderssonKennethCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIAnderssonKennethCell;
            }
        }
        
        public DXCell UIBrolinThomasCell
        {
            get
            {
                if ((this.mUIBrolinThomasCell == null))
                {
                    this.mUIBrolinThomasCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBrolinThomasCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]1[Column]clmName";
                    this.mUIBrolinThomasCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBrolinThomasCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIBrolinThomasCell;
            }
        }
        
        public DXCell UIDahlinMartinCell
        {
            get
            {
                if ((this.mUIDahlinMartinCell == null))
                {
                    this.mUIDahlinMartinCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDahlinMartinCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]2[Column]clmName";
                    this.mUIDahlinMartinCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDahlinMartinCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIDahlinMartinCell;
            }
        }
        
        public DXCell UIDahlinMartinCell1
        {
            get
            {
                if ((this.mUIDahlinMartinCell1 == null))
                {
                    this.mUIDahlinMartinCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDahlinMartinCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]3[Column]clmName";
                    this.mUIDahlinMartinCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDahlinMartinCell1.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIDahlinMartinCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAnderssonKennethCell;
        
        private DXCell mUIBrolinThomasCell;
        
        private DXCell mUIDahlinMartinCell;
        
        private DXCell mUIDahlinMartinCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem4LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem4LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRuleButtonsClient UIPnlRuleButtonsClient
        {
            get
            {
                if ((this.mUIPnlRuleButtonsClient == null))
                {
                    this.mUIPnlRuleButtonsClient = new UIPnlRuleButtonsClient(this);
                }
                return this.mUIPnlRuleButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRuleButtonsClient mUIPnlRuleButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRuleButtonsClient : DXTestControl
    {
        
        public UIPnlRuleButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRuleButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIGjennomsnittsberegniButton
        {
            get
            {
                if ((this.mUIGjennomsnittsberegniButton == null))
                {
                    this.mUIGjennomsnittsberegniButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGjennomsnittsberegniButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAverage";
                    this.mUIGjennomsnittsberegniButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGjennomsnittsberegniButton.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIGjennomsnittsberegniButton;
            }
        }
        
        public DXButton UIAnnenhverberegningavButton
        {
            get
            {
                if ((this.mUIAnnenhverberegningavButton == null))
                {
                    this.mUIAnnenhverberegningavButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnnenhverberegningavButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEveryOther";
                    this.mUIAnnenhverberegningavButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAnnenhverberegningavButton.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIAnnenhverberegningavButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGjennomsnittsberegniButton;
        
        private DXButton mUIAnnenhverberegningavButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanHjelpeplaWindow : DXWindow
    {
        
        public UIArbeidsplanHjelpeplaWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable : DXGrid
    {
        
        public UIGcExtraGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXCell UIGCell
        {
            get
            {
                if ((this.mUIGCell == null))
                {
                    this.mUIGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_F3Calc";
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIGCell;
            }
        }
        
        public DXCell UIItem7av7Cell
        {
            get
            {
                if ((this.mUIItem7av7Cell == null))
                {
                    this.mUIItem7av7Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7av7Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_SH";
                    this.mUIItem7av7Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7av7Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem7av7Cell;
            }
        }
        
        public DXCell UIItem0av4Cell
        {
            get
            {
                if ((this.mUIItem0av4Cell == null))
                {
                    this.mUIItem0av4Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av4Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_F3";
                    this.mUIItem0av4Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av4Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av4Cell;
            }
        }
        
        public DXCell UIItem0av0Cell
        {
            get
            {
                if ((this.mUIItem0av0Cell == null))
                {
                    this.mUIItem0av0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_F1F5";
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell;
            }
        }
        
        public DXCell UIGCell1
        {
            get
            {
                if ((this.mUIGCell1 == null))
                {
                    this.mUIGCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_F3Calc";
                    this.mUIGCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIGCell1;
            }
        }
        
        public DXCell UIItem3av7Cell
        {
            get
            {
                if ((this.mUIItem3av7Cell == null))
                {
                    this.mUIItem3av7Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av7Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_SH";
                    this.mUIItem3av7Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av7Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem3av7Cell;
            }
        }
        
        public DXCell UIItem0av0Cell1
        {
            get
            {
                if ((this.mUIItem0av0Cell1 == null))
                {
                    this.mUIItem0av0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_F3";
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell1;
            }
        }
        
        public DXCell UIItem0av2Cell
        {
            get
            {
                if ((this.mUIItem0av2Cell == null))
                {
                    this.mUIItem0av2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_F1F5";
                    this.mUIItem0av2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av2Cell;
            }
        }
        
        public DXCell UIGCell2
        {
            get
            {
                if ((this.mUIGCell2 == null))
                {
                    this.mUIGCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]Col_F3Calc";
                    this.mUIGCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell2.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIGCell2;
            }
        }
        
        public DXCell UIItem5av7Cell
        {
            get
            {
                if ((this.mUIItem5av7Cell == null))
                {
                    this.mUIItem5av7Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5av7Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]Col_SH";
                    this.mUIItem5av7Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5av7Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem5av7Cell;
            }
        }
        
        public DXCell UIItem0av2Cell1
        {
            get
            {
                if ((this.mUIItem0av2Cell1 == null))
                {
                    this.mUIItem0av2Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_F3";
                    this.mUIItem0av2Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av2Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell
        {
            get
            {
                if ((this.mUIItem0av1Cell == null))
                {
                    this.mUIItem0av1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]Col_F1F5";
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av1Cell;
            }
        }
        
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_F3Calc";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        
        public DXCell UIItem0av0Cell2
        {
            get
            {
                if ((this.mUIItem0av0Cell2 == null))
                {
                    this.mUIItem0av0Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_F1F5";
                    this.mUIItem0av0Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell2.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell2;
            }
        }
        
        public DXCell UIItem5av9Cell
        {
            get
            {
                if ((this.mUIItem5av9Cell == null))
                {
                    this.mUIItem5av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_SH";
                    this.mUIItem5av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5av9Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem5av9Cell;
            }
        }
        
        public DXCell UIItem0av1Cell1
        {
            get
            {
                if ((this.mUIItem0av1Cell1 == null))
                {
                    this.mUIItem0av1Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_F3";
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av1Cell1;
            }
        }
        
        public DXCell UIItem6av9Cell
        {
            get
            {
                if ((this.mUIItem6av9Cell == null))
                {
                    this.mUIItem6av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_SH";
                    this.mUIItem6av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6av9Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem6av9Cell;
            }
        }
        
        public DXCell UIItem0av2Cell2
        {
            get
            {
                if ((this.mUIItem0av2Cell2 == null))
                {
                    this.mUIItem0av2Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]Col_F3";
                    this.mUIItem0av2Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell2.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av2Cell2;
            }
        }
        
        public DXCell UIItem0av2Cell3
        {
            get
            {
                if ((this.mUIItem0av2Cell3 == null))
                {
                    this.mUIItem0av2Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]5[Column]Col_F1F5";
                    this.mUIItem0av2Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell3.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av2Cell3;
            }
        }
        
        public DXCell UIACell1
        {
            get
            {
                if ((this.mUIACell1 == null))
                {
                    this.mUIACell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_F3Calc";
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIACell1;
            }
        }
        
        public DXCell UIACell2
        {
            get
            {
                if ((this.mUIACell2 == null))
                {
                    this.mUIACell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_F3Calc";
                    this.mUIACell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell2.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIACell2;
            }
        }
        
        public DXCell UIItem3av9Cell
        {
            get
            {
                if ((this.mUIItem3av9Cell == null))
                {
                    this.mUIItem3av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_SH";
                    this.mUIItem3av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av9Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem3av9Cell;
            }
        }
        
        public DXCell UIItem2965Cell
        {
            get
            {
                if ((this.mUIItem2965Cell == null))
                {
                    this.mUIItem2965Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2965Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_ColumnB";
                    this.mUIItem2965Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2965Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem2965Cell;
            }
        }
        
        public DXCell UIItem0av0Cell3
        {
            get
            {
                if ((this.mUIItem0av0Cell3 == null))
                {
                    this.mUIItem0av0Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_F3";
                    this.mUIItem0av0Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell3.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell3;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_F1F5";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIGCell3
        {
            get
            {
                if ((this.mUIGCell3 == null))
                {
                    this.mUIGCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_F3Calc";
                    this.mUIGCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell3.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIGCell3;
            }
        }
        
        public DXCell UIItem3av9Cell1
        {
            get
            {
                if ((this.mUIItem3av9Cell1 == null))
                {
                    this.mUIItem3av9Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av9Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_SH";
                    this.mUIItem3av9Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av9Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem3av9Cell1;
            }
        }
        
        public DXCell UIItem966Cell
        {
            get
            {
                if ((this.mUIItem966Cell == null))
                {
                    this.mUIItem966Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem966Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_ColumnA";
                    this.mUIItem966Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem966Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem966Cell;
            }
        }
        
        public DXCell UIItem0av0Cell4
        {
            get
            {
                if ((this.mUIItem0av0Cell4 == null))
                {
                    this.mUIItem0av0Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_F3";
                    this.mUIItem0av0Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell4.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell4;
            }
        }
        
        public DXCell UIItem0av0Cell5
        {
            get
            {
                if ((this.mUIItem0av0Cell5 == null))
                {
                    this.mUIItem0av0Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_F1F5";
                    this.mUIItem0av0Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell5.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell5;
            }
        }
        
        public DXCell UIGCell4
        {
            get
            {
                if ((this.mUIGCell4 == null))
                {
                    this.mUIGCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_F3Calc";
                    this.mUIGCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell4.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIGCell4;
            }
        }
        
        public DXCell UIItem1621Cell
        {
            get
            {
                if ((this.mUIItem1621Cell == null))
                {
                    this.mUIItem1621Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1621Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]14[Column]Col_ColumnB";
                    this.mUIItem1621Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1621Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem1621Cell;
            }
        }
        
        public DXCell UIItem0av0Cell6
        {
            get
            {
                if ((this.mUIItem0av0Cell6 == null))
                {
                    this.mUIItem0av0Cell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]13[Column]Col_F3";
                    this.mUIItem0av0Cell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell6.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell6;
            }
        }
        
        public DXCell UIItem0av1Cell2
        {
            get
            {
                if ((this.mUIItem0av1Cell2 == null))
                {
                    this.mUIItem0av1Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]14[Column]Col_F1F5";
                    this.mUIItem0av1Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell2.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av1Cell2;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]16[Column]Col_F3Calc";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItem4av9Cell
        {
            get
            {
                if ((this.mUIItem4av9Cell == null))
                {
                    this.mUIItem4av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]14[Column]Col_SH";
                    this.mUIItem4av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4av9Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem4av9Cell;
            }
        }
        
        public DXCell UIItem1066Cell
        {
            get
            {
                if ((this.mUIItem1066Cell == null))
                {
                    this.mUIItem1066Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1066Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]15[Column]Col_ColumnA";
                    this.mUIItem1066Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1066Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem1066Cell;
            }
        }
        
        public DXCell UIItem1421Cell
        {
            get
            {
                if ((this.mUIItem1421Cell == null))
                {
                    this.mUIItem1421Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1421Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]16[Column]Col_ColumnB";
                    this.mUIItem1421Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1421Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem1421Cell;
            }
        }
        
        public DXCell UIItem1421Cell1
        {
            get
            {
                if ((this.mUIItem1421Cell1 == null))
                {
                    this.mUIItem1421Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1421Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]15[Column]Col_ColumnD";
                    this.mUIItem1421Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1421Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem1421Cell1;
            }
        }
        
        public DXCell UIItem0av0Cell7
        {
            get
            {
                if ((this.mUIItem0av0Cell7 == null))
                {
                    this.mUIItem0av0Cell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]14[Column]Col_F3";
                    this.mUIItem0av0Cell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell7.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell7;
            }
        }
        
        public DXCell UIItem0av0Cell8
        {
            get
            {
                if ((this.mUIItem0av0Cell8 == null))
                {
                    this.mUIItem0av0Cell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]16[Column]Col_F1F5";
                    this.mUIItem0av0Cell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell8.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell8;
            }
        }
        
        public DXCell UIItem0av0Cell9
        {
            get
            {
                if ((this.mUIItem0av0Cell9 == null))
                {
                    this.mUIItem0av0Cell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]14[Column]Col_F3";
                    this.mUIItem0av0Cell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell9.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell9;
            }
        }
        
        public DXCell UIItem6av9Cell1
        {
            get
            {
                if ((this.mUIItem6av9Cell1 == null))
                {
                    this.mUIItem6av9Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6av9Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_SH";
                    this.mUIItem6av9Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6av9Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem6av9Cell1;
            }
        }
        
        public DXCell UIItem1216Cell
        {
            get
            {
                if ((this.mUIItem1216Cell == null))
                {
                    this.mUIItem1216Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1216Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_ColumnA";
                    this.mUIItem1216Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1216Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem1216Cell;
            }
        }
        
        public DXCell UIItem0av3Cell
        {
            get
            {
                if ((this.mUIItem0av3Cell == null))
                {
                    this.mUIItem0av3Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_F3";
                    this.mUIItem0av3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av3Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av3Cell;
            }
        }
        
        public DXCell UIGCell5
        {
            get
            {
                if ((this.mUIGCell5 == null))
                {
                    this.mUIGCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_F3Calc";
                    this.mUIGCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell5.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIGCell5;
            }
        }
        
        public DXCell UIItem1288Cell
        {
            get
            {
                if ((this.mUIItem1288Cell == null))
                {
                    this.mUIItem1288Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1288Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_ColumnB";
                    this.mUIItem1288Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1288Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem1288Cell;
            }
        }
        
        public DXCell UIItem0av2Cell4
        {
            get
            {
                if ((this.mUIItem0av2Cell4 == null))
                {
                    this.mUIItem0av2Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_F3";
                    this.mUIItem0av2Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell4.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av2Cell4;
            }
        }
        
        public DXCell UIItem0av0Cell10
        {
            get
            {
                if ((this.mUIItem0av0Cell10 == null))
                {
                    this.mUIItem0av0Cell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_F1F5";
                    this.mUIItem0av0Cell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell10.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell10;
            }
        }
        
        public DXCell UIGCell6
        {
            get
            {
                if ((this.mUIGCell6 == null))
                {
                    this.mUIGCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]14[Column]Col_F3Calc";
                    this.mUIGCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell6.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIGCell6;
            }
        }
        
        public DXCell UIItem6av9Cell2
        {
            get
            {
                if ((this.mUIItem6av9Cell2 == null))
                {
                    this.mUIItem6av9Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6av9Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]14[Column]Col_SH";
                    this.mUIItem6av9Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6av9Cell2.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem6av9Cell2;
            }
        }
        
        public DXCell UIItem2224Cell
        {
            get
            {
                if ((this.mUIItem2224Cell == null))
                {
                    this.mUIItem2224Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2224Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_ColumnA";
                    this.mUIItem2224Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2224Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem2224Cell;
            }
        }
        
        public DXCell UIItem2965Cell1
        {
            get
            {
                if ((this.mUIItem2965Cell1 == null))
                {
                    this.mUIItem2965Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2965Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_ColumnB";
                    this.mUIItem2965Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2965Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem2965Cell1;
            }
        }
        
        public DXCell UIItem8av9Cell
        {
            get
            {
                if ((this.mUIItem8av9Cell == null))
                {
                    this.mUIItem8av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]16[Column]Col_SH";
                    this.mUIItem8av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8av9Cell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem8av9Cell;
            }
        }
        
        public DXCell UIItem0av0Cell11
        {
            get
            {
                if ((this.mUIItem0av0Cell11 == null))
                {
                    this.mUIItem0av0Cell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]14[Column]Col_F1F5";
                    this.mUIItem0av0Cell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell11.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell11;
            }
        }
        
        public DXCell UIItem2224Cell1
        {
            get
            {
                if ((this.mUIItem2224Cell1 == null))
                {
                    this.mUIItem2224Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2224Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_ColumnA";
                    this.mUIItem2224Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2224Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem2224Cell1;
            }
        }
        
        public DXCell UIItem2965Cell2
        {
            get
            {
                if ((this.mUIItem2965Cell2 == null))
                {
                    this.mUIItem2965Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2965Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_ColumnB";
                    this.mUIItem2965Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2965Cell2.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem2965Cell2;
            }
        }
        
        public DXCell UIItem6av9Cell3
        {
            get
            {
                if ((this.mUIItem6av9Cell3 == null))
                {
                    this.mUIItem6av9Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6av9Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_SH";
                    this.mUIItem6av9Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6av9Cell3.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem6av9Cell3;
            }
        }
        
        public DXCell UIItem966Cell1
        {
            get
            {
                if ((this.mUIItem966Cell1 == null))
                {
                    this.mUIItem966Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem966Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]14[Column]Col_ColumnA";
                    this.mUIItem966Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem966Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem966Cell1;
            }
        }
        
        public DXCell UIItem1066Cell1
        {
            get
            {
                if ((this.mUIItem1066Cell1 == null))
                {
                    this.mUIItem1066Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1066Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]16[Column]Col_ColumnA";
                    this.mUIItem1066Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1066Cell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem1066Cell1;
            }
        }
        
        public DXCell UIItem0av0Cell12
        {
            get
            {
                if ((this.mUIItem0av0Cell12 == null))
                {
                    this.mUIItem0av0Cell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]16[Column]Col_F3";
                    this.mUIItem0av0Cell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell12.WindowTitles.Add("Arbeidsplan: Hjelpeplan for BEREGNING F3 - F5. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIItem0av0Cell12;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGCell;
        
        private DXCell mUIItem7av7Cell;
        
        private DXCell mUIItem0av4Cell;
        
        private DXCell mUIItem0av0Cell;
        
        private DXCell mUIGCell1;
        
        private DXCell mUIItem3av7Cell;
        
        private DXCell mUIItem0av0Cell1;
        
        private DXCell mUIItem0av2Cell;
        
        private DXCell mUIGCell2;
        
        private DXCell mUIItem5av7Cell;
        
        private DXCell mUIItem0av2Cell1;
        
        private DXCell mUIItem0av1Cell;
        
        private DXCell mUIACell;
        
        private DXCell mUIItem0av0Cell2;
        
        private DXCell mUIItem5av9Cell;
        
        private DXCell mUIItem0av1Cell1;
        
        private DXCell mUIItem6av9Cell;
        
        private DXCell mUIItem0av2Cell2;
        
        private DXCell mUIItem0av2Cell3;
        
        private DXCell mUIACell1;
        
        private DXCell mUIACell2;
        
        private DXCell mUIItem3av9Cell;
        
        private DXCell mUIItem2965Cell;
        
        private DXCell mUIItem0av0Cell3;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIGCell3;
        
        private DXCell mUIItem3av9Cell1;
        
        private DXCell mUIItem966Cell;
        
        private DXCell mUIItem0av0Cell4;
        
        private DXCell mUIItem0av0Cell5;
        
        private DXCell mUIGCell4;
        
        private DXCell mUIItem1621Cell;
        
        private DXCell mUIItem0av0Cell6;
        
        private DXCell mUIItem0av1Cell2;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItem4av9Cell;
        
        private DXCell mUIItem1066Cell;
        
        private DXCell mUIItem1421Cell;
        
        private DXCell mUIItem1421Cell1;
        
        private DXCell mUIItem0av0Cell7;
        
        private DXCell mUIItem0av0Cell8;
        
        private DXCell mUIItem0av0Cell9;
        
        private DXCell mUIItem6av9Cell1;
        
        private DXCell mUIItem1216Cell;
        
        private DXCell mUIItem0av3Cell;
        
        private DXCell mUIGCell5;
        
        private DXCell mUIItem1288Cell;
        
        private DXCell mUIItem0av2Cell4;
        
        private DXCell mUIItem0av0Cell10;
        
        private DXCell mUIGCell6;
        
        private DXCell mUIItem6av9Cell2;
        
        private DXCell mUIItem2224Cell;
        
        private DXCell mUIItem2965Cell1;
        
        private DXCell mUIItem8av9Cell;
        
        private DXCell mUIItem0av0Cell11;
        
        private DXCell mUIItem2224Cell1;
        
        private DXCell mUIItem2965Cell2;
        
        private DXCell mUIItem6av9Cell3;
        
        private DXCell mUIItem966Cell1;
        
        private DXCell mUIItem1066Cell1;
        
        private DXCell mUIItem0av0Cell12;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnsatteiarbeidsplanWindow : DXWindow
    {
        
        public UIAnsatteiarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte i arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlOuterClient UIPanelControlOuterClient
        {
            get
            {
                if ((this.mUIPanelControlOuterClient == null))
                {
                    this.mUIPanelControlOuterClient = new UIPanelControlOuterClient(this);
                }
                return this.mUIPanelControlOuterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlOuterClient mUIPanelControlOuterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControlOuterClient : DXTestControl
    {
        
        public UIPanelControlOuterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlLeftClient UIPanelControlLeftClient
        {
            get
            {
                if ((this.mUIPanelControlLeftClient == null))
                {
                    this.mUIPanelControlLeftClient = new UIPanelControlLeftClient(this);
                }
                return this.mUIPanelControlLeftClient;
            }
        }
        
        public UIPanelControlRightClient UIPanelControlRightClient
        {
            get
            {
                if ((this.mUIPanelControlRightClient == null))
                {
                    this.mUIPanelControlRightClient = new UIPanelControlRightClient(this);
                }
                return this.mUIPanelControlRightClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlLeftClient mUIPanelControlLeftClient;
        
        private UIPanelControlRightClient mUIPanelControlRightClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControlLeftClient : DXTestControl
    {
        
        public UIPanelControlLeftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITreeListEmployeesTreeList UITreeListEmployeesTreeList
        {
            get
            {
                if ((this.mUITreeListEmployeesTreeList == null))
                {
                    this.mUITreeListEmployeesTreeList = new UITreeListEmployeesTreeList(this);
                }
                return this.mUITreeListEmployeesTreeList;
            }
        }
        
        public DXButton UIVakantButton
        {
            get
            {
                if ((this.mUIVakantButton == null))
                {
                    this.mUIVakantButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVakantButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonAddVacant";
                    this.mUIVakantButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUIVakantButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIVakantButton;
            }
        }
        #endregion
        
        #region Fields
        private UITreeListEmployeesTreeList mUITreeListEmployeesTreeList;
        
        private DXButton mUIVakantButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITreeListEmployeesTreeList : DXTreeList
    {
        
        public UITreeListEmployeesTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "treeListEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode1TreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new UINode1TreeListNode(this);
                }
                return this.mUINode1TreeListNode;
            }
        }
        
        public UINode6TreeListNode UINode6TreeListNode
        {
            get
            {
                if ((this.mUINode6TreeListNode == null))
                {
                    this.mUINode6TreeListNode = new UINode6TreeListNode(this);
                }
                return this.mUINode6TreeListNode;
            }
        }
        
        public UINode5TreeListNode UINode5TreeListNode
        {
            get
            {
                if ((this.mUINode5TreeListNode == null))
                {
                    this.mUINode5TreeListNode = new UINode5TreeListNode(this);
                }
                return this.mUINode5TreeListNode;
            }
        }
        
        public UINode3TreeListNode UINode3TreeListNode
        {
            get
            {
                if ((this.mUINode3TreeListNode == null))
                {
                    this.mUINode3TreeListNode = new UINode3TreeListNode(this);
                }
                return this.mUINode3TreeListNode;
            }
        }
        
        public UINode4TreeListNode UINode4TreeListNode
        {
            get
            {
                if ((this.mUINode4TreeListNode == null))
                {
                    this.mUINode4TreeListNode = new UINode4TreeListNode(this);
                }
                return this.mUINode4TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode1TreeListNode mUINode1TreeListNode;
        
        private UINode6TreeListNode mUINode6TreeListNode;
        
        private UINode5TreeListNode mUINode5TreeListNode;
        
        private UINode3TreeListNode mUINode3TreeListNode;
        
        private UINode4TreeListNode mUINode4TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode1TreeListNode : DXTreeListNode
    {
        
        public UINode1TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem2BrolinThomasTreeListCell
        {
            get
            {
                if ((this.mUIItem2BrolinThomasTreeListCell == null))
                {
                    this.mUIItem2BrolinThomasTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem2BrolinThomasTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem2BrolinThomasTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem2BrolinThomasTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem2BrolinThomasTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem2BrolinThomasTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode6TreeListNode : DXTreeListNode
    {
        
        public UINode6TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        
        public DXTreeListCell UIItem7VAKANTTreeListCell
        {
            get
            {
                if ((this.mUIItem7VAKANTTreeListCell == null))
                {
                    this.mUIItem7VAKANTTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem7VAKANTTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem7VAKANTTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem7VAKANTTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem7VAKANTTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode mUINode0TreeListNode;
        
        private DXTreeListCell mUIItem7VAKANTTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode0TreeListNode : DXTreeListNode
    {
        
        public UINode0TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem10TreeListCell
        {
            get
            {
                if ((this.mUIItem10TreeListCell == null))
                {
                    this.mUIItem10TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem10TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem10TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem10TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem10TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem10TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode5TreeListNode : DXTreeListNode
    {
        
        public UINode5TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode1 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode1(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        
        public DXTreeListCell UIItem6LarssonHenrikTreeListCell
        {
            get
            {
                if ((this.mUIItem6LarssonHenrikTreeListCell == null))
                {
                    this.mUIItem6LarssonHenrikTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem6LarssonHenrikTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem6LarssonHenrikTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem6LarssonHenrikTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem6LarssonHenrikTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode1 mUINode0TreeListNode;
        
        private DXTreeListCell mUIItem6LarssonHenrikTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode0TreeListNode1 : DXTreeListNode
    {
        
        public UINode0TreeListNode1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem175TreeListCell
        {
            get
            {
                if ((this.mUIItem175TreeListCell == null))
                {
                    this.mUIItem175TreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem175TreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem175TreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem175TreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem175TreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem175TreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode3TreeListNode : DXTreeListNode
    {
        
        public UINode3TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem4IbrahimovicZlatTreeListCell
        {
            get
            {
                if ((this.mUIItem4IbrahimovicZlatTreeListCell == null))
                {
                    this.mUIItem4IbrahimovicZlatTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem4IbrahimovicZlatTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem4IbrahimovicZlatTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem4IbrahimovicZlatTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem4IbrahimovicZlatTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem4IbrahimovicZlatTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINode4TreeListNode : DXTreeListNode
    {
        
        public UINode4TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem5MildHåkanTreeListCell
        {
            get
            {
                if ((this.mUIItem5MildHåkanTreeListCell == null))
                {
                    this.mUIItem5MildHåkanTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem5MildHåkanTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem5MildHåkanTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem5MildHåkanTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem5MildHåkanTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem5MildHåkanTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControlRightClient : DXTestControl
    {
        
        public UIPanelControlRightClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeEditorsViewCustom UIEmployeeEditorsViewCustom
        {
            get
            {
                if ((this.mUIEmployeeEditorsViewCustom == null))
                {
                    this.mUIEmployeeEditorsViewCustom = new UIEmployeeEditorsViewCustom(this);
                }
                return this.mUIEmployeeEditorsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeEditorsViewCustom mUIEmployeeEditorsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeEditorsViewCustom : DXTestControl
    {
        
        public UIEmployeeEditorsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeEditorsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeEditorsView";
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIXscContentScrollableControl UIXscContentScrollableControl
        {
            get
            {
                if ((this.mUIXscContentScrollableControl == null))
                {
                    this.mUIXscContentScrollableControl = new UIXscContentScrollableControl(this);
                }
                return this.mUIXscContentScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscContentScrollableControl mUIXscContentScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXscContentScrollableControl : DXScrollableControl
    {
        
        public UIXscContentScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            #endregion
        }
        
        #region Properties
        public UIGroupControlViewHostCustom UIGroupControlViewHostCustom
        {
            get
            {
                if ((this.mUIGroupControlViewHostCustom == null))
                {
                    this.mUIGroupControlViewHostCustom = new UIGroupControlViewHostCustom(this);
                }
                return this.mUIGroupControlViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlViewHostCustom mUIGroupControlViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlViewHostCustom : DXTestControl
    {
        
        public UIGroupControlViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        
        public UIGroupControlClient1 UIGroupControlClient1
        {
            get
            {
                if ((this.mUIGroupControlClient1 == null))
                {
                    this.mUIGroupControlClient1 = new UIGroupControlClient1(this);
                }
                return this.mUIGroupControlClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient mUIGroupControlClient;
        
        private UIGroupControlClient1 mUIGroupControlClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient : DXTestControl
    {
        
        public UIGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerF3CalCustom UIEmployeeManagerF3CalCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerF3CalCustom == null))
                {
                    this.mUIEmployeeManagerF3CalCustom = new UIEmployeeManagerF3CalCustom(this);
                }
                return this.mUIEmployeeManagerF3CalCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerF3CalCustom mUIEmployeeManagerF3CalCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeManagerF3CalCustom : DXTestControl
    {
        
        public UIEmployeeManagerF3CalCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerF3CalculationOptionView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerF3CalculationOptionView";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILueF3CalculationOptiLookUpEdit
        {
            get
            {
                if ((this.mUILueF3CalculationOptiLookUpEdit == null))
                {
                    this.mUILueF3CalculationOptiLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILueF3CalculationOptiLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lueF3CalculationOption";
                    this.mUILueF3CalculationOptiLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
                    #endregion
                }
                return this.mUILueF3CalculationOptiLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILueF3CalculationOptiLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient1 : DXTestControl
    {
        
        public UIGroupControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerLineVCustom UIEmployeeManagerLineVCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerLineVCustom == null))
                {
                    this.mUIEmployeeManagerLineVCustom = new UIEmployeeManagerLineVCustom(this);
                }
                return this.mUIEmployeeManagerLineVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerLineVCustom mUIEmployeeManagerLineVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeManagerLineVCustom : DXTestControl
    {
        
        public UIEmployeeManagerLineVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerLineView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerLineView";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIEPositionCategoryLookUpEdit
        {
            get
            {
                if ((this.mUIEPositionCategoryLookUpEdit == null))
                {
                    this.mUIEPositionCategoryLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIEPositionCategoryLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ePositionCategory";
                    this.mUIEPositionCategoryLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
                    #endregion
                }
                return this.mUIEPositionCategoryLookUpEdit;
            }
        }
        
        public DXLookUpEdit UIERuleSetLookUpEdit
        {
            get
            {
                if ((this.mUIERuleSetLookUpEdit == null))
                {
                    this.mUIERuleSetLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIERuleSetLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eRuleSet";
                    this.mUIERuleSetLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
                    #endregion
                }
                return this.mUIERuleSetLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIEPositionCategoryLookUpEdit;
        
        private DXLookUpEdit mUIERuleSetLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILeggtilansatteWindow : DXWindow
    {
        
        public UILeggtilansatteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom1 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom1(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom1 mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostCustom1 : DXTestControl
    {
        
        public UIViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UISelectDepartmentEmplCustom UISelectDepartmentEmplCustom
        {
            get
            {
                if ((this.mUISelectDepartmentEmplCustom == null))
                {
                    this.mUISelectDepartmentEmplCustom = new UISelectDepartmentEmplCustom(this);
                }
                return this.mUISelectDepartmentEmplCustom;
            }
        }
        
        public UISelectPlanEmployeesVCustom UISelectPlanEmployeesVCustom
        {
            get
            {
                if ((this.mUISelectPlanEmployeesVCustom == null))
                {
                    this.mUISelectPlanEmployeesVCustom = new UISelectPlanEmployeesVCustom(this);
                }
                return this.mUISelectPlanEmployeesVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISelectDepartmentEmplCustom mUISelectDepartmentEmplCustom;
        
        private UISelectPlanEmployeesVCustom mUISelectPlanEmployeesVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISelectDepartmentEmplCustom : DXTestControl
    {
        
        public UISelectDepartmentEmplCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectDepartmentEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectDepartmentEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentContainerClient : DXTestControl
    {
        
        public UIPcContentContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient1 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient1(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient1 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient1 : DXTestControl
    {
        
        public UIPcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentEmployeeTable UIGcDepartmentEmployeeTable
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeTable == null))
                {
                    this.mUIGcDepartmentEmployeeTable = new UIGcDepartmentEmployeeTable(this);
                }
                return this.mUIGcDepartmentEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentEmployeeTable mUIGcDepartmentEmployeeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcDepartmentEmployeeTable : DXGrid
    {
        
        public UIGcDepartmentEmployeeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIIbrahimovicZlatanCell
        {
            get
            {
                if ((this.mUIIbrahimovicZlatanCell == null))
                {
                    this.mUIIbrahimovicZlatanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]1[Column]colE" +
                        "mployee";
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIbrahimovicZlatanCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIIbrahimovicZlatanCell;
            }
        }
        
        public DXCell UILarssonHenrikCell
        {
            get
            {
                if ((this.mUILarssonHenrikCell == null))
                {
                    this.mUILarssonHenrikCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILarssonHenrikCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]2[Column]colE" +
                        "mployee";
                    this.mUILarssonHenrikCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILarssonHenrikCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUILarssonHenrikCell;
            }
        }
        
        public DXCell UIMildHåkanCell
        {
            get
            {
                if ((this.mUIMildHåkanCell == null))
                {
                    this.mUIMildHåkanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMildHåkanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]3[Column]colE" +
                        "mployee";
                    this.mUIMildHåkanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMildHåkanCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIMildHåkanCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIbrahimovicZlatanCell;
        
        private DXCell mUILarssonHenrikCell;
        
        private DXCell mUIMildHåkanCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISelectPlanEmployeesVCustom : DXTestControl
    {
        
        public UISelectPlanEmployeesVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectPlanEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectPlanEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient1 UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient1(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient1 mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentContainerClient1 : DXTestControl
    {
        
        public UIPcContentContainerClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient2 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient2(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient2 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient2 : DXTestControl
    {
        
        public UIPcContentClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcPlanEmployeesTable UIGcPlanEmployeesTable
        {
            get
            {
                if ((this.mUIGcPlanEmployeesTable == null))
                {
                    this.mUIGcPlanEmployeesTable = new UIGcPlanEmployeesTable(this);
                }
                return this.mUIGcPlanEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcPlanEmployeesTable mUIGcPlanEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcPlanEmployeesTable : DXGrid
    {
        
        public UIGcPlanEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlanEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIIbrahimovicZlatanCell
        {
            get
            {
                if ((this.mUIIbrahimovicZlatanCell == null))
                {
                    this.mUIIbrahimovicZlatanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlanEmployeesGridControlCell[View]gvPlanEmployees[Row]0[Column]colEmployee";
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIbrahimovicZlatanCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIIbrahimovicZlatanCell;
            }
        }
        
        public DXCell UIVAKANTCell
        {
            get
            {
                if ((this.mUIVAKANTCell == null))
                {
                    this.mUIVAKANTCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlanEmployeesGridControlCell[View]gvPlanEmployees[Row]3[Column]colEmployee";
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVAKANTCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIVAKANTCell;
            }
        }
        
        public DXColumnHeader UIColEmployeeColumnHeader
        {
            get
            {
                if ((this.mUIColEmployeeColumnHeader == null))
                {
                    this.mUIColEmployeeColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUIColEmployeeColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlanEmployeesGridControlColumnHeader[View]gvPlanEmployees[Column]colEmployee";
                    this.mUIColEmployeeColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUIColEmployeeColumnHeader.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIColEmployeeColumnHeader;
            }
        }
        
        public DXCell UILarssonHenrikCell
        {
            get
            {
                if ((this.mUILarssonHenrikCell == null))
                {
                    this.mUILarssonHenrikCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILarssonHenrikCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlanEmployeesGridControlCell[View]gvPlanEmployees[Row]1[Column]colEmployee";
                    this.mUILarssonHenrikCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILarssonHenrikCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUILarssonHenrikCell;
            }
        }
        
        public DXCell UIMildHåkanCell
        {
            get
            {
                if ((this.mUIMildHåkanCell == null))
                {
                    this.mUIMildHåkanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMildHåkanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlanEmployeesGridControlCell[View]gvPlanEmployees[Row]2[Column]colEmployee";
                    this.mUIMildHåkanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMildHåkanCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIMildHåkanCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIbrahimovicZlatanCell;
        
        private DXCell mUIVAKANTCell;
        
        private DXColumnHeader mUIColEmployeeColumnHeader;
        
        private DXCell mUILarssonHenrikCell;
        
        private DXCell mUIMildHåkanCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanBEREGNINGWindow : DXWindow
    {
        
        public UIArbeidsplanBEREGNINGWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient1 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient1(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient1 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient1 : DXTestControl
    {
        
        public UIPnlRosterPlanClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_5";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit == null))
                {
                    this.mUIRow4ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_5";
                    this.mUIRow4ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_18";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_18";
                    this.mUIRow4ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_22";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_22";
                    this.mUIRow4ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_26";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_26";
                    this.mUIRow4ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_29";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_29";
                    this.mUIRow4ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_34";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_34";
                    this.mUIRow4ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_5";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit == null))
                {
                    this.mUIRow5ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_5";
                    this.mUIRow5ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_6";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_6";
                    this.mUIRow5ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell21
        {
            get
            {
                if ((this.mUIItemCell21 == null))
                {
                    this.mUIItemCell21 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_14";
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell21.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell21;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_14";
                    this.mUIRow5ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIItemCell31
        {
            get
            {
                if ((this.mUIItemCell31 == null))
                {
                    this.mUIItemCell31 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_18";
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell31.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell31;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_18";
                    this.mUIRow5ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell41
        {
            get
            {
                if ((this.mUIItemCell41 == null))
                {
                    this.mUIItemCell41 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell41.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_20";
                    this.mUIItemCell41.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell41.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell41;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_20";
                    this.mUIRow5ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell51
        {
            get
            {
                if ((this.mUIItemCell51 == null))
                {
                    this.mUIItemCell51 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell51.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_22";
                    this.mUIItemCell51.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell51.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell51;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_22";
                    this.mUIRow5ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell61
        {
            get
            {
                if ((this.mUIItemCell61 == null))
                {
                    this.mUIItemCell61 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell61.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_26";
                    this.mUIItemCell61.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell61.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell61;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_26";
                    this.mUIRow5ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit6;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_4";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit == null))
                {
                    this.mUIRow6ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_4";
                    this.mUIRow6ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_4";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit == null))
                {
                    this.mUIRow7ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_4";
                    this.mUIRow7ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell22
        {
            get
            {
                if ((this.mUIItemCell22 == null))
                {
                    this.mUIItemCell22 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell22.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_6";
                    this.mUIItemCell22.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell22.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell22;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_6";
                    this.mUIRow6ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell32
        {
            get
            {
                if ((this.mUIItemCell32 == null))
                {
                    this.mUIItemCell32 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell32.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_6";
                    this.mUIItemCell32.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell32.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell32;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow7ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_6";
                    this.mUIRow7ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell42
        {
            get
            {
                if ((this.mUIItemCell42 == null))
                {
                    this.mUIItemCell42 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell42.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_12";
                    this.mUIItemCell42.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell42.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell42;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_12";
                    this.mUIRow6ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIItemCell52
        {
            get
            {
                if ((this.mUIItemCell52 == null))
                {
                    this.mUIItemCell52 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell52.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_12";
                    this.mUIItemCell52.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell52.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell52;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow7ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_12";
                    this.mUIRow7ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIItemCell62
        {
            get
            {
                if ((this.mUIItemCell62 == null))
                {
                    this.mUIItemCell62 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell62.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_16";
                    this.mUIItemCell62.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell62.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell62;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_16";
                    this.mUIRow6ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell71
        {
            get
            {
                if ((this.mUIItemCell71 == null))
                {
                    this.mUIItemCell71 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell71.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_16";
                    this.mUIItemCell71.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell71.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell71;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow7ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_16";
                    this.mUIRow7ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell8
        {
            get
            {
                if ((this.mUIItemCell8 == null))
                {
                    this.mUIItemCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_22";
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell8.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell8;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_22";
                    this.mUIRow6ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell9
        {
            get
            {
                if ((this.mUIItemCell9 == null))
                {
                    this.mUIItemCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_22";
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell9.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell9;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow7ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_22";
                    this.mUIRow7ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell10
        {
            get
            {
                if ((this.mUIItemCell10 == null))
                {
                    this.mUIItemCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_26";
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell10.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell10;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_26";
                    this.mUIRow6ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell111
        {
            get
            {
                if ((this.mUIItemCell111 == null))
                {
                    this.mUIItemCell111 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell111.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_26";
                    this.mUIItemCell111.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell111.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell111;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow7ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_26";
                    this.mUIRow7ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell121
        {
            get
            {
                if ((this.mUIItemCell121 == null))
                {
                    this.mUIItemCell121 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell121.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_29";
                    this.mUIItemCell121.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell121.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell121;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_29";
                    this.mUIRow6ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit6;
            }
        }
        
        public DXCell UIItemCell13
        {
            get
            {
                if ((this.mUIItemCell13 == null))
                {
                    this.mUIItemCell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_29";
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell13.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell13;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow7ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_29";
                    this.mUIRow7ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit6;
            }
        }
        
        public DXCell UIItemCell14
        {
            get
            {
                if ((this.mUIItemCell14 == null))
                {
                    this.mUIItemCell14 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell14.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_33";
                    this.mUIItemCell14.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell14.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell14;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit7
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit7 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit7 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_33";
                    this.mUIRow6ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit7.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit7;
            }
        }
        
        public DXCell UIItemCell15
        {
            get
            {
                if ((this.mUIItemCell15 == null))
                {
                    this.mUIItemCell15 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell15.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]7[Column]RosterCell_34";
                    this.mUIItemCell15.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell15.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell15;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit8
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit8 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit8 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]7[Column]RosterCell_34";
                    this.mUIRow6ColumnRosterCellEdit8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit8.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit8;
            }
        }
        
        public DXCell UIItemCell16
        {
            get
            {
                if ((this.mUIItemCell16 == null))
                {
                    this.mUIItemCell16 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell16.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_33";
                    this.mUIItemCell16.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell16.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell16;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit7
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit7 == null))
                {
                    this.mUIRow7ColumnRosterCellEdit7 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_33";
                    this.mUIRow7ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit7.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit7;
            }
        }
        
        public DXCell UIItemCell17
        {
            get
            {
                if ((this.mUIItemCell17 == null))
                {
                    this.mUIItemCell17 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell17.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]8[Column]RosterCell_34";
                    this.mUIItemCell17.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell17.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell17;
            }
        }
        
        public DXTextEdit UIRow7ColumnRosterCellEdit8
        {
            get
            {
                if ((this.mUIRow7ColumnRosterCellEdit8 == null))
                {
                    this.mUIRow7ColumnRosterCellEdit8 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow7ColumnRosterCellEdit8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]8[Column]RosterCell_34";
                    this.mUIRow7ColumnRosterCellEdit8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow7ColumnRosterCellEdit8.WindowTitles.Add("Arbeidsplan: BEREGNING F3 - F5 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow7ColumnRosterCellEdit8;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit;
        
        private DXCell mUIItemCell1;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell2;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit2;
        
        private DXCell mUIItemCell3;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell4;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell5;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell6;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit;
        
        private DXCell mUIItemCell11;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell21;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit2;
        
        private DXCell mUIItemCell31;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell41;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell51;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell61;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit6;
        
        private DXCell mUIItemCell7;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit;
        
        private DXCell mUIItemCell12;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit;
        
        private DXCell mUIItemCell22;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell32;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell42;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit2;
        
        private DXCell mUIItemCell52;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit2;
        
        private DXCell mUIItemCell62;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell71;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell8;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell9;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell10;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell111;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell121;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit6;
        
        private DXCell mUIItemCell13;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit6;
        
        private DXCell mUIItemCell14;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit7;
        
        private DXCell mUIItemCell15;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit8;
        
        private DXCell mUIItemCell16;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit7;
        
        private DXCell mUIItemCell17;
        
        private DXTextEdit mUIRow7ColumnRosterCellEdit8;
        #endregion
    }
}
