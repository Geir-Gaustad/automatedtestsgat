// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _030_Test_Fravær
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddVacantShift - Use 'AddVacantShiftParams' to pass parameters into this method.
        /// </summary>
        public void AddVacantShift()
        {
            #region Variable Declarations
            DXButton uIVakantButton = this.UIAnsatteiArbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UIVakantButton;
            DXTreeListCell uIItemTreeListCell = this.UIAnsatteiArbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeesTreeList.UINode1TreeListNode.UINode0TreeListNode.UIItemTreeListCell;
            DXLookUpEdit uISearchLookUpEditLookUpEdit = this.UIAnsatteiArbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlClient.UIViewHostCustom.UIPanelControlClient.UIEmployeeEditorsViewCustom.UIPanelControlClient.UIXtraScrollableControScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerLineVCustom.UISearchLookUpEditLookUpEdit;
            DXLookUpEdit uISearchLookUpEditLookUpEdit1 = this.UIAnsatteiArbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlClient.UIViewHostCustom.UIPanelControlClient.UIEmployeeEditorsViewCustom.UIPanelControlClient.UIXtraScrollableControScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerLineVCustom.UISearchLookUpEditLookUpEdit1;
            DXButton uIOKButton = this.UIAnsatteiArbeidsplanWindow.UIOKButton;
            #endregion

            // Click 'Vakant' button
            Mouse.Click(uIVakantButton, new Point(49, 12));

            // Click TreeListCell
            Mouse.Click(uIItemTreeListCell, new Point(16, 9));

            // Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.PositionCategoryViewModel' in 'SearchLookUpEdit' LookUpEdit
            //ValueTypeName
            uISearchLookUpEditLookUpEdit.ValueTypeName = this.AddVacantShiftParams.UISearchLookUpEditLookUpEditValueTypeName;

            // Type 'S - Sykepleier' in 'SearchLookUpEdit' LookUpEdit
            //ValueAsString
            uISearchLookUpEditLookUpEdit.ValueAsString = this.AddVacantShiftParams.UISearchLookUpEditLookUpEditValueAsString;

            // Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.RuleSetViewModel' in 'SearchLookUpEdit' LookUpEdit
            //ValueTypeName
            uISearchLookUpEditLookUpEdit1.ValueTypeName = this.AddVacantShiftParams.UISearchLookUpEditLookUpEdit1ValueTypeName;

            // Type 'TURNUS - Turnus 35,5t/uke' in 'SearchLookUpEdit' LookUpEdit
            //ValueAsString
            uISearchLookUpEditLookUpEdit1.ValueAsString = this.AddVacantShiftParams.UISearchLookUpEditLookUpEdit1ValueAsString;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ChangeDate - Use 'ChangeDateParams' to pass parameters into this method.
        /// </summary>
        public void ChangeDate()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIVelgdatoBarBaseButtonItem = this.UIGatver63437793ASCLAvWindow1.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarBaseButtonItem;
            DXPopupEdit uIPceDatePopupEdit = this.UIGatver63437793ASCLAvWindow1.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarItem.UIPopupContainerBarConMenu.UIPpcDatePickerClient.UILcDatePickerCustom.UIPceDatePopupEdit;
            DXButton uIGåtilButton = this.UIGatver63437793ASCLAvWindow1.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarItem.UIPopupContainerBarConMenu.UIPpcDatePickerClient.UILcDatePickerCustom.UILayoutControlGroup1LayoutGroup.UILayoutControlItem3LayoutControlItem.UIGåtilButton;
            #endregion

            // Click 'Velg dato' BarBaseButtonItem
            Mouse.Click(uIVelgdatoBarBaseButtonItem, new Point(37, 9));

            // Type '18.04.2016 [SelectionStart]2' in 'pceDate' PopupEdit
            //ValueAsString
            uIPceDatePopupEdit.ValueAsString = this.ChangeDateParams.UIPceDatePopupEditValueAsString;

            // Type '{NumPad8}{Tab}{Tab}' in 'pceDate' PopupEdit
            Keyboard.SendKeys(uIPceDatePopupEdit, this.ChangeDateParams.UIPceDatePopupEditSendKeys, ModifierKeys.None);

            // Click 'Gå til' button
            Mouse.Click(uIGåtilButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CheckEcxelFileName - Use 'CheckEcxelFileNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEcxelFileName()
        {
            #region Variable Declarations
            WinEdit uIFilenameEdit = this.UISaveAsWindow.UIItemWindow.UIFilenameEdit;
            #endregion

            // Verify that the 'ControlType' property of 'File name:' text box equals 'Edit'
            Assert.AreEqual(this.CheckEcxelFileNameExpectedValues.UIFilenameEditControlType, uIFilenameEdit.ControlType.ToString());
        }
        
        /// <summary>
        /// CheckReportPanel - Use 'CheckReportPanelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckReportPanel()
        {
            #region Variable Declarations
            WinClient uIPanel1Client = this.UIGatver63437793ASCLAvWindow1.UIItemWindow1.UIPanel1Client;
            #endregion

            // Verify that the 'ControlType' property of 'Panel1' client equals 'Client'
            Assert.AreEqual(this.CheckReportPanelExpectedValues.UIPanel1ClientControlType, uIPanel1Client.ControlType.ToString());
        }
        
        /// <summary>
        /// ClickWeekViewButton
        /// </summary>
        public void ClickWeekViewButton()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIUkeRibbonBaseButtonItem = this.UIGatver63437793ASCLAvWindow1.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpViewModeRibbonPageGroup.UIUkeRibbonBaseButtonItem;
            #endregion

            // Click 'Uke' RibbonBaseButtonItem
            Mouse.Click(uIUkeRibbonBaseButtonItem, new Point(35, 10));
        }
        
        /// <summary>
        /// CloseRosterPlanFromPlanTab
        /// </summary>
        public void CloseRosterPlanFromPlanTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnCloseRibbonBaseButtonItem = this.UIArbeidsplanRapport95Window.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRibbonPageGroup17RibbonPageGroup.UIBtnCloseRibbonBaseButtonItem;
            #endregion

            // Click 'btnClose' RibbonBaseButtonItem
            Mouse.Click(uIBtnCloseRibbonBaseButtonItem, new Point(28, 23));
        }
        
        /// <summary>
        /// CloseSysCheckWindow
        /// </summary>
        public void CloseSysCheckWindow()
        {
            #region Variable Declarations
            WinClient uIResultaterfrasystemsClient = this.UIResultaterfrasystemsWindow.UIItemWindow.UIResultaterfrasystemsClient;
            #endregion

            // Click 'Resultater fra systemsjekk / faste SQL scripts' client
            Mouse.Click(uIResultaterfrasystemsClient, new Point(715, 33));
        }
        
        /// <summary>
        /// GoToDate64 - Use 'GoToDate64Params' to pass parameters into this method.
        /// </summary>
        public void GoToDate64()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIVelgdatoBarBaseButtonItem = this.UIGatver64238741ASCLAvWindow.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarBaseButtonItem;
            DXPopupEdit uIPceDatePopupEdit = this.UIGatver64238741ASCLAvWindow.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarItem.UIPopupContainerBarConMenu.UIPpcDatePickerClient.UIPceDatePopupEdit;
            DXButton uIGåtilButton = this.UIGatver64238741ASCLAvWindow.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarItem.UIPopupContainerBarConMenu.UIPpcDatePickerClient.UIGåtilButton;
            #endregion

            // Click 'Velg dato' BarBaseButtonItem
            Mouse.Click(uIVelgdatoBarBaseButtonItem, new Point(49, 10));

            // Type '06.09.2016 [SelectionStart]0' in 'pceDate' PopupEdit
            //ValueAsString
            uIPceDatePopupEdit.ValueAsString = this.GoToDate64Params.UIPceDatePopupEditValueAsString;

            // Click 'Gå til' button
            Mouse.Click(uIGåtilButton, new Point(1, 1));
        }
        
        /// <summary>
        /// GoToShiftBookTab
        /// </summary>
        public void GoToShiftBookTab()
        {
            #region Variable Declarations
            WinClient uIGatver63437793ASCLAvClient = this.UIGatver63437793ASCLAvWindow1.UIItemWindow.UIGatver63437793ASCLAvClient;
            #endregion

            // Click 'Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikka...' client
            Mouse.Click(uIGatver63437793ASCLAvClient, new Point(31, 12));
        }
        
        /// <summary>
        /// InputUserName - Use 'InputUserNameParams' to pass parameters into this method.
        /// </summary>
        public void InputUserName()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UILoginWindow.UIItemWindow1.UIItemEdit;
            WinEdit uIItemEdit1 = this.UILoginWindow.UIItemWindow2.UIItemEdit;
            #endregion

            // Type 'ASCL' in text box
            uIItemEdit.Text = this.InputUserNameParams.UIItemEditText;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.InputUserNameParams.UIItemEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// SelectExtraCause - Use 'SelectExtraCauseParams' to pass parameters into this method.
        /// </summary>
        public void SelectExtraCause()
        {
            #region Variable Declarations
            DXLookUpEdit uICbOvertimeCodeLookUpEdit = this.UIMerarbeidovertidWindow.UIPanClientClient.UINbMenuNavBar.UICbOvertimeCodeLookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.DataModel.OvertimeCode' in 'cbOvertimeCode' LookUpEdit
            //ValueTypeName
            uICbOvertimeCodeLookUpEdit.ValueTypeName = this.SelectExtraCauseParams.UICbOvertimeCodeLookUpEditValueTypeName;

            // Type 'OvertimeCode(Id=242481501)' in 'cbOvertimeCode' LookUpEdit
            //ValueAsString
            uICbOvertimeCodeLookUpEdit.ValueAsString = this.SelectExtraCauseParams.UICbOvertimeCodeLookUpEditValueAsString;
        }
        
        /// <summary>
        /// SelectExtraColumn - Use 'SelectExtraColumnParams' to pass parameters into this method.
        /// </summary>
        public void SelectExtraColumn()
        {
            #region Variable Declarations
            DXLookUpEdit uICbCrewColumnLookUpEdit = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UIGcShiftDetailsClient.UITcRegistrationTypeTabList.UITpNewShiftClient.UICbCrewColumnLookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.DataModel.CrewColumn' in 'cbCrewColumn' LookUpEdit
            //ValueTypeName
            uICbCrewColumnLookUpEdit.ValueTypeName = this.SelectExtraColumnParams.UICbCrewColumnLookUpEditValueTypeName;

            // Type 'CrewColumn(Id=1)' in 'cbCrewColumn' LookUpEdit
            //ValueAsString
            uICbCrewColumnLookUpEdit.ValueAsString = this.SelectExtraColumnParams.UICbCrewColumnLookUpEditValueAsString;
        }
        
        /// <summary>
        /// AddGGToPlan
        /// </summary>
        public void AddGGToPlan()
        {
            #region Variable Declarations
            DXButton uIAnsatteButton = this.UIAnsatteiArbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UIAnsatteButton;
            DXCell uIGundersenGunnarCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UIGundersenGunnarCell;
            DXButton uISimpleButtonButton = this.UILeggtilansatteWindow.UISimpleButtonButton;
            DXButton uIOKButton = this.UIAnsatteiArbeidsplanWindow.UIOKButton;
            #endregion

            // Click 'Ansatte...' button
            Mouse.Click(uIAnsatteButton, new Point(1, 1));

            // Click 'Gundersen, Gunnar' cell
            Mouse.Click(uIGundersenGunnarCell, new Point(49, 7));

            // Click 'SimpleButton' button
            Mouse.Click(uISimpleButtonButton, new Point(1, 1));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        #region Properties
        public virtual AddVacantShiftParams AddVacantShiftParams
        {
            get
            {
                if ((this.mAddVacantShiftParams == null))
                {
                    this.mAddVacantShiftParams = new AddVacantShiftParams();
                }
                return this.mAddVacantShiftParams;
            }
        }
        
        public virtual ChangeDateParams ChangeDateParams
        {
            get
            {
                if ((this.mChangeDateParams == null))
                {
                    this.mChangeDateParams = new ChangeDateParams();
                }
                return this.mChangeDateParams;
            }
        }
        
        public virtual CheckEcxelFileNameExpectedValues CheckEcxelFileNameExpectedValues
        {
            get
            {
                if ((this.mCheckEcxelFileNameExpectedValues == null))
                {
                    this.mCheckEcxelFileNameExpectedValues = new CheckEcxelFileNameExpectedValues();
                }
                return this.mCheckEcxelFileNameExpectedValues;
            }
        }
        
        public virtual CheckReportPanelExpectedValues CheckReportPanelExpectedValues
        {
            get
            {
                if ((this.mCheckReportPanelExpectedValues == null))
                {
                    this.mCheckReportPanelExpectedValues = new CheckReportPanelExpectedValues();
                }
                return this.mCheckReportPanelExpectedValues;
            }
        }
        
        public virtual GoToDate64Params GoToDate64Params
        {
            get
            {
                if ((this.mGoToDate64Params == null))
                {
                    this.mGoToDate64Params = new GoToDate64Params();
                }
                return this.mGoToDate64Params;
            }
        }
        
        public virtual InputUserNameParams InputUserNameParams
        {
            get
            {
                if ((this.mInputUserNameParams == null))
                {
                    this.mInputUserNameParams = new InputUserNameParams();
                }
                return this.mInputUserNameParams;
            }
        }
        
        public virtual SelectExtraCauseParams SelectExtraCauseParams
        {
            get
            {
                if ((this.mSelectExtraCauseParams == null))
                {
                    this.mSelectExtraCauseParams = new SelectExtraCauseParams();
                }
                return this.mSelectExtraCauseParams;
            }
        }
        
        public virtual SelectExtraColumnParams SelectExtraColumnParams
        {
            get
            {
                if ((this.mSelectExtraColumnParams == null))
                {
                    this.mSelectExtraColumnParams = new SelectExtraColumnParams();
                }
                return this.mSelectExtraColumnParams;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UISystemmelding1Window UISystemmelding1Window
        {
            get
            {
                if ((this.mUISystemmelding1Window == null))
                {
                    this.mUISystemmelding1Window = new UISystemmelding1Window();
                }
                return this.mUISystemmelding1Window;
            }
        }
        
        public UIGatver63437793ASCLAvWindow UIGatver63437793ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver63437793ASCLAvWindow == null))
                {
                    this.mUIGatver63437793ASCLAvWindow = new UIGatver63437793ASCLAvWindow();
                }
                return this.mUIGatver63437793ASCLAvWindow;
            }
        }
        
        public UINivåWindow UINivåWindow
        {
            get
            {
                if ((this.mUINivåWindow == null))
                {
                    this.mUINivåWindow = new UINivåWindow();
                }
                return this.mUINivåWindow;
            }
        }
        
        public UIGatver63437793ASCLAvWindow1 UIGatver63437793ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver63437793ASCLAvWindow1 == null))
                {
                    this.mUIGatver63437793ASCLAvWindow1 = new UIGatver63437793ASCLAvWindow1();
                }
                return this.mUIGatver63437793ASCLAvWindow1;
            }
        }
        
        public UIResultaterfrasystemsWindow UIResultaterfrasystemsWindow
        {
            get
            {
                if ((this.mUIResultaterfrasystemsWindow == null))
                {
                    this.mUIResultaterfrasystemsWindow = new UIResultaterfrasystemsWindow();
                }
                return this.mUIResultaterfrasystemsWindow;
            }
        }
        
        public UIPrintPreviewWindow UIPrintPreviewWindow
        {
            get
            {
                if ((this.mUIPrintPreviewWindow == null))
                {
                    this.mUIPrintPreviewWindow = new UIPrintPreviewWindow();
                }
                return this.mUIPrintPreviewWindow;
            }
        }
        
        public UIBook1_ASCLCompatibilWindow UIBook1_ASCLCompatibilWindow
        {
            get
            {
                if ((this.mUIBook1_ASCLCompatibilWindow == null))
                {
                    this.mUIBook1_ASCLCompatibilWindow = new UIBook1_ASCLCompatibilWindow();
                }
                return this.mUIBook1_ASCLCompatibilWindow;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        
        public UIVelgradWindow UIVelgradWindow
        {
            get
            {
                if ((this.mUIVelgradWindow == null))
                {
                    this.mUIVelgradWindow = new UIVelgradWindow();
                }
                return this.mUIVelgradWindow;
            }
        }
        
        public UIArbeidsplanRapport95Window UIArbeidsplanRapport95Window
        {
            get
            {
                if ((this.mUIArbeidsplanRapport95Window == null))
                {
                    this.mUIArbeidsplanRapport95Window = new UIArbeidsplanRapport95Window();
                }
                return this.mUIArbeidsplanRapport95Window;
            }
        }
        
        public UIAnsatteiArbeidsplanWindow UIAnsatteiArbeidsplanWindow
        {
            get
            {
                if ((this.mUIAnsatteiArbeidsplanWindow == null))
                {
                    this.mUIAnsatteiArbeidsplanWindow = new UIAnsatteiArbeidsplanWindow();
                }
                return this.mUIAnsatteiArbeidsplanWindow;
            }
        }
        
        public UIItemWindow13 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow13();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow14 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow14();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow22 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow22();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIIverksetteWindow UIIverksetteWindow
        {
            get
            {
                if ((this.mUIIverksetteWindow == null))
                {
                    this.mUIIverksetteWindow = new UIIverksetteWindow();
                }
                return this.mUIIverksetteWindow;
            }
        }
        
        public UIItemWindow32 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow32();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow42 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow42();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        
        public UIOppdekkingssenterASCWindow UIOppdekkingssenterASCWindow
        {
            get
            {
                if ((this.mUIOppdekkingssenterASCWindow == null))
                {
                    this.mUIOppdekkingssenterASCWindow = new UIOppdekkingssenterASCWindow();
                }
                return this.mUIOppdekkingssenterASCWindow;
            }
        }
        
        public UIVelgansattsomskaldekWindow UIVelgansattsomskaldekWindow
        {
            get
            {
                if ((this.mUIVelgansattsomskaldekWindow == null))
                {
                    this.mUIVelgansattsomskaldekWindow = new UIVelgansattsomskaldekWindow();
                }
                return this.mUIVelgansattsomskaldekWindow;
            }
        }
        
        public UIMerarbeidovertidWindow UIMerarbeidovertidWindow
        {
            get
            {
                if ((this.mUIMerarbeidovertidWindow == null))
                {
                    this.mUIMerarbeidovertidWindow = new UIMerarbeidovertidWindow();
                }
                return this.mUIMerarbeidovertidWindow;
            }
        }
        
        public UIGatver63438164ASCLAvWindow UIGatver63438164ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver63438164ASCLAvWindow == null))
                {
                    this.mUIGatver63438164ASCLAvWindow = new UIGatver63438164ASCLAvWindow();
                }
                return this.mUIGatver63438164ASCLAvWindow;
            }
        }
        
        public UILedigvaktWindow UILedigvaktWindow
        {
            get
            {
                if ((this.mUILedigvaktWindow == null))
                {
                    this.mUILedigvaktWindow = new UILedigvaktWindow();
                }
                return this.mUILedigvaktWindow;
            }
        }
        
        public UIItemWindow51 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow51();
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UILeggtilansatteWindow UILeggtilansatteWindow
        {
            get
            {
                if ((this.mUILeggtilansatteWindow == null))
                {
                    this.mUILeggtilansatteWindow = new UILeggtilansatteWindow();
                }
                return this.mUILeggtilansatteWindow;
            }
        }
        
        public UIGatver64238741ASCLAvWindow UIGatver64238741ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64238741ASCLAvWindow == null))
                {
                    this.mUIGatver64238741ASCLAvWindow = new UIGatver64238741ASCLAvWindow();
                }
                return this.mUIGatver64238741ASCLAvWindow;
            }
        }
        
        public UIVelgansattsomskaldekWindow1 UIVelgansattsomskaldekWindow1
        {
            get
            {
                if ((this.mUIVelgansattsomskaldekWindow1 == null))
                {
                    this.mUIVelgansattsomskaldekWindow1 = new UIVelgansattsomskaldekWindow1();
                }
                return this.mUIVelgansattsomskaldekWindow1;
            }
        }
        #endregion
        
        #region Fields
        private AddVacantShiftParams mAddVacantShiftParams;
        
        private ChangeDateParams mChangeDateParams;
        
        private CheckEcxelFileNameExpectedValues mCheckEcxelFileNameExpectedValues;
        
        private CheckReportPanelExpectedValues mCheckReportPanelExpectedValues;
        
        private GoToDate64Params mGoToDate64Params;
        
        private InputUserNameParams mInputUserNameParams;
        
        private SelectExtraCauseParams mSelectExtraCauseParams;
        
        private SelectExtraColumnParams mSelectExtraColumnParams;
        
        private UILoginWindow mUILoginWindow;
        
        private UISystemmelding1Window mUISystemmelding1Window;
        
        private UIGatver63437793ASCLAvWindow mUIGatver63437793ASCLAvWindow;
        
        private UINivåWindow mUINivåWindow;
        
        private UIGatver63437793ASCLAvWindow1 mUIGatver63437793ASCLAvWindow1;
        
        private UIResultaterfrasystemsWindow mUIResultaterfrasystemsWindow;
        
        private UIPrintPreviewWindow mUIPrintPreviewWindow;
        
        private UIBook1_ASCLCompatibilWindow mUIBook1_ASCLCompatibilWindow;
        
        private UISaveAsWindow mUISaveAsWindow;
        
        private UIVelgradWindow mUIVelgradWindow;
        
        private UIArbeidsplanRapport95Window mUIArbeidsplanRapport95Window;
        
        private UIAnsatteiArbeidsplanWindow mUIAnsatteiArbeidsplanWindow;
        
        private UIItemWindow13 mUIItemWindow;
        
        private UIItemWindow14 mUIItemWindow1;
        
        private UIItemWindow22 mUIItemWindow2;
        
        private UIIverksetteWindow mUIIverksetteWindow;
        
        private UIItemWindow32 mUIItemWindow3;
        
        private UIItemWindow42 mUIItemWindow4;
        
        private UIWpfWindow mUIWpfWindow;
        
        private UIOppdekkingssenterASCWindow mUIOppdekkingssenterASCWindow;
        
        private UIVelgansattsomskaldekWindow mUIVelgansattsomskaldekWindow;
        
        private UIMerarbeidovertidWindow mUIMerarbeidovertidWindow;
        
        private UIGatver63438164ASCLAvWindow mUIGatver63438164ASCLAvWindow;
        
        private UILedigvaktWindow mUILedigvaktWindow;
        
        private UIItemWindow51 mUIItemWindow5;
        
        private UILeggtilansatteWindow mUILeggtilansatteWindow;
        
        private UIGatver64238741ASCLAvWindow mUIGatver64238741ASCLAvWindow;
        
        private UIVelgansattsomskaldekWindow1 mUIVelgansattsomskaldekWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddVacantShift'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AddVacantShiftParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.PositionCategoryViewModel' in 'SearchLookUpEdit' LookUpEdit
        /// </summary>
        public string UISearchLookUpEditLookUpEditValueTypeName = "Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.PositionCategoryViewMod" +
            "el";
        
        /// <summary>
        /// Type 'S - Sykepleier' in 'SearchLookUpEdit' LookUpEdit
        /// </summary>
        public string UISearchLookUpEditLookUpEditValueAsString = "S - Sykepleier";
        
        /// <summary>
        /// Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.RuleSetViewModel' in 'SearchLookUpEdit' LookUpEdit
        /// </summary>
        public string UISearchLookUpEditLookUpEdit1ValueTypeName = "Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.RuleSetViewModel";
        
        /// <summary>
        /// Type 'TURNUS - Turnus 35,5t/uke' in 'SearchLookUpEdit' LookUpEdit
        /// </summary>
        public string UISearchLookUpEditLookUpEdit1ValueAsString = "TURNUS - Turnus 35,5t/uke";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangeDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ChangeDateParams
    {
        
        #region Fields
        /// <summary>
        /// Type '18.04.2016 [SelectionStart]2' in 'pceDate' PopupEdit
        /// </summary>
        public string UIPceDatePopupEditValueAsString = "18.04.2016 [SelectionStart]2";
        
        /// <summary>
        /// Type '{NumPad8}{Tab}{Tab}' in 'pceDate' PopupEdit
        /// </summary>
        public string UIPceDatePopupEditSendKeys = "{NumPad8}{Tab}{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEcxelFileName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckEcxelFileNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'File name:' text box equals 'Edit'
        /// </summary>
        public string UIFilenameEditControlType = "Edit";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckReportPanel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckReportPanelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Panel1' client equals 'Client'
        /// </summary>
        public string UIPanel1ClientControlType = "Client";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'GoToDate64'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class GoToDate64Params
    {
        
        #region Fields
        /// <summary>
        /// Type '06.09.2016 [SelectionStart]0' in 'pceDate' PopupEdit
        /// </summary>
        public string UIPceDatePopupEditValueAsString = "06.09.2016 [SelectionStart]0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InputUserName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class InputUserNameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'ASCL' in text box
        /// </summary>
        public string UIItemEditText = "ASCL";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectExtraCause'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class SelectExtraCauseParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.DataModel.OvertimeCode' in 'cbOvertimeCode' LookUpEdit
        /// </summary>
        public string UICbOvertimeCodeLookUpEditValueTypeName = "Gatsoft.Gat.DataModel.OvertimeCode";
        
        /// <summary>
        /// Type 'OvertimeCode(Id=242481501)' in 'cbOvertimeCode' LookUpEdit
        /// </summary>
        public string UICbOvertimeCodeLookUpEditValueAsString = "OvertimeCode(Id=242481501)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectExtraColumn'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class SelectExtraColumnParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.DataModel.CrewColumn' in 'cbCrewColumn' LookUpEdit
        /// </summary>
        public string UICbCrewColumnLookUpEditValueTypeName = "Gatsoft.Gat.DataModel.CrewColumn";
        
        /// <summary>
        /// Type 'CrewColumn(Id=1)' in 'cbCrewColumn' LookUpEdit
        /// </summary>
        public string UICbCrewColumnLookUpEditValueAsString = "CrewColumn(Id=1)";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmLogin";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UILoginWindow1 UILoginWindow1
        {
            get
            {
                if ((this.mUILoginWindow1 == null))
                {
                    this.mUILoginWindow1 = new UILoginWindow1(this);
                }
                return this.mUILoginWindow1;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UILoginWindow1 mUILoginWindow1;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginWindow1 : WinWindow
    {
        
        public UILoginWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TTabSheet";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UILoginClient UILoginClient
        {
            get
            {
                if ((this.mUILoginClient == null))
                {
                    this.mUILoginClient = new UILoginClient(this);
                }
                return this.mUILoginClient;
            }
        }
        #endregion
        
        #region Fields
        private UILoginClient mUILoginClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginClient : WinClient
    {
        
        public UILoginClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Login";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1Window : WinWindow
    {
        
        public UISystemmelding1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Systemmelding (1)";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmSystemMessage";
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public UIItemWindow3 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow3(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow3 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public UISystemmelding1Client UISystemmelding1Client
        {
            get
            {
                if ((this.mUISystemmelding1Client == null))
                {
                    this.mUISystemmelding1Client = new UISystemmelding1Client(this);
                }
                return this.mUISystemmelding1Client;
            }
        }
        #endregion
        
        #region Fields
        private UISystemmelding1Client mUISystemmelding1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1Client : WinClient
    {
        
        public UISystemmelding1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Systemmelding (1)");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63437793ASCLAvWindow : WinWindow
    {
        
        public UIGatver63437793ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat ver.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: TOP-TESTHOSPITALET HF) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: TOP-TESTHOSPITALET HF) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar : DXMenu
    {
        
        public UIMainmenuMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: TOP-TESTHOSPITALET HF) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBtnDepartmentBarBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnDepartmentBarBaseButtonItem == null))
                {
                    this.mUIBtnDepartmentBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnDepartmentBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDepartment";
                    this.mUIBtnDepartmentBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIBtnDepartmentBarBaseButtonItem.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: TOP-TESTHOSPITALET HF) - Vaktbok");
                    #endregion
                }
                return this.mUIBtnDepartmentBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBtnDepartmentBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINivåWindow : DXWindow
    {
        
        public UINivåWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Nivå";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControl1Custom : DXTestControl
    {
        
        public UIGsLayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup1LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayDepartmentsLayoutControlItem UILayDepartmentsLayoutControlItem
        {
            get
            {
                if ((this.mUILayDepartmentsLayoutControlItem == null))
                {
                    this.mUILayDepartmentsLayoutControlItem = new UILayDepartmentsLayoutControlItem(this);
                }
                return this.mUILayDepartmentsLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayDepartmentsLayoutControlItem mUILayDepartmentsLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayDepartmentsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayDepartmentsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LayDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGbDepartmentsClient UIGbDepartmentsClient
        {
            get
            {
                if ((this.mUIGbDepartmentsClient == null))
                {
                    this.mUIGbDepartmentsClient = new UIGbDepartmentsClient(this);
                }
                return this.mUIGbDepartmentsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGbDepartmentsClient mUIGbDepartmentsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGbDepartmentsClient : DXTestControl
    {
        
        public UIGbDepartmentsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gbDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGDepartmentsTable UIGDepartmentsTable
        {
            get
            {
                if ((this.mUIGDepartmentsTable == null))
                {
                    this.mUIGDepartmentsTable = new UIGDepartmentsTable(this);
                }
                return this.mUIGDepartmentsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGDepartmentsTable mUIGDepartmentsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGDepartmentsTable : DXGrid
    {
        
        public UIGDepartmentsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXScrollBar UIVCrkScrollBarScrollBarControl
        {
            get
            {
                if ((this.mUIVCrkScrollBarScrollBarControl == null))
                {
                    this.mUIVCrkScrollBarScrollBarControl = new DXScrollBar(this);
                    #region Search Criteria
                    this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartmentsVCrkScrollBar";
                    this.mUIVCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "VCrkScrollBar";
                    this.mUIVCrkScrollBarScrollBarControl.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIVCrkScrollBarScrollBarControl;
            }
        }
        
        public DXCell UIGDepartmentsGridContCell
        {
            get
            {
                if ((this.mUIGDepartmentsGridContCell == null))
                {
                    this.mUIGDepartmentsGridContCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGDepartmentsGridContCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartmentsGridControlCell[View]gvDepartments[Row]54[Column]cDepName";
                    this.mUIGDepartmentsGridContCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGDepartmentsGridContCell.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIGDepartmentsGridContCell;
            }
        }
        #endregion
        
        #region Fields
        private DXScrollBar mUIVCrkScrollBarScrollBarControl;
        
        private DXCell mUIGDepartmentsGridContCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63437793ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver63437793ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat ver.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UIStandaloneBarDockConCustom1 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom1(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow31 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow31(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow41 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow41(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIItemWindow6 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow6(this);
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UIItemWindow7 UIItemWindow7
        {
            get
            {
                if ((this.mUIItemWindow7 == null))
                {
                    this.mUIItemWindow7 = new UIItemWindow7(this);
                }
                return this.mUIItemWindow7;
            }
        }
        
        public UIPcMainPanelClient UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        
        private UIStandaloneBarDockConCustom1 mUIStandaloneBarDockConCustom;
        
        private UIItemWindow4 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        
        private UIItemWindow31 mUIItemWindow3;
        
        private UIItemWindow41 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UIItemWindow6 mUIItemWindow6;
        
        private UIItemWindow7 mUIItemWindow7;
        
        private UIPcMainPanelClient mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpMainMenuRibbonPage : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIGrpViewModeRibbonPageGroup UIGrpViewModeRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpViewModeRibbonPageGroup == null))
                {
                    this.mUIGrpViewModeRibbonPageGroup = new UIGrpViewModeRibbonPageGroup(this);
                }
                return this.mUIGrpViewModeRibbonPageGroup;
            }
        }
        
        public UIGrpVacancyRibbonPageGroup UIGrpVacancyRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpVacancyRibbonPageGroup == null))
                {
                    this.mUIGrpVacancyRibbonPageGroup = new UIGrpVacancyRibbonPageGroup(this);
                }
                return this.mUIGrpVacancyRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpViewModeRibbonPageGroup mUIGrpViewModeRibbonPageGroup;
        
        private UIGrpVacancyRibbonPageGroup mUIGrpVacancyRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpViewModeRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpViewModeRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpViewMode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIUkeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIUkeRibbonBaseButtonItem == null))
                {
                    this.mUIUkeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIUkeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRangeWeek";
                    this.mUIUkeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIUkeRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    this.mUIUkeRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIUkeRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIUkeRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpVacancyRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpVacancyRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpVacancy";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIOppdekkingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppdekkingRibbonBaseButtonItem == null))
                {
                    this.mUIOppdekkingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppdekkingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnVacancyOrder";
                    this.mUIOppdekkingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppdekkingRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    this.mUIOppdekkingRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIOppdekkingRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIOppdekkingRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom1 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar1 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar1(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar1 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar1 : DXMenu
    {
        
        public UIMainmenuMenuBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIVelgdatoBarBaseButtonItem
        {
            get
            {
                if ((this.mUIVelgdatoBarBaseButtonItem == null))
                {
                    this.mUIVelgdatoBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIVelgdatoBarBaseButtonItem.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    this.mUIVelgdatoBarBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIVelgdatoBarBaseButtonItem;
            }
        }
        
        public UIVelgdatoBarItem UIVelgdatoBarItem
        {
            get
            {
                if ((this.mUIVelgdatoBarItem == null))
                {
                    this.mUIVelgdatoBarItem = new UIVelgdatoBarItem(this);
                }
                return this.mUIVelgdatoBarItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIVelgdatoBarBaseButtonItem;
        
        private UIVelgdatoBarItem mUIVelgdatoBarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgdatoBarItem : DXMenuItem
    {
        
        public UIVelgdatoBarItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupContainerBarConMenu : DXMenu
    {
        
        public UIPopupContainerBarConMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIPpcDatePickerClient UIPpcDatePickerClient
        {
            get
            {
                if ((this.mUIPpcDatePickerClient == null))
                {
                    this.mUIPpcDatePickerClient = new UIPpcDatePickerClient(this);
                }
                return this.mUIPpcDatePickerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcDatePickerClient mUIPpcDatePickerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPpcDatePickerClient : DXTestControl
    {
        
        public UIPpcDatePickerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UILcDatePickerCustom UILcDatePickerCustom
        {
            get
            {
                if ((this.mUILcDatePickerCustom == null))
                {
                    this.mUILcDatePickerCustom = new UILcDatePickerCustom(this);
                }
                return this.mUILcDatePickerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcDatePickerCustom mUILcDatePickerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcDatePickerCustom : DXTestControl
    {
        
        public UILcDatePickerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        
        public UILayoutControlGroup1LayoutGroup1 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup1(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        
        private UILayoutControlGroup1LayoutGroup1 mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup1LayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem3LayoutControlItem UILayoutControlItem3LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem3LayoutControlItem == null))
                {
                    this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem(this);
                }
                return this.mUILayoutControlItem3LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem3LayoutControlItem mUILayoutControlItem3LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem3LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem3LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXButton UIGåtilButton
        {
            get
            {
                if ((this.mUIGåtilButton == null))
                {
                    this.mUIGåtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGoToDate";
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGåtilButton.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    #endregion
                }
                return this.mUIGåtilButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGåtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver63437793ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver63437793ASCLAvClient == null))
                {
                    this.mUIGatver63437793ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver63437793ASCLAvClient.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    this.mUIGatver63437793ASCLAvClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGatver63437793ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver63437793ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
                    this.mUIItemEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow31 : WinWindow
    {
        
        public UIItemWindow31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
                    this.mUIItemEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow41 : WinWindow
    {
        
        public UIItemWindow41(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicMenuButton";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIRapportsenterClient
        {
            get
            {
                if ((this.mUIRapportsenterClient == null))
                {
                    this.mUIRapportsenterClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIRapportsenterClient.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
                    this.mUIRapportsenterClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIRapportsenterClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIRapportsenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "14";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIRapportsenterClient
        {
            get
            {
                if ((this.mUIRapportsenterClient == null))
                {
                    this.mUIRapportsenterClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIRapportsenterClient.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
                    this.mUIRapportsenterClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIRapportsenterClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIRapportsenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient : DXTestControl
    {
        
        public UIPcMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList : DXTestControl
    {
        
        public UITcPanListsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient : DXTestControl
    {
        
        public UITpRosterPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient : DXTestControl
    {
        
        public UIPnlGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlansTable UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlansTable mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlansTable : DXGrid
    {
        
        public UIGcRosterPlansTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXCell UIRapport95Cell
        {
            get
            {
                if ((this.mUIRapport95Cell == null))
                {
                    this.mUIRapport95Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIRapport95Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]0[Column]gcolPlan";
                    this.mUIRapport95Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIRapport95Cell.WindowTitles.Add("Gat ver. 6.3.4.37793 - (ASCL - Avd: 95-Statistikkavd) - Rapportsenter ");
                    this.mUIRapport95Cell.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIRapport95Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIRapport95Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIResultaterfrasystemsWindow : WinWindow
    {
        
        public UIResultaterfrasystemsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Resultater fra systemsjekk / faste SQL scripts";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmSQLViewResult";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public UIItemWindow8 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow8(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow8 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public WinClient UIResultaterfrasystemsClient
        {
            get
            {
                if ((this.mUIResultaterfrasystemsClient == null))
                {
                    this.mUIResultaterfrasystemsClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIResultaterfrasystemsClient.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
                    #endregion
                }
                return this.mUIResultaterfrasystemsClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIResultaterfrasystemsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPrintPreviewWindow : WinWindow
    {
        
        public UIPrintPreviewWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Print Preview";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TdxfmStdPreview";
            this.WindowTitles.Add("Print Preview");
            #endregion
        }
        
        #region Properties
        public UIPrintPreviewTitleBar UIPrintPreviewTitleBar
        {
            get
            {
                if ((this.mUIPrintPreviewTitleBar == null))
                {
                    this.mUIPrintPreviewTitleBar = new UIPrintPreviewTitleBar(this);
                }
                return this.mUIPrintPreviewTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIPrintPreviewTitleBar mUIPrintPreviewTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPrintPreviewTitleBar : WinTitleBar
    {
        
        public UIPrintPreviewTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Print Preview");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Print Preview");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBook1_ASCLCompatibilWindow : WinWindow
    {
        
        public UIBook1_ASCLCompatibilWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Book1", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "XLMAIN";
            this.WindowTitles.Add("Book1_ASCL  [Compatibility Mode] - Excel");
            this.WindowTitles.Add("Book1_ASCL_save  [Compatibility Mode] - Excel");
            this.WindowTitles.Add("Book1_ASCL");
            #endregion
        }
        
        #region Properties
        public UIItemWindow9 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow9(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIFileMenuBar UIFileMenuBar
        {
            get
            {
                if ((this.mUIFileMenuBar == null))
                {
                    this.mUIFileMenuBar = new UIFileMenuBar(this);
                }
                return this.mUIFileMenuBar;
            }
        }
        
        public UIPickaFolderGroup UIPickaFolderGroup
        {
            get
            {
                if ((this.mUIPickaFolderGroup == null))
                {
                    this.mUIPickaFolderGroup = new UIPickaFolderGroup(this);
                }
                return this.mUIPickaFolderGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow9 mUIItemWindow;
        
        private UIFileMenuBar mUIFileMenuBar;
        
        private UIPickaFolderGroup mUIPickaFolderGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("Book1_ASCL  [Compatibility Mode] - Excel");
            this.WindowTitles.Add("Book1_ASCL_save  [Compatibility Mode] - Excel");
            #endregion
        }
        
        #region Properties
        public UIRibbonPropertyPage UIRibbonPropertyPage
        {
            get
            {
                if ((this.mUIRibbonPropertyPage == null))
                {
                    this.mUIRibbonPropertyPage = new UIRibbonPropertyPage(this);
                }
                return this.mUIRibbonPropertyPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPropertyPage mUIRibbonPropertyPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonPropertyPage : WinControl
    {
        
        public UIRibbonPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Ribbon";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Book1_ASCL  [Compatibility Mode] - Excel");
            this.WindowTitles.Add("Book1_ASCL_save  [Compatibility Mode] - Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UIFileTabButton
        {
            get
            {
                if ((this.mUIFileTabButton == null))
                {
                    this.mUIFileTabButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFileTabButton.SearchProperties[WinButton.PropertyNames.Name] = "File Tab";
                    this.mUIFileTabButton.WindowTitles.Add("Book1_ASCL  [Compatibility Mode] - Excel");
                    #endregion
                }
                return this.mUIFileTabButton;
            }
        }
        
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Book1_ASCL_save  [Compatibility Mode] - Excel");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFileTabButton;
        
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFileMenuBar : WinMenuBar
    {
        
        public UIFileMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "File";
            this.WindowTitles.Add("Book1_ASCL  [Compatibility Mode] - Excel");
            #endregion
        }
        
        #region Properties
        public WinTabPage UISaveAsTabPage
        {
            get
            {
                if ((this.mUISaveAsTabPage == null))
                {
                    this.mUISaveAsTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUISaveAsTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Save As";
                    this.mUISaveAsTabPage.WindowTitles.Add("Book1_ASCL  [Compatibility Mode] - Excel");
                    #endregion
                }
                return this.mUISaveAsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUISaveAsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPickaFolderGroup : WinGroup
    {
        
        public UIPickaFolderGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Pick a Folder";
            this.WindowTitles.Add("Book1_ASCL  [Compatibility Mode] - Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UIBrowseButton
        {
            get
            {
                if ((this.mUIBrowseButton == null))
                {
                    this.mUIBrowseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBrowseButton.SearchProperties[WinButton.PropertyNames.Name] = "Browse";
                    this.mUIBrowseButton.WindowTitles.Add("Book1_ASCL  [Compatibility Mode] - Excel");
                    #endregion
                }
                return this.mUIBrowseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBrowseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIItemWindow10 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow10(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UITreeViewWindow UITreeViewWindow
        {
            get
            {
                if ((this.mUITreeViewWindow == null))
                {
                    this.mUITreeViewWindow = new UITreeViewWindow(this);
                }
                return this.mUITreeViewWindow;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow10 mUIItemWindow;
        
        private UITreeViewWindow mUITreeViewWindow;
        
        private UISaveWindow mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow10 : WinWindow
    {
        
        public UIItemWindow10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeViewWindow : WinWindow
    {
        
        public UITreeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UITreeViewTree UITreeViewTree
        {
            get
            {
                if ((this.mUITreeViewTree == null))
                {
                    this.mUITreeViewTree = new UITreeViewTree(this);
                }
                return this.mUITreeViewTree;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewTree mUITreeViewTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeViewTree : WinTree
    {
        
        public UITreeViewTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTree.PropertyNames.Name] = "Namespace Tree Control";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIDesktopTreeItem UIDesktopTreeItem
        {
            get
            {
                if ((this.mUIDesktopTreeItem == null))
                {
                    this.mUIDesktopTreeItem = new UIDesktopTreeItem(this);
                }
                return this.mUIDesktopTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopTreeItem mUIDesktopTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDesktopTreeItem : WinTreeItem
    {
        
        public UIDesktopTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Desktop";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIComputerTreeItem UIComputerTreeItem
        {
            get
            {
                if ((this.mUIComputerTreeItem == null))
                {
                    this.mUIComputerTreeItem = new UIComputerTreeItem(this);
                }
                return this.mUIComputerTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIComputerTreeItem mUIComputerTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIComputerTreeItem : WinTreeItem
    {
        
        public UIComputerTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Computer";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UILocalDiskCTreeItem
        {
            get
            {
                if ((this.mUILocalDiskCTreeItem == null))
                {
                    this.mUILocalDiskCTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUILocalDiskCTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Local Disk (C:)";
                    this.mUILocalDiskCTreeItem.SearchProperties["Value"] = "2";
                    this.mUILocalDiskCTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUILocalDiskCTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUILocalDiskCTreeItem.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUILocalDiskCTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUILocalDiskCTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgradWindow : WinWindow
    {
        
        public UIVelgradWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Velg rad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmGridSearch";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow12 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow12(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow12 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TEdit";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Velg rad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIArbeidsplanRapport95Window : DXWindow
    {
        
        public UIArbeidsplanRapport95Window()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan: Rapport 95 (Planen er låst av deg)";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
            this.WindowTitles.Add("Arbeidsplan:");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        
        public UIRibbonPageGroup9RibbonPageGroup UIRibbonPageGroup9RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup9RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup9RibbonPageGroup = new UIRibbonPageGroup9RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup9RibbonPageGroup;
            }
        }
        
        public UIGrpEffectuateRevolviRibbonPageGroup UIGrpEffectuateRevolviRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateRevolviRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateRevolviRibbonPageGroup = new UIGrpEffectuateRevolviRibbonPageGroup(this);
                }
                return this.mUIGrpEffectuateRevolviRibbonPageGroup;
            }
        }
        
        public UIRibbonPageGroup17RibbonPageGroup UIRibbonPageGroup17RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup17RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup17RibbonPageGroup = new UIRibbonPageGroup17RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup17RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup mUIRpgPlanRibbonPageGroup;
        
        private UIRibbonPageGroup9RibbonPageGroup mUIRibbonPageGroup9RibbonPageGroup;
        
        private UIGrpEffectuateRevolviRibbonPageGroup mUIGrpEffectuateRevolviRibbonPageGroup;
        
        private UIRibbonPageGroup17RibbonPageGroup mUIRibbonPageGroup17RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsatteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsatteRibbonBaseButtonItem == null))
                {
                    this.mUIAnsatteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsatteRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIAnsatteRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsatteRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonPageGroup9RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup9RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigerRibbonBaseButtonItem == null))
                {
                    this.mUIRedigerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIRedigerRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigerRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEffectuateRevolviRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateRevolviRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonPageGroup17RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup17RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup17";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBtnCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: Rapport 95 (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIBtnCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_4";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_5";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXTextEdit UIRow1ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow1ColumnRosterCellEdit == null))
                {
                    this.mUIRow1ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]1[Column]RosterCell_5";
                    this.mUIRow1ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow1ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan: Rapport 95 (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow1ColumnRosterCellEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXTextEdit mUIRow1ColumnRosterCellEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAnsatteiArbeidsplanWindow : DXWindow
    {
        
        public UIAnsatteiArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte i Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlTopButtonsClient UIPnlTopButtonsClient
        {
            get
            {
                if ((this.mUIPnlTopButtonsClient == null))
                {
                    this.mUIPnlTopButtonsClient = new UIPnlTopButtonsClient(this);
                }
                return this.mUIPnlTopButtonsClient;
            }
        }
        
        public UIPnlControlClient UIPnlControlClient
        {
            get
            {
                if ((this.mUIPnlControlClient == null))
                {
                    this.mUIPnlControlClient = new UIPnlControlClient(this);
                }
                return this.mUIPnlControlClient;
            }
        }
        
        public UIGSPanelControlClient UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UIPanelControlOuterClient UIPanelControlOuterClient
        {
            get
            {
                if ((this.mUIPanelControlOuterClient == null))
                {
                    this.mUIPanelControlOuterClient = new UIPanelControlOuterClient(this);
                }
                return this.mUIPanelControlOuterClient;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlTopButtonsClient mUIPnlTopButtonsClient;
        
        private UIPnlControlClient mUIPnlControlClient;
        
        private UIGSPanelControlClient mUIGSPanelControlClient;
        
        private UIPanelControlOuterClient mUIPanelControlOuterClient;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlTopButtonsClient : DXTestControl
    {
        
        public UIPnlTopButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTopButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UILeggtilvakantelinjerButton
        {
            get
            {
                if ((this.mUILeggtilvakantelinjerButton == null))
                {
                    this.mUILeggtilvakantelinjerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilvakantelinjerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddVakant";
                    this.mUILeggtilvakantelinjerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUILeggtilvakantelinjerButton.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUILeggtilvakantelinjerButton;
            }
        }
        
        public DXButton UILeggtilansatteButton
        {
            get
            {
                if ((this.mUILeggtilansatteButton == null))
                {
                    this.mUILeggtilansatteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilansatteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddEmployees";
                    this.mUILeggtilansatteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILeggtilansatteButton.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUILeggtilansatteButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILeggtilvakantelinjerButton;
        
        private DXButton mUILeggtilansatteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlControlClient : DXTestControl
    {
        
        public UIPnlControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpSelectedEmployeesClient UIGrpSelectedEmployeesClient
        {
            get
            {
                if ((this.mUIGrpSelectedEmployeesClient == null))
                {
                    this.mUIGrpSelectedEmployeesClient = new UIGrpSelectedEmployeesClient(this);
                }
                return this.mUIGrpSelectedEmployeesClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpSelectedEmployeesClient mUIGrpSelectedEmployeesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpSelectedEmployeesClient : DXTestControl
    {
        
        public UIGrpSelectedEmployeesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpSelectedEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcEmployeesTable : DXGrid
    {
        
        public UIGcEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ansatte i Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]1[Column]gcolSelectedAll";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]2[Column]gcolSelectedAll";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient : DXTestControl
    {
        
        public UIGSPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient1 UIGSPanelControlClient1
        {
            get
            {
                if ((this.mUIGSPanelControlClient1 == null))
                {
                    this.mUIGSPanelControlClient1 = new UIGSPanelControlClient1(this);
                }
                return this.mUIGSPanelControlClient1;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ansatte i Arbeidsplan");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient1 mUIGSPanelControlClient1;
        
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient1 : DXTestControl
    {
        
        public UIGSPanelControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlDropDowns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit == null))
                {
                    this.mUIGSLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gslePosition";
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit;
            }
        }
        
        public DXLookUpEdit UIGSLookUpEditLookUpEdit1
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit1 == null))
                {
                    this.mUIGSLookUpEditLookUpEdit1 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gsleRules";
                    this.mUIGSLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit1;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit;
        
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlOuterClient : DXTestControl
    {
        
        public UIPanelControlOuterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlLeftClient UIPanelControlLeftClient
        {
            get
            {
                if ((this.mUIPanelControlLeftClient == null))
                {
                    this.mUIPanelControlLeftClient = new UIPanelControlLeftClient(this);
                }
                return this.mUIPanelControlLeftClient;
            }
        }
        
        public UIPanelControlClient UIPanelControlClient
        {
            get
            {
                if ((this.mUIPanelControlClient == null))
                {
                    this.mUIPanelControlClient = new UIPanelControlClient(this);
                }
                return this.mUIPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlLeftClient mUIPanelControlLeftClient;
        
        private UIPanelControlClient mUIPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlLeftClient : DXTestControl
    {
        
        public UIPanelControlLeftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIVakantButton
        {
            get
            {
                if ((this.mUIVakantButton == null))
                {
                    this.mUIVakantButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVakantButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonAddVacant";
                    this.mUIVakantButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUIVakantButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIVakantButton;
            }
        }
        
        public UITreeListEmployeesTreeList UITreeListEmployeesTreeList
        {
            get
            {
                if ((this.mUITreeListEmployeesTreeList == null))
                {
                    this.mUITreeListEmployeesTreeList = new UITreeListEmployeesTreeList(this);
                }
                return this.mUITreeListEmployeesTreeList;
            }
        }
        
        public DXButton UIAnsatteButton
        {
            get
            {
                if ((this.mUIAnsatteButton == null))
                {
                    this.mUIAnsatteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonAdd";
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUIAnsatteButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVakantButton;
        
        private UITreeListEmployeesTreeList mUITreeListEmployeesTreeList;
        
        private DXButton mUIAnsatteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeListEmployeesTreeList : DXTreeList
    {
        
        public UITreeListEmployeesTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "treeListEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode3TreeListNode UINode3TreeListNode
        {
            get
            {
                if ((this.mUINode3TreeListNode == null))
                {
                    this.mUINode3TreeListNode = new UINode3TreeListNode(this);
                }
                return this.mUINode3TreeListNode;
            }
        }
        
        public UINode1TreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new UINode1TreeListNode(this);
                }
                return this.mUINode1TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode3TreeListNode mUINode3TreeListNode;
        
        private UINode1TreeListNode mUINode1TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode3TreeListNode : DXTreeListNode
    {
        
        public UINode3TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode : DXTreeListNode
    {
        
        public UINode0TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItemTreeListCell
        {
            get
            {
                if ((this.mUIItemTreeListCell == null))
                {
                    this.mUIItemTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItemTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colGroupMembershipDisplayName";
                    this.mUIItemTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItemTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItemTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItemTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode1TreeListNode : DXTreeListNode
    {
        
        public UINode1TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode1 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode1(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode1 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINode0TreeListNode1 : DXTreeListNode
    {
        
        public UINode0TreeListNode1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItemTreeListCell
        {
            get
            {
                if ((this.mUIItemTreeListCell == null))
                {
                    this.mUIItemTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItemTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colFromDateMain";
                    this.mUIItemTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItemTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItemTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItemTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlClient : DXTestControl
    {
        
        public UIPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            #endregion
        }
        
        #region Properties
        public UIPanelControlClient1 UIPanelControlClient
        {
            get
            {
                if ((this.mUIPanelControlClient == null))
                {
                    this.mUIPanelControlClient = new UIPanelControlClient1(this);
                }
                return this.mUIPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlClient1 mUIPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlClient1 : DXTestControl
    {
        
        public UIPanelControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeEditorsViewCustom UIEmployeeEditorsViewCustom
        {
            get
            {
                if ((this.mUIEmployeeEditorsViewCustom == null))
                {
                    this.mUIEmployeeEditorsViewCustom = new UIEmployeeEditorsViewCustom(this);
                }
                return this.mUIEmployeeEditorsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeEditorsViewCustom mUIEmployeeEditorsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeEditorsViewCustom : DXTestControl
    {
        
        public UIEmployeeEditorsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeEditorsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeEditorsView";
            #endregion
        }
        
        #region Properties
        public UIPanelControlClient2 UIPanelControlClient
        {
            get
            {
                if ((this.mUIPanelControlClient == null))
                {
                    this.mUIPanelControlClient = new UIPanelControlClient2(this);
                }
                return this.mUIPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlClient2 mUIPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanelControlClient2 : DXTestControl
    {
        
        public UIPanelControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIXtraScrollableControScrollableControl UIXtraScrollableControScrollableControl
        {
            get
            {
                if ((this.mUIXtraScrollableControScrollableControl == null))
                {
                    this.mUIXtraScrollableControScrollableControl = new UIXtraScrollableControScrollableControl(this);
                }
                return this.mUIXtraScrollableControScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraScrollableControScrollableControl mUIXtraScrollableControScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIXtraScrollableControScrollableControl : DXScrollableControl
    {
        
        public UIXtraScrollableControScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            #endregion
        }
        
        #region Properties
        public UIGroupControlViewHostCustom UIGroupControlViewHostCustom
        {
            get
            {
                if ((this.mUIGroupControlViewHostCustom == null))
                {
                    this.mUIGroupControlViewHostCustom = new UIGroupControlViewHostCustom(this);
                }
                return this.mUIGroupControlViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlViewHostCustom mUIGroupControlViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGroupControlViewHostCustom : DXTestControl
    {
        
        public UIGroupControlViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient mUIGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGroupControlClient : DXTestControl
    {
        
        public UIGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerLineVCustom UIEmployeeManagerLineVCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerLineVCustom == null))
                {
                    this.mUIEmployeeManagerLineVCustom = new UIEmployeeManagerLineVCustom(this);
                }
                return this.mUIEmployeeManagerLineVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerLineVCustom mUIEmployeeManagerLineVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeManagerLineVCustom : DXTestControl
    {
        
        public UIEmployeeManagerLineVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerLineView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerLineView";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UISearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUISearchLookUpEditLookUpEdit == null))
                {
                    this.mUISearchLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUISearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "ePositionCategory";
                    this.mUISearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
                    #endregion
                }
                return this.mUISearchLookUpEditLookUpEdit;
            }
        }
        
        public DXLookUpEdit UISearchLookUpEditLookUpEdit1
        {
            get
            {
                if ((this.mUISearchLookUpEditLookUpEdit1 == null))
                {
                    this.mUISearchLookUpEditLookUpEdit1 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUISearchLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "eRuleSet";
                    this.mUISearchLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
                    #endregion
                }
                return this.mUISearchLookUpEditLookUpEdit1;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUISearchLookUpEditLookUpEdit;
        
        private DXLookUpEdit mUISearchLookUpEditLookUpEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UIBarSubItemLink0MenuItem UIBarSubItemLink0MenuItem
        {
            get
            {
                if ((this.mUIBarSubItemLink0MenuItem == null))
                {
                    this.mUIBarSubItemLink0MenuItem = new UIBarSubItemLink0MenuItem(this);
                }
                return this.mUIBarSubItemLink0MenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIBarSubItemLink0MenuItem mUIBarSubItemLink0MenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBarSubItemLink0MenuItem : DXMenuItem
    {
        
        public UIBarSubItemLink0MenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink0MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink0MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink0MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink0MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow14 : DXWindow
    {
        
        public UIItemWindow14()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("GT-4003 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow22 : WinWindow
    {
        
        public UIItemWindow22()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UISubMenuBarControlMenu UISubMenuBarControlMenu
        {
            get
            {
                if ((this.mUISubMenuBarControlMenu == null))
                {
                    this.mUISubMenuBarControlMenu = new UISubMenuBarControlMenu(this);
                }
                return this.mUISubMenuBarControlMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu1(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu11 UIPopupMenuBarControlMenu1
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu1 == null))
                {
                    this.mUIPopupMenuBarControlMenu1 = new UIPopupMenuBarControlMenu11(this);
                }
                return this.mUIPopupMenuBarControlMenu1;
            }
        }
        #endregion
        
        #region Fields
        private UISubMenuBarControlMenu mUISubMenuBarControlMenu;
        
        private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu;
        
        private UIPopupMenuBarControlMenu11 mUIPopupMenuBarControlMenu1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISubMenuBarControlMenu : DXMenu
    {
        
        public UISubMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SubMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SubMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBtnEffectuateNextPerMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnEffectuateNextPerMenuBaseButtonItem == null))
                {
                    this.mUIBtnEffectuateNextPerMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnEffectuateNextPerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuateNextPeriod";
                    this.mUIBtnEffectuateNextPerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnEffectuateNextPerMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBtnEffectuateNextPerMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupMenuBarControlMenu1 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBiOkMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBiOkMenuBaseButtonItem == null))
                {
                    this.mUIBiOkMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biOk";
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBiOkMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIGenerernyledigvaktMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIGenerernyledigvaktMenuBaseButtonItem == null))
                {
                    this.mUIGenerernyledigvaktMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIGenerernyledigvaktMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIGenerernyledigvaktMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIGenerernyledigvaktMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBiOkMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIGenerernyledigvaktMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupMenuBarControlMenu11 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBiOkMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBiOkMenuBaseButtonItem == null))
                {
                    this.mUIBiOkMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biOk";
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBiOkMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBiOkMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIIverksetteWindow : DXWindow
    {
        
        public UIIverksetteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Iverksette";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIPnlButtonsClient UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlButtonsClient mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient : DXTestControl
    {
        
        public UIPnlButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXButton UIIverksett1linjerButton
        {
            get
            {
                if ((this.mUIIverksett1linjerButton == null))
                {
                    this.mUIIverksett1linjerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIIverksett1linjerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuate";
                    this.mUIIverksett1linjerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIIverksett1linjerButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIverksett1linjerButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIIverksett1linjerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow32 : DXWindow
    {
        
        public UIItemWindow32()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4044 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4044 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL-4044 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow42 : DXWindow
    {
        
        public UIItemWindow42()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Lønnsberegning ved iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient2 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient2(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient2 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient2 : DXTestControl
    {
        
        public UIGSPanelControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcButtonPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOppdekkingssenterASCWindow : DXWindow
    {
        
        public UIOppdekkingssenterASCWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppdekkingssenter (ASCL/95)";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom1 UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom1(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        
        public UIRcOrderRibbon1 UIRcOrderRibbon
        {
            get
            {
                if ((this.mUIRcOrderRibbon == null))
                {
                    this.mUIRcOrderRibbon = new UIRcOrderRibbon1(this);
                }
                return this.mUIRcOrderRibbon;
            }
        }
        
        public UIGcOrdersTable1 UIGcOrdersTable
        {
            get
            {
                if ((this.mUIGcOrdersTable == null))
                {
                    this.mUIGcOrdersTable = new UIGcOrdersTable1(this);
                }
                return this.mUIGcOrdersTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom1 mUIGsLayoutControl1Custom;
        
        private DXButton mUICloseButton;
        
        private UIRcOrderRibbon1 mUIRcOrderRibbon;
        
        private UIGcOrdersTable1 mUIGcOrdersTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControl1Custom1 : DXTestControl
    {
        
        public UIGsLayoutControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup2 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup2(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup2 mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup1LayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem1LayoutControlItem UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        
        public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem1LayoutControlItem mUILayoutControlItem1LayoutControlItem;
        
        private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem1LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public UIGcOrdersTable UIGcOrdersTable
        {
            get
            {
                if ((this.mUIGcOrdersTable == null))
                {
                    this.mUIGcOrdersTable = new UIGcOrdersTable(this);
                }
                return this.mUIGcOrdersTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcOrdersTable mUIGcOrdersTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcOrdersTable : DXGrid
    {
        
        public UIGcOrdersTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcOrders";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem19042016Cell
        {
            get
            {
                if ((this.mUIItem19042016Cell == null))
                {
                    this.mUIItem19042016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem19042016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcOrdersGridControlCell[View]gvOrders[Row]0[Column]gccDate";
                    this.mUIItem19042016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem19042016Cell.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
                    #endregion
                }
                return this.mUIItem19042016Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem19042016Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public UIRcOrderRibbon UIRcOrderRibbon
        {
            get
            {
                if ((this.mUIRcOrderRibbon == null))
                {
                    this.mUIRcOrderRibbon = new UIRcOrderRibbon(this);
                }
                return this.mUIRcOrderRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcOrderRibbon mUIRcOrderRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcOrderRibbon : DXRibbon
    {
        
        public UIRcOrderRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcOrder";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public UIRpOrderRibbonPage UIRpOrderRibbonPage
        {
            get
            {
                if ((this.mUIRpOrderRibbonPage == null))
                {
                    this.mUIRpOrderRibbonPage = new UIRpOrderRibbonPage(this);
                }
                return this.mUIRpOrderRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpOrderRibbonPage mUIRpOrderRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpOrderRibbonPage : DXRibbonPage
    {
        
        public UIRpOrderRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpOrder";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public UIRpgOtherActionsRibbonPageGroup UIRpgOtherActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgOtherActionsRibbonPageGroup == null))
                {
                    this.mUIRpgOtherActionsRibbonPageGroup = new UIRpgOtherActionsRibbonPageGroup(this);
                }
                return this.mUIRpgOtherActionsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgOtherActionsRibbonPageGroup mUIRpgOtherActionsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgOtherActionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgOtherActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgOtherActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIDekkoppRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIDekkoppRibbonBaseButtonItem == null))
                {
                    this.mUIDekkoppRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIDekkoppRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCover";
                    this.mUIDekkoppRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIDekkoppRibbonBaseButtonItem.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
                    #endregion
                }
                return this.mUIDekkoppRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIDekkoppRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcOrderRibbon1 : DXRibbon
    {
        
        public UIRcOrderRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcOrder";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public UIRpOrderRibbonPage1 UIRpOrderRibbonPage
        {
            get
            {
                if ((this.mUIRpOrderRibbonPage == null))
                {
                    this.mUIRpOrderRibbonPage = new UIRpOrderRibbonPage1(this);
                }
                return this.mUIRpOrderRibbonPage;
            }
        }
        
        public DXPopupEdit UIGSSmartDateEditEditoPopupEdit
        {
            get
            {
                if ((this.mUIGSSmartDateEditEditoPopupEdit == null))
                {
                    this.mUIGSSmartDateEditEditoPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIGSSmartDateEditEditoPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "rcOrderGSSmartDateEditEditor[0]";
                    this.mUIGSSmartDateEditEditoPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEditEditor";
                    this.mUIGSSmartDateEditEditoPopupEdit.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
                    #endregion
                }
                return this.mUIGSSmartDateEditEditoPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIRpOrderRibbonPage1 mUIRpOrderRibbonPage;
        
        private DXPopupEdit mUIGSSmartDateEditEditoPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpOrderRibbonPage1 : DXRibbonPage
    {
        
        public UIRpOrderRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpOrder";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageGroup2RibbonPageGroup UIRibbonPageGroup2RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup2RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup2RibbonPageGroup = new UIRibbonPageGroup2RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup2RibbonPageGroup;
            }
        }
        
        public UIRpgOtherActionsRibbonPageGroup1 UIRpgOtherActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgOtherActionsRibbonPageGroup == null))
                {
                    this.mUIRpgOtherActionsRibbonPageGroup = new UIRpgOtherActionsRibbonPageGroup1(this);
                }
                return this.mUIRpgOtherActionsRibbonPageGroup;
            }
        }
        
        public UIRpgWindowRibbonPageGroup UIRpgWindowRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgWindowRibbonPageGroup == null))
                {
                    this.mUIRpgWindowRibbonPageGroup = new UIRpgWindowRibbonPageGroup(this);
                }
                return this.mUIRpgWindowRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageGroup2RibbonPageGroup mUIRibbonPageGroup2RibbonPageGroup;
        
        private UIRpgOtherActionsRibbonPageGroup1 mUIRpgOtherActionsRibbonPageGroup;
        
        private UIRpgWindowRibbonPageGroup mUIRpgWindowRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonPageGroup2RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup2RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIBbiFromDateRibbonEditItem
        {
            get
            {
                if ((this.mUIBbiFromDateRibbonEditItem == null))
                {
                    this.mUIBbiFromDateRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIBbiFromDateRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiFromDate";
                    this.mUIBbiFromDateRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIBbiFromDateRibbonEditItem.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
                    #endregion
                }
                return this.mUIBbiFromDateRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIBbiFromDateRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgOtherActionsRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgOtherActionsRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgOtherActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIDekkoppRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIDekkoppRibbonBaseButtonItem == null))
                {
                    this.mUIDekkoppRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIDekkoppRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCover";
                    this.mUIDekkoppRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIDekkoppRibbonBaseButtonItem.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
                    #endregion
                }
                return this.mUIDekkoppRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIDekkoppRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgWindowRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgWindowRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgWindow";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnCloseWindowRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnCloseWindowRibbonBaseButtonItem == null))
                {
                    this.mUIBtnCloseWindowRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnCloseWindowRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCloseWindow";
                    this.mUIBtnCloseWindowRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnCloseWindowRibbonBaseButtonItem.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
                    #endregion
                }
                return this.mUIBtnCloseWindowRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnCloseWindowRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcOrdersTable1 : DXGrid
    {
        
        public UIGcOrdersTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcOrders";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem19042016Cell
        {
            get
            {
                if ((this.mUIItem19042016Cell == null))
                {
                    this.mUIItem19042016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem19042016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcOrdersGridControlCell[View]gvOrders[Row]0[Column]gccDate";
                    this.mUIItem19042016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem19042016Cell.WindowTitles.Add("Oppdekkingssenter (ASCL/95)");
                    #endregion
                }
                return this.mUIItem19042016Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem19042016Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgansattsomskaldekWindow : DXWindow
    {
        
        public UIVelgansattsomskaldekWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg ansatt som skal dekke vakten D (07:00-15:00) tir 19.04.2016, 95 - Statistikk" +
                "avd, S";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07:00-15:00) tir 19.04.2016, 95 - Statistikk" +
                    "avd, S");
            #endregion
        }
        
        #region Properties
        public DXButton UINesteButton
        {
            get
            {
                if ((this.mUINesteButton == null))
                {
                    this.mUINesteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINesteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "WizardButton[1]";
                    this.mUINesteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WizardButton";
                    this.mUINesteButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUINesteButton.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07:00-15:00) tir 19.04.2016, 95 - Statistikk" +
                            "avd, S");
                    #endregion
                }
                return this.mUINesteButton;
            }
        }
        
        public UIGsPanelControl10Client UIGsPanelControl10Client
        {
            get
            {
                if ((this.mUIGsPanelControl10Client == null))
                {
                    this.mUIGsPanelControl10Client = new UIGsPanelControl10Client(this);
                }
                return this.mUIGsPanelControl10Client;
            }
        }
        
        public DXButton UIWizardButtonButton
        {
            get
            {
                if ((this.mUIWizardButtonButton == null))
                {
                    this.mUIWizardButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIWizardButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "WizardButton[2]";
                    this.mUIWizardButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WizardButton";
                    this.mUIWizardButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIWizardButtonButton.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07:00-15:00) tir 19.04.2016, 95 - Statistikk" +
                            "avd, S");
                    #endregion
                }
                return this.mUIWizardButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINesteButton;
        
        private UIGsPanelControl10Client mUIGsPanelControl10Client;
        
        private DXButton mUIWizardButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl10Client : DXTestControl
    {
        
        public UIGsPanelControl10Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl10";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
            this.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07:00-15:00) tir 19.04.2016, 95 - Statistikk" +
                    "avd, S");
            #endregion
        }
        
        #region Properties
        public UIGManualTable UIGManualTable
        {
            get
            {
                if ((this.mUIGManualTable == null))
                {
                    this.mUIGManualTable = new UIGManualTable(this);
                }
                return this.mUIGManualTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGManualTable mUIGManualTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGManualTable : DXGrid
    {
        
        public UIGManualTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gManual";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07:00-15:00) tir 19.04.2016, 95 - Statistikk" +
                    "avd, S");
            #endregion
        }
        
        #region Properties
        public DXCell UIEkstravaktEvenCell
        {
            get
            {
                if ((this.mUIEkstravaktEvenCell == null))
                {
                    this.mUIEkstravaktEvenCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIEkstravaktEvenCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gManualGridControlCell[View]gvManual[Row]1[Column]gcManual_Lastname";
                    this.mUIEkstravaktEvenCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIEkstravaktEvenCell.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07:00-15:00) tir 19.04.2016, 95 - Statistikk" +
                            "avd, S");
                    #endregion
                }
                return this.mUIEkstravaktEvenCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIEkstravaktEvenCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMerarbeidovertidWindow : DXWindow
    {
        
        public UIMerarbeidovertidWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Merarbeid / overtid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public UIPanClientClient UIPanClientClient
        {
            get
            {
                if ((this.mUIPanClientClient == null))
                {
                    this.mUIPanClientClient = new UIPanClientClient(this);
                }
                return this.mUIPanClientClient;
            }
        }
        
        public UIGsPanelControl1Client1 UIGsPanelControl1Client1
        {
            get
            {
                if ((this.mUIGsPanelControl1Client1 == null))
                {
                    this.mUIGsPanelControl1Client1 = new UIGsPanelControl1Client1(this);
                }
                return this.mUIGsPanelControl1Client1;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        
        private UIPanClientClient mUIPanClientClient;
        
        private UIGsPanelControl1Client1 mUIGsPanelControl1Client1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanClientClient : DXTestControl
    {
        
        public UIPanClientClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UINbMenuNavBar UINbMenuNavBar
        {
            get
            {
                if ((this.mUINbMenuNavBar == null))
                {
                    this.mUINbMenuNavBar = new UINbMenuNavBar(this);
                }
                return this.mUINbMenuNavBar;
            }
        }
        
        public UITcClientTabList UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList(this);
                }
                return this.mUITcClientTabList;
            }
        }
        
        public UITcClientTabList1 UITcClientTabList1
        {
            get
            {
                if ((this.mUITcClientTabList1 == null))
                {
                    this.mUITcClientTabList1 = new UITcClientTabList1(this);
                }
                return this.mUITcClientTabList1;
            }
        }
        #endregion
        
        #region Fields
        private UINbMenuNavBar mUINbMenuNavBar;
        
        private UITcClientTabList mUITcClientTabList;
        
        private UITcClientTabList1 mUITcClientTabList1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbMenuNavBar : DXNavBar
    {
        
        public UINbMenuNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbOvertimeCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbOvertimeCodeLookUpEdit == null))
                {
                    this.mUICbOvertimeCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbOvertimeCode";
                    this.mUICbOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUICbOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    #endregion
                }
                return this.mUICbOvertimeCodeLookUpEdit;
            }
        }
        
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit1
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit1 == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit1 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "cbEmployment";
                    this.mUIGSSearchLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUIGSSearchLookUpEditLookUpEdit1.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit1;
            }
        }
        
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit11
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit11 == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit11 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit11.SearchProperties[DXTestControl.PropertyNames.Name] = "cbEmployment";
                    this.mUIGSSearchLookUpEditLookUpEdit11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    this.mUIGSSearchLookUpEditLookUpEdit11.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit11;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbOvertimeCodeLookUpEdit;
        
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit1;
        
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcClientTabList : DXTestControl
    {
        
        public UITcClientTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpMainClient UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpMainClient : DXTestControl
    {
        
        public UITpMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsClient UIGcShiftDetailsClient
        {
            get
            {
                if ((this.mUIGcShiftDetailsClient == null))
                {
                    this.mUIGcShiftDetailsClient = new UIGcShiftDetailsClient(this);
                }
                return this.mUIGcShiftDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsClient mUIGcShiftDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcShiftDetailsClient : DXTestControl
    {
        
        public UIGcShiftDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        
        public UITcRegistrationTypeTabList UITcRegistrationTypeTabList
        {
            get
            {
                if ((this.mUITcRegistrationTypeTabList == null))
                {
                    this.mUITcRegistrationTypeTabList = new UITcRegistrationTypeTabList(this);
                }
                return this.mUITcRegistrationTypeTabList;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        
        private UITcRegistrationTypeTabList mUITcRegistrationTypeTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcRegistrationTypeTabList : DXTestControl
    {
        
        public UITcRegistrationTypeTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcRegistrationType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpNewShiftClient UITpNewShiftClient
        {
            get
            {
                if ((this.mUITpNewShiftClient == null))
                {
                    this.mUITpNewShiftClient = new UITpNewShiftClient(this);
                }
                return this.mUITpNewShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpNewShiftClient mUITpNewShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpNewShiftClient : DXTestControl
    {
        
        public UITpNewShiftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIETime3Edit
        {
            get
            {
                if ((this.mUIETime3Edit == null))
                {
                    this.mUIETime3Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[3]";
                    this.mUIETime3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime3Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime3Edit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime3Edit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        
        public DXLookUpEdit UICbCrewColumnLookUpEdit
        {
            get
            {
                if ((this.mUICbCrewColumnLookUpEdit == null))
                {
                    this.mUICbCrewColumnLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbCrewColumn";
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUICbCrewColumnLookUpEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUICbCrewColumnLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIETime3Edit;
        
        private DXTextEdit mUIETime1Edit;
        
        private DXLookUpEdit mUICbCrewColumnLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcClientTabList1 : DXTestControl
    {
        
        public UITcClientTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpMainClient1 UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient1(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient1 mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpMainClient1 : DXTestControl
    {
        
        public UITpMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsClient1 UIGcShiftDetailsClient
        {
            get
            {
                if ((this.mUIGcShiftDetailsClient == null))
                {
                    this.mUIGcShiftDetailsClient = new UIGcShiftDetailsClient1(this);
                }
                return this.mUIGcShiftDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsClient1 mUIGcShiftDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcShiftDetailsClient1 : DXTestControl
    {
        
        public UIGcShiftDetailsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcRegistrationTypeTabList1 UITcRegistrationTypeTabList
        {
            get
            {
                if ((this.mUITcRegistrationTypeTabList == null))
                {
                    this.mUITcRegistrationTypeTabList = new UITcRegistrationTypeTabList1(this);
                }
                return this.mUITcRegistrationTypeTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcRegistrationTypeTabList1 mUITcRegistrationTypeTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcRegistrationTypeTabList1 : DXTestControl
    {
        
        public UITcRegistrationTypeTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcRegistrationType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpNewShiftClient1 UITpNewShiftClient
        {
            get
            {
                if ((this.mUITpNewShiftClient == null))
                {
                    this.mUITpNewShiftClient = new UITpNewShiftClient1(this);
                }
                return this.mUITpNewShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpNewShiftClient1 mUITpNewShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpNewShiftClient1 : DXTestControl
    {
        
        public UITpNewShiftClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbShiftCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbShiftCodeLookUpEdit == null))
                {
                    this.mUICbShiftCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCode";
                    this.mUICbShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUICbShiftCodeLookUpEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUICbShiftCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbShiftCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client1 : DXTestControl
    {
        
        public UIGsPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver63438164ASCLAvWindow : WinWindow
    {
        
        public UIGatver63438164ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat ver.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UICenterPanelPeriodDockPanel UICenterPanelPeriodDockPanel
        {
            get
            {
                if ((this.mUICenterPanelPeriodDockPanel == null))
                {
                    this.mUICenterPanelPeriodDockPanel = new UICenterPanelPeriodDockPanel(this);
                }
                return this.mUICenterPanelPeriodDockPanel;
            }
        }
        
        public UIRibbonControlRibbon1 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon1(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelPeriodDockPanel mUICenterPanelPeriodDockPanel;
        
        private UIRibbonControlRibbon1 mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICenterPanelPeriodDockPanel : DXDockPanel
    {
        
        public UICenterPanelPeriodDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriodControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleControCustom UIPeriodScheduleControCustom
        {
            get
            {
                if ((this.mUIPeriodScheduleControCustom == null))
                {
                    this.mUIPeriodScheduleControCustom = new UIPeriodScheduleControCustom(this);
                }
                return this.mUIPeriodScheduleControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleControCustom mUIPeriodScheduleControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleControCustom : DXTestControl
    {
        
        public UIPeriodScheduleControCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PeriodScheduleControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UILayoutPanelSplitContainerControl UILayoutPanelSplitContainerControl
        {
            get
            {
                if ((this.mUILayoutPanelSplitContainerControl == null))
                {
                    this.mUILayoutPanelSplitContainerControl = new UILayoutPanelSplitContainerControl(this);
                }
                return this.mUILayoutPanelSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutPanelSplitContainerControl mUILayoutPanelSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutPanelSplitContainerControl : DXSplitContainerControl
    {
        
        public UILayoutPanelSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitLayoutPanel";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UITopPanelClient UITopPanelClient
        {
            get
            {
                if ((this.mUITopPanelClient == null))
                {
                    this.mUITopPanelClient = new UITopPanelClient(this);
                }
                return this.mUITopPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UITopPanelClient mUITopPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPanelClient : DXTestControl
    {
        
        public UITopPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomSplitGroupPanel";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIXtraScrollableControScrollableControl1 UIXtraScrollableControScrollableControl
        {
            get
            {
                if ((this.mUIXtraScrollableControScrollableControl == null))
                {
                    this.mUIXtraScrollableControScrollableControl = new UIXtraScrollableControScrollableControl1(this);
                }
                return this.mUIXtraScrollableControScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraScrollableControScrollableControl1 mUIXtraScrollableControScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIXtraScrollableControScrollableControl1 : DXScrollableControl
    {
        
        public UIXtraScrollableControScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXListBox UIPeriodScheduleListBoList
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList == null))
                {
                    this.mUIPeriodScheduleListBoList = new DXListBox(this);
                    #region Search Criteria
                    this.mUIPeriodScheduleListBoList.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[0]";
                    this.mUIPeriodScheduleListBoList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
                    this.mUIPeriodScheduleListBoList.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    #endregion
                }
                return this.mUIPeriodScheduleListBoList;
            }
        }
        #endregion
        
        #region Fields
        private DXListBox mUIPeriodScheduleListBoList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon1 : DXRibbon
    {
        
        public UIRibbonControlRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage1 UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage1(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage1 mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpMainMenuRibbonPage1 : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIGrpDevianceRibbonPageGroup UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDevianceRibbonPageGroup mUIGrpDevianceRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpDevianceRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIEkstraRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEkstraRibbonBaseButtonItem == null))
                {
                    this.mUIEkstraRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExtra";
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEkstraRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.3.4.38164 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    #endregion
                }
                return this.mUIEkstraRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIEkstraRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILedigvaktWindow : DXWindow
    {
        
        public UILedigvaktWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ledig vakt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ledig vakt");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl5Client UIGsPanelControl5Client
        {
            get
            {
                if ((this.mUIGsPanelControl5Client == null))
                {
                    this.mUIGsPanelControl5Client = new UIGsPanelControl5Client(this);
                }
                return this.mUIGsPanelControl5Client;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ledig vakt");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl5Client mUIGsPanelControl5Client;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl5Client : DXTestControl
    {
        
        public UIGsPanelControl5Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ledig vakt");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl2Client UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        
        public UIGSPanelControlClient3 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient3(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl2Client mUIGsPanelControl2Client;
        
        private UIGSPanelControlClient3 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl2Client : DXTestControl
    {
        
        public UIGsPanelControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ledig vakt");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILeShiftCodeLookUpEdit
        {
            get
            {
                if ((this.mUILeShiftCodeLookUpEdit == null))
                {
                    this.mUILeShiftCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leShiftCode";
                    this.mUILeShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUILeShiftCodeLookUpEdit.WindowTitles.Add("Ledig vakt");
                    #endregion
                }
                return this.mUILeShiftCodeLookUpEdit;
            }
        }
        
        public DXTextEdit UIETime0Edit
        {
            get
            {
                if ((this.mUIETime0Edit == null))
                {
                    this.mUIETime0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[0]";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime0Edit.WindowTitles.Add("Ledig vakt");
                    #endregion
                }
                return this.mUIETime0Edit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Ledig vakt");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILeShiftCodeLookUpEdit;
        
        private DXTextEdit mUIETime0Edit;
        
        private DXTextEdit mUIETime1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient3 : DXTestControl
    {
        
        public UIGSPanelControlClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit == null))
                {
                    this.mUIGSLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lePositionCategory";
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow51 : DXWindow
    {
        
        public UIItemWindow51()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AML Brudd - Egen kommentar";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit == null))
                {
                    this.mUIGSLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gsBreakType";
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit;
            }
        }
        
        public DXTextEdit UIECommentEdit
        {
            get
            {
                if ((this.mUIECommentEdit == null))
                {
                    this.mUIECommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIECommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eComment";
                    this.mUIECommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSMemoEdit";
                    this.mUIECommentEdit.WindowTitles.Add("AML Brudd - Egen kommentar");
                    #endregion
                }
                return this.mUIECommentEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("AML Brudd - Egen kommentar");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit;
        
        private DXTextEdit mUIECommentEdit;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILeggtilansatteWindow : DXWindow
    {
        
        public UILeggtilansatteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIGSDialogFooterBarCustom UIGSDialogFooterBarCustom
        {
            get
            {
                if ((this.mUIGSDialogFooterBarCustom == null))
                {
                    this.mUIGSDialogFooterBarCustom = new UIGSDialogFooterBarCustom(this);
                }
                return this.mUIGSDialogFooterBarCustom;
            }
        }
        
        public UIViewHostCustom1 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom1(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        
        private UIGSDialogFooterBarCustom mUIGSDialogFooterBarCustom;
        
        private UIViewHostCustom1 mUIViewHostCustom;
        
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGrpEmployeeSelectorClient UIGrpEmployeeSelectorClient
        {
            get
            {
                if ((this.mUIGrpEmployeeSelectorClient == null))
                {
                    this.mUIGrpEmployeeSelectorClient = new UIGrpEmployeeSelectorClient(this);
                }
                return this.mUIGrpEmployeeSelectorClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEmployeeSelectorClient mUIGrpEmployeeSelectorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEmployeeSelectorClient : DXTestControl
    {
        
        public UIGrpEmployeeSelectorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployeeSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable1 UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable1(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable1 mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcEmployeesTable1 : DXGrid
    {
        
        public UIGcEmployeesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]2[Column]gcolSelected";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSDialogFooterBarCustom : DXTestControl
    {
        
        public UIGSDialogFooterBarCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIViewHostCustom1 : DXTestControl
    {
        
        public UIViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UISelectDepartmentEmplCustom UISelectDepartmentEmplCustom
        {
            get
            {
                if ((this.mUISelectDepartmentEmplCustom == null))
                {
                    this.mUISelectDepartmentEmplCustom = new UISelectDepartmentEmplCustom(this);
                }
                return this.mUISelectDepartmentEmplCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISelectDepartmentEmplCustom mUISelectDepartmentEmplCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISelectDepartmentEmplCustom : DXTestControl
    {
        
        public UISelectDepartmentEmplCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectDepartmentEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectDepartmentEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentContainerClient : DXTestControl
    {
        
        public UIPcContentContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient1 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient1(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient1 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcContentClient1 : DXTestControl
    {
        
        public UIPcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentEmployeeTable UIGcDepartmentEmployeeTable
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeTable == null))
                {
                    this.mUIGcDepartmentEmployeeTable = new UIGcDepartmentEmployeeTable(this);
                }
                return this.mUIGcDepartmentEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentEmployeeTable mUIGcDepartmentEmployeeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcDepartmentEmployeeTable : DXGrid
    {
        
        public UIGcDepartmentEmployeeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIGundersenGunnarCell
        {
            get
            {
                if ((this.mUIGundersenGunnarCell == null))
                {
                    this.mUIGundersenGunnarCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGundersenGunnarCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]1[Column]colE" +
                        "mployee";
                    this.mUIGundersenGunnarCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGundersenGunnarCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIGundersenGunnarCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGundersenGunnarCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238741ASCLAvWindow : WinWindow
    {
        
        public UIGatver64238741ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat ver.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat ver. 6.4.2.38741 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom2 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom2(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom2 mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom2 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat ver. 6.4.2.38741 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar2 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar2(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar2 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar2 : DXMenu
    {
        
        public UIMainmenuMenuBar2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat ver. 6.4.2.38741 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIVelgdatoBarBaseButtonItem
        {
            get
            {
                if ((this.mUIVelgdatoBarBaseButtonItem == null))
                {
                    this.mUIVelgdatoBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIVelgdatoBarBaseButtonItem.WindowTitles.Add("Gat ver. 6.4.2.38741 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    this.mUIVelgdatoBarBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIVelgdatoBarBaseButtonItem;
            }
        }
        
        public UIVelgdatoBarItem1 UIVelgdatoBarItem
        {
            get
            {
                if ((this.mUIVelgdatoBarItem == null))
                {
                    this.mUIVelgdatoBarItem = new UIVelgdatoBarItem1(this);
                }
                return this.mUIVelgdatoBarItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIVelgdatoBarBaseButtonItem;
        
        private UIVelgdatoBarItem1 mUIVelgdatoBarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgdatoBarItem1 : DXMenuItem
    {
        
        public UIVelgdatoBarItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Gat ver. 6.4.2.38741 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu1 UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu1(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu1 mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupContainerBarConMenu1 : DXMenu
    {
        
        public UIPopupContainerBarConMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            this.WindowTitles.Add("Gat ver. 6.4.2.38741 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIPpcDatePickerClient1 UIPpcDatePickerClient
        {
            get
            {
                if ((this.mUIPpcDatePickerClient == null))
                {
                    this.mUIPpcDatePickerClient = new UIPpcDatePickerClient1(this);
                }
                return this.mUIPpcDatePickerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcDatePickerClient1 mUIPpcDatePickerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPpcDatePickerClient1 : DXTestControl
    {
        
        public UIPpcDatePickerClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.2.38741 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Gat ver. 6.4.2.38741 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        
        public DXButton UIGåtilButton
        {
            get
            {
                if ((this.mUIGåtilButton == null))
                {
                    this.mUIGåtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGoToDate";
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGåtilButton.WindowTitles.Add("Gat ver. 6.4.2.38741 - (ASCL - Avd: 95-Statistikkavd) - Vaktbok");
                    #endregion
                }
                return this.mUIGåtilButton;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        
        private DXButton mUIGåtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgansattsomskaldekWindow1 : DXWindow
    {
        
        public UIVelgansattsomskaldekWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg ansatt som skal dekke vakten D (07.00-15.00) tir 19.04.2016, 95 - Statistikk" +
                "avdelingen, S";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07.00-15.00) tir 19.04.2016, 95 - Statistikk" +
                    "avdelingen, S");
            #endregion
        }
        
        #region Properties
        public DXButton UINesteButton
        {
            get
            {
                if ((this.mUINesteButton == null))
                {
                    this.mUINesteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINesteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "WizardButton[1]";
                    this.mUINesteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WizardButton";
                    this.mUINesteButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUINesteButton.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07.00-15.00) tir 19.04.2016, 95 - Statistikk" +
                            "avdelingen, S");
                    #endregion
                }
                return this.mUINesteButton;
            }
        }
        
        public UIGsPanelControl10Client1 UIGsPanelControl10Client
        {
            get
            {
                if ((this.mUIGsPanelControl10Client == null))
                {
                    this.mUIGsPanelControl10Client = new UIGsPanelControl10Client1(this);
                }
                return this.mUIGsPanelControl10Client;
            }
        }
        
        public DXButton UIWizardButtonButton
        {
            get
            {
                if ((this.mUIWizardButtonButton == null))
                {
                    this.mUIWizardButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIWizardButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "WizardButton[2]";
                    this.mUIWizardButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WizardButton";
                    this.mUIWizardButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIWizardButtonButton.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07.00-15.00) tir 19.04.2016, 95 - Statistikk" +
                            "avdelingen, S");
                    #endregion
                }
                return this.mUIWizardButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINesteButton;
        
        private UIGsPanelControl10Client1 mUIGsPanelControl10Client;
        
        private DXButton mUIWizardButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl10Client1 : DXTestControl
    {
        
        public UIGsPanelControl10Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl10";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
            this.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07.00-15.00) tir 19.04.2016, 95 - Statistikk" +
                    "avdelingen, S");
            #endregion
        }
        
        #region Properties
        public UIGManualTable1 UIGManualTable
        {
            get
            {
                if ((this.mUIGManualTable == null))
                {
                    this.mUIGManualTable = new UIGManualTable1(this);
                }
                return this.mUIGManualTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGManualTable1 mUIGManualTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGManualTable1 : DXGrid
    {
        
        public UIGManualTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gManual";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07.00-15.00) tir 19.04.2016, 95 - Statistikk" +
                    "avdelingen, S");
            #endregion
        }
        
        #region Properties
        public DXCell UIEkstravaktEvenCell
        {
            get
            {
                if ((this.mUIEkstravaktEvenCell == null))
                {
                    this.mUIEkstravaktEvenCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIEkstravaktEvenCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gManualGridControlCell[View]gvManual[Row]1[Column]gcManual_Lastname";
                    this.mUIEkstravaktEvenCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIEkstravaktEvenCell.WindowTitles.Add("Velg ansatt som skal dekke vakten D (07.00-15.00) tir 19.04.2016, 95 - Statistikk" +
                            "avdelingen, S");
                    #endregion
                }
                return this.mUIEkstravaktEvenCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIEkstravaktEvenCell;
        #endregion
    }
}
