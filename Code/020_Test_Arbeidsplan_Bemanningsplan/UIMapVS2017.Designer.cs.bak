// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _020_Test_Arbeidsplan_Bemanningsplan.UIMapVS2017Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMapVS2017
    {
        
        /// <summary>
        /// CheckValues_Step_27 - Use 'CheckValues_Step_27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValues_Step_27()
        {
            #region Variable Declarations
            DXCell uIBoldTotaltCell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBoldTotaltCell;
            DXCell uIBold13393Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold13393Cell;
            DXCell uIBold32143Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold32143Cell;
            DXCell uIBold377Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold377Cell;
            DXCell uIBold905Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold905Cell;
            DXCell uIBold13393Cell1 = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold13393Cell1;
            DXCell uIBold32143Cell1 = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold32143Cell1;
            DXCell uIBold377Cell1 = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold377Cell1;
            DXCell uIBold905Cell1 = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold905Cell1;
            DXCell uIBold3495Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold3495Cell;
            DXCell uIBold1049Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold1049Cell;
            DXCell uIBold3742Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold3742Cell;
            DXCell uIBold98Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold98Cell;
            DXCell uIBold3495Cell1 = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold3495Cell1;
            DXCell uIBold98Cell1 = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold98Cell1;
            DXCell uIBold3175Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold3175Cell;
            DXCell uIBold3422Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold3422Cell;
            DXCell uIBold894Cell = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold894Cell;
            DXCell uIBold3175Cell1 = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold3175Cell1;
            DXCell uIBold894Cell1 = this.UIBemanningsplanWindow.UIPaNavbarsPanelClient.UIGsMainControlNavBar.UINbgccSumScrollableControl.UITcGraphicsTabList.UITpHoursAndPositionsClient.UIPHoursAndPositionsPaClient.UIPMainPanelClient.UIPTopPanelClient.UIGcStaffingWeekHourSuTable.UIBold894Cell1;
            #endregion

            // Verify that the 'Text' property of '{bold}Totalt' cell equals '{bold}Totalt'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBoldTotaltCellText, uIBoldTotaltCell.Text, "Feil Rad!");

            // Verify that the 'Text' property of '{bold}133,93' cell equals '{bold}133,93'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold13393CellText, uIBold13393Cell.Text, "Feil i rad 4(Timer)");

            // Verify that the 'Text' property of '{bold}321,43' cell equals '{bold}321,43'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold32143CellText, uIBold32143Cell.Text, "Feil i rad 4(O. Timer)");

            // Verify that the 'Text' property of '{bold}3,77' cell equals '{bold}3,77'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold377CellText, uIBold377Cell.Text, "Feil i rad 4(Årsverk)");

            // Verify that the 'Text' property of '{bold}9,05' cell equals '{bold}9,05'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold905CellText, uIBold905Cell.Text, "Feil i rad 4(O. Årsverk)");

            // Verify that the 'Text' property of '{bold}133,93' cell equals '{bold}133,93'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold13393Cell1Text, uIBold13393Cell1.Text, "Feil i rad 5(Timer)");

            // Verify that the 'Text' property of '{bold}321,43' cell equals '{bold}321,43'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold32143Cell1Text, uIBold32143Cell1.Text, "Feil i rad 5(O. Timer)");

            // Verify that the 'Text' property of '{bold}3,77' cell equals '{bold}3,77'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold377Cell1Text, uIBold377Cell1.Text, "Feil i rad 5(Årsverk)");

            // Verify that the 'Text' property of '{bold}9,05' cell equals '{bold}9,05'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold905Cell1Text, uIBold905Cell1.Text, "Feil i rad 5(O. Årsverk)");

            // Verify that the 'Text' property of '{bold}349,5' cell equals '{bold}349,5'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold3495CellText, uIBold3495Cell.Text);

            // Verify that the 'ClassName' property of '{bold}10,49' cell equals 'GridControlCell'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold1049CellClassName, uIBold1049Cell.ClassName);

            // Verify that the 'Text' property of '{bold}10,49' cell equals '{bold}10,49'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold1049CellText, uIBold1049Cell.Text);

            // Verify that the 'Text' property of '{bold}374,2' cell equals '{bold}374,2'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold3742CellText, uIBold3742Cell.Text);

            // Verify that the 'Text' property of '{bold}9,8' cell equals '{bold}9,8'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold98CellText, uIBold98Cell.Text);

            // Verify that the 'Text' property of '{bold}349,5' cell equals '{bold}349,5'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold3495Cell1Text, uIBold3495Cell1.Text);

            // Verify that the 'Text' property of '{bold}9,8' cell equals '{bold}9,8'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold98Cell1Text, uIBold98Cell1.Text);

            // Verify that the 'Text' property of '{bold}317,5' cell equals '{bold}317,5'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold3175CellText, uIBold3175Cell.Text);

            // Verify that the 'Text' property of '{bold}342,2' cell equals '{bold}342,2'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold3422CellText, uIBold3422Cell.Text);

            // Verify that the 'Text' property of '{bold}8,94' cell equals '{bold}8,94'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold894CellText, uIBold894Cell.Text);

            // Verify that the 'Text' property of '{bold}317,5' cell equals '{bold}317,5'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold3175Cell1Text, uIBold3175Cell1.Text);

            // Verify that the 'Text' property of '{bold}8,94' cell equals '{bold}8,94'
            Assert.AreEqual(this.CheckValues_Step_27ExpectedValues.UIBold894Cell1Text, uIBold894Cell1.Text);
        }
        
        #region Properties
        public virtual CheckValues_Step_27ExpectedValues CheckValues_Step_27ExpectedValues
        {
            get
            {
                if ((this.mCheckValues_Step_27ExpectedValues == null))
                {
                    this.mCheckValues_Step_27ExpectedValues = new CheckValues_Step_27ExpectedValues();
                }
                return this.mCheckValues_Step_27ExpectedValues;
            }
        }
        
        public UIBemanningsplanWindow UIBemanningsplanWindow
        {
            get
            {
                if ((this.mUIBemanningsplanWindow == null))
                {
                    this.mUIBemanningsplanWindow = new UIBemanningsplanWindow();
                }
                return this.mUIBemanningsplanWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckValues_Step_27ExpectedValues mCheckValues_Step_27ExpectedValues;
        
        private UIBemanningsplanWindow mUIBemanningsplanWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValues_Step_27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValues_Step_27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '{bold}Totalt' cell equals '{bold}Totalt'
        /// </summary>
        public string UIBoldTotaltCellText = "{bold}Totalt";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}133,93' cell equals '{bold}133,93'
        /// </summary>
        public string UIBold13393CellText = "{bold}133,93";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}321,43' cell equals '{bold}321,43'
        /// </summary>
        public string UIBold32143CellText = "{bold}321,43";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}3,77' cell equals '{bold}3,77'
        /// </summary>
        public string UIBold377CellText = "{bold}3,77";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}9,05' cell equals '{bold}9,05'
        /// </summary>
        public string UIBold905CellText = "{bold}9,05";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}133,93' cell equals '{bold}133,93'
        /// </summary>
        public string UIBold13393Cell1Text = "{bold}133,93";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}321,43' cell equals '{bold}321,43'
        /// </summary>
        public string UIBold32143Cell1Text = "{bold}321,43";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}3,77' cell equals '{bold}3,77'
        /// </summary>
        public string UIBold377Cell1Text = "{bold}3,77";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}9,05' cell equals '{bold}9,05'
        /// </summary>
        public string UIBold905Cell1Text = "{bold}9,05";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}349,5' cell equals '{bold}349,5'
        /// </summary>
        public string UIBold3495CellText = "{bold}349,5";
        
        /// <summary>
        /// Verify that the 'ClassName' property of '{bold}10,49' cell equals 'GridControlCell'
        /// </summary>
        public string UIBold1049CellClassName = "GridControlCell";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}10,49' cell equals '{bold}10,49'
        /// </summary>
        public string UIBold1049CellText = "{bold}10,49";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}374,2' cell equals '{bold}374,2'
        /// </summary>
        public string UIBold3742CellText = "{bold}374,2";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}9,8' cell equals '{bold}9,8'
        /// </summary>
        public string UIBold98CellText = "{bold}9,8";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}349,5' cell equals '{bold}349,5'
        /// </summary>
        public string UIBold3495Cell1Text = "{bold}349,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}9,8' cell equals '{bold}9,8'
        /// </summary>
        public string UIBold98Cell1Text = "{bold}9,8";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}317,5' cell equals '{bold}317,5'
        /// </summary>
        public string UIBold3175CellText = "{bold}317,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}342,2' cell equals '{bold}342,2'
        /// </summary>
        public string UIBold3422CellText = "{bold}342,2";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}8,94' cell equals '{bold}8,94'
        /// </summary>
        public string UIBold894CellText = "{bold}8,94";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}317,5' cell equals '{bold}317,5'
        /// </summary>
        public string UIBold3175Cell1Text = "{bold}317,5";
        
        /// <summary>
        /// Verify that the 'Text' property of '{bold}8,94' cell equals '{bold}8,94'
        /// </summary>
        public string UIBold894Cell1Text = "{bold}8,94";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBemanningsplanWindow : DXWindow
    {
        
        public UIBemanningsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bemanningsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UIPaNavbarsPanelClient UIPaNavbarsPanelClient
        {
            get
            {
                if ((this.mUIPaNavbarsPanelClient == null))
                {
                    this.mUIPaNavbarsPanelClient = new UIPaNavbarsPanelClient(this);
                }
                return this.mUIPaNavbarsPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaNavbarsPanelClient mUIPaNavbarsPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaNavbarsPanelClient : DXTestControl
    {
        
        public UIPaNavbarsPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paNavbarsPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UIGsMainControlNavBar UIGsMainControlNavBar
        {
            get
            {
                if ((this.mUIGsMainControlNavBar == null))
                {
                    this.mUIGsMainControlNavBar = new UIGsMainControlNavBar(this);
                }
                return this.mUIGsMainControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsMainControlNavBar mUIGsMainControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsMainControlNavBar : DXNavBar
    {
        
        public UIGsMainControlNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsMainControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UINbgccSumScrollableControl UINbgccSumScrollableControl
        {
            get
            {
                if ((this.mUINbgccSumScrollableControl == null))
                {
                    this.mUINbgccSumScrollableControl = new UINbgccSumScrollableControl(this);
                }
                return this.mUINbgccSumScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccSumScrollableControl mUINbgccSumScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgccSumScrollableControl : DXScrollableControl
    {
        
        public UINbgccSumScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UITcGraphicsTabList UITcGraphicsTabList
        {
            get
            {
                if ((this.mUITcGraphicsTabList == null))
                {
                    this.mUITcGraphicsTabList = new UITcGraphicsTabList(this);
                }
                return this.mUITcGraphicsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcGraphicsTabList mUITcGraphicsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcGraphicsTabList : DXTestControl
    {
        
        public UITcGraphicsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcGraphics";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UITpHoursAndPositionsClient UITpHoursAndPositionsClient
        {
            get
            {
                if ((this.mUITpHoursAndPositionsClient == null))
                {
                    this.mUITpHoursAndPositionsClient = new UITpHoursAndPositionsClient(this);
                }
                return this.mUITpHoursAndPositionsClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpHoursAndPositionsClient mUITpHoursAndPositionsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpHoursAndPositionsClient : DXTestControl
    {
        
        public UITpHoursAndPositionsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpHoursAndPositions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UIPHoursAndPositionsPaClient UIPHoursAndPositionsPaClient
        {
            get
            {
                if ((this.mUIPHoursAndPositionsPaClient == null))
                {
                    this.mUIPHoursAndPositionsPaClient = new UIPHoursAndPositionsPaClient(this);
                }
                return this.mUIPHoursAndPositionsPaClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPHoursAndPositionsPaClient mUIPHoursAndPositionsPaClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPHoursAndPositionsPaClient : DXTestControl
    {
        
        public UIPHoursAndPositionsPaClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pHoursAndPositionsPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UIPMainPanelClient UIPMainPanelClient
        {
            get
            {
                if ((this.mUIPMainPanelClient == null))
                {
                    this.mUIPMainPanelClient = new UIPMainPanelClient(this);
                }
                return this.mUIPMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPMainPanelClient mUIPMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPMainPanelClient : DXTestControl
    {
        
        public UIPMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UIPTopPanelClient UIPTopPanelClient
        {
            get
            {
                if ((this.mUIPTopPanelClient == null))
                {
                    this.mUIPTopPanelClient = new UIPTopPanelClient(this);
                }
                return this.mUIPTopPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPTopPanelClient mUIPTopPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPTopPanelClient : DXTestControl
    {
        
        public UIPTopPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pTopPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UIGcStaffingWeekHourSuTable UIGcStaffingWeekHourSuTable
        {
            get
            {
                if ((this.mUIGcStaffingWeekHourSuTable == null))
                {
                    this.mUIGcStaffingWeekHourSuTable = new UIGcStaffingWeekHourSuTable(this);
                }
                return this.mUIGcStaffingWeekHourSuTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcStaffingWeekHourSuTable mUIGcStaffingWeekHourSuTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcStaffingWeekHourSuTable : DXGrid
    {
        
        public UIGcStaffingWeekHourSuTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIBoldTotaltCell
        {
            get
            {
                if ((this.mUIBoldTotaltCell == null))
                {
                    this.mUIBoldTotaltCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBoldTotaltCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]HoursPerW" +
                        "eek";
                    this.mUIBoldTotaltCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBoldTotaltCell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBoldTotaltCell;
            }
        }
        
        public DXCell UIBold13393Cell
        {
            get
            {
                if ((this.mUIBold13393Cell == null))
                {
                    this.mUIBold13393Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold13393Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]HourCol_4" +
                        "";
                    this.mUIBold13393Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold13393Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold13393Cell;
            }
        }
        
        public DXCell UIBold32143Cell
        {
            get
            {
                if ((this.mUIBold32143Cell == null))
                {
                    this.mUIBold32143Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold32143Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]Calculate" +
                        "dTimeHourCol_4";
                    this.mUIBold32143Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold32143Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold32143Cell;
            }
        }
        
        public DXCell UIBold377Cell
        {
            get
            {
                if ((this.mUIBold377Cell == null))
                {
                    this.mUIBold377Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold377Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]PosCountC" +
                        "ol_4";
                    this.mUIBold377Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold377Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold377Cell;
            }
        }
        
        public DXCell UIBold905Cell
        {
            get
            {
                if ((this.mUIBold905Cell == null))
                {
                    this.mUIBold905Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold905Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]Calculate" +
                        "dTimePosCountCol_4";
                    this.mUIBold905Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold905Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold905Cell;
            }
        }
        
        public DXCell UIBold13393Cell1
        {
            get
            {
                if ((this.mUIBold13393Cell1 == null))
                {
                    this.mUIBold13393Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold13393Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]HourCol_5" +
                        "";
                    this.mUIBold13393Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold13393Cell1.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold13393Cell1;
            }
        }
        
        public DXCell UIBold32143Cell1
        {
            get
            {
                if ((this.mUIBold32143Cell1 == null))
                {
                    this.mUIBold32143Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold32143Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]Calculate" +
                        "dTimeHourCol_5";
                    this.mUIBold32143Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold32143Cell1.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold32143Cell1;
            }
        }
        
        public DXCell UIBold377Cell1
        {
            get
            {
                if ((this.mUIBold377Cell1 == null))
                {
                    this.mUIBold377Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold377Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]PosCountC" +
                        "ol_5";
                    this.mUIBold377Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold377Cell1.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold377Cell1;
            }
        }
        
        public DXCell UIBold905Cell1
        {
            get
            {
                if ((this.mUIBold905Cell1 == null))
                {
                    this.mUIBold905Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold905Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]Calculate" +
                        "dTimePosCountCol_5";
                    this.mUIBold905Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold905Cell1.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold905Cell1;
            }
        }
        
        public DXCell UIBold3495Cell
        {
            get
            {
                if ((this.mUIBold3495Cell == null))
                {
                    this.mUIBold3495Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold3495Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]HourCol_1" +
                        "";
                    this.mUIBold3495Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold3495Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold3495Cell;
            }
        }
        
        public DXCell UIBold1049Cell
        {
            get
            {
                if ((this.mUIBold1049Cell == null))
                {
                    this.mUIBold1049Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold1049Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]Calculate" +
                        "dTimePosCountCol_1";
                    this.mUIBold1049Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold1049Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold1049Cell;
            }
        }
        
        public DXCell UIBold3742Cell
        {
            get
            {
                if ((this.mUIBold3742Cell == null))
                {
                    this.mUIBold3742Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold3742Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]Calculate" +
                        "dTimeHourCol_2";
                    this.mUIBold3742Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold3742Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold3742Cell;
            }
        }
        
        public DXCell UIBold98Cell
        {
            get
            {
                if ((this.mUIBold98Cell == null))
                {
                    this.mUIBold98Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold98Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]PosCountC" +
                        "ol_2";
                    this.mUIBold98Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold98Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold98Cell;
            }
        }
        
        public DXCell UIBold3495Cell1
        {
            get
            {
                if ((this.mUIBold3495Cell1 == null))
                {
                    this.mUIBold3495Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold3495Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]HourCol_3" +
                        "";
                    this.mUIBold3495Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold3495Cell1.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold3495Cell1;
            }
        }
        
        public DXCell UIBold98Cell1
        {
            get
            {
                if ((this.mUIBold98Cell1 == null))
                {
                    this.mUIBold98Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold98Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]PosCountC" +
                        "ol_3";
                    this.mUIBold98Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold98Cell1.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold98Cell1;
            }
        }
        
        public DXCell UIBold3175Cell
        {
            get
            {
                if ((this.mUIBold3175Cell == null))
                {
                    this.mUIBold3175Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold3175Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]HourCol_6" +
                        "";
                    this.mUIBold3175Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold3175Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold3175Cell;
            }
        }
        
        public DXCell UIBold3422Cell
        {
            get
            {
                if ((this.mUIBold3422Cell == null))
                {
                    this.mUIBold3422Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold3422Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]Calculate" +
                        "dTimeHourCol_7";
                    this.mUIBold3422Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold3422Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold3422Cell;
            }
        }
        
        public DXCell UIBold894Cell
        {
            get
            {
                if ((this.mUIBold894Cell == null))
                {
                    this.mUIBold894Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold894Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]PosCountC" +
                        "ol_8";
                    this.mUIBold894Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold894Cell.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold894Cell;
            }
        }
        
        public DXCell UIBold3175Cell1
        {
            get
            {
                if ((this.mUIBold3175Cell1 == null))
                {
                    this.mUIBold3175Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold3175Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]HourCol_1" +
                        "2";
                    this.mUIBold3175Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold3175Cell1.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold3175Cell1;
            }
        }
        
        public DXCell UIBold894Cell1
        {
            get
            {
                if ((this.mUIBold894Cell1 == null))
                {
                    this.mUIBold894Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBold894Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcStaffingWeekHourSumGridControlCell[View]gvSumWeekHourSum[Row]2[Column]PosCountC" +
                        "ol_12";
                    this.mUIBold894Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBold894Cell1.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIBold894Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIBoldTotaltCell;
        
        private DXCell mUIBold13393Cell;
        
        private DXCell mUIBold32143Cell;
        
        private DXCell mUIBold377Cell;
        
        private DXCell mUIBold905Cell;
        
        private DXCell mUIBold13393Cell1;
        
        private DXCell mUIBold32143Cell1;
        
        private DXCell mUIBold377Cell1;
        
        private DXCell mUIBold905Cell1;
        
        private DXCell mUIBold3495Cell;
        
        private DXCell mUIBold1049Cell;
        
        private DXCell mUIBold3742Cell;
        
        private DXCell mUIBold98Cell;
        
        private DXCell mUIBold3495Cell1;
        
        private DXCell mUIBold98Cell1;
        
        private DXCell mUIBold3175Cell;
        
        private DXCell mUIBold3422Cell;
        
        private DXCell mUIBold894Cell;
        
        private DXCell mUIBold3175Cell1;
        
        private DXCell mUIBold894Cell1;
        #endregion
    }
}
