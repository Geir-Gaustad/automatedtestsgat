// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _045_Test_Egengodkjenning_Bytter_Avdelingsbytter_GATW_4850
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ApproveRequestStep6
        /// </summary>
        public void ApproveRequestStep6()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnprocessedSelfServiPane.UIItemCustom;
            #endregion

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(14, 12));
        }
        
        /// <summary>
        /// CheckRequestCreatedStep3 - Use 'CheckRequestCreatedStep3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRequestCreatedStep3()
        {
            #region Variable Declarations
            HtmlDiv uIOktPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid11Custom.UIOktPane;
            HtmlDiv uIItem09Pane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid11Custom.UIItem09Pane;
            HtmlSpan uIVaktbytteØnskeråfåfrPane1 = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIApprovedSelfServicesPane1.UIVaktbytteØnskeråfåfrPane1;
            #endregion

            // Verify that the 'InnerText' property of 'okt' pane equals 'okt'
            Assert.AreEqual(this.CheckRequestCreatedStep3ExpectedValues.UIOktPaneInnerText, uIOktPane.InnerText);

            // Verify that the 'InnerText' property of '09' pane equals '09'
            Assert.AreEqual(this.CheckRequestCreatedStep3ExpectedValues.UIItem09PaneInnerText, uIItem09Pane.InnerText);

            // Verify that the 'InnerText' property of 'Vaktbytte - Ønsker å få fri en vakt, som' pane equals 'Vaktbytte - Ønsker å få fri en vakt, som jeg kan ta igjen senere'
            Assert.AreEqual(this.CheckRequestCreatedStep3ExpectedValues.UIVaktbytteØnskeråfåfrPane1InnerText, uIVaktbytteØnskeråfåfrPane1.InnerText);
        }
        
        /// <summary>
        /// CheckRequestCreatedStep5 - Use 'CheckRequestCreatedStep5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRequestCreatedStep5()
        {
            #region Variable Declarations
            HtmlDiv uIOktPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid30Custom.UIOktPane;
            HtmlDiv uIItem08Pane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid30Custom.UIItem08Pane;
            HtmlSpan uIVaktbytteØnskerinnbyPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnprocessedSelfServiPane.UIVaktbytteØnskerinnbyPane;
            HtmlCustom uIItemCustom = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnprocessedSelfServiPane.UIItemCustom;
            HtmlSpan uIUbehandletPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnprocessedSelfServiPane.UIUbehandletPane;
            #endregion

            // Verify that the 'InnerText' property of 'okt' pane equals 'okt'
            Assert.AreEqual(this.CheckRequestCreatedStep5ExpectedValues.UIOktPaneInnerText, uIOktPane.InnerText);

            // Verify that the 'InnerText' property of '08' pane equals '08'
            Assert.AreEqual(this.CheckRequestCreatedStep5ExpectedValues.UIItem08PaneInnerText, uIItem08Pane.InnerText);

            // Verify that the 'InnerText' property of 'Vaktbytte - Ønsker innbyrdes bytte med B' pane equals 'Vaktbytte - Ønsker innbyrdes bytte med Byttes Med, Kan Gjerne'
            Assert.AreEqual(this.CheckRequestCreatedStep5ExpectedValues.UIVaktbytteØnskerinnbyPaneInnerText, uIVaktbytteØnskerinnbyPane.InnerText);

            // Verify that the 'Class' property of custom control equals 'icon icon-selfapprove action'
            Assert.AreEqual(this.CheckRequestCreatedStep5ExpectedValues.UIItemCustomClass, uIItemCustom.Class);

            // Verify that the 'InnerText' property of 'Ubehandlet' pane equals 'Ubehandlet'
            Assert.AreEqual(this.CheckRequestCreatedStep5ExpectedValues.UIUbehandletPaneInnerText, uIUbehandletPane.InnerText);
        }
        
        /// <summary>
        /// CheckRequestCreatedStep7 - Use 'CheckRequestCreatedStep7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRequestCreatedStep7()
        {
            #region Variable Declarations
            HtmlDiv uIOktPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid9Custom.UIOktPane;
            HtmlDiv uIItem09Pane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid9Custom.UIItem09Pane;
            HtmlSpan uIVaktbytteØnskeråfåfrPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnreadSelfServicesGrPane.UIVaktbytteØnskeråfåfrPane;
            HtmlSpan uIGodkjentPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnreadSelfServicesGrPane.UIGodkjentPane;
            HtmlDiv uIOktPane1 = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid10Custom.UIOktPane;
            HtmlDiv uIItem08Pane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid10Custom.UIItem08Pane;
            HtmlSpan uIVaktbytteØnskerinnbyPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnreadSelfServicesGrPane.UIVaktbytteØnskerinnbyPane;
            HtmlSpan uIGodkjentPane1 = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnreadSelfServicesGrPane.UIGodkjentPane1;
            HtmlDiv uIOktPane11 = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid11Custom.UIOktPane1;
            HtmlDiv uIItem07Pane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUiid11Custom.UIItem07Pane;
            HtmlSpan uIVaktbytteØnskerågiboPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnreadSelfServicesGrPane.UIVaktbytteØnskerågiboPane;
            HtmlSpan uIGodkjentPane2 = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIUnreadSelfServicesGrPane.UIGodkjentPane2;
            #endregion

            // Verify that the 'InnerText' property of 'okt' pane equals 'okt'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIOktPaneInnerText, uIOktPane.InnerText);

            // Verify that the 'InnerText' property of '09' pane equals '09'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIItem09PaneInnerText, uIItem09Pane.InnerText);

            // Verify that the 'InnerText' property of 'Vaktbytte - Ønsker å få fri en vakt, som' pane equals 'Vaktbytte - Ønsker å få fri en vakt, som jeg kan ta igjen senere'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIVaktbytteØnskeråfåfrPaneInnerText, uIVaktbytteØnskeråfåfrPane.InnerText);

            // Verify that the 'InnerText' property of 'Godkjent' pane equals 'Godkjent'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIGodkjentPaneInnerText, uIGodkjentPane.InnerText);

            // Verify that the 'InnerText' property of 'okt' pane equals 'okt'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIOktPaneInnerText1, uIOktPane1.InnerText);

            // Verify that the 'InnerText' property of '08' pane equals '08'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIItem08PaneInnerText, uIItem08Pane.InnerText);

            // Verify that the 'InnerText' property of 'Vaktbytte - Ønsker innbyrdes bytte med B' pane equals 'Vaktbytte - Ønsker innbyrdes bytte med Byttes Med, Kan Gjerne'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIVaktbytteØnskerinnbyPaneInnerText, uIVaktbytteØnskerinnbyPane.InnerText);

            // Verify that the 'InnerText' property of 'Godkjent' pane equals 'Godkjent'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIGodkjentPane1InnerText, uIGodkjentPane1.InnerText);

            // Verify that the 'InnerText' property of 'okt' pane equals 'okt'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIOktPane1InnerText, uIOktPane11.InnerText);

            // Verify that the 'InnerText' property of '07' pane equals '07'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIItem07PaneInnerText, uIItem07Pane.InnerText);

            // Verify that the 'InnerText' property of 'Vaktbytte - Ønsker å gi bort min vakt ti' pane equals 'Vaktbytte - Ønsker å gi bort min vakt til Byttes Med, Kan Gjerne'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIVaktbytteØnskerågiboPaneInnerText, uIVaktbytteØnskerågiboPane.InnerText);

            // Verify that the 'InnerText' property of 'Godkjent' pane equals 'Godkjent'
            Assert.AreEqual(this.CheckRequestCreatedStep7ExpectedValues.UIGodkjentPane2InnerText, uIGodkjentPane2.InnerText);
        }
        
        /// <summary>
        /// CheckRequestInGatStep2 - Use 'CheckRequestInGatStep2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRequestInGatStep2()
        {
            #region Variable Declarations
            DXCell uIGodkjenningEgenCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UIGodkjenningEgenCell;
            DXCell uIACell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UIACell;
            DXCell uIBCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UIBCell;
            DXCell uIByttesMedKanGjerneCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIByttesMedKanGjerneCell;
            DXCell uIBCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIBCell;
            DXCell uIByttesMedKanGjerneCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIByttesMedKanGjerneCell;
            DXCell uIDCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIDCell;
            #endregion

            // Verify that the 'Text' property of 'Godkjenning, Egen' cell equals 'Godkjenning, Egen'
            Assert.AreEqual(this.CheckRequestInGatStep2ExpectedValues.UIGodkjenningEgenCellText, uIGodkjenningEgenCell.Text);

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckRequestInGatStep2ExpectedValues.UIACellText, uIACell.Text);

            // Verify that the 'Text' property of 'B' cell equals 'B'
            Assert.AreEqual(this.CheckRequestInGatStep2ExpectedValues.UIBCellText, uIBCell.Text);

            // Verify that the 'Text' property of 'Byttes Med, Kan Gjerne' cell equals 'Byttes Med, Kan Gjerne'
            Assert.AreEqual(this.CheckRequestInGatStep2ExpectedValues.UIByttesMedKanGjerneCellText, uIByttesMedKanGjerneCell.Text);

            // Verify that the 'Text' property of 'B' cell equals 'B'
            Assert.AreEqual(this.CheckRequestInGatStep2ExpectedValues.UIBCellText1, uIBCell1.Text);

            // Verify that the 'Text' property of 'Byttes Med, Kan Gjerne' cell equals 'Byttes Med, Kan Gjerne'
            Assert.AreEqual(this.CheckRequestInGatStep2ExpectedValues.UIByttesMedKanGjerneCellText1, uIByttesMedKanGjerneCell1.Text);

            // Verify that the 'Text' property of 'D' cell equals 'D'
            Assert.AreEqual(this.CheckRequestInGatStep2ExpectedValues.UIDCellText, uIDCell.Text);
        }
        
        /// <summary>
        /// CheckRequestInGatStep3 - Use 'CheckRequestInGatStep3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRequestInGatStep3()
        {
            #region Variable Declarations
            DXMenuItem uIFredag09102020Uke41BarItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIFredag09102020Uke41BarItem;
            DXCell uIBACell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UIBACell;
            DXCell uIDCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UIDCell;
            DXCell uIGodkjenningEgenCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIFriVikar00167770770FDockPanel.UIControlContainerCustom.UIGcFreeColumnTable.UIGodkjenningEgenCell1;
            #endregion

            // Verify that the 'Text' property of 'Fredag 09.10.2020 - Uke 41' BarItem equals 'Fredag 09.10.2020 - Uke 41'
            Assert.AreEqual(this.CheckRequestInGatStep3ExpectedValues.UIFredag09102020Uke41BarItemText, uIFredag09102020Uke41BarItem.Text);

            // Verify that the 'Text' property of 'ba' cell equals 'ba'
            Assert.AreEqual(this.CheckRequestInGatStep3ExpectedValues.UIBACellText, uIBACell.Text);

            // Verify that the 'Text' property of 'D' cell equals 'D'
            Assert.AreEqual(this.CheckRequestInGatStep3ExpectedValues.UIDCellText, uIDCell.Text);

            // Verify that the 'Text' property of 'Godkjenning, Egen' cell equals 'Godkjenning, Egen'
            Assert.AreEqual(this.CheckRequestInGatStep3ExpectedValues.UIGodkjenningEgenCell1Text, uIGodkjenningEgenCell1.Text);
        }
        
        /// <summary>
        /// CheckRequestInGatStep7 - Use 'CheckRequestInGatStep7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRequestInGatStep7()
        {
            #region Variable Declarations
            DXCell uIDCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIDCell;
            DXCell uIBCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIBCell;
            DXCell uIByttesMedKanGjerneCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIByttesMedKanGjerneCell;
            DXCell uIACell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIACell;
            DXCell uIBCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIBCell;
            DXCell uIByttesMedKanGjerneCell1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIAften00167770770FalsDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIByttesMedKanGjerneCell;
            DXMenuItem uIFredag09102020Uke41BarItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIFredag09102020Uke41BarItem;
            #endregion

            // Verify that the 'Text' property of 'D' cell equals 'D'
            Assert.AreEqual(this.CheckRequestInGatStep7ExpectedValues.UIDCellText, uIDCell.Text);

            // Verify that the 'Text' property of 'B' cell equals 'B'
            Assert.AreEqual(this.CheckRequestInGatStep7ExpectedValues.UIBCellText, uIBCell.Text);

            // Verify that the 'Text' property of 'Byttes Med, Kan Gjerne' cell equals 'Godkjenning, Egen'
            Assert.AreEqual(this.CheckRequestInGatStep7ExpectedValues.UIByttesMedKanGjerneCellText, uIByttesMedKanGjerneCell.Text);

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckRequestInGatStep7ExpectedValues.UIACellText, uIACell.Text);

            // Verify that the 'Text' property of 'B' cell equals 'B'
            Assert.AreEqual(this.CheckRequestInGatStep7ExpectedValues.UIBCellText1, uIBCell1.Text);

            // Verify that the 'Text' property of 'Byttes Med, Kan Gjerne' cell equals 'Byttes Med, Kan Gjerne'
            Assert.AreEqual(this.CheckRequestInGatStep7ExpectedValues.UIByttesMedKanGjerneCellText1, uIByttesMedKanGjerneCell1.Text);

            // Verify that the 'Text' property of 'Fredag 09.10.2020 - Uke 41' BarItem equals 'Torsdag 08.10.2020 - Uke 41'
            Assert.AreEqual(this.CheckRequestInGatStep7ExpectedValues.UIFredag09102020Uke41BarItemText, uIFredag09102020Uke41BarItem.Text);
        }
        
        /// <summary>
        /// CheckRequestMovedStep6 - Use 'CheckRequestMovedStep6ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRequestMovedStep6()
        {
            #region Variable Declarations
            HtmlDiv uIIngendataPane = this.UIForespørslerMinGatv2Window.UIForespørslerMinGatv2Document.UIIngendataPane;
            #endregion

            // Verify that the 'HelpText' property of 'Ingen data' pane equals ''
            Assert.AreEqual(this.CheckRequestMovedStep6ExpectedValues.UIIngendataPaneHelpText, uIIngendataPane.HelpText);
        }
        
        #region Properties
        public virtual CheckRequestCreatedStep3ExpectedValues CheckRequestCreatedStep3ExpectedValues
        {
            get
            {
                if ((this.mCheckRequestCreatedStep3ExpectedValues == null))
                {
                    this.mCheckRequestCreatedStep3ExpectedValues = new CheckRequestCreatedStep3ExpectedValues();
                }
                return this.mCheckRequestCreatedStep3ExpectedValues;
            }
        }
        
        public virtual CheckRequestCreatedStep5ExpectedValues CheckRequestCreatedStep5ExpectedValues
        {
            get
            {
                if ((this.mCheckRequestCreatedStep5ExpectedValues == null))
                {
                    this.mCheckRequestCreatedStep5ExpectedValues = new CheckRequestCreatedStep5ExpectedValues();
                }
                return this.mCheckRequestCreatedStep5ExpectedValues;
            }
        }
        
        public virtual CheckRequestCreatedStep7ExpectedValues CheckRequestCreatedStep7ExpectedValues
        {
            get
            {
                if ((this.mCheckRequestCreatedStep7ExpectedValues == null))
                {
                    this.mCheckRequestCreatedStep7ExpectedValues = new CheckRequestCreatedStep7ExpectedValues();
                }
                return this.mCheckRequestCreatedStep7ExpectedValues;
            }
        }
        
        public virtual CheckRequestInGatStep2ExpectedValues CheckRequestInGatStep2ExpectedValues
        {
            get
            {
                if ((this.mCheckRequestInGatStep2ExpectedValues == null))
                {
                    this.mCheckRequestInGatStep2ExpectedValues = new CheckRequestInGatStep2ExpectedValues();
                }
                return this.mCheckRequestInGatStep2ExpectedValues;
            }
        }
        
        public virtual CheckRequestInGatStep3ExpectedValues CheckRequestInGatStep3ExpectedValues
        {
            get
            {
                if ((this.mCheckRequestInGatStep3ExpectedValues == null))
                {
                    this.mCheckRequestInGatStep3ExpectedValues = new CheckRequestInGatStep3ExpectedValues();
                }
                return this.mCheckRequestInGatStep3ExpectedValues;
            }
        }
        
        public virtual CheckRequestInGatStep7ExpectedValues CheckRequestInGatStep7ExpectedValues
        {
            get
            {
                if ((this.mCheckRequestInGatStep7ExpectedValues == null))
                {
                    this.mCheckRequestInGatStep7ExpectedValues = new CheckRequestInGatStep7ExpectedValues();
                }
                return this.mCheckRequestInGatStep7ExpectedValues;
            }
        }
        
        public virtual CheckRequestMovedStep6ExpectedValues CheckRequestMovedStep6ExpectedValues
        {
            get
            {
                if ((this.mCheckRequestMovedStep6ExpectedValues == null))
                {
                    this.mCheckRequestMovedStep6ExpectedValues = new CheckRequestMovedStep6ExpectedValues();
                }
                return this.mCheckRequestMovedStep6ExpectedValues;
            }
        }
        
        public UIForespørslerMinGatv2Window UIForespørslerMinGatv2Window
        {
            get
            {
                if ((this.mUIForespørslerMinGatv2Window == null))
                {
                    this.mUIForespørslerMinGatv2Window = new UIForespørslerMinGatv2Window();
                }
                return this.mUIForespørslerMinGatv2Window;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckRequestCreatedStep3ExpectedValues mCheckRequestCreatedStep3ExpectedValues;
        
        private CheckRequestCreatedStep5ExpectedValues mCheckRequestCreatedStep5ExpectedValues;
        
        private CheckRequestCreatedStep7ExpectedValues mCheckRequestCreatedStep7ExpectedValues;
        
        private CheckRequestInGatStep2ExpectedValues mCheckRequestInGatStep2ExpectedValues;
        
        private CheckRequestInGatStep3ExpectedValues mCheckRequestInGatStep3ExpectedValues;
        
        private CheckRequestInGatStep7ExpectedValues mCheckRequestInGatStep7ExpectedValues;
        
        private CheckRequestMovedStep6ExpectedValues mCheckRequestMovedStep6ExpectedValues;
        
        private UIForespørslerMinGatv2Window mUIForespørslerMinGatv2Window;
        
        private UIGatWindow mUIGatWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRequestCreatedStep3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRequestCreatedStep3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'okt' pane equals 'okt'
        /// </summary>
        public string UIOktPaneInnerText = "okt";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '09' pane equals '09'
        /// </summary>
        public string UIItem09PaneInnerText = "09";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Vaktbytte - Ønsker å få fri en vakt, som' pane equals 'Vaktbytte - Ønsker å få fri en vakt, som jeg kan ta igjen senere'
        /// </summary>
        public string UIVaktbytteØnskeråfåfrPane1InnerText = "Vaktbytte - Ønsker å få fri en vakt, som jeg kan ta igjen senere";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRequestCreatedStep5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRequestCreatedStep5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'okt' pane equals 'okt'
        /// </summary>
        public string UIOktPaneInnerText = "okt";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '08' pane equals '08'
        /// </summary>
        public string UIItem08PaneInnerText = "08";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Vaktbytte - Ønsker innbyrdes bytte med B' pane equals 'Vaktbytte - Ønsker innbyrdes bytte med Byttes Med, Kan Gjerne'
        /// </summary>
        public string UIVaktbytteØnskerinnbyPaneInnerText = "Vaktbytte - Ønsker innbyrdes bytte med Byttes Med, Kan Gjerne";
        
        /// <summary>
        /// Verify that the 'Class' property of custom control equals 'icon icon-selfapprove action'
        /// </summary>
        public string UIItemCustomClass = "icon icon-selfapprove action";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Ubehandlet' pane equals 'Ubehandlet'
        /// </summary>
        public string UIUbehandletPaneInnerText = "Ubehandlet";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRequestCreatedStep7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRequestCreatedStep7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'okt' pane equals 'okt'
        /// </summary>
        public string UIOktPaneInnerText = "okt";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '09' pane equals '09'
        /// </summary>
        public string UIItem09PaneInnerText = "09";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Vaktbytte - Ønsker å få fri en vakt, som' pane equals 'Vaktbytte - Ønsker å få fri en vakt, som jeg kan ta igjen senere'
        /// </summary>
        public string UIVaktbytteØnskeråfåfrPaneInnerText = "Vaktbytte - Ønsker å få fri en vakt, som jeg kan ta igjen senere";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Godkjent' pane equals 'Godkjent'
        /// </summary>
        public string UIGodkjentPaneInnerText = "Godkjent";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'okt' pane equals 'okt'
        /// </summary>
        public string UIOktPaneInnerText1 = "okt";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '08' pane equals '08'
        /// </summary>
        public string UIItem08PaneInnerText = "08";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Vaktbytte - Ønsker innbyrdes bytte med B' pane equals 'Vaktbytte - Ønsker innbyrdes bytte med Byttes Med, Kan Gjerne'
        /// </summary>
        public string UIVaktbytteØnskerinnbyPaneInnerText = "Vaktbytte - Ønsker innbyrdes bytte med Byttes Med, Kan Gjerne";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Godkjent' pane equals 'Godkjent'
        /// </summary>
        public string UIGodkjentPane1InnerText = "Godkjent";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'okt' pane equals 'okt'
        /// </summary>
        public string UIOktPane1InnerText = "okt";
        
        /// <summary>
        /// Verify that the 'InnerText' property of '07' pane equals '07'
        /// </summary>
        public string UIItem07PaneInnerText = "07";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Vaktbytte - Ønsker å gi bort min vakt ti' pane equals 'Vaktbytte - Ønsker å gi bort min vakt til Byttes Med, Kan Gjerne'
        /// </summary>
        public string UIVaktbytteØnskerågiboPaneInnerText = "Vaktbytte - Ønsker å gi bort min vakt til Byttes Med, Kan Gjerne";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Godkjent' pane equals 'Godkjent'
        /// </summary>
        public string UIGodkjentPane2InnerText = "Godkjent";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRequestInGatStep2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRequestInGatStep2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Godkjenning, Egen' cell equals 'Godkjenning, Egen'
        /// </summary>
        public string UIGodkjenningEgenCellText = "Godkjenning, Egen";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACellText = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of 'B' cell equals 'B'
        /// </summary>
        public string UIBCellText = "B";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Byttes Med, Kan Gjerne' cell equals 'Byttes Med, Kan Gjerne'
        /// </summary>
        public string UIByttesMedKanGjerneCellText = "Byttes Med, Kan Gjerne";
        
        /// <summary>
        /// Verify that the 'Text' property of 'B' cell equals 'B'
        /// </summary>
        public string UIBCellText1 = "B";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Byttes Med, Kan Gjerne' cell equals 'Byttes Med, Kan Gjerne'
        /// </summary>
        public string UIByttesMedKanGjerneCellText1 = "Byttes Med, Kan Gjerne";
        
        /// <summary>
        /// Verify that the 'Text' property of 'D' cell equals 'D'
        /// </summary>
        public string UIDCellText = "D";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRequestInGatStep3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRequestInGatStep3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Fredag 09.10.2020 - Uke 41' BarItem equals 'Fredag 09.10.2020 - Uke 41'
        /// </summary>
        public string UIFredag09102020Uke41BarItemText = "Fredag 09.10.2020 - Uke 41";
        
        /// <summary>
        /// Verify that the 'Text' property of 'ba' cell equals 'ba'
        /// </summary>
        public string UIBACellText = "ba";
        
        /// <summary>
        /// Verify that the 'Text' property of 'D' cell equals 'D'
        /// </summary>
        public string UIDCellText = "D";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Godkjenning, Egen' cell equals 'Godkjenning, Egen'
        /// </summary>
        public string UIGodkjenningEgenCell1Text = "Godkjenning, Egen";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRequestInGatStep7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRequestInGatStep7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'D' cell equals 'D'
        /// </summary>
        public string UIDCellText = "D";
        
        /// <summary>
        /// Verify that the 'Text' property of 'B' cell equals 'B'
        /// </summary>
        public string UIBCellText = "B";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Byttes Med, Kan Gjerne' cell equals 'Godkjenning, Egen'
        /// </summary>
        public string UIByttesMedKanGjerneCellText = "Godkjenning, Egen";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACellText = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of 'B' cell equals 'B'
        /// </summary>
        public string UIBCellText1 = "B";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Byttes Med, Kan Gjerne' cell equals 'Byttes Med, Kan Gjerne'
        /// </summary>
        public string UIByttesMedKanGjerneCellText1 = "Byttes Med, Kan Gjerne";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Fredag 09.10.2020 - Uke 41' BarItem equals 'Torsdag 08.10.2020 - Uke 41'
        /// </summary>
        public string UIFredag09102020Uke41BarItemText = "Torsdag 08.10.2020 - Uke 41";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRequestMovedStep6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRequestMovedStep6ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'Ingen data' pane equals ''
        /// </summary>
        public string UIIngendataPaneHelpText = null;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIForespørslerMinGatv2Window : BrowserWindow
    {
        
        public UIForespørslerMinGatv2Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Forespørsler - MinGat v.";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIForespørslerMinGatv2Document UIForespørslerMinGatv2Document
        {
            get
            {
                if ((this.mUIForespørslerMinGatv2Document == null))
                {
                    this.mUIForespørslerMinGatv2Document = new UIForespørslerMinGatv2Document(this);
                }
                return this.mUIForespørslerMinGatv2Document;
            }
        }
        
        public UIForespørslerMinGatv2Document1 UIForespørslerMinGatv2Document1
        {
            get
            {
                if ((this.mUIForespørslerMinGatv2Document1 == null))
                {
                    this.mUIForespørslerMinGatv2Document1 = new UIForespørslerMinGatv2Document1(this);
                }
                return this.mUIForespørslerMinGatv2Document1;
            }
        }
        #endregion
        
        #region Fields
        private UIForespørslerMinGatv2Document mUIForespørslerMinGatv2Document;
        
        private UIForespørslerMinGatv2Document1 mUIForespørslerMinGatv2Document1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIForespørslerMinGatv2Document : HtmlDocument
    {
        
        public UIForespørslerMinGatv2Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Forespørsler - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".internal.visma.com/MinGat/Employee/Home#!/selfservicelist/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UINyforespørselPane UINyforespørselPane
        {
            get
            {
                if ((this.mUINyforespørselPane == null))
                {
                    this.mUINyforespørselPane = new UINyforespørselPane(this);
                }
                return this.mUINyforespørselPane;
            }
        }
        
        public UISelfServiceListPagePane UISelfServiceListPagePane
        {
            get
            {
                if ((this.mUISelfServiceListPagePane == null))
                {
                    this.mUISelfServiceListPagePane = new UISelfServiceListPagePane(this);
                }
                return this.mUISelfServiceListPagePane;
            }
        }
        
        public HtmlComboBox UIByttetypeComboBox
        {
            get
            {
                if ((this.mUIByttetypeComboBox == null))
                {
                    this.mUIByttetypeComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIByttetypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "exchangeSelfServiceRegistration_changetype";
                    this.mUIByttetypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = null;
                    this.mUIByttetypeComboBox.SearchProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Byttetype";
                    this.mUIByttetypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIByttetypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIByttetypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "6";
                    this.mUIByttetypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "large";
                    this.mUIByttetypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "title=\"\" class=\"large\" id=\"exchangeSelfS";
                    this.mUIByttetypeComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "2";
                    this.mUIByttetypeComboBox.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIByttetypeComboBox;
            }
        }
        
        public HtmlCheckBox UIExchangeSelfServiceRCheckBox
        {
            get
            {
                if ((this.mUIExchangeSelfServiceRCheckBox == null))
                {
                    this.mUIExchangeSelfServiceRCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIExchangeSelfServiceRCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "exchangeSelfServiceRegistration_selfapproval";
                    this.mUIExchangeSelfServiceRCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = null;
                    this.mUIExchangeSelfServiceRCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Value] = "on";
                    this.mUIExchangeSelfServiceRCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.LabeledBy] = null;
                    this.mUIExchangeSelfServiceRCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIExchangeSelfServiceRCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = "ui-hidden-accessible";
                    this.mUIExchangeSelfServiceRCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "class=\"ui-hidden-accessible\" id=\"exchang";
                    this.mUIExchangeSelfServiceRCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "3";
                    this.mUIExchangeSelfServiceRCheckBox.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIExchangeSelfServiceRCheckBox;
            }
        }
        
        public HtmlEdit UIDagjegønskerfriEdit
        {
            get
            {
                if ((this.mUIDagjegønskerfriEdit == null))
                {
                    this.mUIDagjegønskerfriEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDagjegønskerfriEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "exchangeSelfServiceRegistration_offdate";
                    this.mUIDagjegønskerfriEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIDagjegønskerfriEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = "Dag jeg ønsker fri";
                    this.mUIDagjegønskerfriEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDagjegønskerfriEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDagjegønskerfriEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "date has-mask";
                    this.mUIDagjegønskerfriEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"date has-mask\" id=\"exchangeSelfSe";
                    this.mUIDagjegønskerfriEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIDagjegønskerfriEdit.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIDagjegønskerfriEdit;
            }
        }
        
        public HtmlComboBox UIA16002300ComboBox
        {
            get
            {
                if ((this.mUIA16002300ComboBox == null))
                {
                    this.mUIA16002300ComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIA16002300ComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "exchangeSelfServiceRegistration_shiftcode";
                    this.mUIA16002300ComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = null;
                    this.mUIA16002300ComboBox.SearchProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Har vakt";
                    this.mUIA16002300ComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIA16002300ComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = "A (16:00 - 23:00)";
                    this.mUIA16002300ComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "2";
                    this.mUIA16002300ComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = null;
                    this.mUIA16002300ComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "title=\"A (16:00 - 23:00)\" id=\"exchangeSe";
                    this.mUIA16002300ComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "3";
                    this.mUIA16002300ComboBox.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIA16002300ComboBox;
            }
        }
        
        public UIExchangeSelfServiceRPane UIExchangeSelfServiceRPane
        {
            get
            {
                if ((this.mUIExchangeSelfServiceRPane == null))
                {
                    this.mUIExchangeSelfServiceRPane = new UIExchangeSelfServiceRPane(this);
                }
                return this.mUIExchangeSelfServiceRPane;
            }
        }
        
        public HtmlCustom UIUiid56Custom
        {
            get
            {
                if ((this.mUIUiid56Custom == null))
                {
                    this.mUIUiid56Custom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIUiid56Custom.SearchProperties["TagName"] = "A";
                    this.mUIUiid56Custom.SearchProperties["Id"] = "ui-id-56";
                    this.mUIUiid56Custom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIUiid56Custom.FilterProperties["Class"] = "ui-corner-all";
                    this.mUIUiid56Custom.FilterProperties["ControlDefinition"] = "tabindex=\"-1\" class=\"ui-corner-all\" id=\"";
                    this.mUIUiid56Custom.FilterProperties["TagInstance"] = "135";
                    this.mUIUiid56Custom.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIUiid56Custom;
            }
        }
        
        public UILagreButton UILagreButton
        {
            get
            {
                if ((this.mUILagreButton == null))
                {
                    this.mUILagreButton = new UILagreButton(this);
                }
                return this.mUILagreButton;
            }
        }
        
        public UIApprovedSelfServicesPane UIApprovedSelfServicesPane
        {
            get
            {
                if ((this.mUIApprovedSelfServicesPane == null))
                {
                    this.mUIApprovedSelfServicesPane = new UIApprovedSelfServicesPane(this);
                }
                return this.mUIApprovedSelfServicesPane;
            }
        }
        
        public UIUiid14Custom UIUiid14Custom
        {
            get
            {
                if ((this.mUIUiid14Custom == null))
                {
                    this.mUIUiid14Custom = new UIUiid14Custom(this);
                }
                return this.mUIUiid14Custom;
            }
        }
        
        public UIUiid20Custom UIUiid20Custom
        {
            get
            {
                if ((this.mUIUiid20Custom == null))
                {
                    this.mUIUiid20Custom = new UIUiid20Custom(this);
                }
                return this.mUIUiid20Custom;
            }
        }
        
        public UIApprovedSelfServicesPane1 UIApprovedSelfServicesPane1
        {
            get
            {
                if ((this.mUIApprovedSelfServicesPane1 == null))
                {
                    this.mUIApprovedSelfServicesPane1 = new UIApprovedSelfServicesPane1(this);
                }
                return this.mUIApprovedSelfServicesPane1;
            }
        }
        
        public UIUiid11Custom UIUiid11Custom
        {
            get
            {
                if ((this.mUIUiid11Custom == null))
                {
                    this.mUIUiid11Custom = new UIUiid11Custom(this);
                }
                return this.mUIUiid11Custom;
            }
        }
        
        public UIUiid30Custom UIUiid30Custom
        {
            get
            {
                if ((this.mUIUiid30Custom == null))
                {
                    this.mUIUiid30Custom = new UIUiid30Custom(this);
                }
                return this.mUIUiid30Custom;
            }
        }
        
        public UIUnprocessedSelfServiPane UIUnprocessedSelfServiPane
        {
            get
            {
                if ((this.mUIUnprocessedSelfServiPane == null))
                {
                    this.mUIUnprocessedSelfServiPane = new UIUnprocessedSelfServiPane(this);
                }
                return this.mUIUnprocessedSelfServiPane;
            }
        }
        
        public HtmlDiv UIIngendataPane
        {
            get
            {
                if ((this.mUIIngendataPane == null))
                {
                    this.mUIIngendataPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIIngendataPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "sseViewUnprocessed";
                    this.mUIIngendataPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIIngendataPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Ingen data";
                    this.mUIIngendataPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIIngendataPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "tab-pane active";
                    this.mUIIngendataPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"tab-pane active\" id=\"sseViewUnprocessed\"";
                    this.mUIIngendataPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "363";
                    this.mUIIngendataPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIIngendataPane;
            }
        }
        
        public UIUiid9Custom UIUiid9Custom
        {
            get
            {
                if ((this.mUIUiid9Custom == null))
                {
                    this.mUIUiid9Custom = new UIUiid9Custom(this);
                }
                return this.mUIUiid9Custom;
            }
        }
        
        public UIUnreadSelfServicesGrPane UIUnreadSelfServicesGrPane
        {
            get
            {
                if ((this.mUIUnreadSelfServicesGrPane == null))
                {
                    this.mUIUnreadSelfServicesGrPane = new UIUnreadSelfServicesGrPane(this);
                }
                return this.mUIUnreadSelfServicesGrPane;
            }
        }
        
        public UIUiid10Custom UIUiid10Custom
        {
            get
            {
                if ((this.mUIUiid10Custom == null))
                {
                    this.mUIUiid10Custom = new UIUiid10Custom(this);
                }
                return this.mUIUiid10Custom;
            }
        }
        #endregion
        
        #region Fields
        private UINyforespørselPane mUINyforespørselPane;
        
        private UISelfServiceListPagePane mUISelfServiceListPagePane;
        
        private HtmlComboBox mUIByttetypeComboBox;
        
        private HtmlCheckBox mUIExchangeSelfServiceRCheckBox;
        
        private HtmlEdit mUIDagjegønskerfriEdit;
        
        private HtmlComboBox mUIA16002300ComboBox;
        
        private UIExchangeSelfServiceRPane mUIExchangeSelfServiceRPane;
        
        private HtmlCustom mUIUiid56Custom;
        
        private UILagreButton mUILagreButton;
        
        private UIApprovedSelfServicesPane mUIApprovedSelfServicesPane;
        
        private UIUiid14Custom mUIUiid14Custom;
        
        private UIUiid20Custom mUIUiid20Custom;
        
        private UIApprovedSelfServicesPane1 mUIApprovedSelfServicesPane1;
        
        private UIUiid11Custom mUIUiid11Custom;
        
        private UIUiid30Custom mUIUiid30Custom;
        
        private UIUnprocessedSelfServiPane mUIUnprocessedSelfServiPane;
        
        private HtmlDiv mUIIngendataPane;
        
        private UIUiid9Custom mUIUiid9Custom;
        
        private UIUnreadSelfServicesGrPane mUIUnreadSelfServicesGrPane;
        
        private UIUiid10Custom mUIUiid10Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINyforespørselPane : HtmlDiv
    {
        
        public UINyforespørselPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "selfServiceListPage_btnNew";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Ny forespørsel";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "gs-button kind-large-green type-button ui-iconspace ui-icon-size-large";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"gs-button kind-large-green type-button ui-iconspace ui-icon-size-large\" id" +
                "=\"selfServiceListPage_btnNew\" role=\"button\" data-bind=\"gsButton:true, click: new" +
                "Request.bind($root), clickBubble: false\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "181";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UINyforespørselPane1
        {
            get
            {
                if ((this.mUINyforespørselPane1 == null))
                {
                    this.mUINyforespørselPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUINyforespørselPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUINyforespørselPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUINyforespørselPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Ny forespørsel";
                    this.mUINyforespørselPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUINyforespørselPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-caption no-select";
                    this.mUINyforespørselPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-caption no-select\"";
                    this.mUINyforespørselPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "44";
                    this.mUINyforespørselPane1.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUINyforespørselPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUINyforespørselPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISelfServiceListPagePane : HtmlDiv
    {
        
        public UISelfServiceListPagePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "selfServiceListPage";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Ny forespørsel\r\n \r\n\r\nNy forespørsel\r\n\r\n\r\n";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"selfServiceListPage\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "178";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIVaktbytteHyperlink
        {
            get
            {
                if ((this.mUIVaktbytteHyperlink == null))
                {
                    this.mUIVaktbytteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIVaktbytteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIVaktbytteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIVaktbytteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIVaktbytteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "\r\n \r\nVaktbytte";
                    this.mUIVaktbytteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIVaktbytteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIVaktbytteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#!/selfservicelist/reg/exchange/new/";
                    this.mUIVaktbytteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIVaktbytteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/selfservicelist/reg/exchange/ne";
                    this.mUIVaktbytteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    this.mUIVaktbytteHyperlink.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIVaktbytteHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIExchangeSelfServiceRPane : HtmlDiv
    {
        
        public UIExchangeSelfServiceRPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "exchangeSelfServiceRegistration";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Avdeling \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n2040 - Drømme A";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"exchangeSelfServiceRegistration\" data-bind=\"with: registrationViewModel\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "170";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "...";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-caption no-select";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-caption no-select\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "48";
                    this.mUIItemPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILagreButton : HtmlButton
    {
        
        public UILagreButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlButton.PropertyNames.Id] = "btnRegSaveButton";
            this.SearchProperties[HtmlButton.PropertyNames.Name] = null;
            this.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "\r\n\r\n\r\nLagre";
            this.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
            this.FilterProperties[HtmlButton.PropertyNames.Title] = null;
            this.FilterProperties[HtmlButton.PropertyNames.Class] = "mg-modal-save gs-button kind-normal-green type-button ui-icon-size-normal";
            this.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"mg-modal-save gs-button kind-norm";
            this.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "9";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UILagrePane
        {
            get
            {
                if ((this.mUILagrePane == null))
                {
                    this.mUILagrePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUILagrePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUILagrePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILagrePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Lagre";
                    this.mUILagrePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILagrePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-caption no-select";
                    this.mUILagrePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-caption no-select\"";
                    this.mUILagrePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "63";
                    this.mUILagrePane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUILagrePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUILagrePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIApprovedSelfServicesPane : HtmlDiv
    {
        
        public UIApprovedSelfServicesPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "approvedSelfServicesGridGrid";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt\r\n\r\nons\r\n\r\n07\r\n\r\n2020\r\nVaktbytte - Øn";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "dx-widget dx-visibility-change-handler";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"dx-widget dx-visibility-change-handler\" id=\"approvedSelfServicesGridGrid\" " +
                "role=\"presentation\" style=\"width: 100%;\" data-bind=\"dxDataGrid: ApprovedSelfServ" +
                "icesDataGrid\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "379";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIVaktbytteØnskerågiboPane
        {
            get
            {
                if ((this.mUIVaktbytteØnskerågiboPane == null))
                {
                    this.mUIVaktbytteØnskerågiboPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Vaktbytte - Ønsker å gi bort min vakt til Byttes Med, Kan Gjerne", PropertyExpressionOperator.Contains));
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"text: Title\"";
                    this.mUIVaktbytteØnskerågiboPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteØnskerågiboPane;
            }
        }
        
        public HtmlSpan UIVaktbytteØnskerågiboPane1
        {
            get
            {
                if ((this.mUIVaktbytteØnskerågiboPane1 == null))
                {
                    this.mUIVaktbytteØnskerågiboPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVaktbytteØnskerågiboPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIVaktbytteØnskerågiboPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIVaktbytteØnskerågiboPane1.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Vaktbytte - Ønsker å gi bort min vakt ti", PropertyExpressionOperator.Contains));
                    this.mUIVaktbytteØnskerågiboPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIVaktbytteØnskerågiboPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIVaktbytteØnskerågiboPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"text: Title\"";
                    this.mUIVaktbytteØnskerågiboPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "88";
                    this.mUIVaktbytteØnskerågiboPane1.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteØnskerågiboPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIVaktbytteØnskerågiboPane;
        
        private HtmlSpan mUIVaktbytteØnskerågiboPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUiid14Custom : HtmlCustom
    {
        
        public UIUiid14Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "gs-calendar-sheet";
            this.SearchProperties["Id"] = "ui-id-14";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "calendar-sheet approved mode-day compact";
            this.FilterProperties["ControlDefinition"] = "class=\"calendar-sheet approved mode-day ";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItem07Pane
        {
            get
            {
                if ((this.mUIItem07Pane == null))
                {
                    this.mUIItem07Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "07";
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "value";
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"value\" data-bind=\"text: valueText, css: {special: isHoliday}\"";
                    this.mUIItem07Pane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItem07Pane;
            }
        }
        
        public HtmlDiv UIOktPane
        {
            get
            {
                if ((this.mUIOktPane == null))
                {
                    this.mUIOktPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\" data-bind=\"text: headerText\"";
                    this.mUIOktPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIOktPane;
            }
        }
        
        public HtmlDiv UIOktPane1
        {
            get
            {
                if ((this.mUIOktPane1 == null))
                {
                    this.mUIOktPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOktPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOktPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt";
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\" data-bind=\"text: headerText\"";
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "392";
                    this.mUIOktPane1.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIOktPane1;
            }
        }
        
        public HtmlDiv UIItem07Pane1
        {
            get
            {
                if ((this.mUIItem07Pane1 == null))
                {
                    this.mUIItem07Pane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem07Pane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem07Pane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem07Pane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "07";
                    this.mUIItem07Pane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem07Pane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "value";
                    this.mUIItem07Pane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"value\" data-bind=\"text: valueText, css: {special: isHoliday}\"";
                    this.mUIItem07Pane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "394";
                    this.mUIItem07Pane1.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItem07Pane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItem07Pane;
        
        private HtmlDiv mUIOktPane;
        
        private HtmlDiv mUIOktPane1;
        
        private HtmlDiv mUIItem07Pane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUiid20Custom : HtmlCustom
    {
        
        public UIUiid20Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "gs-calendar-sheet";
            this.SearchProperties["Id"] = "ui-id-20";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "calendar-sheet approved mode-day compact";
            this.FilterProperties["ControlDefinition"] = "class=\"calendar-sheet approved mode-day ";
            this.FilterProperties["TagInstance"] = "3";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItem09Pane
        {
            get
            {
                if ((this.mUIItem09Pane == null))
                {
                    this.mUIItem09Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "09";
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "value";
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"value\" data-bind=\"text: valueText, css: {special: isHoliday}\"";
                    this.mUIItem09Pane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItem09Pane;
            }
        }
        
        public HtmlDiv UIOktPane
        {
            get
            {
                if ((this.mUIOktPane == null))
                {
                    this.mUIOktPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\" data-bind=\"text: headerText\"";
                    this.mUIOktPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIOktPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItem09Pane;
        
        private HtmlDiv mUIOktPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIApprovedSelfServicesPane1 : HtmlDiv
    {
        
        public UIApprovedSelfServicesPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "approvedSelfServicesGridGrid";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt\r\n\r\nfre\r\n\r\n09\r\n\r\n2020\r\nVaktbytte - Øn";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "dx-widget dx-visibility-change-handler";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"dx-widget dx-visibility-change-handler\" id=\"approvedSelfServicesGridGrid\" " +
                "role=\"presentation\" style=\"width: 100%;\" data-bind=\"dxDataGrid: ApprovedSelfServ" +
                "icesDataGrid\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "401";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIVaktbytteØnskeråfåfrPane
        {
            get
            {
                if ((this.mUIVaktbytteØnskeråfåfrPane == null))
                {
                    this.mUIVaktbytteØnskeråfåfrPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVaktbytteØnskeråfåfrPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Vaktbytte - Ønsker å få fri en vakt, som jeg kan ta igjen senere", PropertyExpressionOperator.Contains));
                    this.mUIVaktbytteØnskeråfåfrPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"text: Title\"";
                    this.mUIVaktbytteØnskeråfåfrPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteØnskeråfåfrPane;
            }
        }
        
        public HtmlSpan UIVaktbytteØnskeråfåfrPane1
        {
            get
            {
                if ((this.mUIVaktbytteØnskeråfåfrPane1 == null))
                {
                    this.mUIVaktbytteØnskeråfåfrPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVaktbytteØnskeråfåfrPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIVaktbytteØnskeråfåfrPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIVaktbytteØnskeråfåfrPane1.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Vaktbytte - Ønsker å få fri en vakt, som", PropertyExpressionOperator.Contains));
                    this.mUIVaktbytteØnskeråfåfrPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIVaktbytteØnskeråfåfrPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIVaktbytteØnskeråfåfrPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"text: Title\"";
                    this.mUIVaktbytteØnskeråfåfrPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "99";
                    this.mUIVaktbytteØnskeråfåfrPane1.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteØnskeråfåfrPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIVaktbytteØnskeråfåfrPane;
        
        private HtmlSpan mUIVaktbytteØnskeråfåfrPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUiid11Custom : HtmlCustom
    {
        
        public UIUiid11Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "gs-calendar-sheet";
            this.SearchProperties["Id"] = "ui-id-11";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "calendar-sheet approved mode-day compact";
            this.FilterProperties["ControlDefinition"] = "class=\"calendar-sheet approved mode-day ";
            this.FilterProperties["TagInstance"] = "3";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIOktPane
        {
            get
            {
                if ((this.mUIOktPane == null))
                {
                    this.mUIOktPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\" data-bind=\"text: headerText\"";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "414";
                    this.mUIOktPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIOktPane;
            }
        }
        
        public HtmlDiv UIItem09Pane
        {
            get
            {
                if ((this.mUIItem09Pane == null))
                {
                    this.mUIItem09Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem09Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem09Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "09";
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "value";
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"value\" data-bind=\"text: valueText, css: {special: isHoliday}\"";
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "416";
                    this.mUIItem09Pane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItem09Pane;
            }
        }
        
        public HtmlDiv UIOktPane1
        {
            get
            {
                if ((this.mUIOktPane1 == null))
                {
                    this.mUIOktPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOktPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOktPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt";
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\" data-bind=\"text: headerText\"";
                    this.mUIOktPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "297";
                    this.mUIOktPane1.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIOktPane1;
            }
        }
        
        public HtmlDiv UIItem07Pane
        {
            get
            {
                if ((this.mUIItem07Pane == null))
                {
                    this.mUIItem07Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem07Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem07Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "07";
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "value";
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"value\" data-bind=\"text: valueText, css: {special: isHoliday}\"";
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "299";
                    this.mUIItem07Pane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItem07Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIOktPane;
        
        private HtmlDiv mUIItem09Pane;
        
        private HtmlDiv mUIOktPane1;
        
        private HtmlDiv mUIItem07Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUiid30Custom : HtmlCustom
    {
        
        public UIUiid30Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "gs-calendar-sheet";
            this.SearchProperties["Id"] = "ui-id-30";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "calendar-sheet unprocessed mode-day compact";
            this.FilterProperties["ControlDefinition"] = "class=\"calendar-sheet unprocessed mode-d";
            this.FilterProperties["TagInstance"] = "3";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIOktPane
        {
            get
            {
                if ((this.mUIOktPane == null))
                {
                    this.mUIOktPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\" data-bind=\"text: headerText\"";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "356";
                    this.mUIOktPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIOktPane;
            }
        }
        
        public HtmlDiv UIItem08Pane
        {
            get
            {
                if ((this.mUIItem08Pane == null))
                {
                    this.mUIItem08Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem08Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem08Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "08";
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "value";
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"value\" data-bind=\"text: valueText, css: {special: isHoliday}\"";
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "358";
                    this.mUIItem08Pane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItem08Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIOktPane;
        
        private HtmlDiv mUIItem08Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUnprocessedSelfServiPane : HtmlDiv
    {
        
        public UIUnprocessedSelfServiPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "unprocessedSelfServicesGridGrid";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt\r\n\r\ntor\r\n\r\n08\r\n\r\n2020\r\nVaktbytte - Øn";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "dx-widget dx-visibility-change-handler";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"dx-widget dx-visibility-change-handler\" id=\"unprocessedSelfServicesGridGri" +
                "d\" role=\"presentation\" style=\"width: 100%;\" data-bind=\"dxDataGrid: UnprocessedSe" +
                "lfServicesDataGrid\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "343";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIVaktbytteØnskerinnbyPane
        {
            get
            {
                if ((this.mUIVaktbytteØnskerinnbyPane == null))
                {
                    this.mUIVaktbytteØnskerinnbyPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVaktbytteØnskerinnbyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIVaktbytteØnskerinnbyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Vaktbytte - Ønsker innbyrdes bytte med B", PropertyExpressionOperator.Contains));
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"text: Title\"";
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "97";
                    this.mUIVaktbytteØnskerinnbyPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteØnskerinnbyPane;
            }
        }
        
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "icon icon-selfapprove action";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"icon icon-selfapprove action\" sty";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlSpan UIUbehandletPane
        {
            get
            {
                if ((this.mUIUbehandletPane == null))
                {
                    this.mUIUbehandletPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIUbehandletPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIUbehandletPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIUbehandletPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Ubehandlet";
                    this.mUIUbehandletPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIUbehandletPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "reg-status-text";
                    this.mUIUbehandletPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"reg-status-text\" data-bind=\"text: StatusText\"";
                    this.mUIUbehandletPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "100";
                    this.mUIUbehandletPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIUbehandletPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIVaktbytteØnskerinnbyPane;
        
        private HtmlCustom mUIItemCustom;
        
        private HtmlSpan mUIUbehandletPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUiid9Custom : HtmlCustom
    {
        
        public UIUiid9Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "gs-calendar-sheet";
            this.SearchProperties["Id"] = "ui-id-9";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "calendar-sheet approved mode-day compact";
            this.FilterProperties["ControlDefinition"] = "class=\"calendar-sheet approved mode-day ";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIOktPane
        {
            get
            {
                if ((this.mUIOktPane == null))
                {
                    this.mUIOktPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\" data-bind=\"text: headerText\"";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "253";
                    this.mUIOktPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIOktPane;
            }
        }
        
        public HtmlDiv UIItem09Pane
        {
            get
            {
                if ((this.mUIItem09Pane == null))
                {
                    this.mUIItem09Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem09Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem09Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "09";
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "value";
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"value\" data-bind=\"text: valueText, css: {special: isHoliday}\"";
                    this.mUIItem09Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "255";
                    this.mUIItem09Pane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItem09Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIOktPane;
        
        private HtmlDiv mUIItem09Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUnreadSelfServicesGrPane : HtmlDiv
    {
        
        public UIUnreadSelfServicesGrPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "unreadSelfServicesGridGrid";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt\r\n\r\nfre\r\n\r\n09\r\n\r\n2020\r\nVaktbytte - Øn";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "dx-widget dx-visibility-change-handler";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"dx-widget dx-visibility-change-handler\" id=\"unreadSelfServicesGridGrid\" ro" +
                "le=\"presentation\" style=\"width: 100%;\" data-bind=\"dxDataGrid: UnreadSelfServices" +
                "DataGrid\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "240";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIVaktbytteØnskeråfåfrPane
        {
            get
            {
                if ((this.mUIVaktbytteØnskeråfåfrPane == null))
                {
                    this.mUIVaktbytteØnskeråfåfrPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVaktbytteØnskeråfåfrPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIVaktbytteØnskeråfåfrPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIVaktbytteØnskeråfåfrPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Vaktbytte - Ønsker å få fri en vakt, som";
                    this.mUIVaktbytteØnskeråfåfrPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIVaktbytteØnskeråfåfrPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIVaktbytteØnskeråfåfrPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"text: Title\"";
                    this.mUIVaktbytteØnskeråfåfrPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "73";
                    this.mUIVaktbytteØnskeråfåfrPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteØnskeråfåfrPane;
            }
        }
        
        public HtmlSpan UIGodkjentPane
        {
            get
            {
                if ((this.mUIGodkjentPane == null))
                {
                    this.mUIGodkjentPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGodkjentPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGodkjentPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Godkjent";
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "reg-status-text";
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"reg-status-text\" data-bind=\"text: StatusText\"";
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "76";
                    this.mUIGodkjentPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIGodkjentPane;
            }
        }
        
        public HtmlSpan UIVaktbytteØnskerinnbyPane
        {
            get
            {
                if ((this.mUIVaktbytteØnskerinnbyPane == null))
                {
                    this.mUIVaktbytteØnskerinnbyPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVaktbytteØnskerinnbyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIVaktbytteØnskerinnbyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Vaktbytte - Ønsker innbyrdes bytte med B";
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"text: Title\"";
                    this.mUIVaktbytteØnskerinnbyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "84";
                    this.mUIVaktbytteØnskerinnbyPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteØnskerinnbyPane;
            }
        }
        
        public HtmlSpan UIGodkjentPane1
        {
            get
            {
                if ((this.mUIGodkjentPane1 == null))
                {
                    this.mUIGodkjentPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGodkjentPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGodkjentPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGodkjentPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Godkjent";
                    this.mUIGodkjentPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGodkjentPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "reg-status-text";
                    this.mUIGodkjentPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"reg-status-text\" data-bind=\"text: StatusText\"";
                    this.mUIGodkjentPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "87";
                    this.mUIGodkjentPane1.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIGodkjentPane1;
            }
        }
        
        public HtmlSpan UIVaktbytteØnskerågiboPane
        {
            get
            {
                if ((this.mUIVaktbytteØnskerågiboPane == null))
                {
                    this.mUIVaktbytteØnskerågiboPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVaktbytteØnskerågiboPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIVaktbytteØnskerågiboPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Vaktbytte - Ønsker å gi bort min vakt ti";
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"text: Title\"";
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "95";
                    this.mUIVaktbytteØnskerågiboPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteØnskerågiboPane;
            }
        }
        
        public HtmlSpan UIGodkjentPane2
        {
            get
            {
                if ((this.mUIGodkjentPane2 == null))
                {
                    this.mUIGodkjentPane2 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGodkjentPane2.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGodkjentPane2.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGodkjentPane2.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Godkjent";
                    this.mUIGodkjentPane2.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGodkjentPane2.FilterProperties[HtmlDiv.PropertyNames.Class] = "reg-status-text";
                    this.mUIGodkjentPane2.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"reg-status-text\" data-bind=\"text: StatusText\"";
                    this.mUIGodkjentPane2.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "98";
                    this.mUIGodkjentPane2.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIGodkjentPane2;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIVaktbytteØnskeråfåfrPane;
        
        private HtmlSpan mUIGodkjentPane;
        
        private HtmlSpan mUIVaktbytteØnskerinnbyPane;
        
        private HtmlSpan mUIGodkjentPane1;
        
        private HtmlSpan mUIVaktbytteØnskerågiboPane;
        
        private HtmlSpan mUIGodkjentPane2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUiid10Custom : HtmlCustom
    {
        
        public UIUiid10Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "gs-calendar-sheet";
            this.SearchProperties["Id"] = "ui-id-10";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "calendar-sheet approved mode-day compact";
            this.FilterProperties["ControlDefinition"] = "class=\"calendar-sheet approved mode-day ";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIOktPane
        {
            get
            {
                if ((this.mUIOktPane == null))
                {
                    this.mUIOktPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\" data-bind=\"text: headerText\"";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "275";
                    this.mUIOktPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIOktPane;
            }
        }
        
        public HtmlDiv UIItem08Pane
        {
            get
            {
                if ((this.mUIItem08Pane == null))
                {
                    this.mUIItem08Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem08Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem08Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "08";
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "value";
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"value\" data-bind=\"text: valueText, css: {special: isHoliday}\"";
                    this.mUIItem08Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "277";
                    this.mUIItem08Pane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItem08Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIOktPane;
        
        private HtmlDiv mUIItem08Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIForespørslerMinGatv2Document1 : HtmlDocument
    {
        
        public UIForespørslerMinGatv2Document1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Forespørsler - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".internal.visma.com/MinGat/Employee/Home#!/selfservicelist/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIApprovedSelfServicesPane2 UIApprovedSelfServicesPane
        {
            get
            {
                if ((this.mUIApprovedSelfServicesPane == null))
                {
                    this.mUIApprovedSelfServicesPane = new UIApprovedSelfServicesPane2(this);
                }
                return this.mUIApprovedSelfServicesPane;
            }
        }
        
        public UIUiid14Custom1 UIUiid14Custom
        {
            get
            {
                if ((this.mUIUiid14Custom == null))
                {
                    this.mUIUiid14Custom = new UIUiid14Custom1(this);
                }
                return this.mUIUiid14Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIApprovedSelfServicesPane2 mUIApprovedSelfServicesPane;
        
        private UIUiid14Custom1 mUIUiid14Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIApprovedSelfServicesPane2 : HtmlDiv
    {
        
        public UIApprovedSelfServicesPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "approvedSelfServicesGridGrid";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt\r\n\r\nons\r\n\r\n07\r\n\r\n2020\r\nVaktbytte - Øn";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "dx-widget dx-visibility-change-handler";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"dx-widget dx-visibility-change-handler\" id=\"approvedSelfServicesGridGrid\" " +
                "role=\"presentation\" style=\"width: 100%;\" data-bind=\"dxDataGrid: ApprovedSelfServ" +
                "icesDataGrid\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "379";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIVaktbytteØnskerågiboPane
        {
            get
            {
                if ((this.mUIVaktbytteØnskerågiboPane == null))
                {
                    this.mUIVaktbytteØnskerågiboPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Vaktbytte - Ønsker å gi bort min vakt ti", PropertyExpressionOperator.Contains));
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "data-bind=\"text: Title\"";
                    this.mUIVaktbytteØnskerågiboPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "88";
                    this.mUIVaktbytteØnskerågiboPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIVaktbytteØnskerågiboPane;
            }
        }
        
        public HtmlSpan UIGodkjentPane
        {
            get
            {
                if ((this.mUIGodkjentPane == null))
                {
                    this.mUIGodkjentPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGodkjentPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGodkjentPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Godkjent";
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "reg-status-text";
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"reg-status-text\" data-bind=\"text: StatusText\"";
                    this.mUIGodkjentPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "91";
                    this.mUIGodkjentPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIGodkjentPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIVaktbytteØnskerågiboPane;
        
        private HtmlSpan mUIGodkjentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUiid14Custom1 : HtmlCustom
    {
        
        public UIUiid14Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "gs-calendar-sheet";
            this.SearchProperties["Id"] = "ui-id-14";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "calendar-sheet approved mode-day compact";
            this.FilterProperties["ControlDefinition"] = "class=\"calendar-sheet approved mode-day ";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIOktPane
        {
            get
            {
                if ((this.mUIOktPane == null))
                {
                    this.mUIOktPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOktPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "okt";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\" data-bind=\"text: headerText\"";
                    this.mUIOktPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "392";
                    this.mUIOktPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIOktPane;
            }
        }
        
        public HtmlDiv UIItem07Pane
        {
            get
            {
                if ((this.mUIItem07Pane == null))
                {
                    this.mUIItem07Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem07Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem07Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "07";
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "value";
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"value\" data-bind=\"text: valueText, css: {special: isHoliday}\"";
                    this.mUIItem07Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "394";
                    this.mUIItem07Pane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItem07Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIOktPane;
        
        private HtmlDiv mUIItem07Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        
        public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        
        private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIFriVikar00167770770FDockPanel UIFriVikar00167770770FDockPanel
        {
            get
            {
                if ((this.mUIFriVikar00167770770FDockPanel == null))
                {
                    this.mUIFriVikar00167770770FDockPanel = new UIFriVikar00167770770FDockPanel(this);
                }
                return this.mUIFriVikar00167770770FDockPanel;
            }
        }
        
        public UIAften00167770770FalsDockPanel UIAften00167770770FalsDockPanel
        {
            get
            {
                if ((this.mUIAften00167770770FalsDockPanel == null))
                {
                    this.mUIAften00167770770FalsDockPanel = new UIAften00167770770FalsDockPanel(this);
                }
                return this.mUIAften00167770770FalsDockPanel;
            }
        }
        
        public UIDag00167770770FalseDockPanel UIDag00167770770FalseDockPanel
        {
            get
            {
                if ((this.mUIDag00167770770FalseDockPanel == null))
                {
                    this.mUIDag00167770770FalseDockPanel = new UIDag00167770770FalseDockPanel(this);
                }
                return this.mUIDag00167770770FalseDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIFriVikar00167770770FDockPanel mUIFriVikar00167770770FDockPanel;
        
        private UIAften00167770770FalsDockPanel mUIAften00167770770FalsDockPanel;
        
        private UIDag00167770770FalseDockPanel mUIDag00167770770FalseDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFriVikar00167770770FDockPanel : DXDockPanel
    {
        
        public UIFriVikar00167770770FDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Fri / Vikar;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcFreeColumnTable UIGcFreeColumnTable
        {
            get
            {
                if ((this.mUIGcFreeColumnTable == null))
                {
                    this.mUIGcFreeColumnTable = new UIGcFreeColumnTable(this);
                }
                return this.mUIGcFreeColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcFreeColumnTable mUIGcFreeColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcFreeColumnTable : DXGrid
    {
        
        public UIGcFreeColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIGodkjenningEgenCell
        {
            get
            {
                if ((this.mUIGodkjenningEgenCell == null))
                {
                    this.mUIGodkjenningEgenCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGodkjenningEgenCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]0[Column]colEmployeeName";
                    this.mUIGodkjenningEgenCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGodkjenningEgenCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGodkjenningEgenCell;
            }
        }
        
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]0[Column]colShiftCode";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        
        public DXCell UIBCell
        {
            get
            {
                if ((this.mUIBCell == null))
                {
                    this.mUIBCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]0[Column]colStatusCode";
                    this.mUIBCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBCell;
            }
        }
        
        public DXCell UIBACell
        {
            get
            {
                if ((this.mUIBACell == null))
                {
                    this.mUIBACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]1[Column]colStatusCode";
                    this.mUIBACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBACell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBACell;
            }
        }
        
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]1[Column]colShiftCode";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        
        public DXCell UIGodkjenningEgenCell1
        {
            get
            {
                if ((this.mUIGodkjenningEgenCell1 == null))
                {
                    this.mUIGodkjenningEgenCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGodkjenningEgenCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcFreeColumnGridControlCell[View]gvFreeColumn[Row]1[Column]colEmployeeName";
                    this.mUIGodkjenningEgenCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGodkjenningEgenCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGodkjenningEgenCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGodkjenningEgenCell;
        
        private DXCell mUIACell;
        
        private DXCell mUIBCell;
        
        private DXCell mUIBACell;
        
        private DXCell mUIDCell;
        
        private DXCell mUIGodkjenningEgenCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAften00167770770FalsDockPanel : DXDockPanel
    {
        
        public UIAften00167770770FalsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom2 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom2 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom2 : DXTestControl
    {
        
        public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Aften;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable : DXGrid
    {
        
        public UIGcDayColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIByttesMedKanGjerneCell
        {
            get
            {
                if ((this.mUIByttesMedKanGjerneCell == null))
                {
                    this.mUIByttesMedKanGjerneCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIByttesMedKanGjerneCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIByttesMedKanGjerneCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIByttesMedKanGjerneCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIByttesMedKanGjerneCell;
            }
        }
        
        public DXCell UIBCell
        {
            get
            {
                if ((this.mUIBCell == null))
                {
                    this.mUIBCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colStatusCode";
                    this.mUIBCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBCell;
            }
        }
        
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colShiftCode";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIByttesMedKanGjerneCell;
        
        private DXCell mUIBCell;
        
        private DXCell mUIACell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDag00167770770FalseDockPanel : DXDockPanel
    {
        
        public UIDag00167770770FalseDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom3 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom3 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom3 : DXTestControl
    {
        
        public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable1 UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable1(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable1 mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable1 : DXGrid
    {
        
        public UIGcDayColumnTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIByttesMedKanGjerneCell
        {
            get
            {
                if ((this.mUIByttesMedKanGjerneCell == null))
                {
                    this.mUIByttesMedKanGjerneCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIByttesMedKanGjerneCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIByttesMedKanGjerneCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIByttesMedKanGjerneCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIByttesMedKanGjerneCell;
            }
        }
        
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colShiftCode";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        
        public DXCell UIBCell
        {
            get
            {
                if ((this.mUIBCell == null))
                {
                    this.mUIBCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colStatusCode";
                    this.mUIBCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIByttesMedKanGjerneCell;
        
        private DXCell mUIDCell;
        
        private DXCell mUIBCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStandaloneBarDockConCustom : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainmenuMenuBar : DXMenu
    {
        
        public UIMainmenuMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuItem UIFredag09102020Uke41BarItem
        {
            get
            {
                if ((this.mUIFredag09102020Uke41BarItem == null))
                {
                    this.mUIFredag09102020Uke41BarItem = new DXMenuItem(this);
                    #region Search Criteria
                    this.mUIFredag09102020Uke41BarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "lblSelectedDate";
                    this.mUIFredag09102020Uke41BarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
                    this.mUIFredag09102020Uke41BarItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFredag09102020Uke41BarItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuItem mUIFredag09102020Uke41BarItem;
        #endregion
    }
}
