// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _020_Test_Arbeidsplan_Kopiering
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v18_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddVictoriaShifts - Use 'AddVictoriaShiftsParams' to pass parameters into this method.
        /// </summary>
        public void AddVictoriaShifts()
        {
            #region Variable Declarations
            DXCell uIF1Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIF1Cell;
            DXTextEdit uIRow5ColumnRosterCellEdit = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit;
            DXCell uIDCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell1;
            DXTextEdit uIRow5ColumnRosterCellEdit3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit3;
            DXCell uIItemCell12 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell12;
            DXTextEdit uIRow5ColumnRosterCellEdit4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit4;
            DXCell uIItemCell13 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell13;
            DXCell uIItemCell21 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell21;
            DXTextEdit uIRow5ColumnRosterCellEdit5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit5;
            DXButton uIJAButton = this.UIGT4003InformasjonWindow.UIJAButton;
            DXCell uIItemCell31 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell31;
            DXCell uIItemCell41 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell41;
            DXTextEdit uIRow5ColumnRosterCellEdit6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit6;
            DXCell uIItemCell51 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell51;
            DXTextEdit uIRow5ColumnRosterCellEdit7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit7;
            DXCell uIItemCell61 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell61;
            DXTextEdit uIRow5ColumnRosterCellEdit10 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit10;
            DXCell uIItemCell71 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell71;
            DXCell uIItemCell81 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell81;
            DXTextEdit uIRow5ColumnRosterCellEdit11 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit11;
            DXCell uIItemCell91 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell91;
            DXTextEdit uIRow5ColumnRosterCellEdit12 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit12;
            DXCell uIItemCell101 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell101;
            DXTextEdit uIRow5ColumnRosterCellEdit13 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit13;
            DXCell uIGV1Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIGV1Cell;
            DXCell uIGV1Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIGV1Cell1;
            DXTextEdit uIRow5ColumnRosterCellEdit15 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit15;
            #endregion

            // Click 'F1' cell
            Mouse.Click(uIF1Cell, new Point(14, 5));

            // Type 'f1{Tab}' in '[Row]5[Column]RosterCell_6' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click 'D' cell
            Mouse.Click(uIDCell1, new Point(20, 9));

            // Type 'd{Tab}' in '[Row]5[Column]RosterCell_7' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit3, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit3SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell12, new Point(10, 6));

            // Type 'f1{Tab}' in '[Row]5[Column]RosterCell_9' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit4, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit4SendKeys, ModifierKeys.None);

            // Move cell to cell
            uIItemCell21.EnsureClickable(new Point(14, 6));
            Mouse.StartDragging(uIItemCell13, new Point(13, 6));
            Mouse.StopDragging(uIItemCell21, new Point(14, 6));

            // Type 'n{Tab}' in '[Row]5[Column]RosterCell_11' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit5, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit5SendKeys, ModifierKeys.None);

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));

            // Move cell to cell
            uIItemCell41.EnsureClickable(new Point(14, 7));
            Mouse.StartDragging(uIItemCell31, new Point(27, 8));
            Mouse.StopDragging(uIItemCell41, new Point(14, 7));

            // Type 'a{Tab}' in '[Row]5[Column]RosterCell_15' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit6, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit6SendKeys, ModifierKeys.None);

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));

            // Click cell
            Mouse.Click(uIItemCell51, new Point(17, 7));

            // Type 'f2{Tab}' in '[Row]5[Column]RosterCell_19' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit7, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit7SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell61, new Point(12, 11));

            // Type 'f1{Tab}' in '[Row]5[Column]RosterCell_20' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit10, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit10SendKeys, ModifierKeys.None);

            // Move cell to cell
            uIItemCell81.EnsureClickable(new Point(15, 11));
            Mouse.StartDragging(uIItemCell71, new Point(26, 5));
            Mouse.StopDragging(uIItemCell81, new Point(15, 11));

            // Type 'd{Tab}' in '[Row]5[Column]RosterCell_21' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit11, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit11SendKeys, ModifierKeys.None);

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));

            // Click cell
            Mouse.Click(uIItemCell91, new Point(15, 8));

            // Type 'f2{Tab}' in '[Row]5[Column]RosterCell_26' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit12, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit12SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell101, new Point(20, 11));

            // Type 'f1{Tab}' in '[Row]5[Column]RosterCell_27' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit13, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit13SendKeys, ModifierKeys.None);

            // Move 'GV1' cell to 'GV1' cell
            uIGV1Cell1.EnsureClickable(new Point(22, 7));
            Mouse.StartDragging(uIGV1Cell, new Point(29, 8));
            Mouse.StopDragging(uIGV1Cell1, new Point(22, 7));

            // Type 'gv1{Tab}' in '[Row]5[Column]RosterCell_0' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit15, this.AddVictoriaShiftsParams.UIRow5ColumnRosterCellEdit15SendKeys, ModifierKeys.None);

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CheckCopyCalendarplanValues - Use 'CheckCopyCalendarplanValuesExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCopyCalendarplanValues()
        {
            #region Variable Declarations
            DXTextEdit uITxtNameEdit = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UITxtNameEdit;
            DXDateTimePicker uIPceDateDateTimeEdit = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIDeStartDateCustom.UIPceDateDateTimeEdit;
            DXTextEdit uIENumber0Edit = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIENumber0Edit;
            DXDateTimePicker uIPceDateDateTimeEdit1 = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIDeEndDateCustom.UIPceDateDateTimeEdit;
            DXCheckBox uIChkTasksCheckBox = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIGcIncludeClient.UIChkTasksCheckBox;
            DXCheckBox uIChkKladdCheckBox = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIChkKladdCheckBox;
            #endregion

            // Verify that the 'ValueAsString' property of 'txtName' text box equals 'Kopi av Kalenderplan.'
            Assert.AreEqual(this.CheckCopyCalendarplanValuesExpectedValues.UITxtNameEditValueAsString, uITxtNameEdit.ValueAsString);

            // Verify that the 'ValueAsString' property of 'pceDate' DateTimeEdit equals '2024-01-07'
            Assert.AreEqual(this.CheckCopyCalendarplanValuesExpectedValues.UIPceDateDateTimeEditValueAsString, uIPceDateDateTimeEdit.ValueAsString);

            // Verify that the 'ValueAsString' property of 'eNumber[0]' text box equals '4'
            Assert.AreEqual(this.CheckCopyCalendarplanValuesExpectedValues.UIENumber0EditValueAsString, uIENumber0Edit.ValueAsString);

            // Verify that the 'ValueAsString' property of 'pceDate' DateTimeEdit equals '2024-07-28'
            Assert.AreEqual(this.CheckCopyCalendarplanValuesExpectedValues.UIPceDateDateTimeEditValueAsString1, uIPceDateDateTimeEdit1.ValueAsString);

            // Verify that the 'ValueAsString' property of 'chkTasks' check box equals 'False'
            Assert.AreEqual(this.CheckCopyCalendarplanValuesExpectedValues.UIChkTasksCheckBoxValueAsString, uIChkTasksCheckBox.ValueAsString);

            // Verify that the 'Checked' property of 'chkKladd' check box equals 'False'
            Assert.AreEqual(this.CheckCopyCalendarplanValuesExpectedValues.UIChkKladdCheckBoxChecked, uIChkKladdCheckBox.Checked);
        }
        
        /// <summary>
        /// CheckEmpDataStep_22 - Use 'CheckEmpDataStep_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEmpDataStep_22()
        {
            #region Variable Declarations
            DXCell uIBelsethTrudeCell = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIBelsethTrudeCell;
            DXCell uIDvorakSamuelCell = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIDvorakSamuelCell;
            DXCell uIHolmèrHansCell = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIHolmèrHansCell;
            DXCell uIHusebyKjellCell = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIHusebyKjellCell;
            DXCell uIIsfjellBjørnCell = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIIsfjellBjørnCell;
            DXCell uIIsfjellBjørnCell1 = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIIsfjellBjørnCell1;
            #endregion

            // Verify that the 'ValueAsString' property of 'Belseth, Trude' cell equals 'Belseth, Trude'
            Assert.AreEqual(this.CheckEmpDataStep_22ExpectedValues.UIBelsethTrudeCellValueAsString, uIBelsethTrudeCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Dvorak, Samuel' cell equals 'Dvorak, Samuel'
            Assert.AreEqual(this.CheckEmpDataStep_22ExpectedValues.UIDvorakSamuelCellValueAsString, uIDvorakSamuelCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Holmèr, Hans' cell equals 'Holmèr, Hans'
            Assert.AreEqual(this.CheckEmpDataStep_22ExpectedValues.UIHolmèrHansCellValueAsString, uIHolmèrHansCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Huseby, Kjell' cell equals 'Huseby, Kjell'
            Assert.AreEqual(this.CheckEmpDataStep_22ExpectedValues.UIHusebyKjellCellValueAsString, uIHusebyKjellCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Isfjell, Bjørn' cell equals 'Isfjell, Bjørn'
            Assert.AreEqual(this.CheckEmpDataStep_22ExpectedValues.UIIsfjellBjørnCellValueAsString, uIIsfjellBjørnCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Isfjell, Bjørn' cell equals 'Isfjell, Bjørn'
            Assert.AreEqual(this.CheckEmpDataStep_22ExpectedValues.UIIsfjellBjørnCell1ValueAsString, uIIsfjellBjørnCell1.ValueAsString);
        }
        
        /// <summary>
        /// CheckHansPoliklinikk - Use 'CheckHansPoliklinikkExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckHansPoliklinikk()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Poliklinikk'
            Assert.AreEqual(this.CheckHansPoliklinikkExpectedValues.UILblContentLabelText, uILblContentLabel.Text);
        }
        
        /// <summary>
        /// CheckPlanWeeekAndDates - Use 'CheckPlanWeeekAndDatesExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPlanWeeekAndDates()
        {
            #region Variable Declarations
            DXTestControl uIDeEndDateCustom = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIDeEndDateCustom;
            WinClient uIENumOfWeeksClient = this.UINykalenderplanWindow1.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIENumOfWeeksClient;
            DXTextEdit uIENumber0Edit = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIENumber0Edit;
            DXDateTimePicker uIPceDateDateTimeEdit = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIDeEndDateCustom.UIPceDateDateTimeEdit;
            #endregion

            // Verify that the 'Enabled' property of 'deEndDate' custom control equals 'False'
            Assert.AreEqual(this.CheckPlanWeeekAndDatesExpectedValues.UIDeEndDateCustomEnabled, uIDeEndDateCustom.Enabled);

            // Verify that the 'Enabled' property of 'eNumOfWeeks' client equals 'False'
            Assert.AreEqual(this.CheckPlanWeeekAndDatesExpectedValues.UIENumOfWeeksClientEnabled, uIENumOfWeeksClient.Enabled);

            // Verify that the 'ValueAsString' property of 'eNumber[0]' text box equals '4'
            Assert.AreEqual(this.CheckPlanWeeekAndDatesExpectedValues.UIENumber0EditValueAsString, uIENumber0Edit.ValueAsString, "Error in weeks");

            // Verify that the 'ValueAsString' property of 'pceDate' DateTimeEdit equals '2025-05-01'
            Assert.AreEqual(this.CheckPlanWeeekAndDatesExpectedValues.UIPceDateDateTimeEditValueAsString, uIPceDateDateTimeEdit.ValueAsString, "Wrong enddate");
        }
        
        /// <summary>
        /// CheckRegstatusMessages_step_7 - Use 'CheckRegstatusMessages_step_7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRegstatusMessages_step_7()
        {
            #region Variable Declarations
            DXCell uILinje143HålandSunnivCell = this.UIRegistreringsstatusWindow.UILcMessagesCustom.UILcgMessagesLayoutGroup.UILciMessagesLayoutControlItem.UIGMessagesTable.UILinje143HålandSunnivCell;
            DXCell uILinje92FallaKristerkCell = this.UIRegistreringsstatusWindow.UILcMessagesCustom.UILcgMessagesLayoutGroup.UILciMessagesLayoutControlItem.UIGMessagesTable.UILinje92FallaKristerkCell;
            DXCell uIItem71EllingsenDavidCell = this.UIRegistreringsstatusWindow.UILcMessagesCustom.UILcgMessagesLayoutGroup.UILciMessagesLayoutControlItem.UIGMessagesTable.UIItem71EllingsenDavidCell;
            DXCell uILinje31BrustadVetlehCell = this.UIRegistreringsstatusWindow.UILcMessagesCustom.UILcgMessagesLayoutGroup.UILciMessagesLayoutControlItem.UIGMessagesTable.UILinje31BrustadVetlehCell;
            #endregion

            // Verify that the 'ValueAsString' property of 'Linje 14 - 3 - Håland, Sunniva knyttet til 0% stillingsforhold.' cell equals 'Linje 14 - 3 - Håland, Sunniva knyttet til 0% stillingsforhold.'
            Assert.AreEqual(this.CheckRegstatusMessages_step_7ExpectedValues.UILinje143HålandSunnivCellValueAsString, uILinje143HålandSunnivCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Linje 9 - 2 - Falla, Krister knyttet til 0% stillingsforhold.' cell equals 'Linje 9 - 2 - Falla, Krister knyttet til 0% stillingsforhold.'
            Assert.AreEqual(this.CheckRegstatusMessages_step_7ExpectedValues.UILinje92FallaKristerkCellValueAsString, uILinje92FallaKristerkCell.ValueAsString);

            // Verify that the 'ValueAsString' property of '7 - 1 - Ellingsen, David har 0% stilling.' cell equals '7 - 1 - Ellingsen, David har 0% stilling.'
            Assert.AreEqual(this.CheckRegstatusMessages_step_7ExpectedValues.UIItem71EllingsenDavidCellValueAsString, uIItem71EllingsenDavidCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'Linje 3 - 1 - Brustad, Vetle har 0% stilling.' cell equals 'Linje 3 - 1 - Brustad, Vetle har 0% stilling.'
            Assert.AreEqual(this.CheckRegstatusMessages_step_7ExpectedValues.UILinje31BrustadVetlehCellValueAsString, uILinje31BrustadVetlehCell.ValueAsString);
        }
        
        /// <summary>
        /// CheckRegstatusWarning - Use 'CheckRegstatusWarningExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRegstatusWarning()
        {
            #region Variable Declarations
            DXPopupEdit uILnkDetailPopupEdit = this.UIIverksetteWindow.UIPnlTopClient.UILnkDetailPopupEdit;
            #endregion

            // Verify that the 'ValueAsString' property of 'lnkDetail' PopupEdit equals '1 stk. meldinger (klikk her for detaljer)'
            Assert.AreEqual(this.CheckRegstatusWarningExpectedValues.UILnkDetailPopupEditValueAsString, uILnkDetailPopupEdit.ValueAsString);
        }
        
        /// <summary>
        /// CheckTrudeOperasjon - Use 'CheckTrudeOperasjonExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTrudeOperasjon()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Operasjon'
            Assert.AreEqual(this.CheckTrudeOperasjonExpectedValues.UILblContentLabelText, uILblContentLabel.Text);
        }
        
        /// <summary>
        /// CheckVakantStatusNewHelpplanWindow - Use 'CheckVakantStatusNewHelpplanWindowExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckVakantStatusNewHelpplanWindow()
        {
            #region Variable Declarations
            DXCell uITrueCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UITrueCell;
            DXCell uITrueCell1 = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UITrueCell1;
            #endregion

            // Verify that the 'ValueAsString' property of 'True' cell equals 'True'
            Assert.AreEqual(this.CheckVakantStatusNewHelpplanWindowExpectedValues.UITrueCellValueAsString, uITrueCell.ValueAsString);

            // Verify that the 'ValueAsString' property of 'True' cell equals 'True'
            Assert.AreEqual(this.CheckVakantStatusNewHelpplanWindowExpectedValues.UITrueCell1ValueAsString, uITrueCell1.ValueAsString);
        }
        
        /// <summary>
        /// OpenExcelFromEmpWindow
        /// </summary>
        public void OpenExcelFromEmpWindow()
        {
            #region Variable Declarations
            DXCell uIEdruEllenCell = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIEdruEllenCell;
            DXMenuBaseButtonItem uIBarButtonItemLink3MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink3MenuBaseButtonItem;
            #endregion

            // Right-Click 'Edru, Ellen' cell
            Mouse.Click(uIEdruEllenCell, MouseButtons.Right, ModifierKeys.None, new Point(129, 8));

            // Click 'BarButtonItemLink[3]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink3MenuBaseButtonItem, new Point(68, 13));
        }
        
        /// <summary>
        /// OpenExcelFromHelpplanEmpWindow
        /// </summary>
        public void OpenExcelFromHelpplanEmpWindow()
        {
            #region Variable Declarations
            DXCell uIMaximusGluteusCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIMaximusGluteusCell;
            DXMenuBaseButtonItem uIBarButtonItemLink3MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink3MenuBaseButtonItem;
            #endregion

            // Right-Click 'Maximus, Gluteus' cell
            Mouse.Click(uIMaximusGluteusCell, MouseButtons.Right, ModifierKeys.None, new Point(103, 8));

            // Click 'BarButtonItemLink[3]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink3MenuBaseButtonItem, new Point(70, 8));
        }
        
        /// <summary>
        /// RemoveGundersenLine3
        /// </summary>
        public void RemoveGundersenLine3()
        {
            #region Variable Declarations
            DXCell uIIkkevalgtCell = this.UINybaseplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIIkkevalgtCell;
            #endregion

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell, new Point(18, 8));
        }
        
        /// <summary>
        /// RemoveJansenDshift - Use 'RemoveJansenDshiftParams' to pass parameters into this method.
        /// </summary>
        public void RemoveJansenDshift()
        {
            #region Variable Declarations
            DXCell uIDCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell;
            DXGrid uIGcRosterPlanTable = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable;
            #endregion

            // Click 'D' cell
            Mouse.Click(uIDCell, new Point(10, 11));

            // Type '{Delete}{Tab}' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.RemoveJansenDshiftParams.UIGcRosterPlanTableSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// RemoveLine22Langeide
        /// </summary>
        public void RemoveLine22Langeide()
        {
            #region Variable Declarations
            DXCell uIIkkevalgtCell = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIIkkevalgtCell;
            #endregion

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell, new Point(16, 8));
        }
        
        /// <summary>
        /// SelectDvorakShift
        /// </summary>
        public void SelectDvorakShift()
        {
            #region Variable Declarations
            DXCell uIDCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIDCell2;
            #endregion

            // Right-Click 'D' cell
            Mouse.Click(uIDCell2, MouseButtons.Right, ModifierKeys.None, new Point(20, 9));
        }
        
        /// <summary>
        /// SelectEmpsToAddToNewPlan
        /// </summary>
        public void SelectEmpsToAddToNewPlan()
        {
            #region Variable Declarations
            DXCell uIValgtCell = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell;
            DXCell uIValgtCell6 = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell6;
            DXCell uIValgtCell1 = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell1;
            DXCell uIValgtCell2 = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell2;
            DXCell uIValgtCell3 = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell3;
            DXCell uIValgtCell4 = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell4;
            DXCell uIValgtCell5 = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIValgtCell5;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell, new Point(48, 7));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell6, new Point(48, 8));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell1, new Point(46, 10));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell2, new Point(46, 8));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell3, new Point(46, 12));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell4, new Point(46, 6));

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell5, new Point(46, 7));
        }
        
        /// <summary>
        /// SelectEmpVictoria
        /// </summary>
        public void SelectEmpVictoria()
        {
            #region Variable Declarations
            DXCell uIAskVictoriaCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UIAskVictoriaCell;
            #endregion

            // Click 'Ask, Victoria' cell
            Mouse.Click(uIAskVictoriaCell, new Point(37, 8));
        }
        
        /// <summary>
        /// SelectF3Calculations_step_11 - Use 'SelectF3Calculations_step_11Params' to pass parameters into this method.
        /// </summary>
        public void SelectF3Calculations_step_11()
        {
            #region Variable Declarations
            DXCell uIEdruEllenCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIEdruEllenCell;
            DXTestControl uIGsLayoutControlMainCustom = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom;
            DXButton uIAnnenhverberegningavButton = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem4LayoutControlItem.UIPnlRuleButtonsClient.UIAnnenhverberegningavButton;
            #endregion

            // Click 'Edru, Ellen' cell
            Mouse.Click(uIEdruEllenCell, new Point(38, 7));

            // Type 'Control + a' in 'gsLayoutControlMain' custom control
            Keyboard.SendKeys(uIGsLayoutControlMainCustom, this.SelectF3Calculations_step_11Params.UIGsLayoutControlMainCustomSendKeys, ModifierKeys.Control);

            // Click 'Annenhver beregning av F3' button
            Mouse.Click(uIAnnenhverberegningavButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectHansFri
        /// </summary>
        public void SelectHansFri()
        {
            #region Variable Declarations
            DXCell uIItemCell7 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell7;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell7, new Point(88, 10));
        }
        
        /// <summary>
        /// SelectHansMon
        /// </summary>
        public void SelectHansMon()
        {
            #region Variable Declarations
            DXCell uIGcDragDropGridGridCoCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGcDragDropGridGridCoCell;
            #endregion

            // Click 'gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1' cell
            Mouse.Click(uIGcDragDropGridGridCoCell, new Point(367, 92));
        }
        
        /// <summary>
        /// SelectHansThu
        /// </summary>
        public void SelectHansThu()
        {
            #region Variable Declarations
            DXCell uIItemCell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell6;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell6, new Point(84, 7));
        }
        
        /// <summary>
        /// SelectHansTue
        /// </summary>
        public void SelectHansTue()
        {
            #region Variable Declarations
            DXCell uIItemCell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell4;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell4, new Point(77, 9));
        }
        
        /// <summary>
        /// SelectHansWed
        /// </summary>
        public void SelectHansWed()
        {
            #region Variable Declarations
            DXCell uIItemCell5 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell5;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell5, new Point(87, 9));
        }
        
        /// <summary>
        /// SelectHusebyWeek1
        /// </summary>
        public void SelectHusebyWeek1()
        {
            #region Variable Declarations
            DXCell uIGV1Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIGV1Cell2;
            DXCell uIF1Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIF1Cell1;
            #endregion

            // Move 'GV1' cell to 'F1' cell
            uIF1Cell1.EnsureClickable(new Point(17, 8));
            Mouse.StartDragging(uIGV1Cell2, new Point(25, 7));
            Mouse.StopDragging(uIF1Cell1, new Point(17, 8));

            // Right-Click 'F1' cell
            Mouse.Click(uIF1Cell1, MouseButtons.Right, ModifierKeys.None, new Point(17, 7));
        }
        
        /// <summary>
        /// SelectSpecTab
        /// </summary>
        public void SelectSpecTab()
        {
            #region Variable Declarations
            DXButton uISpesifikasjonButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UISpesifikasjonButton;
            #endregion

            // Click 'Spesifikasjon' button
            Mouse.Click(uISpesifikasjonButton, new Point(51, 7));
        }
        
        /// <summary>
        /// SelectTrudeFri
        /// </summary>
        public void SelectTrudeFri()
        {
            #region Variable Declarations
            DXCell uIItemCell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell3;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell3, new Point(83, 10));
        }
        
        /// <summary>
        /// SelectTrudeMon
        /// </summary>
        public void SelectTrudeMon()
        {
            #region Variable Declarations
            DXCell uIGcDragDropGridGridCoCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGcDragDropGridGridCoCell1;
            #endregion

            // Click 'gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1' cell
            Mouse.Click(uIGcDragDropGridGridCoCell1, new Point(370, 73));
        }
        
        /// <summary>
        /// SelectTrudeThu
        /// </summary>
        public void SelectTrudeThu()
        {
            #region Variable Declarations
            DXCell uIItemCell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell2;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell2, new Point(86, 7));
        }
        
        /// <summary>
        /// SelectTrudeTue
        /// </summary>
        public void SelectTrudeTue()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(90, 10));
        }
        
        /// <summary>
        /// SelectTrudeWed
        /// </summary>
        public void SelectTrudeWed()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell1;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell1, new Point(84, 10));
        }
        
        /// <summary>
        /// UnCheckIsfjellLine1
        /// </summary>
        public void UnCheckIsfjellLine1()
        {
            #region Variable Declarations
            DXCell uIIkkevalgtCell = this.UINykalenderplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIIkkevalgtCell;
            #endregion

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell, new Point(17, 8));
        }
        
        /// <summary>
        /// UnselectTreeEmployees - Use 'UnselectTreeEmployeesParams' to pass parameters into this method.
        /// </summary>
        public void UnselectTreeEmployees()
        {
            #region Variable Declarations
            DXCheckBox uICheckEditCheckBox = this.UIIverksetteWindow.UIPnlResultClient.UIGsGridControlLinesTable.UICheckEditCheckBox;
            DXCell uIIkkevalgtCell = this.UIIverksetteWindow.UIPnlResultClient.UIGsGridControlLinesTable.UIIkkevalgtCell;
            DXCell uIIkkevalgtCell1 = this.UIIverksetteWindow.UIPnlResultClient.UIGsGridControlLinesTable.UIIkkevalgtCell1;
            #endregion

            // Clear 'CheckEdit' check box
            uICheckEditCheckBox.Checked = this.UnselectTreeEmployeesParams.UICheckEditCheckBoxChecked;

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell, new Point(26, 7));

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell1, new Point(25, 8));
        }
        
        /// <summary>
        /// CheckRolesStep6 - Use 'CheckRolesStep6ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolesStep6()
        {
            #region Variable Declarations
            DXCell uIA14HålandSunniva1900Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIA14HålandSunniva1900Cell;
            DXCell uID2AskVictoria0700073Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID2AskVictoria0700073Cell;
            DXCell uIA10FredriksenLisa190Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIA10FredriksenLisa190Cell;
            DXCell uIN21LekvenTerje223023Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN21LekvenTerje223023Cell;
            DXCell uID25VAKANT07000730Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID25VAKANT07000730Cell;
            #endregion

            // Verify that the 'Text' property of '( )A - 14. Håland, Sunniva (19:00 - 21:00)' cell equals '( )A - 14. Håland, Sunniva (19:00 - 21:00)
            //'
            Assert.AreEqual(this.CheckRolesStep6ExpectedValues.UIA14HålandSunniva1900CellText, uIA14HålandSunniva1900Cell.Text);

            // Verify that the 'Text' property of '( )D - 2. Ask, Victoria (07:00 - 07:30)' cell equals '( )D - 2. Ask, Victoria (07:00 - 07:30)
            //'
            Assert.AreEqual(this.CheckRolesStep6ExpectedValues.UID2AskVictoria0700073CellText, uID2AskVictoria0700073Cell.Text);

            // Verify that the 'Text' property of '( )A - 10. Fredriksen, Lisa (19:00 - 21:00)' cell equals '( )A - 10. Fredriksen, Lisa (19:00 - 21:00)
            //'
            Assert.AreEqual(this.CheckRolesStep6ExpectedValues.UIA10FredriksenLisa190CellText, uIA10FredriksenLisa190Cell.Text);

            // Verify that the 'Text' property of '( )N - 21. Lekven, Terje (22:30 - 23:00)' cell equals '( )N - 21. Lekven, Terje (22:30 - 23:00)
            //'
            Assert.AreEqual(this.CheckRolesStep6ExpectedValues.UIN21LekvenTerje223023CellText, uIN21LekvenTerje223023Cell.Text);

            // Verify that the 'Text' property of '( )D - 25. VAKANT (07:00 - 07:30)' cell equals '( )D - 25. VAKANT (07:00 - 07:30)
            //'
            Assert.AreEqual(this.CheckRolesStep6ExpectedValues.UID25VAKANT07000730CellText, uID25VAKANT07000730Cell.Text);
        }
        
        /// <summary>
        /// CheckRolesCopiedStep26 - Use 'CheckRolesCopiedStep26ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRolesCopiedStep26()
        {
            #region Variable Declarations
            DXCell uIGV11BelsethTrude0800Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV11BelsethTrude0800Cell;
            DXCell uIGV13HolmèrHans080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV13HolmèrHans080016Cell;
            DXCell uIGV11BelsethTrude0800Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV11BelsethTrude0800Cell1;
            DXCell uIGV13HolmèrHans080016Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV13HolmèrHans080016Cell1;
            DXCell uIGV11BelsethTrude0800Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV11BelsethTrude0800Cell2;
            DXCell uIGV13HolmèrHans080016Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV13HolmèrHans080016Cell2;
            DXCell uIGV11BelsethTrude0800Cell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV11BelsethTrude0800Cell3;
            DXCell uIGV13HolmèrHans080016Cell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV13HolmèrHans080016Cell3;
            DXCell uIGV11BelsethTrude0800Cell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV11BelsethTrude0800Cell4;
            DXCell uIGV13HolmèrHans080016Cell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV13HolmèrHans080016Cell4;
            DXCell uIN1BelsethTrude221507Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN1BelsethTrude221507Cell;
            DXCell uIN3HolmèrHans22150715Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN3HolmèrHans22150715Cell;
            DXCell uIN1BelsethTrude221507Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN1BelsethTrude221507Cell1;
            DXCell uIN3HolmèrHans22150715Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN3HolmèrHans22150715Cell1;
            DXCell uIN1BelsethTrude221507Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN1BelsethTrude221507Cell2;
            DXCell uIN3HolmèrHans22150715Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN3HolmèrHans22150715Cell2;
            #endregion

            // Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV11BelsethTrude0800CellText, uIGV11BelsethTrude0800Cell.Text);

            // Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV13HolmèrHans080016CellText, uIGV13HolmèrHans080016Cell.Text);

            // Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV11BelsethTrude0800Cell1Text, uIGV11BelsethTrude0800Cell1.Text);

            // Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV13HolmèrHans080016Cell1Text, uIGV13HolmèrHans080016Cell1.Text);

            // Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV11BelsethTrude0800Cell2Text, uIGV11BelsethTrude0800Cell2.Text);

            // Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV13HolmèrHans080016Cell2Text, uIGV13HolmèrHans080016Cell2.Text);

            // Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV11BelsethTrude0800Cell3Text, uIGV11BelsethTrude0800Cell3.Text);

            // Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV13HolmèrHans080016Cell3Text, uIGV13HolmèrHans080016Cell3.Text);

            // Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV11BelsethTrude0800Cell4Text, uIGV11BelsethTrude0800Cell4.Text);

            // Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIGV13HolmèrHans080016Cell4Text, uIGV13HolmèrHans080016Cell4.Text);

            // Verify that the 'Text' property of '( )N - 1. Belseth, Trude (22:15 - 07:15)' cell equals '( )N - 1. Belseth, Trude (22:15 - 07:15)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIN1BelsethTrude221507CellText, uIN1BelsethTrude221507Cell.Text);

            // Verify that the 'Text' property of '( )N - 3. Holmèr, Hans (22:15 - 07:15)' cell equals '( )N - 3. Holmèr, Hans (22:15 - 07:15)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIN3HolmèrHans22150715CellText, uIN3HolmèrHans22150715Cell.Text);

            // Verify that the 'Text' property of '( )N - 1. Belseth, Trude (22:15 - 07:15)' cell equals '( )N - 1. Belseth, Trude (22:15 - 07:15)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIN1BelsethTrude221507Cell1Text, uIN1BelsethTrude221507Cell1.Text);

            // Verify that the 'Text' property of '( )N - 3. Holmèr, Hans (22:15 - 07:15)' cell equals '( )N - 3. Holmèr, Hans (22:15 - 07:15)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIN3HolmèrHans22150715Cell1Text, uIN3HolmèrHans22150715Cell1.Text);

            // Verify that the 'Text' property of '( )N - 1. Belseth, Trude (22:15 - 07:15)' cell equals '( )N - 1. Belseth, Trude (22:15 - 07:15)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIN1BelsethTrude221507Cell2Text, uIN1BelsethTrude221507Cell2.Text);

            // Verify that the 'Text' property of '( )N - 3. Holmèr, Hans (22:15 - 07:15)' cell equals '( )N - 3. Holmèr, Hans (22:15 - 07:15)
            //'
            Assert.AreEqual(this.CheckRolesCopiedStep26ExpectedValues.UIN3HolmèrHans22150715Cell2Text, uIN3HolmèrHans22150715Cell2.Text);
        }
        
        #region Properties
        public virtual AddVictoriaShiftsParams AddVictoriaShiftsParams
        {
            get
            {
                if ((this.mAddVictoriaShiftsParams == null))
                {
                    this.mAddVictoriaShiftsParams = new AddVictoriaShiftsParams();
                }
                return this.mAddVictoriaShiftsParams;
            }
        }
        
        public virtual CheckCopyCalendarplanValuesExpectedValues CheckCopyCalendarplanValuesExpectedValues
        {
            get
            {
                if ((this.mCheckCopyCalendarplanValuesExpectedValues == null))
                {
                    this.mCheckCopyCalendarplanValuesExpectedValues = new CheckCopyCalendarplanValuesExpectedValues();
                }
                return this.mCheckCopyCalendarplanValuesExpectedValues;
            }
        }
        
        public virtual CheckEmpDataStep_22ExpectedValues CheckEmpDataStep_22ExpectedValues
        {
            get
            {
                if ((this.mCheckEmpDataStep_22ExpectedValues == null))
                {
                    this.mCheckEmpDataStep_22ExpectedValues = new CheckEmpDataStep_22ExpectedValues();
                }
                return this.mCheckEmpDataStep_22ExpectedValues;
            }
        }
        
        public virtual CheckHansPoliklinikkExpectedValues CheckHansPoliklinikkExpectedValues
        {
            get
            {
                if ((this.mCheckHansPoliklinikkExpectedValues == null))
                {
                    this.mCheckHansPoliklinikkExpectedValues = new CheckHansPoliklinikkExpectedValues();
                }
                return this.mCheckHansPoliklinikkExpectedValues;
            }
        }
        
        public virtual CheckPlanWeeekAndDatesExpectedValues CheckPlanWeeekAndDatesExpectedValues
        {
            get
            {
                if ((this.mCheckPlanWeeekAndDatesExpectedValues == null))
                {
                    this.mCheckPlanWeeekAndDatesExpectedValues = new CheckPlanWeeekAndDatesExpectedValues();
                }
                return this.mCheckPlanWeeekAndDatesExpectedValues;
            }
        }
        
        public virtual CheckRegstatusMessages_step_7ExpectedValues CheckRegstatusMessages_step_7ExpectedValues
        {
            get
            {
                if ((this.mCheckRegstatusMessages_step_7ExpectedValues == null))
                {
                    this.mCheckRegstatusMessages_step_7ExpectedValues = new CheckRegstatusMessages_step_7ExpectedValues();
                }
                return this.mCheckRegstatusMessages_step_7ExpectedValues;
            }
        }
        
        public virtual CheckRegstatusWarningExpectedValues CheckRegstatusWarningExpectedValues
        {
            get
            {
                if ((this.mCheckRegstatusWarningExpectedValues == null))
                {
                    this.mCheckRegstatusWarningExpectedValues = new CheckRegstatusWarningExpectedValues();
                }
                return this.mCheckRegstatusWarningExpectedValues;
            }
        }
        
        public virtual CheckTrudeOperasjonExpectedValues CheckTrudeOperasjonExpectedValues
        {
            get
            {
                if ((this.mCheckTrudeOperasjonExpectedValues == null))
                {
                    this.mCheckTrudeOperasjonExpectedValues = new CheckTrudeOperasjonExpectedValues();
                }
                return this.mCheckTrudeOperasjonExpectedValues;
            }
        }
        
        public virtual CheckVakantStatusNewHelpplanWindowExpectedValues CheckVakantStatusNewHelpplanWindowExpectedValues
        {
            get
            {
                if ((this.mCheckVakantStatusNewHelpplanWindowExpectedValues == null))
                {
                    this.mCheckVakantStatusNewHelpplanWindowExpectedValues = new CheckVakantStatusNewHelpplanWindowExpectedValues();
                }
                return this.mCheckVakantStatusNewHelpplanWindowExpectedValues;
            }
        }
        
        public virtual RemoveJansenDshiftParams RemoveJansenDshiftParams
        {
            get
            {
                if ((this.mRemoveJansenDshiftParams == null))
                {
                    this.mRemoveJansenDshiftParams = new RemoveJansenDshiftParams();
                }
                return this.mRemoveJansenDshiftParams;
            }
        }
        
        public virtual SelectF3Calculations_step_11Params SelectF3Calculations_step_11Params
        {
            get
            {
                if ((this.mSelectF3Calculations_step_11Params == null))
                {
                    this.mSelectF3Calculations_step_11Params = new SelectF3Calculations_step_11Params();
                }
                return this.mSelectF3Calculations_step_11Params;
            }
        }
        
        public virtual UnselectTreeEmployeesParams UnselectTreeEmployeesParams
        {
            get
            {
                if ((this.mUnselectTreeEmployeesParams == null))
                {
                    this.mUnselectTreeEmployeesParams = new UnselectTreeEmployeesParams();
                }
                return this.mUnselectTreeEmployeesParams;
            }
        }
        
        public virtual CheckRolesStep6ExpectedValues CheckRolesStep6ExpectedValues
        {
            get
            {
                if ((this.mCheckRolesStep6ExpectedValues == null))
                {
                    this.mCheckRolesStep6ExpectedValues = new CheckRolesStep6ExpectedValues();
                }
                return this.mCheckRolesStep6ExpectedValues;
            }
        }
        
        public virtual CheckRolesCopiedStep26ExpectedValues CheckRolesCopiedStep26ExpectedValues
        {
            get
            {
                if ((this.mCheckRolesCopiedStep26ExpectedValues == null))
                {
                    this.mCheckRolesCopiedStep26ExpectedValues = new CheckRolesCopiedStep26ExpectedValues();
                }
                return this.mCheckRolesCopiedStep26ExpectedValues;
            }
        }
        
        public UINyarbeidsplanWindow UINyarbeidsplanWindow
        {
            get
            {
                if ((this.mUINyarbeidsplanWindow == null))
                {
                    this.mUINyarbeidsplanWindow = new UINyarbeidsplanWindow();
                }
                return this.mUINyarbeidsplanWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIOppgavetildelingWindow UIOppgavetildelingWindow
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow == null))
                {
                    this.mUIOppgavetildelingWindow = new UIOppgavetildelingWindow();
                }
                return this.mUIOppgavetildelingWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIRegistreringsstatusWindow UIRegistreringsstatusWindow
        {
            get
            {
                if ((this.mUIRegistreringsstatusWindow == null))
                {
                    this.mUIRegistreringsstatusWindow = new UIRegistreringsstatusWindow();
                }
                return this.mUIRegistreringsstatusWindow;
            }
        }
        
        public UIIverksetteWindow UIIverksetteWindow
        {
            get
            {
                if ((this.mUIIverksetteWindow == null))
                {
                    this.mUIIverksetteWindow = new UIIverksetteWindow();
                }
                return this.mUIIverksetteWindow;
            }
        }
        
        public UINyhjelpeplanWindow UINyhjelpeplanWindow
        {
            get
            {
                if ((this.mUINyhjelpeplanWindow == null))
                {
                    this.mUINyhjelpeplanWindow = new UINyhjelpeplanWindow();
                }
                return this.mUINyhjelpeplanWindow;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        
        public UINykalenderplanWindow UINykalenderplanWindow
        {
            get
            {
                if ((this.mUINykalenderplanWindow == null))
                {
                    this.mUINykalenderplanWindow = new UINykalenderplanWindow();
                }
                return this.mUINykalenderplanWindow;
            }
        }
        
        public UIGT4001InformasjonWindow UIGT4001InformasjonWindow
        {
            get
            {
                if ((this.mUIGT4001InformasjonWindow == null))
                {
                    this.mUIGT4001InformasjonWindow = new UIGT4001InformasjonWindow();
                }
                return this.mUIGT4001InformasjonWindow;
            }
        }
        
        public UIGT4003InformasjonWindow UIGT4003InformasjonWindow
        {
            get
            {
                if ((this.mUIGT4003InformasjonWindow == null))
                {
                    this.mUIGT4003InformasjonWindow = new UIGT4003InformasjonWindow();
                }
                return this.mUIGT4003InformasjonWindow;
            }
        }
        
        public UILeggtilansatteWindow UILeggtilansatteWindow
        {
            get
            {
                if ((this.mUILeggtilansatteWindow == null))
                {
                    this.mUILeggtilansatteWindow = new UILeggtilansatteWindow();
                }
                return this.mUILeggtilansatteWindow;
            }
        }
        
        public UINykalenderplanWindow1 UINykalenderplanWindow1
        {
            get
            {
                if ((this.mUINykalenderplanWindow1 == null))
                {
                    this.mUINykalenderplanWindow1 = new UINykalenderplanWindow1();
                }
                return this.mUINykalenderplanWindow1;
            }
        }
        
        public UINybaseplanWindow UINybaseplanWindow
        {
            get
            {
                if ((this.mUINybaseplanWindow == null))
                {
                    this.mUINybaseplanWindow = new UINybaseplanWindow();
                }
                return this.mUINybaseplanWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddVictoriaShiftsParams mAddVictoriaShiftsParams;
        
        private CheckCopyCalendarplanValuesExpectedValues mCheckCopyCalendarplanValuesExpectedValues;
        
        private CheckEmpDataStep_22ExpectedValues mCheckEmpDataStep_22ExpectedValues;
        
        private CheckHansPoliklinikkExpectedValues mCheckHansPoliklinikkExpectedValues;
        
        private CheckPlanWeeekAndDatesExpectedValues mCheckPlanWeeekAndDatesExpectedValues;
        
        private CheckRegstatusMessages_step_7ExpectedValues mCheckRegstatusMessages_step_7ExpectedValues;
        
        private CheckRegstatusWarningExpectedValues mCheckRegstatusWarningExpectedValues;
        
        private CheckTrudeOperasjonExpectedValues mCheckTrudeOperasjonExpectedValues;
        
        private CheckVakantStatusNewHelpplanWindowExpectedValues mCheckVakantStatusNewHelpplanWindowExpectedValues;
        
        private RemoveJansenDshiftParams mRemoveJansenDshiftParams;
        
        private SelectF3Calculations_step_11Params mSelectF3Calculations_step_11Params;
        
        private UnselectTreeEmployeesParams mUnselectTreeEmployeesParams;
        
        private CheckRolesStep6ExpectedValues mCheckRolesStep6ExpectedValues;
        
        private CheckRolesCopiedStep26ExpectedValues mCheckRolesCopiedStep26ExpectedValues;
        
        private UINyarbeidsplanWindow mUINyarbeidsplanWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIGatWindow mUIGatWindow;
        
        private UIOppgavetildelingWindow mUIOppgavetildelingWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIRegistreringsstatusWindow mUIRegistreringsstatusWindow;
        
        private UIIverksetteWindow mUIIverksetteWindow;
        
        private UINyhjelpeplanWindow mUINyhjelpeplanWindow;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        
        private UINykalenderplanWindow mUINykalenderplanWindow;
        
        private UIGT4001InformasjonWindow mUIGT4001InformasjonWindow;
        
        private UIGT4003InformasjonWindow mUIGT4003InformasjonWindow;
        
        private UILeggtilansatteWindow mUILeggtilansatteWindow;
        
        private UINykalenderplanWindow1 mUINykalenderplanWindow1;
        
        private UINybaseplanWindow mUINybaseplanWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddVictoriaShifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddVictoriaShiftsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'f1{Tab}' in '[Row]5[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEditSendKeys = "f1{Tab}";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]5[Column]RosterCell_7' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit3SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'f1{Tab}' in '[Row]5[Column]RosterCell_9' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit4SendKeys = "f1{Tab}";
        
        /// <summary>
        /// Type 'n{Tab}' in '[Row]5[Column]RosterCell_11' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit5SendKeys = "n{Tab}";
        
        /// <summary>
        /// Type 'a{Tab}' in '[Row]5[Column]RosterCell_15' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit6SendKeys = "a{Tab}";
        
        /// <summary>
        /// Type 'f2{Tab}' in '[Row]5[Column]RosterCell_19' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit7SendKeys = "f2{Tab}";
        
        /// <summary>
        /// Type 'f1{Tab}' in '[Row]5[Column]RosterCell_20' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit10SendKeys = "f1{Tab}";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]5[Column]RosterCell_21' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit11SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'f2{Tab}' in '[Row]5[Column]RosterCell_26' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit12SendKeys = "f2{Tab}";
        
        /// <summary>
        /// Type 'f1{Tab}' in '[Row]5[Column]RosterCell_27' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit13SendKeys = "f1{Tab}";
        
        /// <summary>
        /// Type 'gv1{Tab}' in '[Row]5[Column]RosterCell_0' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit15SendKeys = "gv1{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCopyCalendarplanValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCopyCalendarplanValuesExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'txtName' text box equals 'Kopi av Kalenderplan.'
        /// </summary>
        public string UITxtNameEditValueAsString = "Kopi av Kalenderplan.";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'pceDate' DateTimeEdit equals '2024-01-07'
        /// </summary>
        public string UIPceDateDateTimeEditValueAsString = "2024-01-07";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'eNumber[0]' text box equals '4'
        /// </summary>
        public string UIENumber0EditValueAsString = "4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'pceDate' DateTimeEdit equals '2024-07-28'
        /// </summary>
        public string UIPceDateDateTimeEditValueAsString1 = "2024-07-28";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'chkTasks' check box equals 'False'
        /// </summary>
        public string UIChkTasksCheckBoxValueAsString = "False";
        
        /// <summary>
        /// Verify that the 'Checked' property of 'chkKladd' check box equals 'False'
        /// </summary>
        public bool UIChkKladdCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEmpDataStep_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckEmpDataStep_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Belseth, Trude' cell equals 'Belseth, Trude'
        /// </summary>
        public string UIBelsethTrudeCellValueAsString = "Belseth, Trude";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Dvorak, Samuel' cell equals 'Dvorak, Samuel'
        /// </summary>
        public string UIDvorakSamuelCellValueAsString = "Dvorak, Samuel";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Holmèr, Hans' cell equals 'Holmèr, Hans'
        /// </summary>
        public string UIHolmèrHansCellValueAsString = "Holmèr, Hans";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Huseby, Kjell' cell equals 'Huseby, Kjell'
        /// </summary>
        public string UIHusebyKjellCellValueAsString = "Huseby, Kjell";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Isfjell, Bjørn' cell equals 'Isfjell, Bjørn'
        /// </summary>
        public string UIIsfjellBjørnCellValueAsString = "Isfjell, Bjørn";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Isfjell, Bjørn' cell equals 'Isfjell, Bjørn'
        /// </summary>
        public string UIIsfjellBjørnCell1ValueAsString = "Isfjell, Bjørn";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckHansPoliklinikk'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckHansPoliklinikkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Poliklinikk'
        /// </summary>
        public string UILblContentLabelText = "Poliklinikk";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPlanWeeekAndDates'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckPlanWeeekAndDatesExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'deEndDate' custom control equals 'False'
        /// </summary>
        public bool UIDeEndDateCustomEnabled = false;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'eNumOfWeeks' client equals 'False'
        /// </summary>
        public bool UIENumOfWeeksClientEnabled = false;
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'eNumber[0]' text box equals '4'
        /// </summary>
        public string UIENumber0EditValueAsString = "4";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'pceDate' DateTimeEdit equals '2025-05-01'
        /// </summary>
        public string UIPceDateDateTimeEditValueAsString = "2025-05-01";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRegstatusMessages_step_7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRegstatusMessages_step_7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Linje 14 - 3 - Håland, Sunniva knyttet til 0% stillingsforhold.' cell equals 'Linje 14 - 3 - Håland, Sunniva knyttet til 0% stillingsforhold.'
        /// </summary>
        public string UILinje143HålandSunnivCellValueAsString = "Linje 14 - 3 - Håland, Sunniva knyttet til 0% stillingsforhold.";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Linje 9 - 2 - Falla, Krister knyttet til 0% stillingsforhold.' cell equals 'Linje 9 - 2 - Falla, Krister knyttet til 0% stillingsforhold.'
        /// </summary>
        public string UILinje92FallaKristerkCellValueAsString = "Linje 9 - 2 - Falla, Krister knyttet til 0% stillingsforhold.";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of '7 - 1 - Ellingsen, David har 0% stilling.' cell equals '7 - 1 - Ellingsen, David har 0% stilling.'
        /// </summary>
        public string UIItem71EllingsenDavidCellValueAsString = "7 - 1 - Ellingsen, David har 0% stilling.";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'Linje 3 - 1 - Brustad, Vetle har 0% stilling.' cell equals 'Linje 3 - 1 - Brustad, Vetle har 0% stilling.'
        /// </summary>
        public string UILinje31BrustadVetlehCellValueAsString = "Linje 3 - 1 - Brustad, Vetle har 0% stilling.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRegstatusWarning'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRegstatusWarningExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'lnkDetail' PopupEdit equals '1 stk. meldinger (klikk her for detaljer)'
        /// </summary>
        public string UILnkDetailPopupEditValueAsString = "1 stk. meldinger (klikk her for detaljer)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTrudeOperasjon'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckTrudeOperasjonExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Operasjon'
        /// </summary>
        public string UILblContentLabelText = "Operasjon";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckVakantStatusNewHelpplanWindow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckVakantStatusNewHelpplanWindowExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'True' cell equals 'True'
        /// </summary>
        public string UITrueCellValueAsString = "True";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'True' cell equals 'True'
        /// </summary>
        public string UITrueCell1ValueAsString = "True";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RemoveJansenDshift'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RemoveJansenDshiftParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Delete}{Tab}' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys = "{Delete}{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectF3Calculations_step_11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectF3Calculations_step_11Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + a' in 'gsLayoutControlMain' custom control
        /// </summary>
        public string UIGsLayoutControlMainCustomSendKeys = "a";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnselectTreeEmployees'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UnselectTreeEmployeesParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'CheckEdit' check box
        /// </summary>
        public bool UICheckEditCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolesStep6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolesStep6ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )A - 14. Håland, Sunniva (19:00 - 21:00)' cell equals '( )A - 14. Håland, Sunniva (19:00 - 21:00)
        ///'
        /// </summary>
        public string UIA14HålandSunniva1900CellText = "( )A - 14. Håland, Sunniva (19:00 - 21:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - 2. Ask, Victoria (07:00 - 07:30)' cell equals '( )D - 2. Ask, Victoria (07:00 - 07:30)
        ///'
        /// </summary>
        public string UID2AskVictoria0700073CellText = "( )D - 2. Ask, Victoria (07:00 - 07:30)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )A - 10. Fredriksen, Lisa (19:00 - 21:00)' cell equals '( )A - 10. Fredriksen, Lisa (19:00 - 21:00)
        ///'
        /// </summary>
        public string UIA10FredriksenLisa190CellText = "( )A - 10. Fredriksen, Lisa (19:00 - 21:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )N - 21. Lekven, Terje (22:30 - 23:00)' cell equals '( )N - 21. Lekven, Terje (22:30 - 23:00)
        ///'
        /// </summary>
        public string UIN21LekvenTerje223023CellText = "( )N - 21. Lekven, Terje (22:30 - 23:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - 25. VAKANT (07:00 - 07:30)' cell equals '( )D - 25. VAKANT (07:00 - 07:30)
        ///'
        /// </summary>
        public string UID25VAKANT07000730CellText = "( )D - 25. VAKANT (07:00 - 07:30)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRolesCopiedStep26'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRolesCopiedStep26ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV11BelsethTrude0800CellText = "( )GV1 - 1. Belseth, Trude (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV13HolmèrHans080016CellText = "( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV11BelsethTrude0800Cell1Text = "( )GV1 - 1. Belseth, Trude (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV13HolmèrHans080016Cell1Text = "( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV11BelsethTrude0800Cell2Text = "( )GV1 - 1. Belseth, Trude (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV13HolmèrHans080016Cell2Text = "( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV11BelsethTrude0800Cell3Text = "( )GV1 - 1. Belseth, Trude (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV13HolmèrHans080016Cell3Text = "( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)' cell equals '( )GV1 - 1. Belseth, Trude (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV11BelsethTrude0800Cell4Text = "( )GV1 - 1. Belseth, Trude (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)' cell equals '( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV13HolmèrHans080016Cell4Text = "( )GV1 - 3. Holmèr, Hans (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )N - 1. Belseth, Trude (22:15 - 07:15)' cell equals '( )N - 1. Belseth, Trude (22:15 - 07:15)
        ///'
        /// </summary>
        public string UIN1BelsethTrude221507CellText = "( )N - 1. Belseth, Trude (22:15 - 07:15)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )N - 3. Holmèr, Hans (22:15 - 07:15)' cell equals '( )N - 3. Holmèr, Hans (22:15 - 07:15)
        ///'
        /// </summary>
        public string UIN3HolmèrHans22150715CellText = "( )N - 3. Holmèr, Hans (22:15 - 07:15)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )N - 1. Belseth, Trude (22:15 - 07:15)' cell equals '( )N - 1. Belseth, Trude (22:15 - 07:15)
        ///'
        /// </summary>
        public string UIN1BelsethTrude221507Cell1Text = "( )N - 1. Belseth, Trude (22:15 - 07:15)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )N - 3. Holmèr, Hans (22:15 - 07:15)' cell equals '( )N - 3. Holmèr, Hans (22:15 - 07:15)
        ///'
        /// </summary>
        public string UIN3HolmèrHans22150715Cell1Text = "( )N - 3. Holmèr, Hans (22:15 - 07:15)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )N - 1. Belseth, Trude (22:15 - 07:15)' cell equals '( )N - 1. Belseth, Trude (22:15 - 07:15)
        ///'
        /// </summary>
        public string UIN1BelsethTrude221507Cell2Text = "( )N - 1. Belseth, Trude (22:15 - 07:15)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )N - 3. Holmèr, Hans (22:15 - 07:15)' cell equals '( )N - 3. Holmèr, Hans (22:15 - 07:15)
        ///'
        /// </summary>
        public string UIN3HolmèrHans22150715Cell2Text = "( )N - 3. Holmèr, Hans (22:15 - 07:15)\r\n";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINyarbeidsplanWindow : DXWindow
    {
        
        public UINyarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlGridSumClient UIPnlGridSumClient
        {
            get
            {
                if ((this.mUIPnlGridSumClient == null))
                {
                    this.mUIPnlGridSumClient = new UIPnlGridSumClient(this);
                }
                return this.mUIPnlGridSumClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridSumClient mUIPnlGridSumClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGridSumClient : DXTestControl
    {
        
        public UIPnlGridSumClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGridSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlTable UIGsGridControlTable
        {
            get
            {
                if ((this.mUIGsGridControlTable == null))
                {
                    this.mUIGsGridControlTable = new UIGsGridControlTable(this);
                }
                return this.mUIGsGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlTable mUIGsGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsGridControlTable : DXGrid
    {
        
        public UIGsGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIEdruEllenCell
        {
            get
            {
                if ((this.mUIEdruEllenCell == null))
                {
                    this.mUIEdruEllenCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIEdruEllenCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]5[Column]clmName";
                    this.mUIEdruEllenCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIEdruEllenCell.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIEdruEllenCell;
            }
        }
        
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]25[Column]clmInclude";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]3[Column]clmInclude";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]7[Column]clmInclude";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        
        public DXCell UIValgtCell2
        {
            get
            {
                if ((this.mUIValgtCell2 == null))
                {
                    this.mUIValgtCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]8[Column]clmInclude";
                    this.mUIValgtCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell2.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell2;
            }
        }
        
        public DXCell UIValgtCell3
        {
            get
            {
                if ((this.mUIValgtCell3 == null))
                {
                    this.mUIValgtCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]9[Column]clmInclude";
                    this.mUIValgtCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell3.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell3;
            }
        }
        
        public DXCell UIValgtCell4
        {
            get
            {
                if ((this.mUIValgtCell4 == null))
                {
                    this.mUIValgtCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]14[Column]clmInclude";
                    this.mUIValgtCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell4.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell4;
            }
        }
        
        public DXCell UIValgtCell5
        {
            get
            {
                if ((this.mUIValgtCell5 == null))
                {
                    this.mUIValgtCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]20[Column]clmInclude";
                    this.mUIValgtCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell5.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell5;
            }
        }
        
        public DXCheckBox UICheckCheckBox
        {
            get
            {
                if ((this.mUICheckCheckBox == null))
                {
                    this.mUICheckCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICheckCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlCheckEdit[View]gvRosterLines[Row]3[Column]clmInclude";
                    this.mUICheckCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUICheckCheckBox.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUICheckCheckBox;
            }
        }
        
        public DXCell UIValgtCell6
        {
            get
            {
                if ((this.mUIValgtCell6 == null))
                {
                    this.mUIValgtCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]5[Column]clmInclude";
                    this.mUIValgtCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell6.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIValgtCell6;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIEdruEllenCell;
        
        private DXCell mUIIkkevalgtCell;
        
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        
        private DXCell mUIValgtCell2;
        
        private DXCell mUIValgtCell3;
        
        private DXCell mUIValgtCell4;
        
        private DXCell mUIValgtCell5;
        
        private DXCheckBox mUICheckCheckBox;
        
        private DXCell mUIValgtCell6;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink3MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink3MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink3MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink3MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBarButtonItemLink7MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink7MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink7MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink7MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[7]";
                    this.mUIBarButtonItemLink7MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink7MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink3MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBarButtonItemLink7MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcMainPanelClient : DXTestControl
    {
        
        public UIPcMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcPanListsTabList : DXTestControl
    {
        
        public UITcPanListsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpRosterPlanListClient : DXTestControl
    {
        
        public UITpRosterPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanListCustom : DXTestControl
    {
        
        public UIRosterPlanListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGridClient : DXTestControl
    {
        
        public UIPnlGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlansTable UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlansTable mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlansTable : DXGrid
    {
        
        public UIGcRosterPlansTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIKopiavArbeidsplanCell
        {
            get
            {
                if ((this.mUIKopiavArbeidsplanCell == null))
                {
                    this.mUIKopiavArbeidsplanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKopiavArbeidsplanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]5[Column]gcolPlan";
                    this.mUIKopiavArbeidsplanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKopiavArbeidsplanCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIKopiavArbeidsplanCell;
            }
        }
        
        public DXCell UIArbeidsplanCell
        {
            get
            {
                if ((this.mUIArbeidsplanCell == null))
                {
                    this.mUIArbeidsplanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIArbeidsplanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]5[Column]gcolRosterPlanType";
                    this.mUIArbeidsplanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIArbeidsplanCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIArbeidsplanCell;
            }
        }
        
        public DXCell UIItem24032014Cell
        {
            get
            {
                if ((this.mUIItem24032014Cell == null))
                {
                    this.mUIItem24032014Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem24032014Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]5[Column]gcolValidFrom";
                    this.mUIItem24032014Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem24032014Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem24032014Cell;
            }
        }
        
        public DXCell UIItem04052014Cell
        {
            get
            {
                if ((this.mUIItem04052014Cell == null))
                {
                    this.mUIItem04052014Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem04052014Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]5[Column]gcolValidTo";
                    this.mUIItem04052014Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem04052014Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem04052014Cell;
            }
        }
        
        public DXCell UIItem25Cell
        {
            get
            {
                if ((this.mUIItem25Cell == null))
                {
                    this.mUIItem25Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem25Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]5[Column]gcolEmployeeCount";
                    this.mUIItem25Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem25Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem25Cell;
            }
        }
        
        public DXCell UIItem1900Cell
        {
            get
            {
                if ((this.mUIItem1900Cell == null))
                {
                    this.mUIItem1900Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1900Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]5[Column]gcolManYears";
                    this.mUIItem1900Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1900Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem1900Cell;
            }
        }
        
        public DXCell UIItem5190KopieringCell
        {
            get
            {
                if ((this.mUIItem5190KopieringCell == null))
                {
                    this.mUIItem5190KopieringCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5190KopieringCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]5[Column]gcolDepartment";
                    this.mUIItem5190KopieringCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5190KopieringCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem5190KopieringCell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]5[Column]gcolEffectuated";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIKopiavArbeidsplanCell;
        
        private DXCell mUIArbeidsplanCell;
        
        private DXCell mUIItem24032014Cell;
        
        private DXCell mUIItem04052014Cell;
        
        private DXCell mUIItem25Cell;
        
        private DXCell mUIItem1900Cell;
        
        private DXCell mUIItem5190KopieringCell;
        
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow : DXWindow
    {
        
        public UIOppgavetildelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainCustom UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new UILcMainCustom(this);
                }
                return this.mUILcMainCustom;
            }
        }
        
        public UIVhContentCustom UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainCustom mUILcMainCustom;
        
        private UIVhContentCustom mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainCustom : DXTestControl
    {
        
        public UILcMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciCenterLayoutControlItem UILciCenterLayoutControlItem
        {
            get
            {
                if ((this.mUILciCenterLayoutControlItem == null))
                {
                    this.mUILciCenterLayoutControlItem = new UILciCenterLayoutControlItem(this);
                }
                return this.mUILciCenterLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciCenterLayoutControlItem mUILciCenterLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciCenterLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciCenterLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcCenterClient UIPcCenterClient
        {
            get
            {
                if ((this.mUIPcCenterClient == null))
                {
                    this.mUIPcCenterClient = new UIPcCenterClient(this);
                }
                return this.mUIPcCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcCenterClient mUIPcCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcCenterClient : DXTestControl
    {
        
        public UIPcCenterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcInnerCustom UILcInnerCustom
        {
            get
            {
                if ((this.mUILcInnerCustom == null))
                {
                    this.mUILcInnerCustom = new UILcInnerCustom(this);
                }
                return this.mUILcInnerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcInnerCustom mUILcInnerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcInnerCustom : DXTestControl
    {
        
        public UILcInnerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcInner";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgInnerLayoutGroup UILcgInnerLayoutGroup
        {
            get
            {
                if ((this.mUILcgInnerLayoutGroup == null))
                {
                    this.mUILcgInnerLayoutGroup = new UILcgInnerLayoutGroup(this);
                }
                return this.mUILcgInnerLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgInnerLayoutGroup mUILcgInnerLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgInnerLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgInnerLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgInner";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciInnerTopLayoutControlItem UILciInnerTopLayoutControlItem
        {
            get
            {
                if ((this.mUILciInnerTopLayoutControlItem == null))
                {
                    this.mUILciInnerTopLayoutControlItem = new UILciInnerTopLayoutControlItem(this);
                }
                return this.mUILciInnerTopLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciInnerTopLayoutControlItem mUILciInnerTopLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciInnerTopLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciInnerTopLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciInnerTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcInnerTopClient UIPcInnerTopClient
        {
            get
            {
                if ((this.mUIPcInnerTopClient == null))
                {
                    this.mUIPcInnerTopClient = new UIPcInnerTopClient(this);
                }
                return this.mUIPcInnerTopClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcInnerTopClient mUIPcInnerTopClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcInnerTopClient : DXTestControl
    {
        
        public UIPcInnerTopClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcInnerTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainContentCustom UILcMainContentCustom
        {
            get
            {
                if ((this.mUILcMainContentCustom == null))
                {
                    this.mUILcMainContentCustom = new UILcMainContentCustom(this);
                }
                return this.mUILcMainContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainContentCustom mUILcMainContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainContentCustom : DXTestControl
    {
        
        public UILcMainContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgMainContentLayoutGroup UILcgMainContentLayoutGroup
        {
            get
            {
                if ((this.mUILcgMainContentLayoutGroup == null))
                {
                    this.mUILcgMainContentLayoutGroup = new UILcgMainContentLayoutGroup(this);
                }
                return this.mUILcgMainContentLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgMainContentLayoutGroup mUILcgMainContentLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgMainContentLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgMainContentLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgMainContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciMainContentLayoutControlItem UILciMainContentLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainContentLayoutControlItem == null))
                {
                    this.mUILciMainContentLayoutControlItem = new UILciMainContentLayoutControlItem(this);
                }
                return this.mUILciMainContentLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainContentLayoutControlItem mUILciMainContentLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciMainContentLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciMainContentLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIAdvancedRoleAssignmeCustom UIAdvancedRoleAssignmeCustom
        {
            get
            {
                if ((this.mUIAdvancedRoleAssignmeCustom == null))
                {
                    this.mUIAdvancedRoleAssignmeCustom = new UIAdvancedRoleAssignmeCustom(this);
                }
                return this.mUIAdvancedRoleAssignmeCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAdvancedRoleAssignmeCustom mUIAdvancedRoleAssignmeCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAdvancedRoleAssignmeCustom : DXTestControl
    {
        
        public UIAdvancedRoleAssignmeCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "advancedRoleAssignmentMainUserControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AdvancedRoleAssignmentMainUserControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcMainClient UIPcMainClient
        {
            get
            {
                if ((this.mUIPcMainClient == null))
                {
                    this.mUIPcMainClient = new UIPcMainClient(this);
                }
                return this.mUIPcMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainClient mUIPcMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcMainClient : DXTestControl
    {
        
        public UIPcMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UITcMainTabList UITcMainTabList
        {
            get
            {
                if ((this.mUITcMainTabList == null))
                {
                    this.mUITcMainTabList = new UITcMainTabList(this);
                }
                return this.mUITcMainTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcMainTabList mUITcMainTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcMainTabList : DXTestControl
    {
        
        public UITcMainTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UITpMainRoleViewClient UITpMainRoleViewClient
        {
            get
            {
                if ((this.mUITpMainRoleViewClient == null))
                {
                    this.mUITpMainRoleViewClient = new UITpMainRoleViewClient(this);
                }
                return this.mUITpMainRoleViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainRoleViewClient mUITpMainRoleViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpMainRoleViewClient : DXTestControl
    {
        
        public UITpMainRoleViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMainRoleView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsSplitContainerContSplitContainerControl : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        
        public UISplitGroupPanelClient11 UISplitGroupPanelClient1
        {
            get
            {
                if ((this.mUISplitGroupPanelClient1 == null))
                {
                    this.mUISplitGroupPanelClient1 = new UISplitGroupPanelClient11(this);
                }
                return this.mUISplitGroupPanelClient1;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient mUISplitGroupPanelClient;
        
        private UISplitGroupPanelClient11 mUISplitGroupPanelClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient : DXTestControl
    {
        
        public UISplitGroupPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1SplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl1 UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl1(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl1 mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsSplitContainerContSplitContainerControl1 : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient1 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient1(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient1 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient1 : DXTestControl
    {
        
        public UISplitGroupPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl2SplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable : DXGrid
    {
        
        public UIGcDragDropGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]Interval_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient11 : DXTestControl
    {
        
        public UISplitGroupPanelClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1SplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable1 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable1(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable1 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable1 : DXGrid
    {
        
        public UIGcDragDropGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]Interval_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom : DXTestControl
    {
        
        public UIVhContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom1 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom1(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIPanelContainer2DockPanel UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom1 mUIVhContentCustom;
        
        private UIPanelContainer2DockPanel mUIPanelContainer2DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom1 : DXTestControl
    {
        
        public UIVhContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleFocusedManageVieCustom UIRoleFocusedManageVieCustom
        {
            get
            {
                if ((this.mUIRoleFocusedManageVieCustom == null))
                {
                    this.mUIRoleFocusedManageVieCustom = new UIRoleFocusedManageVieCustom(this);
                }
                return this.mUIRoleFocusedManageVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleFocusedManageVieCustom mUIRoleFocusedManageVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleFocusedManageVieCustom : DXTestControl
    {
        
        public UIRoleFocusedManageVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleFocusedManageView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgContentCustom UIIgContentCustom
        {
            get
            {
                if ((this.mUIIgContentCustom == null))
                {
                    this.mUIIgContentCustom = new UIIgContentCustom(this);
                }
                return this.mUIIgContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgContentCustom mUIIgContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgContentCustom : DXTestControl
    {
        
        public UIIgContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom : DXTestControl
    {
        
        public UIDdGridControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable2 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable2(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable2 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable2 : DXGrid
    {
        
        public UIGcDragDropGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIGcDragDropGridGridCoCell1
        {
            get
            {
                if ((this.mUIGcDragDropGridGridCoCell1 == null))
                {
                    this.mUIGcDragDropGridGridCoCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDragDropGridGridCoCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1";
                    this.mUIGcDragDropGridGridCoCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDragDropGridGridCoCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcDragDropGridGridCoCell1;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-2";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-3";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-4";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-5";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIGcDragDropGridGridCoCell
        {
            get
            {
                if ((this.mUIGcDragDropGridGridCoCell == null))
                {
                    this.mUIGcDragDropGridGridCoCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1";
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDragDropGridGridCoCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcDragDropGridGridCoCell;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-2";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-3";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-4";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-5";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXCell UIA14HålandSunniva1900Cell
        {
            get
            {
                if ((this.mUIA14HålandSunniva1900Cell == null))
                {
                    this.mUIA14HålandSunniva1900Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIA14HålandSunniva1900Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]col25.03.2024";
                    this.mUIA14HålandSunniva1900Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIA14HålandSunniva1900Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIA14HålandSunniva1900Cell;
            }
        }
        
        public DXCell UID2AskVictoria0700073Cell
        {
            get
            {
                if ((this.mUID2AskVictoria0700073Cell == null))
                {
                    this.mUID2AskVictoria0700073Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID2AskVictoria0700073Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col26.03.2024";
                    this.mUID2AskVictoria0700073Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID2AskVictoria0700073Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID2AskVictoria0700073Cell;
            }
        }
        
        public DXCell UIA10FredriksenLisa190Cell
        {
            get
            {
                if ((this.mUIA10FredriksenLisa190Cell == null))
                {
                    this.mUIA10FredriksenLisa190Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIA10FredriksenLisa190Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]col26.03.2024";
                    this.mUIA10FredriksenLisa190Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIA10FredriksenLisa190Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIA10FredriksenLisa190Cell;
            }
        }
        
        public DXCell UIN21LekvenTerje223023Cell
        {
            get
            {
                if ((this.mUIN21LekvenTerje223023Cell == null))
                {
                    this.mUIN21LekvenTerje223023Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIN21LekvenTerje223023Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]col26.03.2024";
                    this.mUIN21LekvenTerje223023Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN21LekvenTerje223023Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIN21LekvenTerje223023Cell;
            }
        }
        
        public DXCell UID25VAKANT07000730Cell
        {
            get
            {
                if ((this.mUID25VAKANT07000730Cell == null))
                {
                    this.mUID25VAKANT07000730Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID25VAKANT07000730Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col31.03.2024";
                    this.mUID25VAKANT07000730Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID25VAKANT07000730Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID25VAKANT07000730Cell;
            }
        }
        
        public DXCell UIGV11BelsethTrude0800Cell
        {
            get
            {
                if ((this.mUIGV11BelsethTrude0800Cell == null))
                {
                    this.mUIGV11BelsethTrude0800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV11BelsethTrude0800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col01.07.2024";
                    this.mUIGV11BelsethTrude0800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV11BelsethTrude0800Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV11BelsethTrude0800Cell;
            }
        }
        
        public DXCell UIGV13HolmèrHans080016Cell
        {
            get
            {
                if ((this.mUIGV13HolmèrHans080016Cell == null))
                {
                    this.mUIGV13HolmèrHans080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV13HolmèrHans080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col01.07.2024";
                    this.mUIGV13HolmèrHans080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV13HolmèrHans080016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV13HolmèrHans080016Cell;
            }
        }
        
        public DXCell UIGV11BelsethTrude0800Cell1
        {
            get
            {
                if ((this.mUIGV11BelsethTrude0800Cell1 == null))
                {
                    this.mUIGV11BelsethTrude0800Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV11BelsethTrude0800Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col02.07.2024";
                    this.mUIGV11BelsethTrude0800Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV11BelsethTrude0800Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV11BelsethTrude0800Cell1;
            }
        }
        
        public DXCell UIGV13HolmèrHans080016Cell1
        {
            get
            {
                if ((this.mUIGV13HolmèrHans080016Cell1 == null))
                {
                    this.mUIGV13HolmèrHans080016Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV13HolmèrHans080016Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col02.07.2024";
                    this.mUIGV13HolmèrHans080016Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV13HolmèrHans080016Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV13HolmèrHans080016Cell1;
            }
        }
        
        public DXCell UIGV11BelsethTrude0800Cell2
        {
            get
            {
                if ((this.mUIGV11BelsethTrude0800Cell2 == null))
                {
                    this.mUIGV11BelsethTrude0800Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV11BelsethTrude0800Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col03.07.2024";
                    this.mUIGV11BelsethTrude0800Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV11BelsethTrude0800Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV11BelsethTrude0800Cell2;
            }
        }
        
        public DXCell UIGV13HolmèrHans080016Cell2
        {
            get
            {
                if ((this.mUIGV13HolmèrHans080016Cell2 == null))
                {
                    this.mUIGV13HolmèrHans080016Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV13HolmèrHans080016Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col03.07.2024";
                    this.mUIGV13HolmèrHans080016Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV13HolmèrHans080016Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV13HolmèrHans080016Cell2;
            }
        }
        
        public DXCell UIGV11BelsethTrude0800Cell3
        {
            get
            {
                if ((this.mUIGV11BelsethTrude0800Cell3 == null))
                {
                    this.mUIGV11BelsethTrude0800Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV11BelsethTrude0800Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col04.07.2024";
                    this.mUIGV11BelsethTrude0800Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV11BelsethTrude0800Cell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV11BelsethTrude0800Cell3;
            }
        }
        
        public DXCell UIGV13HolmèrHans080016Cell3
        {
            get
            {
                if ((this.mUIGV13HolmèrHans080016Cell3 == null))
                {
                    this.mUIGV13HolmèrHans080016Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV13HolmèrHans080016Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col04.07.2024";
                    this.mUIGV13HolmèrHans080016Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV13HolmèrHans080016Cell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV13HolmèrHans080016Cell3;
            }
        }
        
        public DXCell UIGV11BelsethTrude0800Cell4
        {
            get
            {
                if ((this.mUIGV11BelsethTrude0800Cell4 == null))
                {
                    this.mUIGV11BelsethTrude0800Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV11BelsethTrude0800Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col05.07.2024";
                    this.mUIGV11BelsethTrude0800Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV11BelsethTrude0800Cell4.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV11BelsethTrude0800Cell4;
            }
        }
        
        public DXCell UIGV13HolmèrHans080016Cell4
        {
            get
            {
                if ((this.mUIGV13HolmèrHans080016Cell4 == null))
                {
                    this.mUIGV13HolmèrHans080016Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV13HolmèrHans080016Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col05.07.2024";
                    this.mUIGV13HolmèrHans080016Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV13HolmèrHans080016Cell4.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV13HolmèrHans080016Cell4;
            }
        }
        
        public DXCell UIN1BelsethTrude221507Cell
        {
            get
            {
                if ((this.mUIN1BelsethTrude221507Cell == null))
                {
                    this.mUIN1BelsethTrude221507Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIN1BelsethTrude221507Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col12.07.2024";
                    this.mUIN1BelsethTrude221507Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN1BelsethTrude221507Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIN1BelsethTrude221507Cell;
            }
        }
        
        public DXCell UIN3HolmèrHans22150715Cell
        {
            get
            {
                if ((this.mUIN3HolmèrHans22150715Cell == null))
                {
                    this.mUIN3HolmèrHans22150715Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIN3HolmèrHans22150715Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col12.07.2024";
                    this.mUIN3HolmèrHans22150715Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN3HolmèrHans22150715Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIN3HolmèrHans22150715Cell;
            }
        }
        
        public DXCell UIN1BelsethTrude221507Cell1
        {
            get
            {
                if ((this.mUIN1BelsethTrude221507Cell1 == null))
                {
                    this.mUIN1BelsethTrude221507Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIN1BelsethTrude221507Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col13.07.2024";
                    this.mUIN1BelsethTrude221507Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN1BelsethTrude221507Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIN1BelsethTrude221507Cell1;
            }
        }
        
        public DXCell UIN3HolmèrHans22150715Cell1
        {
            get
            {
                if ((this.mUIN3HolmèrHans22150715Cell1 == null))
                {
                    this.mUIN3HolmèrHans22150715Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIN3HolmèrHans22150715Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col13.07.2024";
                    this.mUIN3HolmèrHans22150715Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN3HolmèrHans22150715Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIN3HolmèrHans22150715Cell1;
            }
        }
        
        public DXCell UIN1BelsethTrude221507Cell2
        {
            get
            {
                if ((this.mUIN1BelsethTrude221507Cell2 == null))
                {
                    this.mUIN1BelsethTrude221507Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIN1BelsethTrude221507Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col14.07.2024";
                    this.mUIN1BelsethTrude221507Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN1BelsethTrude221507Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIN1BelsethTrude221507Cell2;
            }
        }
        
        public DXCell UIN3HolmèrHans22150715Cell2
        {
            get
            {
                if ((this.mUIN3HolmèrHans22150715Cell2 == null))
                {
                    this.mUIN3HolmèrHans22150715Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIN3HolmèrHans22150715Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col14.07.2024";
                    this.mUIN3HolmèrHans22150715Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN3HolmèrHans22150715Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIN3HolmèrHans22150715Cell2;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGcDragDropGridGridCoCell1;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIGcDragDropGridGridCoCell;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItemCell5;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUIItemCell7;
        
        private DXCell mUIA14HålandSunniva1900Cell;
        
        private DXCell mUID2AskVictoria0700073Cell;
        
        private DXCell mUIA10FredriksenLisa190Cell;
        
        private DXCell mUIN21LekvenTerje223023Cell;
        
        private DXCell mUID25VAKANT07000730Cell;
        
        private DXCell mUIGV11BelsethTrude0800Cell;
        
        private DXCell mUIGV13HolmèrHans080016Cell;
        
        private DXCell mUIGV11BelsethTrude0800Cell1;
        
        private DXCell mUIGV13HolmèrHans080016Cell1;
        
        private DXCell mUIGV11BelsethTrude0800Cell2;
        
        private DXCell mUIGV13HolmèrHans080016Cell2;
        
        private DXCell mUIGV11BelsethTrude0800Cell3;
        
        private DXCell mUIGV13HolmèrHans080016Cell3;
        
        private DXCell mUIGV11BelsethTrude0800Cell4;
        
        private DXCell mUIGV13HolmèrHans080016Cell4;
        
        private DXCell mUIN1BelsethTrude221507Cell;
        
        private DXCell mUIN3HolmèrHans22150715Cell;
        
        private DXCell mUIN1BelsethTrude221507Cell1;
        
        private DXCell mUIN3HolmèrHans22150715Cell1;
        
        private DXCell mUIN1BelsethTrude221507Cell2;
        
        private DXCell mUIN3HolmèrHans22150715Cell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer3DockPanel UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer3DockPanel mUIPanelContainer3DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDSpecificationsDockPanel UIDSpecificationsDockPanel
        {
            get
            {
                if ((this.mUIDSpecificationsDockPanel == null))
                {
                    this.mUIDSpecificationsDockPanel = new UIDSpecificationsDockPanel(this);
                }
                return this.mUIDSpecificationsDockPanel;
            }
        }
        
        public DXButton UISpesifikasjonButton
        {
            get
            {
                if ((this.mUISpesifikasjonButton == null))
                {
                    this.mUISpesifikasjonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Spesifikasjon";
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUISpesifikasjonButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISpesifikasjonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIDSpecificationsDockPanel mUIDSpecificationsDockPanel;
        
        private DXButton mUISpesifikasjonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDSpecificationsDockPanel : DXDockPanel
    {
        
        public UIDSpecificationsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dSpecifications";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer2Custom UIControlContainer2Custom
        {
            get
            {
                if ((this.mUIControlContainer2Custom == null))
                {
                    this.mUIControlContainer2Custom = new UIControlContainer2Custom(this);
                }
                return this.mUIControlContainer2Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer2Custom mUIControlContainer2Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer2Custom : DXTestControl
    {
        
        public UIControlContainer2Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationPanelViCustom UISpecificationPanelViCustom
        {
            get
            {
                if ((this.mUISpecificationPanelViCustom == null))
                {
                    this.mUISpecificationPanelViCustom = new UISpecificationPanelViCustom(this);
                }
                return this.mUISpecificationPanelViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationPanelViCustom mUISpecificationPanelViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationPanelViCustom : DXTestControl
    {
        
        public UISpecificationPanelViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationPanelView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationPanelView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFlowControlViewHost1Custom UIFlowControlViewHost1Custom
        {
            get
            {
                if ((this.mUIFlowControlViewHost1Custom == null))
                {
                    this.mUIFlowControlViewHost1Custom = new UIFlowControlViewHost1Custom(this);
                }
                return this.mUIFlowControlViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowControlViewHost1Custom mUIFlowControlViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFlowControlViewHost1Custom : DXTestControl
    {
        
        public UIFlowControlViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flowControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationSectionCustom UISpecificationSectionCustom
        {
            get
            {
                if ((this.mUISpecificationSectionCustom == null))
                {
                    this.mUISpecificationSectionCustom = new UISpecificationSectionCustom(this);
                }
                return this.mUISpecificationSectionCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationSectionCustom mUISpecificationSectionCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationSectionCustom : DXTestControl
    {
        
        public UISpecificationSectionCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationSectionView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationSectionView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcHeaderClient UIPcHeaderClient
        {
            get
            {
                if ((this.mUIPcHeaderClient == null))
                {
                    this.mUIPcHeaderClient = new UIPcHeaderClient(this);
                }
                return this.mUIPcHeaderClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcHeaderClient mUIPcHeaderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcHeaderClient : DXTestControl
    {
        
        public UIPcHeaderClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcHeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDropDownMenu UIDropDownMenu
        {
            get
            {
                if ((this.mUIDropDownMenu == null))
                {
                    this.mUIDropDownMenu = new UIDropDownMenu(this);
                }
                return this.mUIDropDownMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIDropDownMenu mUIDropDownMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDropDownMenu : WinMenu
    {
        
        public UIDropDownMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "DropDown";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIEndretildelingavoppgMenuItem
        {
            get
            {
                if ((this.mUIEndretildelingavoppgMenuItem == null))
                {
                    this.mUIEndretildelingavoppgMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIEndretildelingavoppgMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Endre tildeling av oppgave";
                    #endregion
                }
                return this.mUIEndretildelingavoppgMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIEndretildelingavoppgMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRegistreringsstatusWindow : DXWindow
    {
        
        public UIRegistreringsstatusWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Registreringsstatus";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILcMessagesCustom UILcMessagesCustom
        {
            get
            {
                if ((this.mUILcMessagesCustom == null))
                {
                    this.mUILcMessagesCustom = new UILcMessagesCustom(this);
                }
                return this.mUILcMessagesCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcMessagesCustom mUILcMessagesCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMessagesCustom : DXTestControl
    {
        
        public UILcMessagesCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILcgMessagesLayoutGroup UILcgMessagesLayoutGroup
        {
            get
            {
                if ((this.mUILcgMessagesLayoutGroup == null))
                {
                    this.mUILcgMessagesLayoutGroup = new UILcgMessagesLayoutGroup(this);
                }
                return this.mUILcgMessagesLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgMessagesLayoutGroup mUILcgMessagesLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgMessagesLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgMessagesLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILciMessagesLayoutControlItem UILciMessagesLayoutControlItem
        {
            get
            {
                if ((this.mUILciMessagesLayoutControlItem == null))
                {
                    this.mUILciMessagesLayoutControlItem = new UILciMessagesLayoutControlItem(this);
                }
                return this.mUILciMessagesLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMessagesLayoutControlItem mUILciMessagesLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciMessagesLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciMessagesLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UIGMessagesTable UIGMessagesTable
        {
            get
            {
                if ((this.mUIGMessagesTable == null))
                {
                    this.mUIGMessagesTable = new UIGMessagesTable(this);
                }
                return this.mUIGMessagesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGMessagesTable mUIGMessagesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGMessagesTable : DXGrid
    {
        
        public UIGMessagesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public DXCell UILinje143HålandSunnivCell
        {
            get
            {
                if ((this.mUILinje143HålandSunnivCell == null))
                {
                    this.mUILinje143HålandSunnivCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILinje143HålandSunnivCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gMessagesGridControlCell[View]gvMessages[Row]0[Column]gvMessagesColumn_Text";
                    this.mUILinje143HålandSunnivCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILinje143HålandSunnivCell.WindowTitles.Add("Registreringsstatus");
                    #endregion
                }
                return this.mUILinje143HålandSunnivCell;
            }
        }
        
        public DXCell UILinje92FallaKristerkCell
        {
            get
            {
                if ((this.mUILinje92FallaKristerkCell == null))
                {
                    this.mUILinje92FallaKristerkCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILinje92FallaKristerkCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gMessagesGridControlCell[View]gvMessages[Row]1[Column]gvMessagesColumn_Text";
                    this.mUILinje92FallaKristerkCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILinje92FallaKristerkCell.WindowTitles.Add("Registreringsstatus");
                    #endregion
                }
                return this.mUILinje92FallaKristerkCell;
            }
        }
        
        public DXCell UIItem71EllingsenDavidCell
        {
            get
            {
                if ((this.mUIItem71EllingsenDavidCell == null))
                {
                    this.mUIItem71EllingsenDavidCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem71EllingsenDavidCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gMessagesGridControlCell[View]gvMessages[Row]2[Column]gvMessagesColumn_Text";
                    this.mUIItem71EllingsenDavidCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem71EllingsenDavidCell.WindowTitles.Add("Registreringsstatus");
                    #endregion
                }
                return this.mUIItem71EllingsenDavidCell;
            }
        }
        
        public DXCell UILinje31BrustadVetlehCell
        {
            get
            {
                if ((this.mUILinje31BrustadVetlehCell == null))
                {
                    this.mUILinje31BrustadVetlehCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILinje31BrustadVetlehCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gMessagesGridControlCell[View]gvMessages[Row]3[Column]gvMessagesColumn_Text";
                    this.mUILinje31BrustadVetlehCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILinje31BrustadVetlehCell.WindowTitles.Add("Registreringsstatus");
                    #endregion
                }
                return this.mUILinje31BrustadVetlehCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUILinje143HålandSunnivCell;
        
        private DXCell mUILinje92FallaKristerkCell;
        
        private DXCell mUIItem71EllingsenDavidCell;
        
        private DXCell mUILinje31BrustadVetlehCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIverksetteWindow : DXWindow
    {
        
        public UIIverksetteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Iverksette";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIPnlResultClient UIPnlResultClient
        {
            get
            {
                if ((this.mUIPnlResultClient == null))
                {
                    this.mUIPnlResultClient = new UIPnlResultClient(this);
                }
                return this.mUIPnlResultClient;
            }
        }
        
        public UIPnlTopClient UIPnlTopClient
        {
            get
            {
                if ((this.mUIPnlTopClient == null))
                {
                    this.mUIPnlTopClient = new UIPnlTopClient(this);
                }
                return this.mUIPnlTopClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlResultClient mUIPnlResultClient;
        
        private UIPnlTopClient mUIPnlTopClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlResultClient : DXTestControl
    {
        
        public UIPnlResultClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlResult";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlLinesTable UIGsGridControlLinesTable
        {
            get
            {
                if ((this.mUIGsGridControlLinesTable == null))
                {
                    this.mUIGsGridControlLinesTable = new UIGsGridControlLinesTable(this);
                }
                return this.mUIGsGridControlLinesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlLinesTable mUIGsGridControlLinesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsGridControlLinesTable : DXGrid
    {
        
        public UIGsGridControlLinesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLines";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UICheckEditCheckBox
        {
            get
            {
                if ((this.mUICheckEditCheckBox == null))
                {
                    this.mUICheckEditCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesCheckEdit[View]gvPersons[Row]6[Column]clmEffectuate";
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUICheckEditCheckBox.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUICheckEditCheckBox;
            }
        }
        
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]9[Column]clmEffectuate";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCell UIIkkevalgtCell1
        {
            get
            {
                if ((this.mUIIkkevalgtCell1 == null))
                {
                    this.mUIIkkevalgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlLinesGridControlCell[View]gvPersons[Row]17[Column]clmEffectuate";
                    this.mUIIkkevalgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell1.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIkkevalgtCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUICheckEditCheckBox;
        
        private DXCell mUIIkkevalgtCell;
        
        private DXCell mUIIkkevalgtCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlTopClient : DXTestControl
    {
        
        public UIPnlTopClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UILnkDetailPopupEdit
        {
            get
            {
                if ((this.mUILnkDetailPopupEdit == null))
                {
                    this.mUILnkDetailPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail";
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
                    this.mUILnkDetailPopupEdit.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUILnkDetailPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUILnkDetailPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINyhjelpeplanWindow : DXWindow
    {
        
        public UINyhjelpeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny hjelpeplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient1 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient1(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient1 mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient1 : DXTestControl
    {
        
        public UIPnlMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom1 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom1(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom1 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom1 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup1 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup1 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup1 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup1 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem1 UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        
        public UILayoutControlItem4LayoutControlItem UILayoutControlItem4LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem4LayoutControlItem == null))
                {
                    this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem(this);
                }
                return this.mUILayoutControlItem4LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem1 mUILayoutControlItem2LayoutControlItem;
        
        private UILayoutControlItem4LayoutControlItem mUILayoutControlItem4LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlGridSumClient1 UIPnlGridSumClient
        {
            get
            {
                if ((this.mUIPnlGridSumClient == null))
                {
                    this.mUIPnlGridSumClient = new UIPnlGridSumClient1(this);
                }
                return this.mUIPnlGridSumClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridSumClient1 mUIPnlGridSumClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGridSumClient1 : DXTestControl
    {
        
        public UIPnlGridSumClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGridSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlTable1 UIGsGridControlTable
        {
            get
            {
                if ((this.mUIGsGridControlTable == null))
                {
                    this.mUIGsGridControlTable = new UIGsGridControlTable1(this);
                }
                return this.mUIGsGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlTable1 mUIGsGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsGridControlTable1 : DXGrid
    {
        
        public UIGsGridControlTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXCell UITrueCell
        {
            get
            {
                if ((this.mUITrueCell == null))
                {
                    this.mUITrueCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITrueCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]22[Column]clmNone";
                    this.mUITrueCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITrueCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUITrueCell;
            }
        }
        
        public DXCell UITrueCell1
        {
            get
            {
                if ((this.mUITrueCell1 == null))
                {
                    this.mUITrueCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUITrueCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]28[Column]clmNone";
                    this.mUITrueCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITrueCell1.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUITrueCell1;
            }
        }
        
        public DXCell UIEdruEllenCell
        {
            get
            {
                if ((this.mUIEdruEllenCell == null))
                {
                    this.mUIEdruEllenCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIEdruEllenCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]5[Column]clmName";
                    this.mUIEdruEllenCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIEdruEllenCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIEdruEllenCell;
            }
        }
        
        public DXCell UIMaximusGluteusCell
        {
            get
            {
                if ((this.mUIMaximusGluteusCell == null))
                {
                    this.mUIMaximusGluteusCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMaximusGluteusCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]4[Column]clmName";
                    this.mUIMaximusGluteusCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMaximusGluteusCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIMaximusGluteusCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITrueCell;
        
        private DXCell mUITrueCell1;
        
        private DXCell mUIEdruEllenCell;
        
        private DXCell mUIMaximusGluteusCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem4LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem4LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRuleButtonsClient UIPnlRuleButtonsClient
        {
            get
            {
                if ((this.mUIPnlRuleButtonsClient == null))
                {
                    this.mUIPnlRuleButtonsClient = new UIPnlRuleButtonsClient(this);
                }
                return this.mUIPnlRuleButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRuleButtonsClient mUIPnlRuleButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRuleButtonsClient : DXTestControl
    {
        
        public UIPnlRuleButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRuleButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIAnnenhverberegningavButton
        {
            get
            {
                if ((this.mUIAnnenhverberegningavButton == null))
                {
                    this.mUIAnnenhverberegningavButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnnenhverberegningavButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEveryOther";
                    this.mUIAnnenhverberegningavButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAnnenhverberegningavButton.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIAnnenhverberegningavButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAnnenhverberegningavButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_0";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        
        public DXCell UIIsfjellBjørnCell
        {
            get
            {
                if ((this.mUIIsfjellBjørnCell == null))
                {
                    this.mUIIsfjellBjørnCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIsfjellBjørnCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]Col_EmployeeName";
                    this.mUIIsfjellBjørnCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIsfjellBjørnCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIIsfjellBjørnCell;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_6";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit == null))
                {
                    this.mUIRow4ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]4[Column]RosterCell_6";
                    this.mUIRow4ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_13";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]4[Column]RosterCell_13";
                    this.mUIRow4ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_20";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]4[Column]RosterCell_20";
                    this.mUIRow4ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_27";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]4[Column]RosterCell_27";
                    this.mUIRow4ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_0";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_2";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]4[Column]RosterCell_0";
                    this.mUIRow4ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_7";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_9";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]4[Column]RosterCell_7";
                    this.mUIRow4ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell8
        {
            get
            {
                if ((this.mUIItemCell8 == null))
                {
                    this.mUIItemCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_14";
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell8;
            }
        }
        
        public DXCell UIItemCell9
        {
            get
            {
                if ((this.mUIItemCell9 == null))
                {
                    this.mUIItemCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_16";
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell9;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]4[Column]RosterCell_14";
                    this.mUIRow4ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit6;
            }
        }
        
        public DXCell UIItemCell10
        {
            get
            {
                if ((this.mUIItemCell10 == null))
                {
                    this.mUIItemCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_21";
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell10;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]RosterCell_23";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXTextEdit UIRow4ColumnRosterCellEdit7
        {
            get
            {
                if ((this.mUIRow4ColumnRosterCellEdit7 == null))
                {
                    this.mUIRow4ColumnRosterCellEdit7 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow4ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]4[Column]RosterCell_21";
                    this.mUIRow4ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow4ColumnRosterCellEdit7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow4ColumnRosterCellEdit7;
            }
        }
        
        public DXCell UIF1Cell
        {
            get
            {
                if ((this.mUIF1Cell == null))
                {
                    this.mUIF1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIF1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_6";
                    this.mUIF1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF1Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF1Cell;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit == null))
                {
                    this.mUIRow5ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_6";
                    this.mUIRow5ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIDCell1
        {
            get
            {
                if ((this.mUIDCell1 == null))
                {
                    this.mUIDCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_7";
                    this.mUIDCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell1;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_7";
                    this.mUIRow5ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_9";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_9";
                    this.mUIRow5ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell13
        {
            get
            {
                if ((this.mUIItemCell13 == null))
                {
                    this.mUIItemCell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_11";
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell13.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell13;
            }
        }
        
        public DXCell UIItemCell21
        {
            get
            {
                if ((this.mUIItemCell21 == null))
                {
                    this.mUIItemCell21 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_13";
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell21.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell21;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_11";
                    this.mUIRow5ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell31
        {
            get
            {
                if ((this.mUIItemCell31 == null))
                {
                    this.mUIItemCell31 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_15";
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell31.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell31;
            }
        }
        
        public DXCell UIItemCell41
        {
            get
            {
                if ((this.mUIItemCell41 == null))
                {
                    this.mUIItemCell41 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell41.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_18";
                    this.mUIItemCell41.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell41.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell41;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_15";
                    this.mUIRow5ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit6;
            }
        }
        
        public DXCell UIItemCell51
        {
            get
            {
                if ((this.mUIItemCell51 == null))
                {
                    this.mUIItemCell51 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell51.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_19";
                    this.mUIItemCell51.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell51.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell51;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit7
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit7 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit7 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_19";
                    this.mUIRow5ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit7;
            }
        }
        
        public DXCell UIItemCell61
        {
            get
            {
                if ((this.mUIItemCell61 == null))
                {
                    this.mUIItemCell61 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell61.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_20";
                    this.mUIItemCell61.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell61.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell61;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit10
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit10 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit10 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_20";
                    this.mUIRow5ColumnRosterCellEdit10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit10;
            }
        }
        
        public DXCell UIItemCell71
        {
            get
            {
                if ((this.mUIItemCell71 == null))
                {
                    this.mUIItemCell71 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell71.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_21";
                    this.mUIItemCell71.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell71.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell71;
            }
        }
        
        public DXCell UIItemCell81
        {
            get
            {
                if ((this.mUIItemCell81 == null))
                {
                    this.mUIItemCell81 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell81.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_25";
                    this.mUIItemCell81.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell81.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell81;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit11
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit11 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit11 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_21";
                    this.mUIRow5ColumnRosterCellEdit11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit11;
            }
        }
        
        public DXCell UIItemCell91
        {
            get
            {
                if ((this.mUIItemCell91 == null))
                {
                    this.mUIItemCell91 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell91.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_26";
                    this.mUIItemCell91.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell91.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell91;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit12
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit12 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit12 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_26";
                    this.mUIRow5ColumnRosterCellEdit12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit12.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit12;
            }
        }
        
        public DXCell UIItemCell101
        {
            get
            {
                if ((this.mUIItemCell101 == null))
                {
                    this.mUIItemCell101 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell101.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_27";
                    this.mUIItemCell101.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell101.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell101;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit13
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit13 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit13 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_27";
                    this.mUIRow5ColumnRosterCellEdit13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit13.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit13;
            }
        }
        
        public DXCell UIGV1Cell
        {
            get
            {
                if ((this.mUIGV1Cell == null))
                {
                    this.mUIGV1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_0";
                    this.mUIGV1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV1Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGV1Cell;
            }
        }
        
        public DXCell UIGV1Cell1
        {
            get
            {
                if ((this.mUIGV1Cell1 == null))
                {
                    this.mUIGV1Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV1Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_4";
                    this.mUIGV1Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV1Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGV1Cell1;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit15
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit15 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit15 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit15.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_0";
                    this.mUIRow5ColumnRosterCellEdit15.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit15.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit15;
            }
        }
        
        public DXCell UIDCell2
        {
            get
            {
                if ((this.mUIDCell2 == null))
                {
                    this.mUIDCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_7";
                    this.mUIDCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDCell2;
            }
        }
        
        public DXCell UIGV1Cell2
        {
            get
            {
                if ((this.mUIGV1Cell2 == null))
                {
                    this.mUIGV1Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV1Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]RosterCell_0";
                    this.mUIGV1Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV1Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGV1Cell2;
            }
        }
        
        public DXCell UIF1Cell1
        {
            get
            {
                if ((this.mUIF1Cell1 == null))
                {
                    this.mUIF1Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIF1Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]RosterCell_6";
                    this.mUIF1Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF1Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF1Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDCell;
        
        private DXCell mUIIsfjellBjørnCell;
        
        private DXCell mUIItemCell2;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit;
        
        private DXCell mUIItemCell3;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell4;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit2;
        
        private DXCell mUIItemCell5;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUIItemCell7;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell8;
        
        private DXCell mUIItemCell9;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit6;
        
        private DXCell mUIItemCell10;
        
        private DXCell mUIItemCell11;
        
        private DXTextEdit mUIRow4ColumnRosterCellEdit7;
        
        private DXCell mUIF1Cell;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit;
        
        private DXCell mUIDCell1;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell12;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell13;
        
        private DXCell mUIItemCell21;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell31;
        
        private DXCell mUIItemCell41;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit6;
        
        private DXCell mUIItemCell51;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit7;
        
        private DXCell mUIItemCell61;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit10;
        
        private DXCell mUIItemCell71;
        
        private DXCell mUIItemCell81;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit11;
        
        private DXCell mUIItemCell91;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit12;
        
        private DXCell mUIItemCell101;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit13;
        
        private DXCell mUIGV1Cell;
        
        private DXCell mUIGV1Cell1;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit15;
        
        private DXCell mUIDCell2;
        
        private DXCell mUIGV1Cell2;
        
        private DXCell mUIF1Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINykalenderplanWindow : DXWindow
    {
        
        public UINykalenderplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny kalenderplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient2 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient2(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient2 mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient2 : DXTestControl
    {
        
        public UIPnlMainClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom2 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom2(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom2 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom2 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup2 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup2(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup2 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup2 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup2(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup2 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        
        public UILayoutControlItem2LayoutControlItem2 UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem2(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem mUILcMainInfoLayoutControlItem;
        
        private UILayoutControlItem2LayoutControlItem2 mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainInfoLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainInfoClient : DXTestControl
    {
        
        public UIPnlMainInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtName";
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtNameEdit.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        
        public UIDeStartDateCustom UIDeStartDateCustom
        {
            get
            {
                if ((this.mUIDeStartDateCustom == null))
                {
                    this.mUIDeStartDateCustom = new UIDeStartDateCustom(this);
                }
                return this.mUIDeStartDateCustom;
            }
        }
        
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber0Edit.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        
        public UIDeEndDateCustom UIDeEndDateCustom
        {
            get
            {
                if ((this.mUIDeEndDateCustom == null))
                {
                    this.mUIDeEndDateCustom = new UIDeEndDateCustom(this);
                }
                return this.mUIDeEndDateCustom;
            }
        }
        
        public UIGcIncludeClient UIGcIncludeClient
        {
            get
            {
                if ((this.mUIGcIncludeClient == null))
                {
                    this.mUIGcIncludeClient = new UIGcIncludeClient(this);
                }
                return this.mUIGcIncludeClient;
            }
        }
        
        public DXCheckBox UIChkKladdCheckBox
        {
            get
            {
                if ((this.mUIChkKladdCheckBox == null))
                {
                    this.mUIChkKladdCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkKladd";
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkKladdCheckBox.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIChkKladdCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtNameEdit;
        
        private UIDeStartDateCustom mUIDeStartDateCustom;
        
        private DXTextEdit mUIENumber0Edit;
        
        private UIDeEndDateCustom mUIDeEndDateCustom;
        
        private UIGcIncludeClient mUIGcIncludeClient;
        
        private DXCheckBox mUIChkKladdCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeStartDateCustom : DXTestControl
    {
        
        public UIDeStartDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeEndDateCustom : DXTestControl
    {
        
        public UIDeEndDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deEndDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcIncludeClient : DXTestControl
    {
        
        public UIGcIncludeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcInclude";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkTasksCheckBox
        {
            get
            {
                if ((this.mUIChkTasksCheckBox == null))
                {
                    this.mUIChkTasksCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkTasksCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkTasks";
                    this.mUIChkTasksCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkTasksCheckBox.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIChkTasksCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkTasksCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIPnlGridSumClient2 UIPnlGridSumClient
        {
            get
            {
                if ((this.mUIPnlGridSumClient == null))
                {
                    this.mUIPnlGridSumClient = new UIPnlGridSumClient2(this);
                }
                return this.mUIPnlGridSumClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridSumClient2 mUIPnlGridSumClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGridSumClient2 : DXTestControl
    {
        
        public UIPnlGridSumClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGridSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlTable2 UIGsGridControlTable
        {
            get
            {
                if ((this.mUIGsGridControlTable == null))
                {
                    this.mUIGsGridControlTable = new UIGsGridControlTable2(this);
                }
                return this.mUIGsGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlTable2 mUIGsGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsGridControlTable2 : DXGrid
    {
        
        public UIGsGridControlTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]4[Column]clmInclude";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCell UIBelsethTrudeCell
        {
            get
            {
                if ((this.mUIBelsethTrudeCell == null))
                {
                    this.mUIBelsethTrudeCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBelsethTrudeCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]0[Column]clmName";
                    this.mUIBelsethTrudeCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBelsethTrudeCell.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIBelsethTrudeCell;
            }
        }
        
        public DXCell UIDvorakSamuelCell
        {
            get
            {
                if ((this.mUIDvorakSamuelCell == null))
                {
                    this.mUIDvorakSamuelCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDvorakSamuelCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]1[Column]clmName";
                    this.mUIDvorakSamuelCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDvorakSamuelCell.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIDvorakSamuelCell;
            }
        }
        
        public DXCell UIHolmèrHansCell
        {
            get
            {
                if ((this.mUIHolmèrHansCell == null))
                {
                    this.mUIHolmèrHansCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIHolmèrHansCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]2[Column]clmName";
                    this.mUIHolmèrHansCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIHolmèrHansCell.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIHolmèrHansCell;
            }
        }
        
        public DXCell UIHusebyKjellCell
        {
            get
            {
                if ((this.mUIHusebyKjellCell == null))
                {
                    this.mUIHusebyKjellCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIHusebyKjellCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]3[Column]clmName";
                    this.mUIHusebyKjellCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIHusebyKjellCell.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIHusebyKjellCell;
            }
        }
        
        public DXCell UIIsfjellBjørnCell
        {
            get
            {
                if ((this.mUIIsfjellBjørnCell == null))
                {
                    this.mUIIsfjellBjørnCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIsfjellBjørnCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]4[Column]clmName";
                    this.mUIIsfjellBjørnCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIsfjellBjørnCell.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIIsfjellBjørnCell;
            }
        }
        
        public DXCell UIIsfjellBjørnCell1
        {
            get
            {
                if ((this.mUIIsfjellBjørnCell1 == null))
                {
                    this.mUIIsfjellBjørnCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIsfjellBjørnCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]5[Column]clmName";
                    this.mUIIsfjellBjørnCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIsfjellBjørnCell1.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIIsfjellBjørnCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIkkevalgtCell;
        
        private DXCell mUIBelsethTrudeCell;
        
        private DXCell mUIDvorakSamuelCell;
        
        private DXCell mUIHolmèrHansCell;
        
        private DXCell mUIHusebyKjellCell;
        
        private DXCell mUIIsfjellBjørnCell;
        
        private DXCell mUIIsfjellBjørnCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT4001InformasjonWindow : DXWindow
    {
        
        public UIGT4001InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4001 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4001 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT4003InformasjonWindow : DXWindow
    {
        
        public UIGT4003InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4003 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeggtilansatteWindow : DXWindow
    {
        
        public UILeggtilansatteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom1 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom1(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom1 mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom1 : DXTestControl
    {
        
        public UIViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient3 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient3(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient3 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient3 : DXTestControl
    {
        
        public UIPcViewClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UISelectDepartmentEmplCustom UISelectDepartmentEmplCustom
        {
            get
            {
                if ((this.mUISelectDepartmentEmplCustom == null))
                {
                    this.mUISelectDepartmentEmplCustom = new UISelectDepartmentEmplCustom(this);
                }
                return this.mUISelectDepartmentEmplCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISelectDepartmentEmplCustom mUISelectDepartmentEmplCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISelectDepartmentEmplCustom : DXTestControl
    {
        
        public UISelectDepartmentEmplCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectDepartmentEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectDepartmentEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentContainerClient : DXTestControl
    {
        
        public UIPcContentContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentEmployeeTable UIGcDepartmentEmployeeTable
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeTable == null))
                {
                    this.mUIGcDepartmentEmployeeTable = new UIGcDepartmentEmployeeTable(this);
                }
                return this.mUIGcDepartmentEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentEmployeeTable mUIGcDepartmentEmployeeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDepartmentEmployeeTable : DXGrid
    {
        
        public UIGcDepartmentEmployeeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIAskVictoriaCell
        {
            get
            {
                if ((this.mUIAskVictoriaCell == null))
                {
                    this.mUIAskVictoriaCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAskVictoriaCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]1[Column]colE" +
                        "mployee";
                    this.mUIAskVictoriaCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAskVictoriaCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIAskVictoriaCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAskVictoriaCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINykalenderplanWindow1 : WinWindow
    {
        
        public UINykalenderplanWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Ny kalenderplan";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient3 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient3(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient3 mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient3 : DXTestControl
    {
        
        public UIPnlMainClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom3 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom3(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom3 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom3 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup3 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup3(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup3 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup3 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup3(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup3 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem1 UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem1(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem1 mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainInfoLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient1 UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient1(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient1 mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainInfoClient1 : DXTestControl
    {
        
        public UIPnlMainInfoClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public WinClient UIENumOfWeeksClient
        {
            get
            {
                if ((this.mUIENumOfWeeksClient == null))
                {
                    this.mUIENumOfWeeksClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIENumOfWeeksClient.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIENumOfWeeksClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIENumOfWeeksClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINybaseplanWindow : DXWindow
    {
        
        public UINybaseplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny baseplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient4 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient4(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient4 mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient4 : DXTestControl
    {
        
        public UIPnlMainClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom4 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom4(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom4 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom4 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup4 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup4(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup4 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup4 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup4 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup4(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup4 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup4 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem3 UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem3(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem3 mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem3 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UIPnlGridSumClient3 UIPnlGridSumClient
        {
            get
            {
                if ((this.mUIPnlGridSumClient == null))
                {
                    this.mUIPnlGridSumClient = new UIPnlGridSumClient3(this);
                }
                return this.mUIPnlGridSumClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridSumClient3 mUIPnlGridSumClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGridSumClient3 : DXTestControl
    {
        
        public UIPnlGridSumClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGridSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlTable3 UIGsGridControlTable
        {
            get
            {
                if ((this.mUIGsGridControlTable == null))
                {
                    this.mUIGsGridControlTable = new UIGsGridControlTable3(this);
                }
                return this.mUIGsGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlTable3 mUIGsGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsGridControlTable3 : DXGrid
    {
        
        public UIGsGridControlTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]2[Column]clmInclude";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add("Ny baseplan");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIkkevalgtCell;
        #endregion
    }
}
