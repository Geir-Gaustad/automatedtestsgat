// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _022_Ytelsestest_Kalenderplan
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddAshiftsToLundekvamWholePeriod
        /// </summary>
        public void AddAshiftsToLundekvamWholePeriod()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBarButtonItemLink7MenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UIBarButtonItemLink7MenuBaseButtonItem;
            DXCell uIItemCell8 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell8;
            DXMenuItem uIAftenvaktMenuItem = this.UIItemWindow11.UIPopupMenuBarControlMenu.UIAftenvaktMenuItem;
            DXMenuBaseButtonItem uIBarButtonItemLink0MenuBaseButtonItem = this.UIItemWindow11.UIPopupMenuBarControlMenu.UIAftenvaktMenuItem.UIBarButtonItemLink0MenuBaseButtonItem;
            DXButton uIJAButton = this.UIGT4003InformasjonWindow.UIJAButton;
            #endregion

            UIMapVS2017.RightClickLundekvamClausCell();

            // Click 'BarButtonItemLink[7]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink7MenuBaseButtonItem, new Point(71, 11));

            // Right-Click cell
            Mouse.Click(uIItemCell8, MouseButtons.Right, ModifierKeys.None, new Point(17, 10));

            // Click 'Aftenvakt' menu item
            Mouse.Click(uIAftenvaktMenuItem, new Point(127, 11));

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(75, 10));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddDshiftsToLundWeek1FromRightClickMenu
        /// </summary>
        public void AddDshiftsToLundWeek1FromRightClickMenu()
        {
            #region Variable Declarations
            DXCell uIItemCell4 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell4;
            DXMenuItem uIDagvaktMenuItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIDagvaktMenuItem;
            DXMenuBaseButtonItem uIBarButtonItemLink0MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIDagvaktMenuItem.UIBarButtonItemLink0MenuBaseButtonItem;
            DXCell uIItemCell11 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell11;
            DXCell uIF3Cell1 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIF3Cell1;
            DXCell uIItemCell21 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell21;
            DXCell uIItemCell31 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell31;
            #endregion

            // Right-Click cell
            Mouse.Click(uIItemCell4, MouseButtons.Right, ModifierKeys.None, new Point(18, 10));

            // Wait for 1 seconds for user delay between actions; Click 'Dagvakt' menu item
            Playback.Wait(500);
            Mouse.Click(uIDagvaktMenuItem, new Point(115, 10));

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(82, 12));

            // Right-Click cell
            Mouse.Click(uIItemCell11, MouseButtons.Right, ModifierKeys.None, new Point(18, 10));

            // Click 'Dagvakt' menu item
            Mouse.Click(uIDagvaktMenuItem, new Point(124, 11));

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(82, 15));

            // Right-Click 'F3' cell
            Mouse.Click(uIF3Cell1, MouseButtons.Right, ModifierKeys.None, new Point(16, 10));

            // Click 'Dagvakt' menu item
            Mouse.Click(uIDagvaktMenuItem, new Point(124, 15));

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(75, 10));

            // Right-Click cell
            Mouse.Click(uIItemCell21, MouseButtons.Right, ModifierKeys.None, new Point(18, 11));

            // Click 'Dagvakt' menu item
            Mouse.Click(uIDagvaktMenuItem, new Point(130, 16));

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(98, 16));

            // Right-Click cell
            Mouse.Click(uIItemCell31, MouseButtons.Right, ModifierKeys.None, new Point(18, 11));

            // Click 'Dagvakt' menu item
            Mouse.Click(uIDagvaktMenuItem, new Point(117, 11));

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(72, 14));
        }
        
        /// <summary>
        /// AddDshiftsToLundWeek2 - Use 'AddDshiftsToLundWeek2Params' to pass parameters into this method.
        /// </summary>
        public void AddDshiftsToLundWeek2()
        {
            #region Variable Declarations
            DXCell uIItemCell5 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell5;
            DXTextEdit uIRow83ColumnRosterCelEdit = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow83ColumnRosterCelEdit;
            DXGrid uIGcRosterPlanTable = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable;
            DXTextEdit uIRow83ColumnRosterCelEdit1 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow83ColumnRosterCelEdit1;
            DXTextEdit uIRow83ColumnRosterCelEdit2 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow83ColumnRosterCelEdit2;
            DXTextEdit uIRow83ColumnRosterCelEdit3 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow83ColumnRosterCelEdit3;
            DXTextEdit uIRow83ColumnRosterCelEdit4 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow83ColumnRosterCelEdit4;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell5, new Point(20, 10));

            // Type 'd' in '[Row]83[Column]RosterCell_7' text box
            //ValueAsString
            uIRow83ColumnRosterCelEdit.ValueAsString = this.AddDshiftsToLundWeek2Params.UIRow83ColumnRosterCelEditValueAsString;

            // Type '{Tab}' in '[Row]83[Column]RosterCell_7' text box
            Keyboard.SendKeys(uIRow83ColumnRosterCelEdit, this.AddDshiftsToLundWeek2Params.UIRow83ColumnRosterCelEditSendKeys, ModifierKeys.None);

            // Type 'd' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.AddDshiftsToLundWeek2Params.UIGcRosterPlanTableSendKeys, ModifierKeys.None);

            // Type '{Tab}' in '[Row]83[Column]RosterCell_8' text box
            Keyboard.SendKeys(uIRow83ColumnRosterCelEdit1, this.AddDshiftsToLundWeek2Params.UIRow83ColumnRosterCelEdit1SendKeys, ModifierKeys.None);

            // Type 'd' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.AddDshiftsToLundWeek2Params.UIGcRosterPlanTableSendKeys1, ModifierKeys.None);

            // Type '{Tab}' in '[Row]83[Column]RosterCell_9' text box
            Keyboard.SendKeys(uIRow83ColumnRosterCelEdit2, this.AddDshiftsToLundWeek2Params.UIRow83ColumnRosterCelEdit2SendKeys, ModifierKeys.None);

            // Type 'd' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.AddDshiftsToLundWeek2Params.UIGcRosterPlanTableSendKeys2, ModifierKeys.None);

            // Type '{Tab}' in '[Row]83[Column]RosterCell_10' text box
            Keyboard.SendKeys(uIRow83ColumnRosterCelEdit3, this.AddDshiftsToLundWeek2Params.UIRow83ColumnRosterCelEdit3SendKeys, ModifierKeys.None);

            // Type 'd' in 'gcRosterPlan' table
            Keyboard.SendKeys(uIGcRosterPlanTable, this.AddDshiftsToLundWeek2Params.UIGcRosterPlanTableSendKeys3, ModifierKeys.None);

            // Type '{Tab}' in '[Row]83[Column]RosterCell_11' text box
            Keyboard.SendKeys(uIRow83ColumnRosterCelEdit4, this.AddDshiftsToLundWeek2Params.UIRow83ColumnRosterCelEdit4SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// AddDshiftsToLundWeek3
        /// </summary>
        public void AddDshiftsToLundWeek3()
        {
            #region Variable Declarations
            DXCell uIItemCell6 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell6;
            DXCell uIItemCell12 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell12;
            DXMenuItem uIDagvaktMenuItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIDagvaktMenuItem;
            DXMenuBaseButtonItem uIBarButtonItemLink0MenuBaseButtonItem = this.UIItemWindow1.UIPopupMenuBarControlMenu.UIDagvaktMenuItem.UIBarButtonItemLink0MenuBaseButtonItem;
            DXButton uIJAButton = this.UIGT4003InformasjonWindow.UIJAButton;
            #endregion

            // Move cell to cell
            uIItemCell12.EnsureClickable(new Point(17, 9));
            Mouse.StartDragging(uIItemCell6, new Point(18, 10));
            Mouse.StopDragging(uIItemCell12, new Point(17, 9));

            // Right-Click cell
            Mouse.Click(uIItemCell12, MouseButtons.Right, ModifierKeys.None, new Point(17, 9));

            // Click 'Dagvakt' menu item
            Mouse.Click(uIDagvaktMenuItem, new Point(127, 11));

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(84, 12));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddDshiftsToLundWeek4
        /// </summary>
        public void AddDshiftsToLundWeek4()
        {
            #region Variable Declarations
            DXCell uIItemCell6 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell6;
            DXCell uIItemCell12 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell12;
            DXMenuBaseButtonItem uIBarButtonItemLink7MenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UIBarButtonItemLink7MenuBaseButtonItem;
            DXCell uIItemCell7 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell7;
            DXMenuBaseButtonItem uIBarButtonItemLink0MenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UIBarButtonItemLink0MenuBaseButtonItem;
            #endregion

            // Move cell to cell
            uIItemCell12.EnsureClickable(new Point(20, 9));
            Mouse.StartDragging(uIItemCell6, new Point(18, 9));
            Mouse.StopDragging(uIItemCell12, new Point(20, 9));

            // Right-Click cell
            Mouse.Click(uIItemCell12, MouseButtons.Right, ModifierKeys.None, new Point(20, 9));

            // Click 'BarButtonItemLink[7]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink7MenuBaseButtonItem, new Point(106, 11));

            // Click cell
            Mouse.Click(uIItemCell7, new Point(19, 11));

            // Right-Click cell
            Mouse.Click(uIItemCell7, MouseButtons.Right, ModifierKeys.None, new Point(19, 11));

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(115, 9));
        }
        
        /// <summary>
        /// CheckAshiftExist - Use 'CheckAshiftExistExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAshiftExist(bool afterEdit = false)
        {
            #region Variable Declarations
            DXCell uIItemCell8 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell8;
            string planShiftValue = "NewPlanShift (A)";

            if(afterEdit)
                planShiftValue = "PlanShift (A)";
            #endregion


            // Verify that the 'ValueAsString' property of cell equals 'A'
            Assert.AreEqual(planShiftValue, uIItemCell8.ValueAsString, "Cellen viser ikke A vakt");
        }
        
        /// <summary>
        /// DeleteLundekvamWholePeriod
        /// </summary>
        public void DeleteLundekvamWholePeriod()
        {
            #region Variable Declarations
            DXCell uILundekvamClausCell = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UILundekvamClausCell;
            DXMenuBaseButtonItem uIBarButtonItemLink7MenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UIBarButtonItemLink7MenuBaseButtonItem;
            DXCell uIItemCell8 = this.UIArbeidsplanYTELSEKalWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell8;
            DXMenuBaseButtonItem uIBarButtonItemLink3MenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UIBarButtonItemLink3MenuBaseButtonItem;
            DXButton uIJAButton = this.UIGT4001InformasjonWindow.UIJAButton;
            #endregion

            UIMapVS2017.RightClickLundekvamClausCell();

            // Click 'BarButtonItemLink[7]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink7MenuBaseButtonItem, new Point(62, 10));

            Keyboard.SendKeys("{Delete}");

            //// Right-Click cell
            //Mouse.Click(uIItemCell8, MouseButtons.Right, ModifierKeys.None, new Point(23, 7));

            //// Click 'BarButtonItemLink[3]' MenuBaseButtonItem
            //Mouse.Click(uIBarButtonItemLink3MenuBaseButtonItem, new Point(88, 11));

            // Click '&Ja' button
            Mouse.Click(uIJAButton);
        }
        
        #region Properties
        public virtual AddDshiftsToLundWeek2Params AddDshiftsToLundWeek2Params
        {
            get
            {
                if ((this.mAddDshiftsToLundWeek2Params == null))
                {
                    this.mAddDshiftsToLundWeek2Params = new AddDshiftsToLundWeek2Params();
                }
                return this.mAddDshiftsToLundWeek2Params;
            }
        }
        public UIRunningapplicationsWindow UIRunningapplicationsWindow
        {
            get
            {
                if ((this.mUIRunningapplicationsWindow == null))
                {
                    this.mUIRunningapplicationsWindow = new UIRunningapplicationsWindow();
                }
                return this.mUIRunningapplicationsWindow;
            }
        }
        
        public UIArbeidsplanYTELSEKalWindow UIArbeidsplanYTELSEKalWindow
        {
            get
            {
                if ((this.mUIArbeidsplanYTELSEKalWindow == null))
                {
                    this.mUIArbeidsplanYTELSEKalWindow = new UIArbeidsplanYTELSEKalWindow();
                }
                return this.mUIArbeidsplanYTELSEKalWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIGT4003InformasjonWindow UIGT4003InformasjonWindow
        {
            get
            {
                if ((this.mUIGT4003InformasjonWindow == null))
                {
                    this.mUIGT4003InformasjonWindow = new UIGT4003InformasjonWindow();
                }
                return this.mUIGT4003InformasjonWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow11 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow11();
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIGT4001InformasjonWindow UIGT4001InformasjonWindow
        {
            get
            {
                if ((this.mUIGT4001InformasjonWindow == null))
                {
                    this.mUIGT4001InformasjonWindow = new UIGT4001InformasjonWindow();
                }
                return this.mUIGT4001InformasjonWindow;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddDshiftsToLundWeek2Params mAddDshiftsToLundWeek2Params;
                
        private UIRunningapplicationsWindow mUIRunningapplicationsWindow;
        
        private UIArbeidsplanYTELSEKalWindow mUIArbeidsplanYTELSEKalWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIGT4003InformasjonWindow mUIGT4003InformasjonWindow;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow11 mUIItemWindow11;
        
        private UIGT4001InformasjonWindow mUIGT4001InformasjonWindow;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddDshiftsToLundWeek2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AddDshiftsToLundWeek2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'd' in '[Row]83[Column]RosterCell_7' text box
        /// </summary>
        public string UIRow83ColumnRosterCelEditValueAsString = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]83[Column]RosterCell_7' text box
        /// </summary>
        public string UIRow83ColumnRosterCelEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'd' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]83[Column]RosterCell_8' text box
        /// </summary>
        public string UIRow83ColumnRosterCelEdit1SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'd' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys1 = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]83[Column]RosterCell_9' text box
        /// </summary>
        public string UIRow83ColumnRosterCelEdit2SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'd' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys2 = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]83[Column]RosterCell_10' text box
        /// </summary>
        public string UIRow83ColumnRosterCelEdit3SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'd' in 'gcRosterPlan' table
        /// </summary>
        public string UIGcRosterPlanTableSendKeys3 = "d";
        
        /// <summary>
        /// Type '{Tab}' in '[Row]83[Column]RosterCell_11' text box
        /// </summary>
        public string UIRow83ColumnRosterCelEdit4SendKeys = "{Tab}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRunningapplicationsWindow : WinWindow
    {
        
        public UIRunningapplicationsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Running applications";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSTaskSwWClass";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public UIRunningapplicationsToolBar UIRunningapplicationsToolBar
        {
            get
            {
                if ((this.mUIRunningapplicationsToolBar == null))
                {
                    this.mUIRunningapplicationsToolBar = new UIRunningapplicationsToolBar(this);
                }
                return this.mUIRunningapplicationsToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRunningapplicationsToolBar mUIRunningapplicationsToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRunningapplicationsToolBar : WinToolBar
    {
        
        public UIRunningapplicationsToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Running applications";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public WinButton UIInternetInformationSButton
        {
            get
            {
                if ((this.mUIInternetInformationSButton == null))
                {
                    this.mUIInternetInformationSButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIInternetInformationSButton.SearchProperties[WinButton.PropertyNames.Name] = "Internet Information Services (IIS) Manager";
                    this.mUIInternetInformationSButton.WindowTitles.Add("Running applications");
                    #endregion
                }
                return this.mUIInternetInformationSButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIInternetInformationSButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanYTELSEKalWindow : DXWindow
    {
        
        public UIArbeidsplanYTELSEKalWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public DXCell UIDCell
        {
            get
            {
                if ((this.mUIDCell == null))
                {
                    this.mUIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_0";
                    this.mUIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIDCell;
            }
        }
        
        public DXCell UIDCell1
        {
            get
            {
                if ((this.mUIDCell1 == null))
                {
                    this.mUIDCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_1";
                    this.mUIDCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDCell1.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIDCell1;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_3";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_4";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_5";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_6";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIF3Cell
        {
            get
            {
                if ((this.mUIF3Cell == null))
                {
                    this.mUIF3Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_2";
                    this.mUIF3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIF3Cell;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_0";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_1";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXCell UIF3Cell1
        {
            get
            {
                if ((this.mUIF3Cell1 == null))
                {
                    this.mUIF3Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_2";
                    this.mUIF3Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell1.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIF3Cell1;
            }
        }
        
        public DXCell UIItemCell21
        {
            get
            {
                if ((this.mUIItemCell21 == null))
                {
                    this.mUIItemCell21 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_3";
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell21.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell21;
            }
        }
        
        public DXCell UIItemCell31
        {
            get
            {
                if ((this.mUIItemCell31 == null))
                {
                    this.mUIItemCell31 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_4";
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell31.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell31;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_7";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXTextEdit UIRow83ColumnRosterCelEdit
        {
            get
            {
                if ((this.mUIRow83ColumnRosterCelEdit == null))
                {
                    this.mUIRow83ColumnRosterCelEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow83ColumnRosterCelEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]83[Column]RosterCell_7";
                    this.mUIRow83ColumnRosterCelEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow83ColumnRosterCelEdit.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow83ColumnRosterCelEdit;
            }
        }
        
        public DXTextEdit UIRow83ColumnRosterCelEdit1
        {
            get
            {
                if ((this.mUIRow83ColumnRosterCelEdit1 == null))
                {
                    this.mUIRow83ColumnRosterCelEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow83ColumnRosterCelEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]83[Column]RosterCell_8";
                    this.mUIRow83ColumnRosterCelEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow83ColumnRosterCelEdit1.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow83ColumnRosterCelEdit1;
            }
        }
        
        public DXTextEdit UIRow83ColumnRosterCelEdit2
        {
            get
            {
                if ((this.mUIRow83ColumnRosterCelEdit2 == null))
                {
                    this.mUIRow83ColumnRosterCelEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow83ColumnRosterCelEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]83[Column]RosterCell_9";
                    this.mUIRow83ColumnRosterCelEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow83ColumnRosterCelEdit2.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow83ColumnRosterCelEdit2;
            }
        }
        
        public DXTextEdit UIRow83ColumnRosterCelEdit3
        {
            get
            {
                if ((this.mUIRow83ColumnRosterCelEdit3 == null))
                {
                    this.mUIRow83ColumnRosterCelEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow83ColumnRosterCelEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]83[Column]RosterCell_10";
                    this.mUIRow83ColumnRosterCelEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow83ColumnRosterCelEdit3.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow83ColumnRosterCelEdit3;
            }
        }
        
        public DXTextEdit UIRow83ColumnRosterCelEdit4
        {
            get
            {
                if ((this.mUIRow83ColumnRosterCelEdit4 == null))
                {
                    this.mUIRow83ColumnRosterCelEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow83ColumnRosterCelEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]83[Column]RosterCell_11";
                    this.mUIRow83ColumnRosterCelEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow83ColumnRosterCelEdit4.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIRow83ColumnRosterCelEdit4;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_14";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_18";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]83[Column]RosterCell_21";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXCell UILundekvamClausCell
        {
            get
            {
                if ((this.mUILundekvamClausCell == null))
                {
                    this.mUILundekvamClausCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILundekvamClausCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]84[Column]Col_EmployeeName";
                    this.mUILundekvamClausCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILundekvamClausCell.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUILundekvamClausCell;
            }
        }
        
        public DXCell UIItemCell8
        {
            get
            {
                if ((this.mUIItemCell8 == null))
                {
                    this.mUIItemCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]84[Column]RosterCell_0";
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell8.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIItemCell8;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDCell;
        
        private DXCell mUIDCell1;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIF3Cell;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItemCell11;
        
        private DXCell mUIF3Cell1;
        
        private DXCell mUIItemCell21;
        
        private DXCell mUIItemCell31;
        
        private DXCell mUIItemCell5;
        
        private DXTextEdit mUIRow83ColumnRosterCelEdit;
        
        private DXTextEdit mUIRow83ColumnRosterCelEdit1;
        
        private DXTextEdit mUIRow83ColumnRosterCelEdit2;
        
        private DXTextEdit mUIRow83ColumnRosterCelEdit3;
        
        private DXTextEdit mUIRow83ColumnRosterCelEdit4;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUIItemCell12;
        
        private DXCell mUIItemCell7;
        
        private DXCell mUILundekvamClausCell;
        
        private DXCell mUIItemCell8;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UIDagvaktMenuItem UIDagvaktMenuItem
        {
            get
            {
                if ((this.mUIDagvaktMenuItem == null))
                {
                    this.mUIDagvaktMenuItem = new UIDagvaktMenuItem(this);
                }
                return this.mUIDagvaktMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDagvaktMenuItem mUIDagvaktMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDagvaktMenuItem : DXMenuItem
    {
        
        public UIDagvaktMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink0MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink0MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink0MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink0MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu1(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu1 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UIDagvaktMenuItem1 UIDagvaktMenuItem
        {
            get
            {
                if ((this.mUIDagvaktMenuItem == null))
                {
                    this.mUIDagvaktMenuItem = new UIDagvaktMenuItem1(this);
                }
                return this.mUIDagvaktMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDagvaktMenuItem1 mUIDagvaktMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDagvaktMenuItem1 : DXMenuItem
    {
        
        public UIDagvaktMenuItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink0MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink0MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink0MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink0MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGT4003InformasjonWindow : DXWindow
    {
        
        public UIGT4003InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4003 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu2 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu2(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu2 mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu2 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink7MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink7MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink7MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink7MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[7]";
                    this.mUIBarButtonItemLink7MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink7MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBarButtonItemLink0MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink0MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink0MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBarButtonItemLink3MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink3MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink3MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink3MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink7MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBarButtonItemLink0MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBarButtonItemLink3MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu3 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu3(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu3 mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu3 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UIAftenvaktMenuItem UIAftenvaktMenuItem
        {
            get
            {
                if ((this.mUIAftenvaktMenuItem == null))
                {
                    this.mUIAftenvaktMenuItem = new UIAftenvaktMenuItem(this);
                }
                return this.mUIAftenvaktMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIAftenvaktMenuItem mUIAftenvaktMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAftenvaktMenuItem : DXMenuItem
    {
        
        public UIAftenvaktMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink0MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink0MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink0MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink0MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGT4001InformasjonWindow : DXWindow
    {
        
        public UIGT4001InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4001 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4001 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient1 UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient1(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient1 mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient1 : DXTestControl
    {
        
        public UIPnlRosterPlanClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable1 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable1(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable1 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcRosterPlanTable1 : DXGrid
    {
        
        public UIGcRosterPlanTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]RosterCell_3";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIACell;
        #endregion
    }
}
