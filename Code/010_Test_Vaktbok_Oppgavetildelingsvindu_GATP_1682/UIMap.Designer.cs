// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _010_Test_Vaktbok_Oppgavetildelingsvindu_GATP_1682
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddKontStep_21
        /// </summary>
        public void AddKontStep_21()
        {
            #region Variable Declarations
            DXCell uIItem4500OPPGAVERCell = this.UIOppgavetildelingWindow1.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient.UIRoleAccountingViewCustom.UILeCostPlaceLookUpEdit.UIPopupSearchLookUpEdiWindow.UISearchEditLookUpPopuCustom.UILCCustom.UILcMainLayoutGroup.UILciGridLayoutControlItem.UIGridControlTable.UIItem4500OPPGAVERCell;
            DXCell uIP3Prosjekt3Cell = this.UIOppgavetildelingWindow1.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient.UIRoleAccountingViewCustom.UILeProjectLookUpEdit.UIPopupSearchLookUpEdiWindow.UISearchEditLookUpPopuCustom.UILCCustom.UILcMainLayoutGroup.UILciGridLayoutControlItem.UIGridControlTable.UIP3Prosjekt3Cell;
            #endregion

            // Click '4500 - OPPGAVER' cell
            Mouse.Click(uIItem4500OPPGAVERCell, new Point(58, 5));

            // Click 'P3 - Prosjekt 3' cell
            Mouse.Click(uIP3Prosjekt3Cell, new Point(68, 7));
        }
        
        /// <summary>
        /// AddRolePatternToAhlgren
        /// </summary>
        public void AddRolePatternToAhlgren()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow7.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            DXCell uIDAGTIDCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodePatternsDockPanel.UIDockPanel3_ContainerCustom.UIRoleCodePatternListVCustom.UIGcRoleCodePatternsTable.UIDAGTIDCell;
            #endregion

            // Click '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell
            Mouse.Click(uID08001600KOMPKREVDEKCell, new Point(130, 7));

            // Double-Click 'DAGTID' cell
            Mouse.DoubleClick(uIDAGTIDCell, new Point(29, 9));
        }
        
        /// <summary>
        /// AddRolePatternToAnderson
        /// </summary>
        public void AddRolePatternToAnderson()
        {
            #region Variable Declarations
            DXCell uID08001600Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell1;
            DXCell uIOVER4520Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodePatternsDockPanel.UIDockPanel3_ContainerCustom.UIRoleCodePatternListVCustom.UIGcRoleCodePatternsTable.UIOVER4520Cell;
            #endregion

            // Click '( )D (08:00 - 16:00)' cell
            Mouse.Click(uID08001600Cell1, new Point(71, 7));

            // Double-Click 'OVER 4520' cell
            Mouse.DoubleClick(uIOVER4520Cell, new Point(47, 11));
        }
        
        /// <summary>
        /// AddRolePatternToAndersonStep27
        /// </summary>
        public void AddRolePatternToAndersonStep27()
        {
            #region Variable Declarations
            DXCell uIOVER4520Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodePatternsDockPanel.UIDockPanel3_ContainerCustom.UIRoleCodePatternListVCustom.UIGcRoleCodePatternsTable.UIOVER4520Cell;
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow7.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            #endregion

            // Move 'OVER 4520' cell to '( )D (08:00 - 16:00)' cell
            uID08001600Cell.EnsureClickable(new Point(42, 7));
            Mouse.StartDragging(uIOVER4520Cell, new Point(55, 8));
            Mouse.StopDragging(uID08001600Cell, new Point(42, 7));
        }
        
        /// <summary>
        /// AddRoleToAhlgrenStep_4
        /// </summary>
        public void AddRoleToAhlgrenStep_4()
        {
            #region Variable Declarations
            DXCell uIKOMPKREVDEKSKLKANIKKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIKOMPKREVDEKSKLKANIKKCell;
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Move 'KOMP KREVD/EKSKL KAN IKKE' cell to '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell
            uID08001600KOMPKREVDEKCell.EnsureClickable(new Point(89, 8));
            Mouse.StartDragging(uIKOMPKREVDEKSKLKANIKKCell, new Point(77, 7));
            Mouse.StopDragging(uID08001600KOMPKREVDEKCell, new Point(89, 8));
        }
        
        /// <summary>
        /// AddRoleToAhlgrenStep_7
        /// </summary>
        public void AddRoleToAhlgrenStep_7()
        {
            #region Variable Declarations
            DXCell uIItem0816DagtidCell = this.UIVelgoppgaverWindow.UIGcRolesTable.UIItem0816DagtidCell;
            DXButton uIOKButton = this.UIVelgoppgaverWindow.UIOKButton;
            #endregion

            // Click '08-16 - Dagtid' cell
            Mouse.Click(uIItem0816DagtidCell, new Point(57, 9));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddRoleToDroppStep_16
        /// </summary>
        public void AddRoleToDroppStep_16()
        {
            #region Variable Declarations
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            DXCell uIOVERCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIOVERCell;
            #endregion

            // Click '( )D (08:00 - 16:00)' cell
            Mouse.Click(uID08001600Cell, new Point(122, 8));

            // Double-Click 'OVER' cell
            Mouse.DoubleClick(uIOVERCell, new Point(48, 7));
        }
        
        /// <summary>
        /// AddRoleToDroppStep_18
        /// </summary>
        public void AddRoleToDroppStep_18()
        {
            #region Variable Declarations
            DXCell uIKOMPØNSKETEKSKLBØRIKCell = this.UIVelgoppgaverWindow.UIGcRolesTable.UIKOMPØNSKETEKSKLBØRIKCell;
            DXButton uIOKButton = this.UIVelgoppgaverWindow.UIOKButton;
            #endregion

            // Click 'KOMP ØNSKET/EKSKL BØR IKKE - Kompetanse ønsket + Eksklusiv bør ikke' cell
            Mouse.Click(uIKOMPØNSKETEKSKLBØRIKCell, new Point(162, 8));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddRoleToDroppStep_19
        /// </summary>
        public void AddRoleToDroppStep_19()
        {
            #region Variable Declarations
            DXCell uIKOMPØNSKETEKSKLBØRIKCell = this.UIVelgoppgaverWindow.UIGcRolesTable.UIKOMPØNSKETEKSKLBØRIKCell;
            DXButton uIOKButton = this.UIVelgoppgaverWindow.UIOKButton;
            #endregion

            // Click 'KOMP ØNSKET/EKSKL BØR IKKE - Kompetanse ønsket + Eksklusiv bør ikke' cell
            Mouse.Click(uIKOMPØNSKETEKSKLBØRIKCell, new Point(47, 14));

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// AddRoleToDroppStep_22
        /// </summary>
        public void AddRoleToDroppStep_22()
        {
            #region Variable Declarations
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            DXCell uIItem0810Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIItem0810Cell;
            #endregion

            // Click '( )D (08:00 - 16:00)' cell
            Mouse.Click(uID08001600Cell, new Point(122, 8));

            // Double-Click '08-10' cell
            Mouse.DoubleClick(uIItem0810Cell, new Point(47, 6));
        }
        
        /// <summary>
        /// AssignRoleToCockerStep_42
        /// </summary>
        public void AssignRoleToCockerStep_42()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UIGcAssignmentPeriodsTable.UIItemCell;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(19, 9));
        }
        
        /// <summary>
        /// CheckDispGridLocation - Use 'CheckDispGridLocationExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDispGridLocation()
        {
            #region Variable Declarations
            DXDockPanel uIDpDisponibleDockPanel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel;
            #endregion

            // Verify that the 'Name' property of 'dpDisponible' DockPanel equals 'dpDisponible'
            Assert.AreEqual(this.CheckDispGridLocationExpectedValues.UIDpDisponibleDockPanelName, uIDpDisponibleDockPanel.Name);

            // Verify that the 'Index' property of 'dpDisponible' DockPanel equals '2'
            Assert.AreEqual(this.CheckDispGridLocationExpectedValues.UIDpDisponibleDockPanelIndex, uIDpDisponibleDockPanel.Index);

            // Verify that the 'Location' property of 'dpDisponible' DockPanel equals '0, 464'
            Assert.AreEqual(this.CheckDispGridLocationExpectedValues.UIDpDisponibleDockPanelLocation, uIDpDisponibleDockPanel.GetProperty("Location").ToString());
        }
        
        /// <summary>
        /// CheckPatternStep33 - Use 'CheckPatternStep33ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPatternStep33()
        {
            #region Variable Declarations
            DXCell uID0800160008160800160Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID0800160008160800160Cell;
            DXCell uID0800160008160800160Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID0800160008160800160Cell1;
            DXCell uID0800160008160800160Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID0800160008160800160Cell2;
            DXCell uID0800160008160800160Cell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID0800160008160800160Cell3;
            DXCell uID0800160008160800160Cell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID0800160008160800160Cell4;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckPatternStep33ExpectedValues.UID0800160008160800160CellText, uID0800160008160800160Cell.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckPatternStep33ExpectedValues.UID0800160008160800160Cell1Text, uID0800160008160800160Cell1.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckPatternStep33ExpectedValues.UID0800160008160800160Cell2Text, uID0800160008160800160Cell2.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckPatternStep33ExpectedValues.UID0800160008160800160Cell3Text, uID0800160008160800160Cell3.Text);

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
            //( )08-16 (08:00 - 16:00)
            //( )10-12 (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckPatternStep33ExpectedValues.UID0800160008160800160Cell4Text, uID0800160008160800160Cell4.Text);
        }
        
        /// <summary>
        /// CheckRoleWarningStep_19 - Use 'CheckRoleWarningStep_19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleWarningStep_19()
        {
            #region Variable Declarations
            WinToolTip uIAnsattmanglerfølgendToolTip = this.UIItemWindow3.UIAnsattmanglerfølgendToolTip;
            #endregion

            // Verify that the 'Name' property of 'Ansatt mangler følgende ønsket kompetanse for å de...' tooltip equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG. Ikke lurt å ha flere oppgaver sammen med denne!!. '
            Assert.AreEqual(this.CheckRoleWarningStep_19ExpectedValues.UIAnsattmanglerfølgendToolTipName, uIAnsattmanglerfølgendToolTip.Name);
        }
        
        /// <summary>
        /// CheckSaveDeactivatedStep_9 - Use 'CheckSaveDeactivatedStep_9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSaveDeactivatedStep_9()
        {
            #region Variable Declarations
            DXRibbonButtonItem uILagreRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UILagreRibbonBaseButtonItem;
            #endregion

            // Verify that the 'Enabled' property of 'Lagre' RibbonBaseButtonItem equals 'False'
            Assert.AreEqual(this.CheckSaveDeactivatedStep_9ExpectedValues.UILagreRibbonBaseButtonItemEnabled, uILagreRibbonBaseButtonItem.Enabled, "Savebutton not deactivated!");
        }
        
        /// <summary>
        /// CheckShiftbookDateStep_2 - Use 'CheckShiftbookDateStep_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckShiftbookDateStep_2()
        {
            #region Variable Declarations
            DXMenuItem uIMandag010120241NyttåBarItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIMandag010120241NyttåBarItem;
            DXCell uIAhlgrenKlasCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIAhlgrenKlasCell;
            #endregion

            // Verify that the 'Text' property of 'Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1' BarItem equals 'Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1'
            Assert.AreEqual(this.CheckShiftbookDateStep_2ExpectedValues.UIMandag010120241NyttåBarItemText, uIMandag010120241NyttåBarItem.Text, "Wrong Date");

            // Verify that the 'Text' property of 'Ahlgren, Klas' cell equals 'Ahlgren, Klas'
            Assert.AreEqual(this.CheckShiftbookDateStep_2ExpectedValues.UIAhlgrenKlasCellText, uIAhlgrenKlasCell.Text);
        }
        
        /// <summary>
        /// CheckStep_10 - Use 'CheckStep_10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_10()
        {
            #region Variable Declarations
            DXWindow uIEndringenekanikkelagWindow = this.UIItemWindow2.UIEndringenekanikkelagWindow;
            #endregion

            // Verify that the 'Text' property of 'Endringene kan ikke lagres' window equals 'Det finnes nye oppgavetildelinger som ikke er gyldig, disse må rettes.'
            Assert.AreEqual(this.CheckStep_10ExpectedValues.UIEndringenekanikkelagWindowText, uIEndringenekanikkelagWindow.Text, "Error dialog not showing");
        }
        
        /// <summary>
        /// CheckStep_11 - Use 'CheckStep_11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_11()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_11ExpectedValues.UID08001600KOMPKREVDEKCellText, uID08001600KOMPKREVDEKCell.Text);
        }
        
        /// <summary>
        /// CheckStep_12 - Use 'CheckStep_12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_12()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )(Critical:Oppgave 08-16 overlapper med allerede tildelt eksklusiv oppgave KOMP KREVD/EKSKL KAN IKKE)08-16 (08:00 - 16:00)
            //( )(Critical:Ingen andre oppgaver samtidig med denne!!)KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_12ExpectedValues.UID08001600KOMPKREVDEKCellText, uID08001600KOMPKREVDEKCell.Text);
        }
        
        /// <summary>
        /// CheckStep_13 - Use 'CheckStep_13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_13()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //(x)KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_13ExpectedValues.UID08001600KOMPKREVDEKCellText, uID08001600KOMPKREVDEKCell.Text);
        }
        
        /// <summary>
        /// CheckStep_14 - Use 'CheckStep_14ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_14()
        {
            #region Variable Declarations
            DXCell uIItem8080Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem8080Cell;
            #endregion

            // Verify that the 'Text' property of '8,0 / 8,0' cell equals '8,0 / 8,0'
            Assert.AreEqual(this.CheckStep_14ExpectedValues.UIItem8080CellText, uIItem8080Cell.Text);
        }
        
        /// <summary>
        /// CheckStep_15 - Use 'CheckStep_15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_15()
        {
            #region Variable Declarations
            DXCell uIItemCell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell6;
            #endregion

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckStep_15ExpectedValues.UIItemCell6Text, uIItemCell6.Text);
        }
        
        /// <summary>
        /// CheckStep_16 - Use 'CheckStep_16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_16()
        {
            #region Variable Declarations
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )OVER (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_16ExpectedValues.UID08001600CellText, uID08001600Cell.Text);
        }
        
        /// <summary>
        /// CheckStep_17 - Use 'CheckStep_17ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_17()
        {
            #region Variable Declarations
            DXCell uIItem4040Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell;
            #endregion

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_17ExpectedValues.UIItem4040CellText, uIItem4040Cell.Text);
        }
        
        /// <summary>
        /// CheckStep_22 - Use 'CheckStep_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_22()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow2.UISchedulerControl1List4.UIAppointmentCell;
            #endregion

            // Verify that the 'Name' property of 'Appointment' cell equals 'Dagvisning, 4 total events 8:00 a.m.  to 10:00 a.m.  onsdag, januar 3, 2024, Subject 08-10, Time Ledig, 2 of 4'
            Assert.AreEqual(this.CheckStep_22ExpectedValues.UIAppointmentCellName, uIAppointmentCell.Name);
        }
        
        /// <summary>
        /// CheckStep_23 - Use 'CheckStep_23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_23()
        {
            #region Variable Declarations
            DXLookUpEdit uILeCostPlaceLookUpEdit = this.UIOppgavetildelingWindow1.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient.UIRoleAccountingViewCustom.UILeCostPlaceLookUpEdit;
            DXLookUpEdit uILeProjectLookUpEdit = this.UIOppgavetildelingWindow1.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient.UIRoleAccountingViewCustom.UILeProjectLookUpEdit;
            #endregion

            // Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '4500 - OPPGAVER'
            Assert.AreEqual(this.CheckStep_23ExpectedValues.UILeCostPlaceLookUpEditText, uILeCostPlaceLookUpEdit.Text, "Feil kostnadssted");

            // Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P3 - Prosjekt 3'
            Assert.AreEqual(this.CheckStep_23ExpectedValues.UILeProjectLookUpEditText, uILeProjectLookUpEdit.Text, "Feil prosjekt");
        }
        
        /// <summary>
        /// CheckStep_24 - Use 'CheckStep_24ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_24()
        {
            #region Variable Declarations
            DXCell uIItem4040Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell;
            #endregion

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '2,0 / 4,0'
            Assert.AreEqual(this.CheckStep_24ExpectedValues.UIItem4040CellText, uIItem4040Cell.Text);
        }
        
        /// <summary>
        /// CheckStep_25 - Use 'CheckStep_25ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_25()
        {
            #region Variable Declarations
            DXTestControl uIXtraTabControlHeaderTabPage = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UIXtraTabControlHeaderTabPage;
            DXTestControl uIXtraTabControlHeaderTabPage1 = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UIXtraTabControlHeaderTabPage1;
            #endregion

            // Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Legges til (5)'
            Assert.AreEqual(this.CheckStep_25ExpectedValues.UIXtraTabControlHeaderTabPageText, uIXtraTabControlHeaderTabPage.Text);

            // Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Ignorerte (0)'
            Assert.AreEqual(this.CheckStep_25ExpectedValues.UIXtraTabControlHeaderTabPage1Text, uIXtraTabControlHeaderTabPage1.Text);
        }
        
        /// <summary>
        /// CheckStep_27 - Use 'CheckStep_27ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_27()
        {
            #region Variable Declarations
            DXDateTimePicker uIDeFromDateDateTimeEdit = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UIPnlTopClient.UIPnlTimePeriodClient.UIViewHost1Custom.UIPcViewClient.UIDatePeriodSelectorViCustom.UIPanelControl1Client.UIDeFromDateDateTimeEdit;
            DXDateTimePicker uIDeToDateDateTimeEdit = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UIPnlTopClient.UIPnlTimePeriodClient.UIViewHost1Custom.UIPcViewClient.UIDatePeriodSelectorViCustom.UIPanelControl1Client.UIDeToDateDateTimeEdit;
            DXTestControl uIXtraTabControlHeaderTabPage = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UIXtraTabControlHeaderTabPage;
            #endregion

            // Verify that the 'Text' property of 'deFromDate' DateTimeEdit equals '01.01.2024'
            Assert.AreEqual(this.CheckStep_27ExpectedValues.UIDeFromDateDateTimeEditText, uIDeFromDateDateTimeEdit.Text);

            // Verify that the 'Text' property of 'deToDate' DateTimeEdit equals '07.01.2024'
            Assert.AreEqual(this.CheckStep_27ExpectedValues.UIDeToDateDateTimeEditText, uIDeToDateDateTimeEdit.Text);

            // Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Legges til (5)'
            Assert.AreEqual(this.CheckStep_27ExpectedValues.UIXtraTabControlHeaderTabPageText, uIXtraTabControlHeaderTabPage.Text);
        }
        
        /// <summary>
        /// CheckStep_28 - Use 'CheckStep_28ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_28()
        {
            #region Variable Declarations
            DXTestControl uIXtraTabControlHeaderTabPage = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UIXtraTabControlHeaderTabPage;
            DXTestControl uIXtraTabControlHeaderTabPage1 = this.UITildeloppgavemønsterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UIXtraTabControlHeaderTabPage1;
            #endregion

            // Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Legges til (10)'
            Assert.AreEqual(this.CheckStep_28ExpectedValues.UIXtraTabControlHeaderTabPageText, uIXtraTabControlHeaderTabPage.Text);

            // Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Ignorerte (0)'
            Assert.AreEqual(this.CheckStep_28ExpectedValues.UIXtraTabControlHeaderTabPage1Text, uIXtraTabControlHeaderTabPage1.Text);
        }
        
        /// <summary>
        /// CheckStep_29 - Use 'CheckStep_29ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_29()
        {
            #region Variable Declarations
            DXCell uIItem4040Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell1;
            DXCell uIItem4040Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell2;
            DXCell uIItem4040Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell;
            DXCell uIItem4040Cell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell3;
            DXCell uIItem4040Cell4 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell4;
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItemCell;
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItemCell1;
            DXCell uIItem4040Cell5 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell5;
            DXCell uIItem4040Cell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell6;
            DXCell uIItem4040Cell7 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell7;
            DXCell uIItem4040Cell8 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell8;
            DXCell uIItem4040Cell9 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem4040Cell9;
            DXCell uIItemCell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItemCell2;
            DXCell uIItemCell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItemCell3;
            #endregion

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell1Text, uIItem4040Cell1.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell2Text, uIItem4040Cell2.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040CellText, uIItem4040Cell.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell3Text, uIItem4040Cell3.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell4Text, uIItem4040Cell4.Text);

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItemCellText, uIItemCell.Text);

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItemCell1Text, uIItemCell1.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell5Text, uIItem4040Cell5.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell6Text, uIItem4040Cell6.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell7Text, uIItem4040Cell7.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell7Text1, uIItem4040Cell7.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell8Text, uIItem4040Cell8.Text);

            // Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItem4040Cell9Text, uIItem4040Cell9.Text);

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItemCell2Text, uIItemCell2.Text);

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckStep_29ExpectedValues.UIItemCell3Text, uIItemCell3.Text);
        }
        
        /// <summary>
        /// CheckStep_3 - Use 'CheckStep_3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_3()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIAnsattvisningRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgViewRibbonPageGroup.UIAnsattvisningRibbonBaseButtonItem;
            DXDockPanel uIDpSummaryDockPanel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel;
            DXButton uIOppgaverButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIOppgaverButton;
            DXButton uIOppgavemønsterButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIOppgavemønsterButton;
            DXButton uIAnsatteButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIAnsatteButton;
            #endregion

            // Verify that the 'Checked' property of 'Ansattvisning' RibbonBaseButtonItem equals 'True'
            Assert.AreEqual(this.CheckStep_3ExpectedValues.UIAnsattvisningRibbonBaseButtonItemChecked, uIAnsattvisningRibbonBaseButtonItem.Checked, "Employee view not selected");

            // Verify that the 'Name' property of 'dpSummary' DockPanel equals 'dpSummary'
            Assert.AreEqual(this.CheckStep_3ExpectedValues.UIDpSummaryDockPanelName, uIDpSummaryDockPanel.Name);

            // Verify that the 'DockStyle' property of 'dpSummary' DockPanel equals 'Bottom'
            Assert.AreEqual(this.CheckStep_3ExpectedValues.UIDpSummaryDockPanelDockStyle, uIDpSummaryDockPanel.GetProperty(DXTestControl.PropertyNames.DockStyle).ToString());

            // Verify that the 'Text' property of 'Oppgaver' button equals 'Oppgaver'
            Assert.AreEqual(this.CheckStep_3ExpectedValues.UIOppgaverButtonText, uIOppgaverButton.Text);

            // Verify that the 'Name' property of 'Oppgavemønster' button equals 'Oppgavemønster'
            Assert.AreEqual(this.CheckStep_3ExpectedValues.UIOppgavemønsterButtonName, uIOppgavemønsterButton.Name);

            // Verify that the 'Name' property of 'Ansatte' button equals 'Ansatte'
            Assert.AreEqual(this.CheckStep_3ExpectedValues.UIAnsatteButtonName, uIAnsatteButton.Name);
        }
        
        /// <summary>
        /// CheckStep_3_2 - Use 'CheckStep_3_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_3_2()
        {
            #region Variable Declarations
            DXButton uISpesifikasjonButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UISpesifikasjonButton;
            DXButton uITildelingButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UITildelingButton;
            DXButton uISøkerstattButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UISøkerstattButton;
            #endregion

            // Verify that the 'Text' property of 'Spesifikasjon' button equals 'Spesifikasjon'
            Assert.AreEqual(this.CheckStep_3_2ExpectedValues.UISpesifikasjonButtonText, uISpesifikasjonButton.Text);

            // Verify that the 'Text' property of 'Tildeling' button equals 'Tildeling'
            Assert.AreEqual(this.CheckStep_3_2ExpectedValues.UITildelingButtonText, uITildelingButton.Text);

            // Verify that the 'Text' property of 'Søk & erstatt' button equals 'Søk & erstatt'
            Assert.AreEqual(this.CheckStep_3_2ExpectedValues.UISøkerstattButtonText, uISøkerstattButton.Text);
        }
        
        /// <summary>
        /// CheckStep_32 - Use 'CheckStep_32ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_32()
        {
            #region Variable Declarations
            DXTestControl uIXtraTabControlHeaderTabPage = this.UITildeloppgavemønsterWindow1.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UIXtraTabControlHeaderTabPage;
            DXTestControl uIXtraTabControlHeaderTabPage1 = this.UITildeloppgavemønsterWindow1.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UIXtraTabControlHeaderTabPage1;
            DXCell uIOnsdagCell = this.UITildeloppgavemønsterWindow1.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UITabPage1Client.UIGcAddedTable.UIOnsdagCell;
            DXCell uISøndagCell = this.UITildeloppgavemønsterWindow1.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIRoleCodePatternAssigCustom.UITabControlTabList.UITabPage1Client.UIGcAddedTable.UISøndagCell;
            #endregion

            // Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Legges til (10)'
            Assert.AreEqual(this.CheckStep_32ExpectedValues.UIXtraTabControlHeaderTabPageText, uIXtraTabControlHeaderTabPage.Text);

            // Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Ignorerte (4)'
            Assert.AreEqual(this.CheckStep_32ExpectedValues.UIXtraTabControlHeaderTabPage1Text, uIXtraTabControlHeaderTabPage1.Text);

            // Verify that the 'Text' property of 'onsdag' cell equals 'onsdag'
            Assert.AreEqual(this.CheckStep_32ExpectedValues.UIOnsdagCellText, uIOnsdagCell.Text);

            // Verify that the 'Text' property of 'søndag' cell equals 'søndag'
            Assert.AreEqual(this.CheckStep_32ExpectedValues.UISøndagCellText, uISøndagCell.Text);
        }
        
        /// <summary>
        /// CheckStep_34 - Use 'CheckStep_34ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_34()
        {
            #region Variable Declarations
            DXDockPanel uIDpDisponibleDockPanel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel;
            #endregion

            // Verify that the 'Name' property of 'dpDisponible' DockPanel equals 'dpDisponible'
            Assert.AreEqual(this.CheckStep_34ExpectedValues.UIDpDisponibleDockPanelName, uIDpDisponibleDockPanel.Name);

            // Verify that the 'Visible' property of 'dpDisponible' DockPanel equals 'True'
            Assert.AreEqual(this.CheckStep_34ExpectedValues.UIDpDisponibleDockPanelVisible, uIDpDisponibleDockPanel.Visible);

            // Verify that the 'Enabled' property of 'dpDisponible' DockPanel equals 'True'
            Assert.AreEqual(this.CheckStep_34ExpectedValues.UIDpDisponibleDockPanelEnabled, uIDpDisponibleDockPanel.Enabled);
        }
        
        /// <summary>
        /// CheckStep_35 - Use 'CheckStep_35ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_35()
        {
            #region Variable Declarations
            DXCell uIDDroppDanny10001200Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDDroppDanny10001200Cell;
            #endregion

            // Verify that the 'Text' property of '( )D - Dropp, Danny (10:00 - 12:00)' cell equals '( )D - Dropp, Danny (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckStep_35ExpectedValues.UIDDroppDanny10001200CellText, uIDDroppDanny10001200Cell.Text);
        }
        
        /// <summary>
        /// CheckStep_36 - Use 'CheckStep_36ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_36()
        {
            #region Variable Declarations
            DXCell uIItemCell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell6;
            #endregion

            // Verify that the 'Text' property of cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (12:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_36ExpectedValues.UIItemCell6Text, uIItemCell6.Text);
        }
        
        /// <summary>
        /// CheckStep_37 - Use 'CheckStep_37ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_37()
        {
            #region Variable Declarations
            DXTextEdit uISteFromTimeEdit = this.UIOppgavetildelingWindow3.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteFromTimeEdit;
            DXTextEdit uISteToTimeEdit = this.UIOppgavetildelingWindow4.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UISteToTimeEdit;
            #endregion

            // Verify that the 'Text' property of 'steFromTime' text box equals '13:00'
            Assert.AreEqual(this.CheckStep_37ExpectedValues.UISteFromTimeEditText, uISteFromTimeEdit.Text);

            // Verify that the 'Text' property of 'steToTime' text box equals '15:00'
            Assert.AreEqual(this.CheckStep_37ExpectedValues.UISteToTimeEditText, uISteToTimeEdit.Text);
        }
        
        /// <summary>
        /// CheckStep_38 - Use 'CheckStep_38ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_38()
        {
            #region Variable Declarations
            DXCell uIDDroppDanny08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDDroppDanny08001600Cell;
            DXCell uIDDroppDanny08001000DCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDDroppDanny08001000DCell;
            DXCell uIDDroppDanny08001600Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDDroppDanny08001600Cell1;
            #endregion

            // Verify that the 'Text' property of '( )D - Dropp, Danny (08:00 - 16:00)' cell equals '( )D - Dropp, Danny (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_38ExpectedValues.UIDDroppDanny08001600CellText, uIDDroppDanny08001600Cell.Text);

            // Verify that the 'Text' property of '( )D - Dropp, Danny (08:00 - 10:00)
            //( )D - Dropp, Danny (12:00 - 13:00)
            //( )D - Dropp, Danny (15:00 - 16:00)' cell equals '( )D - Dropp, Danny (08:00 - 10:00)
            //( )D - Dropp, Danny (12:00 - 13:00)
            //( )D - Dropp, Danny (15:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_38ExpectedValues.UIDDroppDanny08001000DCellText, uIDDroppDanny08001000DCell.Text);

            // Verify that the 'Text' property of '( )D - Dropp, Danny (08:00 - 16:00)' cell equals '( )D - Dropp, Danny (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_38ExpectedValues.UIDDroppDanny08001600Cell1Text, uIDDroppDanny08001600Cell1.Text);
        }
        
        /// <summary>
        /// CheckStep_39 - Use 'CheckStep_39ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_39()
        {
            #region Variable Declarations
            DXCell uIAhlgrenKlasCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIAhlgrenKlasCell;
            DXCell uIWarningAnsattmanglerCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningAnsattmanglerCell;
            DXCell uICockerJamesCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UICockerJamesCell;
            #endregion

            // Verify that the 'Text' property of '( )Ahlgren, Klas' cell equals '( )Ahlgren, Klas
            //'
            Assert.AreEqual(this.CheckStep_39ExpectedValues.UIAhlgrenKlasCellText, uIAhlgrenKlasCell.Text);

            // Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)Dropp, Danny' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)Dropp, Danny
            //'
            Assert.AreEqual(this.CheckStep_39ExpectedValues.UIWarningAnsattmanglerCellText, uIWarningAnsattmanglerCell.Text);

            // Verify that the 'Text' property of '( )Cocker, James' cell equals '( )Cocker, James
            //'
            Assert.AreEqual(this.CheckStep_39ExpectedValues.UICockerJamesCellText, uICockerJamesCell.Text);
        }
        
        /// <summary>
        /// CheckStep_4 - Use 'CheckStep_4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_4()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_4ExpectedValues.UID08001600KOMPKREVDEKCellText, uID08001600KOMPKREVDEKCell.Text);
        }
        
        /// <summary>
        /// CheckStep_40 - Use 'CheckStep_40ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_40()
        {
            #region Variable Declarations
            DXCell uIAhlgrenKlasCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIAhlgrenKlasCell;
            DXCell uIWarningAnsattmanglerCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningAnsattmanglerCell;
            DXCell uIDDroppDanny10001200Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDDroppDanny10001200Cell;
            DXCell uICockerJamesCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UICockerJamesCell;
            #endregion

            // Verify that the 'Text' property of '( )Ahlgren, Klas' cell equals '( )D - Ahlgren, Klas (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_40ExpectedValues.UIAhlgrenKlasCellText, uIAhlgrenKlasCell.Text);

            // Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)Dropp, Danny' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (12:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_40ExpectedValues.UIWarningAnsattmanglerCellText, uIWarningAnsattmanglerCell.Text);

            // Verify that the 'Text' property of '( )D - Dropp, Danny (10:00 - 12:00)' cell equals '( )D - Dropp, Danny (10:00 - 12:00)
            //'
            Assert.AreEqual(this.CheckStep_40ExpectedValues.UIDDroppDanny10001200CellText, uIDDroppDanny10001200Cell.Text);

            // Verify that the 'Text' property of '( )Cocker, James' cell equals '( )BV - Cocker, James (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckStep_40ExpectedValues.UICockerJamesCellText, uICockerJamesCell.Text);
        }
        
        /// <summary>
        /// CheckStep_41 - Use 'CheckStep_41ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_41()
        {
            #region Variable Declarations
            DXTestControl uILblEmployeeLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UILblEmployeeLabel;
            DXTestControl uILblRoleCodeLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UILblRoleCodeLabel;
            DXTestControl uILblDateLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UILblDateLabel;
            DXCell uIItem22000800Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UIGcAssignmentPeriodsTable.UIItem22000800Cell;
            DXCell uIItemCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UIGcAssignmentPeriodsTable.UIItemCell;
            DXCell uIItem22000800Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UIGcAssignmentPeriodsTable.UIItem22000800Cell1;
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDpAssignmentDockPanel.UIControlContainer5Custom.UIAssignmentPropertiesCustom.UIVhContentCustom.UIPcViewClient.UICreateAssignmentsVieCustom.UIGcAssignmentPeriodsTable.UIItemCell1;
            #endregion

            // Verify that the 'Text' property of 'lblEmployee' label equals 'Cocker, James'
            Assert.AreEqual(this.CheckStep_41ExpectedValues.UILblEmployeeLabelText, uILblEmployeeLabel.Text);

            // Verify that the 'Text' property of 'lblRoleCode' label equals '22-08 (22:00 - 08:00)'
            Assert.AreEqual(this.CheckStep_41ExpectedValues.UILblRoleCodeLabelText, uILblRoleCodeLabel.Text);

            // Verify that the 'Text' property of 'lblDate' label equals 'To 04.01'
            Assert.AreEqual(this.CheckStep_41ExpectedValues.UILblDateLabelText, uILblDateLabel.Text);

            // Verify that the 'Text' property of '22:00 - 08:00' cell equals '22:00 - 08:00'
            Assert.AreEqual(this.CheckStep_41ExpectedValues.UIItem22000800CellText, uIItem22000800Cell.Text);

            // Verify that the 'Enabled' property of cell equals 'True'
            Assert.AreEqual(this.CheckStep_41ExpectedValues.UIItemCellEnabled, uIItemCell.Enabled);

            // Verify that the 'Visible' property of cell equals 'True'
            Assert.AreEqual(this.CheckStep_41ExpectedValues.UIItemCellVisible, uIItemCell.Visible);

            // Verify that the 'Text' property of '22:00 - 08:00' cell equals '22:00 - 08:00'
            Assert.AreEqual(this.CheckStep_41ExpectedValues.UIItem22000800Cell1Text, uIItem22000800Cell1.Text);

            // Verify that the 'Visible' property of cell equals 'True'
            Assert.AreEqual(this.CheckStep_41ExpectedValues.UIItemCell1Visible, uIItemCell1.Visible);

            // Verify that the 'Enabled' property of cell equals 'True'
            Assert.AreEqual(this.CheckStep_41ExpectedValues.UIItemCell1Enabled, uIItemCell1.Enabled);
        }
        
        /// <summary>
        /// CheckStep_42 - Use 'CheckStep_42ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_42()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals '22-08'
            Assert.AreEqual(this.CheckStep_42ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);
        }
        
        /// <summary>
        /// CheckStep_43 - Use 'CheckStep_43ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_43()
        {
            #region Variable Declarations
            DXCell uIWarningAnsattmanglerCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningAnsattmanglerCell;
            DXCell uIItemCell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell6;
            #endregion

            // Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)Dropp, Danny' cell equals '(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (12:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_43ExpectedValues.UIWarningAnsattmanglerCellText, uIWarningAnsattmanglerCell.Text);

            // Verify that the 'Text' property of cell equals '(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (13:00 - 15:00)
            //'
            Assert.AreEqual(this.CheckStep_43ExpectedValues.UIItemCell6Text, uIItemCell6.Text);
        }
        
        /// <summary>
        /// CheckStep_44 - Use 'CheckStep_44ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_44()
        {
            #region Variable Declarations
            DXCell uIXDDroppDanny12001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXDDroppDanny12001600Cell;
            DXCell uIXDDroppDanny13001500Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXDDroppDanny13001500Cell;
            #endregion

            // Verify that the 'Text' property of '(x)D - Dropp, Danny (12:00 - 16:00)' cell equals '( )D - Dropp, Danny (12:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_44ExpectedValues.UIXDDroppDanny12001600CellText, uIXDDroppDanny12001600Cell.Text);

            // Verify that the 'Text' property of '(x)D - Dropp, Danny (13:00 - 15:00)' cell equals '( )D - Dropp, Danny (13:00 - 15:00)
            //'
            Assert.AreEqual(this.CheckStep_44ExpectedValues.UIXDDroppDanny13001500CellText, uIXDDroppDanny13001500Cell.Text);
        }
        
        /// <summary>
        /// CheckStep_6 - Use 'CheckStep_6ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_6()
        {
            #region Variable Declarations
            DXCell uISPESLEGSpesialistlegCell = this.UIOppgavetildelingWindow.UIGcContentClient.UIGcDetailsClient.UIVhDetailsCustom.UIPcViewClient.UIRoleDetailsViewCustom.UIPanelControl1Client.UITabControlViewHost1TabList.UIViewTabPageClient.UIHostedCompetenceCompCustom.UIVhCompetenceCustom.UIPcViewClient.UICompetenceComparisonCustom.UIGcCompetenceComparisTable.UISPESLEGSpesialistlegCell;
            #endregion

            // Verify that the 'Text' property of 'SPESLEG - Spesialistlege' cell equals 'SPESLEG - Spesialistlege'
            Assert.AreEqual(this.CheckStep_6ExpectedValues.UISPESLEGSpesialistlegCellText, uISPESLEGSpesialistlegCell.Text);
        }
        
        /// <summary>
        /// CheckStep_7 - Use 'CheckStep_7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_7()
        {
            #region Variable Declarations
            WinToolTip uIIngenandreoppgaversaToolTip = this.UIItemWindow.UIIngenandreoppgaversaToolTip;
            #endregion

            // Verify that the 'FriendlyName' property of 'Ingen andre oppgaver samtidig med denne!!.' tooltip equals 'Ingen andre oppgaver samtidig med denne!!. '
            Assert.AreEqual(this.CheckStep_7ExpectedValues.UIIngenandreoppgaversaToolTipFriendlyName, uIIngenandreoppgaversaToolTip.FriendlyName);
        }
        
        /// <summary>
        /// CheckStep_7_1 - Use 'CheckStep_7_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_7_1()
        {
            #region Variable Declarations
            WinToolTip uIOppgave0816overlappeToolTip = this.UIItemWindow1.UIOppgave0816overlappeToolTip;
            #endregion

            // Verify that the 'FriendlyName' property of 'Oppgave 08-16 overlapper med allerede tildelt eksk...' tooltip equals 'Oppgave 08-16 overlapper med allerede tildelt eksk...'
            Assert.AreEqual(this.CheckStep_7_1ExpectedValues.UIOppgave0816overlappeToolTipFriendlyName, uIOppgave0816overlappeToolTip.FriendlyName);
        }
        
        /// <summary>
        /// CheckStep_8 - Use 'CheckStep_8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_8()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Ingen andre oppgaver samtidig med denne!!'
            Assert.AreEqual(this.CheckStep_8ExpectedValues.UILblContentLabelText, uILblContentLabel.Text, "No warning!");
        }
        
        /// <summary>
        /// CheckStep_8_2 - Use 'CheckStep_8_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep_8_2()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Verify that the 'Text' property of '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
            //( )(Critical:Oppgave 08-16 overlapper med allerede tildelt eksklusiv oppgave KOMP KREVD/EKSKL KAN IKKE)08-16 (08:00 - 16:00)
            //(x)(Critical:Ingen andre oppgaver samtidig med denne!!)KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckStep_8_2ExpectedValues.UID08001600KOMPKREVDEKCellText, uID08001600KOMPKREVDEKCell.Text);
        }
        
        /// <summary>
        /// CheckStep48 - Use 'CheckStep48ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep48()
        {
            #region Variable Declarations
            DXCell uIKOMPØNSKETEKSKLBØRIKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIKOMPØNSKETEKSKLBØRIKCell;
            DXCell uIMAKSANTALLADVARSELCell = this.UIOppgavetildelingWindow7.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIMAKSANTALLADVARSELCell;
            DXCell uIKOMPØNSKETEKSKLBØRIKCell1 = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDockPanelDockPanel.UIDockPanelDockPanel1.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIKOMPØNSKETEKSKLBØRIKCell;
            DXCell uIMAKSANTALLADVARSELCell1 = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDockPanelDockPanel.UIDockPanelDockPanel1.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIMAKSANTALLADVARSELCell;
            #endregion

            // Verify that the 'Text' property of 'KOMP ØNSKET/EKSKL BØR IKKE' cell equals 'KOMP ØNSKET/EKSKL BØR IKKE'
            Assert.AreEqual(this.CheckStep48ExpectedValues.UIKOMPØNSKETEKSKLBØRIKCellText, uIKOMPØNSKETEKSKLBØRIKCell.Text);

            // Verify that the 'Text' property of 'MAKS ANTALL ADVARSEL' cell equals 'MAKS ANTALL ADVARSEL'
            Assert.AreEqual(this.CheckStep48ExpectedValues.UIMAKSANTALLADVARSELCellText, uIMAKSANTALLADVARSELCell.Text);

            // Verify that the 'Text' property of 'KOMP ØNSKET/EKSKL BØR IKKE' cell equals 'KOMP ØNSKET/EKSKL BØR IKKE'
            Assert.AreEqual(this.CheckStep48ExpectedValues.UIKOMPØNSKETEKSKLBØRIKCellText1, uIKOMPØNSKETEKSKLBØRIKCell1.Text);

            // Verify that the 'Text' property of 'MAKS ANTALL ADVARSEL' cell equals 'MAKS ANTALL ADVARSEL'
            Assert.AreEqual(this.CheckStep48ExpectedValues.UIMAKSANTALLADVARSELCellText1, uIMAKSANTALLADVARSELCell1.Text);
        }
        
        /// <summary>
        /// CheckStep49 - Use 'CheckStep49ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep49()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIPåAvRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgRoleCodeFilterRibbonPageGroup.UIPåAvRibbonBaseButtonItem;
            DXRibbonButtonItem uIPåAvRibbonBaseButtonItem1 = this.UIOppgavetildelingWindow8.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgEmployeeFilterRibbonPageGroup.UIPåAvRibbonBaseButtonItem;
            DXTestControl uILillaGalleryItem = this.UIOppgavetildelingWindow8.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgRoleCodeFilterRibbonPageGroup.UIRibbonGalleryBarItemRibbonGallery.UISistbrukteGalleryItemGroup.UILillaGalleryItem;
            DXTestControl uICGalleryItem = this.UIOppgavetildelingWindow8.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgEmployeeFilterRibbonPageGroup.UIRibbonGalleryBarItemRibbonGallery.UISistbrukteGalleryItemGroup.UICGalleryItem;
            #endregion

            // Verify that the 'Checked' property of 'På/Av' RibbonBaseButtonItem equals 'True'
            Assert.AreEqual(this.CheckStep49ExpectedValues.UIPåAvRibbonBaseButtonItemChecked, uIPåAvRibbonBaseButtonItem.Checked);

            // Verify that the 'Checked' property of 'På/Av' RibbonBaseButtonItem equals 'True'
            Assert.AreEqual(this.CheckStep49ExpectedValues.UIPåAvRibbonBaseButtonItemChecked1, uIPåAvRibbonBaseButtonItem1.Checked);

            // Verify that the 'Name' property of 'Lilla' GalleryItem equals 'Lilla'
            Assert.AreEqual(this.CheckStep49ExpectedValues.UILillaGalleryItemName, uILillaGalleryItem.Name);

            // Verify that the 'Name' property of 'C' GalleryItem equals 'C'
            Assert.AreEqual(this.CheckStep49ExpectedValues.UICGalleryItemName, uICGalleryItem.Name);
        }
        
        /// <summary>
        /// CheckStep49_1 - Use 'CheckStep49_1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep49_1()
        {
            #region Variable Declarations
            DXCell uICelestonSiggeCell = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDockPanelDockPanel.UIDockPanelDockPanel1.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UICelestonSiggeCell;
            DXCell uICockerJamesCell = this.UIOppgavetildelingWindow6.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDockPanelDockPanel.UIDockPanelDockPanel1.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UICockerJamesCell;
            #endregion

            // Verify that the 'Text' property of 'Celeston, Sigge' cell equals 'Celeston, Sigge'
            Assert.AreEqual(this.CheckStep49_1ExpectedValues.UICelestonSiggeCellText, uICelestonSiggeCell.Text);

            // Verify that the 'Text' property of 'Cocker, James' cell equals 'Cocker, James'
            Assert.AreEqual(this.CheckStep49_1ExpectedValues.UICockerJamesCellText, uICockerJamesCell.Text);
        }
        
        /// <summary>
        /// CheckStep50 - Use 'CheckStep50ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckStep50()
        {
            #region Variable Declarations
            DXRibbonEditItem uIBeFromWeekRibbonEditItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpNavigationRibbonPageGroup.UIBeFromWeekRibbonEditItem;
            DXRibbonEditItem uIBeToWeekRibbonEditItem = this.UIOppgavetildelingWindow8.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpNavigationRibbonPageGroup.UIBeToWeekRibbonEditItem;
            #endregion

            // Verify that the 'ValueAsString' property of 'beFromWeek' RibbonEditItem equals 'Uke 3 2024'
            Assert.AreEqual(this.CheckStep50ExpectedValues.UIBeFromWeekRibbonEditItemValueAsString, uIBeFromWeekRibbonEditItem.ValueAsString);

            // Verify that the 'ValueAsString' property of 'beToWeek' RibbonEditItem equals 'Uke 3 2024'
            Assert.AreEqual(this.CheckStep50ExpectedValues.UIBeToWeekRibbonEditItemValueAsString, uIBeToWeekRibbonEditItem.ValueAsString);
        }
        
        /// <summary>
        /// CheckSummaryGridLocation - Use 'CheckSummaryGridLocationExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSummaryGridLocation()
        {
            #region Variable Declarations
            DXDockPanel uIDpSummaryDockPanel = this.UIOppgavetildelingWindow5.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel;
            #endregion

            // Verify that the 'Name' property of 'dpSummary' DockPanel equals 'dpSummary'
            Assert.AreEqual(this.CheckSummaryGridLocationExpectedValues.UIDpSummaryDockPanelName, uIDpSummaryDockPanel.Name);

            // Verify that the 'Index' property of 'dpSummary' DockPanel equals '1'
            Assert.AreEqual(this.CheckSummaryGridLocationExpectedValues.UIDpSummaryDockPanelIndex, uIDpSummaryDockPanel.Index);

            // Verify that the 'Location' property of 'dpSummary' DockPanel equals '0, 664'
            Assert.AreEqual(this.CheckSummaryGridLocationExpectedValues.UIDpSummaryDockPanelLocation, uIDpSummaryDockPanel.GetProperty("Location").ToString());
        }
        
        /// <summary>
        /// ClickCellStep_15
        /// </summary>
        public void ClickCellStep_15()
        {
            #region Variable Declarations
            DXCell uIItemCell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell1;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell1, new Point(59, 12));
        }
        
        /// <summary>
        /// ClickCellStep_25
        /// </summary>
        public void ClickCellStep_25()
        {
            #region Variable Declarations
            DXCell uID08001600Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell1;
            #endregion

            // Click '( )D (08:00 - 16:00)' cell
            Mouse.Click(uID08001600Cell1, new Point(102, 9));
        }
        
        /// <summary>
        /// ClickDeletedRoleCell
        /// </summary>
        public void ClickDeletedRoleCell()
        {
            #region Variable Declarations
            DXCell uIGcDragDropGridGridCoCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGcDragDropGridGridCoCell;
            #endregion

            // Click 'gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1' cell
            Mouse.Click(uIGcDragDropGridGridCoCell, new Point(449, 88));

            // Click 'gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1' cell
            Mouse.Click(uIGcDragDropGridGridCoCell, new Point(450, 89));
        }
        
        /// <summary>
        /// CreateEmpFilterStep_49 - Use 'CreateEmpFilterStep_49Params' to pass parameters into this method.
        /// </summary>
        public void CreateEmpFilterStep_49()
        {
            #region Variable Declarations
            DXButton uIRpgEmployeeFilterButton = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgEmployeeFilterRibbonPageGroup.UIRpgEmployeeFilterButton;
            DXButton uILeggtilButton = this.UIAnsattfilterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIEmployeeFilterEditViCustom.UILeggtilButton;
            DXCell uICelestonSiggeCell = this.UILeggtilansattWindow.UIPnlContentsClient.UIGcSelectEmploymentsTable.UICelestonSiggeCell;
            DXGrid uIGcSelectEmploymentsTable = this.UILeggtilansattWindow.UIPnlContentsClient.UIGcSelectEmploymentsTable;
            DXButton uILeggtilButton1 = this.UILeggtilansattWindow.UIPnlContentsClient.UIPnlBottomClient.UILeggtilButton;
            DXButton uILagresomButton = this.UIAnsattfilterWindow.UILagresomButton;
            DXTextEdit uITeFilterNameEdit = this.UIItemWindow4.UIPopupContainerBarConMenu.UIPopupControlContaineClient.UIPnlSaveAsPanelClient.UITeFilterNameEdit;
            DXButton uIOKLagreButton = this.UIItemWindow4.UIPopupContainerBarConMenu.UIPopupControlContaineClient.UIPnlSaveAsPanelClient.UIOKLagreButton;
            #endregion

            // Click 'rpgEmployeeFilter' button
            Mouse.Click(uIRpgEmployeeFilterButton, new Point(2, 1));

            // Click 'Legg til' button
            Mouse.Click(uILeggtilButton, new Point(1, 1));

            // Click 'Celeston, Sigge' cell
            Mouse.Click(uICelestonSiggeCell, new Point(39, 7));

            // Type 'Shift + {Down}' in 'gcSelectEmployments' table
            Keyboard.SendKeys(uIGcSelectEmploymentsTable, this.CreateEmpFilterStep_49Params.UIGcSelectEmploymentsTableSendKeys, ModifierKeys.Shift);

            // Click 'Legg til' button
            Mouse.Click(uILeggtilButton1, new Point(1, 1));

            // Click 'Lagre som...' button
            Mouse.Click(uILagresomButton, new Point(1, 1));

            // Type 'C [SelectionStart]0[SelectionLength]1' in 'teFilterName' text box
            //ValueAsString
            uITeFilterNameEdit.ValueAsString = this.CreateEmpFilterStep_49Params.UITeFilterNameEditValueAsString;

            // Click 'OK - Lagre' button
            Mouse.Click(uIOKLagreButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CreateFilterStep_48 - Use 'CreateFilterStep_48Params' to pass parameters into this method.
        /// </summary>
        public void CreateFilterStep_48()
        {
            #region Variable Declarations
            DXButton uIRpgRoleCodeFilterButton = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgRoleCodeFilterRibbonPageGroup.UIRpgRoleCodeFilterButton;
            DXCheckedListBox uIClbColorFilterCheckedListBox = this.UIDefinisjonavfilterfoWindow.UIPcRowSelectionClient.UIGcColorFilterClient.UIClbColorFilterCheckedListBox;
            DXButton uILagresomButton = this.UIDefinisjonavfilterfoWindow.UIGcSavedViewsClient.UILagresomButton;
            DXTextEdit uITxtFilterNameEdit = this.UIItemWindow4.UIPopupContainerBarConMenu.UIPccFilterNameClient.UIPnlFilterNameClient.UITxtFilterNameEdit;
            DXButton uIOKLagreButton = this.UIItemWindow4.UIPopupContainerBarConMenu.UIPccFilterNameClient.UIPnlFilterNameClient.UIOKLagreButton;
            #endregion

            // Click 'rpgRoleCodeFilter' button
            Mouse.Click(uIRpgRoleCodeFilterButton, new Point(3, 0));

            // Type '1' in 'clbColorFilter' CheckedListBox
            //CheckedIndicesAsString
            uIClbColorFilterCheckedListBox.CheckedIndicesAsString = this.CreateFilterStep_48Params.UIClbColorFilterCheckedListBoxCheckedIndicesAsString;

            // Click 'Lagre som...' button
            Mouse.Click(uILagresomButton, new Point(1, 1));

            // Type 'Lilla' in 'txtFilterName' text box
            //ValueAsString
            uITxtFilterNameEdit.ValueAsString = this.CreateFilterStep_48Params.UITxtFilterNameEditValueAsString;

            // Click 'OK - Lagre' button
            Mouse.Click(uIOKLagreButton, new Point(1, 1));
        }
        
        /// <summary>
        /// DecreaseEmpCol - Use 'DecreaseEmpColParams' to pass parameters into this method.
        /// </summary>
        public void DecreaseEmpCol()
        {
            #region Variable Declarations
            DXGrid uIGcDragDropGridTable = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable;
            #endregion

            // Type '[View]bgvMainView[Column]colDepartmentName[Width]45' in 'gcDragDropGrid' table
            //ColumnWidthAsString
            uIGcDragDropGridTable.ColumnWidthAsString = this.DecreaseEmpColParams.UIGcDragDropGridTableColumnWidthAsString;
        }
        
        /// <summary>
        /// DoubleClickRoleStep_5
        /// </summary>
        public void DoubleClickRoleStep_5()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Double-Click '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell
            Mouse.DoubleClick(uID08001600KOMPKREVDEKCell, new Point(84, 26));
        }
        
        /// <summary>
        /// DragDroppToRoleStep_35
        /// </summary>
        public void DragDroppToRoleStep_35()
        {
            #region Variable Declarations
            DXCell uIBVCelestonSigge22000Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIBVCelestonSigge22000Cell;
            DXCell uIDDroppDanny10001200Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIDDroppDanny10001200Cell;
            #endregion

            // Move '( )BV - Celeston, Sigge (22:00 - 08:00)
            //( )BV - Cocker, James (22:00 - 08:00)
            //( )BV1 - Danderyd, Paul (16:00 - 08:00)
            //(x)D - Dropp, Danny (08:00 - 16:00)
            //( )V - Berre, Jenny (16:00 - 22:00)
            //( )V - Brusk, Benny (16:00 - 22:00)' cell to '( )D - Dropp, Danny (10:00 - 12:00)' cell
            uIDDroppDanny10001200Cell.EnsureClickable(new Point(80, 9));
            Mouse.StartDragging(uIBVCelestonSigge22000Cell, new Point(74, 64));
            Mouse.StopDragging(uIDDroppDanny10001200Cell, new Point(80, 9));
        }
        
        /// <summary>
        /// DragDroppToRoleStep_36
        /// </summary>
        public void DragDroppToRoleStep_36()
        {
            #region Variable Declarations
            DXCell uIBVCelestonSigge22000Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIBVCelestonSigge22000Cell;
            DXCell uIItemCell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell6;
            #endregion

            // Move '( )BV - Celeston, Sigge (22:00 - 08:00)
            //( )BV - Cocker, James (22:00 - 08:00)
            //( )BV1 - Danderyd, Paul (16:00 - 08:00)
            //(x)D - Dropp, Danny (08:00 - 16:00)
            //( )V - Berre, Jenny (16:00 - 22:00)
            //( )V - Brusk, Benny (16:00 - 22:00)' cell to cell
            uIItemCell6.EnsureClickable(new Point(82, 5));
            Mouse.StartDragging(uIBVCelestonSigge22000Cell, new Point(100, 80));
            Mouse.StopDragging(uIItemCell6, new Point(82, 5));
        }
        
        /// <summary>
        /// EditKompRoleStep_37_1
        /// </summary>
        public void EditKompRoleStep_37_1()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow2.UISchedulerControl1List5.UIAppointmentCell;
            #endregion

            // Move 'Appointment' cell
            Mouse.StartDragging(uIAppointmentCell, new Point(126, 175));
            Mouse.StopDragging(uIAppointmentCell, 0, -50);
        }
        
        /// <summary>
        /// EditKompRoleStep_37_2
        /// </summary>
        public void EditKompRoleStep_37_2()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell2 = this.UIOppgavetildelingWindow2.UISchedulerControl1List5.UIAppointmentCell2;
            #endregion

            // Move 'Appointment' cell
            Mouse.StartDragging(uIAppointmentCell2, new Point(111, 0));
            Mouse.StopDragging(uIAppointmentCell2, 0, 55);
        }
        
        /// <summary>
        /// EditRolePeriodStep_18
        /// </summary>
        public void EditRolePeriodStep_18()
        {
            #region Variable Declarations
            DXCell uID08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600Cell;
            #endregion

            // Double-Click '( )D (08:00 - 16:00)' cell
            Mouse.DoubleClick(uID08001600Cell, new Point(115, 26));
        }
        
        /// <summary>
        /// EditRolePeriodWithDragStep_20
        /// </summary>
        public void EditRolePeriodWithDragStep_20()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell1 = this.UIOppgavetildelingWindow2.UISchedulerControl1List2.UIAppointmentCell1;
            #endregion

            // Move 'Appointment' cell
            Mouse.StartDragging(uIAppointmentCell1, new Point(51, 2));
            Mouse.StopDragging(uIAppointmentCell1, 0, 190);
        }
        
        /// <summary>
        /// MoveViewToShowSunday - Use 'MoveViewToShowSundayParams' to pass parameters into this method.
        /// </summary>
        public void MoveViewToShowSunday()
        {
            #region Variable Declarations
            DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIHCrkScrollBarScrollBarControl;
            #endregion

            // Type '373' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.MoveViewToShowSundayParams.UIHCrkScrollBarScrollBarControlValueAsString;
        }
        
        /// <summary>
        /// OpenFridayRoleStep_37
        /// </summary>
        public void OpenFridayRoleStep_37()
        {
            #region Variable Declarations
            DXCell uIItemCell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell6;
            #endregion

            // Double-Click cell
            Mouse.DoubleClick(uIItemCell6, new Point(84, 10));
        }
        
        /// <summary>
        /// ResizeDisp
        /// </summary>
        public void ResizeDisp()
        {
            #region Variable Declarations
            DXTestControl uITopSeparator = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UITopSeparator;
            DXGrid uIGcDragDropGridTable = this.UIOppgavetildelingWindow7.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable;
            #endregion

            // Move 'Top' separator to 'gcDragDropGrid' table
            uIGcDragDropGridTable.EnsureClickable(new Point(779, 425));
            Mouse.StartDragging(uITopSeparator, new Point(779, 0));
            Mouse.StopDragging(uIGcDragDropGridTable, new Point(779, 425));
        }
        
        /// <summary>
        /// SelectAssignmentStep_23
        /// </summary>
        public void SelectAssignmentStep_23()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell1 = this.UIOppgavetildelingWindow2.UISchedulerControl1List4.UIAppointmentCell1;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell1, new Point(123, 87));
        }
        
        /// <summary>
        /// SelectCockerAndRoleStep41
        /// </summary>
        public void SelectCockerAndRoleStep41()
        {
            #region Variable Declarations
            DXCell uIItemCell7 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell7;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell7, new Point(78, 7));
        }
        
        /// <summary>
        /// SelectCockerStep39
        /// </summary>
        public void SelectCockerStep39()
        {
            #region Variable Declarations
            DXCell uICockerJamesCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UICockerJamesCell;
            #endregion

            // Click 'Cocker, James' cell
            Mouse.Click(uICockerJamesCell, new Point(72, 10));
        }
        
        /// <summary>
        /// SelectDroppInEmpListStep_38
        /// </summary>
        public void SelectDroppInEmpListStep_38()
        {
            #region Variable Declarations
            DXCell uIDroppDannyCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UIDroppDannyCell;
            #endregion

            // Click 'Dropp, Danny' cell
            Mouse.Click(uIDroppDannyCell, new Point(81, 7));
        }
        
        /// <summary>
        /// SelectKontAssignmentStep_37
        /// </summary>
        public void SelectKontAssignmentStep_37()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell1 = this.UIOppgavetildelingWindow2.UISchedulerControl1List5.UIAppointmentCell1;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell1, new Point(125, 47));
        }
        
        /// <summary>
        /// SelectRoleStep_11
        /// </summary>
        public void SelectRoleStep_11()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Click '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell
            Mouse.Click(uID08001600KOMPKREVDEKCell, new Point(87, 24));
        }
        
        /// <summary>
        /// SelectRoleStep_13
        /// </summary>
        public void SelectRoleStep_13()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Click '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell
            Mouse.Click(uID08001600KOMPKREVDEKCell, new Point(55, 28));
        }
        
        /// <summary>
        /// SelectRoleStep_19
        /// </summary>
        public void SelectRoleStep_19()
        {
            #region Variable Declarations
            WinCell uIAppointmentCell = this.UIOppgavetildelingWindow2.UISchedulerControl1List2.UIAppointmentCell;
            #endregion

            // Click 'Appointment' cell
            Mouse.Click(uIAppointmentCell, new Point(17, 15));
        }
        
        /// <summary>
        /// SelectRoleStep_42
        /// </summary>
        public void SelectRoleStep_42()
        {
            #region Variable Declarations
            DXCell uIItemCell7 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell7;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell7, new Point(81, 10));
        }
        
        /// <summary>
        /// SelectRoleStep_8
        /// </summary>
        public void SelectRoleStep_8()
        {
            #region Variable Declarations
            DXCell uID08001600KOMPKREVDEKCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UID08001600KOMPKREVDEKCell;
            #endregion

            // Click '( )D (08:00 - 16:00)
            //( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell
            Mouse.Click(uID08001600KOMPKREVDEKCell, new Point(94, 47));
        }
        
        /// <summary>
        /// SelectRoleToReplaceWithStep43
        /// </summary>
        public void SelectRoleToReplaceWithStep43()
        {
            #region Variable Declarations
            DXCell uIMAKSANTALLSPERRECell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIMAKSANTALLSPERRECell;
            #endregion

            // Click 'MAKS ANTALL SPERRE' cell
            Mouse.Click(uIMAKSANTALLSPERRECell, new Point(68, 9));
        }
        
        /// <summary>
        /// SummarySettingsStep_14 - Use 'SummarySettingsStep_14Params' to pass parameters into this method.
        /// </summary>
        public void SummarySettingsStep_14()
        {
            #region Variable Declarations
            DXCheckBox uIChkShowCoverageBreakCheckBox = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIPanFilterClient.UIChkShowCoverageBreakCheckBox;
            #endregion

            // Select 'chkShowCoverageBreaks' check box
            uIChkShowCoverageBreakCheckBox.Checked = this.SummarySettingsStep_14Params.UIChkShowCoverageBreakCheckBoxChecked;
        }
        
        /// <summary>
        /// TryToAddRoleStep_15
        /// </summary>
        public void TryToAddRoleStep_15()
        {
            #region Variable Declarations
            DXCell uIOVERCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIOVERCell;
            DXCell uIItemCell6 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell6;
            #endregion

            // Move 'OVER' cell to cell
            uIItemCell6.EnsureClickable(new Point(115, 8));
            Mouse.StartDragging(uIOVERCell, new Point(49, 7));
            Mouse.StopDragging(uIItemCell6, new Point(115, 8));
        }
        
        /// <summary>
        /// TryToOpenDeletedRole
        /// </summary>
        public void TryToOpenDeletedRole()
        {
            #region Variable Declarations
            DXCell uIGcDragDropGridGridCoCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGcDragDropGridGridCoCell;
            #endregion

            // Double-Click 'gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1' cell
            Mouse.DoubleClick(uIGcDragDropGridGridCoCell, new Point(452, 87));
        }
        
        /// <summary>
        /// XClickDispAndSummaryGrid
        /// </summary>
        public void XClickDispAndSummaryGrid()
        {
            #region Variable Declarations
            DXButton uICloseButtonButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UICloseButtonButton;
            DXButton uICloseButtonButton1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UICloseButtonButton;
            #endregion

            // Click 'CloseButton' button
            Mouse.Click(uICloseButtonButton, new Point(6, 10));

            // Click 'CloseButton' button
            Mouse.Click(uICloseButtonButton1, new Point(9, 4));
        }
        
        #region Properties
        public virtual CheckDispGridLocationExpectedValues CheckDispGridLocationExpectedValues
        {
            get
            {
                if ((this.mCheckDispGridLocationExpectedValues == null))
                {
                    this.mCheckDispGridLocationExpectedValues = new CheckDispGridLocationExpectedValues();
                }
                return this.mCheckDispGridLocationExpectedValues;
            }
        }
        
        public virtual CheckPatternStep33ExpectedValues CheckPatternStep33ExpectedValues
        {
            get
            {
                if ((this.mCheckPatternStep33ExpectedValues == null))
                {
                    this.mCheckPatternStep33ExpectedValues = new CheckPatternStep33ExpectedValues();
                }
                return this.mCheckPatternStep33ExpectedValues;
            }
        }
        
        public virtual CheckRoleWarningStep_19ExpectedValues CheckRoleWarningStep_19ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleWarningStep_19ExpectedValues == null))
                {
                    this.mCheckRoleWarningStep_19ExpectedValues = new CheckRoleWarningStep_19ExpectedValues();
                }
                return this.mCheckRoleWarningStep_19ExpectedValues;
            }
        }
        
        public virtual CheckSaveDeactivatedStep_9ExpectedValues CheckSaveDeactivatedStep_9ExpectedValues
        {
            get
            {
                if ((this.mCheckSaveDeactivatedStep_9ExpectedValues == null))
                {
                    this.mCheckSaveDeactivatedStep_9ExpectedValues = new CheckSaveDeactivatedStep_9ExpectedValues();
                }
                return this.mCheckSaveDeactivatedStep_9ExpectedValues;
            }
        }
        
        public virtual CheckShiftbookDateStep_2ExpectedValues CheckShiftbookDateStep_2ExpectedValues
        {
            get
            {
                if ((this.mCheckShiftbookDateStep_2ExpectedValues == null))
                {
                    this.mCheckShiftbookDateStep_2ExpectedValues = new CheckShiftbookDateStep_2ExpectedValues();
                }
                return this.mCheckShiftbookDateStep_2ExpectedValues;
            }
        }
        
        public virtual CheckStep_10ExpectedValues CheckStep_10ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_10ExpectedValues == null))
                {
                    this.mCheckStep_10ExpectedValues = new CheckStep_10ExpectedValues();
                }
                return this.mCheckStep_10ExpectedValues;
            }
        }
        
        public virtual CheckStep_11ExpectedValues CheckStep_11ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_11ExpectedValues == null))
                {
                    this.mCheckStep_11ExpectedValues = new CheckStep_11ExpectedValues();
                }
                return this.mCheckStep_11ExpectedValues;
            }
        }
        
        public virtual CheckStep_12ExpectedValues CheckStep_12ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_12ExpectedValues == null))
                {
                    this.mCheckStep_12ExpectedValues = new CheckStep_12ExpectedValues();
                }
                return this.mCheckStep_12ExpectedValues;
            }
        }
        
        public virtual CheckStep_13ExpectedValues CheckStep_13ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_13ExpectedValues == null))
                {
                    this.mCheckStep_13ExpectedValues = new CheckStep_13ExpectedValues();
                }
                return this.mCheckStep_13ExpectedValues;
            }
        }
        
        public virtual CheckStep_14ExpectedValues CheckStep_14ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_14ExpectedValues == null))
                {
                    this.mCheckStep_14ExpectedValues = new CheckStep_14ExpectedValues();
                }
                return this.mCheckStep_14ExpectedValues;
            }
        }
        
        public virtual CheckStep_15ExpectedValues CheckStep_15ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_15ExpectedValues == null))
                {
                    this.mCheckStep_15ExpectedValues = new CheckStep_15ExpectedValues();
                }
                return this.mCheckStep_15ExpectedValues;
            }
        }
        
        public virtual CheckStep_16ExpectedValues CheckStep_16ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_16ExpectedValues == null))
                {
                    this.mCheckStep_16ExpectedValues = new CheckStep_16ExpectedValues();
                }
                return this.mCheckStep_16ExpectedValues;
            }
        }
        
        public virtual CheckStep_17ExpectedValues CheckStep_17ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_17ExpectedValues == null))
                {
                    this.mCheckStep_17ExpectedValues = new CheckStep_17ExpectedValues();
                }
                return this.mCheckStep_17ExpectedValues;
            }
        }
        
        public virtual CheckStep_22ExpectedValues CheckStep_22ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_22ExpectedValues == null))
                {
                    this.mCheckStep_22ExpectedValues = new CheckStep_22ExpectedValues();
                }
                return this.mCheckStep_22ExpectedValues;
            }
        }
        
        public virtual CheckStep_23ExpectedValues CheckStep_23ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_23ExpectedValues == null))
                {
                    this.mCheckStep_23ExpectedValues = new CheckStep_23ExpectedValues();
                }
                return this.mCheckStep_23ExpectedValues;
            }
        }
        
        public virtual CheckStep_24ExpectedValues CheckStep_24ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_24ExpectedValues == null))
                {
                    this.mCheckStep_24ExpectedValues = new CheckStep_24ExpectedValues();
                }
                return this.mCheckStep_24ExpectedValues;
            }
        }
        
        public virtual CheckStep_25ExpectedValues CheckStep_25ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_25ExpectedValues == null))
                {
                    this.mCheckStep_25ExpectedValues = new CheckStep_25ExpectedValues();
                }
                return this.mCheckStep_25ExpectedValues;
            }
        }
        
        public virtual CheckStep_27ExpectedValues CheckStep_27ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_27ExpectedValues == null))
                {
                    this.mCheckStep_27ExpectedValues = new CheckStep_27ExpectedValues();
                }
                return this.mCheckStep_27ExpectedValues;
            }
        }
        
        public virtual CheckStep_28ExpectedValues CheckStep_28ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_28ExpectedValues == null))
                {
                    this.mCheckStep_28ExpectedValues = new CheckStep_28ExpectedValues();
                }
                return this.mCheckStep_28ExpectedValues;
            }
        }
        
        public virtual CheckStep_29ExpectedValues CheckStep_29ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_29ExpectedValues == null))
                {
                    this.mCheckStep_29ExpectedValues = new CheckStep_29ExpectedValues();
                }
                return this.mCheckStep_29ExpectedValues;
            }
        }
        
        public virtual CheckStep_3ExpectedValues CheckStep_3ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_3ExpectedValues == null))
                {
                    this.mCheckStep_3ExpectedValues = new CheckStep_3ExpectedValues();
                }
                return this.mCheckStep_3ExpectedValues;
            }
        }
        
        public virtual CheckStep_3_2ExpectedValues CheckStep_3_2ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_3_2ExpectedValues == null))
                {
                    this.mCheckStep_3_2ExpectedValues = new CheckStep_3_2ExpectedValues();
                }
                return this.mCheckStep_3_2ExpectedValues;
            }
        }
        
        public virtual CheckStep_32ExpectedValues CheckStep_32ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_32ExpectedValues == null))
                {
                    this.mCheckStep_32ExpectedValues = new CheckStep_32ExpectedValues();
                }
                return this.mCheckStep_32ExpectedValues;
            }
        }
        
        public virtual CheckStep_34ExpectedValues CheckStep_34ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_34ExpectedValues == null))
                {
                    this.mCheckStep_34ExpectedValues = new CheckStep_34ExpectedValues();
                }
                return this.mCheckStep_34ExpectedValues;
            }
        }
        
        public virtual CheckStep_35ExpectedValues CheckStep_35ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_35ExpectedValues == null))
                {
                    this.mCheckStep_35ExpectedValues = new CheckStep_35ExpectedValues();
                }
                return this.mCheckStep_35ExpectedValues;
            }
        }
        
        public virtual CheckStep_36ExpectedValues CheckStep_36ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_36ExpectedValues == null))
                {
                    this.mCheckStep_36ExpectedValues = new CheckStep_36ExpectedValues();
                }
                return this.mCheckStep_36ExpectedValues;
            }
        }
        
        public virtual CheckStep_37ExpectedValues CheckStep_37ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_37ExpectedValues == null))
                {
                    this.mCheckStep_37ExpectedValues = new CheckStep_37ExpectedValues();
                }
                return this.mCheckStep_37ExpectedValues;
            }
        }
        
        public virtual CheckStep_38ExpectedValues CheckStep_38ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_38ExpectedValues == null))
                {
                    this.mCheckStep_38ExpectedValues = new CheckStep_38ExpectedValues();
                }
                return this.mCheckStep_38ExpectedValues;
            }
        }
        
        public virtual CheckStep_39ExpectedValues CheckStep_39ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_39ExpectedValues == null))
                {
                    this.mCheckStep_39ExpectedValues = new CheckStep_39ExpectedValues();
                }
                return this.mCheckStep_39ExpectedValues;
            }
        }
        
        public virtual CheckStep_4ExpectedValues CheckStep_4ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_4ExpectedValues == null))
                {
                    this.mCheckStep_4ExpectedValues = new CheckStep_4ExpectedValues();
                }
                return this.mCheckStep_4ExpectedValues;
            }
        }
        
        public virtual CheckStep_40ExpectedValues CheckStep_40ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_40ExpectedValues == null))
                {
                    this.mCheckStep_40ExpectedValues = new CheckStep_40ExpectedValues();
                }
                return this.mCheckStep_40ExpectedValues;
            }
        }
        
        public virtual CheckStep_41ExpectedValues CheckStep_41ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_41ExpectedValues == null))
                {
                    this.mCheckStep_41ExpectedValues = new CheckStep_41ExpectedValues();
                }
                return this.mCheckStep_41ExpectedValues;
            }
        }
        
        public virtual CheckStep_42ExpectedValues CheckStep_42ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_42ExpectedValues == null))
                {
                    this.mCheckStep_42ExpectedValues = new CheckStep_42ExpectedValues();
                }
                return this.mCheckStep_42ExpectedValues;
            }
        }
        
        public virtual CheckStep_43ExpectedValues CheckStep_43ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_43ExpectedValues == null))
                {
                    this.mCheckStep_43ExpectedValues = new CheckStep_43ExpectedValues();
                }
                return this.mCheckStep_43ExpectedValues;
            }
        }
        
        public virtual CheckStep_44ExpectedValues CheckStep_44ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_44ExpectedValues == null))
                {
                    this.mCheckStep_44ExpectedValues = new CheckStep_44ExpectedValues();
                }
                return this.mCheckStep_44ExpectedValues;
            }
        }
        
        public virtual CheckStep_6ExpectedValues CheckStep_6ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_6ExpectedValues == null))
                {
                    this.mCheckStep_6ExpectedValues = new CheckStep_6ExpectedValues();
                }
                return this.mCheckStep_6ExpectedValues;
            }
        }
        
        public virtual CheckStep_7ExpectedValues CheckStep_7ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_7ExpectedValues == null))
                {
                    this.mCheckStep_7ExpectedValues = new CheckStep_7ExpectedValues();
                }
                return this.mCheckStep_7ExpectedValues;
            }
        }
        
        public virtual CheckStep_7_1ExpectedValues CheckStep_7_1ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_7_1ExpectedValues == null))
                {
                    this.mCheckStep_7_1ExpectedValues = new CheckStep_7_1ExpectedValues();
                }
                return this.mCheckStep_7_1ExpectedValues;
            }
        }
        
        public virtual CheckStep_8ExpectedValues CheckStep_8ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_8ExpectedValues == null))
                {
                    this.mCheckStep_8ExpectedValues = new CheckStep_8ExpectedValues();
                }
                return this.mCheckStep_8ExpectedValues;
            }
        }
        
        public virtual CheckStep_8_2ExpectedValues CheckStep_8_2ExpectedValues
        {
            get
            {
                if ((this.mCheckStep_8_2ExpectedValues == null))
                {
                    this.mCheckStep_8_2ExpectedValues = new CheckStep_8_2ExpectedValues();
                }
                return this.mCheckStep_8_2ExpectedValues;
            }
        }
        
        public virtual CheckStep48ExpectedValues CheckStep48ExpectedValues
        {
            get
            {
                if ((this.mCheckStep48ExpectedValues == null))
                {
                    this.mCheckStep48ExpectedValues = new CheckStep48ExpectedValues();
                }
                return this.mCheckStep48ExpectedValues;
            }
        }
        
        public virtual CheckStep49ExpectedValues CheckStep49ExpectedValues
        {
            get
            {
                if ((this.mCheckStep49ExpectedValues == null))
                {
                    this.mCheckStep49ExpectedValues = new CheckStep49ExpectedValues();
                }
                return this.mCheckStep49ExpectedValues;
            }
        }
        
        public virtual CheckStep49_1ExpectedValues CheckStep49_1ExpectedValues
        {
            get
            {
                if ((this.mCheckStep49_1ExpectedValues == null))
                {
                    this.mCheckStep49_1ExpectedValues = new CheckStep49_1ExpectedValues();
                }
                return this.mCheckStep49_1ExpectedValues;
            }
        }
        
        public virtual CheckStep50ExpectedValues CheckStep50ExpectedValues
        {
            get
            {
                if ((this.mCheckStep50ExpectedValues == null))
                {
                    this.mCheckStep50ExpectedValues = new CheckStep50ExpectedValues();
                }
                return this.mCheckStep50ExpectedValues;
            }
        }
        
        public virtual CheckSummaryGridLocationExpectedValues CheckSummaryGridLocationExpectedValues
        {
            get
            {
                if ((this.mCheckSummaryGridLocationExpectedValues == null))
                {
                    this.mCheckSummaryGridLocationExpectedValues = new CheckSummaryGridLocationExpectedValues();
                }
                return this.mCheckSummaryGridLocationExpectedValues;
            }
        }
        
        public virtual CreateEmpFilterStep_49Params CreateEmpFilterStep_49Params
        {
            get
            {
                if ((this.mCreateEmpFilterStep_49Params == null))
                {
                    this.mCreateEmpFilterStep_49Params = new CreateEmpFilterStep_49Params();
                }
                return this.mCreateEmpFilterStep_49Params;
            }
        }
        
        public virtual CreateFilterStep_48Params CreateFilterStep_48Params
        {
            get
            {
                if ((this.mCreateFilterStep_48Params == null))
                {
                    this.mCreateFilterStep_48Params = new CreateFilterStep_48Params();
                }
                return this.mCreateFilterStep_48Params;
            }
        }
        
        public virtual DecreaseEmpColParams DecreaseEmpColParams
        {
            get
            {
                if ((this.mDecreaseEmpColParams == null))
                {
                    this.mDecreaseEmpColParams = new DecreaseEmpColParams();
                }
                return this.mDecreaseEmpColParams;
            }
        }
        
        public virtual MoveViewToShowSundayParams MoveViewToShowSundayParams
        {
            get
            {
                if ((this.mMoveViewToShowSundayParams == null))
                {
                    this.mMoveViewToShowSundayParams = new MoveViewToShowSundayParams();
                }
                return this.mMoveViewToShowSundayParams;
            }
        }
        
        public virtual SummarySettingsStep_14Params SummarySettingsStep_14Params
        {
            get
            {
                if ((this.mSummarySettingsStep_14Params == null))
                {
                    this.mSummarySettingsStep_14Params = new SummarySettingsStep_14Params();
                }
                return this.mSummarySettingsStep_14Params;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIOppgavetildelingWindow UIOppgavetildelingWindow
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow == null))
                {
                    this.mUIOppgavetildelingWindow = new UIOppgavetildelingWindow();
                }
                return this.mUIOppgavetildelingWindow;
            }
        }
        
        public UIOppgavetildelingWindow1 UIOppgavetildelingWindow1
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow1 == null))
                {
                    this.mUIOppgavetildelingWindow1 = new UIOppgavetildelingWindow1();
                }
                return this.mUIOppgavetildelingWindow1;
            }
        }
        
        public UIVelgoppgaverWindow UIVelgoppgaverWindow
        {
            get
            {
                if ((this.mUIVelgoppgaverWindow == null))
                {
                    this.mUIVelgoppgaverWindow = new UIVelgoppgaverWindow();
                }
                return this.mUIVelgoppgaverWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIOppgavetildelingWindow2 UIOppgavetildelingWindow2
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow2 == null))
                {
                    this.mUIOppgavetildelingWindow2 = new UIOppgavetildelingWindow2();
                }
                return this.mUIOppgavetildelingWindow2;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UITildeloppgavemønsterWindow UITildeloppgavemønsterWindow
        {
            get
            {
                if ((this.mUITildeloppgavemønsterWindow == null))
                {
                    this.mUITildeloppgavemønsterWindow = new UITildeloppgavemønsterWindow();
                }
                return this.mUITildeloppgavemønsterWindow;
            }
        }
        
        public UITildeloppgavemønsterWindow1 UITildeloppgavemønsterWindow1
        {
            get
            {
                if ((this.mUITildeloppgavemønsterWindow1 == null))
                {
                    this.mUITildeloppgavemønsterWindow1 = new UITildeloppgavemønsterWindow1();
                }
                return this.mUITildeloppgavemønsterWindow1;
            }
        }
        
        public UIOppgavetildelingWindow3 UIOppgavetildelingWindow3
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow3 == null))
                {
                    this.mUIOppgavetildelingWindow3 = new UIOppgavetildelingWindow3();
                }
                return this.mUIOppgavetildelingWindow3;
            }
        }
        
        public UIOppgavetildelingWindow4 UIOppgavetildelingWindow4
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow4 == null))
                {
                    this.mUIOppgavetildelingWindow4 = new UIOppgavetildelingWindow4();
                }
                return this.mUIOppgavetildelingWindow4;
            }
        }
        
        public UIOppgavetildelingWindow5 UIOppgavetildelingWindow5
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow5 == null))
                {
                    this.mUIOppgavetildelingWindow5 = new UIOppgavetildelingWindow5();
                }
                return this.mUIOppgavetildelingWindow5;
            }
        }
        
        public UIOppgavetildelingWindow6 UIOppgavetildelingWindow6
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow6 == null))
                {
                    this.mUIOppgavetildelingWindow6 = new UIOppgavetildelingWindow6();
                }
                return this.mUIOppgavetildelingWindow6;
            }
        }
        
        public UIDefinisjonavfilterfoWindow UIDefinisjonavfilterfoWindow
        {
            get
            {
                if ((this.mUIDefinisjonavfilterfoWindow == null))
                {
                    this.mUIDefinisjonavfilterfoWindow = new UIDefinisjonavfilterfoWindow();
                }
                return this.mUIDefinisjonavfilterfoWindow;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIOppgavetildelingWindow7 UIOppgavetildelingWindow7
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow7 == null))
                {
                    this.mUIOppgavetildelingWindow7 = new UIOppgavetildelingWindow7();
                }
                return this.mUIOppgavetildelingWindow7;
            }
        }
        
        public UIAnsattfilterWindow UIAnsattfilterWindow
        {
            get
            {
                if ((this.mUIAnsattfilterWindow == null))
                {
                    this.mUIAnsattfilterWindow = new UIAnsattfilterWindow();
                }
                return this.mUIAnsattfilterWindow;
            }
        }
        
        public UILeggtilansattWindow UILeggtilansattWindow
        {
            get
            {
                if ((this.mUILeggtilansattWindow == null))
                {
                    this.mUILeggtilansattWindow = new UILeggtilansattWindow();
                }
                return this.mUILeggtilansattWindow;
            }
        }
        
        public UIOppgavetildelingWindow8 UIOppgavetildelingWindow8
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow8 == null))
                {
                    this.mUIOppgavetildelingWindow8 = new UIOppgavetildelingWindow8();
                }
                return this.mUIOppgavetildelingWindow8;
            }
        }
        
        public UIOppgavetildelingWindow9 UIOppgavetildelingWindow9
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow9 == null))
                {
                    this.mUIOppgavetildelingWindow9 = new UIOppgavetildelingWindow9();
                }
                return this.mUIOppgavetildelingWindow9;
            }
        }
        
        public UIOppgavetildelingWindow10 UIOppgavetildelingWindow10
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow10 == null))
                {
                    this.mUIOppgavetildelingWindow10 = new UIOppgavetildelingWindow10();
                }
                return this.mUIOppgavetildelingWindow10;
            }
        }
        
        public UIOppgavetildelingWindow11 UIOppgavetildelingWindow11
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow11 == null))
                {
                    this.mUIOppgavetildelingWindow11 = new UIOppgavetildelingWindow11();
                }
                return this.mUIOppgavetildelingWindow11;
            }
        }
        #endregion
        
        #region Fields
        private CheckDispGridLocationExpectedValues mCheckDispGridLocationExpectedValues;
        
        private CheckPatternStep33ExpectedValues mCheckPatternStep33ExpectedValues;
        
        private CheckRoleWarningStep_19ExpectedValues mCheckRoleWarningStep_19ExpectedValues;
        
        private CheckSaveDeactivatedStep_9ExpectedValues mCheckSaveDeactivatedStep_9ExpectedValues;
        
        private CheckShiftbookDateStep_2ExpectedValues mCheckShiftbookDateStep_2ExpectedValues;
        
        private CheckStep_10ExpectedValues mCheckStep_10ExpectedValues;
        
        private CheckStep_11ExpectedValues mCheckStep_11ExpectedValues;
        
        private CheckStep_12ExpectedValues mCheckStep_12ExpectedValues;
        
        private CheckStep_13ExpectedValues mCheckStep_13ExpectedValues;
        
        private CheckStep_14ExpectedValues mCheckStep_14ExpectedValues;
        
        private CheckStep_15ExpectedValues mCheckStep_15ExpectedValues;
        
        private CheckStep_16ExpectedValues mCheckStep_16ExpectedValues;
        
        private CheckStep_17ExpectedValues mCheckStep_17ExpectedValues;
        
        private CheckStep_22ExpectedValues mCheckStep_22ExpectedValues;
        
        private CheckStep_23ExpectedValues mCheckStep_23ExpectedValues;
        
        private CheckStep_24ExpectedValues mCheckStep_24ExpectedValues;
        
        private CheckStep_25ExpectedValues mCheckStep_25ExpectedValues;
        
        private CheckStep_27ExpectedValues mCheckStep_27ExpectedValues;
        
        private CheckStep_28ExpectedValues mCheckStep_28ExpectedValues;
        
        private CheckStep_29ExpectedValues mCheckStep_29ExpectedValues;
        
        private CheckStep_3ExpectedValues mCheckStep_3ExpectedValues;
        
        private CheckStep_3_2ExpectedValues mCheckStep_3_2ExpectedValues;
        
        private CheckStep_32ExpectedValues mCheckStep_32ExpectedValues;
        
        private CheckStep_34ExpectedValues mCheckStep_34ExpectedValues;
        
        private CheckStep_35ExpectedValues mCheckStep_35ExpectedValues;
        
        private CheckStep_36ExpectedValues mCheckStep_36ExpectedValues;
        
        private CheckStep_37ExpectedValues mCheckStep_37ExpectedValues;
        
        private CheckStep_38ExpectedValues mCheckStep_38ExpectedValues;
        
        private CheckStep_39ExpectedValues mCheckStep_39ExpectedValues;
        
        private CheckStep_4ExpectedValues mCheckStep_4ExpectedValues;
        
        private CheckStep_40ExpectedValues mCheckStep_40ExpectedValues;
        
        private CheckStep_41ExpectedValues mCheckStep_41ExpectedValues;
        
        private CheckStep_42ExpectedValues mCheckStep_42ExpectedValues;
        
        private CheckStep_43ExpectedValues mCheckStep_43ExpectedValues;
        
        private CheckStep_44ExpectedValues mCheckStep_44ExpectedValues;
        
        private CheckStep_6ExpectedValues mCheckStep_6ExpectedValues;
        
        private CheckStep_7ExpectedValues mCheckStep_7ExpectedValues;
        
        private CheckStep_7_1ExpectedValues mCheckStep_7_1ExpectedValues;
        
        private CheckStep_8ExpectedValues mCheckStep_8ExpectedValues;
        
        private CheckStep_8_2ExpectedValues mCheckStep_8_2ExpectedValues;
        
        private CheckStep48ExpectedValues mCheckStep48ExpectedValues;
        
        private CheckStep49ExpectedValues mCheckStep49ExpectedValues;
        
        private CheckStep49_1ExpectedValues mCheckStep49_1ExpectedValues;
        
        private CheckStep50ExpectedValues mCheckStep50ExpectedValues;
        
        private CheckSummaryGridLocationExpectedValues mCheckSummaryGridLocationExpectedValues;
        
        private CreateEmpFilterStep_49Params mCreateEmpFilterStep_49Params;
        
        private CreateFilterStep_48Params mCreateFilterStep_48Params;
        
        private DecreaseEmpColParams mDecreaseEmpColParams;
        
        private MoveViewToShowSundayParams mMoveViewToShowSundayParams;
        
        private SummarySettingsStep_14Params mSummarySettingsStep_14Params;
        
        private UIGatWindow mUIGatWindow;
        
        private UIOppgavetildelingWindow mUIOppgavetildelingWindow;
        
        private UIOppgavetildelingWindow1 mUIOppgavetildelingWindow1;
        
        private UIVelgoppgaverWindow mUIVelgoppgaverWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIOppgavetildelingWindow2 mUIOppgavetildelingWindow2;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UITildeloppgavemønsterWindow mUITildeloppgavemønsterWindow;
        
        private UITildeloppgavemønsterWindow1 mUITildeloppgavemønsterWindow1;
        
        private UIOppgavetildelingWindow3 mUIOppgavetildelingWindow3;
        
        private UIOppgavetildelingWindow4 mUIOppgavetildelingWindow4;
        
        private UIOppgavetildelingWindow5 mUIOppgavetildelingWindow5;
        
        private UIOppgavetildelingWindow6 mUIOppgavetildelingWindow6;
        
        private UIDefinisjonavfilterfoWindow mUIDefinisjonavfilterfoWindow;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIOppgavetildelingWindow7 mUIOppgavetildelingWindow7;
        
        private UIAnsattfilterWindow mUIAnsattfilterWindow;
        
        private UILeggtilansattWindow mUILeggtilansattWindow;
        
        private UIOppgavetildelingWindow8 mUIOppgavetildelingWindow8;
        
        private UIOppgavetildelingWindow9 mUIOppgavetildelingWindow9;
        
        private UIOppgavetildelingWindow10 mUIOppgavetildelingWindow10;
        
        private UIOppgavetildelingWindow11 mUIOppgavetildelingWindow11;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDispGridLocation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckDispGridLocationExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'dpDisponible' DockPanel equals 'dpDisponible'
        /// </summary>
        public string UIDpDisponibleDockPanelName = "dpDisponible";
        
        /// <summary>
        /// Verify that the 'Index' property of 'dpDisponible' DockPanel equals '2'
        /// </summary>
        public int UIDpDisponibleDockPanelIndex = 2;
        
        /// <summary>
        /// Verify that the 'Location' property of 'dpDisponible' DockPanel equals '0, 464'
        /// </summary>
        public string UIDpDisponibleDockPanelLocation = "0, 464";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPatternStep33'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckPatternStep33ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)
        ///'
        /// </summary>
        public string UID0800160008160800160CellText = "( )D (08:00 - 16:00)\r\n( )08-16 (08:00 - 16:00)\r\n( )10-12 (10:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)
        ///'
        /// </summary>
        public string UID0800160008160800160Cell1Text = "( )D (08:00 - 16:00)\r\n( )08-16 (08:00 - 16:00)\r\n( )10-12 (10:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)
        ///'
        /// </summary>
        public string UID0800160008160800160Cell2Text = "( )D (08:00 - 16:00)\r\n( )08-16 (08:00 - 16:00)\r\n( )10-12 (10:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)
        ///'
        /// </summary>
        public string UID0800160008160800160Cell3Text = "( )D (08:00 - 16:00)\r\n( )08-16 (08:00 - 16:00)\r\n( )10-12 (10:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)' cell equals '( )D (08:00 - 16:00)
        ///( )08-16 (08:00 - 16:00)
        ///( )10-12 (10:00 - 12:00)
        ///'
        /// </summary>
        public string UID0800160008160800160Cell4Text = "( )D (08:00 - 16:00)\r\n( )08-16 (08:00 - 16:00)\r\n( )10-12 (10:00 - 12:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleWarningStep_19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleWarningStep_19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Ansatt mangler følgende ønsket kompetanse for å de...' tooltip equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG. Ikke lurt å ha flere oppgaver sammen med denne!!. '
        /// </summary>
        public string UIAnsattmanglerfølgendToolTipName = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL B" +
            "ØR IKKE: STLEG. Ikke lurt å ha flere oppgaver sammen med denne!!. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSaveDeactivatedStep_9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSaveDeactivatedStep_9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Lagre' RibbonBaseButtonItem equals 'False'
        /// </summary>
        public bool UILagreRibbonBaseButtonItemEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckShiftbookDateStep_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckShiftbookDateStep_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1' BarItem equals 'Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1'
        /// </summary>
        public string UIMandag010120241NyttåBarItemText = "Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ahlgren, Klas' cell equals 'Ahlgren, Klas'
        /// </summary>
        public string UIAhlgrenKlasCellText = "Ahlgren, Klas";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Endringene kan ikke lagres' window equals 'Det finnes nye oppgavetildelinger som ikke er gyldig, disse må rettes.'
        /// </summary>
        public string UIEndringenekanikkelagWindowText = "Det finnes nye oppgavetildelinger som ikke er gyldig, disse må rettes.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600KOMPKREVDEKCellText = "( )D (08:00 - 16:00)\r\n( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )(Critical:Oppgave 08-16 overlapper med allerede tildelt eksklusiv oppgave KOMP KREVD/EKSKL KAN IKKE)08-16 (08:00 - 16:00)
        ///( )(Critical:Ingen andre oppgaver samtidig med denne!!)KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600KOMPKREVDEKCellText = "( )D (08:00 - 16:00)\r\n( )(Critical:Oppgave 08-16 overlapper med allerede tildelt " +
            "eksklusiv oppgave KOMP KREVD/EKSKL KAN IKKE)08-16 (08:00 - 16:00)\r\n( )(Critical:" +
            "Ingen andre oppgaver samtidig med denne!!)KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:" +
            "00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///(x)KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600KOMPKREVDEKCellText = "( )D (08:00 - 16:00)\r\n(x)KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_14ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '8,0 / 8,0' cell equals '8,0 / 8,0'
        /// </summary>
        public string UIItem8080CellText = "8,0 / 8,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCell6Text = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )OVER (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600CellText = "( )D (08:00 - 16:00)\r\n( )OVER (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_17ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040CellText = "4,0 / 4,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Appointment' cell equals 'Dagvisning, 4 total events 8:00 a.m.  to 10:00 a.m.  onsdag, januar 3, 2024, Subject 08-10, Time Ledig, 2 of 4'
        /// </summary>
        public string UIAppointmentCellName = "Dagvisning, 4 total events 8:00 a.m.  to 10:00 a.m.  onsdag, januar 3, 2024, Subj" +
            "ect 08-10, Time Ledig, 2 of 4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'leCostPlace' LookUpEdit equals '4500 - OPPGAVER'
        /// </summary>
        public string UILeCostPlaceLookUpEditText = "4500 - OPPGAVER";
        
        /// <summary>
        /// Verify that the 'Text' property of 'leProject' LookUpEdit equals 'P3 - Prosjekt 3'
        /// </summary>
        public string UILeProjectLookUpEditText = "P3 - Prosjekt 3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_24'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_24ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '2,0 / 4,0'
        /// </summary>
        public string UIItem4040CellText = "2,0 / 4,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_25'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_25ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Legges til (5)'
        /// </summary>
        public string UIXtraTabControlHeaderTabPageText = "Legges til (5)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Ignorerte (0)'
        /// </summary>
        public string UIXtraTabControlHeaderTabPage1Text = "Ignorerte (0)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_27'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_27ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'deFromDate' DateTimeEdit equals '01.01.2024'
        /// </summary>
        public string UIDeFromDateDateTimeEditText = "01.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of 'deToDate' DateTimeEdit equals '07.01.2024'
        /// </summary>
        public string UIDeToDateDateTimeEditText = "07.01.2024";
        
        /// <summary>
        /// Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Legges til (5)'
        /// </summary>
        public string UIXtraTabControlHeaderTabPageText = "Legges til (5)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_28'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_28ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Legges til (10)'
        /// </summary>
        public string UIXtraTabControlHeaderTabPageText = "Legges til (10)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Ignorerte (0)'
        /// </summary>
        public string UIXtraTabControlHeaderTabPage1Text = "Ignorerte (0)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_29'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_29ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell1Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell2Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040CellText = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell3Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell4Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCell1Text = "";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell5Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell6Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell7Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell7Text1 = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell8Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of '4,0 / 4,0' cell equals '4,0 / 4,0'
        /// </summary>
        public string UIItem4040Cell9Text = "4,0 / 4,0";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCell2Text = "";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCell3Text = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'Ansattvisning' RibbonBaseButtonItem equals 'True'
        /// </summary>
        public bool UIAnsattvisningRibbonBaseButtonItemChecked = true;
        
        /// <summary>
        /// Verify that the 'Name' property of 'dpSummary' DockPanel equals 'dpSummary'
        /// </summary>
        public string UIDpSummaryDockPanelName = "dpSummary";
        
        /// <summary>
        /// Verify that the 'DockStyle' property of 'dpSummary' DockPanel equals 'Bottom'
        /// </summary>
        public string UIDpSummaryDockPanelDockStyle = "Bottom";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Oppgaver' button equals 'Oppgaver'
        /// </summary>
        public string UIOppgaverButtonText = "Oppgaver";
        
        /// <summary>
        /// Verify that the 'Name' property of 'Oppgavemønster' button equals 'Oppgavemønster'
        /// </summary>
        public string UIOppgavemønsterButtonName = "Oppgavemønster";
        
        /// <summary>
        /// Verify that the 'Name' property of 'Ansatte' button equals 'Ansatte'
        /// </summary>
        public string UIAnsatteButtonName = "Ansatte";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_3_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_3_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Spesifikasjon' button equals 'Spesifikasjon'
        /// </summary>
        public string UISpesifikasjonButtonText = "Spesifikasjon";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Tildeling' button equals 'Tildeling'
        /// </summary>
        public string UITildelingButtonText = "Tildeling";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Søk & erstatt' button equals 'Søk & erstatt'
        /// </summary>
        public string UISøkerstattButtonText = "Søk & erstatt";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_32'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_32ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Legges til (10)'
        /// </summary>
        public string UIXtraTabControlHeaderTabPageText = "Legges til (10)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'XtraTabControlHeader' tab equals 'Ignorerte (4)'
        /// </summary>
        public string UIXtraTabControlHeaderTabPage1Text = "Ignorerte (4)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'onsdag' cell equals 'onsdag'
        /// </summary>
        public string UIOnsdagCellText = "onsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of 'søndag' cell equals 'søndag'
        /// </summary>
        public string UISøndagCellText = "søndag";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_34'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_34ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'dpDisponible' DockPanel equals 'dpDisponible'
        /// </summary>
        public string UIDpDisponibleDockPanelName = "dpDisponible";
        
        /// <summary>
        /// Verify that the 'Visible' property of 'dpDisponible' DockPanel equals 'True'
        /// </summary>
        public bool UIDpDisponibleDockPanelVisible = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'dpDisponible' DockPanel equals 'True'
        /// </summary>
        public bool UIDpDisponibleDockPanelEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_35'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_35ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Dropp, Danny (10:00 - 12:00)' cell equals '( )D - Dropp, Danny (10:00 - 12:00)
        ///'
        /// </summary>
        public string UIDDroppDanny10001200CellText = "( )D - Dropp, Danny (10:00 - 12:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_36'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_36ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (12:00 - 16:00)
        ///'
        /// </summary>
        public string UIItemCell6Text = "( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØN" +
            "SKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (12:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_37'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_37ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'steFromTime' text box equals '13:00'
        /// </summary>
        public string UISteFromTimeEditText = "13:00";
        
        /// <summary>
        /// Verify that the 'Text' property of 'steToTime' text box equals '15:00'
        /// </summary>
        public string UISteToTimeEditText = "15:00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_38'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_38ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Dropp, Danny (08:00 - 16:00)' cell equals '( )D - Dropp, Danny (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDDroppDanny08001600CellText = "( )D - Dropp, Danny (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Dropp, Danny (08:00 - 10:00)
        ///( )D - Dropp, Danny (12:00 - 13:00)
        ///( )D - Dropp, Danny (15:00 - 16:00)' cell equals '( )D - Dropp, Danny (08:00 - 10:00)
        ///( )D - Dropp, Danny (12:00 - 13:00)
        ///( )D - Dropp, Danny (15:00 - 16:00)
        ///'
        /// </summary>
        public string UIDDroppDanny08001000DCellText = "( )D - Dropp, Danny (08:00 - 10:00)\r\n( )D - Dropp, Danny (12:00 - 13:00)\r\n( )D - " +
            "Dropp, Danny (15:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Dropp, Danny (08:00 - 16:00)' cell equals '( )D - Dropp, Danny (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIDDroppDanny08001600Cell1Text = "( )D - Dropp, Danny (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_39'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_39ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )Ahlgren, Klas' cell equals '( )Ahlgren, Klas
        ///'
        /// </summary>
        public string UIAhlgrenKlasCellText = "( )Ahlgren, Klas\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)Dropp, Danny' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)Dropp, Danny
        ///'
        /// </summary>
        public string UIWarningAnsattmanglerCellText = "( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØN" +
            "SKET/EKSKL BØR IKKE: STLEG)Dropp, Danny\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )Cocker, James' cell equals '( )Cocker, James
        ///'
        /// </summary>
        public string UICockerJamesCellText = "( )Cocker, James\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600KOMPKREVDEKCellText = "( )D (08:00 - 16:00)\r\n( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_40'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_40ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )Ahlgren, Klas' cell equals '( )D - Ahlgren, Klas (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIAhlgrenKlasCellText = "( )D - Ahlgren, Klas (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)Dropp, Danny' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (12:00 - 16:00)
        ///'
        /// </summary>
        public string UIWarningAnsattmanglerCellText = "( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØN" +
            "SKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (12:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D - Dropp, Danny (10:00 - 12:00)' cell equals '( )D - Dropp, Danny (10:00 - 12:00)
        ///'
        /// </summary>
        public string UIDDroppDanny10001200CellText = "( )D - Dropp, Danny (10:00 - 12:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )Cocker, James' cell equals '( )BV - Cocker, James (22:00 - 08:00)
        ///'
        /// </summary>
        public string UICockerJamesCellText = "( )BV - Cocker, James (22:00 - 08:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_41'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_41ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblEmployee' label equals 'Cocker, James'
        /// </summary>
        public string UILblEmployeeLabelText = "Cocker, James";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblRoleCode' label equals '22-08 (22:00 - 08:00)'
        /// </summary>
        public string UILblRoleCodeLabelText = "22-08 (22:00 - 08:00)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblDate' label equals 'To 04.01'
        /// </summary>
        public string UILblDateLabelText = "To 04.01";
        
        /// <summary>
        /// Verify that the 'Text' property of '22:00 - 08:00' cell equals '22:00 - 08:00'
        /// </summary>
        public string UIItem22000800CellText = "22:00 - 08:00";
        
        /// <summary>
        /// Verify that the 'Enabled' property of cell equals 'True'
        /// </summary>
        public bool UIItemCellEnabled = true;
        
        /// <summary>
        /// Verify that the 'Visible' property of cell equals 'True'
        /// </summary>
        public bool UIItemCellVisible = true;
        
        /// <summary>
        /// Verify that the 'Text' property of '22:00 - 08:00' cell equals '22:00 - 08:00'
        /// </summary>
        public string UIItem22000800Cell1Text = "22:00 - 08:00";
        
        /// <summary>
        /// Verify that the 'Visible' property of cell equals 'True'
        /// </summary>
        public bool UIItemCell1Visible = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of cell equals 'True'
        /// </summary>
        public bool UIItemCell1Enabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_42'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_42ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals '22-08'
        /// </summary>
        public string UILblContentLabelText = "22-08";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_43'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_43ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)Dropp, Danny' cell equals '(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (12:00 - 16:00)
        ///'
        /// </summary>
        public string UIWarningAnsattmanglerCellText = "(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØN" +
            "SKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (12:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals '(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (13:00 - 15:00)
        ///'
        /// </summary>
        public string UIItemCell6Text = "(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØN" +
            "SKET/EKSKL BØR IKKE: STLEG)D - Dropp, Danny (13:00 - 15:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_44'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_44ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '(x)D - Dropp, Danny (12:00 - 16:00)' cell equals '( )D - Dropp, Danny (12:00 - 16:00)
        ///'
        /// </summary>
        public string UIXDDroppDanny12001600CellText = "( )D - Dropp, Danny (12:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of '(x)D - Dropp, Danny (13:00 - 15:00)' cell equals '( )D - Dropp, Danny (13:00 - 15:00)
        ///'
        /// </summary>
        public string UIXDDroppDanny13001500CellText = "( )D - Dropp, Danny (13:00 - 15:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_6'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_6ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'SPESLEG - Spesialistlege' cell equals 'SPESLEG - Spesialistlege'
        /// </summary>
        public string UISPESLEGSpesialistlegCellText = "SPESLEG - Spesialistlege";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Ingen andre oppgaver samtidig med denne!!.' tooltip equals 'Ingen andre oppgaver samtidig med denne!!. '
        /// </summary>
        public string UIIngenandreoppgaversaToolTipFriendlyName = "Ingen andre oppgaver samtidig med denne!!. ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_7_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_7_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Oppgave 08-16 overlapper med allerede tildelt eksk...' tooltip equals 'Oppgave 08-16 overlapper med allerede tildelt eksk...'
        /// </summary>
        public string UIOppgave0816overlappeToolTipFriendlyName = "Oppgave 08-16 overlapper med allerede tildelt eksk...";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Ingen andre oppgaver samtidig med denne!!'
        /// </summary>
        public string UILblContentLabelText = "Ingen andre oppgaver samtidig med denne!!";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep_8_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep_8_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D (08:00 - 16:00)
        ///( )KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)' cell equals '( )D (08:00 - 16:00)
        ///( )(Critical:Oppgave 08-16 overlapper med allerede tildelt eksklusiv oppgave KOMP KREVD/EKSKL KAN IKKE)08-16 (08:00 - 16:00)
        ///(x)(Critical:Ingen andre oppgaver samtidig med denne!!)KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID08001600KOMPKREVDEKCellText = "( )D (08:00 - 16:00)\r\n( )(Critical:Oppgave 08-16 overlapper med allerede tildelt " +
            "eksklusiv oppgave KOMP KREVD/EKSKL KAN IKKE)08-16 (08:00 - 16:00)\r\n(x)(Critical:" +
            "Ingen andre oppgaver samtidig med denne!!)KOMP KREVD/EKSKL KAN IKKE (08:00 - 16:" +
            "00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep48'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep48ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'KOMP ØNSKET/EKSKL BØR IKKE' cell equals 'KOMP ØNSKET/EKSKL BØR IKKE'
        /// </summary>
        public string UIKOMPØNSKETEKSKLBØRIKCellText = "KOMP ØNSKET/EKSKL BØR IKKE";
        
        /// <summary>
        /// Verify that the 'Text' property of 'MAKS ANTALL ADVARSEL' cell equals 'MAKS ANTALL ADVARSEL'
        /// </summary>
        public string UIMAKSANTALLADVARSELCellText = "MAKS ANTALL ADVARSEL";
        
        /// <summary>
        /// Verify that the 'Text' property of 'KOMP ØNSKET/EKSKL BØR IKKE' cell equals 'KOMP ØNSKET/EKSKL BØR IKKE'
        /// </summary>
        public string UIKOMPØNSKETEKSKLBØRIKCellText1 = "KOMP ØNSKET/EKSKL BØR IKKE";
        
        /// <summary>
        /// Verify that the 'Text' property of 'MAKS ANTALL ADVARSEL' cell equals 'MAKS ANTALL ADVARSEL'
        /// </summary>
        public string UIMAKSANTALLADVARSELCellText1 = "MAKS ANTALL ADVARSEL";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep49'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep49ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'På/Av' RibbonBaseButtonItem equals 'True'
        /// </summary>
        public bool UIPåAvRibbonBaseButtonItemChecked = true;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'På/Av' RibbonBaseButtonItem equals 'True'
        /// </summary>
        public bool UIPåAvRibbonBaseButtonItemChecked1 = true;
        
        /// <summary>
        /// Verify that the 'Name' property of 'Lilla' GalleryItem equals 'Lilla'
        /// </summary>
        public string UILillaGalleryItemName = "Lilla";
        
        /// <summary>
        /// Verify that the 'Name' property of 'C' GalleryItem equals 'C'
        /// </summary>
        public string UICGalleryItemName = "C";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep49_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep49_1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Celeston, Sigge' cell equals 'Celeston, Sigge'
        /// </summary>
        public string UICelestonSiggeCellText = "Celeston, Sigge";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Cocker, James' cell equals 'Cocker, James'
        /// </summary>
        public string UICockerJamesCellText = "Cocker, James";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckStep50'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckStep50ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'beFromWeek' RibbonEditItem equals 'Uke 3 2024'
        /// </summary>
        public string UIBeFromWeekRibbonEditItemValueAsString = "Uke 3 2024";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'beToWeek' RibbonEditItem equals 'Uke 3 2024'
        /// </summary>
        public string UIBeToWeekRibbonEditItemValueAsString = "Uke 3 2024";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSummaryGridLocation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSummaryGridLocationExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'dpSummary' DockPanel equals 'dpSummary'
        /// </summary>
        public string UIDpSummaryDockPanelName = "dpSummary";
        
        /// <summary>
        /// Verify that the 'Index' property of 'dpSummary' DockPanel equals '1'
        /// </summary>
        public int UIDpSummaryDockPanelIndex = 1;
        
        /// <summary>
        /// Verify that the 'Location' property of 'dpSummary' DockPanel equals '0, 664'
        /// </summary>
        public string UIDpSummaryDockPanelLocation = "0, 664";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateEmpFilterStep_49'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CreateEmpFilterStep_49Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Shift + {Down}' in 'gcSelectEmployments' table
        /// </summary>
        public string UIGcSelectEmploymentsTableSendKeys = "{Down}";
        
        /// <summary>
        /// Type 'C [SelectionStart]0[SelectionLength]1' in 'teFilterName' text box
        /// </summary>
        public string UITeFilterNameEditValueAsString = "C [SelectionStart]0[SelectionLength]1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CreateFilterStep_48'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CreateFilterStep_48Params
    {
        
        #region Fields
        /// <summary>
        /// Type '1' in 'clbColorFilter' CheckedListBox
        /// </summary>
        public string UIClbColorFilterCheckedListBoxCheckedIndicesAsString = "1";
        
        /// <summary>
        /// Type 'Lilla' in 'txtFilterName' text box
        /// </summary>
        public string UITxtFilterNameEditValueAsString = "Lilla";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'DecreaseEmpCol'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class DecreaseEmpColParams
    {
        
        #region Fields
        /// <summary>
        /// Type '[View]bgvMainView[Column]colDepartmentName[Width]45' in 'gcDragDropGrid' table
        /// </summary>
        public string UIGcDragDropGridTableColumnWidthAsString = "[View]bgvMainView[Column]colDepartmentName[Width]45";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'MoveViewToShowSunday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class MoveViewToShowSundayParams
    {
        
        #region Fields
        /// <summary>
        /// Type '373' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString = "373";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SummarySettingsStep_14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SummarySettingsStep_14Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'chkShowCoverageBreaks' check box
        /// </summary>
        public bool UIChkShowCoverageBreakCheckBoxChecked = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
        
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStandaloneBarDockConCustom : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainmenuMenuBar : DXMenu
    {
        
        public UIMainmenuMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuItem UIMandag010120241NyttåBarItem
        {
            get
            {
                if ((this.mUIMandag010120241NyttåBarItem == null))
                {
                    this.mUIMandag010120241NyttåBarItem = new DXMenuItem(this);
                    #region Search Criteria
                    this.mUIMandag010120241NyttåBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "lblSelectedDate";
                    this.mUIMandag010120241NyttåBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
                    this.mUIMandag010120241NyttåBarItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIMandag010120241NyttåBarItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuItem mUIMandag010120241NyttåBarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UIDag00167770770FalseDockPanel UIDag00167770770FalseDockPanel
        {
            get
            {
                if ((this.mUIDag00167770770FalseDockPanel == null))
                {
                    this.mUIDag00167770770FalseDockPanel = new UIDag00167770770FalseDockPanel(this);
                }
                return this.mUIDag00167770770FalseDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDag00167770770FalseDockPanel mUIDag00167770770FalseDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDag00167770770FalseDockPanel : DXDockPanel
    {
        
        public UIDag00167770770FalseDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable : DXGrid
    {
        
        public UIGcDayColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXCell UIAhlgrenKlasCell
        {
            get
            {
                if ((this.mUIAhlgrenKlasCell == null))
                {
                    this.mUIAhlgrenKlasCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAhlgrenKlasCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIAhlgrenKlasCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAhlgrenKlasCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAhlgrenKlasCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAhlgrenKlasCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow : DXWindow
    {
        
        public UIOppgavetildelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIVhContentCustom UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public DXTestControl UIOppgavetildelingWindowTitleBar
        {
            get
            {
                if ((this.mUIOppgavetildelingWindowTitleBar == null))
                {
                    this.mUIOppgavetildelingWindowTitleBar = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIOppgavetildelingWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.Name] = "WindowTitleBar";
                    this.mUIOppgavetildelingWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleBar";
                    this.mUIOppgavetildelingWindowTitleBar.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgavetildelingWindowTitleBar;
            }
        }
        
        public UIGcContentClient UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient(this);
                }
                return this.mUIGcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private UIVhContentCustom mUIVhContentCustom;
        
        private DXTestControl mUIOppgavetildelingWindowTitleBar;
        
        private UIGcContentClient mUIGcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgHomeRibbonPage UIRpgHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpgHomeRibbonPage == null))
                {
                    this.mUIRpgHomeRibbonPage = new UIRpgHomeRibbonPage(this);
                }
                return this.mUIRpgHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgHomeRibbonPage mUIRpgHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpgHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgViewRibbonPageGroup UIRpgViewRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgViewRibbonPageGroup == null))
                {
                    this.mUIRpgViewRibbonPageGroup = new UIRpgViewRibbonPageGroup(this);
                }
                return this.mUIRpgViewRibbonPageGroup;
            }
        }
        
        public UIRpgActionsRibbonPageGroup UIRpgActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgActionsRibbonPageGroup == null))
                {
                    this.mUIRpgActionsRibbonPageGroup = new UIRpgActionsRibbonPageGroup(this);
                }
                return this.mUIRpgActionsRibbonPageGroup;
            }
        }
        
        public UIRpNavigationRibbonPageGroup UIRpNavigationRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpNavigationRibbonPageGroup == null))
                {
                    this.mUIRpNavigationRibbonPageGroup = new UIRpNavigationRibbonPageGroup(this);
                }
                return this.mUIRpNavigationRibbonPageGroup;
            }
        }
        
        public UIRpgRoleCodeFilterRibbonPageGroup UIRpgRoleCodeFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgRoleCodeFilterRibbonPageGroup == null))
                {
                    this.mUIRpgRoleCodeFilterRibbonPageGroup = new UIRpgRoleCodeFilterRibbonPageGroup(this);
                }
                return this.mUIRpgRoleCodeFilterRibbonPageGroup;
            }
        }
        
        public UIRpgEmployeeFilterRibbonPageGroup UIRpgEmployeeFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgEmployeeFilterRibbonPageGroup == null))
                {
                    this.mUIRpgEmployeeFilterRibbonPageGroup = new UIRpgEmployeeFilterRibbonPageGroup(this);
                }
                return this.mUIRpgEmployeeFilterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgViewRibbonPageGroup mUIRpgViewRibbonPageGroup;
        
        private UIRpgActionsRibbonPageGroup mUIRpgActionsRibbonPageGroup;
        
        private UIRpNavigationRibbonPageGroup mUIRpNavigationRibbonPageGroup;
        
        private UIRpgRoleCodeFilterRibbonPageGroup mUIRpgRoleCodeFilterRibbonPageGroup;
        
        private UIRpgEmployeeFilterRibbonPageGroup mUIRpgEmployeeFilterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgViewRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgViewRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsattvisningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsattvisningRibbonBaseButtonItem == null))
                {
                    this.mUIAnsattvisningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsattvisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciEmployeeView";
                    this.mUIAnsattvisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsattvisningRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsattvisningRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsattvisningRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgActionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILagreRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILagreRibbonBaseButtonItem == null))
                {
                    this.mUILagreRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiSave";
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILagreRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILagreRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILagreRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpNavigationRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpNavigationRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpNavigation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIOppdaterRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppdaterRibbonBaseButtonItem == null))
                {
                    this.mUIOppdaterRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppdaterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiNavigate";
                    this.mUIOppdaterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppdaterRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppdaterRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonEditItem UIBeFromWeekRibbonEditItem
        {
            get
            {
                if ((this.mUIBeFromWeekRibbonEditItem == null))
                {
                    this.mUIBeFromWeekRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIBeFromWeekRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "beFromWeek";
                    this.mUIBeFromWeekRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIBeFromWeekRibbonEditItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIBeFromWeekRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIOppdaterRibbonBaseButtonItem;
        
        private DXRibbonEditItem mUIBeFromWeekRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgRoleCodeFilterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgRoleCodeFilterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgRoleCodeFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIRpgRoleCodeFilterButton
        {
            get
            {
                if ((this.mUIRpgRoleCodeFilterButton == null))
                {
                    this.mUIRpgRoleCodeFilterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRpgRoleCodeFilterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgRoleCodeFilter";
                    this.mUIRpgRoleCodeFilterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGroupCaptionButton";
                    this.mUIRpgRoleCodeFilterButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIRpgRoleCodeFilterButton;
            }
        }
        
        public DXRibbonButtonItem UIPåAvRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIPåAvRibbonBaseButtonItem == null))
                {
                    this.mUIPåAvRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIPåAvRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[0]";
                    this.mUIPåAvRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIPåAvRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIPåAvRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIRpgRoleCodeFilterButton;
        
        private DXRibbonButtonItem mUIPåAvRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgEmployeeFilterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgEmployeeFilterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgEmployeeFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIRpgEmployeeFilterButton
        {
            get
            {
                if ((this.mUIRpgEmployeeFilterButton == null))
                {
                    this.mUIRpgEmployeeFilterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRpgEmployeeFilterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgEmployeeFilter";
                    this.mUIRpgEmployeeFilterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGroupCaptionButton";
                    this.mUIRpgEmployeeFilterButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIRpgEmployeeFilterButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIRpgEmployeeFilterButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom : DXTestControl
    {
        
        public UIVhContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpSummaryDockPanel UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new UIDpSummaryDockPanel(this);
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        
        public UIPanelContainer2DockPanel UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        
        public UIVhContentCustom2 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom2(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIDpDisponibleDockPanel UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpSummaryDockPanel mUIDpSummaryDockPanel;
        
        private UIPanelContainer2DockPanel mUIPanelContainer2DockPanel;
        
        private UIVhContentCustom2 mUIVhContentCustom;
        
        private UIDpDisponibleDockPanel mUIDpDisponibleDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpSummaryDockPanel : DXDockPanel
    {
        
        public UIDpSummaryDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        
        public DXButton UICloseButtonButton
        {
            get
            {
                if ((this.mUICloseButtonButton == null))
                {
                    this.mUICloseButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "CloseButton";
                    this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
                    this.mUICloseButtonButton.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUICloseButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        
        private DXButton mUICloseButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISumDemandHostViewCustom UISumDemandHostViewCustom
        {
            get
            {
                if ((this.mUISumDemandHostViewCustom == null))
                {
                    this.mUISumDemandHostViewCustom = new UISumDemandHostViewCustom(this);
                }
                return this.mUISumDemandHostViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISumDemandHostViewCustom mUISumDemandHostViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISumDemandHostViewCustom : DXTestControl
    {
        
        public UISumDemandHostViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SumDemandHostView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SumDemandHostView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom : DXTestControl
    {
        
        public UIViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanFilterClient UIPanFilterClient
        {
            get
            {
                if ((this.mUIPanFilterClient == null))
                {
                    this.mUIPanFilterClient = new UIPanFilterClient(this);
                }
                return this.mUIPanFilterClient;
            }
        }
        
        public UIGcSumDemandTable UIGcSumDemandTable
        {
            get
            {
                if ((this.mUIGcSumDemandTable == null))
                {
                    this.mUIGcSumDemandTable = new UIGcSumDemandTable(this);
                }
                return this.mUIGcSumDemandTable;
            }
        }
        #endregion
        
        #region Fields
        private UIPanFilterClient mUIPanFilterClient;
        
        private UIGcSumDemandTable mUIGcSumDemandTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanFilterClient : DXTestControl
    {
        
        public UIPanFilterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkShowCoverageBreakCheckBox
        {
            get
            {
                if ((this.mUIChkShowCoverageBreakCheckBox == null))
                {
                    this.mUIChkShowCoverageBreakCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkShowCoverageBreakCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkShowCoverageBreaks";
                    this.mUIChkShowCoverageBreakCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkShowCoverageBreakCheckBox.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIChkShowCoverageBreakCheckBox;
            }
        }
        
        public DXLookUpEdit UILeSumDemandDataSourcLookUpEdit
        {
            get
            {
                if ((this.mUILeSumDemandDataSourcLookUpEdit == null))
                {
                    this.mUILeSumDemandDataSourcLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeSumDemandDataSourcLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leSumDemandDataSource";
                    this.mUILeSumDemandDataSourcLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUILeSumDemandDataSourcLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkShowCoverageBreakCheckBox;
        
        private DXLookUpEdit mUILeSumDemandDataSourcLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSumDemandTable : DXGrid
    {
        
        public UIGcSumDemandTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemand";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem8080Cell
        {
            get
            {
                if ((this.mUIItem8080Cell == null))
                {
                    this.mUIItem8080Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem8080Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]1[Column]01.01.2024 mandag";
                    this.mUIItem8080Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem8080Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem8080Cell;
            }
        }
        
        public DXCell UIItem4040Cell
        {
            get
            {
                if ((this.mUIItem4040Cell == null))
                {
                    this.mUIItem4040Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]03.01.2024 onsdag";
                    this.mUIItem4040Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell;
            }
        }
        
        public DXCell UIItem4040Cell1
        {
            get
            {
                if ((this.mUIItem4040Cell1 == null))
                {
                    this.mUIItem4040Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]01.01.2024 mandag";
                    this.mUIItem4040Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell1;
            }
        }
        
        public DXCell UIItem4040Cell2
        {
            get
            {
                if ((this.mUIItem4040Cell2 == null))
                {
                    this.mUIItem4040Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]02.01.2024 tirsdag";
                    this.mUIItem4040Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell2;
            }
        }
        
        public DXCell UIItem4040Cell3
        {
            get
            {
                if ((this.mUIItem4040Cell3 == null))
                {
                    this.mUIItem4040Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]04.01.2024 torsdag";
                    this.mUIItem4040Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell3;
            }
        }
        
        public DXCell UIItem4040Cell4
        {
            get
            {
                if ((this.mUIItem4040Cell4 == null))
                {
                    this.mUIItem4040Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]05.01.2024 fredag";
                    this.mUIItem4040Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell4.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell4;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]06.01.2024 lørdag";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]07.01.2024 søndag";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItem4040Cell5
        {
            get
            {
                if ((this.mUIItem4040Cell5 == null))
                {
                    this.mUIItem4040Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]08.01.2024 mandag";
                    this.mUIItem4040Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell5.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell5;
            }
        }
        
        public DXCell UIItem4040Cell6
        {
            get
            {
                if ((this.mUIItem4040Cell6 == null))
                {
                    this.mUIItem4040Cell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]09.01.2024 tirsdag";
                    this.mUIItem4040Cell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell6.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell6;
            }
        }
        
        public DXCell UIItem4040Cell7
        {
            get
            {
                if ((this.mUIItem4040Cell7 == null))
                {
                    this.mUIItem4040Cell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]10.01.2024 onsdag";
                    this.mUIItem4040Cell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell7.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell7;
            }
        }
        
        public DXCell UIItem4040Cell8
        {
            get
            {
                if ((this.mUIItem4040Cell8 == null))
                {
                    this.mUIItem4040Cell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]11.01.2024 torsdag";
                    this.mUIItem4040Cell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell8.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell8;
            }
        }
        
        public DXCell UIItem4040Cell9
        {
            get
            {
                if ((this.mUIItem4040Cell9 == null))
                {
                    this.mUIItem4040Cell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4040Cell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]12.01.2024 fredag";
                    this.mUIItem4040Cell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4040Cell9.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4040Cell9;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]13.01.2024 lørdag";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]14.01.2024 søndag";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem8080Cell;
        
        private DXCell mUIItem4040Cell;
        
        private DXCell mUIItem4040Cell1;
        
        private DXCell mUIItem4040Cell2;
        
        private DXCell mUIItem4040Cell3;
        
        private DXCell mUIItem4040Cell4;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItem4040Cell5;
        
        private DXCell mUIItem4040Cell6;
        
        private DXCell mUIItem4040Cell7;
        
        private DXCell mUIItem4040Cell8;
        
        private DXCell mUIItem4040Cell9;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer1DockPanel UIPanelContainer1DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer1DockPanel == null))
                {
                    this.mUIPanelContainer1DockPanel = new UIPanelContainer1DockPanel(this);
                }
                return this.mUIPanelContainer1DockPanel;
            }
        }
        
        public UIPanelContainer3DockPanel UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer1DockPanel mUIPanelContainer1DockPanel;
        
        private UIPanelContainer3DockPanel mUIPanelContainer3DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer1DockPanel : DXDockPanel
    {
        
        public UIPanelContainer1DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIOppgaverButton
        {
            get
            {
                if ((this.mUIOppgaverButton == null))
                {
                    this.mUIOppgaverButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOppgaverButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgaver";
                    this.mUIOppgaverButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIOppgaverButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgaverButton;
            }
        }
        
        public DXButton UIOppgavemønsterButton
        {
            get
            {
                if ((this.mUIOppgavemønsterButton == null))
                {
                    this.mUIOppgavemønsterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOppgavemønsterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavemønster";
                    this.mUIOppgavemønsterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIOppgavemønsterButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgavemønsterButton;
            }
        }
        
        public DXButton UIAnsatteButton
        {
            get
            {
                if ((this.mUIAnsatteButton == null))
                {
                    this.mUIAnsatteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIAnsatteButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsatteButton;
            }
        }
        
        public UIDpRoleCodesDockPanel UIDpRoleCodesDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodesDockPanel == null))
                {
                    this.mUIDpRoleCodesDockPanel = new UIDpRoleCodesDockPanel(this);
                }
                return this.mUIDpRoleCodesDockPanel;
            }
        }
        
        public UIDpRoleCodePatternsDockPanel UIDpRoleCodePatternsDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodePatternsDockPanel == null))
                {
                    this.mUIDpRoleCodePatternsDockPanel = new UIDpRoleCodePatternsDockPanel(this);
                }
                return this.mUIDpRoleCodePatternsDockPanel;
            }
        }
        
        public UIDpEmployeesDockPanel UIDpEmployeesDockPanel
        {
            get
            {
                if ((this.mUIDpEmployeesDockPanel == null))
                {
                    this.mUIDpEmployeesDockPanel = new UIDpEmployeesDockPanel(this);
                }
                return this.mUIDpEmployeesDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOppgaverButton;
        
        private DXButton mUIOppgavemønsterButton;
        
        private DXButton mUIAnsatteButton;
        
        private UIDpRoleCodesDockPanel mUIDpRoleCodesDockPanel;
        
        private UIDpRoleCodePatternsDockPanel mUIDpRoleCodePatternsDockPanel;
        
        private UIDpEmployeesDockPanel mUIDpEmployeesDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodesDockPanel : DXDockPanel
    {
        
        public UIDpRoleCodesDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel2_ContainerCustom UIDockPanel2_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel2_ContainerCustom == null))
                {
                    this.mUIDockPanel2_ContainerCustom = new UIDockPanel2_ContainerCustom(this);
                }
                return this.mUIDockPanel2_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel2_ContainerCustom mUIDockPanel2_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel2_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel2_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel2_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodeListViewCustom UIRoleCodeListViewCustom
        {
            get
            {
                if ((this.mUIRoleCodeListViewCustom == null))
                {
                    this.mUIRoleCodeListViewCustom = new UIRoleCodeListViewCustom(this);
                }
                return this.mUIRoleCodeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodeListViewCustom mUIRoleCodeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodeListViewCustom : DXTestControl
    {
        
        public UIRoleCodeListViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodeListView";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodesTable UIGcRoleCodesTable
        {
            get
            {
                if ((this.mUIGcRoleCodesTable == null))
                {
                    this.mUIGcRoleCodesTable = new UIGcRoleCodesTable(this);
                }
                return this.mUIGcRoleCodesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodesTable mUIGcRoleCodesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodesTable : DXGrid
    {
        
        public UIGcRoleCodesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIKOMPKREVDEKSKLKANIKKCell
        {
            get
            {
                if ((this.mUIKOMPKREVDEKSKLKANIKKCell == null))
                {
                    this.mUIKOMPKREVDEKSKLKANIKKCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKOMPKREVDEKSKLKANIKKCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]0[Column]colName";
                    this.mUIKOMPKREVDEKSKLKANIKKCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKOMPKREVDEKSKLKANIKKCell.WindowTitles.Add("Oppgavetildeling");
                    this.mUIKOMPKREVDEKSKLKANIKKCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIKOMPKREVDEKSKLKANIKKCell;
            }
        }
        
        public DXCell UIOVERCell
        {
            get
            {
                if ((this.mUIOVERCell == null))
                {
                    this.mUIOVERCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVERCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]13[Column]colName";
                    this.mUIOVERCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVERCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIOVERCell;
            }
        }
        
        public DXCell UIItem0810Cell
        {
            get
            {
                if ((this.mUIItem0810Cell == null))
                {
                    this.mUIItem0810Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0810Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]9[Column]colName";
                    this.mUIItem0810Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0810Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem0810Cell;
            }
        }
        
        public DXCell UIMAKSANTALLSPERRECell
        {
            get
            {
                if ((this.mUIMAKSANTALLSPERRECell == null))
                {
                    this.mUIMAKSANTALLSPERRECell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMAKSANTALLSPERRECell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]1[Column]colName";
                    this.mUIMAKSANTALLSPERRECell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMAKSANTALLSPERRECell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIMAKSANTALLSPERRECell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIKOMPKREVDEKSKLKANIKKCell;
        
        private DXCell mUIOVERCell;
        
        private DXCell mUIItem0810Cell;
        
        private DXCell mUIMAKSANTALLSPERRECell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodePatternsDockPanel : DXDockPanel
    {
        
        public UIDpRoleCodePatternsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodePatterns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodePatternListVCustom UIRoleCodePatternListVCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternListVCustom == null))
                {
                    this.mUIRoleCodePatternListVCustom = new UIRoleCodePatternListVCustom(this);
                }
                return this.mUIRoleCodePatternListVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodePatternListVCustom mUIRoleCodePatternListVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternListVCustom : DXTestControl
    {
        
        public UIRoleCodePatternListVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodePatternsTable UIGcRoleCodePatternsTable
        {
            get
            {
                if ((this.mUIGcRoleCodePatternsTable == null))
                {
                    this.mUIGcRoleCodePatternsTable = new UIGcRoleCodePatternsTable(this);
                }
                return this.mUIGcRoleCodePatternsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodePatternsTable mUIGcRoleCodePatternsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodePatternsTable : DXGrid
    {
        
        public UIGcRoleCodePatternsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatterns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIOVER4510Cell
        {
            get
            {
                if ((this.mUIOVER4510Cell == null))
                {
                    this.mUIOVER4510Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVER4510Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatternsGridControlCell[View]gvRoleCodePatterns[Row]0[Column]colName";
                    this.mUIOVER4510Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVER4510Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIOVER4510Cell;
            }
        }
        
        public DXCell UIOVER4520Cell
        {
            get
            {
                if ((this.mUIOVER4520Cell == null))
                {
                    this.mUIOVER4520Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVER4520Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatternsGridControlCell[View]gvRoleCodePatterns[Row]2[Column]colName";
                    this.mUIOVER4520Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVER4520Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIOVER4520Cell;
            }
        }
        
        public DXCell UIDAGTIDCell
        {
            get
            {
                if ((this.mUIDAGTIDCell == null))
                {
                    this.mUIDAGTIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDAGTIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatternsGridControlCell[View]gvRoleCodePatterns[Row]1[Column]colName";
                    this.mUIDAGTIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDAGTIDCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDAGTIDCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIOVER4510Cell;
        
        private DXCell mUIOVER4520Cell;
        
        private DXCell mUIDAGTIDCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpEmployeesDockPanel : DXDockPanel
    {
        
        public UIDpEmployeesDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer1Custom UIControlContainer1Custom
        {
            get
            {
                if ((this.mUIControlContainer1Custom == null))
                {
                    this.mUIControlContainer1Custom = new UIControlContainer1Custom(this);
                }
                return this.mUIControlContainer1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer1Custom mUIControlContainer1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer1Custom : DXTestControl
    {
        
        public UIControlContainer1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeListViewCustom UIEmployeeListViewCustom
        {
            get
            {
                if ((this.mUIEmployeeListViewCustom == null))
                {
                    this.mUIEmployeeListViewCustom = new UIEmployeeListViewCustom(this);
                }
                return this.mUIEmployeeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeListViewCustom mUIEmployeeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeListViewCustom : DXTestControl
    {
        
        public UIEmployeeListViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcEmployeesTable : DXGrid
    {
        
        public UIGcEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIDroppDannyCell
        {
            get
            {
                if ((this.mUIDroppDannyCell == null))
                {
                    this.mUIDroppDannyCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDroppDannyCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]7[Column]colDisplayName";
                    this.mUIDroppDannyCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDroppDannyCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDroppDannyCell;
            }
        }
        
        public DXCell UICockerJamesCell
        {
            get
            {
                if ((this.mUICockerJamesCell == null))
                {
                    this.mUICockerJamesCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICockerJamesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]5[Column]colDisplayName";
                    this.mUICockerJamesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICockerJamesCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUICockerJamesCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDroppDannyCell;
        
        private DXCell mUICockerJamesCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UISpesifikasjonButton
        {
            get
            {
                if ((this.mUISpesifikasjonButton == null))
                {
                    this.mUISpesifikasjonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Spesifikasjon";
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUISpesifikasjonButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISpesifikasjonButton;
            }
        }
        
        public DXButton UITildelingButton
        {
            get
            {
                if ((this.mUITildelingButton == null))
                {
                    this.mUITildelingButton = new DXButton(this);
                    #region Search Criteria
                    this.mUITildelingButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Tildeling";
                    this.mUITildelingButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUITildelingButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITildelingButton;
            }
        }
        
        public DXButton UISøkerstattButton
        {
            get
            {
                if ((this.mUISøkerstattButton == null))
                {
                    this.mUISøkerstattButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkerstattButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Søk & erstatt";
                    this.mUISøkerstattButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUISøkerstattButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISøkerstattButton;
            }
        }
        
        public UIDpAssignmentDockPanel UIDpAssignmentDockPanel
        {
            get
            {
                if ((this.mUIDpAssignmentDockPanel == null))
                {
                    this.mUIDpAssignmentDockPanel = new UIDpAssignmentDockPanel(this);
                }
                return this.mUIDpAssignmentDockPanel;
            }
        }
        
        public UIDSpecificationsDockPanel UIDSpecificationsDockPanel
        {
            get
            {
                if ((this.mUIDSpecificationsDockPanel == null))
                {
                    this.mUIDSpecificationsDockPanel = new UIDSpecificationsDockPanel(this);
                }
                return this.mUIDSpecificationsDockPanel;
            }
        }
        
        public UIDpSearchAndReplaceDockPanel UIDpSearchAndReplaceDockPanel
        {
            get
            {
                if ((this.mUIDpSearchAndReplaceDockPanel == null))
                {
                    this.mUIDpSearchAndReplaceDockPanel = new UIDpSearchAndReplaceDockPanel(this);
                }
                return this.mUIDpSearchAndReplaceDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISpesifikasjonButton;
        
        private DXButton mUITildelingButton;
        
        private DXButton mUISøkerstattButton;
        
        private UIDpAssignmentDockPanel mUIDpAssignmentDockPanel;
        
        private UIDSpecificationsDockPanel mUIDSpecificationsDockPanel;
        
        private UIDpSearchAndReplaceDockPanel mUIDpSearchAndReplaceDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpAssignmentDockPanel : DXDockPanel
    {
        
        public UIDpAssignmentDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpAssignment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer5Custom UIControlContainer5Custom
        {
            get
            {
                if ((this.mUIControlContainer5Custom == null))
                {
                    this.mUIControlContainer5Custom = new UIControlContainer5Custom(this);
                }
                return this.mUIControlContainer5Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer5Custom mUIControlContainer5Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer5Custom : DXTestControl
    {
        
        public UIControlContainer5Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIAssignmentPropertiesCustom UIAssignmentPropertiesCustom
        {
            get
            {
                if ((this.mUIAssignmentPropertiesCustom == null))
                {
                    this.mUIAssignmentPropertiesCustom = new UIAssignmentPropertiesCustom(this);
                }
                return this.mUIAssignmentPropertiesCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAssignmentPropertiesCustom mUIAssignmentPropertiesCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAssignmentPropertiesCustom : DXTestControl
    {
        
        public UIAssignmentPropertiesCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AssignmentPropertiesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AssignmentPropertiesView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom1 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom1(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom1 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom1 : DXTestControl
    {
        
        public UIVhContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient3 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient3(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient3 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient3 : DXTestControl
    {
        
        public UIPcViewClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UICreateAssignmentsVieCustom UICreateAssignmentsVieCustom
        {
            get
            {
                if ((this.mUICreateAssignmentsVieCustom == null))
                {
                    this.mUICreateAssignmentsVieCustom = new UICreateAssignmentsVieCustom(this);
                }
                return this.mUICreateAssignmentsVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICreateAssignmentsVieCustom mUICreateAssignmentsVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateAssignmentsVieCustom : DXTestControl
    {
        
        public UICreateAssignmentsVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CreateAssignmentsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CreateAssignmentsView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblEmployeeLabel
        {
            get
            {
                if ((this.mUILblEmployeeLabel == null))
                {
                    this.mUILblEmployeeLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblEmployeeLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblEmployee";
                    this.mUILblEmployeeLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblEmployeeLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblEmployeeLabel;
            }
        }
        
        public DXTestControl UILblRoleCodeLabel
        {
            get
            {
                if ((this.mUILblRoleCodeLabel == null))
                {
                    this.mUILblRoleCodeLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblRoleCodeLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblRoleCode";
                    this.mUILblRoleCodeLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblRoleCodeLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblRoleCodeLabel;
            }
        }
        
        public DXTestControl UILblDateLabel
        {
            get
            {
                if ((this.mUILblDateLabel == null))
                {
                    this.mUILblDateLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblDateLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblDate";
                    this.mUILblDateLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblDateLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblDateLabel;
            }
        }
        
        public UIGcAssignmentPeriodsTable UIGcAssignmentPeriodsTable
        {
            get
            {
                if ((this.mUIGcAssignmentPeriodsTable == null))
                {
                    this.mUIGcAssignmentPeriodsTable = new UIGcAssignmentPeriodsTable(this);
                }
                return this.mUIGcAssignmentPeriodsTable;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblEmployeeLabel;
        
        private DXTestControl mUILblRoleCodeLabel;
        
        private DXTestControl mUILblDateLabel;
        
        private UIGcAssignmentPeriodsTable mUIGcAssignmentPeriodsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAssignmentPeriodsTable : DXGrid
    {
        
        public UIGcAssignmentPeriodsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAssignmentPeriods";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem22000800Cell
        {
            get
            {
                if ((this.mUIItem22000800Cell == null))
                {
                    this.mUIItem22000800Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem22000800Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAssignmentPeriodsGridControlCell[View]gvAssignmentPeriods[Row]1[Column]colCapti" +
                        "on";
                    this.mUIItem22000800Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem22000800Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem22000800Cell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAssignmentPeriodsGridControlCell[View]gvAssignmentPeriods[Row]1[Column]colAssig" +
                        "nCommand";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItem22000800Cell1
        {
            get
            {
                if ((this.mUIItem22000800Cell1 == null))
                {
                    this.mUIItem22000800Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem22000800Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAssignmentPeriodsGridControlCell[View]gvAssignmentPeriods[Row]2[Column]colCapti" +
                        "on";
                    this.mUIItem22000800Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem22000800Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem22000800Cell1;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAssignmentPeriodsGridControlCell[View]gvAssignmentPeriods[Row]2[Column]colAssig" +
                        "nCommand";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem22000800Cell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItem22000800Cell1;
        
        private DXCell mUIItemCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDSpecificationsDockPanel : DXDockPanel
    {
        
        public UIDSpecificationsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dSpecifications";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer2Custom UIControlContainer2Custom
        {
            get
            {
                if ((this.mUIControlContainer2Custom == null))
                {
                    this.mUIControlContainer2Custom = new UIControlContainer2Custom(this);
                }
                return this.mUIControlContainer2Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer2Custom mUIControlContainer2Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer2Custom : DXTestControl
    {
        
        public UIControlContainer2Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationPanelViCustom UISpecificationPanelViCustom
        {
            get
            {
                if ((this.mUISpecificationPanelViCustom == null))
                {
                    this.mUISpecificationPanelViCustom = new UISpecificationPanelViCustom(this);
                }
                return this.mUISpecificationPanelViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationPanelViCustom mUISpecificationPanelViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationPanelViCustom : DXTestControl
    {
        
        public UISpecificationPanelViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationPanelView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationPanelView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFlowControlViewHost1Custom UIFlowControlViewHost1Custom
        {
            get
            {
                if ((this.mUIFlowControlViewHost1Custom == null))
                {
                    this.mUIFlowControlViewHost1Custom = new UIFlowControlViewHost1Custom(this);
                }
                return this.mUIFlowControlViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowControlViewHost1Custom mUIFlowControlViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFlowControlViewHost1Custom : DXTestControl
    {
        
        public UIFlowControlViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flowControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationSectionCustom UISpecificationSectionCustom
        {
            get
            {
                if ((this.mUISpecificationSectionCustom == null))
                {
                    this.mUISpecificationSectionCustom = new UISpecificationSectionCustom(this);
                }
                return this.mUISpecificationSectionCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationSectionCustom mUISpecificationSectionCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationSectionCustom : DXTestControl
    {
        
        public UISpecificationSectionCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationSectionView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationSectionView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        
        public UIPcHeaderClient UIPcHeaderClient
        {
            get
            {
                if ((this.mUIPcHeaderClient == null))
                {
                    this.mUIPcHeaderClient = new UIPcHeaderClient(this);
                }
                return this.mUIPcHeaderClient;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom mUIVhDetailsCustom;
        
        private UIPcHeaderClient mUIPcHeaderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom : DXTestControl
    {
        
        public UIVhDetailsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationListVieCustom UISpecificationListVieCustom
        {
            get
            {
                if ((this.mUISpecificationListVieCustom == null))
                {
                    this.mUISpecificationListVieCustom = new UISpecificationListVieCustom(this);
                }
                return this.mUISpecificationListVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationListVieCustom mUISpecificationListVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationListVieCustom : DXTestControl
    {
        
        public UISpecificationListVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFcListCustom UIFcListCustom
        {
            get
            {
                if ((this.mUIFcListCustom == null))
                {
                    this.mUIFcListCustom = new UIFcListCustom(this);
                }
                return this.mUIFcListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFcListCustom mUIFcListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFcListCustom : DXTestControl
    {
        
        public UIFcListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fcList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationItemVieCustom UISpecificationItemVieCustom
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom == null))
                {
                    this.mUISpecificationItemVieCustom = new UISpecificationItemVieCustom(this);
                }
                return this.mUISpecificationItemVieCustom;
            }
        }
        
        public UIEmployeeSpecificatioCustom UIEmployeeSpecificatioCustom
        {
            get
            {
                if ((this.mUIEmployeeSpecificatioCustom == null))
                {
                    this.mUIEmployeeSpecificatioCustom = new UIEmployeeSpecificatioCustom(this);
                }
                return this.mUIEmployeeSpecificatioCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationItemVieCustom mUISpecificationItemVieCustom;
        
        private UIEmployeeSpecificatioCustom mUIEmployeeSpecificatioCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom : DXTestControl
    {
        
        public UISpecificationItemVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeSpecificatioCustom : DXTestControl
    {
        
        public UIEmployeeSpecificatioCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSpecificationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSpecificationView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcNameClient UIPcNameClient
        {
            get
            {
                if ((this.mUIPcNameClient == null))
                {
                    this.mUIPcNameClient = new UIPcNameClient(this);
                }
                return this.mUIPcNameClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcNameClient mUIPcNameClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcNameClient : DXTestControl
    {
        
        public UIPcNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblNameLabel
        {
            get
            {
                if ((this.mUILblNameLabel == null))
                {
                    this.mUILblNameLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblName";
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblNameLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblNameLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblNameLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcHeaderClient : DXTestControl
    {
        
        public UIPcHeaderClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcHeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpSearchAndReplaceDockPanel : DXDockPanel
    {
        
        public UIDpSearchAndReplaceDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSearchAndReplace";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer3Custom UIControlContainer3Custom
        {
            get
            {
                if ((this.mUIControlContainer3Custom == null))
                {
                    this.mUIControlContainer3Custom = new UIControlContainer3Custom(this);
                }
                return this.mUIControlContainer3Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer3Custom mUIControlContainer3Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer3Custom : DXTestControl
    {
        
        public UIControlContainer3Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISearchToolViewCustom UISearchToolViewCustom
        {
            get
            {
                if ((this.mUISearchToolViewCustom == null))
                {
                    this.mUISearchToolViewCustom = new UISearchToolViewCustom(this);
                }
                return this.mUISearchToolViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchToolViewCustom mUISearchToolViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchToolViewCustom : DXTestControl
    {
        
        public UISearchToolViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchToolView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchToolView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdlAssignedRolesLookUpEdit UIDdlAssignedRolesLookUpEdit
        {
            get
            {
                if ((this.mUIDdlAssignedRolesLookUpEdit == null))
                {
                    this.mUIDdlAssignedRolesLookUpEdit = new UIDdlAssignedRolesLookUpEdit(this);
                }
                return this.mUIDdlAssignedRolesLookUpEdit;
            }
        }
        
        public UIDdlAvailableRolesLookUpEdit UIDdlAvailableRolesLookUpEdit
        {
            get
            {
                if ((this.mUIDdlAvailableRolesLookUpEdit == null))
                {
                    this.mUIDdlAvailableRolesLookUpEdit = new UIDdlAvailableRolesLookUpEdit(this);
                }
                return this.mUIDdlAvailableRolesLookUpEdit;
            }
        }
        
        public DXButton UISøkButton
        {
            get
            {
                if ((this.mUISøkButton == null))
                {
                    this.mUISøkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnFind";
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISøkButton.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISøkButton;
            }
        }
        
        public DXTestControl UILblSearchResultLabel
        {
            get
            {
                if ((this.mUILblSearchResultLabel == null))
                {
                    this.mUILblSearchResultLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblSearchResultLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblSearchResult";
                    this.mUILblSearchResultLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblSearchResultLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblSearchResultLabel;
            }
        }
        #endregion
        
        #region Fields
        private UIDdlAssignedRolesLookUpEdit mUIDdlAssignedRolesLookUpEdit;
        
        private UIDdlAvailableRolesLookUpEdit mUIDdlAvailableRolesLookUpEdit;
        
        private DXButton mUISøkButton;
        
        private DXTestControl mUILblSearchResultLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdlAssignedRolesLookUpEdit : DXLookUpEdit
    {
        
        public UIDdlAssignedRolesLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAssignedRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        
        public DXButton UIEditorButton0Button
        {
            get
            {
                if ((this.mUIEditorButton0Button == null))
                {
                    this.mUIEditorButton0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAssignedRolesButton[0]";
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton0Button.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIEditorButton0Button;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow mUIPopupSearchLookUpEdiWindow;
        
        private DXButton mUIEditorButton0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAssignedRolesPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILCCustom UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom : DXTestControl
    {
        
        public UILCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        
        public UILciGridLayoutControlItem UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup mUILcgFindLayoutGroup;
        
        private UILciGridLayoutControlItem mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgFindLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        
        public UILciButtonFindLayoutControlItem UILciButtonFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciButtonFindLayoutControlItem == null))
                {
                    this.mUILciButtonFindLayoutControlItem = new UILciButtonFindLayoutControlItem(this);
                }
                return this.mUILciButtonFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem mUILciLabelFindLayoutControlItem;
        
        private UILciButtonFindLayoutControlItem mUILciButtonFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciLabelFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciButtonFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciButtonFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciButtonFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UISøkButton
        {
            get
            {
                if ((this.mUISøkButton == null))
                {
                    this.mUISøkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btFind";
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISøkButton.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISøkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISøkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciGridLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable : DXGrid
    {
        
        public UIGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIKOMPØNSKETEKSKLBØRIKCell
        {
            get
            {
                if ((this.mUIKOMPØNSKETEKSKLBØRIKCell == null))
                {
                    this.mUIKOMPØNSKETEKSKLBØRIKCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]searchLookupEditAssignedRoles[Row]0[Col" +
                        "umn]gcolAssignedRoleName";
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIKOMPØNSKETEKSKLBØRIKCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIKOMPØNSKETEKSKLBØRIKCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdlAvailableRolesLookUpEdit : DXLookUpEdit
    {
        
        public UIDdlAvailableRolesLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAvailableRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow1 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow1(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        
        public DXButton UIEditorButton0Button
        {
            get
            {
                if ((this.mUIEditorButton0Button == null))
                {
                    this.mUIEditorButton0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAvailableRolesButton[0]";
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton0Button.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIEditorButton0Button;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow1 mUIPopupSearchLookUpEdiWindow;
        
        private DXButton mUIEditorButton0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow1 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAvailableRolesPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom1 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom1(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom1 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom1 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILCCustom1 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom1(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom1 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom1 : DXTestControl
    {
        
        public UILCCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup1 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup1(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup1 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup1 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup1(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        
        public UILciGridLayoutControlItem1 UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem1(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup1 mUILcgFindLayoutGroup;
        
        private UILciGridLayoutControlItem1 mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgFindLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem1 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem1(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        
        public UILciButtonFindLayoutControlItem1 UILciButtonFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciButtonFindLayoutControlItem == null))
                {
                    this.mUILciButtonFindLayoutControlItem = new UILciButtonFindLayoutControlItem1(this);
                }
                return this.mUILciButtonFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem1 mUILciLabelFindLayoutControlItem;
        
        private UILciButtonFindLayoutControlItem1 mUILciButtonFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciLabelFindLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciButtonFindLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciButtonFindLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciButtonFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UISøkButton
        {
            get
            {
                if ((this.mUISøkButton == null))
                {
                    this.mUISøkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btFind";
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISøkButton.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISøkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISøkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciGridLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable1 UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable1(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable1 mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable1 : DXGrid
    {
        
        public UIGridControlTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIMAKSANTALLSPERRECell
        {
            get
            {
                if ((this.mUIMAKSANTALLSPERRECell == null))
                {
                    this.mUIMAKSANTALLSPERRECell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMAKSANTALLSPERRECell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]searchLookupEditAvailableRoles[Row]1[Co" +
                        "lumn]gcolAvailableRoleName";
                    this.mUIMAKSANTALLSPERRECell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMAKSANTALLSPERRECell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIMAKSANTALLSPERRECell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIMAKSANTALLSPERRECell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom2 : DXTestControl
    {
        
        public UIVhContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient4 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient4(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient4 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient4 : DXTestControl
    {
        
        public UIPcViewClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeFocusedManagCustom UIEmployeeFocusedManagCustom
        {
            get
            {
                if ((this.mUIEmployeeFocusedManagCustom == null))
                {
                    this.mUIEmployeeFocusedManagCustom = new UIEmployeeFocusedManagCustom(this);
                }
                return this.mUIEmployeeFocusedManagCustom;
            }
        }
        
        public UIRoleFocusedManageVieCustom UIRoleFocusedManageVieCustom
        {
            get
            {
                if ((this.mUIRoleFocusedManageVieCustom == null))
                {
                    this.mUIRoleFocusedManageVieCustom = new UIRoleFocusedManageVieCustom(this);
                }
                return this.mUIRoleFocusedManageVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeFocusedManagCustom mUIEmployeeFocusedManagCustom;
        
        private UIRoleFocusedManageVieCustom mUIRoleFocusedManageVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFocusedManagCustom : DXTestControl
    {
        
        public UIEmployeeFocusedManagCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFocusedManageView";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIItemGridControl1Custom UIItemGridControl1Custom
        {
            get
            {
                if ((this.mUIItemGridControl1Custom == null))
                {
                    this.mUIItemGridControl1Custom = new UIItemGridControl1Custom(this);
                }
                return this.mUIItemGridControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGridControl1Custom mUIItemGridControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGridControl1Custom : DXTestControl
    {
        
        public UIItemGridControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "itemGridControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom : DXTestControl
    {
        
        public UIDdGridControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable : DXGrid
    {
        
        public UIGcDragDropGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXColumnHeader UIColumnHandle1ColumnHeader
        {
            get
            {
                if ((this.mUIColumnHandle1ColumnHeader == null))
                {
                    this.mUIColumnHandle1ColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUIColumnHandle1ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlColumnHeader[View]bgvMainView[Column]ColumnHandle-1";
                    this.mUIColumnHandle1ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUIColumnHandle1ColumnHeader.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIColumnHandle1ColumnHeader;
            }
        }
        
        public DXCell UIGcDragDropGridGridCoCell
        {
            get
            {
                if ((this.mUIGcDragDropGridGridCoCell == null))
                {
                    this.mUIGcDragDropGridGridCoCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1";
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDragDropGridGridCoCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcDragDropGridGridCoCell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-2";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]ColumnHandle-1-2";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]ColumnHandle-1-3";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-2";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIGcDragDropGridGridCoCell1
        {
            get
            {
                if ((this.mUIGcDragDropGridGridCoCell1 == null))
                {
                    this.mUIGcDragDropGridGridCoCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDragDropGridGridCoCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1";
                    this.mUIGcDragDropGridGridCoCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDragDropGridGridCoCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcDragDropGridGridCoCell1;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-3";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-7";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXScrollBar UIHCrkScrollBarScrollBarControl
        {
            get
            {
                if ((this.mUIHCrkScrollBarScrollBarControl == null))
                {
                    this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
                    #region Search Criteria
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridHCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIHCrkScrollBarScrollBarControl;
            }
        }
        
        public DXCell UID08001600KOMPKREVDEKCell
        {
            get
            {
                if ((this.mUID08001600KOMPKREVDEKCell == null))
                {
                    this.mUID08001600KOMPKREVDEKCell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600KOMPKREVDEKCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col01.01.2024";
                    this.mUID08001600KOMPKREVDEKCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600KOMPKREVDEKCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600KOMPKREVDEKCell;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col02.01.2024";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UID08001600Cell
        {
            get
            {
                if ((this.mUID08001600Cell == null))
                {
                    this.mUID08001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col03.01.2024";
                    this.mUID08001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600Cell;
            }
        }
        
        public DXCell UID08001600Cell1
        {
            get
            {
                if ((this.mUID08001600Cell1 == null))
                {
                    this.mUID08001600Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col01.01.2024";
                    this.mUID08001600Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600Cell1;
            }
        }
        
        public DXCell UID0800160008160800160Cell
        {
            get
            {
                if ((this.mUID0800160008160800160Cell == null))
                {
                    this.mUID0800160008160800160Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID0800160008160800160Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col03.01.2024";
                    this.mUID0800160008160800160Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID0800160008160800160Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID0800160008160800160Cell;
            }
        }
        
        public DXCell UID0800160008160800160Cell1
        {
            get
            {
                if ((this.mUID0800160008160800160Cell1 == null))
                {
                    this.mUID0800160008160800160Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUID0800160008160800160Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col04.01.2024";
                    this.mUID0800160008160800160Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID0800160008160800160Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID0800160008160800160Cell1;
            }
        }
        
        public DXCell UID0800160008160800160Cell2
        {
            get
            {
                if ((this.mUID0800160008160800160Cell2 == null))
                {
                    this.mUID0800160008160800160Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUID0800160008160800160Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col05.01.2024";
                    this.mUID0800160008160800160Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID0800160008160800160Cell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID0800160008160800160Cell2;
            }
        }
        
        public DXCell UID0800160008160800160Cell3
        {
            get
            {
                if ((this.mUID0800160008160800160Cell3 == null))
                {
                    this.mUID0800160008160800160Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUID0800160008160800160Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col06.01.2024";
                    this.mUID0800160008160800160Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID0800160008160800160Cell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID0800160008160800160Cell3;
            }
        }
        
        public DXCell UID0800160008160800160Cell4
        {
            get
            {
                if ((this.mUID0800160008160800160Cell4 == null))
                {
                    this.mUID0800160008160800160Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUID0800160008160800160Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col07.01.2024";
                    this.mUID0800160008160800160Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID0800160008160800160Cell4.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID0800160008160800160Cell4;
            }
        }
        #endregion
        
        #region Fields
        private DXColumnHeader mUIColumnHandle1ColumnHeader;
        
        private DXCell mUIGcDragDropGridGridCoCell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIGcDragDropGridGridCoCell1;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItemCell5;
        
        private DXScrollBar mUIHCrkScrollBarScrollBarControl;
        
        private DXCell mUID08001600KOMPKREVDEKCell;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUID08001600Cell;
        
        private DXCell mUID08001600Cell1;
        
        private DXCell mUID0800160008160800160Cell;
        
        private DXCell mUID0800160008160800160Cell1;
        
        private DXCell mUID0800160008160800160Cell2;
        
        private DXCell mUID0800160008160800160Cell3;
        
        private DXCell mUID0800160008160800160Cell4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleFocusedManageVieCustom : DXTestControl
    {
        
        public UIRoleFocusedManageVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleFocusedManageView";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgContentCustom UIIgContentCustom
        {
            get
            {
                if ((this.mUIIgContentCustom == null))
                {
                    this.mUIIgContentCustom = new UIIgContentCustom(this);
                }
                return this.mUIIgContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgContentCustom mUIIgContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgContentCustom : DXTestControl
    {
        
        public UIIgContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom1 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom1(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom1 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom1 : DXTestControl
    {
        
        public UIDdGridControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable1 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable1(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable1 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable1 : DXGrid
    {
        
        public UIGcDragDropGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]12[Column]ColumnHandle-1-5";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]ColumnHandle-1-5";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]ColumnHandle-1-5";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]ColumnHandle-1-4";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-3";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-5";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXCell UIKOMPØNSKETEKSKLBØRIKCell
        {
            get
            {
                if ((this.mUIKOMPØNSKETEKSKLBØRIKCell == null))
                {
                    this.mUIKOMPØNSKETEKSKLBØRIKCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]bgcRoleCode";
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIKOMPØNSKETEKSKLBØRIKCell;
            }
        }
        
        public DXCell UIDDroppDanny10001200Cell
        {
            get
            {
                if ((this.mUIDDroppDanny10001200Cell == null))
                {
                    this.mUIDDroppDanny10001200Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDDroppDanny10001200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]11[Column]col05.01.2024";
                    this.mUIDDroppDanny10001200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDDroppDanny10001200Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDDroppDanny10001200Cell;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col05.01.2024";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UIAhlgrenKlasCell
        {
            get
            {
                if ((this.mUIAhlgrenKlasCell == null))
                {
                    this.mUIAhlgrenKlasCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAhlgrenKlasCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col01.01.2024";
                    this.mUIAhlgrenKlasCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAhlgrenKlasCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIAhlgrenKlasCell;
            }
        }
        
        public DXCell UIWarningAnsattmanglerCell
        {
            get
            {
                if ((this.mUIWarningAnsattmanglerCell == null))
                {
                    this.mUIWarningAnsattmanglerCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIWarningAnsattmanglerCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col03.01.2024";
                    this.mUIWarningAnsattmanglerCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIWarningAnsattmanglerCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIWarningAnsattmanglerCell;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]col04.01.2024";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXCell UIXDDroppDanny12001600Cell
        {
            get
            {
                if ((this.mUIXDDroppDanny12001600Cell == null))
                {
                    this.mUIXDDroppDanny12001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXDDroppDanny12001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col03.01.2024";
                    this.mUIXDDroppDanny12001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXDDroppDanny12001600Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXDDroppDanny12001600Cell;
            }
        }
        
        public DXCell UIXDDroppDanny13001500Cell
        {
            get
            {
                if ((this.mUIXDDroppDanny13001500Cell == null))
                {
                    this.mUIXDDroppDanny13001500Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXDDroppDanny13001500Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col05.01.2024";
                    this.mUIXDDroppDanny13001500Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXDDroppDanny13001500Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXDDroppDanny13001500Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItemCell5;
        
        private DXCell mUIKOMPØNSKETEKSKLBØRIKCell;
        
        private DXCell mUIDDroppDanny10001200Cell;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUIAhlgrenKlasCell;
        
        private DXCell mUIWarningAnsattmanglerCell;
        
        private DXCell mUIItemCell7;
        
        private DXCell mUIXDDroppDanny12001600Cell;
        
        private DXCell mUIXDDroppDanny13001500Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        
        public DXButton UICloseButtonButton
        {
            get
            {
                if ((this.mUICloseButtonButton == null))
                {
                    this.mUICloseButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "CloseButton";
                    this.mUICloseButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
                    this.mUICloseButtonButton.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUICloseButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom mUIControlContainer4Custom;
        
        private DXButton mUICloseButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom : DXTestControl
    {
        
        public UIControlContainer4Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom : DXTestControl
    {
        
        public UIDispGridViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom : DXTestControl
    {
        
        public UIIgAvailabilityCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom2 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom2(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom2 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom2 : DXTestControl
    {
        
        public UIDdGridControlCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable2 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable2(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable2 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable2 : DXGrid
    {
        
        public UIGcDragDropGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-5";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-5";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIValgtansattCell
        {
            get
            {
                if ((this.mUIValgtansattCell == null))
                {
                    this.mUIValgtansattCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtansattCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]bgcDisp";
                    this.mUIValgtansattCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtansattCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIValgtansattCell;
            }
        }
        
        public DXCell UIBVCelestonSigge22000Cell
        {
            get
            {
                if ((this.mUIBVCelestonSigge22000Cell == null))
                {
                    this.mUIBVCelestonSigge22000Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBVCelestonSigge22000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col05.01.2024";
                    this.mUIBVCelestonSigge22000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBVCelestonSigge22000Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIBVCelestonSigge22000Cell;
            }
        }
        
        public DXCell UIDDroppDanny08001600Cell
        {
            get
            {
                if ((this.mUIDDroppDanny08001600Cell == null))
                {
                    this.mUIDDroppDanny08001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDDroppDanny08001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col01.01.2024";
                    this.mUIDDroppDanny08001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDDroppDanny08001600Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDDroppDanny08001600Cell;
            }
        }
        
        public DXCell UIDDroppDanny08001000DCell
        {
            get
            {
                if ((this.mUIDDroppDanny08001000DCell == null))
                {
                    this.mUIDDroppDanny08001000DCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDDroppDanny08001000DCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col05.01.2024";
                    this.mUIDDroppDanny08001000DCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDDroppDanny08001000DCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDDroppDanny08001000DCell;
            }
        }
        
        public DXCell UIDDroppDanny08001600Cell1
        {
            get
            {
                if ((this.mUIDDroppDanny08001600Cell1 == null))
                {
                    this.mUIDDroppDanny08001600Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIDDroppDanny08001600Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col07.01.2024";
                    this.mUIDDroppDanny08001600Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDDroppDanny08001600Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDDroppDanny08001600Cell1;
            }
        }
        
        public DXCell UICockerJamesCell
        {
            get
            {
                if ((this.mUICockerJamesCell == null))
                {
                    this.mUICockerJamesCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICockerJamesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col03.01.2024";
                    this.mUICockerJamesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICockerJamesCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUICockerJamesCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIValgtansattCell;
        
        private DXCell mUIBVCelestonSigge22000Cell;
        
        private DXCell mUIDDroppDanny08001600Cell;
        
        private DXCell mUIDDroppDanny08001000DCell;
        
        private DXCell mUIDDroppDanny08001600Cell1;
        
        private DXCell mUICockerJamesCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient : DXTestControl
    {
        
        public UIGcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDetailsClient UIGcDetailsClient
        {
            get
            {
                if ((this.mUIGcDetailsClient == null))
                {
                    this.mUIGcDetailsClient = new UIGcDetailsClient(this);
                }
                return this.mUIGcDetailsClient;
            }
        }
        
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddRole";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILeggtilButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDetailsClient mUIGcDetailsClient;
        
        private DXButton mUILeggtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDetailsClient : DXTestControl
    {
        
        public UIGcDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom1 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom1(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom1 mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom1 : DXTestControl
    {
        
        public UIVhDetailsCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient5 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient5(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient5 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient5 : DXTestControl
    {
        
        public UIPcViewClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleDetailsViewCustom UIRoleDetailsViewCustom
        {
            get
            {
                if ((this.mUIRoleDetailsViewCustom == null))
                {
                    this.mUIRoleDetailsViewCustom = new UIRoleDetailsViewCustom(this);
                }
                return this.mUIRoleDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDetailsViewCustom mUIRoleDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleDetailsViewCustom : DXTestControl
    {
        
        public UIRoleDetailsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleDetailsView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client : DXTestControl
    {
        
        public UIPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UITabControlViewHost1TabList UITabControlViewHost1TabList
        {
            get
            {
                if ((this.mUITabControlViewHost1TabList == null))
                {
                    this.mUITabControlViewHost1TabList = new UITabControlViewHost1TabList(this);
                }
                return this.mUITabControlViewHost1TabList;
            }
        }
        #endregion
        
        #region Fields
        private UITabControlViewHost1TabList mUITabControlViewHost1TabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlViewHost1TabList : DXTestControl
    {
        
        public UITabControlViewHost1TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader1";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        
        public UIViewTabPageClient UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private UIViewTabPageClient mUIViewTabPageClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient : DXTestControl
    {
        
        public UIViewTabPageClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1ViewTabPage[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIHostedCompetenceCompCustom UIHostedCompetenceCompCustom
        {
            get
            {
                if ((this.mUIHostedCompetenceCompCustom == null))
                {
                    this.mUIHostedCompetenceCompCustom = new UIHostedCompetenceCompCustom(this);
                }
                return this.mUIHostedCompetenceCompCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIHostedCompetenceCompCustom mUIHostedCompetenceCompCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHostedCompetenceCompCustom : DXTestControl
    {
        
        public UIHostedCompetenceCompCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "HostedCompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HostedCompetenceComparisonView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhCompetenceCustom UIVhCompetenceCustom
        {
            get
            {
                if ((this.mUIVhCompetenceCustom == null))
                {
                    this.mUIVhCompetenceCustom = new UIVhCompetenceCustom(this);
                }
                return this.mUIVhCompetenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhCompetenceCustom mUIVhCompetenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhCompetenceCustom : DXTestControl
    {
        
        public UIVhCompetenceCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhCompetence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient6 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient6(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient6 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient6 : DXTestControl
    {
        
        public UIPcViewClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UICompetenceComparisonCustom UICompetenceComparisonCustom
        {
            get
            {
                if ((this.mUICompetenceComparisonCustom == null))
                {
                    this.mUICompetenceComparisonCustom = new UICompetenceComparisonCustom(this);
                }
                return this.mUICompetenceComparisonCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICompetenceComparisonCustom mUICompetenceComparisonCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICompetenceComparisonCustom : DXTestControl
    {
        
        public UICompetenceComparisonCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CompetenceComparisonView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcCompetenceComparisTable UIGcCompetenceComparisTable
        {
            get
            {
                if ((this.mUIGcCompetenceComparisTable == null))
                {
                    this.mUIGcCompetenceComparisTable = new UIGcCompetenceComparisTable(this);
                }
                return this.mUIGcCompetenceComparisTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcCompetenceComparisTable mUIGcCompetenceComparisTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcCompetenceComparisTable : DXGrid
    {
        
        public UIGcCompetenceComparisTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcCompetenceComparison";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UISPESLEGSpesialistlegCell
        {
            get
            {
                if ((this.mUISPESLEGSpesialistlegCell == null))
                {
                    this.mUISPESLEGSpesialistlegCell = new DXCell(this);
                    #region Search Criteria
                    this.mUISPESLEGSpesialistlegCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcCompetenceComparisonGridControlCell[View]gvCompetenceComparison[Row]0[Column]co" +
                        "lCompetenceName";
                    this.mUISPESLEGSpesialistlegCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISPESLEGSpesialistlegCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISPESLEGSpesialistlegCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUISPESLEGSpesialistlegCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow1 : DXWindow
    {
        
        public UIOppgavetildelingWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom3 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom3(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIGcContentClient1 UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient1(this);
                }
                return this.mUIGcContentClient;
            }
        }
        
        public UISchedulerControl1List UISchedulerControl1List
        {
            get
            {
                if ((this.mUISchedulerControl1List == null))
                {
                    this.mUISchedulerControl1List = new UISchedulerControl1List(this);
                }
                return this.mUISchedulerControl1List;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom3 mUIVhContentCustom;
        
        private UIGcContentClient1 mUIGcContentClient;
        
        private UISchedulerControl1List mUISchedulerControl1List;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom3 : DXTestControl
    {
        
        public UIVhContentCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient7 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient7(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient7 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient7 : DXTestControl
    {
        
        public UIPcViewClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom1 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom1(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom1 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom1 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer2DockPanel1 UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel1(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        
        public DXDockPanel UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new DXDockPanel(this);
                    #region Search Criteria
                    this.mUIDpSummaryDockPanel.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
                    this.mUIDpSummaryDockPanel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
                    this.mUIDpSummaryDockPanel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        
        public UIDpDisponibleDockPanel1 UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel1(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer2DockPanel1 mUIPanelContainer2DockPanel;
        
        private DXDockPanel mUIDpSummaryDockPanel;
        
        private UIDpDisponibleDockPanel1 mUIDpDisponibleDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer3DockPanel1 UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel1(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        
        public UIPanelContainer1DockPanel1 UIPanelContainer1DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer1DockPanel == null))
                {
                    this.mUIPanelContainer1DockPanel = new UIPanelContainer1DockPanel1(this);
                }
                return this.mUIPanelContainer1DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer3DockPanel1 mUIPanelContainer3DockPanel;
        
        private UIPanelContainer1DockPanel1 mUIPanelContainer1DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpAssignmentDockPanel1 UIDpAssignmentDockPanel
        {
            get
            {
                if ((this.mUIDpAssignmentDockPanel == null))
                {
                    this.mUIDpAssignmentDockPanel = new UIDpAssignmentDockPanel1(this);
                }
                return this.mUIDpAssignmentDockPanel;
            }
        }
        
        public DXButton UISøkerstattButton
        {
            get
            {
                if ((this.mUISøkerstattButton == null))
                {
                    this.mUISøkerstattButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkerstattButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Søk & erstatt";
                    this.mUISøkerstattButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUISøkerstattButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISøkerstattButton;
            }
        }
        
        public DXButton UISpesifikasjonButton
        {
            get
            {
                if ((this.mUISpesifikasjonButton == null))
                {
                    this.mUISpesifikasjonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Spesifikasjon";
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUISpesifikasjonButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISpesifikasjonButton;
            }
        }
        
        public DXButton UITildelingButton
        {
            get
            {
                if ((this.mUITildelingButton == null))
                {
                    this.mUITildelingButton = new DXButton(this);
                    #region Search Criteria
                    this.mUITildelingButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Tildeling";
                    this.mUITildelingButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUITildelingButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITildelingButton;
            }
        }
        #endregion
        
        #region Fields
        private UIDpAssignmentDockPanel1 mUIDpAssignmentDockPanel;
        
        private DXButton mUISøkerstattButton;
        
        private DXButton mUISpesifikasjonButton;
        
        private DXButton mUITildelingButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpAssignmentDockPanel1 : DXDockPanel
    {
        
        public UIDpAssignmentDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpAssignment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            #endregion
        }
        
        #region Properties
        public UIControlContainer5Custom1 UIControlContainer5Custom
        {
            get
            {
                if ((this.mUIControlContainer5Custom == null))
                {
                    this.mUIControlContainer5Custom = new UIControlContainer5Custom1(this);
                }
                return this.mUIControlContainer5Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer5Custom1 mUIControlContainer5Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer5Custom1 : DXTestControl
    {
        
        public UIControlContainer5Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            #endregion
        }
        
        #region Properties
        public UIAssignmentPropertiesCustom1 UIAssignmentPropertiesCustom
        {
            get
            {
                if ((this.mUIAssignmentPropertiesCustom == null))
                {
                    this.mUIAssignmentPropertiesCustom = new UIAssignmentPropertiesCustom1(this);
                }
                return this.mUIAssignmentPropertiesCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAssignmentPropertiesCustom1 mUIAssignmentPropertiesCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAssignmentPropertiesCustom1 : DXTestControl
    {
        
        public UIAssignmentPropertiesCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AssignmentPropertiesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AssignmentPropertiesView";
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom4 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom4(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom4 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom4 : DXTestControl
    {
        
        public UIVhContentCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient8 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient8(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient8 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient8 : DXTestControl
    {
        
        public UIPcViewClient8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UICreateAssignmentsVieCustom1 UICreateAssignmentsVieCustom
        {
            get
            {
                if ((this.mUICreateAssignmentsVieCustom == null))
                {
                    this.mUICreateAssignmentsVieCustom = new UICreateAssignmentsVieCustom1(this);
                }
                return this.mUICreateAssignmentsVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICreateAssignmentsVieCustom1 mUICreateAssignmentsVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateAssignmentsVieCustom1 : DXTestControl
    {
        
        public UICreateAssignmentsVieCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CreateAssignmentsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CreateAssignmentsView";
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblRoleCodeLabel
        {
            get
            {
                if ((this.mUILblRoleCodeLabel == null))
                {
                    this.mUILblRoleCodeLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblRoleCodeLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblRoleCode";
                    this.mUILblRoleCodeLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblRoleCodeLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblRoleCodeLabel;
            }
        }
        
        public DXTestControl UILblDateLabel
        {
            get
            {
                if ((this.mUILblDateLabel == null))
                {
                    this.mUILblDateLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblDateLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblDate";
                    this.mUILblDateLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblDateLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblDateLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblRoleCodeLabel;
        
        private DXTestControl mUILblDateLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer1DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer1DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIOppgaverButton
        {
            get
            {
                if ((this.mUIOppgaverButton == null))
                {
                    this.mUIOppgaverButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOppgaverButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgaver";
                    this.mUIOppgaverButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIOppgaverButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgaverButton;
            }
        }
        
        public DXButton UIOppgavemønsterButton
        {
            get
            {
                if ((this.mUIOppgavemønsterButton == null))
                {
                    this.mUIOppgavemønsterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOppgavemønsterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavemønster";
                    this.mUIOppgavemønsterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIOppgavemønsterButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgavemønsterButton;
            }
        }
        
        public UIDpRoleCodePatternsDockPanel1 UIDpRoleCodePatternsDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodePatternsDockPanel == null))
                {
                    this.mUIDpRoleCodePatternsDockPanel = new UIDpRoleCodePatternsDockPanel1(this);
                }
                return this.mUIDpRoleCodePatternsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOppgaverButton;
        
        private DXButton mUIOppgavemønsterButton;
        
        private UIDpRoleCodePatternsDockPanel1 mUIDpRoleCodePatternsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodePatternsDockPanel1 : DXDockPanel
    {
        
        public UIDpRoleCodePatternsDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodePatterns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom1 UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom1(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom1 mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel3_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodePatternListVCustom1 UIRoleCodePatternListVCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternListVCustom == null))
                {
                    this.mUIRoleCodePatternListVCustom = new UIRoleCodePatternListVCustom1(this);
                }
                return this.mUIRoleCodePatternListVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodePatternListVCustom1 mUIRoleCodePatternListVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternListVCustom1 : DXTestControl
    {
        
        public UIRoleCodePatternListVCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodePatternsTable1 UIGcRoleCodePatternsTable
        {
            get
            {
                if ((this.mUIGcRoleCodePatternsTable == null))
                {
                    this.mUIGcRoleCodePatternsTable = new UIGcRoleCodePatternsTable1(this);
                }
                return this.mUIGcRoleCodePatternsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodePatternsTable1 mUIGcRoleCodePatternsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodePatternsTable1 : DXGrid
    {
        
        public UIGcRoleCodePatternsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatterns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIOVER4520Cell
        {
            get
            {
                if ((this.mUIOVER4520Cell == null))
                {
                    this.mUIOVER4520Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOVER4520Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatternsGridControlCell[View]gvRoleCodePatterns[Row]2[Column]colName";
                    this.mUIOVER4520Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOVER4520Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOVER4520Cell;
            }
        }
        
        public DXCell UIDAGTIDCell
        {
            get
            {
                if ((this.mUIDAGTIDCell == null))
                {
                    this.mUIDAGTIDCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDAGTIDCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodePatternsGridControlCell[View]gvRoleCodePatterns[Row]1[Column]colName";
                    this.mUIDAGTIDCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDAGTIDCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDAGTIDCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIOVER4520Cell;
        
        private DXCell mUIDAGTIDCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel1 : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom1 UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom1(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        
        public DXTestControl UITopSeparator
        {
            get
            {
                if ((this.mUITopSeparator == null))
                {
                    this.mUITopSeparator = new DXTestControl(this);
                    #region Search Criteria
                    this.mUITopSeparator.SearchProperties[DXTestControl.PropertyNames.Name] = "Top";
                    this.mUITopSeparator.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelResizeZone";
                    this.mUITopSeparator.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITopSeparator;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom1 mUIControlContainer4Custom;
        
        private DXTestControl mUITopSeparator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom1 : DXTestControl
    {
        
        public UIControlContainer4Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom1 UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom1(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom1 mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom1 : DXTestControl
    {
        
        public UIDispGridViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom1 UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom1(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom1 mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom1 : DXTestControl
    {
        
        public UIIgAvailabilityCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom3 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom3(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom3 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom3 : DXTestControl
    {
        
        public UIDdGridControlCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable3 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable3(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable3 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable3 : DXGrid
    {
        
        public UIGcDragDropGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIGcDragDropGridGridCoCell
        {
            get
            {
                if ((this.mUIGcDragDropGridGridCoCell == null))
                {
                    this.mUIGcDragDropGridGridCoCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1";
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDragDropGridGridCoCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcDragDropGridGridCoCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGcDragDropGridGridCoCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient1 : DXTestControl
    {
        
        public UIGcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDetailsClient1 UIGcDetailsClient
        {
            get
            {
                if ((this.mUIGcDetailsClient == null))
                {
                    this.mUIGcDetailsClient = new UIGcDetailsClient1(this);
                }
                return this.mUIGcDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDetailsClient1 mUIGcDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDetailsClient1 : DXTestControl
    {
        
        public UIGcDetailsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom2 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom2(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom2 mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom2 : DXTestControl
    {
        
        public UIVhDetailsCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient9 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient9(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient9 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient9 : DXTestControl
    {
        
        public UIPcViewClient9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleDetailsViewCustom1 UIRoleDetailsViewCustom
        {
            get
            {
                if ((this.mUIRoleDetailsViewCustom == null))
                {
                    this.mUIRoleDetailsViewCustom = new UIRoleDetailsViewCustom1(this);
                }
                return this.mUIRoleDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDetailsViewCustom1 mUIRoleDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleDetailsViewCustom1 : DXTestControl
    {
        
        public UIRoleDetailsViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleDetailsView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblDescriptionLabel
        {
            get
            {
                if ((this.mUILblDescriptionLabel == null))
                {
                    this.mUILblDescriptionLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblDescriptionLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblDescription";
                    this.mUILblDescriptionLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblDescriptionLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblDescriptionLabel;
            }
        }
        
        public UIPanelControl1Client1 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client1(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblDescriptionLabel;
        
        private UIPanelControl1Client1 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client1 : DXTestControl
    {
        
        public UIPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UITabControlViewHost1TabList1 UITabControlViewHost1TabList
        {
            get
            {
                if ((this.mUITabControlViewHost1TabList == null))
                {
                    this.mUITabControlViewHost1TabList = new UITabControlViewHost1TabList1(this);
                }
                return this.mUITabControlViewHost1TabList;
            }
        }
        #endregion
        
        #region Fields
        private UITabControlViewHost1TabList1 mUITabControlViewHost1TabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlViewHost1TabList1 : DXTestControl
    {
        
        public UITabControlViewHost1TabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewTabPageClient1 UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient1(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        
        public UIViewTabPageClient11 UIViewTabPageClient1
        {
            get
            {
                if ((this.mUIViewTabPageClient1 == null))
                {
                    this.mUIViewTabPageClient1 = new UIViewTabPageClient11(this);
                }
                return this.mUIViewTabPageClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIViewTabPageClient1 mUIViewTabPageClient;
        
        private UIViewTabPageClient11 mUIViewTabPageClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient1 : DXTestControl
    {
        
        public UIViewTabPageClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1ViewTabPage[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAccountingViewCustom UIRoleAccountingViewCustom
        {
            get
            {
                if ((this.mUIRoleAccountingViewCustom == null))
                {
                    this.mUIRoleAccountingViewCustom = new UIRoleAccountingViewCustom(this);
                }
                return this.mUIRoleAccountingViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAccountingViewCustom mUIRoleAccountingViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAccountingViewCustom : DXTestControl
    {
        
        public UIRoleAccountingViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAccountingView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAccountingView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILeCostPlaceLookUpEdit UILeCostPlaceLookUpEdit
        {
            get
            {
                if ((this.mUILeCostPlaceLookUpEdit == null))
                {
                    this.mUILeCostPlaceLookUpEdit = new UILeCostPlaceLookUpEdit(this);
                }
                return this.mUILeCostPlaceLookUpEdit;
            }
        }
        
        public UILeProjectLookUpEdit UILeProjectLookUpEdit
        {
            get
            {
                if ((this.mUILeProjectLookUpEdit == null))
                {
                    this.mUILeProjectLookUpEdit = new UILeProjectLookUpEdit(this);
                }
                return this.mUILeProjectLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILeCostPlaceLookUpEdit mUILeCostPlaceLookUpEdit;
        
        private UILeProjectLookUpEdit mUILeProjectLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeCostPlaceLookUpEdit : DXLookUpEdit
    {
        
        public UILeCostPlaceLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leCostPlace";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow2 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow2(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow2 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow2 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leCostPlacePopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom2 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom2(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom2 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom2 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILCCustom2 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom2(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom2 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom2 : DXTestControl
    {
        
        public UILCCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup2 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup2(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup2 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup2 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup2(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        
        public UILciGridLayoutControlItem2 UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem2(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup2 mUILcgFindLayoutGroup;
        
        private UILciGridLayoutControlItem2 mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgFindLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem2 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem2(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem2 mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciLabelFindLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciGridLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable2 UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable2(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable2 mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable2 : DXGrid
    {
        
        public UIGridControlTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem4500OPPGAVERCell
        {
            get
            {
                if ((this.mUIItem4500OPPGAVERCell == null))
                {
                    this.mUIItem4500OPPGAVERCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4500OPPGAVERCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]searchLookUpEdit1View[Row]31[Column]col" +
                        "DisplayName";
                    this.mUIItem4500OPPGAVERCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4500OPPGAVERCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem4500OPPGAVERCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem4500OPPGAVERCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeProjectLookUpEdit : DXLookUpEdit
    {
        
        public UILeProjectLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leProject";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow3 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow3(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow3 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow3 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leProjectPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom3 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom3(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom3 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom3 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILCCustom3 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom3(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom3 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom3 : DXTestControl
    {
        
        public UILCCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup3 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup3(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup3 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciGridLayoutControlItem3 UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem3(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciGridLayoutControlItem3 mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciGridLayoutControlItem3 : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable3 UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable3(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable3 mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable3 : DXGrid
    {
        
        public UIGridControlTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIP3Prosjekt3Cell
        {
            get
            {
                if ((this.mUIP3Prosjekt3Cell == null))
                {
                    this.mUIP3Prosjekt3Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIP3Prosjekt3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gridView1[Row]2[Column]colDisplayName1";
                    this.mUIP3Prosjekt3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIP3Prosjekt3Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIP3Prosjekt3Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIP3Prosjekt3Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient11 : DXTestControl
    {
        
        public UIViewTabPageClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1ViewTabPage[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            #endregion
        }
        
        #region Properties
        public UIHostedCompetenceCompCustom1 UIHostedCompetenceCompCustom
        {
            get
            {
                if ((this.mUIHostedCompetenceCompCustom == null))
                {
                    this.mUIHostedCompetenceCompCustom = new UIHostedCompetenceCompCustom1(this);
                }
                return this.mUIHostedCompetenceCompCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIHostedCompetenceCompCustom1 mUIHostedCompetenceCompCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHostedCompetenceCompCustom1 : DXTestControl
    {
        
        public UIHostedCompetenceCompCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "HostedCompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HostedCompetenceComparisonView";
            #endregion
        }
        
        #region Properties
        public UIVhCompetenceCustom1 UIVhCompetenceCustom
        {
            get
            {
                if ((this.mUIVhCompetenceCustom == null))
                {
                    this.mUIVhCompetenceCustom = new UIVhCompetenceCustom1(this);
                }
                return this.mUIVhCompetenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhCompetenceCustom1 mUIVhCompetenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhCompetenceCustom1 : DXTestControl
    {
        
        public UIVhCompetenceCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhCompetence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient10 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient10(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient10 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient10 : DXTestControl
    {
        
        public UIPcViewClient10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UICompetenceComparisonCustom1 UICompetenceComparisonCustom
        {
            get
            {
                if ((this.mUICompetenceComparisonCustom == null))
                {
                    this.mUICompetenceComparisonCustom = new UICompetenceComparisonCustom1(this);
                }
                return this.mUICompetenceComparisonCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICompetenceComparisonCustom1 mUICompetenceComparisonCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICompetenceComparisonCustom1 : DXTestControl
    {
        
        public UICompetenceComparisonCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CompetenceComparisonView";
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcCompetenceComparisTable
        {
            get
            {
                if ((this.mUIGcCompetenceComparisTable == null))
                {
                    this.mUIGcCompetenceComparisTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcCompetenceComparisTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcCompetenceComparison";
                    this.mUIGcCompetenceComparisTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
                    this.mUIGcCompetenceComparisTable.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcCompetenceComparisTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcCompetenceComparisTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List : WinList
    {
        
        public UISchedulerControl1List(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinList.PropertyNames.Name, "12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  torsdag, januar 4, 2024", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgoppgaverWindow : DXWindow
    {
        
        public UIVelgoppgaverWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg oppgaver";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIGcRolesTable UIGcRolesTable
        {
            get
            {
                if ((this.mUIGcRolesTable == null))
                {
                    this.mUIGcRolesTable = new UIGcRolesTable(this);
                }
                return this.mUIGcRolesTable;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRolesTable mUIGcRolesTable;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRolesTable : DXGrid
    {
        
        public UIGcRolesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem0816DagtidCell
        {
            get
            {
                if ((this.mUIItem0816DagtidCell == null))
                {
                    this.mUIItem0816DagtidCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0816DagtidCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]1[Column]colRoleCodeDisplayName";
                    this.mUIItem0816DagtidCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0816DagtidCell.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIItem0816DagtidCell;
            }
        }
        
        public DXCell UIKOMPØNSKETEKSKLBØRIKCell
        {
            get
            {
                if ((this.mUIKOMPØNSKETEKSKLBØRIKCell == null))
                {
                    this.mUIKOMPØNSKETEKSKLBØRIKCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]9[Column]colRoleCodeDisplayName";
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIKOMPØNSKETEKSKLBØRIKCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem0816DagtidCell;
        
        private DXCell mUIKOMPØNSKETEKSKLBØRIKCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ingen andre oppgaver samtidig med denne!!. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIIngenandreoppgaversaToolTip
        {
            get
            {
                if ((this.mUIIngenandreoppgaversaToolTip == null))
                {
                    this.mUIIngenandreoppgaversaToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIIngenandreoppgaversaToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Ingen andre oppgaver samtidig med denne!!. ";
                    #endregion
                }
                return this.mUIIngenandreoppgaversaToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIIngenandreoppgaversaToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Oppgave 08-16 overlapper med allerede tildelt eksklusiv oppgave KOMP KREVD/EKSKL " +
                "KAN IKKE. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIOppgave0816overlappeToolTip
        {
            get
            {
                if ((this.mUIOppgave0816overlappeToolTip == null))
                {
                    this.mUIOppgave0816overlappeToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIOppgave0816overlappeToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Oppgave 08-16 overlapper med allerede tildelt eksklusiv oppgave KOMP KREVD/EKSKL " +
                        "KAN IKKE. ";
                    #endregion
                }
                return this.mUIOppgave0816overlappeToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIOppgave0816overlappeToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow2 : WinWindow
    {
        
        public UIOppgavetildelingWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISchedulerControl1List1 UISchedulerControl1List
        {
            get
            {
                if ((this.mUISchedulerControl1List == null))
                {
                    this.mUISchedulerControl1List = new UISchedulerControl1List1(this);
                }
                return this.mUISchedulerControl1List;
            }
        }
        
        public UISchedulerControl1List11 UISchedulerControl1List1
        {
            get
            {
                if ((this.mUISchedulerControl1List1 == null))
                {
                    this.mUISchedulerControl1List1 = new UISchedulerControl1List11(this);
                }
                return this.mUISchedulerControl1List1;
            }
        }
        
        public UISchedulerControl1List2 UISchedulerControl1List2
        {
            get
            {
                if ((this.mUISchedulerControl1List2 == null))
                {
                    this.mUISchedulerControl1List2 = new UISchedulerControl1List2(this);
                }
                return this.mUISchedulerControl1List2;
            }
        }
        
        public UISchedulerControl1List3 UISchedulerControl1List3
        {
            get
            {
                if ((this.mUISchedulerControl1List3 == null))
                {
                    this.mUISchedulerControl1List3 = new UISchedulerControl1List3(this);
                }
                return this.mUISchedulerControl1List3;
            }
        }
        
        public UISchedulerControl1List4 UISchedulerControl1List4
        {
            get
            {
                if ((this.mUISchedulerControl1List4 == null))
                {
                    this.mUISchedulerControl1List4 = new UISchedulerControl1List4(this);
                }
                return this.mUISchedulerControl1List4;
            }
        }
        
        public UISchedulerControl1List5 UISchedulerControl1List5
        {
            get
            {
                if ((this.mUISchedulerControl1List5 == null))
                {
                    this.mUISchedulerControl1List5 = new UISchedulerControl1List5(this);
                }
                return this.mUISchedulerControl1List5;
            }
        }
        #endregion
        
        #region Fields
        private UISchedulerControl1List1 mUISchedulerControl1List;
        
        private UISchedulerControl1List11 mUISchedulerControl1List1;
        
        private UISchedulerControl1List2 mUISchedulerControl1List2;
        
        private UISchedulerControl1List3 mUISchedulerControl1List3;
        
        private UISchedulerControl1List4 mUISchedulerControl1List4;
        
        private UISchedulerControl1List5 mUISchedulerControl1List5;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List1 : WinList
    {
        
        public UISchedulerControl1List1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinList.PropertyNames.Name, "12:00 a.m.  mandag, januar 1, 2024 to 12:00 a.m.  tirsdag, januar 2, 2024", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List11 : WinList
    {
        
        public UISchedulerControl1List11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinList.PropertyNames.Name, "12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  torsdag, januar 4, 2024", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject OVER, Time Ledig, 2 of 2" +
                                "", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List2 : WinList
    {
        
        public UISchedulerControl1List2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinList.PropertyNames.Name, "12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  torsdag, januar 4, 2024", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KOMP ØNSKET/EKSKL BØR IK" +
                                "KE, Time Ledig, 2 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KOMP ØNSKET/EKSKL BØR IK" +
                                "KE, Time Ledig, 2 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        
        public WinCell UIAppointmentCell2
        {
            get
            {
                if ((this.mUIAppointmentCell2 == null))
                {
                    this.mUIAppointmentCell2 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell2.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell2.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KOMP ØNSKET/EKSKL BØR I" +
                                "KKE, Time Ledig, 3 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell2;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        
        private WinCell mUIAppointmentCell1;
        
        private WinCell mUIAppointmentCell2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List3 : WinList
    {
        
        public UISchedulerControl1List3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinList.PropertyNames.Name, "12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  torsdag, januar 4, 2024", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KOMP ØNSKET/EKSKL BØR I" +
                                "KKE, Time Ledig, 3 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List4 : WinList
    {
        
        public UISchedulerControl1List4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinList.PropertyNames.Name, "12:00 a.m.  onsdag, januar 3, 2024 to 12:00 a.m.  torsdag, januar 4, 2024", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "8:00 a.m.  to 10:00 a.m.  onsdag, januar 3, 2024, Subject 08-10, Time Ledig, 2 of" +
                                " 4", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 4:00 p.m.  onsdag, januar 3, 2024, Subject KOMP ØNSKET/EKSKL BØR I" +
                                "KKE, Time Ledig, 4 of 4", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        
        private WinCell mUIAppointmentCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISchedulerControl1List5 : WinList
    {
        
        public UISchedulerControl1List5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinList.PropertyNames.Name, "12:00 a.m.  fredag, januar 5, 2024 to 12:00 a.m.  lørdag, januar 6, 2024", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public WinCell UIAppointmentCell
        {
            get
            {
                if ((this.mUIAppointmentCell == null))
                {
                    this.mUIAppointmentCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 4:00 p.m.  fredag, januar 5, 2024, Subject KOMP ØNSKET/EKSKL BØR I" +
                                "KKE", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell;
            }
        }
        
        public WinCell UIAppointmentCell2
        {
            get
            {
                if ((this.mUIAppointmentCell2 == null))
                {
                    this.mUIAppointmentCell2 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell2.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell2.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "12:00 p.m.  to 3:00 p.m.  fredag, januar 5, 2024, Subject KOMP ØNSKET/EKSKL BØR I" +
                                "KKE", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell2;
            }
        }
        
        public WinCell UIAppointmentCell1
        {
            get
            {
                if ((this.mUIAppointmentCell1 == null))
                {
                    this.mUIAppointmentCell1 = new WinCell(this);
                    #region Search Criteria
                    this.mUIAppointmentCell1.SearchProperties[WinCell.PropertyNames.Value] = "Appointment";
                    this.mUIAppointmentCell1.SearchProperties.Add(new PropertyExpression(WinCell.PropertyNames.Name, "10:00 a.m.  to 12:00 p.m.  fredag, januar 5, 2024, Subject KONTERING, Time Ledig," +
                                " 2 of 3", PropertyExpressionOperator.Contains));
                    this.mUIAppointmentCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAppointmentCell1;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIAppointmentCell;
        
        private WinCell mUIAppointmentCell2;
        
        private WinCell mUIAppointmentCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public DXWindow UIEndringenekanikkelagWindow
        {
            get
            {
                if ((this.mUIEndringenekanikkelagWindow == null))
                {
                    this.mUIEndringenekanikkelagWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIEndringenekanikkelagWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "Endringene kan ikke lagres";
                    this.mUIEndringenekanikkelagWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
                    #endregion
                }
                return this.mUIEndringenekanikkelagWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIEndringenekanikkelagWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL B" +
                "ØR IKKE: STLEG. Ikke lurt å ha flere oppgaver sammen med denne!!. ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinToolTip UIAnsattmanglerfølgendToolTip
        {
            get
            {
                if ((this.mUIAnsattmanglerfølgendToolTip == null))
                {
                    this.mUIAnsattmanglerfølgendToolTip = new WinToolTip(this);
                    #region Search Criteria
                    this.mUIAnsattmanglerfølgendToolTip.SearchProperties[WinControl.PropertyNames.Name] = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave KOMP ØNSKET/EKSKL B" +
                        "ØR IKKE: STLEG. Ikke lurt å ha flere oppgaver sammen med denne!!. ";
                    #endregion
                }
                return this.mUIAnsattmanglerfølgendToolTip;
            }
        }
        #endregion
        
        #region Fields
        private WinToolTip mUIAnsattmanglerfølgendToolTip;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITildeloppgavemønsterWindow : DXWindow
    {
        
        public UITildeloppgavemønsterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Tildel oppgavemønster OVER 4520";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client2 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client2(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client2 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client2 : DXTestControl
    {
        
        public UIPanelControl1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom1 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom1(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom1 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom1 : DXTestControl
    {
        
        public UIViewHost1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient11 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient11(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient11 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient11 : DXTestControl
    {
        
        public UIPcViewClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UIRoleCodePatternAssigCustom UIRoleCodePatternAssigCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternAssigCustom == null))
                {
                    this.mUIRoleCodePatternAssigCustom = new UIRoleCodePatternAssigCustom(this);
                }
                return this.mUIRoleCodePatternAssigCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodePatternAssigCustom mUIRoleCodePatternAssigCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternAssigCustom : DXTestControl
    {
        
        public UIRoleCodePatternAssigCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternAssignmentView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternAssignmentView";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UITabControlTabList UITabControlTabList
        {
            get
            {
                if ((this.mUITabControlTabList == null))
                {
                    this.mUITabControlTabList = new UITabControlTabList(this);
                }
                return this.mUITabControlTabList;
            }
        }
        
        public UIPnlTopClient UIPnlTopClient
        {
            get
            {
                if ((this.mUIPnlTopClient == null))
                {
                    this.mUIPnlTopClient = new UIPnlTopClient(this);
                }
                return this.mUIPnlTopClient;
            }
        }
        #endregion
        
        #region Fields
        private UITabControlTabList mUITabControlTabList;
        
        private UIPnlTopClient mUIPnlTopClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlTabList : DXTestControl
    {
        
        public UITabControlTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlPageHeader0";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage1
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage1 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage1 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlPageHeader1";
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage1.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage1;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlTopClient : DXTestControl
    {
        
        public UIPnlTopClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UIPnlTimePeriodClient UIPnlTimePeriodClient
        {
            get
            {
                if ((this.mUIPnlTimePeriodClient == null))
                {
                    this.mUIPnlTimePeriodClient = new UIPnlTimePeriodClient(this);
                }
                return this.mUIPnlTimePeriodClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlTimePeriodClient mUIPnlTimePeriodClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlTimePeriodClient : DXTestControl
    {
        
        public UIPnlTimePeriodClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTimePeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom2 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom2(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom2 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom2 : DXTestControl
    {
        
        public UIViewHost1Custom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient12 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient12(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient12 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient12 : DXTestControl
    {
        
        public UIPcViewClient12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UIDatePeriodSelectorViCustom UIDatePeriodSelectorViCustom
        {
            get
            {
                if ((this.mUIDatePeriodSelectorViCustom == null))
                {
                    this.mUIDatePeriodSelectorViCustom = new UIDatePeriodSelectorViCustom(this);
                }
                return this.mUIDatePeriodSelectorViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDatePeriodSelectorViCustom mUIDatePeriodSelectorViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDatePeriodSelectorViCustom : DXTestControl
    {
        
        public UIDatePeriodSelectorViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DatePeriodSelectorView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DatePeriodSelectorView";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client3 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client3(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client3 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client3 : DXTestControl
    {
        
        public UIPanelControl1Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIDeFromDateDateTimeEdit
        {
            get
            {
                if ((this.mUIDeFromDateDateTimeEdit == null))
                {
                    this.mUIDeFromDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDeFromDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "deFromDate";
                    this.mUIDeFromDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIDeFromDateDateTimeEdit.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
                    #endregion
                }
                return this.mUIDeFromDateDateTimeEdit;
            }
        }
        
        public DXDateTimePicker UIDeToDateDateTimeEdit
        {
            get
            {
                if ((this.mUIDeToDateDateTimeEdit == null))
                {
                    this.mUIDeToDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDeToDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "deToDate";
                    this.mUIDeToDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIDeToDateDateTimeEdit.WindowTitles.Add("Tildel oppgavemønster OVER 4520");
                    #endregion
                }
                return this.mUIDeToDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIDeFromDateDateTimeEdit;
        
        private DXDateTimePicker mUIDeToDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITildeloppgavemønsterWindow1 : DXWindow
    {
        
        public UITildeloppgavemønsterWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Tildel oppgavemønster DAGTID";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tildel oppgavemønster DAGTID");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client4 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client4(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client4 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client4 : DXTestControl
    {
        
        public UIPanelControl1Client4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster DAGTID");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom3 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom3(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom3 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom3 : DXTestControl
    {
        
        public UIViewHost1Custom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Tildel oppgavemønster DAGTID");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient13 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient13(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient13 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient13 : DXTestControl
    {
        
        public UIPcViewClient13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster DAGTID");
            #endregion
        }
        
        #region Properties
        public UIRoleCodePatternAssigCustom1 UIRoleCodePatternAssigCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternAssigCustom == null))
                {
                    this.mUIRoleCodePatternAssigCustom = new UIRoleCodePatternAssigCustom1(this);
                }
                return this.mUIRoleCodePatternAssigCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodePatternAssigCustom1 mUIRoleCodePatternAssigCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternAssigCustom1 : DXTestControl
    {
        
        public UIRoleCodePatternAssigCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternAssignmentView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternAssignmentView";
            this.WindowTitles.Add("Tildel oppgavemønster DAGTID");
            #endregion
        }
        
        #region Properties
        public UITabControlTabList1 UITabControlTabList
        {
            get
            {
                if ((this.mUITabControlTabList == null))
                {
                    this.mUITabControlTabList = new UITabControlTabList1(this);
                }
                return this.mUITabControlTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITabControlTabList1 mUITabControlTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlTabList1 : DXTestControl
    {
        
        public UITabControlTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("Tildel oppgavemønster DAGTID");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlPageHeader0";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Tildel oppgavemønster DAGTID");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage1
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage1 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage1 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlPageHeader1";
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage1.WindowTitles.Add("Tildel oppgavemønster DAGTID");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage1;
            }
        }
        
        public UITabPage1Client UITabPage1Client
        {
            get
            {
                if ((this.mUITabPage1Client == null))
                {
                    this.mUITabPage1Client = new UITabPage1Client(this);
                }
                return this.mUITabPage1Client;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage1;
        
        private UITabPage1Client mUITabPage1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabPage1Client : DXTestControl
    {
        
        public UITabPage1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabPage1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Tildel oppgavemønster DAGTID");
            #endregion
        }
        
        #region Properties
        public UIGcAddedTable UIGcAddedTable
        {
            get
            {
                if ((this.mUIGcAddedTable == null))
                {
                    this.mUIGcAddedTable = new UIGcAddedTable(this);
                }
                return this.mUIGcAddedTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAddedTable mUIGcAddedTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAddedTable : DXGrid
    {
        
        public UIGcAddedTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAdded";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Tildel oppgavemønster DAGTID");
            #endregion
        }
        
        #region Properties
        public DXCell UIOnsdagCell
        {
            get
            {
                if ((this.mUIOnsdagCell == null))
                {
                    this.mUIOnsdagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOnsdagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAddedGridControlCell[View]gvAdded[Row]0[Column]gcolWeekday";
                    this.mUIOnsdagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOnsdagCell.WindowTitles.Add("Tildel oppgavemønster DAGTID");
                    #endregion
                }
                return this.mUIOnsdagCell;
            }
        }
        
        public DXCell UISøndagCell
        {
            get
            {
                if ((this.mUISøndagCell == null))
                {
                    this.mUISøndagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUISøndagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAddedGridControlCell[View]gvAdded[Row]9[Column]gcolWeekday";
                    this.mUISøndagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUISøndagCell.WindowTitles.Add("Tildel oppgavemønster DAGTID");
                    #endregion
                }
                return this.mUISøndagCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIOnsdagCell;
        
        private DXCell mUISøndagCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow3 : DXWindow
    {
        
        public UIOppgavetildelingWindow3()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcContentClient2 UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient2(this);
                }
                return this.mUIGcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcContentClient2 mUIGcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient2 : DXTestControl
    {
        
        public UIGcContentClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDetailsClient2 UIGcDetailsClient
        {
            get
            {
                if ((this.mUIGcDetailsClient == null))
                {
                    this.mUIGcDetailsClient = new UIGcDetailsClient2(this);
                }
                return this.mUIGcDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDetailsClient2 mUIGcDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDetailsClient2 : DXTestControl
    {
        
        public UIGcDetailsClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom3 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom3(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom3 mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom3 : DXTestControl
    {
        
        public UIVhDetailsCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient14 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient14(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient14 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient14 : DXTestControl
    {
        
        public UIPcViewClient14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleDetailsViewCustom2 UIRoleDetailsViewCustom
        {
            get
            {
                if ((this.mUIRoleDetailsViewCustom == null))
                {
                    this.mUIRoleDetailsViewCustom = new UIRoleDetailsViewCustom2(this);
                }
                return this.mUIRoleDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDetailsViewCustom2 mUIRoleDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleDetailsViewCustom2 : DXTestControl
    {
        
        public UIRoleDetailsViewCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleDetailsView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client5 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client5(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client5 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client5 : DXTestControl
    {
        
        public UIPanelControl1Client5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISteFromTimeEdit
        {
            get
            {
                if ((this.mUISteFromTimeEdit == null))
                {
                    this.mUISteFromTimeEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISteFromTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "steFromTime";
                    this.mUISteFromTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartTimeEdit";
                    this.mUISteFromTimeEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISteFromTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISteFromTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow4 : DXWindow
    {
        
        public UIOppgavetildelingWindow4()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIGcContentClient3 UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient3(this);
                }
                return this.mUIGcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcContentClient3 mUIGcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient3 : DXTestControl
    {
        
        public UIGcContentClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            #endregion
        }
        
        #region Properties
        public UIGcDetailsClient3 UIGcDetailsClient
        {
            get
            {
                if ((this.mUIGcDetailsClient == null))
                {
                    this.mUIGcDetailsClient = new UIGcDetailsClient3(this);
                }
                return this.mUIGcDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDetailsClient3 mUIGcDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDetailsClient3 : DXTestControl
    {
        
        public UIGcDetailsClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom4 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom4(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom4 mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom4 : DXTestControl
    {
        
        public UIVhDetailsCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient15 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient15(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient15 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient15 : DXTestControl
    {
        
        public UIPcViewClient15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIRoleDetailsViewCustom3 UIRoleDetailsViewCustom
        {
            get
            {
                if ((this.mUIRoleDetailsViewCustom == null))
                {
                    this.mUIRoleDetailsViewCustom = new UIRoleDetailsViewCustom3(this);
                }
                return this.mUIRoleDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDetailsViewCustom3 mUIRoleDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleDetailsViewCustom3 : DXTestControl
    {
        
        public UIRoleDetailsViewCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleDetailsView";
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client6 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client6(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client6 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client6 : DXTestControl
    {
        
        public UIPanelControl1Client6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISteToTimeEdit
        {
            get
            {
                if ((this.mUISteToTimeEdit == null))
                {
                    this.mUISteToTimeEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISteToTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "steToTime";
                    this.mUISteToTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartTimeEdit";
                    this.mUISteToTimeEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISteToTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISteToTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow5 : DXWindow
    {
        
        public UIOppgavetildelingWindow5()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom5 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom5(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom5 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom5 : DXTestControl
    {
        
        public UIVhContentCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient16 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient16(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient16 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient16 : DXTestControl
    {
        
        public UIPcViewClient16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom2 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom2(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom2 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom2 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXDockPanel UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new DXDockPanel(this);
                    #region Search Criteria
                    this.mUIDpSummaryDockPanel.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
                    this.mUIDpSummaryDockPanel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
                    this.mUIDpSummaryDockPanel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private DXDockPanel mUIDpSummaryDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow6 : DXWindow
    {
        
        public UIOppgavetildelingWindow6()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom6 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom6(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom6 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom6 : DXTestControl
    {
        
        public UIVhContentCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient17 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient17(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient17 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient17 : DXTestControl
    {
        
        public UIPcViewClient17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom3 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom3(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom3 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom3 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanelDockPanel UIDockPanelDockPanel
        {
            get
            {
                if ((this.mUIDockPanelDockPanel == null))
                {
                    this.mUIDockPanelDockPanel = new UIDockPanelDockPanel(this);
                }
                return this.mUIDockPanelDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanelDockPanel mUIDockPanelDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanelDockPanel : DXDockPanel
    {
        
        public UIDockPanelDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewViewDockPanel[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanelDockPanel1 UIDockPanelDockPanel1
        {
            get
            {
                if ((this.mUIDockPanelDockPanel1 == null))
                {
                    this.mUIDockPanelDockPanel1 = new UIDockPanelDockPanel1(this);
                }
                return this.mUIDockPanelDockPanel1;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanelDockPanel1 mUIDockPanelDockPanel1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanelDockPanel1 : DXDockPanel
    {
        
        public UIDockPanelDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewViewDockPanel[2]DockPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIAnsatteButton
        {
            get
            {
                if ((this.mUIAnsatteButton == null))
                {
                    this.mUIAnsatteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIAnsatteButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsatteButton;
            }
        }
        
        public UIDpRoleCodesDockPanel1 UIDpRoleCodesDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodesDockPanel == null))
                {
                    this.mUIDpRoleCodesDockPanel = new UIDpRoleCodesDockPanel1(this);
                }
                return this.mUIDpRoleCodesDockPanel;
            }
        }
        
        public UIDpEmployeesDockPanel1 UIDpEmployeesDockPanel
        {
            get
            {
                if ((this.mUIDpEmployeesDockPanel == null))
                {
                    this.mUIDpEmployeesDockPanel = new UIDpEmployeesDockPanel1(this);
                }
                return this.mUIDpEmployeesDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAnsatteButton;
        
        private UIDpRoleCodesDockPanel1 mUIDpRoleCodesDockPanel;
        
        private UIDpEmployeesDockPanel1 mUIDpEmployeesDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodesDockPanel1 : DXDockPanel
    {
        
        public UIDpRoleCodesDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel2_ContainerCustom1 UIDockPanel2_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel2_ContainerCustom == null))
                {
                    this.mUIDockPanel2_ContainerCustom = new UIDockPanel2_ContainerCustom1(this);
                }
                return this.mUIDockPanel2_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel2_ContainerCustom1 mUIDockPanel2_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel2_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel2_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel2_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodeListViewCustom1 UIRoleCodeListViewCustom
        {
            get
            {
                if ((this.mUIRoleCodeListViewCustom == null))
                {
                    this.mUIRoleCodeListViewCustom = new UIRoleCodeListViewCustom1(this);
                }
                return this.mUIRoleCodeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodeListViewCustom1 mUIRoleCodeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodeListViewCustom1 : DXTestControl
    {
        
        public UIRoleCodeListViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodeListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodesTable1 UIGcRoleCodesTable
        {
            get
            {
                if ((this.mUIGcRoleCodesTable == null))
                {
                    this.mUIGcRoleCodesTable = new UIGcRoleCodesTable1(this);
                }
                return this.mUIGcRoleCodesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodesTable1 mUIGcRoleCodesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodesTable1 : DXGrid
    {
        
        public UIGcRoleCodesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIKOMPØNSKETEKSKLBØRIKCell
        {
            get
            {
                if ((this.mUIKOMPØNSKETEKSKLBØRIKCell == null))
                {
                    this.mUIKOMPØNSKETEKSKLBØRIKCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]0[Column]colName";
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKOMPØNSKETEKSKLBØRIKCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIKOMPØNSKETEKSKLBØRIKCell;
            }
        }
        
        public DXCell UIMAKSANTALLADVARSELCell
        {
            get
            {
                if ((this.mUIMAKSANTALLADVARSELCell == null))
                {
                    this.mUIMAKSANTALLADVARSELCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMAKSANTALLADVARSELCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]1[Column]colName";
                    this.mUIMAKSANTALLADVARSELCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMAKSANTALLADVARSELCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIMAKSANTALLADVARSELCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIKOMPØNSKETEKSKLBØRIKCell;
        
        private DXCell mUIMAKSANTALLADVARSELCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpEmployeesDockPanel1 : DXDockPanel
    {
        
        public UIDpEmployeesDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer1Custom1 UIControlContainer1Custom
        {
            get
            {
                if ((this.mUIControlContainer1Custom == null))
                {
                    this.mUIControlContainer1Custom = new UIControlContainer1Custom1(this);
                }
                return this.mUIControlContainer1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer1Custom1 mUIControlContainer1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer1Custom1 : DXTestControl
    {
        
        public UIControlContainer1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeListViewCustom1 UIEmployeeListViewCustom
        {
            get
            {
                if ((this.mUIEmployeeListViewCustom == null))
                {
                    this.mUIEmployeeListViewCustom = new UIEmployeeListViewCustom1(this);
                }
                return this.mUIEmployeeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeListViewCustom1 mUIEmployeeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeListViewCustom1 : DXTestControl
    {
        
        public UIEmployeeListViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable1 UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable1(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable1 mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcEmployeesTable1 : DXGrid
    {
        
        public UIGcEmployeesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UICelestonSiggeCell
        {
            get
            {
                if ((this.mUICelestonSiggeCell == null))
                {
                    this.mUICelestonSiggeCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICelestonSiggeCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]colDisplayName";
                    this.mUICelestonSiggeCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICelestonSiggeCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUICelestonSiggeCell;
            }
        }
        
        public DXCell UICockerJamesCell
        {
            get
            {
                if ((this.mUICockerJamesCell == null))
                {
                    this.mUICockerJamesCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICockerJamesCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]1[Column]colDisplayName";
                    this.mUICockerJamesCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICockerJamesCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUICockerJamesCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUICelestonSiggeCell;
        
        private DXCell mUICockerJamesCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDefinisjonavfilterfoWindow : DXWindow
    {
        
        public UIDefinisjonavfilterfoWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Definisjon av filter for oppgave";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public UIPcRowSelectionClient UIPcRowSelectionClient
        {
            get
            {
                if ((this.mUIPcRowSelectionClient == null))
                {
                    this.mUIPcRowSelectionClient = new UIPcRowSelectionClient(this);
                }
                return this.mUIPcRowSelectionClient;
            }
        }
        
        public UIGcSavedViewsClient UIGcSavedViewsClient
        {
            get
            {
                if ((this.mUIGcSavedViewsClient == null))
                {
                    this.mUIGcSavedViewsClient = new UIGcSavedViewsClient(this);
                }
                return this.mUIGcSavedViewsClient;
            }
        }
        
        public UIPcBottomClient UIPcBottomClient
        {
            get
            {
                if ((this.mUIPcBottomClient == null))
                {
                    this.mUIPcBottomClient = new UIPcBottomClient(this);
                }
                return this.mUIPcBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcRowSelectionClient mUIPcRowSelectionClient;
        
        private UIGcSavedViewsClient mUIGcSavedViewsClient;
        
        private UIPcBottomClient mUIPcBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcRowSelectionClient : DXTestControl
    {
        
        public UIPcRowSelectionClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcRowSelection";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public UIGcColorFilterClient UIGcColorFilterClient
        {
            get
            {
                if ((this.mUIGcColorFilterClient == null))
                {
                    this.mUIGcColorFilterClient = new UIGcColorFilterClient(this);
                }
                return this.mUIGcColorFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcColorFilterClient mUIGcColorFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcColorFilterClient : DXTestControl
    {
        
        public UIGcColorFilterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcColorFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public DXCheckedListBox UIClbColorFilterCheckedListBox
        {
            get
            {
                if ((this.mUIClbColorFilterCheckedListBox == null))
                {
                    this.mUIClbColorFilterCheckedListBox = new DXCheckedListBox(this);
                    #region Search Criteria
                    this.mUIClbColorFilterCheckedListBox.SearchProperties[DXTestControl.PropertyNames.Name] = "clbColorFilter";
                    this.mUIClbColorFilterCheckedListBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckedListBoxControl";
                    this.mUIClbColorFilterCheckedListBox.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIClbColorFilterCheckedListBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckedListBox mUIClbColorFilterCheckedListBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSavedViewsClient : DXTestControl
    {
        
        public UIGcSavedViewsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSavedViews";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public DXButton UILagresomButton
        {
            get
            {
                if ((this.mUILagresomButton == null))
                {
                    this.mUILagresomButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILagresomButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbSaveViewAs";
                    this.mUILagresomButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUILagresomButton.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUILagresomButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILagresomButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcBottomClient : DXTestControl
    {
        
        public UIPcBottomClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public DXButton UIBrukButton
        {
            get
            {
                if ((this.mUIBrukButton == null))
                {
                    this.mUIBrukButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnApplyCurrentView";
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBrukButton.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIBrukButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBrukButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupContainerBarConMenu : DXMenu
    {
        
        public UIPopupContainerBarConMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            #endregion
        }
        
        #region Properties
        public UIPccFilterNameClient UIPccFilterNameClient
        {
            get
            {
                if ((this.mUIPccFilterNameClient == null))
                {
                    this.mUIPccFilterNameClient = new UIPccFilterNameClient(this);
                }
                return this.mUIPccFilterNameClient;
            }
        }
        
        public UIPopupControlContaineClient UIPopupControlContaineClient
        {
            get
            {
                if ((this.mUIPopupControlContaineClient == null))
                {
                    this.mUIPopupControlContaineClient = new UIPopupControlContaineClient(this);
                }
                return this.mUIPopupControlContaineClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPccFilterNameClient mUIPccFilterNameClient;
        
        private UIPopupControlContaineClient mUIPopupControlContaineClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPccFilterNameClient : DXTestControl
    {
        
        public UIPccFilterNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pccFilterName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            #endregion
        }
        
        #region Properties
        public UIPnlFilterNameClient UIPnlFilterNameClient
        {
            get
            {
                if ((this.mUIPnlFilterNameClient == null))
                {
                    this.mUIPnlFilterNameClient = new UIPnlFilterNameClient(this);
                }
                return this.mUIPnlFilterNameClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlFilterNameClient mUIPnlFilterNameClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlFilterNameClient : DXTestControl
    {
        
        public UIPnlFilterNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlFilterName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtFilterNameEdit
        {
            get
            {
                if ((this.mUITxtFilterNameEdit == null))
                {
                    this.mUITxtFilterNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtFilterNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtFilterName";
                    this.mUITxtFilterNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    #endregion
                }
                return this.mUITxtFilterNameEdit;
            }
        }
        
        public DXButton UIOKLagreButton
        {
            get
            {
                if ((this.mUIOKLagreButton == null))
                {
                    this.mUIOKLagreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKLagreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSaveFilterName";
                    this.mUIOKLagreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    #endregion
                }
                return this.mUIOKLagreButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtFilterNameEdit;
        
        private DXButton mUIOKLagreButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupControlContaineClient : DXTestControl
    {
        
        public UIPopupControlContaineClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            #endregion
        }
        
        #region Properties
        public UIPnlSaveAsPanelClient UIPnlSaveAsPanelClient
        {
            get
            {
                if ((this.mUIPnlSaveAsPanelClient == null))
                {
                    this.mUIPnlSaveAsPanelClient = new UIPnlSaveAsPanelClient(this);
                }
                return this.mUIPnlSaveAsPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlSaveAsPanelClient mUIPnlSaveAsPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlSaveAsPanelClient : DXTestControl
    {
        
        public UIPnlSaveAsPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlSaveAsPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFilterNameEdit
        {
            get
            {
                if ((this.mUITeFilterNameEdit == null))
                {
                    this.mUITeFilterNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFilterNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFilterName";
                    this.mUITeFilterNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    #endregion
                }
                return this.mUITeFilterNameEdit;
            }
        }
        
        public DXButton UIOKLagreButton
        {
            get
            {
                if ((this.mUIOKLagreButton == null))
                {
                    this.mUIOKLagreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKLagreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnConfirmSaveFilterAs";
                    this.mUIOKLagreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUIOKLagreButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFilterNameEdit;
        
        private DXButton mUIOKLagreButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow7 : DXWindow
    {
        
        public UIOppgavetildelingWindow7()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom7 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom7(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom7 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom7 : DXTestControl
    {
        
        public UIVhContentCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient18 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient18(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient18 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient18 : DXTestControl
    {
        
        public UIPcViewClient18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom4 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom4(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom4 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom4 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom8 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom8(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom8 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom8 : DXTestControl
    {
        
        public UIVhContentCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient19 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient19(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient19 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient19 : DXTestControl
    {
        
        public UIPcViewClient19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleFocusedManageVieCustom1 UIRoleFocusedManageVieCustom
        {
            get
            {
                if ((this.mUIRoleFocusedManageVieCustom == null))
                {
                    this.mUIRoleFocusedManageVieCustom = new UIRoleFocusedManageVieCustom1(this);
                }
                return this.mUIRoleFocusedManageVieCustom;
            }
        }
        
        public UIEmployeeFocusedManagCustom1 UIEmployeeFocusedManagCustom
        {
            get
            {
                if ((this.mUIEmployeeFocusedManagCustom == null))
                {
                    this.mUIEmployeeFocusedManagCustom = new UIEmployeeFocusedManagCustom1(this);
                }
                return this.mUIEmployeeFocusedManagCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleFocusedManageVieCustom1 mUIRoleFocusedManageVieCustom;
        
        private UIEmployeeFocusedManagCustom1 mUIEmployeeFocusedManagCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleFocusedManageVieCustom1 : DXTestControl
    {
        
        public UIRoleFocusedManageVieCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleFocusedManageView";
            #endregion
        }
        
        #region Properties
        public UIIgContentCustom1 UIIgContentCustom
        {
            get
            {
                if ((this.mUIIgContentCustom == null))
                {
                    this.mUIIgContentCustom = new UIIgContentCustom1(this);
                }
                return this.mUIIgContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgContentCustom1 mUIIgContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgContentCustom1 : DXTestControl
    {
        
        public UIIgContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom4 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom4(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom4 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom4 : DXTestControl
    {
        
        public UIDdGridControlCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable4 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable4(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable4 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable4 : DXGrid
    {
        
        public UIGcDragDropGridTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            #endregion
        }
        
        #region Properties
        public DXCell UIMAKSANTALLADVARSELCell
        {
            get
            {
                if ((this.mUIMAKSANTALLADVARSELCell == null))
                {
                    this.mUIMAKSANTALLADVARSELCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMAKSANTALLADVARSELCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]bgcRoleCode";
                    this.mUIMAKSANTALLADVARSELCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMAKSANTALLADVARSELCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIMAKSANTALLADVARSELCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIMAKSANTALLADVARSELCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFocusedManagCustom1 : DXTestControl
    {
        
        public UIEmployeeFocusedManagCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFocusedManageView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIItemGridControl1Custom1 UIItemGridControl1Custom
        {
            get
            {
                if ((this.mUIItemGridControl1Custom == null))
                {
                    this.mUIItemGridControl1Custom = new UIItemGridControl1Custom1(this);
                }
                return this.mUIItemGridControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGridControl1Custom1 mUIItemGridControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGridControl1Custom1 : DXTestControl
    {
        
        public UIItemGridControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "itemGridControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom5 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom5(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom5 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom5 : DXTestControl
    {
        
        public UIDdGridControlCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable5 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable5(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable5 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable5 : DXGrid
    {
        
        public UIGcDragDropGridTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UID08001600Cell
        {
            get
            {
                if ((this.mUID08001600Cell == null))
                {
                    this.mUID08001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col01.01.2024";
                    this.mUID08001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600Cell;
            }
        }
        
        public DXCell UID08001600KOMPKREVDEKCell
        {
            get
            {
                if ((this.mUID08001600KOMPKREVDEKCell == null))
                {
                    this.mUID08001600KOMPKREVDEKCell = new DXCell(this);
                    #region Search Criteria
                    this.mUID08001600KOMPKREVDEKCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col01.01.2024";
                    this.mUID08001600KOMPKREVDEKCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID08001600KOMPKREVDEKCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID08001600KOMPKREVDEKCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUID08001600Cell;
        
        private DXCell mUID08001600KOMPKREVDEKCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAnsattfilterWindow : DXWindow
    {
        
        public UIAnsattfilterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansattfilter";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client7 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client7(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        
        public DXButton UILagresomButton
        {
            get
            {
                if ((this.mUILagresomButton == null))
                {
                    this.mUILagresomButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILagresomButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbSaveFilterAs";
                    this.mUILagresomButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUILagresomButton.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUILagresomButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client7 mUIPanelControl1Client;
        
        private DXButton mUILagresomButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client7 : DXTestControl
    {
        
        public UIPanelControl1Client7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom4 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom4(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom4 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom4 : DXTestControl
    {
        
        public UIViewHost1Custom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient20 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient20(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient20 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient20 : DXTestControl
    {
        
        public UIPcViewClient20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIEmployeeFilterEditViCustom UIEmployeeFilterEditViCustom
        {
            get
            {
                if ((this.mUIEmployeeFilterEditViCustom == null))
                {
                    this.mUIEmployeeFilterEditViCustom = new UIEmployeeFilterEditViCustom(this);
                }
                return this.mUIEmployeeFilterEditViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeFilterEditViCustom mUIEmployeeFilterEditViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFilterEditViCustom : DXTestControl
    {
        
        public UIEmployeeFilterEditViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFilterEditView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFilterEditView";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAdd";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILeggtilButton.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILeggtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeggtilansattWindow : DXWindow
    {
        
        public UILeggtilansattWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatt");
            #endregion
        }
        
        #region Properties
        public UIPnlContentsClient UIPnlContentsClient
        {
            get
            {
                if ((this.mUIPnlContentsClient == null))
                {
                    this.mUIPnlContentsClient = new UIPnlContentsClient(this);
                }
                return this.mUIPnlContentsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlContentsClient mUIPnlContentsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlContentsClient : DXTestControl
    {
        
        public UIPnlContentsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlContents";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatt");
            #endregion
        }
        
        #region Properties
        public UIGcSelectEmploymentsTable UIGcSelectEmploymentsTable
        {
            get
            {
                if ((this.mUIGcSelectEmploymentsTable == null))
                {
                    this.mUIGcSelectEmploymentsTable = new UIGcSelectEmploymentsTable(this);
                }
                return this.mUIGcSelectEmploymentsTable;
            }
        }
        
        public UIPnlBottomClient UIPnlBottomClient
        {
            get
            {
                if ((this.mUIPnlBottomClient == null))
                {
                    this.mUIPnlBottomClient = new UIPnlBottomClient(this);
                }
                return this.mUIPnlBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcSelectEmploymentsTable mUIGcSelectEmploymentsTable;
        
        private UIPnlBottomClient mUIPnlBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSelectEmploymentsTable : DXGrid
    {
        
        public UIGcSelectEmploymentsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSelectEmployments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatt");
            #endregion
        }
        
        #region Properties
        public DXCell UICelestonSiggeCell
        {
            get
            {
                if ((this.mUICelestonSiggeCell == null))
                {
                    this.mUICelestonSiggeCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICelestonSiggeCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSelectEmploymentsGridControlCell[View]gvSelectEmployments[Row]4[Column]colEmplo" +
                        "yeeName";
                    this.mUICelestonSiggeCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICelestonSiggeCell.WindowTitles.Add("Legg til ansatt");
                    #endregion
                }
                return this.mUICelestonSiggeCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUICelestonSiggeCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlBottomClient : DXTestControl
    {
        
        public UIPnlBottomClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatt");
            #endregion
        }
        
        #region Properties
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILeggtilButton.WindowTitles.Add("Legg til ansatt");
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILeggtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow8 : DXWindow
    {
        
        public UIOppgavetildelingWindow8()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon1 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon1(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon1 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon1 : DXRibbon
    {
        
        public UIRcMenuRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            #endregion
        }
        
        #region Properties
        public UIRpgHomeRibbonPage1 UIRpgHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpgHomeRibbonPage == null))
                {
                    this.mUIRpgHomeRibbonPage = new UIRpgHomeRibbonPage1(this);
                }
                return this.mUIRpgHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgHomeRibbonPage1 mUIRpgHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgHomeRibbonPage1 : DXRibbonPage
    {
        
        public UIRpgHomeRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            #endregion
        }
        
        #region Properties
        public UIRpgEmployeeFilterRibbonPageGroup1 UIRpgEmployeeFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgEmployeeFilterRibbonPageGroup == null))
                {
                    this.mUIRpgEmployeeFilterRibbonPageGroup = new UIRpgEmployeeFilterRibbonPageGroup1(this);
                }
                return this.mUIRpgEmployeeFilterRibbonPageGroup;
            }
        }
        
        public UIRpgRoleCodeFilterRibbonPageGroup1 UIRpgRoleCodeFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgRoleCodeFilterRibbonPageGroup == null))
                {
                    this.mUIRpgRoleCodeFilterRibbonPageGroup = new UIRpgRoleCodeFilterRibbonPageGroup1(this);
                }
                return this.mUIRpgRoleCodeFilterRibbonPageGroup;
            }
        }
        
        public UIRpNavigationRibbonPageGroup1 UIRpNavigationRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpNavigationRibbonPageGroup == null))
                {
                    this.mUIRpNavigationRibbonPageGroup = new UIRpNavigationRibbonPageGroup1(this);
                }
                return this.mUIRpNavigationRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgEmployeeFilterRibbonPageGroup1 mUIRpgEmployeeFilterRibbonPageGroup;
        
        private UIRpgRoleCodeFilterRibbonPageGroup1 mUIRpgRoleCodeFilterRibbonPageGroup;
        
        private UIRpNavigationRibbonPageGroup1 mUIRpNavigationRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgEmployeeFilterRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgEmployeeFilterRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgEmployeeFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIPåAvRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIPåAvRibbonBaseButtonItem == null))
                {
                    this.mUIPåAvRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIPåAvRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[0]";
                    this.mUIPåAvRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIPåAvRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIPåAvRibbonBaseButtonItem;
            }
        }
        
        public UIRibbonGalleryBarItemRibbonGallery UIRibbonGalleryBarItemRibbonGallery
        {
            get
            {
                if ((this.mUIRibbonGalleryBarItemRibbonGallery == null))
                {
                    this.mUIRibbonGalleryBarItemRibbonGallery = new UIRibbonGalleryBarItemRibbonGallery(this);
                }
                return this.mUIRibbonGalleryBarItemRibbonGallery;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIPåAvRibbonBaseButtonItem;
        
        private UIRibbonGalleryBarItemRibbonGallery mUIRibbonGalleryBarItemRibbonGallery;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonGalleryBarItemRibbonGallery : DXTestControl
    {
        
        public UIRibbonGalleryBarItemRibbonGallery(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryBarItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISistbrukteGalleryItemGroup UISistbrukteGalleryItemGroup
        {
            get
            {
                if ((this.mUISistbrukteGalleryItemGroup == null))
                {
                    this.mUISistbrukteGalleryItemGroup = new UISistbrukteGalleryItemGroup(this);
                }
                return this.mUISistbrukteGalleryItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UISistbrukteGalleryItemGroup mUISistbrukteGalleryItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISistbrukteGalleryItemGroup : DXTestControl
    {
        
        public UISistbrukteGalleryItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Sist brukte";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UICGalleryItem
        {
            get
            {
                if ((this.mUICGalleryItem == null))
                {
                    this.mUICGalleryItem = new DXTestControl(this);
                    #region Search Criteria
                    this.mUICGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "C";
                    this.mUICGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryItem";
                    this.mUICGalleryItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUICGalleryItem;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUICGalleryItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgRoleCodeFilterRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgRoleCodeFilterRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgRoleCodeFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            #endregion
        }
        
        #region Properties
        public UIRibbonGalleryBarItemRibbonGallery1 UIRibbonGalleryBarItemRibbonGallery
        {
            get
            {
                if ((this.mUIRibbonGalleryBarItemRibbonGallery == null))
                {
                    this.mUIRibbonGalleryBarItemRibbonGallery = new UIRibbonGalleryBarItemRibbonGallery1(this);
                }
                return this.mUIRibbonGalleryBarItemRibbonGallery;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonGalleryBarItemRibbonGallery1 mUIRibbonGalleryBarItemRibbonGallery;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonGalleryBarItemRibbonGallery1 : DXTestControl
    {
        
        public UIRibbonGalleryBarItemRibbonGallery1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryBarItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISistbrukteGalleryItemGroup1 UISistbrukteGalleryItemGroup
        {
            get
            {
                if ((this.mUISistbrukteGalleryItemGroup == null))
                {
                    this.mUISistbrukteGalleryItemGroup = new UISistbrukteGalleryItemGroup1(this);
                }
                return this.mUISistbrukteGalleryItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UISistbrukteGalleryItemGroup1 mUISistbrukteGalleryItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISistbrukteGalleryItemGroup1 : DXTestControl
    {
        
        public UISistbrukteGalleryItemGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Sist brukte";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILillaGalleryItem
        {
            get
            {
                if ((this.mUILillaGalleryItem == null))
                {
                    this.mUILillaGalleryItem = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILillaGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "Lilla";
                    this.mUILillaGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryItem";
                    this.mUILillaGalleryItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILillaGalleryItem;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILillaGalleryItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpNavigationRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpNavigationRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpNavigation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIBeToWeekRibbonEditItem
        {
            get
            {
                if ((this.mUIBeToWeekRibbonEditItem == null))
                {
                    this.mUIBeToWeekRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIBeToWeekRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "beToWeek";
                    this.mUIBeToWeekRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIBeToWeekRibbonEditItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIBeToWeekRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIBeToWeekRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow9 : DXWindow
    {
        
        public UIOppgavetildelingWindow9()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom9 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom9(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom9 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom9 : DXTestControl
    {
        
        public UIVhContentCustom9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient21 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient21(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient21 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient21 : DXTestControl
    {
        
        public UIPcViewClient21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom5 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom5(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom5 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom5 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            #endregion
        }
        
        #region Properties
        public UIDpSummaryDockPanel1 UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new UIDpSummaryDockPanel1(this);
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpSummaryDockPanel1 mUIDpSummaryDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpSummaryDockPanel1 : DXDockPanel
    {
        
        public UIDpSummaryDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom1 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom1(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom1 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            #endregion
        }
        
        #region Properties
        public UISumDemandHostViewCustom1 UISumDemandHostViewCustom
        {
            get
            {
                if ((this.mUISumDemandHostViewCustom == null))
                {
                    this.mUISumDemandHostViewCustom = new UISumDemandHostViewCustom1(this);
                }
                return this.mUISumDemandHostViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISumDemandHostViewCustom1 mUISumDemandHostViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISumDemandHostViewCustom1 : DXTestControl
    {
        
        public UISumDemandHostViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SumDemandHostView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SumDemandHostView";
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom5 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom5(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom5 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom5 : DXTestControl
    {
        
        public UIViewHost1Custom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient22 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient22(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient22 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient22 : DXTestControl
    {
        
        public UIPcViewClient22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIPanFilterClient1 UIPanFilterClient
        {
            get
            {
                if ((this.mUIPanFilterClient == null))
                {
                    this.mUIPanFilterClient = new UIPanFilterClient1(this);
                }
                return this.mUIPanFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanFilterClient1 mUIPanFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanFilterClient1 : DXTestControl
    {
        
        public UIPanFilterClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILeSumDemandDataSourcLookUpEdit
        {
            get
            {
                if ((this.mUILeSumDemandDataSourcLookUpEdit == null))
                {
                    this.mUILeSumDemandDataSourcLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeSumDemandDataSourcLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leSumDemandDataSource";
                    this.mUILeSumDemandDataSourcLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUILeSumDemandDataSourcLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILeSumDemandDataSourcLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow10 : DXWindow
    {
        
        public UIOppgavetildelingWindow10()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcContentClient4 UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient4(this);
                }
                return this.mUIGcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcContentClient4 mUIGcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient4 : DXTestControl
    {
        
        public UIGcContentClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDetailsClient4 UIGcDetailsClient
        {
            get
            {
                if ((this.mUIGcDetailsClient == null))
                {
                    this.mUIGcDetailsClient = new UIGcDetailsClient4(this);
                }
                return this.mUIGcDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDetailsClient4 mUIGcDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDetailsClient4 : DXTestControl
    {
        
        public UIGcDetailsClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom5 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom5(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom5 mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom5 : DXTestControl
    {
        
        public UIVhDetailsCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient23 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient23(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient23 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient23 : DXTestControl
    {
        
        public UIPcViewClient23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleDetailsViewCustom4 UIRoleDetailsViewCustom
        {
            get
            {
                if ((this.mUIRoleDetailsViewCustom == null))
                {
                    this.mUIRoleDetailsViewCustom = new UIRoleDetailsViewCustom4(this);
                }
                return this.mUIRoleDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDetailsViewCustom4 mUIRoleDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleDetailsViewCustom4 : DXTestControl
    {
        
        public UIRoleDetailsViewCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleDetailsView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client8 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client8(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client8 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client8 : DXTestControl
    {
        
        public UIPanelControl1Client8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UITabControlViewHost1TabList2 UITabControlViewHost1TabList
        {
            get
            {
                if ((this.mUITabControlViewHost1TabList == null))
                {
                    this.mUITabControlViewHost1TabList = new UITabControlViewHost1TabList2(this);
                }
                return this.mUITabControlViewHost1TabList;
            }
        }
        #endregion
        
        #region Fields
        private UITabControlViewHost1TabList2 mUITabControlViewHost1TabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlViewHost1TabList2 : DXTestControl
    {
        
        public UITabControlViewHost1TabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewTabPageClient2 UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient2(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        #endregion
        
        #region Fields
        private UIViewTabPageClient2 mUIViewTabPageClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient2 : DXTestControl
    {
        
        public UIViewTabPageClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1ViewTabPage[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIHostedCompetenceCompCustom2 UIHostedCompetenceCompCustom
        {
            get
            {
                if ((this.mUIHostedCompetenceCompCustom == null))
                {
                    this.mUIHostedCompetenceCompCustom = new UIHostedCompetenceCompCustom2(this);
                }
                return this.mUIHostedCompetenceCompCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIHostedCompetenceCompCustom2 mUIHostedCompetenceCompCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHostedCompetenceCompCustom2 : DXTestControl
    {
        
        public UIHostedCompetenceCompCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "HostedCompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HostedCompetenceComparisonView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhCompetenceCustom2 UIVhCompetenceCustom
        {
            get
            {
                if ((this.mUIVhCompetenceCustom == null))
                {
                    this.mUIVhCompetenceCustom = new UIVhCompetenceCustom2(this);
                }
                return this.mUIVhCompetenceCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhCompetenceCustom2 mUIVhCompetenceCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhCompetenceCustom2 : DXTestControl
    {
        
        public UIVhCompetenceCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhCompetence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient24 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient24(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient24 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient24 : DXTestControl
    {
        
        public UIPcViewClient24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UICompetenceComparisonCustom2 UICompetenceComparisonCustom
        {
            get
            {
                if ((this.mUICompetenceComparisonCustom == null))
                {
                    this.mUICompetenceComparisonCustom = new UICompetenceComparisonCustom2(this);
                }
                return this.mUICompetenceComparisonCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICompetenceComparisonCustom2 mUICompetenceComparisonCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICompetenceComparisonCustom2 : DXTestControl
    {
        
        public UICompetenceComparisonCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CompetenceComparisonView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CompetenceComparisonView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcCompetenceComparisTable
        {
            get
            {
                if ((this.mUIGcCompetenceComparisTable == null))
                {
                    this.mUIGcCompetenceComparisTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcCompetenceComparisTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcCompetenceComparison";
                    this.mUIGcCompetenceComparisTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
                    this.mUIGcCompetenceComparisTable.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcCompetenceComparisTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcCompetenceComparisTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow11 : DXWindow
    {
        
        public UIOppgavetildelingWindow11()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIOppgavetildelingWindowTitleBar
        {
            get
            {
                if ((this.mUIOppgavetildelingWindowTitleBar == null))
                {
                    this.mUIOppgavetildelingWindowTitleBar = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIOppgavetildelingWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.Name] = "WindowTitleBar";
                    this.mUIOppgavetildelingWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleBar";
                    this.mUIOppgavetildelingWindowTitleBar.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgavetildelingWindowTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIOppgavetildelingWindowTitleBar;
        #endregion
    }
}
