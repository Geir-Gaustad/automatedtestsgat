// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _010_Test_Delte_Oppgaver_Arbeidsplan_GATP_1681
{
    using System.CodeDom.Compiler;
    using System.Drawing;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddRoleToEllingsenStep_10
        /// </summary>
        public void AddRoleToEllingsenStep_10()
        {
            #region Variable Declarations
            DXCell uIDeltmed47204810Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpRoleCodesDockPanel.UIDockPanel2_ContainerCustom.UIRoleCodeListViewCustom.UIGcRoleCodesTable.UIDeltmed47204810Cell;
            DXCell uIGV108001600xDeltmed4Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV108001600xDeltmed4Cell;
            #endregion

            // Move 'Delt med 4720/4810' cell to '( )GV1 (08:00 - 16:00)
            //(x)Delt med 4720/ 4810 (08:00 - 16:00)' cell
            uIGV108001600xDeltmed4Cell.EnsureClickable(new Point(90, 8));
            Mouse.StartDragging(uIDeltmed47204810Cell, new Point(56, 9));
            Mouse.StopDragging(uIGV108001600xDeltmed4Cell, new Point(90, 8));
        }
        
        /// <summary>
        /// AddRoleToJensenStep_12
        /// </summary>
        public void AddRoleToJensenStep_12()
        {
            #region Variable Declarations
            DXCell uIXD1JensenBeate080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD1JensenBeate080016Cell;
            DXCell uIJensenBeateCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UIJensenBeateCell;
            #endregion

            // Click '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell
            Mouse.Click(uIXD1JensenBeate080016Cell, new Point(95, 10));

            // Double-Click 'Jensen, Beate' cell
            Mouse.DoubleClick(uIJensenBeateCell, new Point(101, 7));
        }
        
        /// <summary>
        /// AddRoleToJensenStep_13
        /// </summary>
        public void AddRoleToJensenStep_13()
        {
            #region Variable Declarations
            DXCell uIXN1JensenBeate220008Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXN1JensenBeate220008Cell;
            DXCell uIN11JensenBeate220008Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN11JensenBeate220008Cell;
            #endregion

            // Click '(x)N1 - Jensen, Beate (22:00 - 08:00)' cell
            Mouse.Click(uIXN1JensenBeate220008Cell, new Point(86, 8));

            // Move '(x)N1 - Jensen, Beate (22:00 - 08:00)' cell to '( )N1 - 1. Jensen, Beate (22:00 - 08:00)' cell
            uIN11JensenBeate220008Cell.EnsureClickable(new Point(84, 7));
            Mouse.StartDragging(uIXN1JensenBeate220008Cell, new Point(86, 8));
            Mouse.StopDragging(uIN11JensenBeate220008Cell, new Point(84, 7));
        }
        
        /// <summary>
        /// AddRoleToJensenStep_14
        /// </summary>
        public void AddRoleToJensenStep_14()
        {
            #region Variable Declarations
            DXCell uIXA1JensenBeate160022Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXA1JensenBeate160022Cell;
            DXCell uIXCriticalMangleroppgCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXCriticalMangleroppgCell;
            #endregion

            // Click '(x)A1 - Jensen, Beate (16:00 - 22:00)' cell
            Mouse.Click(uIXA1JensenBeate160022Cell, new Point(82, 10));

            // Move '(x)A1 - Jensen, Beate (16:00 - 22:00)' cell to '(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)A1 - 1. Jensen, Beate (16:00 - 22:00)' cell
            uIXCriticalMangleroppgCell.EnsureClickable(new Point(85, 8));
            Mouse.StartDragging(uIXA1JensenBeate160022Cell, new Point(86, 7));
            Mouse.StopDragging(uIXCriticalMangleroppgCell, new Point(85, 8));
        }
        
        /// <summary>
        /// AddRoleToJensenStep_15
        /// </summary>
        public void AddRoleToJensenStep_15()
        {
            #region Variable Declarations
            DXCell uIXA1JensenBeate160022Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXA1JensenBeate160022Cell;
            DXCell uIWarningOppgaveOVER47Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningOppgaveOVER47Cell;
            #endregion

            // Click '(x)A1 - Jensen, Beate (16:00 - 22:00)' cell
            Mouse.Click(uIXA1JensenBeate160022Cell, new Point(88, 6));

            // Move '(x)A1 - Jensen, Beate (16:00 - 22:00)' cell to '( )(Warning:Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00))A1 - 1. Jensen, Beate (12:00 - 18:00)' cell
            uIWarningOppgaveOVER47Cell.EnsureClickable(new Point(85, 7));
            Mouse.StartDragging(uIXA1JensenBeate160022Cell, new Point(85, 9));
            Mouse.StopDragging(uIWarningOppgaveOVER47Cell, new Point(85, 7));
        }
        
        /// <summary>
        /// AddRoleToJensenStep_16
        /// </summary>
        public void AddRoleToJensenStep_16()
        {
            #region Variable Declarations
            DXCell uIXKK1JensenBeate16002Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXKK1JensenBeate16002Cell;
            DXCell uIItemCell11 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell11;
            #endregion

            // Move '(x)KK1 - Jensen, Beate (16:00 - 22:00)
            //( )KK1 - Jensen, Beate (22:00 - 08:00)' cell to cell
            uIItemCell11.EnsureClickable(new Point(20, 5));
            Mouse.StartDragging(uIXKK1JensenBeate16002Cell, new Point(18, 7));
            Mouse.StopDragging(uIItemCell11, new Point(20, 5));
        }
        
        /// <summary>
        /// AddRoleToJensenStep_17
        /// </summary>
        public void AddRoleToJensenStep_17()
        {
            #region Variable Declarations
            DXCell uIXKK1JensenBeate16002Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXKK1JensenBeate16002Cell;
            DXCell uIItemCell12 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell12;
            #endregion

            // Move '(x)KK1 - Jensen, Beate (16:00 - 22:00)
            //( )KK1 - Jensen, Beate (22:00 - 08:00)' cell to cell
            uIItemCell12.EnsureClickable(new Point(19, 4));
            Mouse.StartDragging(uIXKK1JensenBeate16002Cell, new Point(13, 6));
            Mouse.StopDragging(uIItemCell12, new Point(19, 4));
        }
        
        /// <summary>
        /// AddRoleToJensenStep_18
        /// </summary>
        public void AddRoleToJensenStep_18()
        {
            #region Variable Declarations
            DXCell uIXD1JensenBeate080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD1JensenBeate080016Cell;
            DXCell uIItemCell13 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell13;
            #endregion

            // Click '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell
            Mouse.Click(uIXD1JensenBeate080016Cell, new Point(83, 7));

            // Move '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell to cell
            uIItemCell13.EnsureClickable(new Point(93, 5));
            Mouse.StartDragging(uIXD1JensenBeate080016Cell, new Point(83, 7));
            Mouse.StopDragging(uIItemCell13, new Point(93, 5));
        }
        
        /// <summary>
        /// AddRoleToJensenStep_19
        /// </summary>
        public void AddRoleToJensenStep_19()
        {
            #region Variable Declarations
            DXCell uIXD1JensenBeate080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD1JensenBeate080016Cell;
            DXCell uIItemCell14 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell14;
            #endregion

            // Click '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell
            Mouse.Click(uIXD1JensenBeate080016Cell, new Point(87, 9));

            // Move '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell to cell
            uIItemCell14.EnsureClickable(new Point(85, 7));
            Mouse.StartDragging(uIXD1JensenBeate080016Cell, new Point(90, 7));
            Mouse.StopDragging(uIItemCell14, new Point(85, 7));
        }
        
        /// <summary>
        /// AddRoleToMonkStep_8
        /// </summary>
        public void AddRoleToMonkStep_8()
        {
            #region Variable Declarations
            DXCell uIXD2MonkErik08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD2MonkErik08001600Cell;
            DXCell uID2MonkErik08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID2MonkErik08001600Cell;
            #endregion

            // Click '(x)D2 - Monk, Erik (08:00 - 16:00)' cell
            Mouse.Click(uIXD2MonkErik08001600Cell, new Point(78, 9));

            // Move '(x)D2 - Monk, Erik (08:00 - 16:00)' cell to '( )D2 - Monk, Erik (08:00 - 16:00)' cell
            uID2MonkErik08001600Cell.EnsureClickable(new Point(90, 9));
            Mouse.StartDragging(uIXD2MonkErik08001600Cell, new Point(78, 9));
            Mouse.StopDragging(uID2MonkErik08001600Cell, new Point(90, 9));
        }
        
        /// <summary>
        /// ChangeViewToShowAllRoles - Use 'ChangeViewToShowAllRolesParams' to pass parameters into this method.
        /// </summary>
        public void ChangeViewToShowAllRoles()
        {
            #region Variable Declarations
            DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIHCrkScrollBarScrollBarControl;
            #endregion

            // Type '1244' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.ChangeViewToShowAllRolesParams.UIHCrkScrollBarScrollBarControlValueAsString;
        }
        
        /// <summary>
        /// ChangeViewToShowAllRolesStep23 - Use 'ChangeViewToShowAllRolesStep23Params' to pass parameters into this method.
        /// </summary>
        public void ChangeViewToShowAllRolesStep23()
        {
            #region Variable Declarations
            DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIHCrkScrollBarScrollBarControl;
            #endregion

            // Type '5363' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.ChangeViewToShowAllRolesStep23Params.UIHCrkScrollBarScrollBarControlValueAsString;
        }
        
        /// <summary>
        /// CheckErrorMessagesStep2 - Use 'CheckErrorMessagesStep2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckErrorMessagesStep2()
        {
            #region Variable Declarations
            DXTestControl uIStatusMessageItemLabel = this.UIItemWindow.UIStatusMessageFlyoutPCustom.UIStatusMessageListCustom.UIStatusMessageItemLabel;
            DXTestControl uIStatusMessageItemLabel1 = this.UIItemWindow.UIStatusMessageFlyoutPCustom.UIStatusMessageListCustom.UIStatusMessageItemLabel1;
            DXTestControl uIStatusMessageItemLabel2 = this.UIItemWindow.UIStatusMessageFlyoutPCustom.UIStatusMessageListCustom.UIStatusMessageItemLabel2;
            #endregion

            // Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler oppgave'
            Assert.AreEqual(this.CheckErrorMessagesStep2ExpectedValues.UIStatusMessageItemLabelText, uIStatusMessageItemLabel.Text);

            // Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler fra dato'
            Assert.AreEqual(this.CheckErrorMessagesStep2ExpectedValues.UIStatusMessageItemLabel1Text, uIStatusMessageItemLabel1.Text);

            // Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler avdeling'
            Assert.AreEqual(this.CheckErrorMessagesStep2ExpectedValues.UIStatusMessageItemLabel2Text, uIStatusMessageItemLabel2.Text);
        }
        
        /// <summary>
        /// CheckErrorMessageStep7 - Use 'CheckErrorMessageStep7ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckErrorMessageStep7()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            DXTestControl uILblContentLabel1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Oppgave Delt med 4720/4810 kan ikke tildeles på ugyldig ukedag (onsdag).'
            Assert.AreEqual(this.CheckErrorMessageStep7ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt med 4720/4810'
            Assert.AreEqual(this.CheckErrorMessageStep7ExpectedValues.UILblContentLabelText1, uILblContentLabel1.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Monk, Erik'
            Assert.AreEqual(this.CheckErrorMessageStep7ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckErrorsInStep13 - Use 'CheckErrorsInStep13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckErrorsInStep13()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom1.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Oppgave Delt med 4720/ 4810 kan ikke tildeles på ugyldig ukedag (søndag).'
            Assert.AreEqual(this.CheckErrorsInStep13ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);
        }
        
        /// <summary>
        /// CheckErrorsInStep14 - Use 'CheckErrorsInStep14ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckErrorsInStep14()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            DXTestControl uILblContentLabel1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom2.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Mangler oppgavedeling i perioden for å kunne tildele oppgave'
            Assert.AreEqual(this.CheckErrorsInStep14ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG'
            Assert.AreEqual(this.CheckErrorsInStep14ExpectedValues.UILblContentLabelText1, uILblContentLabel1.Text);
        }
        
        /// <summary>
        /// CheckErrorsInStep16 - Use 'CheckErrorsInStep16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckErrorsInStep16()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG'
            Assert.AreEqual(this.CheckErrorsInStep16ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);
        }
        
        /// <summary>
        /// CheckErrorsInStep18 - Use 'CheckErrorsInStep18ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckErrorsInStep18()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom.UILblContentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Mangler oppgavedeling i perioden for å kunne tildele oppgave'
            Assert.AreEqual(this.CheckErrorsInStep18ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);
        }
        
        /// <summary>
        /// CheckJensenRole1Step_22 - Use 'CheckJensenRole1Step_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole1Step_22()
        {
            #region Variable Declarations
            DXCell uIXN1JensenBeate220008Cell2 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXN1JensenBeate220008Cell2;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of '(x)N1 - Jensen, Beate (22:00 - 08:00)' cell equals '(x)N1 - Jensen, Beate (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckJensenRole1Step_22ExpectedValues.UIXN1JensenBeate220008Cell2Text, uIXN1JensenBeate220008Cell2.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4720'
            Assert.AreEqual(this.CheckJensenRole1Step_22ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals 'Jensen, Beate'
            Assert.AreEqual(this.CheckJensenRole1Step_22ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckJensenRole1Step_23 - Use 'CheckJensenRole1Step_23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole1Step_23()
        {
            #region Variable Declarations
            DXCell uIXN1JensenBeate220008Cell3 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXN1JensenBeate220008Cell3;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of '(x)N1 - Jensen, Beate (22:00 - 08:00)' cell equals '(x)N1 - Jensen, Beate (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckJensenRole1Step_23ExpectedValues.UIXN1JensenBeate220008Cell3Text, uIXN1JensenBeate220008Cell3.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4720'
            Assert.AreEqual(this.CheckJensenRole1Step_23ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals 'Jensen, Beate'
            Assert.AreEqual(this.CheckJensenRole1Step_23ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckJensenRole2Step_22 - Use 'CheckJensenRole2Step_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole2Step_22()
        {
            #region Variable Declarations
            DXCell uID1JensenBeate0800160Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID1JensenBeate0800160Cell;
            #endregion

            // Verify that the 'Text' property of '( )D1 - Jensen, Beate (08:00 - 16:00)' cell equals '( )D1 - Jensen, Beate (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckJensenRole2Step_22ExpectedValues.UID1JensenBeate0800160CellText, uID1JensenBeate0800160Cell.Text);
        }
        
        /// <summary>
        /// CheckJensenRole2Step_23 - Use 'CheckJensenRole2Step_23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole2Step_23()
        {
            #region Variable Declarations
            DXCell uIXD1JensenBeate080016Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD1JensenBeate080016Cell;
            #endregion

            // Verify that the 'Text' property of '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell equals '( )D1 - Jensen, Beate (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckJensenRole2Step_23ExpectedValues.UIXD1JensenBeate080016CellText, uIXD1JensenBeate080016Cell.Text);
        }
        
        /// <summary>
        /// CheckJensenRole3Step_22 - Use 'CheckJensenRole3Step_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole3Step_22()
        {
            #region Variable Declarations
            DXCell uID1JensenBeate0800100Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID1JensenBeate0800100Cell;
            #endregion

            // Verify that the 'Text' property of '( )D1 - Jensen, Beate (08:00 - 10:00)' cell equals '( )D1 - Jensen, Beate (08:00 - 10:00)
            //'
            Assert.AreEqual(this.CheckJensenRole3Step_22ExpectedValues.UID1JensenBeate0800100CellText, uID1JensenBeate0800100Cell.Text);
        }
        
        /// <summary>
        /// CheckJensenRole3Step_23 - Use 'CheckJensenRole3Step_23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole3Step_23()
        {
            #region Variable Declarations
            DXCell uID1JensenBeate0800100Cell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID1JensenBeate0800100Cell1;
            #endregion

            // Verify that the 'Text' property of '( )D1 - Jensen, Beate (08:00 - 10:00)' cell equals '( )D1 - Jensen, Beate (08:00 - 10:00)
            //'
            Assert.AreEqual(this.CheckJensenRole3Step_23ExpectedValues.UID1JensenBeate0800100Cell1Text, uID1JensenBeate0800100Cell1.Text);
        }
        
        /// <summary>
        /// CheckJensenRole4Step_22 - Use 'CheckJensenRole4Step_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole4Step_22()
        {
            #region Variable Declarations
            DXCell uIA1JensenBeate1600180Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIA1JensenBeate1600180Cell;
            #endregion

            // Verify that the 'Text' property of '( )A1 - Jensen, Beate (16:00 - 18:00)' cell equals '( )A1 - Jensen, Beate (16:00 - 18:00)
            //'
            Assert.AreEqual(this.CheckJensenRole4Step_22ExpectedValues.UIA1JensenBeate1600180CellText, uIA1JensenBeate1600180Cell.Text);
        }
        
        /// <summary>
        /// CheckJensenRole4Step_23 - Use 'CheckJensenRole4Step_23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole4Step_23()
        {
            #region Variable Declarations
            DXCell uIA1JensenBeate1600180Cell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIA1JensenBeate1600180Cell1;
            #endregion

            // Verify that the 'Text' property of '( )A1 - Jensen, Beate (16:00 - 18:00)' cell equals '( )A1 - Jensen, Beate (16:00 - 18:00)
            //'
            Assert.AreEqual(this.CheckJensenRole4Step_23ExpectedValues.UIA1JensenBeate1600180Cell1Text, uIA1JensenBeate1600180Cell1.Text);
        }
        
        /// <summary>
        /// CheckJensenRole5Step_22 - Use 'CheckJensenRole5Step_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole5Step_22()
        {
            #region Variable Declarations
            DXCell uIWarningAnsattmanglerCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningAnsattmanglerCell;
            #endregion

            // Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)
            //'
            Assert.AreEqual(this.CheckJensenRole5Step_22ExpectedValues.UIWarningAnsattmanglerCellText, uIWarningAnsattmanglerCell.Text);
        }
        
        /// <summary>
        /// CheckJensenRole5Step_23 - Use 'CheckJensenRole5Step_23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole5Step_23()
        {
            #region Variable Declarations
            DXCell uIWarningAnsattmanglerCell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningAnsattmanglerCell1;
            #endregion

            // Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)
            //'
            Assert.AreEqual(this.CheckJensenRole5Step_23ExpectedValues.UIWarningAnsattmanglerCell1Text, uIWarningAnsattmanglerCell1.Text);
        }
        
        /// <summary>
        /// CheckJensenRole6Step_22 - Use 'CheckJensenRole6Step_22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole6Step_22()
        {
            #region Variable Declarations
            DXCell uIBV1JensenBeate220008Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIBV1JensenBeate220008Cell;
            #endregion

            // Verify that the 'Text' property of '( )BV1 - Jensen, Beate (22:00 - 08:00)' cell equals '( )BV1 - Jensen, Beate (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckJensenRole6Step_22ExpectedValues.UIBV1JensenBeate220008CellText, uIBV1JensenBeate220008Cell.Text);
        }
        
        /// <summary>
        /// CheckJensenRole6Step_23 - Use 'CheckJensenRole6Step_23ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckJensenRole6Step_23()
        {
            #region Variable Declarations
            DXCell uIBV1JensenBeate220008Cell1 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIBV1JensenBeate220008Cell1;
            #endregion

            // Verify that the 'Text' property of '( )BV1 - Jensen, Beate (22:00 - 08:00)' cell equals '( )BV1 - Jensen, Beate (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckJensenRole6Step_23ExpectedValues.UIBV1JensenBeate220008Cell1Text, uIBV1JensenBeate220008Cell1.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep10 - Use 'CheckRoleInfoStep10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep10()
        {
            #region Variable Declarations
            DXCell uIGV108001600xDeltmed4Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV108001600xDeltmed4Cell;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of '( )GV1 (08:00 - 16:00)
            //(x)Delt med 4720/ 4810 (08:00 - 16:00)' cell equals '( )GV1 (08:00 - 16:00)
            //(x)Delt med 4720/4810 (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleInfoStep10ExpectedValues.UIGV108001600xDeltmed4CellText, uIGV108001600xDeltmed4Cell.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt med 4720/4810'
            Assert.AreEqual(this.CheckRoleInfoStep10ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Ellingsen, Rolf'
            Assert.AreEqual(this.CheckRoleInfoStep10ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep12 - Use 'CheckRoleInfoStep12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep12()
        {
            #region Variable Declarations
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt med 4720/4810'
            Assert.AreEqual(this.CheckRoleInfoStep12ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
            Assert.AreEqual(this.CheckRoleInfoStep12ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep13 - Use 'CheckRoleInfoStep13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep13()
        {
            #region Variable Declarations
            DXCell uIN11JensenBeate220008Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN11JensenBeate220008Cell;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of '( )N1 - 1. Jensen, Beate (22:00 - 08:00)' cell equals '(x)N1 - 1. Jensen, Beate (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckRoleInfoStep13ExpectedValues.UIN11JensenBeate220008CellText, uIN11JensenBeate220008Cell.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4720'
            Assert.AreEqual(this.CheckRoleInfoStep13ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
            Assert.AreEqual(this.CheckRoleInfoStep13ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep14 - Use 'CheckRoleInfoStep14ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep14()
        {
            #region Variable Declarations
            DXCell uIXCriticalMangleroppgCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXCriticalMangleroppgCell;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of '(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)A1 - 1. Jensen, Beate (16:00 - 22:00)' cell equals '(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)A1 - 1. Jensen, Beate (16:00 - 22:00)
            //'
            Assert.AreEqual(this.CheckRoleInfoStep14ExpectedValues.UIXCriticalMangleroppgCellText, uIXCriticalMangleroppgCell.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4640'
            Assert.AreEqual(this.CheckRoleInfoStep14ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
            Assert.AreEqual(this.CheckRoleInfoStep14ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep15 - Use 'CheckRoleInfoStep15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep15()
        {
            #region Variable Declarations
            DXCell uIWarningOppgaveOVER47Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningOppgaveOVER47Cell;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UISpecificationItemVieCustom1.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of '( )(Warning:Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00))A1 - 1. Jensen, Beate (12:00 - 18:00)' cell equals '(x)(Warning:Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00))A1 - 1. Jensen, Beate (12:00 - 18:00)
            //'
            Assert.AreEqual(this.CheckRoleInfoStep15ExpectedValues.UIWarningOppgaveOVER47CellText, uIWarningOppgaveOVER47Cell.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00)'
            Assert.AreEqual(this.CheckRoleInfoStep15ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
            Assert.AreEqual(this.CheckRoleInfoStep15ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep16 - Use 'CheckRoleInfoStep16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep16()
        {
            #region Variable Declarations
            DXCell uIItemCell11 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell11;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of cell equals '(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)KK1 - 1. Jensen, Beate (16:00 - 22:00)
            //'
            Assert.AreEqual(this.CheckRoleInfoStep16ExpectedValues.UIItemCell11Text, uIItemCell11.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4640'
            Assert.AreEqual(this.CheckRoleInfoStep16ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
            Assert.AreEqual(this.CheckRoleInfoStep16ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep17 - Use 'CheckRoleInfoStep17ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep17()
        {
            #region Variable Declarations
            DXCell uIItemCell12 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell12;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of cell equals '(x)KK1 - 1. Jensen, Beate (22:00 - 08:00)
            //'
            Assert.AreEqual(this.CheckRoleInfoStep17ExpectedValues.UIItemCell12Text, uIItemCell12.Text);

            // Verify that the 'ClassName' property of 'lblContent' label equals 'LabelControl'
            Assert.AreEqual(this.CheckRoleInfoStep17ExpectedValues.UILblContentLabelClassName, uILblContentLabel.ClassName);

            // Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
            Assert.AreEqual(this.CheckRoleInfoStep17ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep18 - Use 'CheckRoleInfoStep18ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep18()
        {
            #region Variable Declarations
            DXCell uIItemCell13 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell13;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of cell equals '(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)D1 - 1. Jensen, Beate (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleInfoStep18ExpectedValues.UIItemCell13Text, uIItemCell13.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4810 LES'
            Assert.AreEqual(this.CheckRoleInfoStep18ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
            Assert.AreEqual(this.CheckRoleInfoStep18ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep19 - Use 'CheckRoleInfoStep19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep19()
        {
            #region Variable Declarations
            DXCell uIItemCell14 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell14;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of cell equals '(x)D1 - 1. Jensen, Beate (08:00 - 10:00)
            //'
            Assert.AreEqual(this.CheckRoleInfoStep19ExpectedValues.UIItemCell14Text, uIItemCell14.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'KARD Ekskl bør'
            Assert.AreEqual(this.CheckRoleInfoStep19ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
            Assert.AreEqual(this.CheckRoleInfoStep19ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleInfoStep8 - Use 'CheckRoleInfoStep8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleInfoStep8()
        {
            #region Variable Declarations
            DXColumnHeader uICol02012024ColumnHeader = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UICol02012024ColumnHeader;
            DXCell uID2MonkErik08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID2MonkErik08001600Cell;
            DXTestControl uILblContentLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIPcHeaderClient.UILblContentLabel;
            DXTestControl uILblNameLabel = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UIDSpecificationsDockPanel.UIControlContainer2Custom.UISpecificationPanelViCustom.UIFlowControlViewHost1Custom.UISpecificationSectionCustom.UIVhDetailsCustom.UISpecificationListVieCustom.UIFcListCustom.UIEmployeeSpecificatioCustom.UIPcNameClient.UILblNameLabel;
            #endregion

            // Verify that the 'Text' property of 'col02.01.2024' column header equals '02.01.2024 tirsdag'
            Assert.AreEqual(this.CheckRoleInfoStep8ExpectedValues.UICol02012024ColumnHeaderText, uICol02012024ColumnHeader.Text);

            // Verify that the 'Text' property of '( )D2 - Monk, Erik (08:00 - 16:00)' cell equals '(x)D2 - 1. Monk, Erik (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleInfoStep8ExpectedValues.UID2MonkErik08001600CellText, uID2MonkErik08001600Cell.Text);

            // Verify that the 'Text' property of 'lblContent' label equals 'Delt med 4720/4810'
            Assert.AreEqual(this.CheckRoleInfoStep8ExpectedValues.UILblContentLabelText, uILblContentLabel.Text);

            // Verify that the 'Text' property of 'lblName' label equals '1. Monk, Erik'
            Assert.AreEqual(this.CheckRoleInfoStep8ExpectedValues.UILblNameLabelText, uILblNameLabel.Text);
        }
        
        /// <summary>
        /// CheckRoleStep12_2 - Use 'CheckRoleStep12_2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleStep12_2()
        {
            #region Variable Declarations
            DXCell uIXD1JensenBeate080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD1JensenBeate080016Cell;
            #endregion

            // Verify that the 'Text' property of '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell equals '( )D1 - 1. Jensen, Beate (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleStep12_2ExpectedValues.UIXD1JensenBeate080016CellText, uIXD1JensenBeate080016Cell.Text);
        }
        
        /// <summary>
        /// CheckRoleStep12_2_Selected - Use 'CheckRoleStep12_2_SelectedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleStep12_2_Selected()
        {
            #region Variable Declarations
            DXCell uIXD1JensenBeate080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD1JensenBeate080016Cell;
            #endregion

            // Verify that the 'Text' property of '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell equals '(x)D1 - 1. Jensen, Beate (08:00 - 16:00)
            //'
            Assert.AreEqual(this.CheckRoleStep12_2_SelectedExpectedValues.UIXD1JensenBeate080016CellText, uIXD1JensenBeate080016Cell.Text);
        }
        
        /// <summary>
        /// CheckShiftBookDateStep_25 - Use 'CheckShiftBookDateStep_25ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckShiftBookDateStep_25()
        {
            #region Variable Declarations
            DXMenuItem uIMandag010120241NyttåBarItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIMandag010120241NyttåBarItem;
            #endregion

            // Verify that the 'Text' property of 'Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1' BarItem equals 'Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1'
            Assert.AreEqual(this.CheckShiftBookDateStep_25ExpectedValues.UIMandag010120241NyttåBarItemText, uIMandag010120241NyttåBarItem.Text);
        }
        
        /// <summary>
        /// CheckSumStep10 - Use 'CheckSumStep10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep10()
        {
            #region Variable Declarations
            DXCell uIItem75160Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem75160Cell1;
            #endregion

            // Verify that the 'Text' property of '7,5 / 16,0' cell equals '7,5 / 16,0'
            Assert.AreEqual(this.CheckSumStep10ExpectedValues.UIItem75160Cell1Text, uIItem75160Cell1.Text);
        }
        
        /// <summary>
        /// CheckSumStep12 - Use 'CheckSumStep12ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep12()
        {
            #region Variable Declarations
            DXCell uIItem80160Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem80160Cell1;
            #endregion

            // Verify that the 'Text' property of '8,0 / 16,0' cell equals '8,0 / 16,0'
            Assert.AreEqual(this.CheckSumStep12ExpectedValues.UIItem80160Cell1Text, uIItem80160Cell1.Text);
        }
        
        /// <summary>
        /// CheckSumStep13 - Use 'CheckSumStep13ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep13()
        {
            #region Variable Declarations
            DXCell uIItem80100Cell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem80100Cell3;
            #endregion

            // Verify that the 'Text' property of '8,0 / 10,0' cell equals '8,0 / 10,0'
            Assert.AreEqual(this.CheckSumStep13ExpectedValues.UIItem80100Cell3Text, uIItem80100Cell3.Text);
        }
        
        /// <summary>
        /// CheckSumStep14 - Use 'CheckSumStep14ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep14()
        {
            #region Variable Declarations
            DXCell uIItem6060Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem6060Cell;
            #endregion

            // Verify that the 'Text' property of '6,0 / 6,0' cell equals '6,0 / 6,0'
            Assert.AreEqual(this.CheckSumStep14ExpectedValues.UIItem6060CellText, uIItem6060Cell.Text);
        }
        
        /// <summary>
        /// CheckSumStep15 - Use 'CheckSumStep15ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep15()
        {
            #region Variable Declarations
            DXCell uIItem6060Cell3 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem6060Cell3;
            #endregion

            // Verify that the 'Text' property of '6,0 / 6,0' cell equals '6,0 / 6,0'
            Assert.AreEqual(this.CheckSumStep15ExpectedValues.UIItem6060Cell3Text, uIItem6060Cell3.Text);
        }
        
        /// <summary>
        /// CheckSumStep16 - Use 'CheckSumStep16ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep16()
        {
            #region Variable Declarations
            DXCell uIItem6060Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem6060Cell1;
            #endregion

            // Verify that the 'Text' property of '6,0 / 6,0' cell equals '6,0 / 6,0'
            Assert.AreEqual(this.CheckSumStep16ExpectedValues.UIItem6060Cell1Text, uIItem6060Cell1.Text);
        }
        
        /// <summary>
        /// CheckSumStep17 - Use 'CheckSumStep17ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep17()
        {
            #region Variable Declarations
            DXCell uIItem20100Cell2 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem20100Cell2;
            #endregion

            // Verify that the 'Text' property of '2,0 / 10,0' cell equals '2,0 / 10,0'
            Assert.AreEqual(this.CheckSumStep17ExpectedValues.UIItem20100Cell2Text, uIItem20100Cell2.Text);
        }
        
        /// <summary>
        /// CheckSumStep19 - Use 'CheckSumStep19ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep19()
        {
            #region Variable Declarations
            DXCell uIItem2020Cell1 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem2020Cell1;
            #endregion

            // Verify that the 'Text' property of '2,0 / 2,0' cell equals '2,0 / 2,0'
            Assert.AreEqual(this.CheckSumStep19ExpectedValues.UIItem2020Cell1Text, uIItem2020Cell1.Text);
        }
        
        /// <summary>
        /// CheckSumStep8 - Use 'CheckSumStep8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSumStep8()
        {
            #region Variable Declarations
            DXCell uIItem75160Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIGcSumDemandTable.UIItem75160Cell;
            #endregion

            // Verify that the 'Text' property of '7,5 / 16,0' cell equals '8,0 / 16,0'
            Assert.AreEqual(this.CheckSumStep8ExpectedValues.UIItem75160CellText, uIItem75160Cell.Text);
        }
        
        /// <summary>
        /// CheckValuesStep3And4 - Use 'CheckValuesStep3And4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckValuesStep3And4()
        {
            #region Variable Declarations
            DXTestControl uIGridControlRowIndicaRowHeader = this.UIVelgoppgaverWindow.UIGcRolesTable.UIGridControlRowIndicaRowHeader;
            #endregion

            // Verify that the 'Exists' property of 'GridControlRowIndicator' row header equals 'False'
            Assert.AreEqual(this.CheckValuesStep3And4ExpectedValues.UIGridControlRowIndicaRowHeaderExists, uIGridControlRowIndicaRowHeader.Exists);
        }
        
        /// <summary>
        /// DeleteJensenRoleStep_15
        /// </summary>
        public void DeleteJensenRoleStep_15()
        {
            #region Variable Declarations
            DXCell uIXCriticalMangleroppgCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXCriticalMangleroppgCell;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Click '(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)A1 - 1. Jensen, Beate (16:00 - 22:00)' cell
            Mouse.Click(uIXCriticalMangleroppgCell, new Point(83, 11));

            // Click 'Slett' RibbonBaseButtonItem
            Mouse.Click(uISlettRibbonBaseButtonItem, new Point(36, 9));
        }
        
        /// <summary>
        /// DeleteJensenRoleStep_19
        /// </summary>
        public void DeleteJensenRoleStep_19()
        {
            #region Variable Declarations
            DXCell uIItemCell13 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell13;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell13, new Point(91, 7));

            // Click 'Slett' RibbonBaseButtonItem
            Mouse.Click(uISlettRibbonBaseButtonItem, new Point(31, 6));
        }
        
        /// <summary>
        /// DeleteMonkRoleStep_8
        /// </summary>
        public void DeleteMonkRoleStep_8()
        {
            #region Variable Declarations
            DXCell uIXCriticalOppgaveDeltCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXCriticalOppgaveDeltCell;
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Click '(x)(Critical:Oppgave Delt med 4720/ 4810 kan ikke tildeles på ugyldig ukedag (onsdag).)D2 - Monk, Erik (08:00 - 16:00)' cell
            Mouse.Click(uIXCriticalOppgaveDeltCell, new Point(85, 6));

            // Click 'Slett' RibbonBaseButtonItem
            Mouse.Click(uISlettRibbonBaseButtonItem, new Point(28, 9));
        }
        
        /// <summary>
        /// DragRoleToJensenStep_12
        /// </summary>
        public void DragRoleToJensenStep_12()
        {
            #region Variable Declarations
            DXCell uIJensenBeateCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIDpEmployeesDockPanel.UIControlContainer1Custom.UIEmployeeListViewCustom.UIGcEmployeesTable.UIJensenBeateCell;
            DXCell uID1JensenBeate0800160Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID1JensenBeate0800160Cell;
            #endregion

            // Move 'Jensen, Beate' cell to '( )D1 - Jensen, Beate (08:00 - 16:00)' cell
            uID1JensenBeate0800160Cell.EnsureClickable(new Point(61, 9));
            Mouse.StartDragging(uIJensenBeateCell, new Point(69, 7));
            Mouse.StopDragging(uID1JensenBeate0800160Cell, new Point(61, 9));
        }
        
        /// <summary>
        /// MoveSliderToTheLeft - Use 'MoveSliderToTheLeftParams' to pass parameters into this method.
        /// </summary>
        public void MoveSliderToTheLeft()
        {
            #region Variable Declarations
            DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIHCrkScrollBarScrollBarControl;
            #endregion

            // Type '10' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.MoveSliderToTheLeftParams.UIHCrkScrollBarScrollBarControlValueAsString;
        }
        
        /// <summary>
        /// MoveSliderToTheRight - Use 'MoveSliderToTheRightParams' to pass parameters into this method.
        /// </summary>
        public void MoveSliderToTheRight()
        {
            #region Variable Declarations
            DXScrollBar uIHCrkScrollBarScrollBarControl = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIHCrkScrollBarScrollBarControl;
            #endregion

            // Type '5358' in 'HCrkScrollBar' ScrollBarControl
            //ValueAsString
            uIHCrkScrollBarScrollBarControl.ValueAsString = this.MoveSliderToTheRightParams.UIHCrkScrollBarScrollBarControlValueAsString;
        }
        
        /// <summary>
        /// SearchOVER4600inRolesForSharing - Use 'SearchOVER4600inRolesForSharingParams' to pass parameters into this method.
        /// </summary>
        public void SearchOVER4600inRolesForSharing()
        {
            #region Variable Declarations
            DXMRUEdit uITeFindMRUEdit = this.UIVelgoppgaverWindow.UIGcRolesTable1.UIFindControlCoreCustom.UILayoutControl1Custom.UIRootLayoutGroup.UILciFindLayoutControlItem.UITeFindMRUEdit;
            DXButton uISøkButton = this.UIVelgoppgaverWindow.UIGcRolesTable1.UIFindControlCoreCustom.UILayoutControl1Custom.UIRootLayoutGroup.UILciFindButtonLayoutControlItem.UISøkButton;
            #endregion

            // Type 'over 4600' in 'teFind' MRUEdit
            //ValueAsString
            uITeFindMRUEdit.ValueAsString = this.SearchOVER4600inRolesForSharingParams.UITeFindMRUEditValueAsString;

            // Type '{Tab}' in 'teFind' MRUEdit
            Keyboard.SendKeys(uITeFindMRUEdit, this.SearchOVER4600inRolesForSharingParams.UITeFindMRUEditSendKeys, ModifierKeys.None);

            // Click 'Søk' button
            Mouse.Click(uISøkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectEllingsenRoleStep_10
        /// </summary>
        public void SelectEllingsenRoleStep_10()
        {
            #region Variable Declarations
            DXCell uIGV108001600xDeltmed4Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIEmployeeFocusedManagCustom.UIItemGridControl1Custom.UIDdGridControlCustom.UIGcDragDropGridTable.UIGV108001600xDeltmed4Cell;
            #endregion

            // Click '( )GV1 (08:00 - 16:00)
            //(x)Delt med 4720/ 4810 (08:00 - 16:00)' cell
            Mouse.Click(uIGV108001600xDeltmed4Cell, new Point(83, 33));
        }
        
        /// <summary>
        /// SelectJensenRole1Step_22
        /// </summary>
        public void SelectJensenRole1Step_22()
        {
            #region Variable Declarations
            DXCell uIXN1JensenBeate220008Cell2 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXN1JensenBeate220008Cell2;
            #endregion

            // Click '(x)N1 - Jensen, Beate (22:00 - 08:00)' cell
            Mouse.Click(uIXN1JensenBeate220008Cell2, new Point(92, 7));
        }
        
        /// <summary>
        /// SelectJensenRole1Step_23
        /// </summary>
        public void SelectJensenRole1Step_23()
        {
            #region Variable Declarations
            DXCell uIXN1JensenBeate220008Cell3 = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXN1JensenBeate220008Cell3;
            #endregion

            // Click '(x)N1 - Jensen, Beate (22:00 - 08:00)' cell
            Mouse.Click(uIXN1JensenBeate220008Cell3, new Point(76, 11));
        }
        
        /// <summary>
        /// SelectJensenRoleStep_12
        /// </summary>
        public void SelectJensenRoleStep_12()
        {
            #region Variable Declarations
            DXCell uIXD1JensenBeate080016Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD1JensenBeate080016Cell;
            #endregion

            // Click '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell
            Mouse.Click(uIXD1JensenBeate080016Cell, new Point(48, 7));
        }
        
        /// <summary>
        /// SelectJensenRoleStep_13
        /// </summary>
        public void SelectJensenRoleStep_13()
        {
            #region Variable Declarations
            DXCell uIN11JensenBeate220008Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIN11JensenBeate220008Cell;
            #endregion

            // Click '( )N1 - 1. Jensen, Beate (22:00 - 08:00)' cell
            Mouse.Click(uIN11JensenBeate220008Cell, new Point(91, 9));
        }
        
        /// <summary>
        /// SelectJensenRoleStep_14
        /// </summary>
        public void SelectJensenRoleStep_14()
        {
            #region Variable Declarations
            DXCell uIXCriticalMangleroppgCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXCriticalMangleroppgCell;
            #endregion

            // Click '(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)A1 - 1. Jensen, Beate (16:00 - 22:00)' cell
            Mouse.Click(uIXCriticalMangleroppgCell, new Point(89, 6));
        }
        
        /// <summary>
        /// SelectJensenRoleStep_15
        /// </summary>
        public void SelectJensenRoleStep_15()
        {
            #region Variable Declarations
            DXCell uIWarningOppgaveOVER47Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIWarningOppgaveOVER47Cell;
            #endregion

            // Click '( )(Warning:Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00))A1 - 1. Jensen, Beate (12:00 - 18:00)' cell
            Mouse.Click(uIWarningOppgaveOVER47Cell, new Point(85, 6));
        }
        
        /// <summary>
        /// SelectJensenRoleStep_16
        /// </summary>
        public void SelectJensenRoleStep_16()
        {
            #region Variable Declarations
            DXCell uIItemCell11 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell11;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell11, new Point(185, 7));
        }
        
        /// <summary>
        /// SelectJensenRoleStep_17
        /// </summary>
        public void SelectJensenRoleStep_17()
        {
            #region Variable Declarations
            DXCell uIItemCell12 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell12;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell12, new Point(16, 8));
        }
        
        /// <summary>
        /// SelectJensenRoleStep_18
        /// </summary>
        public void SelectJensenRoleStep_18()
        {
            #region Variable Declarations
            DXCell uIItemCell13 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell13;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell13, new Point(89, 10));
        }
        
        /// <summary>
        /// SelectJensenRoleStep_19
        /// </summary>
        public void SelectJensenRoleStep_19()
        {
            #region Variable Declarations
            DXCell uIItemCell14 = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIItemCell14;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell14, new Point(90, 6));
        }
        
        /// <summary>
        /// SelectMinRuleKardEkskl
        /// </summary>
        public void SelectMinRuleKardEkskl()
        {
            #region Variable Declarations
            DXColumnHeader uICItemNameDayRColumnHeader = this.UIDøgnrytmelagWindow.UIGsMainControlNavBar.UINbgccLayersScrollableControl.UIGcItemsTable.UICItemNameDayRColumnHeader;
            DXCell uIIkkevalgtCell = this.UIDøgnrytmelagWindow.UIGsMainControlNavBar.UINbgccLayersScrollableControl.UIGcItemsTable.UIIkkevalgtCell;
            #endregion

            // Click 'cItemNameDayR' column header
            Mouse.Click(uICItemNameDayRColumnHeader, new Point(114, 8));

            // Click 'Ikke valgt' cell
            Mouse.Click(uIIkkevalgtCell, new Point(38, 9));
        }
        
        /// <summary>
        /// SelectMonkRoleStep_7
        /// </summary>
        public void SelectMonkRoleStep_7()
        {
            #region Variable Declarations
            DXCell uIXCriticalOppgaveDeltCell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXCriticalOppgaveDeltCell;
            #endregion

            // Click '(x)(Critical:Oppgave Delt med 4720/ 4810 kan ikke tildeles på ugyldig ukedag (onsdag).)D2 - Monk, Erik (08:00 - 16:00)' cell
            Mouse.Click(uIXCriticalOppgaveDeltCell, new Point(10, 7));
        }
        
        /// <summary>
        /// SelectMonkRoleStep_8
        /// </summary>
        public void SelectMonkRoleStep_8()
        {
            #region Variable Declarations
            DXCell uID2MonkErik08001600Cell = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UID2MonkErik08001600Cell;
            #endregion

            // Click '( )D2 - Monk, Erik (08:00 - 16:00)' cell
            Mouse.Click(uID2MonkErik08001600Cell, new Point(90, 10));
        }
        
        /// <summary>
        /// TryAddRoleToMonkStep_7
        /// </summary>
        public void TryAddRoleToMonkStep_7()
        {
            #region Variable Declarations
            DXCell uIXD2MonkErik08001600Cell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpDisponibleDockPanel.UIControlContainer4Custom.UIDispGridViewCustom.UIIgAvailabilityCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UIXD2MonkErik08001600Cell;
            DXCell uICriticalOppgaveDeltmCell = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable.UICriticalOppgaveDeltmCell;
            #endregion

            // Click '(x)D2 - Monk, Erik (08:00 - 16:00)' cell
            Mouse.Click(uIXD2MonkErik08001600Cell, new Point(86, 10));

            // Move '(x)D2 - Monk, Erik (08:00 - 16:00)' cell to '( )(Critical:Oppgave Delt med 4720/ 4810 kan ikke tildeles på ugyldig ukedag (onsdag).)D2 - Monk, Erik (08:00 - 16:00)' cell
            uICriticalOppgaveDeltmCell.EnsureClickable(new Point(90, 8));
            Mouse.StartDragging(uIXD2MonkErik08001600Cell, new Point(86, 10));
            Mouse.StopDragging(uICriticalOppgaveDeltmCell, new Point(90, 8));
        }
        
        /// <summary>
        /// WidenRightMenu
        /// </summary>
        public void WidenRightMenu()
        {
            #region Variable Declarations
            DXTestControl uILeftSeparator = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UILeftSeparator;
            DXGrid uIGcDragDropGridTable = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIVhContentCustom.UIPcViewClient.UIRoleFocusedManageVieCustom.UIIgContentCustom.UIDdGridControlCustom.UIGcDragDropGridTable;
            #endregion

            // Move 'Left' separator to 'gcDragDropGrid' table
            uIGcDragDropGridTable.EnsureClickable(new Point(1676, 376));
            Mouse.StartDragging(uILeftSeparator, new Point(2, 364));
            Mouse.StopDragging(uIGcDragDropGridTable, new Point(1676, 376));
        }
        
        #region Properties
        public virtual ChangeViewToShowAllRolesParams ChangeViewToShowAllRolesParams
        {
            get
            {
                if ((this.mChangeViewToShowAllRolesParams == null))
                {
                    this.mChangeViewToShowAllRolesParams = new ChangeViewToShowAllRolesParams();
                }
                return this.mChangeViewToShowAllRolesParams;
            }
        }
        
        public virtual ChangeViewToShowAllRolesStep23Params ChangeViewToShowAllRolesStep23Params
        {
            get
            {
                if ((this.mChangeViewToShowAllRolesStep23Params == null))
                {
                    this.mChangeViewToShowAllRolesStep23Params = new ChangeViewToShowAllRolesStep23Params();
                }
                return this.mChangeViewToShowAllRolesStep23Params;
            }
        }
        
        public virtual CheckErrorMessagesStep2ExpectedValues CheckErrorMessagesStep2ExpectedValues
        {
            get
            {
                if ((this.mCheckErrorMessagesStep2ExpectedValues == null))
                {
                    this.mCheckErrorMessagesStep2ExpectedValues = new CheckErrorMessagesStep2ExpectedValues();
                }
                return this.mCheckErrorMessagesStep2ExpectedValues;
            }
        }
        
        public virtual CheckErrorMessageStep7ExpectedValues CheckErrorMessageStep7ExpectedValues
        {
            get
            {
                if ((this.mCheckErrorMessageStep7ExpectedValues == null))
                {
                    this.mCheckErrorMessageStep7ExpectedValues = new CheckErrorMessageStep7ExpectedValues();
                }
                return this.mCheckErrorMessageStep7ExpectedValues;
            }
        }
        
        public virtual CheckErrorsInStep13ExpectedValues CheckErrorsInStep13ExpectedValues
        {
            get
            {
                if ((this.mCheckErrorsInStep13ExpectedValues == null))
                {
                    this.mCheckErrorsInStep13ExpectedValues = new CheckErrorsInStep13ExpectedValues();
                }
                return this.mCheckErrorsInStep13ExpectedValues;
            }
        }
        
        public virtual CheckErrorsInStep14ExpectedValues CheckErrorsInStep14ExpectedValues
        {
            get
            {
                if ((this.mCheckErrorsInStep14ExpectedValues == null))
                {
                    this.mCheckErrorsInStep14ExpectedValues = new CheckErrorsInStep14ExpectedValues();
                }
                return this.mCheckErrorsInStep14ExpectedValues;
            }
        }
        
        public virtual CheckErrorsInStep16ExpectedValues CheckErrorsInStep16ExpectedValues
        {
            get
            {
                if ((this.mCheckErrorsInStep16ExpectedValues == null))
                {
                    this.mCheckErrorsInStep16ExpectedValues = new CheckErrorsInStep16ExpectedValues();
                }
                return this.mCheckErrorsInStep16ExpectedValues;
            }
        }
        
        public virtual CheckErrorsInStep18ExpectedValues CheckErrorsInStep18ExpectedValues
        {
            get
            {
                if ((this.mCheckErrorsInStep18ExpectedValues == null))
                {
                    this.mCheckErrorsInStep18ExpectedValues = new CheckErrorsInStep18ExpectedValues();
                }
                return this.mCheckErrorsInStep18ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole1Step_22ExpectedValues CheckJensenRole1Step_22ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole1Step_22ExpectedValues == null))
                {
                    this.mCheckJensenRole1Step_22ExpectedValues = new CheckJensenRole1Step_22ExpectedValues();
                }
                return this.mCheckJensenRole1Step_22ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole1Step_23ExpectedValues CheckJensenRole1Step_23ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole1Step_23ExpectedValues == null))
                {
                    this.mCheckJensenRole1Step_23ExpectedValues = new CheckJensenRole1Step_23ExpectedValues();
                }
                return this.mCheckJensenRole1Step_23ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole2Step_22ExpectedValues CheckJensenRole2Step_22ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole2Step_22ExpectedValues == null))
                {
                    this.mCheckJensenRole2Step_22ExpectedValues = new CheckJensenRole2Step_22ExpectedValues();
                }
                return this.mCheckJensenRole2Step_22ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole2Step_23ExpectedValues CheckJensenRole2Step_23ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole2Step_23ExpectedValues == null))
                {
                    this.mCheckJensenRole2Step_23ExpectedValues = new CheckJensenRole2Step_23ExpectedValues();
                }
                return this.mCheckJensenRole2Step_23ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole3Step_22ExpectedValues CheckJensenRole3Step_22ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole3Step_22ExpectedValues == null))
                {
                    this.mCheckJensenRole3Step_22ExpectedValues = new CheckJensenRole3Step_22ExpectedValues();
                }
                return this.mCheckJensenRole3Step_22ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole3Step_23ExpectedValues CheckJensenRole3Step_23ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole3Step_23ExpectedValues == null))
                {
                    this.mCheckJensenRole3Step_23ExpectedValues = new CheckJensenRole3Step_23ExpectedValues();
                }
                return this.mCheckJensenRole3Step_23ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole4Step_22ExpectedValues CheckJensenRole4Step_22ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole4Step_22ExpectedValues == null))
                {
                    this.mCheckJensenRole4Step_22ExpectedValues = new CheckJensenRole4Step_22ExpectedValues();
                }
                return this.mCheckJensenRole4Step_22ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole4Step_23ExpectedValues CheckJensenRole4Step_23ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole4Step_23ExpectedValues == null))
                {
                    this.mCheckJensenRole4Step_23ExpectedValues = new CheckJensenRole4Step_23ExpectedValues();
                }
                return this.mCheckJensenRole4Step_23ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole5Step_22ExpectedValues CheckJensenRole5Step_22ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole5Step_22ExpectedValues == null))
                {
                    this.mCheckJensenRole5Step_22ExpectedValues = new CheckJensenRole5Step_22ExpectedValues();
                }
                return this.mCheckJensenRole5Step_22ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole5Step_23ExpectedValues CheckJensenRole5Step_23ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole5Step_23ExpectedValues == null))
                {
                    this.mCheckJensenRole5Step_23ExpectedValues = new CheckJensenRole5Step_23ExpectedValues();
                }
                return this.mCheckJensenRole5Step_23ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole6Step_22ExpectedValues CheckJensenRole6Step_22ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole6Step_22ExpectedValues == null))
                {
                    this.mCheckJensenRole6Step_22ExpectedValues = new CheckJensenRole6Step_22ExpectedValues();
                }
                return this.mCheckJensenRole6Step_22ExpectedValues;
            }
        }
        
        public virtual CheckJensenRole6Step_23ExpectedValues CheckJensenRole6Step_23ExpectedValues
        {
            get
            {
                if ((this.mCheckJensenRole6Step_23ExpectedValues == null))
                {
                    this.mCheckJensenRole6Step_23ExpectedValues = new CheckJensenRole6Step_23ExpectedValues();
                }
                return this.mCheckJensenRole6Step_23ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep10ExpectedValues CheckRoleInfoStep10ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep10ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep10ExpectedValues = new CheckRoleInfoStep10ExpectedValues();
                }
                return this.mCheckRoleInfoStep10ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep12ExpectedValues CheckRoleInfoStep12ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep12ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep12ExpectedValues = new CheckRoleInfoStep12ExpectedValues();
                }
                return this.mCheckRoleInfoStep12ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep13ExpectedValues CheckRoleInfoStep13ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep13ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep13ExpectedValues = new CheckRoleInfoStep13ExpectedValues();
                }
                return this.mCheckRoleInfoStep13ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep14ExpectedValues CheckRoleInfoStep14ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep14ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep14ExpectedValues = new CheckRoleInfoStep14ExpectedValues();
                }
                return this.mCheckRoleInfoStep14ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep15ExpectedValues CheckRoleInfoStep15ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep15ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep15ExpectedValues = new CheckRoleInfoStep15ExpectedValues();
                }
                return this.mCheckRoleInfoStep15ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep16ExpectedValues CheckRoleInfoStep16ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep16ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep16ExpectedValues = new CheckRoleInfoStep16ExpectedValues();
                }
                return this.mCheckRoleInfoStep16ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep17ExpectedValues CheckRoleInfoStep17ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep17ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep17ExpectedValues = new CheckRoleInfoStep17ExpectedValues();
                }
                return this.mCheckRoleInfoStep17ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep18ExpectedValues CheckRoleInfoStep18ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep18ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep18ExpectedValues = new CheckRoleInfoStep18ExpectedValues();
                }
                return this.mCheckRoleInfoStep18ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep19ExpectedValues CheckRoleInfoStep19ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep19ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep19ExpectedValues = new CheckRoleInfoStep19ExpectedValues();
                }
                return this.mCheckRoleInfoStep19ExpectedValues;
            }
        }
        
        public virtual CheckRoleInfoStep8ExpectedValues CheckRoleInfoStep8ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleInfoStep8ExpectedValues == null))
                {
                    this.mCheckRoleInfoStep8ExpectedValues = new CheckRoleInfoStep8ExpectedValues();
                }
                return this.mCheckRoleInfoStep8ExpectedValues;
            }
        }
        
        public virtual CheckRoleStep12_2ExpectedValues CheckRoleStep12_2ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleStep12_2ExpectedValues == null))
                {
                    this.mCheckRoleStep12_2ExpectedValues = new CheckRoleStep12_2ExpectedValues();
                }
                return this.mCheckRoleStep12_2ExpectedValues;
            }
        }
        
        public virtual CheckRoleStep12_2_SelectedExpectedValues CheckRoleStep12_2_SelectedExpectedValues
        {
            get
            {
                if ((this.mCheckRoleStep12_2_SelectedExpectedValues == null))
                {
                    this.mCheckRoleStep12_2_SelectedExpectedValues = new CheckRoleStep12_2_SelectedExpectedValues();
                }
                return this.mCheckRoleStep12_2_SelectedExpectedValues;
            }
        }
        
        public virtual CheckShiftBookDateStep_25ExpectedValues CheckShiftBookDateStep_25ExpectedValues
        {
            get
            {
                if ((this.mCheckShiftBookDateStep_25ExpectedValues == null))
                {
                    this.mCheckShiftBookDateStep_25ExpectedValues = new CheckShiftBookDateStep_25ExpectedValues();
                }
                return this.mCheckShiftBookDateStep_25ExpectedValues;
            }
        }
        
        public virtual CheckSumStep10ExpectedValues CheckSumStep10ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep10ExpectedValues == null))
                {
                    this.mCheckSumStep10ExpectedValues = new CheckSumStep10ExpectedValues();
                }
                return this.mCheckSumStep10ExpectedValues;
            }
        }
        
        public virtual CheckSumStep12ExpectedValues CheckSumStep12ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep12ExpectedValues == null))
                {
                    this.mCheckSumStep12ExpectedValues = new CheckSumStep12ExpectedValues();
                }
                return this.mCheckSumStep12ExpectedValues;
            }
        }
        
        public virtual CheckSumStep13ExpectedValues CheckSumStep13ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep13ExpectedValues == null))
                {
                    this.mCheckSumStep13ExpectedValues = new CheckSumStep13ExpectedValues();
                }
                return this.mCheckSumStep13ExpectedValues;
            }
        }
        
        public virtual CheckSumStep14ExpectedValues CheckSumStep14ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep14ExpectedValues == null))
                {
                    this.mCheckSumStep14ExpectedValues = new CheckSumStep14ExpectedValues();
                }
                return this.mCheckSumStep14ExpectedValues;
            }
        }
        
        public virtual CheckSumStep15ExpectedValues CheckSumStep15ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep15ExpectedValues == null))
                {
                    this.mCheckSumStep15ExpectedValues = new CheckSumStep15ExpectedValues();
                }
                return this.mCheckSumStep15ExpectedValues;
            }
        }
        
        public virtual CheckSumStep16ExpectedValues CheckSumStep16ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep16ExpectedValues == null))
                {
                    this.mCheckSumStep16ExpectedValues = new CheckSumStep16ExpectedValues();
                }
                return this.mCheckSumStep16ExpectedValues;
            }
        }
        
        public virtual CheckSumStep17ExpectedValues CheckSumStep17ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep17ExpectedValues == null))
                {
                    this.mCheckSumStep17ExpectedValues = new CheckSumStep17ExpectedValues();
                }
                return this.mCheckSumStep17ExpectedValues;
            }
        }
        
        public virtual CheckSumStep19ExpectedValues CheckSumStep19ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep19ExpectedValues == null))
                {
                    this.mCheckSumStep19ExpectedValues = new CheckSumStep19ExpectedValues();
                }
                return this.mCheckSumStep19ExpectedValues;
            }
        }
        
        public virtual CheckSumStep8ExpectedValues CheckSumStep8ExpectedValues
        {
            get
            {
                if ((this.mCheckSumStep8ExpectedValues == null))
                {
                    this.mCheckSumStep8ExpectedValues = new CheckSumStep8ExpectedValues();
                }
                return this.mCheckSumStep8ExpectedValues;
            }
        }
        
        public virtual CheckValuesStep3And4ExpectedValues CheckValuesStep3And4ExpectedValues
        {
            get
            {
                if ((this.mCheckValuesStep3And4ExpectedValues == null))
                {
                    this.mCheckValuesStep3And4ExpectedValues = new CheckValuesStep3And4ExpectedValues();
                }
                return this.mCheckValuesStep3And4ExpectedValues;
            }
        }
        
        public virtual MoveSliderToTheLeftParams MoveSliderToTheLeftParams
        {
            get
            {
                if ((this.mMoveSliderToTheLeftParams == null))
                {
                    this.mMoveSliderToTheLeftParams = new MoveSliderToTheLeftParams();
                }
                return this.mMoveSliderToTheLeftParams;
            }
        }
        
        public virtual MoveSliderToTheRightParams MoveSliderToTheRightParams
        {
            get
            {
                if ((this.mMoveSliderToTheRightParams == null))
                {
                    this.mMoveSliderToTheRightParams = new MoveSliderToTheRightParams();
                }
                return this.mMoveSliderToTheRightParams;
            }
        }
        
        public virtual SearchOVER4600inRolesForSharingParams SearchOVER4600inRolesForSharingParams
        {
            get
            {
                if ((this.mSearchOVER4600inRolesForSharingParams == null))
                {
                    this.mSearchOVER4600inRolesForSharingParams = new SearchOVER4600inRolesForSharingParams();
                }
                return this.mSearchOVER4600inRolesForSharingParams;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIVelgoppgaverWindow UIVelgoppgaverWindow
        {
            get
            {
                if ((this.mUIVelgoppgaverWindow == null))
                {
                    this.mUIVelgoppgaverWindow = new UIVelgoppgaverWindow();
                }
                return this.mUIVelgoppgaverWindow;
            }
        }
        
        public UIOppgavetildelingWindow UIOppgavetildelingWindow
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow == null))
                {
                    this.mUIOppgavetildelingWindow = new UIOppgavetildelingWindow();
                }
                return this.mUIOppgavetildelingWindow;
            }
        }
        
        public UIOppgavetildelingWindow1 UIOppgavetildelingWindow1
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow1 == null))
                {
                    this.mUIOppgavetildelingWindow1 = new UIOppgavetildelingWindow1();
                }
                return this.mUIOppgavetildelingWindow1;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIDøgnrytmelagWindow UIDøgnrytmelagWindow
        {
            get
            {
                if ((this.mUIDøgnrytmelagWindow == null))
                {
                    this.mUIDøgnrytmelagWindow = new UIDøgnrytmelagWindow();
                }
                return this.mUIDøgnrytmelagWindow;
            }
        }
        #endregion
        
        #region Fields
        private ChangeViewToShowAllRolesParams mChangeViewToShowAllRolesParams;
        
        private ChangeViewToShowAllRolesStep23Params mChangeViewToShowAllRolesStep23Params;
        
        private CheckErrorMessagesStep2ExpectedValues mCheckErrorMessagesStep2ExpectedValues;
        
        private CheckErrorMessageStep7ExpectedValues mCheckErrorMessageStep7ExpectedValues;
        
        private CheckErrorsInStep13ExpectedValues mCheckErrorsInStep13ExpectedValues;
        
        private CheckErrorsInStep14ExpectedValues mCheckErrorsInStep14ExpectedValues;
        
        private CheckErrorsInStep16ExpectedValues mCheckErrorsInStep16ExpectedValues;
        
        private CheckErrorsInStep18ExpectedValues mCheckErrorsInStep18ExpectedValues;
        
        private CheckJensenRole1Step_22ExpectedValues mCheckJensenRole1Step_22ExpectedValues;
        
        private CheckJensenRole1Step_23ExpectedValues mCheckJensenRole1Step_23ExpectedValues;
        
        private CheckJensenRole2Step_22ExpectedValues mCheckJensenRole2Step_22ExpectedValues;
        
        private CheckJensenRole2Step_23ExpectedValues mCheckJensenRole2Step_23ExpectedValues;
        
        private CheckJensenRole3Step_22ExpectedValues mCheckJensenRole3Step_22ExpectedValues;
        
        private CheckJensenRole3Step_23ExpectedValues mCheckJensenRole3Step_23ExpectedValues;
        
        private CheckJensenRole4Step_22ExpectedValues mCheckJensenRole4Step_22ExpectedValues;
        
        private CheckJensenRole4Step_23ExpectedValues mCheckJensenRole4Step_23ExpectedValues;
        
        private CheckJensenRole5Step_22ExpectedValues mCheckJensenRole5Step_22ExpectedValues;
        
        private CheckJensenRole5Step_23ExpectedValues mCheckJensenRole5Step_23ExpectedValues;
        
        private CheckJensenRole6Step_22ExpectedValues mCheckJensenRole6Step_22ExpectedValues;
        
        private CheckJensenRole6Step_23ExpectedValues mCheckJensenRole6Step_23ExpectedValues;
        
        private CheckRoleInfoStep10ExpectedValues mCheckRoleInfoStep10ExpectedValues;
        
        private CheckRoleInfoStep12ExpectedValues mCheckRoleInfoStep12ExpectedValues;
        
        private CheckRoleInfoStep13ExpectedValues mCheckRoleInfoStep13ExpectedValues;
        
        private CheckRoleInfoStep14ExpectedValues mCheckRoleInfoStep14ExpectedValues;
        
        private CheckRoleInfoStep15ExpectedValues mCheckRoleInfoStep15ExpectedValues;
        
        private CheckRoleInfoStep16ExpectedValues mCheckRoleInfoStep16ExpectedValues;
        
        private CheckRoleInfoStep17ExpectedValues mCheckRoleInfoStep17ExpectedValues;
        
        private CheckRoleInfoStep18ExpectedValues mCheckRoleInfoStep18ExpectedValues;
        
        private CheckRoleInfoStep19ExpectedValues mCheckRoleInfoStep19ExpectedValues;
        
        private CheckRoleInfoStep8ExpectedValues mCheckRoleInfoStep8ExpectedValues;
        
        private CheckRoleStep12_2ExpectedValues mCheckRoleStep12_2ExpectedValues;
        
        private CheckRoleStep12_2_SelectedExpectedValues mCheckRoleStep12_2_SelectedExpectedValues;
        
        private CheckShiftBookDateStep_25ExpectedValues mCheckShiftBookDateStep_25ExpectedValues;
        
        private CheckSumStep10ExpectedValues mCheckSumStep10ExpectedValues;
        
        private CheckSumStep12ExpectedValues mCheckSumStep12ExpectedValues;
        
        private CheckSumStep13ExpectedValues mCheckSumStep13ExpectedValues;
        
        private CheckSumStep14ExpectedValues mCheckSumStep14ExpectedValues;
        
        private CheckSumStep15ExpectedValues mCheckSumStep15ExpectedValues;
        
        private CheckSumStep16ExpectedValues mCheckSumStep16ExpectedValues;
        
        private CheckSumStep17ExpectedValues mCheckSumStep17ExpectedValues;
        
        private CheckSumStep19ExpectedValues mCheckSumStep19ExpectedValues;
        
        private CheckSumStep8ExpectedValues mCheckSumStep8ExpectedValues;
        
        private CheckValuesStep3And4ExpectedValues mCheckValuesStep3And4ExpectedValues;
        
        private MoveSliderToTheLeftParams mMoveSliderToTheLeftParams;
        
        private MoveSliderToTheRightParams mMoveSliderToTheRightParams;
        
        private SearchOVER4600inRolesForSharingParams mSearchOVER4600inRolesForSharingParams;
        
        private UIItemWindow mUIItemWindow;
        
        private UIVelgoppgaverWindow mUIVelgoppgaverWindow;
        
        private UIOppgavetildelingWindow mUIOppgavetildelingWindow;
        
        private UIOppgavetildelingWindow1 mUIOppgavetildelingWindow1;
        
        private UIGatWindow mUIGatWindow;
        
        private UIDøgnrytmelagWindow mUIDøgnrytmelagWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangeViewToShowAllRoles'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChangeViewToShowAllRolesParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1244' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString = "1244";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangeViewToShowAllRolesStep23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChangeViewToShowAllRolesStep23Params
    {
        
        #region Fields
        /// <summary>
        /// Type '5363' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString = "5363";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckErrorMessagesStep2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckErrorMessagesStep2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler oppgave'
        /// </summary>
        public string UIStatusMessageItemLabelText = "Mangler oppgave";
        
        /// <summary>
        /// Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler fra dato'
        /// </summary>
        public string UIStatusMessageItemLabel1Text = "Mangler fra dato";
        
        /// <summary>
        /// Verify that the 'Text' property of 'StatusMessageItem' label equals 'Mangler avdeling'
        /// </summary>
        public string UIStatusMessageItemLabel2Text = "Mangler avdeling";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckErrorMessageStep7'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckErrorMessageStep7ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Oppgave Delt med 4720/4810 kan ikke tildeles på ugyldig ukedag (onsdag).'
        /// </summary>
        public string UILblContentLabelText = "Oppgave Delt med 4720/4810 kan ikke tildeles på ugyldig ukedag (onsdag).";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt med 4720/4810'
        /// </summary>
        public string UILblContentLabelText1 = "Delt med 4720/4810";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Monk, Erik'
        /// </summary>
        public string UILblNameLabelText = "1. Monk, Erik";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckErrorsInStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckErrorsInStep13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Oppgave Delt med 4720/ 4810 kan ikke tildeles på ugyldig ukedag (søndag).'
        /// </summary>
        public string UILblContentLabelText = "Oppgave Delt med 4720/ 4810 kan ikke tildeles på ugyldig ukedag (søndag).";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckErrorsInStep14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckErrorsInStep14ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Mangler oppgavedeling i perioden for å kunne tildele oppgave'
        /// </summary>
        public string UILblContentLabelText = "Mangler oppgavedeling i perioden for å kunne tildele oppgave";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG'
        /// </summary>
        public string UILblContentLabelText1 = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLE" +
            "G";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckErrorsInStep16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckErrorsInStep16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG'
        /// </summary>
        public string UILblContentLabelText = "Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLE" +
            "G";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckErrorsInStep18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckErrorsInStep18ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Mangler oppgavedeling i perioden for å kunne tildele oppgave'
        /// </summary>
        public string UILblContentLabelText = "Mangler oppgavedeling i perioden for å kunne tildele oppgave";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole1Step_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole1Step_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '(x)N1 - Jensen, Beate (22:00 - 08:00)' cell equals '(x)N1 - Jensen, Beate (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIXN1JensenBeate220008Cell2Text = "(x)N1 - Jensen, Beate (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4720'
        /// </summary>
        public string UILblContentLabelText = "Delt fra 4720";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals 'Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole1Step_23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole1Step_23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '(x)N1 - Jensen, Beate (22:00 - 08:00)' cell equals '(x)N1 - Jensen, Beate (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIXN1JensenBeate220008Cell3Text = "(x)N1 - Jensen, Beate (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4720'
        /// </summary>
        public string UILblContentLabelText = "Delt fra 4720";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals 'Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole2Step_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole2Step_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D1 - Jensen, Beate (08:00 - 16:00)' cell equals '( )D1 - Jensen, Beate (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID1JensenBeate0800160CellText = "( )D1 - Jensen, Beate (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole2Step_23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole2Step_23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell equals '( )D1 - Jensen, Beate (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIXD1JensenBeate080016CellText = "( )D1 - Jensen, Beate (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole3Step_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole3Step_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D1 - Jensen, Beate (08:00 - 10:00)' cell equals '( )D1 - Jensen, Beate (08:00 - 10:00)
        ///'
        /// </summary>
        public string UID1JensenBeate0800100CellText = "( )D1 - Jensen, Beate (08:00 - 10:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole3Step_23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole3Step_23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )D1 - Jensen, Beate (08:00 - 10:00)' cell equals '( )D1 - Jensen, Beate (08:00 - 10:00)
        ///'
        /// </summary>
        public string UID1JensenBeate0800100Cell1Text = "( )D1 - Jensen, Beate (08:00 - 10:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole4Step_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole4Step_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )A1 - Jensen, Beate (16:00 - 18:00)' cell equals '( )A1 - Jensen, Beate (16:00 - 18:00)
        ///'
        /// </summary>
        public string UIA1JensenBeate1600180CellText = "( )A1 - Jensen, Beate (16:00 - 18:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole4Step_23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole4Step_23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )A1 - Jensen, Beate (16:00 - 18:00)' cell equals '( )A1 - Jensen, Beate (16:00 - 18:00)
        ///'
        /// </summary>
        public string UIA1JensenBeate1600180Cell1Text = "( )A1 - Jensen, Beate (16:00 - 18:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole5Step_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole5Step_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)
        ///'
        /// </summary>
        public string UIWarningAnsattmanglerCellText = "( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fr" +
            "a 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole5Step_23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole5Step_23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)' cell equals '( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)
        ///'
        /// </summary>
        public string UIWarningAnsattmanglerCell1Text = "( )(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fr" +
            "a 4640: STLEG)A1 - Jensen, Beate (16:00 - 22:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole6Step_22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole6Step_22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )BV1 - Jensen, Beate (22:00 - 08:00)' cell equals '( )BV1 - Jensen, Beate (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIBV1JensenBeate220008CellText = "( )BV1 - Jensen, Beate (22:00 - 08:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckJensenRole6Step_23'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckJensenRole6Step_23ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )BV1 - Jensen, Beate (22:00 - 08:00)' cell equals '( )BV1 - Jensen, Beate (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIBV1JensenBeate220008Cell1Text = "( )BV1 - Jensen, Beate (22:00 - 08:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )GV1 (08:00 - 16:00)
        ///(x)Delt med 4720/ 4810 (08:00 - 16:00)' cell equals '( )GV1 (08:00 - 16:00)
        ///(x)Delt med 4720/4810 (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIGV108001600xDeltmed4CellText = "( )GV1 (08:00 - 16:00)\r\n(x)Delt med 4720/4810 (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt med 4720/4810'
        /// </summary>
        public string UILblContentLabelText = "Delt med 4720/4810";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Ellingsen, Rolf'
        /// </summary>
        public string UILblNameLabelText = "1. Ellingsen, Rolf";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt med 4720/4810'
        /// </summary>
        public string UILblContentLabelText = "Delt med 4720/4810";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "1. Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )N1 - 1. Jensen, Beate (22:00 - 08:00)' cell equals '(x)N1 - 1. Jensen, Beate (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIN11JensenBeate220008CellText = "(x)N1 - 1. Jensen, Beate (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4720'
        /// </summary>
        public string UILblContentLabelText = "Delt fra 4720";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "1. Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep14ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)A1 - 1. Jensen, Beate (16:00 - 22:00)' cell equals '(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)A1 - 1. Jensen, Beate (16:00 - 22:00)
        ///'
        /// </summary>
        public string UIXCriticalMangleroppgCellText = "(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)A1 - 1." +
            " Jensen, Beate (16:00 - 22:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4640'
        /// </summary>
        public string UILblContentLabelText = "Delt fra 4640";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "1. Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '( )(Warning:Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00))A1 - 1. Jensen, Beate (12:00 - 18:00)' cell equals '(x)(Warning:Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00))A1 - 1. Jensen, Beate (12:00 - 18:00)
        ///'
        /// </summary>
        public string UIWarningOppgaveOVER47CellText = "(x)(Warning:Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00))A1 -" +
            " 1. Jensen, Beate (12:00 - 18:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00)'
        /// </summary>
        public string UILblContentLabelText = "Oppgave OVER 4700 faller utenfor vaktens tidsrom (16:00 - 22:00)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "1. Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals '(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fra 4640: STLEG)KK1 - 1. Jensen, Beate (16:00 - 22:00)
        ///'
        /// </summary>
        public string UIItemCell11Text = "(x)(Warning:Ansatt mangler følgende ønsket kompetanse for å dekke oppgave Delt fr" +
            "a 4640: STLEG)KK1 - 1. Jensen, Beate (16:00 - 22:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4640'
        /// </summary>
        public string UILblContentLabelText = "Delt fra 4640";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "1. Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep17ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals '(x)KK1 - 1. Jensen, Beate (22:00 - 08:00)
        ///'
        /// </summary>
        public string UIItemCell12Text = "(x)KK1 - 1. Jensen, Beate (22:00 - 08:00)\r\n";
        
        /// <summary>
        /// Verify that the 'ClassName' property of 'lblContent' label equals 'LabelControl'
        /// </summary>
        public string UILblContentLabelClassName = "LabelControl";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "1. Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep18'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep18ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals '(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)D1 - 1. Jensen, Beate (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIItemCell13Text = "(x)(Critical:Mangler oppgavedeling i perioden for å kunne tildele oppgave)D1 - 1." +
            " Jensen, Beate (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt fra 4810 LES'
        /// </summary>
        public string UILblContentLabelText = "Delt fra 4810 LES";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "1. Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals '(x)D1 - 1. Jensen, Beate (08:00 - 10:00)
        ///'
        /// </summary>
        public string UIItemCell14Text = "(x)D1 - 1. Jensen, Beate (08:00 - 10:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'KARD Ekskl bør'
        /// </summary>
        public string UILblContentLabelText = "KARD Ekskl bør";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Jensen, Beate'
        /// </summary>
        public string UILblNameLabelText = "1. Jensen, Beate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleInfoStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleInfoStep8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'col02.01.2024' column header equals '02.01.2024 tirsdag'
        /// </summary>
        public string UICol02012024ColumnHeaderText = "02.01.2024 tirsdag";
        
        /// <summary>
        /// Verify that the 'Text' property of '( )D2 - Monk, Erik (08:00 - 16:00)' cell equals '(x)D2 - 1. Monk, Erik (08:00 - 16:00)
        ///'
        /// </summary>
        public string UID2MonkErik08001600CellText = "(x)D2 - 1. Monk, Erik (08:00 - 16:00)\r\n";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblContent' label equals 'Delt med 4720/4810'
        /// </summary>
        public string UILblContentLabelText = "Delt med 4720/4810";
        
        /// <summary>
        /// Verify that the 'Text' property of 'lblName' label equals '1. Monk, Erik'
        /// </summary>
        public string UILblNameLabelText = "1. Monk, Erik";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleStep12_2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleStep12_2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell equals '( )D1 - 1. Jensen, Beate (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIXD1JensenBeate080016CellText = "( )D1 - 1. Jensen, Beate (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleStep12_2_Selected'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRoleStep12_2_SelectedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '(x)D1 - Jensen, Beate (08:00 - 16:00)' cell equals '(x)D1 - 1. Jensen, Beate (08:00 - 16:00)
        ///'
        /// </summary>
        public string UIXD1JensenBeate080016CellText = "(x)D1 - 1. Jensen, Beate (08:00 - 16:00)\r\n";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckShiftBookDateStep_25'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckShiftBookDateStep_25ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1' BarItem equals 'Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1'
        /// </summary>
        public string UIMandag010120241NyttåBarItemText = "Mandag 01.01.2024 (1. Nyttårsdag) - Uke 1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '7,5 / 16,0' cell equals '7,5 / 16,0'
        /// </summary>
        public string UIItem75160Cell1Text = "7,5 / 16,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep12'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep12ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '8,0 / 16,0' cell equals '8,0 / 16,0'
        /// </summary>
        public string UIItem80160Cell1Text = "8,0 / 16,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep13'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep13ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '8,0 / 10,0' cell equals '8,0 / 10,0'
        /// </summary>
        public string UIItem80100Cell3Text = "8,0 / 10,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep14'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep14ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '6,0 / 6,0' cell equals '6,0 / 6,0'
        /// </summary>
        public string UIItem6060CellText = "6,0 / 6,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep15'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep15ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '6,0 / 6,0' cell equals '6,0 / 6,0'
        /// </summary>
        public string UIItem6060Cell3Text = "6,0 / 6,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep16'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep16ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '6,0 / 6,0' cell equals '6,0 / 6,0'
        /// </summary>
        public string UIItem6060Cell1Text = "6,0 / 6,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep17'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep17ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '2,0 / 10,0' cell equals '2,0 / 10,0'
        /// </summary>
        public string UIItem20100Cell2Text = "2,0 / 10,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep19'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep19ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '2,0 / 2,0' cell equals '2,0 / 2,0'
        /// </summary>
        public string UIItem2020Cell1Text = "2,0 / 2,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSumStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckSumStep8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '7,5 / 16,0' cell equals '8,0 / 16,0'
        /// </summary>
        public string UIItem75160CellText = "8,0 / 16,0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckValuesStep3And4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckValuesStep3And4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'GridControlRowIndicator' row header equals 'False'
        /// </summary>
        public bool UIGridControlRowIndicaRowHeaderExists = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'MoveSliderToTheLeft'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class MoveSliderToTheLeftParams
    {
        
        #region Fields
        /// <summary>
        /// Type '10' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString = "10";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'MoveSliderToTheRight'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class MoveSliderToTheRightParams
    {
        
        #region Fields
        /// <summary>
        /// Type '5358' in 'HCrkScrollBar' ScrollBarControl
        /// </summary>
        public string UIHCrkScrollBarScrollBarControlValueAsString = "5358";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchOVER4600inRolesForSharing'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SearchOVER4600inRolesForSharingParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'over 4600' in 'teFind' MRUEdit
        /// </summary>
        public string UITeFindMRUEditValueAsString = "over 4600";
        
        /// <summary>
        /// Type '{Tab}' in 'teFind' MRUEdit
        /// </summary>
        public string UITeFindMRUEditSendKeys = "{Tab}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIStatusMessageFlyoutPCustom UIStatusMessageFlyoutPCustom
        {
            get
            {
                if ((this.mUIStatusMessageFlyoutPCustom == null))
                {
                    this.mUIStatusMessageFlyoutPCustom = new UIStatusMessageFlyoutPCustom(this);
                }
                return this.mUIStatusMessageFlyoutPCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStatusMessageFlyoutPCustom mUIStatusMessageFlyoutPCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStatusMessageFlyoutPCustom : DXTestControl
    {
        
        public UIStatusMessageFlyoutPCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageFlyoutPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageFlyoutPanel";
            #endregion
        }
        
        #region Properties
        public UIStatusMessageListCustom UIStatusMessageListCustom
        {
            get
            {
                if ((this.mUIStatusMessageListCustom == null))
                {
                    this.mUIStatusMessageListCustom = new UIStatusMessageListCustom(this);
                }
                return this.mUIStatusMessageListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStatusMessageListCustom mUIStatusMessageListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStatusMessageListCustom : DXTestControl
    {
        
        public UIStatusMessageListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageList";
            #endregion
        }
        
        #region Properties
        public DXTestControl UIStatusMessageItemLabel
        {
            get
            {
                if ((this.mUIStatusMessageItemLabel == null))
                {
                    this.mUIStatusMessageItemLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIStatusMessageItemLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageListStatusMessageItem[2]";
                    this.mUIStatusMessageItemLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageItem";
                    #endregion
                }
                return this.mUIStatusMessageItemLabel;
            }
        }
        
        public DXTestControl UIStatusMessageItemLabel1
        {
            get
            {
                if ((this.mUIStatusMessageItemLabel1 == null))
                {
                    this.mUIStatusMessageItemLabel1 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIStatusMessageItemLabel1.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageListStatusMessageItem[1]";
                    this.mUIStatusMessageItemLabel1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageItem";
                    #endregion
                }
                return this.mUIStatusMessageItemLabel1;
            }
        }
        
        public DXTestControl UIStatusMessageItemLabel2
        {
            get
            {
                if ((this.mUIStatusMessageItemLabel2 == null))
                {
                    this.mUIStatusMessageItemLabel2 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIStatusMessageItemLabel2.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageListStatusMessageItem[0]";
                    this.mUIStatusMessageItemLabel2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageItem";
                    #endregion
                }
                return this.mUIStatusMessageItemLabel2;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIStatusMessageItemLabel;
        
        private DXTestControl mUIStatusMessageItemLabel1;
        
        private DXTestControl mUIStatusMessageItemLabel2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgoppgaverWindow : DXWindow
    {
        
        public UIVelgoppgaverWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg oppgaver";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIGcRolesTable UIGcRolesTable
        {
            get
            {
                if ((this.mUIGcRolesTable == null))
                {
                    this.mUIGcRolesTable = new UIGcRolesTable(this);
                }
                return this.mUIGcRolesTable;
            }
        }
        
        public UIGcRolesTable1 UIGcRolesTable1
        {
            get
            {
                if ((this.mUIGcRolesTable1 == null))
                {
                    this.mUIGcRolesTable1 = new UIGcRolesTable1(this);
                }
                return this.mUIGcRolesTable1;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRolesTable mUIGcRolesTable;
        
        private UIGcRolesTable1 mUIGcRolesTable1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRolesTable : DXGrid
    {
        
        public UIGcRolesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIGridControlRowIndicaRowHeader
        {
            get
            {
                if ((this.mUIGridControlRowIndicaRowHeader == null))
                {
                    this.mUIGridControlRowIndicaRowHeader = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlRowIndicator[View]gvRoles[Row]0";
                    this.mUIGridControlRowIndicaRowHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlRowIndicator";
                    this.mUIGridControlRowIndicaRowHeader.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIGridControlRowIndicaRowHeader;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIGridControlRowIndicaRowHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRolesTable1 : DXGrid
    {
        
        public UIGcRolesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIFindControlCoreCustom UIFindControlCoreCustom
        {
            get
            {
                if ((this.mUIFindControlCoreCustom == null))
                {
                    this.mUIFindControlCoreCustom = new UIFindControlCoreCustom(this);
                }
                return this.mUIFindControlCoreCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFindControlCoreCustom mUIFindControlCoreCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFindControlCoreCustom : DXTestControl
    {
        
        public UIFindControlCoreCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindControlCore";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UILayoutControl1Custom UILayoutControl1Custom
        {
            get
            {
                if ((this.mUILayoutControl1Custom == null))
                {
                    this.mUILayoutControl1Custom = new UILayoutControl1Custom(this);
                }
                return this.mUILayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControl1Custom mUILayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControl1Custom : DXTestControl
    {
        
        public UILayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindLayoutControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UILciFindLayoutControlItem UILciFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciFindLayoutControlItem == null))
                {
                    this.mUILciFindLayoutControlItem = new UILciFindLayoutControlItem(this);
                }
                return this.mUILciFindLayoutControlItem;
            }
        }
        
        public UILciFindButtonLayoutControlItem UILciFindButtonLayoutControlItem
        {
            get
            {
                if ((this.mUILciFindButtonLayoutControlItem == null))
                {
                    this.mUILciFindButtonLayoutControlItem = new UILciFindButtonLayoutControlItem(this);
                }
                return this.mUILciFindButtonLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciFindLayoutControlItem mUILciFindLayoutControlItem;
        
        private UILciFindButtonLayoutControlItem mUILciFindButtonLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXMRUEdit UITeFindMRUEdit
        {
            get
            {
                if ((this.mUITeFindMRUEdit == null))
                {
                    this.mUITeFindMRUEdit = new DXMRUEdit(this);
                    #region Search Criteria
                    this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindEditWLabel";
                    this.mUITeFindMRUEdit.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUITeFindMRUEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXMRUEdit mUITeFindMRUEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciFindButtonLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciFindButtonLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFindButton";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXButton UISøkButton
        {
            get
            {
                if ((this.mUISøkButton == null))
                {
                    this.mUISøkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btFind";
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomConstraintsSimpleButton";
                    this.mUISøkButton.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUISøkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISøkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow : DXWindow
    {
        
        public UIOppgavetildelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom mUIVhContentCustom;
        
        private UIRcMenuRibbon mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom : DXTestControl
    {
        
        public UIVhContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpDisponibleDockPanel UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        
        public UIVhContentCustom1 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom1(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIPanelContainer2DockPanel UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        
        public UIDpSummaryDockPanel UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new UIDpSummaryDockPanel(this);
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpDisponibleDockPanel mUIDpDisponibleDockPanel;
        
        private UIVhContentCustom1 mUIVhContentCustom;
        
        private UIPanelContainer2DockPanel mUIPanelContainer2DockPanel;
        
        private UIDpSummaryDockPanel mUIDpSummaryDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom : DXTestControl
    {
        
        public UIControlContainer4Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom : DXTestControl
    {
        
        public UIDispGridViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom : DXTestControl
    {
        
        public UIIgAvailabilityCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom : DXTestControl
    {
        
        public UIDdGridControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable : DXGrid
    {
        
        public UIGcDragDropGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-3";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-2";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIGcDragDropGridGridCoCell
        {
            get
            {
                if ((this.mUIGcDragDropGridGridCoCell == null))
                {
                    this.mUIGcDragDropGridGridCoCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1";
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDragDropGridGridCoCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcDragDropGridGridCoCell;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-5";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-7";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIXD2MonkErik08001600Cell
        {
            get
            {
                if ((this.mUIXD2MonkErik08001600Cell == null))
                {
                    this.mUIXD2MonkErik08001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXD2MonkErik08001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col02.01.2024";
                    this.mUIXD2MonkErik08001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXD2MonkErik08001600Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXD2MonkErik08001600Cell;
            }
        }
        
        public DXCell UIXN1JensenBeate220008Cell
        {
            get
            {
                if ((this.mUIXN1JensenBeate220008Cell == null))
                {
                    this.mUIXN1JensenBeate220008Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXN1JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col01.01.2024";
                    this.mUIXN1JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXN1JensenBeate220008Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXN1JensenBeate220008Cell;
            }
        }
        
        public DXCell UIXA1JensenBeate160022Cell
        {
            get
            {
                if ((this.mUIXA1JensenBeate160022Cell == null))
                {
                    this.mUIXA1JensenBeate160022Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXA1JensenBeate160022Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col05.01.2024";
                    this.mUIXA1JensenBeate160022Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXA1JensenBeate160022Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXA1JensenBeate160022Cell;
            }
        }
        
        public DXCell UIXKK1JensenBeate16002Cell
        {
            get
            {
                if ((this.mUIXKK1JensenBeate16002Cell == null))
                {
                    this.mUIXKK1JensenBeate16002Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXKK1JensenBeate16002Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col07.01.2024";
                    this.mUIXKK1JensenBeate16002Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXKK1JensenBeate16002Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXKK1JensenBeate16002Cell;
            }
        }
        
        public DXCell UIXD1JensenBeate080016Cell
        {
            get
            {
                if ((this.mUIXD1JensenBeate080016Cell == null))
                {
                    this.mUIXD1JensenBeate080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXD1JensenBeate080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col03.01.2024";
                    this.mUIXD1JensenBeate080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXD1JensenBeate080016Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXD1JensenBeate080016Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIGcDragDropGridGridCoCell;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIXD2MonkErik08001600Cell;
        
        private DXCell mUIXN1JensenBeate220008Cell;
        
        private DXCell mUIXA1JensenBeate160022Cell;
        
        private DXCell mUIXKK1JensenBeate16002Cell;
        
        private DXCell mUIXD1JensenBeate080016Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom1 : DXTestControl
    {
        
        public UIVhContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleFocusedManageVieCustom UIRoleFocusedManageVieCustom
        {
            get
            {
                if ((this.mUIRoleFocusedManageVieCustom == null))
                {
                    this.mUIRoleFocusedManageVieCustom = new UIRoleFocusedManageVieCustom(this);
                }
                return this.mUIRoleFocusedManageVieCustom;
            }
        }
        
        public UIEmployeeFocusedManagCustom UIEmployeeFocusedManagCustom
        {
            get
            {
                if ((this.mUIEmployeeFocusedManagCustom == null))
                {
                    this.mUIEmployeeFocusedManagCustom = new UIEmployeeFocusedManagCustom(this);
                }
                return this.mUIEmployeeFocusedManagCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleFocusedManageVieCustom mUIRoleFocusedManageVieCustom;
        
        private UIEmployeeFocusedManagCustom mUIEmployeeFocusedManagCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleFocusedManageVieCustom : DXTestControl
    {
        
        public UIRoleFocusedManageVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleFocusedManageView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgContentCustom UIIgContentCustom
        {
            get
            {
                if ((this.mUIIgContentCustom == null))
                {
                    this.mUIIgContentCustom = new UIIgContentCustom(this);
                }
                return this.mUIIgContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgContentCustom mUIIgContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgContentCustom : DXTestControl
    {
        
        public UIIgContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom1 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom1(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom1 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom1 : DXTestControl
    {
        
        public UIDdGridControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable1 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable1(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable1 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable1 : DXGrid
    {
        
        public UIGcDragDropGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]ColumnHandle-1-3";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]ColumnHandle-1-2";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-2";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIGcDragDropGridGridCoCell
        {
            get
            {
                if ((this.mUIGcDragDropGridGridCoCell == null))
                {
                    this.mUIGcDragDropGridGridCoCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1";
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDragDropGridGridCoCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcDragDropGridGridCoCell;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]ColumnHandle-1-5";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]ColumnHandle-1-5";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]ColumnHandle-1-7";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]ColumnHandle-1-7";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]ColumnHandle-1-3";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXCell UIItemCell8
        {
            get
            {
                if ((this.mUIItemCell8 == null))
                {
                    this.mUIItemCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-3";
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell8.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell8;
            }
        }
        
        public DXCell UIGcDragDropGridGridCoCell1
        {
            get
            {
                if ((this.mUIGcDragDropGridGridCoCell1 == null))
                {
                    this.mUIGcDragDropGridGridCoCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDragDropGridGridCoCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]ColumnHandle-1";
                    this.mUIGcDragDropGridGridCoCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDragDropGridGridCoCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcDragDropGridGridCoCell1;
            }
        }
        
        public DXScrollBar UIHCrkScrollBarScrollBarControl
        {
            get
            {
                if ((this.mUIHCrkScrollBarScrollBarControl == null))
                {
                    this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
                    #region Search Criteria
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridHCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIHCrkScrollBarScrollBarControl;
            }
        }
        
        public DXCell UIXCriticalOppgaveDeltCell
        {
            get
            {
                if ((this.mUIXCriticalOppgaveDeltCell == null))
                {
                    this.mUIXCriticalOppgaveDeltCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXCriticalOppgaveDeltCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col03.01.2024";
                    this.mUIXCriticalOppgaveDeltCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXCriticalOppgaveDeltCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXCriticalOppgaveDeltCell;
            }
        }
        
        public DXCell UID2MonkErik08001600Cell
        {
            get
            {
                if ((this.mUID2MonkErik08001600Cell == null))
                {
                    this.mUID2MonkErik08001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID2MonkErik08001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col02.01.2024";
                    this.mUID2MonkErik08001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID2MonkErik08001600Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUID2MonkErik08001600Cell;
            }
        }
        
        public DXCell UIXD1JensenBeate080016Cell
        {
            get
            {
                if ((this.mUIXD1JensenBeate080016Cell == null))
                {
                    this.mUIXD1JensenBeate080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXD1JensenBeate080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col02.01.2024";
                    this.mUIXD1JensenBeate080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXD1JensenBeate080016Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXD1JensenBeate080016Cell;
            }
        }
        
        public DXCell UIItemCell9
        {
            get
            {
                if ((this.mUIItemCell9 == null))
                {
                    this.mUIItemCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col01.01.2024";
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell9.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell9;
            }
        }
        
        public DXCell UICriticalMangleroppgaCell
        {
            get
            {
                if ((this.mUICriticalMangleroppgaCell == null))
                {
                    this.mUICriticalMangleroppgaCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICriticalMangleroppgaCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col05.01.2024";
                    this.mUICriticalMangleroppgaCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICriticalMangleroppgaCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUICriticalMangleroppgaCell;
            }
        }
        
        public DXCell UIA1JensenBeate1600180Cell
        {
            get
            {
                if ((this.mUIA1JensenBeate1600180Cell == null))
                {
                    this.mUIA1JensenBeate1600180Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIA1JensenBeate1600180Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col05.01.2024";
                    this.mUIA1JensenBeate1600180Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIA1JensenBeate1600180Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIA1JensenBeate1600180Cell;
            }
        }
        
        public DXCell UIWarningAnsattmanglerCell
        {
            get
            {
                if ((this.mUIWarningAnsattmanglerCell == null))
                {
                    this.mUIWarningAnsattmanglerCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIWarningAnsattmanglerCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col07.01.2024";
                    this.mUIWarningAnsattmanglerCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIWarningAnsattmanglerCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIWarningAnsattmanglerCell;
            }
        }
        
        public DXCell UIKK1JensenBeate220008Cell
        {
            get
            {
                if ((this.mUIKK1JensenBeate220008Cell == null))
                {
                    this.mUIKK1JensenBeate220008Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIKK1JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col07.01.2024";
                    this.mUIKK1JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIKK1JensenBeate220008Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIKK1JensenBeate220008Cell;
            }
        }
        
        public DXCell UICriticalMangleroppgaCell1
        {
            get
            {
                if ((this.mUICriticalMangleroppgaCell1 == null))
                {
                    this.mUICriticalMangleroppgaCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUICriticalMangleroppgaCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]5[Column]col03.01.2024";
                    this.mUICriticalMangleroppgaCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICriticalMangleroppgaCell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUICriticalMangleroppgaCell1;
            }
        }
        
        public DXCell UIItemCell10
        {
            get
            {
                if ((this.mUIItemCell10 == null))
                {
                    this.mUIItemCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col03.01.2024";
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell10.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell10;
            }
        }
        
        public DXCell UIN11JensenBeate220008Cell
        {
            get
            {
                if ((this.mUIN11JensenBeate220008Cell == null))
                {
                    this.mUIN11JensenBeate220008Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIN11JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]8[Column]col01.01.2024";
                    this.mUIN11JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIN11JensenBeate220008Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIN11JensenBeate220008Cell;
            }
        }
        
        public DXCell UIXCriticalMangleroppgCell
        {
            get
            {
                if ((this.mUIXCriticalMangleroppgCell == null))
                {
                    this.mUIXCriticalMangleroppgCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXCriticalMangleroppgCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col05.01.2024";
                    this.mUIXCriticalMangleroppgCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXCriticalMangleroppgCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIXCriticalMangleroppgCell;
            }
        }
        
        public DXCell UIWarningOppgaveOVER47Cell
        {
            get
            {
                if ((this.mUIWarningOppgaveOVER47Cell == null))
                {
                    this.mUIWarningOppgaveOVER47Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIWarningOppgaveOVER47Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]col05.01.2024";
                    this.mUIWarningOppgaveOVER47Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIWarningOppgaveOVER47Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIWarningOppgaveOVER47Cell;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col07.01.2024";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]8[Column]col07.01.2024";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXCell UIItemCell13
        {
            get
            {
                if ((this.mUIItemCell13 == null))
                {
                    this.mUIItemCell13 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]9[Column]col03.01.2024";
                    this.mUIItemCell13.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell13.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell13;
            }
        }
        
        public DXCell UIItemCell14
        {
            get
            {
                if ((this.mUIItemCell14 == null))
                {
                    this.mUIItemCell14 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell14.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col03.01.2024";
                    this.mUIItemCell14.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell14.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell14;
            }
        }
        
        public DXColumnHeader UICol02012024ColumnHeader
        {
            get
            {
                if ((this.mUICol02012024ColumnHeader == null))
                {
                    this.mUICol02012024ColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUICol02012024ColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlColumnHeader[View]bgvMainView[Column]col02.01.2024";
                    this.mUICol02012024ColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUICol02012024ColumnHeader.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUICol02012024ColumnHeader;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIGcDragDropGridGridCoCell;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItemCell5;
        
        private DXCell mUIItemCell6;
        
        private DXCell mUIItemCell7;
        
        private DXCell mUIItemCell8;
        
        private DXCell mUIGcDragDropGridGridCoCell1;
        
        private DXScrollBar mUIHCrkScrollBarScrollBarControl;
        
        private DXCell mUIXCriticalOppgaveDeltCell;
        
        private DXCell mUID2MonkErik08001600Cell;
        
        private DXCell mUIXD1JensenBeate080016Cell;
        
        private DXCell mUIItemCell9;
        
        private DXCell mUICriticalMangleroppgaCell;
        
        private DXCell mUIA1JensenBeate1600180Cell;
        
        private DXCell mUIWarningAnsattmanglerCell;
        
        private DXCell mUIKK1JensenBeate220008Cell;
        
        private DXCell mUICriticalMangleroppgaCell1;
        
        private DXCell mUIItemCell10;
        
        private DXCell mUIN11JensenBeate220008Cell;
        
        private DXCell mUIXCriticalMangleroppgCell;
        
        private DXCell mUIWarningOppgaveOVER47Cell;
        
        private DXCell mUIItemCell11;
        
        private DXCell mUIItemCell12;
        
        private DXCell mUIItemCell13;
        
        private DXCell mUIItemCell14;
        
        private DXColumnHeader mUICol02012024ColumnHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFocusedManagCustom : DXTestControl
    {
        
        public UIEmployeeFocusedManagCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFocusedManageView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIItemGridControl1Custom UIItemGridControl1Custom
        {
            get
            {
                if ((this.mUIItemGridControl1Custom == null))
                {
                    this.mUIItemGridControl1Custom = new UIItemGridControl1Custom(this);
                }
                return this.mUIItemGridControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGridControl1Custom mUIItemGridControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGridControl1Custom : DXTestControl
    {
        
        public UIItemGridControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "itemGridControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom2 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom2(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom2 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom2 : DXTestControl
    {
        
        public UIDdGridControlCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable2 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable2(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable2 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable2 : DXGrid
    {
        
        public UIGcDragDropGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-2";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIGV108001600xDeltmed4Cell
        {
            get
            {
                if ((this.mUIGV108001600xDeltmed4Cell == null))
                {
                    this.mUIGV108001600xDeltmed4Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV108001600xDeltmed4Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col02.01.2024";
                    this.mUIGV108001600xDeltmed4Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV108001600xDeltmed4Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV108001600xDeltmed4Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIGV108001600xDeltmed4Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer3DockPanel UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        
        public UIPanelContainer1DockPanel UIPanelContainer1DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer1DockPanel == null))
                {
                    this.mUIPanelContainer1DockPanel = new UIPanelContainer1DockPanel(this);
                }
                return this.mUIPanelContainer1DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer3DockPanel mUIPanelContainer3DockPanel;
        
        private UIPanelContainer1DockPanel mUIPanelContainer1DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDSpecificationsDockPanel UIDSpecificationsDockPanel
        {
            get
            {
                if ((this.mUIDSpecificationsDockPanel == null))
                {
                    this.mUIDSpecificationsDockPanel = new UIDSpecificationsDockPanel(this);
                }
                return this.mUIDSpecificationsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDSpecificationsDockPanel mUIDSpecificationsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDSpecificationsDockPanel : DXDockPanel
    {
        
        public UIDSpecificationsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dSpecifications";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer2Custom UIControlContainer2Custom
        {
            get
            {
                if ((this.mUIControlContainer2Custom == null))
                {
                    this.mUIControlContainer2Custom = new UIControlContainer2Custom(this);
                }
                return this.mUIControlContainer2Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer2Custom mUIControlContainer2Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer2Custom : DXTestControl
    {
        
        public UIControlContainer2Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationPanelViCustom UISpecificationPanelViCustom
        {
            get
            {
                if ((this.mUISpecificationPanelViCustom == null))
                {
                    this.mUISpecificationPanelViCustom = new UISpecificationPanelViCustom(this);
                }
                return this.mUISpecificationPanelViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationPanelViCustom mUISpecificationPanelViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationPanelViCustom : DXTestControl
    {
        
        public UISpecificationPanelViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationPanelView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationPanelView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFlowControlViewHost1Custom UIFlowControlViewHost1Custom
        {
            get
            {
                if ((this.mUIFlowControlViewHost1Custom == null))
                {
                    this.mUIFlowControlViewHost1Custom = new UIFlowControlViewHost1Custom(this);
                }
                return this.mUIFlowControlViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowControlViewHost1Custom mUIFlowControlViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFlowControlViewHost1Custom : DXTestControl
    {
        
        public UIFlowControlViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flowControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationSectionCustom UISpecificationSectionCustom
        {
            get
            {
                if ((this.mUISpecificationSectionCustom == null))
                {
                    this.mUISpecificationSectionCustom = new UISpecificationSectionCustom(this);
                }
                return this.mUISpecificationSectionCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationSectionCustom mUISpecificationSectionCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationSectionCustom : DXTestControl
    {
        
        public UISpecificationSectionCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationSectionView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationSectionView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        
        public UIPcHeaderClient UIPcHeaderClient
        {
            get
            {
                if ((this.mUIPcHeaderClient == null))
                {
                    this.mUIPcHeaderClient = new UIPcHeaderClient(this);
                }
                return this.mUIPcHeaderClient;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom mUIVhDetailsCustom;
        
        private UIPcHeaderClient mUIPcHeaderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom : DXTestControl
    {
        
        public UIVhDetailsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationListVieCustom UISpecificationListVieCustom
        {
            get
            {
                if ((this.mUISpecificationListVieCustom == null))
                {
                    this.mUISpecificationListVieCustom = new UISpecificationListVieCustom(this);
                }
                return this.mUISpecificationListVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationListVieCustom mUISpecificationListVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationListVieCustom : DXTestControl
    {
        
        public UISpecificationListVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFcListCustom UIFcListCustom
        {
            get
            {
                if ((this.mUIFcListCustom == null))
                {
                    this.mUIFcListCustom = new UIFcListCustom(this);
                }
                return this.mUIFcListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFcListCustom mUIFcListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFcListCustom : DXTestControl
    {
        
        public UIFcListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fcList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationItemVieCustom UISpecificationItemVieCustom
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom == null))
                {
                    this.mUISpecificationItemVieCustom = new UISpecificationItemVieCustom(this);
                }
                return this.mUISpecificationItemVieCustom;
            }
        }
        
        public UIEmployeeSpecificatioCustom UIEmployeeSpecificatioCustom
        {
            get
            {
                if ((this.mUIEmployeeSpecificatioCustom == null))
                {
                    this.mUIEmployeeSpecificatioCustom = new UIEmployeeSpecificatioCustom(this);
                }
                return this.mUIEmployeeSpecificatioCustom;
            }
        }
        
        public UISpecificationItemVieCustom1 UISpecificationItemVieCustom1
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom1 == null))
                {
                    this.mUISpecificationItemVieCustom1 = new UISpecificationItemVieCustom1(this);
                }
                return this.mUISpecificationItemVieCustom1;
            }
        }
        
        public UISpecificationItemVieCustom2 UISpecificationItemVieCustom2
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom2 == null))
                {
                    this.mUISpecificationItemVieCustom2 = new UISpecificationItemVieCustom2(this);
                }
                return this.mUISpecificationItemVieCustom2;
            }
        }
        
        public UISpecificationItemVieCustom3 UISpecificationItemVieCustom3
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom3 == null))
                {
                    this.mUISpecificationItemVieCustom3 = new UISpecificationItemVieCustom3(this);
                }
                return this.mUISpecificationItemVieCustom3;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationItemVieCustom mUISpecificationItemVieCustom;
        
        private UIEmployeeSpecificatioCustom mUIEmployeeSpecificatioCustom;
        
        private UISpecificationItemVieCustom1 mUISpecificationItemVieCustom1;
        
        private UISpecificationItemVieCustom2 mUISpecificationItemVieCustom2;
        
        private UISpecificationItemVieCustom3 mUISpecificationItemVieCustom3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom : DXTestControl
    {
        
        public UISpecificationItemVieCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeSpecificatioCustom : DXTestControl
    {
        
        public UIEmployeeSpecificatioCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSpecificationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSpecificationView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcNameClient UIPcNameClient
        {
            get
            {
                if ((this.mUIPcNameClient == null))
                {
                    this.mUIPcNameClient = new UIPcNameClient(this);
                }
                return this.mUIPcNameClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcNameClient mUIPcNameClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcNameClient : DXTestControl
    {
        
        public UIPcNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblNameLabel
        {
            get
            {
                if ((this.mUILblNameLabel == null))
                {
                    this.mUILblNameLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblName";
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblNameLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblNameLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblNameLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom1 : DXTestControl
    {
        
        public UISpecificationItemVieCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom2 : DXTestControl
    {
        
        public UISpecificationItemVieCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom3 : DXTestControl
    {
        
        public UISpecificationItemVieCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcHeaderClient : DXTestControl
    {
        
        public UIPcHeaderClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcHeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer1DockPanel : DXDockPanel
    {
        
        public UIPanelContainer1DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpEmployeesDockPanel UIDpEmployeesDockPanel
        {
            get
            {
                if ((this.mUIDpEmployeesDockPanel == null))
                {
                    this.mUIDpEmployeesDockPanel = new UIDpEmployeesDockPanel(this);
                }
                return this.mUIDpEmployeesDockPanel;
            }
        }
        
        public UIDpRoleCodesDockPanel UIDpRoleCodesDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodesDockPanel == null))
                {
                    this.mUIDpRoleCodesDockPanel = new UIDpRoleCodesDockPanel(this);
                }
                return this.mUIDpRoleCodesDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpEmployeesDockPanel mUIDpEmployeesDockPanel;
        
        private UIDpRoleCodesDockPanel mUIDpRoleCodesDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpEmployeesDockPanel : DXDockPanel
    {
        
        public UIDpEmployeesDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer1Custom UIControlContainer1Custom
        {
            get
            {
                if ((this.mUIControlContainer1Custom == null))
                {
                    this.mUIControlContainer1Custom = new UIControlContainer1Custom(this);
                }
                return this.mUIControlContainer1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer1Custom mUIControlContainer1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer1Custom : DXTestControl
    {
        
        public UIControlContainer1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeListViewCustom UIEmployeeListViewCustom
        {
            get
            {
                if ((this.mUIEmployeeListViewCustom == null))
                {
                    this.mUIEmployeeListViewCustom = new UIEmployeeListViewCustom(this);
                }
                return this.mUIEmployeeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeListViewCustom mUIEmployeeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeListViewCustom : DXTestControl
    {
        
        public UIEmployeeListViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcEmployeesTable : DXGrid
    {
        
        public UIGcEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIJensenBeateCell
        {
            get
            {
                if ((this.mUIJensenBeateCell == null))
                {
                    this.mUIJensenBeateCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIJensenBeateCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]colDisplayName";
                    this.mUIJensenBeateCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIJensenBeateCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIJensenBeateCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIJensenBeateCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodesDockPanel : DXDockPanel
    {
        
        public UIDpRoleCodesDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel2_ContainerCustom UIDockPanel2_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel2_ContainerCustom == null))
                {
                    this.mUIDockPanel2_ContainerCustom = new UIDockPanel2_ContainerCustom(this);
                }
                return this.mUIDockPanel2_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel2_ContainerCustom mUIDockPanel2_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel2_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel2_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel2_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodeListViewCustom UIRoleCodeListViewCustom
        {
            get
            {
                if ((this.mUIRoleCodeListViewCustom == null))
                {
                    this.mUIRoleCodeListViewCustom = new UIRoleCodeListViewCustom(this);
                }
                return this.mUIRoleCodeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodeListViewCustom mUIRoleCodeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodeListViewCustom : DXTestControl
    {
        
        public UIRoleCodeListViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodeListView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodesTable UIGcRoleCodesTable
        {
            get
            {
                if ((this.mUIGcRoleCodesTable == null))
                {
                    this.mUIGcRoleCodesTable = new UIGcRoleCodesTable(this);
                }
                return this.mUIGcRoleCodesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodesTable mUIGcRoleCodesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodesTable : DXGrid
    {
        
        public UIGcRoleCodesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIDeltmed47204810Cell
        {
            get
            {
                if ((this.mUIDeltmed47204810Cell == null))
                {
                    this.mUIDeltmed47204810Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDeltmed47204810Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]3[Column]colName";
                    this.mUIDeltmed47204810Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDeltmed47204810Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDeltmed47204810Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDeltmed47204810Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpSummaryDockPanel : DXDockPanel
    {
        
        public UIDpSummaryDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISumDemandHostViewCustom UISumDemandHostViewCustom
        {
            get
            {
                if ((this.mUISumDemandHostViewCustom == null))
                {
                    this.mUISumDemandHostViewCustom = new UISumDemandHostViewCustom(this);
                }
                return this.mUISumDemandHostViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISumDemandHostViewCustom mUISumDemandHostViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISumDemandHostViewCustom : DXTestControl
    {
        
        public UISumDemandHostViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SumDemandHostView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SumDemandHostView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom : DXTestControl
    {
        
        public UIViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcSumDemandTable UIGcSumDemandTable
        {
            get
            {
                if ((this.mUIGcSumDemandTable == null))
                {
                    this.mUIGcSumDemandTable = new UIGcSumDemandTable(this);
                }
                return this.mUIGcSumDemandTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcSumDemandTable mUIGcSumDemandTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSumDemandTable : DXGrid
    {
        
        public UIGcSumDemandTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemand";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem75160Cell
        {
            get
            {
                if ((this.mUIItem75160Cell == null))
                {
                    this.mUIItem75160Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem75160Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]1[Column]02.01.2024 tirsdag";
                    this.mUIItem75160Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem75160Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem75160Cell;
            }
        }
        
        public DXCell UIItem75160Cell1
        {
            get
            {
                if ((this.mUIItem75160Cell1 == null))
                {
                    this.mUIItem75160Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem75160Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]02.01.2024 tirsdag";
                    this.mUIItem75160Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem75160Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem75160Cell1;
            }
        }
        
        public DXCell UIItem80160Cell
        {
            get
            {
                if ((this.mUIItem80160Cell == null))
                {
                    this.mUIItem80160Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem80160Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]02.01.2024 tirsdag";
                    this.mUIItem80160Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem80160Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem80160Cell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]3[Column]01.01.2024 mandag";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItem6060Cell
        {
            get
            {
                if ((this.mUIItem6060Cell == null))
                {
                    this.mUIItem6060Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6060Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]05.01.2024 fredag";
                    this.mUIItem6060Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6060Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem6060Cell;
            }
        }
        
        public DXCell UIItem2060Cell
        {
            get
            {
                if ((this.mUIItem2060Cell == null))
                {
                    this.mUIItem2060Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2060Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]2[Column]05.01.2024 fredag";
                    this.mUIItem2060Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2060Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem2060Cell;
            }
        }
        
        public DXCell UIItem6060Cell1
        {
            get
            {
                if ((this.mUIItem6060Cell1 == null))
                {
                    this.mUIItem6060Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6060Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]0[Column]07.01.2024 søndag";
                    this.mUIItem6060Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6060Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem6060Cell1;
            }
        }
        
        public DXCell UIItem20100Cell
        {
            get
            {
                if ((this.mUIItem20100Cell == null))
                {
                    this.mUIItem20100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem20100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]4[Column]07.01.2024 søndag";
                    this.mUIItem20100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem20100Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem20100Cell;
            }
        }
        
        public DXCell UIItem2020Cell
        {
            get
            {
                if ((this.mUIItem2020Cell == null))
                {
                    this.mUIItem2020Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2020Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]1[Column]03.01.2024 onsdag";
                    this.mUIItem2020Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2020Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem2020Cell;
            }
        }
        
        public DXCell UIItem80100Cell
        {
            get
            {
                if ((this.mUIItem80100Cell == null))
                {
                    this.mUIItem80100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem80100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]4[Column]01.01.2024 mandag";
                    this.mUIItem80100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem80100Cell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem80100Cell;
            }
        }
        
        public DXCell UIItem80100Cell1
        {
            get
            {
                if ((this.mUIItem80100Cell1 == null))
                {
                    this.mUIItem80100Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem80100Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]4[Column]08.01.2024 mandag";
                    this.mUIItem80100Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem80100Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem80100Cell1;
            }
        }
        
        public DXCell UIItem80160Cell1
        {
            get
            {
                if ((this.mUIItem80160Cell1 == null))
                {
                    this.mUIItem80160Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem80160Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]4[Column]02.01.2024 tirsdag";
                    this.mUIItem80160Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem80160Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem80160Cell1;
            }
        }
        
        public DXCell UIItem80100Cell2
        {
            get
            {
                if ((this.mUIItem80100Cell2 == null))
                {
                    this.mUIItem80100Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem80100Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]6[Column]01.01.2024 mandag";
                    this.mUIItem80100Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem80100Cell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem80100Cell2;
            }
        }
        
        public DXCell UIItem6060Cell2
        {
            get
            {
                if ((this.mUIItem6060Cell2 == null))
                {
                    this.mUIItem6060Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6060Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]1[Column]05.01.2024 fredag";
                    this.mUIItem6060Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6060Cell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem6060Cell2;
            }
        }
        
        public DXCell UIItem20100Cell1
        {
            get
            {
                if ((this.mUIItem20100Cell1 == null))
                {
                    this.mUIItem20100Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem20100Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]6[Column]07.01.2024 søndag";
                    this.mUIItem20100Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem20100Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem20100Cell1;
            }
        }
        
        public DXCell UIItem80100Cell3
        {
            get
            {
                if ((this.mUIItem80100Cell3 == null))
                {
                    this.mUIItem80100Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem80100Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]7[Column]01.01.2024 mandag";
                    this.mUIItem80100Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem80100Cell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem80100Cell3;
            }
        }
        
        public DXCell UIItem6060Cell3
        {
            get
            {
                if ((this.mUIItem6060Cell3 == null))
                {
                    this.mUIItem6060Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6060Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]5[Column]05.01.2024 fredag";
                    this.mUIItem6060Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6060Cell3.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem6060Cell3;
            }
        }
        
        public DXCell UIItem20100Cell2
        {
            get
            {
                if ((this.mUIItem20100Cell2 == null))
                {
                    this.mUIItem20100Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem20100Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]7[Column]07.01.2024 søndag";
                    this.mUIItem20100Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem20100Cell2.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem20100Cell2;
            }
        }
        
        public DXCell UIItem2020Cell1
        {
            get
            {
                if ((this.mUIItem2020Cell1 == null))
                {
                    this.mUIItem2020Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2020Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]6[Column]03.01.2024 onsdag";
                    this.mUIItem2020Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2020Cell1.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem2020Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem75160Cell;
        
        private DXCell mUIItem75160Cell1;
        
        private DXCell mUIItem80160Cell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItem6060Cell;
        
        private DXCell mUIItem2060Cell;
        
        private DXCell mUIItem6060Cell1;
        
        private DXCell mUIItem20100Cell;
        
        private DXCell mUIItem2020Cell;
        
        private DXCell mUIItem80100Cell;
        
        private DXCell mUIItem80100Cell1;
        
        private DXCell mUIItem80160Cell1;
        
        private DXCell mUIItem80100Cell2;
        
        private DXCell mUIItem6060Cell2;
        
        private DXCell mUIItem20100Cell1;
        
        private DXCell mUIItem80100Cell3;
        
        private DXCell mUIItem6060Cell3;
        
        private DXCell mUIItem20100Cell2;
        
        private DXCell mUIItem2020Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgHomeRibbonPage UIRpgHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpgHomeRibbonPage == null))
                {
                    this.mUIRpgHomeRibbonPage = new UIRpgHomeRibbonPage(this);
                }
                return this.mUIRpgHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgHomeRibbonPage mUIRpgHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpgHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgActionsRibbonPageGroup UIRpgActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgActionsRibbonPageGroup == null))
                {
                    this.mUIRpgActionsRibbonPageGroup = new UIRpgActionsRibbonPageGroup(this);
                }
                return this.mUIRpgActionsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgActionsRibbonPageGroup mUIRpgActionsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgActionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UISlettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISlettRibbonBaseButtonItem == null))
                {
                    this.mUISlettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiDeleteAssignments";
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISlettRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUISlettRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow1 : DXWindow
    {
        
        public UIOppgavetildelingWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon1 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon1(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIVhContentCustom2 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom2(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon1 mUIRcMenuRibbon;
        
        private UIVhContentCustom2 mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon1 : DXRibbon
    {
        
        public UIRcMenuRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgHomeRibbonPage1 UIRpgHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpgHomeRibbonPage == null))
                {
                    this.mUIRpgHomeRibbonPage = new UIRpgHomeRibbonPage1(this);
                }
                return this.mUIRpgHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgHomeRibbonPage1 mUIRpgHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgHomeRibbonPage1 : DXRibbonPage
    {
        
        public UIRpgHomeRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgViewRibbonPageGroup UIRpgViewRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgViewRibbonPageGroup == null))
                {
                    this.mUIRpgViewRibbonPageGroup = new UIRpgViewRibbonPageGroup(this);
                }
                return this.mUIRpgViewRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgViewRibbonPageGroup mUIRpgViewRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgViewRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgViewRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsattvisningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsattvisningRibbonBaseButtonItem == null))
                {
                    this.mUIAnsattvisningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsattvisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciEmployeeView";
                    this.mUIAnsattvisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsattvisningRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsattvisningRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsattvisningRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom2 : DXTestControl
    {
        
        public UIVhContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient3 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient3(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient3 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient3 : DXTestControl
    {
        
        public UIPcViewClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom1 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom1(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom1 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom1 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer2DockPanel1 UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel1(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        
        public UIVhContentCustom3 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom3(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIDpDisponibleDockPanel1 UIDpDisponibleDockPanel
        {
            get
            {
                if ((this.mUIDpDisponibleDockPanel == null))
                {
                    this.mUIDpDisponibleDockPanel = new UIDpDisponibleDockPanel1(this);
                }
                return this.mUIDpDisponibleDockPanel;
            }
        }
        
        public UIDpSummaryDockPanel1 UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new UIDpSummaryDockPanel1(this);
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer2DockPanel1 mUIPanelContainer2DockPanel;
        
        private UIVhContentCustom3 mUIVhContentCustom;
        
        private UIDpDisponibleDockPanel1 mUIDpDisponibleDockPanel;
        
        private UIDpSummaryDockPanel1 mUIDpSummaryDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer1DockPanel1 UIPanelContainer1DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer1DockPanel == null))
                {
                    this.mUIPanelContainer1DockPanel = new UIPanelContainer1DockPanel1(this);
                }
                return this.mUIPanelContainer1DockPanel;
            }
        }
        
        public UIPanelContainer3DockPanel1 UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel1(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer1DockPanel1 mUIPanelContainer1DockPanel;
        
        private UIPanelContainer3DockPanel1 mUIPanelContainer3DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer1DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer1DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDpRoleCodesDockPanel1 UIDpRoleCodesDockPanel
        {
            get
            {
                if ((this.mUIDpRoleCodesDockPanel == null))
                {
                    this.mUIDpRoleCodesDockPanel = new UIDpRoleCodesDockPanel1(this);
                }
                return this.mUIDpRoleCodesDockPanel;
            }
        }
        
        public UIDpEmployeesDockPanel1 UIDpEmployeesDockPanel
        {
            get
            {
                if ((this.mUIDpEmployeesDockPanel == null))
                {
                    this.mUIDpEmployeesDockPanel = new UIDpEmployeesDockPanel1(this);
                }
                return this.mUIDpEmployeesDockPanel;
            }
        }
        
        public DXTestControl UILeftSeparator
        {
            get
            {
                if ((this.mUILeftSeparator == null))
                {
                    this.mUILeftSeparator = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILeftSeparator.SearchProperties[DXTestControl.PropertyNames.Name] = "Left";
                    this.mUILeftSeparator.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelResizeZone";
                    this.mUILeftSeparator.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILeftSeparator;
            }
        }
        #endregion
        
        #region Fields
        private UIDpRoleCodesDockPanel1 mUIDpRoleCodesDockPanel;
        
        private UIDpEmployeesDockPanel1 mUIDpEmployeesDockPanel;
        
        private DXTestControl mUILeftSeparator;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpRoleCodesDockPanel1 : DXDockPanel
    {
        
        public UIDpRoleCodesDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel2_ContainerCustom1 UIDockPanel2_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel2_ContainerCustom == null))
                {
                    this.mUIDockPanel2_ContainerCustom = new UIDockPanel2_ContainerCustom1(this);
                }
                return this.mUIDockPanel2_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel2_ContainerCustom1 mUIDockPanel2_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel2_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel2_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel2_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleCodeListViewCustom1 UIRoleCodeListViewCustom
        {
            get
            {
                if ((this.mUIRoleCodeListViewCustom == null))
                {
                    this.mUIRoleCodeListViewCustom = new UIRoleCodeListViewCustom1(this);
                }
                return this.mUIRoleCodeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodeListViewCustom1 mUIRoleCodeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodeListViewCustom1 : DXTestControl
    {
        
        public UIRoleCodeListViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodeListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcRoleCodesTable1 UIGcRoleCodesTable
        {
            get
            {
                if ((this.mUIGcRoleCodesTable == null))
                {
                    this.mUIGcRoleCodesTable = new UIGcRoleCodesTable1(this);
                }
                return this.mUIGcRoleCodesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRoleCodesTable1 mUIGcRoleCodesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRoleCodesTable1 : DXGrid
    {
        
        public UIGcRoleCodesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIDeltmed47204810Cell
        {
            get
            {
                if ((this.mUIDeltmed47204810Cell == null))
                {
                    this.mUIDeltmed47204810Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDeltmed47204810Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoleCodesGridControlCell[View]gvRoleCodes[Row]2[Column]colName";
                    this.mUIDeltmed47204810Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDeltmed47204810Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIDeltmed47204810Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDeltmed47204810Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpEmployeesDockPanel1 : DXDockPanel
    {
        
        public UIDpEmployeesDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer1Custom1 UIControlContainer1Custom
        {
            get
            {
                if ((this.mUIControlContainer1Custom == null))
                {
                    this.mUIControlContainer1Custom = new UIControlContainer1Custom1(this);
                }
                return this.mUIControlContainer1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer1Custom1 mUIControlContainer1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer1Custom1 : DXTestControl
    {
        
        public UIControlContainer1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeListViewCustom1 UIEmployeeListViewCustom
        {
            get
            {
                if ((this.mUIEmployeeListViewCustom == null))
                {
                    this.mUIEmployeeListViewCustom = new UIEmployeeListViewCustom1(this);
                }
                return this.mUIEmployeeListViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeListViewCustom1 mUIEmployeeListViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeListViewCustom1 : DXTestControl
    {
        
        public UIEmployeeListViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcEmployeesTable1 UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new UIGcEmployeesTable1(this);
                }
                return this.mUIGcEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployeesTable1 mUIGcEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcEmployeesTable1 : DXGrid
    {
        
        public UIGcEmployeesTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIJensenBeateCell
        {
            get
            {
                if ((this.mUIJensenBeateCell == null))
                {
                    this.mUIJensenBeateCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIJensenBeateCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployeesGridControlCell[View]gvEmployees[Row]0[Column]colDisplayName";
                    this.mUIJensenBeateCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIJensenBeateCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIJensenBeateCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIJensenBeateCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDSpecificationsDockPanel1 UIDSpecificationsDockPanel
        {
            get
            {
                if ((this.mUIDSpecificationsDockPanel == null))
                {
                    this.mUIDSpecificationsDockPanel = new UIDSpecificationsDockPanel1(this);
                }
                return this.mUIDSpecificationsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDSpecificationsDockPanel1 mUIDSpecificationsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDSpecificationsDockPanel1 : DXDockPanel
    {
        
        public UIDSpecificationsDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dSpecifications";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer2Custom1 UIControlContainer2Custom
        {
            get
            {
                if ((this.mUIControlContainer2Custom == null))
                {
                    this.mUIControlContainer2Custom = new UIControlContainer2Custom1(this);
                }
                return this.mUIControlContainer2Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer2Custom1 mUIControlContainer2Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer2Custom1 : DXTestControl
    {
        
        public UIControlContainer2Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationPanelViCustom1 UISpecificationPanelViCustom
        {
            get
            {
                if ((this.mUISpecificationPanelViCustom == null))
                {
                    this.mUISpecificationPanelViCustom = new UISpecificationPanelViCustom1(this);
                }
                return this.mUISpecificationPanelViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationPanelViCustom1 mUISpecificationPanelViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationPanelViCustom1 : DXTestControl
    {
        
        public UISpecificationPanelViCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationPanelView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationPanelView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFlowControlViewHost1Custom1 UIFlowControlViewHost1Custom
        {
            get
            {
                if ((this.mUIFlowControlViewHost1Custom == null))
                {
                    this.mUIFlowControlViewHost1Custom = new UIFlowControlViewHost1Custom1(this);
                }
                return this.mUIFlowControlViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIFlowControlViewHost1Custom1 mUIFlowControlViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFlowControlViewHost1Custom1 : DXTestControl
    {
        
        public UIFlowControlViewHost1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "flowControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationSectionCustom1 UISpecificationSectionCustom
        {
            get
            {
                if ((this.mUISpecificationSectionCustom == null))
                {
                    this.mUISpecificationSectionCustom = new UISpecificationSectionCustom1(this);
                }
                return this.mUISpecificationSectionCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationSectionCustom1 mUISpecificationSectionCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationSectionCustom1 : DXTestControl
    {
        
        public UISpecificationSectionCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationSectionView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationSectionView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom1 UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom1(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        
        public UIPcHeaderClient1 UIPcHeaderClient
        {
            get
            {
                if ((this.mUIPcHeaderClient == null))
                {
                    this.mUIPcHeaderClient = new UIPcHeaderClient1(this);
                }
                return this.mUIPcHeaderClient;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom1 mUIVhDetailsCustom;
        
        private UIPcHeaderClient1 mUIPcHeaderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom1 : DXTestControl
    {
        
        public UIVhDetailsCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISpecificationListVieCustom1 UISpecificationListVieCustom
        {
            get
            {
                if ((this.mUISpecificationListVieCustom == null))
                {
                    this.mUISpecificationListVieCustom = new UISpecificationListVieCustom1(this);
                }
                return this.mUISpecificationListVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISpecificationListVieCustom1 mUISpecificationListVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationListVieCustom1 : DXTestControl
    {
        
        public UISpecificationListVieCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationListView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationListView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIFcListCustom1 UIFcListCustom
        {
            get
            {
                if ((this.mUIFcListCustom == null))
                {
                    this.mUIFcListCustom = new UIFcListCustom1(this);
                }
                return this.mUIFcListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFcListCustom1 mUIFcListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFcListCustom1 : DXTestControl
    {
        
        public UIFcListCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fcList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FlowControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSpecificatioCustom1 UIEmployeeSpecificatioCustom
        {
            get
            {
                if ((this.mUIEmployeeSpecificatioCustom == null))
                {
                    this.mUIEmployeeSpecificatioCustom = new UIEmployeeSpecificatioCustom1(this);
                }
                return this.mUIEmployeeSpecificatioCustom;
            }
        }
        
        public UISpecificationItemVieCustom4 UISpecificationItemVieCustom
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom == null))
                {
                    this.mUISpecificationItemVieCustom = new UISpecificationItemVieCustom4(this);
                }
                return this.mUISpecificationItemVieCustom;
            }
        }
        
        public UISpecificationItemVieCustom11 UISpecificationItemVieCustom1
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom1 == null))
                {
                    this.mUISpecificationItemVieCustom1 = new UISpecificationItemVieCustom11(this);
                }
                return this.mUISpecificationItemVieCustom1;
            }
        }
        
        public UISpecificationItemVieCustom21 UISpecificationItemVieCustom2
        {
            get
            {
                if ((this.mUISpecificationItemVieCustom2 == null))
                {
                    this.mUISpecificationItemVieCustom2 = new UISpecificationItemVieCustom21(this);
                }
                return this.mUISpecificationItemVieCustom2;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSpecificatioCustom1 mUIEmployeeSpecificatioCustom;
        
        private UISpecificationItemVieCustom4 mUISpecificationItemVieCustom;
        
        private UISpecificationItemVieCustom11 mUISpecificationItemVieCustom1;
        
        private UISpecificationItemVieCustom21 mUISpecificationItemVieCustom2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeSpecificatioCustom1 : DXTestControl
    {
        
        public UIEmployeeSpecificatioCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSpecificationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSpecificationView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcNameClient1 UIPcNameClient
        {
            get
            {
                if ((this.mUIPcNameClient == null))
                {
                    this.mUIPcNameClient = new UIPcNameClient1(this);
                }
                return this.mUIPcNameClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcNameClient1 mUIPcNameClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcNameClient1 : DXTestControl
    {
        
        public UIPcNameClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblNameLabel
        {
            get
            {
                if ((this.mUILblNameLabel == null))
                {
                    this.mUILblNameLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblName";
                    this.mUILblNameLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblNameLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblNameLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblNameLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom4 : DXTestControl
    {
        
        public UISpecificationItemVieCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblOtherLabel
        {
            get
            {
                if ((this.mUILblOtherLabel == null))
                {
                    this.mUILblOtherLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblOther";
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblOtherLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblOtherLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblOtherLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom11 : DXTestControl
    {
        
        public UISpecificationItemVieCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblOtherLabel
        {
            get
            {
                if ((this.mUILblOtherLabel == null))
                {
                    this.mUILblOtherLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblOther";
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblOtherLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblOtherLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblOtherLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISpecificationItemVieCustom21 : DXTestControl
    {
        
        public UISpecificationItemVieCustom21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SpecificationItemView[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SpecificationItemView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcHeaderClient1 : DXTestControl
    {
        
        public UIPcHeaderClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcHeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblContentLabel
        {
            get
            {
                if ((this.mUILblContentLabel == null))
                {
                    this.mUILblContentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblContent";
                    this.mUILblContentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblContentLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblContentLabel;
            }
        }
        
        public DXTestControl UILblOtherLabel
        {
            get
            {
                if ((this.mUILblOtherLabel == null))
                {
                    this.mUILblOtherLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblOther";
                    this.mUILblOtherLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILblOtherLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblOtherLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblContentLabel;
        
        private DXTestControl mUILblOtherLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom3 : DXTestControl
    {
        
        public UIVhContentCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient4 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient4(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient4 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient4 : DXTestControl
    {
        
        public UIPcViewClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeFocusedManagCustom1 UIEmployeeFocusedManagCustom
        {
            get
            {
                if ((this.mUIEmployeeFocusedManagCustom == null))
                {
                    this.mUIEmployeeFocusedManagCustom = new UIEmployeeFocusedManagCustom1(this);
                }
                return this.mUIEmployeeFocusedManagCustom;
            }
        }
        
        public UIRoleFocusedManageVieCustom1 UIRoleFocusedManageVieCustom
        {
            get
            {
                if ((this.mUIRoleFocusedManageVieCustom == null))
                {
                    this.mUIRoleFocusedManageVieCustom = new UIRoleFocusedManageVieCustom1(this);
                }
                return this.mUIRoleFocusedManageVieCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeFocusedManagCustom1 mUIEmployeeFocusedManagCustom;
        
        private UIRoleFocusedManageVieCustom1 mUIRoleFocusedManageVieCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFocusedManagCustom1 : DXTestControl
    {
        
        public UIEmployeeFocusedManagCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFocusedManageView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIItemGridControl1Custom1 UIItemGridControl1Custom
        {
            get
            {
                if ((this.mUIItemGridControl1Custom == null))
                {
                    this.mUIItemGridControl1Custom = new UIItemGridControl1Custom1(this);
                }
                return this.mUIItemGridControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGridControl1Custom1 mUIItemGridControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGridControl1Custom1 : DXTestControl
    {
        
        public UIItemGridControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "itemGridControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom3 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom3(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom3 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom3 : DXTestControl
    {
        
        public UIDdGridControlCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable3 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable3(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable3 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable3 : DXGrid
    {
        
        public UIGcDragDropGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-2";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIGV108001600Cell
        {
            get
            {
                if ((this.mUIGV108001600Cell == null))
                {
                    this.mUIGV108001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGV108001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col02.01.2024";
                    this.mUIGV108001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGV108001600Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGV108001600Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIGV108001600Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleFocusedManageVieCustom1 : DXTestControl
    {
        
        public UIRoleFocusedManageVieCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleFocusedManageView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgContentCustom1 UIIgContentCustom
        {
            get
            {
                if ((this.mUIIgContentCustom == null))
                {
                    this.mUIIgContentCustom = new UIIgContentCustom1(this);
                }
                return this.mUIIgContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgContentCustom1 mUIIgContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgContentCustom1 : DXTestControl
    {
        
        public UIIgContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom4 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom4(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom4 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom4 : DXTestControl
    {
        
        public UIDdGridControlCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable4 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable4(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable4 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable4 : DXGrid
    {
        
        public UIGcDragDropGridTable4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-2";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]ColumnHandle-1-7";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-9";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-10";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]ColumnHandle-1-12";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]ColumnHandle-1-14";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]ColumnHandle-1-14";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXScrollBar UIHCrkScrollBarScrollBarControl
        {
            get
            {
                if ((this.mUIHCrkScrollBarScrollBarControl == null))
                {
                    this.mUIHCrkScrollBarScrollBarControl = new DXScrollBar(this);
                    #region Search Criteria
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridHCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "HCrkScrollBar";
                    this.mUIHCrkScrollBarScrollBarControl.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIHCrkScrollBarScrollBarControl;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]ColumnHandle-1-28";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXCell UIItemCell8
        {
            get
            {
                if ((this.mUIItemCell8 == null))
                {
                    this.mUIItemCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1-30";
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell8.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell8;
            }
        }
        
        public DXCell UIItemCell9
        {
            get
            {
                if ((this.mUIItemCell9 == null))
                {
                    this.mUIItemCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]ColumnHandle-1-31";
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell9.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell9;
            }
        }
        
        public DXCell UIItemCell10
        {
            get
            {
                if ((this.mUIItemCell10 == null))
                {
                    this.mUIItemCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]ColumnHandle-1-33";
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell10.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell10;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]ColumnHandle-1-35";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]ColumnHandle-1-35";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXCell UICriticalOppgaveDeltmCell
        {
            get
            {
                if ((this.mUICriticalOppgaveDeltmCell == null))
                {
                    this.mUICriticalOppgaveDeltmCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICriticalOppgaveDeltmCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col03.01.2024";
                    this.mUICriticalOppgaveDeltmCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICriticalOppgaveDeltmCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUICriticalOppgaveDeltmCell;
            }
        }
        
        public DXCell UID1JensenBeate0800160Cell
        {
            get
            {
                if ((this.mUID1JensenBeate0800160Cell == null))
                {
                    this.mUID1JensenBeate0800160Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID1JensenBeate0800160Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col02.01.2024";
                    this.mUID1JensenBeate0800160Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID1JensenBeate0800160Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID1JensenBeate0800160Cell;
            }
        }
        
        public DXCell UIXN1JensenBeate220008Cell
        {
            get
            {
                if ((this.mUIXN1JensenBeate220008Cell == null))
                {
                    this.mUIXN1JensenBeate220008Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXN1JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col31.12.2023";
                    this.mUIXN1JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXN1JensenBeate220008Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXN1JensenBeate220008Cell;
            }
        }
        
        public DXCell UIXD1JensenBeate080010Cell
        {
            get
            {
                if ((this.mUIXD1JensenBeate080010Cell == null))
                {
                    this.mUIXD1JensenBeate080010Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXD1JensenBeate080010Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col03.01.2024";
                    this.mUIXD1JensenBeate080010Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXD1JensenBeate080010Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXD1JensenBeate080010Cell;
            }
        }
        
        public DXCell UIXA1JensenBeate160018Cell
        {
            get
            {
                if ((this.mUIXA1JensenBeate160018Cell == null))
                {
                    this.mUIXA1JensenBeate160018Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXA1JensenBeate160018Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col05.01.2024";
                    this.mUIXA1JensenBeate160018Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXA1JensenBeate160018Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXA1JensenBeate160018Cell;
            }
        }
        
        public DXCell UIXWarningAnsattmangleCell
        {
            get
            {
                if ((this.mUIXWarningAnsattmangleCell == null))
                {
                    this.mUIXWarningAnsattmangleCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXWarningAnsattmangleCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col07.01.2024";
                    this.mUIXWarningAnsattmangleCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXWarningAnsattmangleCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXWarningAnsattmangleCell;
            }
        }
        
        public DXCell UIXBV1JensenBeate22000Cell
        {
            get
            {
                if ((this.mUIXBV1JensenBeate22000Cell == null))
                {
                    this.mUIXBV1JensenBeate22000Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXBV1JensenBeate22000Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col07.01.2024";
                    this.mUIXBV1JensenBeate22000Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXBV1JensenBeate22000Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXBV1JensenBeate22000Cell;
            }
        }
        
        public DXCell UIXN1JensenBeate220008Cell1
        {
            get
            {
                if ((this.mUIXN1JensenBeate220008Cell1 == null))
                {
                    this.mUIXN1JensenBeate220008Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIXN1JensenBeate220008Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col21.01.2024";
                    this.mUIXN1JensenBeate220008Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXN1JensenBeate220008Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXN1JensenBeate220008Cell1;
            }
        }
        
        public DXCell UIXD1JensenBeate080016Cell
        {
            get
            {
                if ((this.mUIXD1JensenBeate080016Cell == null))
                {
                    this.mUIXD1JensenBeate080016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXD1JensenBeate080016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col23.01.2024";
                    this.mUIXD1JensenBeate080016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXD1JensenBeate080016Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXD1JensenBeate080016Cell;
            }
        }
        
        public DXCell UIXD1JensenBeate080010Cell1
        {
            get
            {
                if ((this.mUIXD1JensenBeate080010Cell1 == null))
                {
                    this.mUIXD1JensenBeate080010Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIXD1JensenBeate080010Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]1[Column]col24.01.2024";
                    this.mUIXD1JensenBeate080010Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXD1JensenBeate080010Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXD1JensenBeate080010Cell1;
            }
        }
        
        public DXCell UIXA1JensenBeate160018Cell1
        {
            get
            {
                if ((this.mUIXA1JensenBeate160018Cell1 == null))
                {
                    this.mUIXA1JensenBeate160018Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIXA1JensenBeate160018Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]2[Column]col26.01.2024";
                    this.mUIXA1JensenBeate160018Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXA1JensenBeate160018Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXA1JensenBeate160018Cell1;
            }
        }
        
        public DXCell UIXWarningAnsattmangleCell1
        {
            get
            {
                if ((this.mUIXWarningAnsattmangleCell1 == null))
                {
                    this.mUIXWarningAnsattmangleCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIXWarningAnsattmangleCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]3[Column]col28.01.2024";
                    this.mUIXWarningAnsattmangleCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXWarningAnsattmangleCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXWarningAnsattmangleCell1;
            }
        }
        
        public DXCell UIXBV1JensenBeate22000Cell1
        {
            get
            {
                if ((this.mUIXBV1JensenBeate22000Cell1 == null))
                {
                    this.mUIXBV1JensenBeate22000Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIXBV1JensenBeate22000Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col28.01.2024";
                    this.mUIXBV1JensenBeate22000Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXBV1JensenBeate22000Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXBV1JensenBeate22000Cell1;
            }
        }
        
        public DXCell UIXN1JensenBeate220008Cell2
        {
            get
            {
                if ((this.mUIXN1JensenBeate220008Cell2 == null))
                {
                    this.mUIXN1JensenBeate220008Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIXN1JensenBeate220008Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]8[Column]col31.12.2023";
                    this.mUIXN1JensenBeate220008Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXN1JensenBeate220008Cell2.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXN1JensenBeate220008Cell2;
            }
        }
        
        public DXCell UID1JensenBeate0800100Cell
        {
            get
            {
                if ((this.mUID1JensenBeate0800100Cell == null))
                {
                    this.mUID1JensenBeate0800100Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUID1JensenBeate0800100Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col03.01.2024";
                    this.mUID1JensenBeate0800100Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID1JensenBeate0800100Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID1JensenBeate0800100Cell;
            }
        }
        
        public DXCell UIA1JensenBeate1600180Cell
        {
            get
            {
                if ((this.mUIA1JensenBeate1600180Cell == null))
                {
                    this.mUIA1JensenBeate1600180Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIA1JensenBeate1600180Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]col05.01.2024";
                    this.mUIA1JensenBeate1600180Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIA1JensenBeate1600180Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIA1JensenBeate1600180Cell;
            }
        }
        
        public DXCell UIWarningAnsattmanglerCell
        {
            get
            {
                if ((this.mUIWarningAnsattmanglerCell == null))
                {
                    this.mUIWarningAnsattmanglerCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIWarningAnsattmanglerCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col07.01.2024";
                    this.mUIWarningAnsattmanglerCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIWarningAnsattmanglerCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIWarningAnsattmanglerCell;
            }
        }
        
        public DXCell UIBV1JensenBeate220008Cell
        {
            get
            {
                if ((this.mUIBV1JensenBeate220008Cell == null))
                {
                    this.mUIBV1JensenBeate220008Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBV1JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]8[Column]col07.01.2024";
                    this.mUIBV1JensenBeate220008Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBV1JensenBeate220008Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIBV1JensenBeate220008Cell;
            }
        }
        
        public DXCell UIXN1JensenBeate220008Cell3
        {
            get
            {
                if ((this.mUIXN1JensenBeate220008Cell3 == null))
                {
                    this.mUIXN1JensenBeate220008Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIXN1JensenBeate220008Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]8[Column]col21.01.2024";
                    this.mUIXN1JensenBeate220008Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXN1JensenBeate220008Cell3.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXN1JensenBeate220008Cell3;
            }
        }
        
        public DXCell UID1JensenBeate0800100Cell1
        {
            get
            {
                if ((this.mUID1JensenBeate0800100Cell1 == null))
                {
                    this.mUID1JensenBeate0800100Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUID1JensenBeate0800100Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]4[Column]col24.01.2024";
                    this.mUID1JensenBeate0800100Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUID1JensenBeate0800100Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUID1JensenBeate0800100Cell1;
            }
        }
        
        public DXCell UIA1JensenBeate1600180Cell1
        {
            get
            {
                if ((this.mUIA1JensenBeate1600180Cell1 == null))
                {
                    this.mUIA1JensenBeate1600180Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIA1JensenBeate1600180Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]6[Column]col26.01.2024";
                    this.mUIA1JensenBeate1600180Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIA1JensenBeate1600180Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIA1JensenBeate1600180Cell1;
            }
        }
        
        public DXCell UIWarningAnsattmanglerCell1
        {
            get
            {
                if ((this.mUIWarningAnsattmanglerCell1 == null))
                {
                    this.mUIWarningAnsattmanglerCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIWarningAnsattmanglerCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]7[Column]col28.01.2024";
                    this.mUIWarningAnsattmanglerCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIWarningAnsattmanglerCell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIWarningAnsattmanglerCell1;
            }
        }
        
        public DXCell UIBV1JensenBeate220008Cell1
        {
            get
            {
                if ((this.mUIBV1JensenBeate220008Cell1 == null))
                {
                    this.mUIBV1JensenBeate220008Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIBV1JensenBeate220008Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]8[Column]col28.01.2024";
                    this.mUIBV1JensenBeate220008Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBV1JensenBeate220008Cell1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIBV1JensenBeate220008Cell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIItemCell3;
        
        private DXCell mUIItemCell4;
        
        private DXCell mUIItemCell5;
        
        private DXCell mUIItemCell6;
        
        private DXScrollBar mUIHCrkScrollBarScrollBarControl;
        
        private DXCell mUIItemCell7;
        
        private DXCell mUIItemCell8;
        
        private DXCell mUIItemCell9;
        
        private DXCell mUIItemCell10;
        
        private DXCell mUIItemCell11;
        
        private DXCell mUIItemCell12;
        
        private DXCell mUICriticalOppgaveDeltmCell;
        
        private DXCell mUID1JensenBeate0800160Cell;
        
        private DXCell mUIXN1JensenBeate220008Cell;
        
        private DXCell mUIXD1JensenBeate080010Cell;
        
        private DXCell mUIXA1JensenBeate160018Cell;
        
        private DXCell mUIXWarningAnsattmangleCell;
        
        private DXCell mUIXBV1JensenBeate22000Cell;
        
        private DXCell mUIXN1JensenBeate220008Cell1;
        
        private DXCell mUIXD1JensenBeate080016Cell;
        
        private DXCell mUIXD1JensenBeate080010Cell1;
        
        private DXCell mUIXA1JensenBeate160018Cell1;
        
        private DXCell mUIXWarningAnsattmangleCell1;
        
        private DXCell mUIXBV1JensenBeate22000Cell1;
        
        private DXCell mUIXN1JensenBeate220008Cell2;
        
        private DXCell mUID1JensenBeate0800100Cell;
        
        private DXCell mUIA1JensenBeate1600180Cell;
        
        private DXCell mUIWarningAnsattmanglerCell;
        
        private DXCell mUIBV1JensenBeate220008Cell;
        
        private DXCell mUIXN1JensenBeate220008Cell3;
        
        private DXCell mUID1JensenBeate0800100Cell1;
        
        private DXCell mUIA1JensenBeate1600180Cell1;
        
        private DXCell mUIWarningAnsattmanglerCell1;
        
        private DXCell mUIBV1JensenBeate220008Cell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpDisponibleDockPanel1 : DXDockPanel
    {
        
        public UIDpDisponibleDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpDisponible";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIControlContainer4Custom1 UIControlContainer4Custom
        {
            get
            {
                if ((this.mUIControlContainer4Custom == null))
                {
                    this.mUIControlContainer4Custom = new UIControlContainer4Custom1(this);
                }
                return this.mUIControlContainer4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainer4Custom1 mUIControlContainer4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainer4Custom1 : DXTestControl
    {
        
        public UIControlContainer4Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "controlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDispGridViewCustom1 UIDispGridViewCustom
        {
            get
            {
                if ((this.mUIDispGridViewCustom == null))
                {
                    this.mUIDispGridViewCustom = new UIDispGridViewCustom1(this);
                }
                return this.mUIDispGridViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispGridViewCustom1 mUIDispGridViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDispGridViewCustom1 : DXTestControl
    {
        
        public UIDispGridViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispGridView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispGridView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIIgAvailabilityCustom1 UIIgAvailabilityCustom
        {
            get
            {
                if ((this.mUIIgAvailabilityCustom == null))
                {
                    this.mUIIgAvailabilityCustom = new UIIgAvailabilityCustom1(this);
                }
                return this.mUIIgAvailabilityCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIIgAvailabilityCustom1 mUIIgAvailabilityCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIgAvailabilityCustom1 : DXTestControl
    {
        
        public UIIgAvailabilityCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "igAvailability";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom5 UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom5(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom5 mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom5 : DXTestControl
    {
        
        public UIDdGridControlCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable5 UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable5(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable5 mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable5 : DXGrid
    {
        
        public UIGcDragDropGridTable5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIXD2MonkErik08001600Cell
        {
            get
            {
                if ((this.mUIXD2MonkErik08001600Cell == null))
                {
                    this.mUIXD2MonkErik08001600Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIXD2MonkErik08001600Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]col03.01.2024";
                    this.mUIXD2MonkErik08001600Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIXD2MonkErik08001600Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXD2MonkErik08001600Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIXD2MonkErik08001600Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpSummaryDockPanel1 : DXDockPanel
    {
        
        public UIDpSummaryDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom1 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom1(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom1 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISumDemandHostViewCustom1 UISumDemandHostViewCustom
        {
            get
            {
                if ((this.mUISumDemandHostViewCustom == null))
                {
                    this.mUISumDemandHostViewCustom = new UISumDemandHostViewCustom1(this);
                }
                return this.mUISumDemandHostViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISumDemandHostViewCustom1 mUISumDemandHostViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISumDemandHostViewCustom1 : DXTestControl
    {
        
        public UISumDemandHostViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SumDemandHostView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SumDemandHostView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom1 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom1(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom1 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom1 : DXTestControl
    {
        
        public UIViewHost1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient5 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient5(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient5 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient5 : DXTestControl
    {
        
        public UIPcViewClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcSumDemandTable1 UIGcSumDemandTable
        {
            get
            {
                if ((this.mUIGcSumDemandTable == null))
                {
                    this.mUIGcSumDemandTable = new UIGcSumDemandTable1(this);
                }
                return this.mUIGcSumDemandTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcSumDemandTable1 mUIGcSumDemandTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSumDemandTable1 : DXGrid
    {
        
        public UIGcSumDemandTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemand";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem2020Cell
        {
            get
            {
                if ((this.mUIItem2020Cell == null))
                {
                    this.mUIItem2020Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2020Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemandGridControlCell[View]gvSumDemand[Row]6[Column]03.01.2024 onsdag";
                    this.mUIItem2020Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2020Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem2020Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem2020Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient6 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient6(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient6 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient6 : DXTestControl
    {
        
        public UIPcViewClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStandaloneBarDockConCustom : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainmenuMenuBar : DXMenu
    {
        
        public UIMainmenuMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuItem UIMandag010120241NyttåBarItem
        {
            get
            {
                if ((this.mUIMandag010120241NyttåBarItem == null))
                {
                    this.mUIMandag010120241NyttåBarItem = new DXMenuItem(this);
                    #region Search Criteria
                    this.mUIMandag010120241NyttåBarItem.SearchProperties[DXTestControl.PropertyNames.Name] = "lblSelectedDate";
                    this.mUIMandag010120241NyttåBarItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
                    this.mUIMandag010120241NyttåBarItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIMandag010120241NyttåBarItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuItem mUIMandag010120241NyttåBarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDøgnrytmelagWindow : DXWindow
    {
        
        public UIDøgnrytmelagWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Døgnrytme lag";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UIGsMainControlNavBar UIGsMainControlNavBar
        {
            get
            {
                if ((this.mUIGsMainControlNavBar == null))
                {
                    this.mUIGsMainControlNavBar = new UIGsMainControlNavBar(this);
                }
                return this.mUIGsMainControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsMainControlNavBar mUIGsMainControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsMainControlNavBar : DXNavBar
    {
        
        public UIGsMainControlNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsMainControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UINbgccLayersScrollableControl UINbgccLayersScrollableControl
        {
            get
            {
                if ((this.mUINbgccLayersScrollableControl == null))
                {
                    this.mUINbgccLayersScrollableControl = new UINbgccLayersScrollableControl(this);
                }
                return this.mUINbgccLayersScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccLayersScrollableControl mUINbgccLayersScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgccLayersScrollableControl : DXScrollableControl
    {
        
        public UINbgccLayersScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccLayers";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UIGcItemsTable UIGcItemsTable
        {
            get
            {
                if ((this.mUIGcItemsTable == null))
                {
                    this.mUIGcItemsTable = new UIGcItemsTable(this);
                }
                return this.mUIGcItemsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcItemsTable mUIGcItemsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcItemsTable : DXGrid
    {
        
        public UIGcItemsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItems";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItemsGridControlCell[View]gvItems[Row]1[Column]cInBook";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXColumnHeader UICItemNameDayRColumnHeader
        {
            get
            {
                if ((this.mUICItemNameDayRColumnHeader == null))
                {
                    this.mUICItemNameDayRColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUICItemNameDayRColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItemsGridControlColumnHeader[View]gvItems[Column]cItemNameDayR";
                    this.mUICItemNameDayRColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUICItemNameDayRColumnHeader.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUICItemNameDayRColumnHeader;
            }
        }
        
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItemsGridControlCell[View]gvItems[Row]3[Column]cInBook";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        
        private DXColumnHeader mUICItemNameDayRColumnHeader;
        
        private DXCell mUIIkkevalgtCell;
        #endregion
    }
}
