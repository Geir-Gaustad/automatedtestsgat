// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _099_Test_Distribusjon_Leveranse
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {

        /// <summary>
        /// AddTaskScedulerPassword - Use 'AddTaskScedulerPasswordParams' to pass parameters into this method.
        ///Globalt oppsett | Tjenester | Tjeneste scedulering = mysecret
        /// </summary>
        public void AddTaskScedulerPassword()
        {
            #region Variable Declarations
            WinClient uIGlobaltoppsettClient = this.UIGlobaltoppsettWindow.UIItemWindow.UIGlobaltoppsettClient;
            WinEdit uIItemEdit = this.UIGlobaltoppsettWindow.UIMYSECRETWindow.UIItemEdit;
            WinButton uILagreButton = this.UIGlobaltoppsettWindow.UIItemWindow1.UIGlobaltoppsettClient.UILagreButton;
            #endregion

            // Click 'Globalt oppsett' client
            Mouse.Move(uIGlobaltoppsettClient, new Point(100, 490));
            Mouse.Click(uIGlobaltoppsettClient, new Point(100, 490));

            // Type 'mysecret' in text box
            uIItemEdit.Text = this.AddTaskScedulerPasswordParams.UIItemEditText;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit, this.AddTaskScedulerPasswordParams.UIItemEditSendKeys, ModifierKeys.None);

            // Click '&Lagre' button
            Mouse.Click(uILagreButton, new Point(34, 11));
        }
        
        /// <summary>
        /// BringEgenmeldingToFront
        /// </summary>
        public void BringEgenmeldingToFront()
        {
            #region Variable Declarations
            WinClient uIEGENMELDINGVEDSYKEFRClient1 = this.UIDokumentWindow.UITextControl1Window.UIEGENMELDINGVEDSYKEFRClient1;
            #endregion

            // Click 'EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødse...' client
            Mouse.Click(uIEGENMELDINGVEDSYKEFRClient1, new Point(970, 327));
        }
        
        /// <summary>
        /// CancelEditWsUrl
        /// </summary>
        public void CancelEditWsUrl()
        {
            #region Variable Declarations
            WinButton uIAvbrytButton = this.UIBasisURLforWebservicWindow.UIItemClient.UIAvbrytButton;
            #endregion

            // Click 'Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(30, 23));
        }
        
        /// <summary>
        /// ChangeDepartment
        /// </summary>
        public void ChangeDepartment_old()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uINivåBarBaseButtonItem = this.UIGatver64339335ASCLAvWindow.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UINivåBarBaseButtonItem;
            #endregion

            // Click 'Nivå' BarBaseButtonItem
            Mouse.Click(uINivåBarBaseButtonItem, new Point(38, 10));
        }
        
        /// <summary>
        /// CheckArbeidsplanTab - Use 'CheckArbeidsplanTabExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckArbeidsplanTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIÅpneRibbonBaseButtonItem = this.UIGatver65041007ASCLAvWindow1.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIRosterPlanListCustom.UIPnlGridClient.UIRibbonControlRibbon.UIRpHomeRibbonPage.UIRpgPlanRibbonPageGroup.UIÅpneRibbonBaseButtonItem;
            #endregion

            // Verify that the 'Enabled' property of 'Åpne' RibbonBaseButtonItem equals 'True'
            Assert.AreEqual(this.CheckArbeidsplanTabExpectedValues.UIÅpneRibbonBaseButtonItemEnabled, uIÅpneRibbonBaseButtonItem.Exists, "Feil i ArbedsplanTab");
        }
        
        /// <summary>
        /// CheckAvdelingTab - Use 'CheckAvdelingTabExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAvdelingTab()
        {
            #region Variable Declarations
            WinClient uIAvdelingClient = this.UIGatver65038745ASCLAvWindow2.UIItemWindow2.UIAvdelingClient;
            #endregion

            // Verify that the 'Enabled' property of 'Avdeling' client equals 'True'
            Assert.AreEqual(this.CheckAvdelingTabExpectedValues.UIAvdelingClientEnabled, uIAvdelingClient.Enabled, "Feil i AvdelingTab");
        }
        
        /// <summary>
        /// CheckBudsjetTab - Use 'CheckBudsjetTabExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBudsjetTab()
        {
            #region Variable Declarations
            WinClient uIBudsjettClient = this.UIGatver65038745ASCLAvWindow2.UIItemWindow4.UIBudsjettClient;
            #endregion

            // Verify that the 'Enabled' property of 'Budsjett' client equals 'True'
            Assert.AreEqual(this.CheckBudsjetTabExpectedValues.UIBudsjettClientEnabled, uIBudsjettClient.Enabled, "Feil i budsjettTab");
        }
        
        /// <summary>
        /// CheckBusinessAnalyzeService - Use 'CheckBusinessAnalyzeServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBusinessAnalyzeService()
        {
            #region Variable Declarations
            HtmlHyperlink uIUpdateBussinessAnalyHyperlink = this.UIGatWebserviceMainPagWindow.UIBussinesAnalyzeServiDocument.UIContentPane.UIUpdateBussinessAnalyHyperlink;
            #endregion

            // Verify that the 'FriendlyName' property of 'UpdateBussinessAnalyzeData' link equals 'UpdateBussinessAnalyzeData'
            Assert.AreEqual(this.CheckBusinessAnalyzeServiceExpectedValues.UIUpdateBussinessAnalyHyperlinkFriendlyName, uIUpdateBussinessAnalyHyperlink.FriendlyName, "Feil i BusinessAnalyzeService");
        }
        
        /// <summary>
        /// CheckCalendarIntegrationWebService - Use 'CheckCalendarIntegrationWebServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalendarIntegrationWebService()
        {
            #region Variable Declarations
            HtmlHyperlink uIDistributeHyperlink = this.UIGatWebserviceMainPagWindow.UICalendarIntegrationWDocument.UIContentPane.UIDistributeHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Distribute' link equals 'Distribute'
            Assert.AreEqual(this.CheckCalendarIntegrationWebServiceExpectedValues.UIDistributeHyperlinkInnerText, uIDistributeHyperlink.InnerText, "Feil i CalendarIntegrationWebService");
        }
        
        /// <summary>
        /// CheckCalendarService - Use 'CheckCalendarServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalendarService()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetJourShiftsHyperlink = this.UIGatWebserviceMainPagWindow.UICalendarServiceWebSeDocument.UIContentPane.UIGetJourShiftsHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetJourShifts' link equals 'GetJourShifts'
            Assert.AreEqual(this.CheckCalendarServiceExpectedValues.UIGetJourShiftsHyperlinkInnerText, uIGetJourShiftsHyperlink.InnerText, "Feil i CalendarService");
        }
        
        /// <summary>
        /// CheckCommunicationQueueService - Use 'CheckCommunicationQueueServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCommunicationQueueService()
        {
            #region Variable Declarations
            HtmlHyperlink uIFillMessageQueueWithHyperlink = this.UIGatWebservices2MainPWindow.UICommunicationQueueSeDocument.UIContentPane.UIFillMessageQueueWithHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'FillMessageQueueWithDashboardWarnings' link equals 'FillMessageQueueWithDashboardWarnings'
            Assert.AreEqual(this.CheckCommunicationQueueServiceExpectedValues.UIFillMessageQueueWithHyperlinkInnerText, uIFillMessageQueueWithHyperlink.InnerText, "Feil i CommunicationQueueService");
        }
        
        /// <summary>
        /// CheckDateTimePicker - Use 'CheckDateTimePickerExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDateTimePicker()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIVelgdatoBarBaseButtonItem = this.UIGatver635ASCLAvd3002Window.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIVelgdatoBarBaseButtonItem;
            #endregion

            // Verify that the 'Name' property of 'Velg dato' BarBaseButtonItem equals 'btnDatePicker'
            Assert.AreEqual(this.CheckDateTimePickerExpectedValues.UIVelgdatoBarBaseButtonItemName, uIVelgdatoBarBaseButtonItem.Name);
        }

        /// <summary>
        /// CheckDepartmentServiceV2 - Use 'CheckDepartmentServiceV2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDepartmentServiceV2()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetDepartmentRosterHyperlink = this.UIGatWebserviceMainPagWindow.UIDepartmentServiceV2WDocument.UIContentPane.UIGetDepartmentRosterHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetDepartmentRoster' link equals 'GetDepartmentRoster'
            Assert.AreEqual(this.CheckDepartmentServiceV2ExpectedValues.UIGetDepartmentRosterHyperlinkInnerText, uIGetDepartmentRosterHyperlink.InnerText, "Feil i DepartmentServiceV2");
        }
        
        /// <summary>
        /// CheckDepartmentServiceV63 - Use 'CheckDepartmentServiceV63ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDepartmentServiceV63()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetDepartmentRosterHyperlink = this.UIGatWebserviceMainPagWindow.UIDepartmentServiceV63Document.UIContentPane.UIGetDepartmentRosterHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetDepartmentRoster' link equals 'GetDepartmentRoster'
            Assert.AreEqual(this.CheckDepartmentServiceV63ExpectedValues.UIGetDepartmentRosterHyperlinkInnerText, uIGetDepartmentRosterHyperlink.InnerText, "Feil i DepartmentServiceV63");
        }
        
        /// <summary>
        /// CheckEkstrainfoTab - Use 'CheckEkstrainfoTabExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEkstrainfoTab()
        {
            #region Variable Declarations
            WinClient uIEkstrainfoClient = this.UIGatver65038745ASCLAvWindow2.UIItemWindow.UIEkstrainfoClient;
            #endregion

            // Verify that the 'FriendlyName' property of 'Ekstrainfo' client equals 'Ekstrainfo'

            //if(isSe)
            //    Assert.AreEqual("Extrainfo", uIEkstrainfoClient.FriendlyName, "Feil i ekstrainfo");
            //else
            Assert.AreEqual(this.CheckEkstrainfoTabExpectedValues.UIEkstrainfoClientFriendlyName, uIEkstrainfoClient.FriendlyName, "Feil i ekstrainfo");
        }
        
        /// <summary>
        /// CheckEmployeeChangeTrackingService - Use 'CheckEmployeeChangeTrackingServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEmployeeChangeTrackingService()
        {
            #region Variable Declarations
            HtmlHyperlink uIPushEmployeeDataChanHyperlink = this.UIGatWebserviceMainPagWindow.UIEmployeeChangeTrackiDocument.UIContentPane.UIPushEmployeeDataChanHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'PushEmployeeDataChanges' link equals 'PushEmployeeDataChanges'
            Assert.AreEqual(this.CheckEmployeeChangeTrackingServiceExpectedValues.UIPushEmployeeDataChanHyperlinkInnerText, uIPushEmployeeDataChanHyperlink.InnerText, "Feil i EmployeeChangeTrackingService");
        }
        
        /// <summary>
        /// CheckEmployeeService - Use 'CheckEmployeeServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEmployeeService()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetEmployeeHyperlink = this.UIGatWebserviceMainPagWindow.UIEmployeeServiceWebSeDocument.UIContentPane.UIGetEmployeeHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetEmployee' link equals 'GetEmployee'
            Assert.AreEqual(this.CheckEmployeeServiceExpectedValues.UIGetEmployeeHyperlinkInnerText, uIGetEmployeeHyperlink.InnerText, "Feil i EmployeeService");
        }
        
        /// <summary>
        /// CheckEmployeeServiceV63 - Use 'CheckEmployeeServiceV63ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEmployeeServiceV63()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetEmployeeHyperlink = this.UIGatWebserviceMainPagWindow.UIEmployeeServiceV63WeDocument.UIContentPane.UIGetEmployeeHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetEmployee' link equals 'GetEmployee'
            Assert.AreEqual(this.CheckEmployeeServiceV63ExpectedValues.UIGetEmployeeHyperlinkInnerText, uIGetEmployeeHyperlink.InnerText, "Feil i EmployeeServiceV63");
        }
        
        /// <summary>
        /// CheckExportService - Use 'CheckExportServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckExportService()
        {
            #region Variable Declarations
            HtmlHyperlink uIPostAfterSystemExporHyperlink = this.UIGatWebserviceMainPagWindow.UIExportServiceWebServDocument.UIContentPane.UIPostAfterSystemExporHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'PostAfterSystemExportReceipt' link equals 'PostAfterSystemExportReceipt'
            Assert.AreEqual(this.CheckExportServiceExpectedValues.UIPostAfterSystemExporHyperlinkInnerText, uIPostAfterSystemExporHyperlink.InnerText, "Feil i ExportService");
        }
        
        /// <summary>
        /// CheckGatFlexServices - Use 'CheckGatFlexServicesExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckGatFlexServices()
        {
            #region Variable Declarations
            HtmlHyperlink uIDeleteQueueAbsencePeHyperlink = this.UIGatWebserviceMainPagWindow.UIGatFlexServicesWebSeDocument.UIContentPane.UIDeleteQueueAbsencePeHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'DeleteQueueAbsencePeriods' link equals 'DeleteQueueAbsencePeriods'
            Assert.AreEqual(this.CheckGatFlexServicesExpectedValues.UIDeleteQueueAbsencePeHyperlinkInnerText, uIDeleteQueueAbsencePeHyperlink.InnerText, "Feil i Gat-Flex Services");
        }
        
        /// <summary>
        /// CheckGatGericaService - Use 'CheckGatGericaServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckGatGericaService()
        {
            #region Variable Declarations
            HtmlHyperlink uIA_PrsGericaWS_GenereHyperlink = this.UIGatWebserviceMainPagWindow.UIGatGericaWebServiceDocument.UIContentPane.UIA_PrsGericaWS_GenereHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'A_PrsGericaWS_Generell_Info' link equals 'A_PrsGericaWS_Generell_Info'
            Assert.AreEqual(this.CheckGatGericaServiceExpectedValues.UIA_PrsGericaWS_GenereHyperlinkInnerText, uIA_PrsGericaWS_GenereHyperlink.InnerText, "Feil i GatGerica");
        }
        
        /// <summary>
        /// CheckGatTaskSchedulerDataService - Use 'CheckGatTaskSchedulerDataServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckGatTaskSchedulerDataService()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetScheduledTasksHyperlink = this.UIGatWebserviceMainPagWindow.UIGatTaskSchedulerDataDocument.UIContentPane.UIGetScheduledTasksHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetScheduledTasks' link equals 'GetScheduledTasks'
            Assert.AreEqual(this.CheckGatTaskSchedulerDataServiceExpectedValues.UIGetScheduledTasksHyperlinkInnerText, uIGetScheduledTasksHyperlink.InnerText, "Feil i GatTaskSchedulerDataService");
        }
        
        /// <summary>
        /// CheckGrovplanTab - Use 'CheckGrovplanTabExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckGrovplanTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINivåRibbonBaseButtonItem = this.UIGatver65038745ASCLAvWindow2.UIMainMenuControlCustom.UIRcMainRibbon.UIRpMainRibbonPage.UIRpgPeriodViewViewRibbonPageGroup.UINivåRibbonBaseButtonItem;
            #endregion

            // Verify that the 'Enabled' property of 'Nivå' RibbonBaseButtonItem equals 'True'
            Assert.AreEqual(this.CheckGrovplanTabExpectedValues.UINivåRibbonBaseButtonItemEnabled, uINivåRibbonBaseButtonItem.Enabled, "Feil i GrovplanTab");
        }
        
        /// <summary>
        /// CheckHeHa - Use 'CheckHeHaExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckHeHa()
        {
            #region Variable Declarations
            WinText uIHeleneText = this.UIGATFlexWindow2.UIDocumentsHostTabList.UIAnsattCustom.UIEmployeeClockControlCustom.UIXscMainScrollableControl.UIHeleneWindow.UIHeleneText;
            #endregion

            // Verify that the 'Name' property of 'Helene' label equals 'Helene'
            Assert.AreEqual(this.CheckHeHaExpectedValues.UIHeleneTextName, uIHeleneText.Name, "Wrong Employee");
        }
        
        /// <summary>
        /// CheckHelpFileButtonTextSwe - Use 'CheckHelpFileButtonTextSweExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckHelpFileButtonTextSwe()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIHjälpBarBaseButtonItem = this.UIGatver64238635ASCLAvWindow2.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIHjälpBarBaseButtonItem;
            #endregion

            // Verify that the 'Text' property of 'Hjälp' BarBaseButtonItem equals 'Hjälp'
            Assert.AreEqual(this.CheckHelpFileButtonTextSweExpectedValues.UIHjälpBarBaseButtonItemText, uIHjälpBarBaseButtonItem.Text, "Feil i svensk tekst");
        }
        
        /// <summary>
        /// CheckHelpFileLink - Use 'CheckHelpFileLinkExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckHelpFileLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIMinGatHelpFilePageHyperlink = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIMinGatHelpFilePageHyperlink;
            #endregion

            // Verify that the 'Href' property of '/MinGat/HelpFile/Page' link equals 'https://localhost/MinGat/HelpFile/Page?pageId=Employee_Home'
            Assert.AreEqual(this.CheckHelpFileLinkExpectedValues.UIMinGatHelpFilePageHyperlinkHref, uIMinGatHelpFilePageHyperlink.Href, "Wrong linkaddress");
        }
        
        /// <summary>
        /// CheckIdmService - Use 'CheckIdmServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckIdmService()
        {
            #region Variable Declarations
            HtmlHyperlink uIActivateUserHyperlink = this.UIGatWebservices2MainPWindow.UIIdmServiceWebServiceDocument.UIContentPane.UIActivateUserHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'ActivateUser' link equals 'ActivateUser'
            Assert.AreEqual(this.CheckIdmServiceExpectedValues.UIActivateUserHyperlinkInnerText, uIActivateUserHyperlink.InnerText, "Feil i IdmService");
        }
        
        /// <summary>
        /// CheckImportService - Use 'CheckImportServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckImportService()
        {
            #region Variable Declarations
            HtmlHyperlink uIInsertDepEmpHyperlink = this.UIGatWebserviceMainPagWindow.UIImportServiceWebServDocument.UIContentPane.UIInsertDepEmpHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'InsertDepEmp' link equals 'InsertDepEmp'
            Assert.AreEqual(this.CheckImportServiceExpectedValues.UIInsertDepEmpHyperlinkInnerText, uIInsertDepEmpHyperlink.InnerText, "Feil i ImportService");
        }
        
        /// <summary>
        /// CheckLISTab - Use 'CheckLISTabExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckLISTab()
        {
            #region Variable Declarations
            WinCheckBox uIAvanserteinstillingeCheckBox = this.UIGatver65038745ASCLAvWindow2.UIItemWindow1.UILISClient.UIAvanserteinstillingeCheckBox;
            #endregion

            // Verify that the 'Enabled' property of 'Avanserte instillinger' check box equals 'True'
            Assert.AreEqual(this.CheckLISTabExpectedValues.UIAvanserteinstillingeCheckBoxEnabled, uIAvanserteinstillingeCheckBox.Enabled, "Feil i LIS");
        }
        
        /// <summary>
        /// CheckMainTitleMinGatSwe - Use 'CheckMainTitleMinGatSweExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMainTitleMinGatSwe()
        {
            #region Variable Declarations
            HtmlDiv uIStartsidanTillbakaPane = this.UIStartsidanMinGatv642Window.UIStartsidanMinGatv642Document.UIStartsidanTillbakaPane;
            #endregion

            // Verify that the 'FriendlyName' property of 'Startsidan Tillbaka' pane equals 'Startsidan Tillbaka'
            Assert.AreEqual(this.CheckMainTitleMinGatSweExpectedValues.UIStartsidanTillbakaPaneFriendlyName, uIStartsidanTillbakaPane.FriendlyName, "Feil tekst i svensk startside");
        }
        
        /// <summary>
        /// CheckMinGatHelpfileMainMenuText - Use 'CheckMinGatHelpfileMainMenuTextExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMinGatHelpfileMainMenuText()
        {
            #region Variable Declarations
            HtmlSpan uIMinGatHovedmenyPane = this.UIMinGatHjelpv64COPYRIWindow.UIMinGatHjelpv64COPYRIDocument.UIContentPageFrame.UIMinGatHjelpDocument.UIMinGatHovedmenyPane;
            #endregion

            // Verify that the 'InnerText' property of 'MinGat Hovedmeny' pane equals 'MinGat Hovedmeny'
            Assert.AreEqual(this.CheckMinGatHelpfileMainMenuTextExpectedValues.UIMinGatHovedmenyPaneInnerText, uIMinGatHovedmenyPane.InnerText, "Feil tekst i hovedmeny");
        }
        
        /// <summary>
        /// CheckPatientInformationService - Use 'CheckPatientInformationServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPatientInformationService()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetDepartmentAppointHyperlink = this.UIGatWebserviceMainPagWindow.UIPatientInformationSeDocument.UIContentPane.UIGetDepartmentAppointHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetDepartmentAppointments' link equals 'GetDepartmentAppointments'
            Assert.AreEqual(this.CheckPatientInformationServiceExpectedValues.UIGetDepartmentAppointHyperlinkInnerText, uIGetDepartmentAppointHyperlink.InnerText, "Feil i PatientInformationService");
        }
        
        /// <summary>
        /// CheckPayslipImportService - Use 'CheckPayslipImportServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPayslipImportService()
        {
            #region Variable Declarations
            HtmlHyperlink uIImportPayslipsHyperlink = this.UIGatWebserviceMainPagWindow.UIPayslipImportServiceDocument.UIContentPane.UIImportPayslipsHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'ImportPayslips' link equals 'ImportPayslips'
            Assert.AreEqual(this.CheckPayslipImportServiceExpectedValues.UIImportPayslipsHyperlinkInnerText, uIImportPayslipsHyperlink.InnerText, "Feil i PayslipImportService");
        }
        
        /// <summary>
        /// CheckProduksjonsplanTab - Use 'CheckProduksjonsplanTabExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckProduksjonsplanTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIPlanleggingsperioderRibbonBaseButtonItem = this.UIGatver65041632ASCLAvWindow.UIProductionPlanContaiCustom.UIRcMenuRibbon.UIRbHomeRibbonPage.UIRbActionsRibbonPageGroup.UIPlanleggingsperioderRibbonBaseButtonItem;
            #endregion

            // Verify that the 'Enabled' property of 'Planleggingsperioder' RibbonBaseButtonItem equals 'True'
            Assert.AreEqual(this.CheckProduksjonsplanTabExpectedValues.UIPlanleggingsperioderRibbonBaseButtonItemEnabled, uIPlanleggingsperioderRibbonBaseButtonItem.Enabled, "Planleggingsperioder er ikke tilgjengelig");
        }
        
        /// <summary>
        /// CheckRapportsenterTab - Use 'CheckRapportsenterTabExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRapportsenterTab()
        {
            #region Variable Declarations
            WinClient uIRapportsenterClient = this.UIGatver65038745ASCLAvWindow2.UIItemWindow3.UIRapportsenterClient;
            #endregion

            // Verify that the 'Enabled' property of 'Rapportsenter' client equals 'True'
            Assert.AreEqual(this.CheckRapportsenterTabExpectedValues.UIRapportsenterClientEnabled, uIRapportsenterClient.Enabled, "Feil i RapportsenterTab");
        }
        
        /// <summary>
        /// CheckReshRosterService - Use 'CheckReshRosterServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckReshRosterService()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetReshRosterHyperlink = this.UIGatWebserviceMainPagWindow.UIReshRosterServiceWebDocument.UIContentPane.UIGetReshRosterHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetReshRoster' link equals 'GetReshRoster'
            Assert.AreEqual(this.CheckReshRosterServiceExpectedValues.UIGetReshRosterHyperlinkInnerText, uIGetReshRosterHyperlink.InnerText, "Feil i ReshRosterService");
        }
        
        /// <summary>
        /// CheckRoleDepartmentService - Use 'CheckRoleDepartmentServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleDepartmentService()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetDepartmentRolesHyperlink = this.UIRoleDepartmentServicWindow.UIRoleDepartmentServicDocument.UIContentPane.UIGetDepartmentRolesHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetDepartmentRoles' link equals 'GetDepartmentRoles'
            Assert.AreEqual(this.CheckRoleDepartmentServiceExpectedValues.UIGetDepartmentRolesHyperlinkInnerText, uIGetDepartmentRolesHyperlink.InnerText, "Feil i webservice");
        }
        
        /// <summary>
        /// CheckRoleDepartmentServiceV65 - Use 'CheckRoleDepartmentServiceV65ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRoleDepartmentServiceV65()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetDepartmentRolesHyperlink = this.UIRoleDepartmentServicWindow1.UIRoleDepartmentServicDocument.UIContentPane.UIGetDepartmentRolesHyperlink;
            HtmlHyperlink uIGetDisplayRolesHyperlink = this.UIRoleDepartmentServicWindow1.UIRoleDepartmentServicDocument.UIContentPane.UIGetDisplayRolesHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetDepartmentRoles' link equals 'GetDepartmentRoles'
            Assert.AreEqual(this.CheckRoleDepartmentServiceV65ExpectedValues.UIGetDepartmentRolesHyperlinkInnerText, uIGetDepartmentRolesHyperlink.InnerText);

            // Verify that the 'InnerText' property of 'GetDisplayRoles' link equals 'GetDisplayRoles'
            Assert.AreEqual(this.CheckRoleDepartmentServiceV65ExpectedValues.UIGetDisplayRolesHyperlinkInnerText, uIGetDisplayRolesHyperlink.InnerText);
        }
        
        /// <summary>
        /// CheckServicesRunning - Use 'CheckServicesRunningExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckServicesRunning()
        {
            #region Variable Declarations
            HtmlDiv service1 = this.UIGatSchedulerInternetWindow.UIGatSchedulerDocument.UIBehandlekømedendringPane;
            HtmlDiv service2 = this.UIGatSchedulerInternetWindow.UIGatSchedulerDocument.UIKalkulerAMLbruddPane;
            HtmlDiv service3 = this.UIGatSchedulerInternetWindow.UIGatSchedulerDocument.UIOppdatereBussinessAnPane;
            #endregion

            // Verify that the 'InnerText' property of 'Behandle kø med endringer i fravær' pane equals 'Behandle kø med endringer i fravær'
            Assert.AreNotEqual("", service1.InnerText, "Feil i service 1");

            // Verify that the 'InnerText' property of 'Kalkuler AML brudd' pane equals 'Kalkuler AML brudd'
            Assert.AreNotEqual("", service2.InnerText, "Feil i service 2");

            // Verify that the 'InnerText' property of 'Oppdatere Bussiness Analyze Data tabelle' pane equals 'Oppdatere Bussiness Analyze Data tabeller'
            Assert.AreNotEqual("", service3.InnerText, "Feil i service 3");
        }
        
        /// <summary>
        /// CheckServicesRunningError - Use 'CheckServicesRunningErrorExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckServicesRunningError()
        {
            #region Variable Declarations
            HtmlDiv service1 = this.UIGatSchedulerInternetWindow.UIGatSchedulerDocument.UIBehandlekømedendringPane;
            HtmlDiv service2 = this.UIGatSchedulerInternetWindow.UIGatSchedulerDocument.UIKalkulerAMLbruddPane;
            HtmlDiv service3 = this.UIGatSchedulerInternetWindow.UIGatSchedulerDocument.UIOppdatereBussinessAnPane;
            HtmlDiv uIErrorPane = this.UIGatSchedulerInternetWindow.UIGatSchedulerDocument.UIErrorPane;
            HtmlDiv uIErrorPane1 = this.UIGatSchedulerInternetWindow.UIGatSchedulerDocument.UIErrorPane1;
            HtmlDiv uIErrorPane2 = this.UIGatSchedulerInternetWindow.UIGatSchedulerDocument.UIErrorPane2;
            #endregion

            // Verify that the 'InnerText' property of 'Error' pane is not equal to 'Error'
            Assert.AreNotEqual(this.CheckServicesRunningErrorExpectedValues.UIErrorPaneInnerText, uIErrorPane.InnerText, "Feil i " + service1);

            // Verify that the 'InnerText' property of 'Error' pane is not equal to 'Error'
            Assert.AreNotEqual(this.CheckServicesRunningErrorExpectedValues.UIErrorPane1InnerText, uIErrorPane1.InnerText, "Feil i " + service2);

            // Verify that the 'InnerText' property of 'Error' pane is not equal to 'Error'
            Assert.AreNotEqual(this.CheckServicesRunningErrorExpectedValues.UIErrorPane2InnerText, uIErrorPane2.InnerText, "Feil i " + service3);
        }
        
        /// <summary>
        /// CheckSmsByMailReader - Use 'CheckSmsByMailReaderExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSmsByMailReader()
        {
            #region Variable Declarations
            HtmlHyperlink uIReadMailQueueAndCreaHyperlink = this.UIGatWebserviceMainPagWindow.UISmsByMailReaderWebSeDocument.UIContentPane.UIReadMailQueueAndCreaHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'ReadMailQueueAndCreateSms' link equals 'ReadMailQueueAndCreateSms'
            Assert.AreEqual(this.CheckSmsByMailReaderExpectedValues.UIReadMailQueueAndCreaHyperlinkInnerText, uIReadMailQueueAndCreaHyperlink.InnerText, "Feil i SmsByMailReader");
        }
        
        /// <summary>
        /// CheckSmsGatewayService - Use 'CheckSmsGatewayServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSmsGatewayService()
        {
            #region Variable Declarations
            HtmlHyperlink uIAddToInboxHyperlink = this.UIGatWebserviceMainPagWindow.UISmsGatewayServiceWebDocument.UIContentPane.UIAddToInboxHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'AddToInbox' link equals 'AddToInbox'
            Assert.AreEqual(this.CheckSmsGatewayServiceExpectedValues.UIAddToInboxHyperlinkInnerText, uIAddToInboxHyperlink.InnerText, "Feil i SmsGatewayService");
        }
        
        /// <summary>
        /// CheckSmsService - Use 'CheckSmsServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSmsService()
        {
            #region Variable Declarations
            HtmlHyperlink uIProcessSmsQueuesHyperlink = this.UIGatWebserviceMainPagWindow.UISmsServiceWebServiceDocument.UIContentPane.UIProcessSmsQueuesHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'ProcessSmsQueues' link equals 'ProcessSmsQueues'
            Assert.AreEqual(this.CheckSmsServiceExpectedValues.UIProcessSmsQueuesHyperlinkInnerText, uIProcessSmsQueuesHyperlink.InnerText, "Feil i SmsService");
        }
        
        /// <summary>
        /// CheckSystemInformationService - Use 'CheckSystemInformationServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSystemInformationService()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetAliveStatusHyperlink = this.UIGatWebserviceMainPagWindow.UISystemInformationSerDocument.UIContentPane.UIGetAliveStatusHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetAliveStatus' link equals 'GetAliveStatus'
            Assert.AreEqual(this.CheckSystemInformationServiceExpectedValues.UIGetAliveStatusHyperlinkInnerText, uIGetAliveStatusHyperlink.InnerText, "Feil i SystemInformationService");
        }
        
        /// <summary>
        /// CheckTaskAgreementService - Use 'CheckTaskAgreementServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTaskAgreementService()
        {
            #region Variable Declarations
            HtmlHyperlink uIUpdateTaskAgreementHyperlink = this.UIGatWebserviceMainPagWindow.UITaskAgreementServiceDocument.UIContentPane.UIUpdateTaskAgreementHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'UpdateTaskAgreement' link equals 'UpdateTaskAgreement'
            Assert.AreEqual(this.CheckTaskAgreementServiceExpectedValues.UIUpdateTaskAgreementHyperlinkInnerText, uIUpdateTaskAgreementHyperlink.InnerText, "Feil i TaskAgreementService");
        }
        
        /// <summary>
        /// CheckTesService - Use 'CheckTesServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTesService()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetWorkShiftDataHyperlink = this.UIGatWebserviceMainPagWindow.UITesServiceWebServiceDocument.UIContentPane.UIGetWorkShiftDataHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetWorkShiftData' link equals 'GetWorkShiftData'
            Assert.AreEqual(this.CheckTesServiceExpectedValues.UIGetWorkShiftDataHyperlinkInnerText, uIGetWorkShiftDataHyperlink.InnerText, "Feil i TesService");
        }
        
        /// <summary>
        /// CheckTestService - Use 'CheckTestServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTestService()
        {
            #region Variable Declarations
            HtmlHyperlink uITestDatabaseConnectiHyperlink = this.UIGatWebserviceMainPagWindow.UITestServiceWebServicDocument.UIContentPane.UITestDatabaseConnectiHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'TestDatabaseConnection' link equals 'TestDatabaseConnection'
            Assert.AreEqual(this.CheckTestServiceExpectedValues.UITestDatabaseConnectiHyperlinkInnerText, uITestDatabaseConnectiHyperlink.InnerText, "Feil i TestService");
        }
        
        /// <summary>
        /// CheckTimeregImport - Use 'CheckTimeregImportExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTimeregImport()
        {
            #region Variable Declarations
            HtmlHyperlink uIImportTimeregRegistrHyperlink = this.UIGatWebservices2MainPWindow.UITimeregImportWebServDocument.UIContentPane.UIImportTimeregRegistrHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'ImportTimeregRegistration' link equals 'ImportTimeregRegistration'
            Assert.AreEqual(this.CheckTimeregImportExpectedValues.UIImportTimeregRegistrHyperlinkInnerText, uIImportTimeregRegistrHyperlink.InnerText, "Feil i TimeregImport");
        }
        
        /// <summary>
        /// CheckTop - Use 'CheckTopExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTop()
        {
            #region Variable Declarations
            WinTreeItem uIATMANGATSOFTgeigTreeItem = this.UIInternetInformationSWindow.UIItemWindow.UIItemTree.UIATMANGATSOFTgeigTreeItem;
            #endregion

            // Verify that the 'ControlType' property of 'AT-MAN (GATSOFT\geig)' tree item equals 'TreeItem'
            Assert.AreEqual(this.CheckTopExpectedValues.UIATMANGATSOFTgeigTreeItemControlType, uIATMANGATSOFTgeigTreeItem.ControlType.ToString());
        }
        
        /// <summary>
        /// CheckUniqueService - Use 'CheckUniqueServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckUniqueService()
        {
            #region Variable Declarations
            HtmlHyperlink uIProfilturnusFaaPersoHyperlink = this.UIGatWebservices2MainPWindow.UIUniqueServiceWebServDocument.UIContentPane.UIProfilturnusFaaPersoHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'ProfilturnusFaaPerson' link equals 'ProfilturnusFaaPerson'
            Assert.AreEqual(this.CheckUniqueServiceExpectedValues.UIProfilturnusFaaPersoHyperlinkInnerText, uIProfilturnusFaaPersoHyperlink.InnerText, "Feil i UniqueService");
        }
        
        /// <summary>
        /// CheckWeaBreakService - Use 'CheckWeaBreakServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWeaBreakService()
        {
            #region Variable Declarations
            HtmlHyperlink uICalculateWeaAndSaveWHyperlink = this.UIGatWebserviceMainPagWindow.UIWeaBreakServiceWebSeDocument.UIContentPane.UICalculateWeaAndSaveWHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'CalculateWeaAndSaveWeaBreaksOverrideScheduler' link equals 'CalculateWeaAndSaveWeaBreaksOverrideScheduler'
            Assert.AreEqual(this.CheckWeaBreakServiceExpectedValues.UICalculateWeaAndSaveWHyperlinkInnerText, uICalculateWeaAndSaveWHyperlink.InnerText, "Feil i WeaBreakService");
        }
        
        /// <summary>
        /// CheckWishPlanWebService - Use 'CheckWishPlanWebServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWishPlanWebService()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetAdditionalDataHyperlink = this.UIGatWebservices2MainPWindow.UIWishPlanWebServiceWeDocument.UIContentPane.UIGetAdditionalDataHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetAdditionalData' link equals 'GetAdditionalData'
            Assert.AreEqual(this.CheckWishPlanWebServiceExpectedValues.UIGetAdditionalDataHyperlinkInnerText, uIGetAdditionalDataHyperlink.InnerText, "Feil i WishPlanWebService");
        }
        
        /// <summary>
        /// ClickMinGatMenuItems
        /// </summary>
        public void ClickMinGatMenuItems()
        {
            #region Variable Declarations
            HtmlDiv uIItemPane = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemPane;
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemHyperlink;
            HtmlDiv uIItemPane1 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemPane1;
            HtmlHyperlink uIItemHyperlink1 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemHyperlink1;
            HtmlDiv uIItem010Pane = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItem010Pane;
            HtmlDiv uIItemPane2 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemPane2;
            HtmlHyperlink uIItemHyperlink2 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemHyperlink2;
            HtmlDiv uIItemPane3 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemPane3;
            HtmlHyperlink uIItemHyperlink3 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemHyperlink3;
            HtmlDiv uIItemPane4 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemPane4;
            HtmlHyperlink uIItemHyperlink4 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemHyperlink4;
            HtmlDiv uIItemPane5 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemPane5;
            HtmlHyperlink uIItemHyperlink5 = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItemHyperlink5;
            HtmlHyperlink uIItem0Hyperlink = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItem0Hyperlink;
            HtmlDiv uIItem0Pane = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItem0Pane;
            HtmlHyperlink uIItem1Hyperlink = this.UIStartsidenMinGatv642Window.UIStartsidenMinGatv642Document.UIRootQuickNavCustom.UIItem1Hyperlink;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(13, -3));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane, new Point(1, 1));

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane1, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click link
            Mouse.Click(uIItemHyperlink1, new Point(17, -2));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane1, new Point(1, 1));

            // Mouse hover '0 1 0' pane at (1, 1)
            Mouse.Hover(uIItem010Pane, new Point(1, 1));

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane2, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click link
            Mouse.Click(uIItemHyperlink2, new Point(13, -2));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane2, new Point(1, 1));

            // Mouse hover '0 1 0' pane at (1, 1)
            Mouse.Hover(uIItem010Pane, new Point(1, 1));

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane3, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click link
            Mouse.Click(uIItemHyperlink3, new Point(8, -6));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane3, new Point(1, 1));

            // Mouse hover '0 1 0' pane at (1, 1)
            Mouse.Hover(uIItem010Pane, new Point(1, 1));

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane4, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click link
            Mouse.Click(uIItemHyperlink4, new Point(9, -4));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane4, new Point(1, 1));

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane5, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click link
            Mouse.Click(uIItemHyperlink5, new Point(15, 0));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane5, new Point(1, 1));

            // Mouse hover '0 1 0' pane at (1, 1)
            Mouse.Hover(uIItem010Pane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click '0' link
            Mouse.Click(uIItem0Hyperlink, new Point(11, 5));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover '0' pane at (1, 1)
            Mouse.Hover(uIItem0Pane, new Point(1, 1));

            // Mouse hover '0 1 0' pane at (1, 1)
            Mouse.Hover(uIItem010Pane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click '1' link
            Mouse.Click(uIItem1Hyperlink, new Point(18, -6));
        }
        
        /// <summary>
        /// ClickOkUpgradeGatDB
        /// </summary>
        public void ClickOkUpgradeGatDB()
        {
            #region Variable Declarations
            WinButton uIJAButton = this.UIGT2004AdvarselWindow.UIItemWindow.UIGT2004AdvarselClient.UIJAButton;
            #endregion

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(38, 12));
        }
        
        /// <summary>
        /// ClickRoleDepartmentService
        /// </summary>
        public void ClickSickleaveMessageImportService()
        {
            #region Variable Declarations
            HtmlHyperlink uISickleaveMessageImportServiceHyperlink = this.UIGatWebserviceMainPagWindow.UIGatWebserviceMainPagDocument1.UISickleaveMessageImportServiceHyperlink;
            #endregion

            // Click 'RoleDepartmentService' link
            Mouse.Click(uISickleaveMessageImportServiceHyperlink);
        }
        
        /// <summary>
        /// ClickRoleDepartmentServiceV65
        /// </summary>
        public void ClickRoleDepartmentServiceV65()
        {
            #region Variable Declarations
            HtmlHyperlink uIRoleDepartmentServicHyperlink = this.UIGatWebserviceMainPagWindow.UIGatWebserviceMainPagDocument2.UIRoleDepartmentServicHyperlink;
            #endregion

            // Click 'RoleDepartmentServiceV65' link
            Mouse.Click(uIRoleDepartmentServicHyperlink, new Point(66, 6));
        }
        
        /// <summary>
        /// ClickShiftbookTab
        /// </summary>
        public void ClickShiftbookTab()
        {
            #region Variable Declarations
            WinClient uIGatver64238230ASCLAvClient = this.UIGatver64238230ASCLAvWindow1.UIItemWindow1.UIGatver64238230ASCLAvClient;
            #endregion

            // Click 'Gat. 6.4.2.38230 - (ASCL - Avd: 3002-Fleksavde...' client
            Mouse.Click(uIGatver64238230ASCLAvClient, new Point(29, 15));
        }
        
        /// <summary>
        /// ClickTest
        /// </summary>
        public void ClickTest()
        {
            #region Variable Declarations
            WinClient uIEGENMELDINGVEDSYKEFRClient1 = this.UIDokumentWindow.UITextControl1Window.UIEGENMELDINGVEDSYKEFRClient1;
            #endregion

            // Click 'EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødse...' client
            Mouse.Click(uIEGENMELDINGVEDSYKEFRClient1, new Point(580, 785));

            // Click 'EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødse...' client
            Mouse.Click(uIEGENMELDINGVEDSYKEFRClient1, new Point(1484, 464));

            // Click 'EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødse...' client
            Mouse.Click(uIEGENMELDINGVEDSYKEFRClient1, new Point(960, 291));

            // Click 'EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødse...' client
            Mouse.Click(uIEGENMELDINGVEDSYKEFRClient1, new Point(979, 331));

            // Click 'EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødse...' client
            Mouse.Click(uIEGENMELDINGVEDSYKEFRClient1, new Point(935, 344));

            // Click 'EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødse...' client
            Mouse.Click(uIEGENMELDINGVEDSYKEFRClient1, new Point(998, 331));

            // Click 'EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødse...' client
            Mouse.Click(uIEGENMELDINGVEDSYKEFRClient1, new Point(1155, 682));
        }
        
        /// <summary>
        /// ClickTitleBar
        /// </summary>
        public void ClickTitleBar()
        {
            #region Variable Declarations
            WinTitleBar uIDokumentTitleBar = this.UIDokumentWindow.UIDokumentTitleBar;
            #endregion

            // Click 'Dokument:' title bar
            Mouse.Click(uIDokumentTitleBar, new Point(35, 16));
        }
        
        /// <summary>
        /// CloseFileExplorerWindows
        /// </summary>
        public void CloseFileExplorerWindows()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIGat_641_noWindow3.UIGat_641_noTitleBar.UICloseButton;
            WinButton uICloseButton1 = this.UIFileExplorerWindow.UIZipFilesTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(20, 17));

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(23, 16));
        }
        
        /// <summary>
        /// CloseFlexClock - Use 'CloseFlexClockParams' to pass parameters into this method.
        /// </summary>
        public void CloseFlexClock()
        {
            #region Variable Declarations
            WinClient uITcEmployeesClient = this.UIGATFlexWindow1.UITcEmployeesWindow.UITcEmployeesClient;
            #endregion

            // Type '{Escape}' in 'tcEmployees' client
            Keyboard.SendKeys(uITcEmployeesClient, this.CloseFlexClockParams.UITcEmployeesClientSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// CloseGatIniExplorer
        /// </summary>
        public void CloseGatIniExplorer()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIGat_iniWindow.UIGat_iniTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(22, 17));
        }
        
        /// <summary>
        /// CloseGatNoExplorer
        /// </summary>
        public void CloseGatNoExplorer()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIGat_noWindow.UIGat_noTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 13));
        }
        
        /// <summary>
        /// CloseHelpFile
        /// </summary>
        public void CloseHelpFile()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIGatver64HjelpCOPYRIGWindow.UIGatver64HjelpCOPYRIGTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(22, 15));
        }
        
        /// <summary>
        /// CloseIE
        /// </summary>
        public void CloseIE()
        {
            UICommon.UIMapVS2017.CloseIE();
        }
        
        /// <summary>
        /// CloseIIS
        /// </summary>
        public void CloseIIS()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIInternetInformationSWindow.UIInternetInformationSTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 14));
        }
        
        /// <summary>
        /// DepExchangeThomas
        /// </summary>
        public void DepExchangeThomas()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIByttemedavdelingRibbonBaseButtonItem = this.UIGatver64238230ASCLAvWindow.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIByttemedavdelingRibbonBaseButtonItem;
            DXButton uIOKButton = this.UIByttemedavdelingWindow.UIOKButton;
            DXMenuBaseButtonItem uIBiOkMenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UIBiOkMenuBaseButtonItem;
            #endregion

            // Click 'Bytte med
            // avdeling' RibbonBaseButtonItem
            Mouse.Click(uIByttemedavdelingRibbonBaseButtonItem, new Point(27, 32));

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));

            // Click 'biOk' MenuBaseButtonItem
            Mouse.Click(uIBiOkMenuBaseButtonItem, new Point(41, 11));
        }
        
        /// <summary>
        /// EditAbsenceDocFromEmpTab
        /// </summary>
        public void EditAbsenceDocFromEmpTab()
        {
            #region Variable Declarations
            WinClient uIDokClient = this.UIGatver64238230ASCLAvWindow.UIItemWindow2.UIDokClient;
            WinClient uIDokClient1 = this.UIGatver64238230ASCLAvWindow.UIItemWindow11.UIDokClient;
            #endregion

            // Click 'Dok&.' client
            Mouse.Click(uIDokClient, new Point(133, 21));

            // Click 'Dok&.' client
            Mouse.Click(uIDokClient1, new Point(239, 16));
        }
        
        /// <summary>
        /// ExchangeJohnson
        /// </summary>
        public void ExchangeJohnson()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBytteRibbonBaseButtonItem = this.UIGatver65041007ASCLAvWindow.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIBytteRibbonBaseButtonItem;
            DXButton uICloseButton = this.UISammenligningavkompeWindow.UICloseButton;
            #endregion

            // Click 'Bytte' RibbonBaseButtonItem
            Mouse.Click(uIBytteRibbonBaseButtonItem, new Point(19, 21));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(18, 8));
        }
        
        /// <summary>
        /// LogoutMinGat
        /// </summary>
        public void LogoutMinGat()
        {
            #region Variable Declarations
            HtmlDiv uISYSTEMTESTDATABASEDePane = this.UIStartsidenMinGatv642Window.UIPåminnelserMinGatv64Document.UIRemindersPagePane.UISYSTEMTESTDATABASEDePane;
            HtmlCustom uIItemCustom = this.UIStartsidenMinGatv642Window.UIPåminnelserMinGatv64Document.UIRemindersPagePane.UIItemCustom;
            HtmlDiv uIItemPane = this.UIStartsidenMinGatv642Window.UIPåminnelserMinGatv64Document.UIBodyWrapperPane.UIItemPane;
            HtmlCustom uIItemCustom1 = this.UIStartsidenMinGatv642Window.UIPåminnelserMinGatv64Document.UIMenuHeader_mainMenuPane.UIItemCustom;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'SYSTEMTESTDATABASE! Dette er MA' pane at (1, 1)
            Mouse.Hover(uISYSTEMTESTDATABASEDePane, new Point(1, 1));

            // Mouse hover  custom control at (1, 1)
            Mouse.Hover(uIItemCustom, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click pane
            Mouse.Click(uIItemPane, new Point(4, 2));

            // Click custom control
            Mouse.Click(uIItemCustom1, new Point(44, 10));
        }
        
        /// <summary>
        /// OpenHelpFile
        /// </summary>
        public void OpenHelpFile()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIHjelpBarBaseButtonItem = this.UIGatver64238230ASCLAvWindow.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIHjelpBarBaseButtonItem;
            #endregion

            // Click 'Hjelp' BarBaseButtonItem
            Mouse.Click(uIHjelpBarBaseButtonItem, new Point(39, 11));
        }
        
        /// <summary>
        /// OpenIIS
        /// </summary>
        public void OpenIIS()
        {
            #region Variable Declarations
            WinListItem uIInternetInformationSListItem = this.UIProgramManagerWindow.UIDesktopList.UIInternetInformationSListItem;
            #endregion

            // Double-Click 'Internet Information Services (IIS) Manager' list item
            Mouse.DoubleClick(uIInternetInformationSListItem, new Point(40, 29));
        }
        
        /// <summary>
        /// PasteGatIniInGatNoFolder
        /// </summary>
        public void PasteGatIniInGatNoFolder()
        {
            #region Variable Declarations
            WinList uIItemsViewList = this.UIGat_noWindow.UIShellViewWindow.UIShellViewClient.UIItemsViewList;
            WinMenuItem uIPasteMenuItem = this.UIItemWindow.UIContextMenu.UIPasteMenuItem;
            #endregion

            // Right-Click 'Items View' list box
            Mouse.Click(uIItemsViewList, MouseButtons.Right, ModifierKeys.None, new Point(603, 391));

            // Click 'Paste' menu item
            Mouse.Click(uIPasteMenuItem, new Point(67, 5));
        }
        
        /// <summary>
        /// RemoveMInGat
        /// </summary>
        public void RemoveMInGat()
        {
            #region Variable Declarations
            WinTreeItem uIApplicationPoolsTreeItem = this.UIInternetInformationSWindow.UI_treeViewWindow.UIATMANGATSOFTgeigTreeItem.UIApplicationPoolsTreeItem;
            WinTreeItem uIMinGat642TreeItem = this.UIInternetInformationSWindow.UI_treeViewWindow.UIATMANGATSOFTgeigTreeItem.UISitesTreeItem.UIDefaultWebSiteTreeItem.UIMinGat642TreeItem;
            WinMenuItem uIRemoveMenuItem = this.UIItemWindow6.UIDropDownMenu.UIRemoveMenuItem;
            WinButton uIYesButton = this.UIConfirmRemoveWindow.UIYesWindow.UIYesButton;
            #endregion

            // Click 'AT-MAN (GATSOFT\geig)' -> 'Application Pools' tree item
            Mouse.Click(uIApplicationPoolsTreeItem, new Point(2, 10));

            // Right-Click 'AT-MAN (GATSOFT\geig)' -> 'Sites' -> 'Default Web Site' -> 'MinGat642' tree item
            Mouse.Click(uIMinGat642TreeItem, MouseButtons.Right, ModifierKeys.None, new Point(12, 8));

            // Click 'Remove' menu item
            Mouse.Click(uIRemoveMenuItem, new Point(77, 11));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(55, 10));
        }
        
        /// <summary>
        /// SaveMinGatConfigFile
        /// </summary>
        public void SaveMinGatConfigFile()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIAppSettingsconfigNotWindow.UIAppSettingsconfigNotTitleBar.UICloseButton;
            WinButton uISaveButton = this.UINotepadWindow.UINotepadPane.UISaveButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 14));

            // Click '&Save' button
            Mouse.Click(uISaveButton, new Point(43, 12));
        }
        
        /// <summary>
        /// SaveMinGatConnectionstringFile
        /// </summary>
        public void SaveMinGatConnectionstringFile()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIConnectionStringsconWindow.UIConnectionStringsconTitleBar.UICloseButton;
            WinButton uISaveButton = this.UINotepadWindow.UINotepadPane.UISaveButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 14));

            // Click '&Save' button
            Mouse.Click(uISaveButton, new Point(34, 11));
        }
        
        /// <summary>
        /// SaveWs1ConfigFile
        /// </summary>
        public void SaveWs1ConfigFile()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIWebconfigNotepadWindow.UIWebconfigNotepadTitleBar.UICloseButton;
            WinButton uISaveButton = this.UINotepadWindow.UINotepadPane.UISaveButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(25, 15));

            // Click '&Save' button
            Mouse.Click(uISaveButton, new Point(36, 10));
        }
        
        /// <summary>
        /// SelectDonJohnsenDayView
        /// </summary>
        public void SelectDonJohnsenDayView()
        {
            #region Variable Declarations
            DXCell uIJohnsonDonCell = this.UIGatver64138140ASCLAvWindow1.UICenterPanelDayDockPanel.UIControlContainerCustom.UICenterPanelDayWrappeDockPanel.UIDag00167770770FalseDockPanel.UIControlContainerCustom.UIGcDayColumnTable.UIJohnsonDonCell;
            #endregion

            // Click 'Johnson, Don' cell
            Mouse.Click(uIJohnsonDonCell, new Point(37, 6));
        }
        
        /// <summary>
        /// SelectOpenGatHelpInDropDown
        /// </summary>
        public void SelectOpenGatHelpInDropDown()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBarButtonItemLink0MenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UIBarButtonItemLink0MenuBaseButtonItem;
            #endregion

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(51, 10));
        }
        
        /// <summary>
        /// SetupServiceJobs - Use 'SetupServiceJobsParams' to pass parameters into this method.
        /// </summary>
        public void SetupServiceJobs()
        {
            #region Variable Declarations
            WinClient uIItemClient = this.UIServiceoppsettWindow.UIItemWindow.UIItemClient;
            WinClient uIItemClient1 = this.UIServiceoppsettWindow.UIServiceoppsettClient.UIItemClient;
            WinCheckBox uIDeaktivertCheckBox = this.UIServiceoppsettWindow.UIItemWindow1.UIItemClient.UIDeaktivertCheckBox;
            WinButton uIOKButton = this.UIServiceoppsettWindow.UIItemClient.UIOKButton;
            WinClient uIItemClient2 = this.UIServiceoppsettWindow.UIItemClient1.UIItemClient;
            #endregion

            // Click client
            Mouse.Click(uIItemClient, new Point(182, 26));

            // Click client
            Mouse.Click(uIItemClient1, new Point(98, 28));

            // Clear 'Deaktivert' check box
            uIDeaktivertCheckBox.Checked = this.SetupServiceJobsParams.UIDeaktivertCheckBoxChecked;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(36, 26));

            // Click client
            Mouse.Click(uIItemClient, new Point(179, 46));

            // Click client
            Mouse.Click(uIItemClient1, new Point(93, 32));

            // Clear 'Deaktivert' check box
            uIDeaktivertCheckBox.Checked = this.SetupServiceJobsParams.UIDeaktivertCheckBoxChecked1;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(34, 25));

            // Click client
            Mouse.Click(uIItemClient, new Point(59, 60));

            // Click client
            Mouse.Click(uIItemClient1, new Point(88, 25));

            // Clear 'Deaktivert' check box
            uIDeaktivertCheckBox.Checked = this.SetupServiceJobsParams.UIDeaktivertCheckBoxChecked2;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(35, 25));

            // Click client
            Mouse.Click(uIItemClient2, new Point(341, 20));
        }
        
        /// <summary>
        /// StartFlexTimeClock - Use 'StartFlexTimeClockParams' to pass parameters into this method.
        /// </summary>
        public void StartFlexTimeClock()
        {
            // Launch 'C:\gatsoft\GatFlex\GatFlexTimeClock.exe'
            ApplicationUnderTest gatFlexTimeClockApplication = ApplicationUnderTest.Launch(this.StartFlexTimeClockParams.ExePath, this.StartFlexTimeClockParams.AlternateExePath);
        }
        
        /// <summary>
        /// StempleInnOgUtJernhammer
        /// </summary>
        public void StempleInnOgUtJernhammer()
        {
            #region Variable Declarations
            WinClient uITcEmployeesClient = this.UIGATFlexWindow1.UIDocumentsHostTabList.UIAlleansatteCustom.UIEmployeeSelectionConCustom.UITcEmployeesWindow.UITcEmployeesClient;
            DXButton uIStempleinnButton = this.UIGATFlexWindow1.UIDocumentsHostTabList.UIAnsattCustom.UIEmployeeClockControlCustom.UIXscMainScrollableControl.UIStempleinnButton;
            DXButton uIStempleutButton = this.UIGATFlexWindow1.UIDocumentsHostTabList.UIAnsattCustom.UIEmployeeClockControlCustom.UIXscMainScrollableControl.UIStempleutButton;
            #endregion

            // Click 'tcEmployees' client
            Mouse.Click(uITcEmployeesClient, new Point(694, 769));

            // Click 'Stemple inn' button
            Mouse.Click(uIStempleinnButton, new Point(1, 1));

            // Wait for 130 seconds for user delay between actions; Click 'tcEmployees' client
            Playback.Wait(130000);
            Mouse.Click(uITcEmployeesClient, new Point(728, 770));

            // Wait for 3 seconds for user delay between actions; Click 'Stemple ut' button
            Playback.Wait(3000);
            Mouse.Click(uIStempleutButton, new Point(1, 1));
        }
        
        /// <summary>
        /// UninstallGatTaskScheduler
        /// </summary>
        public void UninstallGatTaskScheduler()
        {
            #region Variable Declarations
            WinButton uIYesButton = this.UIGatTaskSchedulerServWindow.UIYesWindow.UIYesButton;
            WinButton uINOButton = this.UIUninstallWindow.UINOWindow.UINOButton;
            WinButton uIOKButton = this.UIGatTaskSchedulerServWindow.UIOKWindow.UIOKButton;
            WinButton uIOKButton1 = this.UIUninstallWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(39, 8));

            // Click '&No' button
            Mouse.Click(uINOButton, new Point(41, 12));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(33, 12));

            // Click 'OK' button
            Mouse.Click(uIOKButton1, new Point(66, 12));
        }
        
        /// <summary>
        /// VaktutlånJohnsenFriday - Use 'VaktutlånJohnsenFridayParams' to pass parameters into this method.
        /// </summary>
        public void VaktutlånJohnsenFriday()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIVaktutlånRibbonBaseButtonItem = this.UIGatver64238230ASCLAvWindow.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIVaktutlånRibbonBaseButtonItem;
            DXLookUpEdit uITlleDepartmentLookUpEdit = this.UIUtlånavvakterWindow.UIGsLayoutControl1Custom.UILayoutControlGroup1LayoutGroup.UILayoutControlItem2LayoutControlItem.UIGcMainClient.UIGsLayoutControl2Custom.UILayoutControlGroup2LayoutGroup.UILayoutControlItem1LayoutControlItem.UIGcSelectedShiftsClient.UITlleDepartmentLookUpEdit;
            DXTreeList uITlDepartmentsTreeList = this.UIUtlånavvakterWindow.UIGsLayoutControl1Custom.UILayoutControlGroup1LayoutGroup.UILayoutControlItem2LayoutControlItem.UIGcMainClient.UIGsLayoutControl2Custom.UILayoutControlGroup2LayoutGroup.UILayoutControlItem1LayoutControlItem.UIGcSelectedShiftsClient.UITlleDepartmentLookUpEdit.UITreeListLookUpEditPoWindow.UITlDepartmentsTreeList;
            DXButton uIGSSimpleButtonButton = this.UIUtlånavvakterWindow.UIGsLayoutControl1Custom.UIGSSimpleButtonButton;
            #endregion

            // Click 'Vaktutlån' RibbonBaseButtonItem
            Mouse.Click(uIVaktutlånRibbonBaseButtonItem, new Point(19, 33));

            // Type '' in 'tlleDepartment' LookUpEdit
            //ValueAsString
            uITlleDepartmentLookUpEdit.ValueAsString = this.VaktutlånJohnsenFridayParams.UITlleDepartmentLookUpEditValueAsString;

            // Type '{Up}{Enter}' in 'tlDepartments' TreeList
            Keyboard.SendKeys(uITlDepartmentsTreeList, this.VaktutlånJohnsenFridayParams.UITlDepartmentsTreeListSendKeys, ModifierKeys.None);

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        #region Properties
        public virtual AddTaskScedulerPasswordParams AddTaskScedulerPasswordParams
        {
            get
            {
                if ((this.mAddTaskScedulerPasswordParams == null))
                {
                    this.mAddTaskScedulerPasswordParams = new AddTaskScedulerPasswordParams();
                }
                return this.mAddTaskScedulerPasswordParams;
            }
        }
        
        public virtual CheckArbeidsplanTabExpectedValues CheckArbeidsplanTabExpectedValues
        {
            get
            {
                if ((this.mCheckArbeidsplanTabExpectedValues == null))
                {
                    this.mCheckArbeidsplanTabExpectedValues = new CheckArbeidsplanTabExpectedValues();
                }
                return this.mCheckArbeidsplanTabExpectedValues;
            }
        }
        
        public virtual CheckAvdelingTabExpectedValues CheckAvdelingTabExpectedValues
        {
            get
            {
                if ((this.mCheckAvdelingTabExpectedValues == null))
                {
                    this.mCheckAvdelingTabExpectedValues = new CheckAvdelingTabExpectedValues();
                }
                return this.mCheckAvdelingTabExpectedValues;
            }
        }
        
        public virtual CheckBudsjetTabExpectedValues CheckBudsjetTabExpectedValues
        {
            get
            {
                if ((this.mCheckBudsjetTabExpectedValues == null))
                {
                    this.mCheckBudsjetTabExpectedValues = new CheckBudsjetTabExpectedValues();
                }
                return this.mCheckBudsjetTabExpectedValues;
            }
        }
        
        public virtual CheckBusinessAnalyzeServiceExpectedValues CheckBusinessAnalyzeServiceExpectedValues
        {
            get
            {
                if ((this.mCheckBusinessAnalyzeServiceExpectedValues == null))
                {
                    this.mCheckBusinessAnalyzeServiceExpectedValues = new CheckBusinessAnalyzeServiceExpectedValues();
                }
                return this.mCheckBusinessAnalyzeServiceExpectedValues;
            }
        }
        
        public virtual CheckCalendarIntegrationWebServiceExpectedValues CheckCalendarIntegrationWebServiceExpectedValues
        {
            get
            {
                if ((this.mCheckCalendarIntegrationWebServiceExpectedValues == null))
                {
                    this.mCheckCalendarIntegrationWebServiceExpectedValues = new CheckCalendarIntegrationWebServiceExpectedValues();
                }
                return this.mCheckCalendarIntegrationWebServiceExpectedValues;
            }
        }
        
        public virtual CheckCalendarServiceExpectedValues CheckCalendarServiceExpectedValues
        {
            get
            {
                if ((this.mCheckCalendarServiceExpectedValues == null))
                {
                    this.mCheckCalendarServiceExpectedValues = new CheckCalendarServiceExpectedValues();
                }
                return this.mCheckCalendarServiceExpectedValues;
            }
        }
        
        public virtual CheckCommunicationQueueServiceExpectedValues CheckCommunicationQueueServiceExpectedValues
        {
            get
            {
                if ((this.mCheckCommunicationQueueServiceExpectedValues == null))
                {
                    this.mCheckCommunicationQueueServiceExpectedValues = new CheckCommunicationQueueServiceExpectedValues();
                }
                return this.mCheckCommunicationQueueServiceExpectedValues;
            }
        }
        
        public virtual CheckDateTimePickerExpectedValues CheckDateTimePickerExpectedValues
        {
            get
            {
                if ((this.mCheckDateTimePickerExpectedValues == null))
                {
                    this.mCheckDateTimePickerExpectedValues = new CheckDateTimePickerExpectedValues();
                }
                return this.mCheckDateTimePickerExpectedValues;
            }
        }
        
        public virtual CheckDepartmentServiceExpectedValues CheckDepartmentServiceExpectedValues
        {
            get
            {
                if ((this.mCheckDepartmentServiceExpectedValues == null))
                {
                    this.mCheckDepartmentServiceExpectedValues = new CheckDepartmentServiceExpectedValues();
                }
                return this.mCheckDepartmentServiceExpectedValues;
            }
        }
        
        public virtual CheckDepartmentServiceV2ExpectedValues CheckDepartmentServiceV2ExpectedValues
        {
            get
            {
                if ((this.mCheckDepartmentServiceV2ExpectedValues == null))
                {
                    this.mCheckDepartmentServiceV2ExpectedValues = new CheckDepartmentServiceV2ExpectedValues();
                }
                return this.mCheckDepartmentServiceV2ExpectedValues;
            }
        }
        
        public virtual CheckDepartmentServiceV63ExpectedValues CheckDepartmentServiceV63ExpectedValues
        {
            get
            {
                if ((this.mCheckDepartmentServiceV63ExpectedValues == null))
                {
                    this.mCheckDepartmentServiceV63ExpectedValues = new CheckDepartmentServiceV63ExpectedValues();
                }
                return this.mCheckDepartmentServiceV63ExpectedValues;
            }
        }
        
        public virtual CheckEkstrainfoTabExpectedValues CheckEkstrainfoTabExpectedValues
        {
            get
            {
                if ((this.mCheckEkstrainfoTabExpectedValues == null))
                {
                    this.mCheckEkstrainfoTabExpectedValues = new CheckEkstrainfoTabExpectedValues();
                }
                return this.mCheckEkstrainfoTabExpectedValues;
            }
        }
        
        public virtual CheckEmployeeChangeTrackingServiceExpectedValues CheckEmployeeChangeTrackingServiceExpectedValues
        {
            get
            {
                if ((this.mCheckEmployeeChangeTrackingServiceExpectedValues == null))
                {
                    this.mCheckEmployeeChangeTrackingServiceExpectedValues = new CheckEmployeeChangeTrackingServiceExpectedValues();
                }
                return this.mCheckEmployeeChangeTrackingServiceExpectedValues;
            }
        }
        
        public virtual CheckEmployeeServiceExpectedValues CheckEmployeeServiceExpectedValues
        {
            get
            {
                if ((this.mCheckEmployeeServiceExpectedValues == null))
                {
                    this.mCheckEmployeeServiceExpectedValues = new CheckEmployeeServiceExpectedValues();
                }
                return this.mCheckEmployeeServiceExpectedValues;
            }
        }
        
        public virtual CheckEmployeeServiceV63ExpectedValues CheckEmployeeServiceV63ExpectedValues
        {
            get
            {
                if ((this.mCheckEmployeeServiceV63ExpectedValues == null))
                {
                    this.mCheckEmployeeServiceV63ExpectedValues = new CheckEmployeeServiceV63ExpectedValues();
                }
                return this.mCheckEmployeeServiceV63ExpectedValues;
            }
        }
        
        public virtual CheckExportServiceExpectedValues CheckExportServiceExpectedValues
        {
            get
            {
                if ((this.mCheckExportServiceExpectedValues == null))
                {
                    this.mCheckExportServiceExpectedValues = new CheckExportServiceExpectedValues();
                }
                return this.mCheckExportServiceExpectedValues;
            }
        }
        
        public virtual CheckGatFlexServicesExpectedValues CheckGatFlexServicesExpectedValues
        {
            get
            {
                if ((this.mCheckGatFlexServicesExpectedValues == null))
                {
                    this.mCheckGatFlexServicesExpectedValues = new CheckGatFlexServicesExpectedValues();
                }
                return this.mCheckGatFlexServicesExpectedValues;
            }
        }
        
        public virtual CheckGatGericaServiceExpectedValues CheckGatGericaServiceExpectedValues
        {
            get
            {
                if ((this.mCheckGatGericaServiceExpectedValues == null))
                {
                    this.mCheckGatGericaServiceExpectedValues = new CheckGatGericaServiceExpectedValues();
                }
                return this.mCheckGatGericaServiceExpectedValues;
            }
        }
        
        public virtual CheckGatTaskSchedulerDataServiceExpectedValues CheckGatTaskSchedulerDataServiceExpectedValues
        {
            get
            {
                if ((this.mCheckGatTaskSchedulerDataServiceExpectedValues == null))
                {
                    this.mCheckGatTaskSchedulerDataServiceExpectedValues = new CheckGatTaskSchedulerDataServiceExpectedValues();
                }
                return this.mCheckGatTaskSchedulerDataServiceExpectedValues;
            }
        }
        
        public virtual CheckGrovplanTabExpectedValues CheckGrovplanTabExpectedValues
        {
            get
            {
                if ((this.mCheckGrovplanTabExpectedValues == null))
                {
                    this.mCheckGrovplanTabExpectedValues = new CheckGrovplanTabExpectedValues();
                }
                return this.mCheckGrovplanTabExpectedValues;
            }
        }
        
        public virtual CheckHeHaExpectedValues CheckHeHaExpectedValues
        {
            get
            {
                if ((this.mCheckHeHaExpectedValues == null))
                {
                    this.mCheckHeHaExpectedValues = new CheckHeHaExpectedValues();
                }
                return this.mCheckHeHaExpectedValues;
            }
        }
        
        public virtual CheckHelpFileButtonTextSweExpectedValues CheckHelpFileButtonTextSweExpectedValues
        {
            get
            {
                if ((this.mCheckHelpFileButtonTextSweExpectedValues == null))
                {
                    this.mCheckHelpFileButtonTextSweExpectedValues = new CheckHelpFileButtonTextSweExpectedValues();
                }
                return this.mCheckHelpFileButtonTextSweExpectedValues;
            }
        }
        
        public virtual CheckHelpFileLinkExpectedValues CheckHelpFileLinkExpectedValues
        {
            get
            {
                if ((this.mCheckHelpFileLinkExpectedValues == null))
                {
                    this.mCheckHelpFileLinkExpectedValues = new CheckHelpFileLinkExpectedValues();
                }
                return this.mCheckHelpFileLinkExpectedValues;
            }
        }
        
        public virtual CheckIdmServiceExpectedValues CheckIdmServiceExpectedValues
        {
            get
            {
                if ((this.mCheckIdmServiceExpectedValues == null))
                {
                    this.mCheckIdmServiceExpectedValues = new CheckIdmServiceExpectedValues();
                }
                return this.mCheckIdmServiceExpectedValues;
            }
        }
        
        public virtual CheckImportServiceExpectedValues CheckImportServiceExpectedValues
        {
            get
            {
                if ((this.mCheckImportServiceExpectedValues == null))
                {
                    this.mCheckImportServiceExpectedValues = new CheckImportServiceExpectedValues();
                }
                return this.mCheckImportServiceExpectedValues;
            }
        }
        
        public virtual CheckLISTabExpectedValues CheckLISTabExpectedValues
        {
            get
            {
                if ((this.mCheckLISTabExpectedValues == null))
                {
                    this.mCheckLISTabExpectedValues = new CheckLISTabExpectedValues();
                }
                return this.mCheckLISTabExpectedValues;
            }
        }
        
        public virtual CheckMainTitleMinGatSweExpectedValues CheckMainTitleMinGatSweExpectedValues
        {
            get
            {
                if ((this.mCheckMainTitleMinGatSweExpectedValues == null))
                {
                    this.mCheckMainTitleMinGatSweExpectedValues = new CheckMainTitleMinGatSweExpectedValues();
                }
                return this.mCheckMainTitleMinGatSweExpectedValues;
            }
        }
        
        public virtual CheckMinGatHelpfileMainMenuTextExpectedValues CheckMinGatHelpfileMainMenuTextExpectedValues
        {
            get
            {
                if ((this.mCheckMinGatHelpfileMainMenuTextExpectedValues == null))
                {
                    this.mCheckMinGatHelpfileMainMenuTextExpectedValues = new CheckMinGatHelpfileMainMenuTextExpectedValues();
                }
                return this.mCheckMinGatHelpfileMainMenuTextExpectedValues;
            }
        }
        
        public virtual CheckPatientInformationServiceExpectedValues CheckPatientInformationServiceExpectedValues
        {
            get
            {
                if ((this.mCheckPatientInformationServiceExpectedValues == null))
                {
                    this.mCheckPatientInformationServiceExpectedValues = new CheckPatientInformationServiceExpectedValues();
                }
                return this.mCheckPatientInformationServiceExpectedValues;
            }
        }
        
        public virtual CheckPayslipImportServiceExpectedValues CheckPayslipImportServiceExpectedValues
        {
            get
            {
                if ((this.mCheckPayslipImportServiceExpectedValues == null))
                {
                    this.mCheckPayslipImportServiceExpectedValues = new CheckPayslipImportServiceExpectedValues();
                }
                return this.mCheckPayslipImportServiceExpectedValues;
            }
        }
        
        public virtual CheckProduksjonsplanTabExpectedValues CheckProduksjonsplanTabExpectedValues
        {
            get
            {
                if ((this.mCheckProduksjonsplanTabExpectedValues == null))
                {
                    this.mCheckProduksjonsplanTabExpectedValues = new CheckProduksjonsplanTabExpectedValues();
                }
                return this.mCheckProduksjonsplanTabExpectedValues;
            }
        }
        
        public virtual CheckRapportsenterTabExpectedValues CheckRapportsenterTabExpectedValues
        {
            get
            {
                if ((this.mCheckRapportsenterTabExpectedValues == null))
                {
                    this.mCheckRapportsenterTabExpectedValues = new CheckRapportsenterTabExpectedValues();
                }
                return this.mCheckRapportsenterTabExpectedValues;
            }
        }
        
        public virtual CheckReshRosterServiceExpectedValues CheckReshRosterServiceExpectedValues
        {
            get
            {
                if ((this.mCheckReshRosterServiceExpectedValues == null))
                {
                    this.mCheckReshRosterServiceExpectedValues = new CheckReshRosterServiceExpectedValues();
                }
                return this.mCheckReshRosterServiceExpectedValues;
            }
        }
        
        public virtual CheckRoleDepartmentServiceExpectedValues CheckRoleDepartmentServiceExpectedValues
        {
            get
            {
                if ((this.mCheckRoleDepartmentServiceExpectedValues == null))
                {
                    this.mCheckRoleDepartmentServiceExpectedValues = new CheckRoleDepartmentServiceExpectedValues();
                }
                return this.mCheckRoleDepartmentServiceExpectedValues;
            }
        }
        
        public virtual CheckRoleDepartmentServiceV65ExpectedValues CheckRoleDepartmentServiceV65ExpectedValues
        {
            get
            {
                if ((this.mCheckRoleDepartmentServiceV65ExpectedValues == null))
                {
                    this.mCheckRoleDepartmentServiceV65ExpectedValues = new CheckRoleDepartmentServiceV65ExpectedValues();
                }
                return this.mCheckRoleDepartmentServiceV65ExpectedValues;
            }
        }
        public virtual CheckServicesRunningErrorExpectedValues CheckServicesRunningErrorExpectedValues
        {
            get
            {
                if ((this.mCheckServicesRunningErrorExpectedValues == null))
                {
                    this.mCheckServicesRunningErrorExpectedValues = new CheckServicesRunningErrorExpectedValues();
                }
                return this.mCheckServicesRunningErrorExpectedValues;
            }
        }
        
        public virtual CheckSmsByMailReaderExpectedValues CheckSmsByMailReaderExpectedValues
        {
            get
            {
                if ((this.mCheckSmsByMailReaderExpectedValues == null))
                {
                    this.mCheckSmsByMailReaderExpectedValues = new CheckSmsByMailReaderExpectedValues();
                }
                return this.mCheckSmsByMailReaderExpectedValues;
            }
        }
        
        public virtual CheckSmsGatewayServiceExpectedValues CheckSmsGatewayServiceExpectedValues
        {
            get
            {
                if ((this.mCheckSmsGatewayServiceExpectedValues == null))
                {
                    this.mCheckSmsGatewayServiceExpectedValues = new CheckSmsGatewayServiceExpectedValues();
                }
                return this.mCheckSmsGatewayServiceExpectedValues;
            }
        }
        
        public virtual CheckSmsServiceExpectedValues CheckSmsServiceExpectedValues
        {
            get
            {
                if ((this.mCheckSmsServiceExpectedValues == null))
                {
                    this.mCheckSmsServiceExpectedValues = new CheckSmsServiceExpectedValues();
                }
                return this.mCheckSmsServiceExpectedValues;
            }
        }
        
        public virtual CheckSystemInformationServiceExpectedValues CheckSystemInformationServiceExpectedValues
        {
            get
            {
                if ((this.mCheckSystemInformationServiceExpectedValues == null))
                {
                    this.mCheckSystemInformationServiceExpectedValues = new CheckSystemInformationServiceExpectedValues();
                }
                return this.mCheckSystemInformationServiceExpectedValues;
            }
        }
        
        public virtual CheckTaskAgreementServiceExpectedValues CheckTaskAgreementServiceExpectedValues
        {
            get
            {
                if ((this.mCheckTaskAgreementServiceExpectedValues == null))
                {
                    this.mCheckTaskAgreementServiceExpectedValues = new CheckTaskAgreementServiceExpectedValues();
                }
                return this.mCheckTaskAgreementServiceExpectedValues;
            }
        }
        
        public virtual CheckTesServiceExpectedValues CheckTesServiceExpectedValues
        {
            get
            {
                if ((this.mCheckTesServiceExpectedValues == null))
                {
                    this.mCheckTesServiceExpectedValues = new CheckTesServiceExpectedValues();
                }
                return this.mCheckTesServiceExpectedValues;
            }
        }
        
        public virtual CheckTestServiceExpectedValues CheckTestServiceExpectedValues
        {
            get
            {
                if ((this.mCheckTestServiceExpectedValues == null))
                {
                    this.mCheckTestServiceExpectedValues = new CheckTestServiceExpectedValues();
                }
                return this.mCheckTestServiceExpectedValues;
            }
        }
        
        public virtual CheckTimeregImportExpectedValues CheckTimeregImportExpectedValues
        {
            get
            {
                if ((this.mCheckTimeregImportExpectedValues == null))
                {
                    this.mCheckTimeregImportExpectedValues = new CheckTimeregImportExpectedValues();
                }
                return this.mCheckTimeregImportExpectedValues;
            }
        }
        
        public virtual CheckTopExpectedValues CheckTopExpectedValues
        {
            get
            {
                if ((this.mCheckTopExpectedValues == null))
                {
                    this.mCheckTopExpectedValues = new CheckTopExpectedValues();
                }
                return this.mCheckTopExpectedValues;
            }
        }
        
        public virtual CheckUniqueServiceExpectedValues CheckUniqueServiceExpectedValues
        {
            get
            {
                if ((this.mCheckUniqueServiceExpectedValues == null))
                {
                    this.mCheckUniqueServiceExpectedValues = new CheckUniqueServiceExpectedValues();
                }
                return this.mCheckUniqueServiceExpectedValues;
            }
        }
        
        public virtual CheckWeaBreakServiceExpectedValues CheckWeaBreakServiceExpectedValues
        {
            get
            {
                if ((this.mCheckWeaBreakServiceExpectedValues == null))
                {
                    this.mCheckWeaBreakServiceExpectedValues = new CheckWeaBreakServiceExpectedValues();
                }
                return this.mCheckWeaBreakServiceExpectedValues;
            }
        }
        
        public virtual CheckWishPlanWebServiceExpectedValues CheckWishPlanWebServiceExpectedValues
        {
            get
            {
                if ((this.mCheckWishPlanWebServiceExpectedValues == null))
                {
                    this.mCheckWishPlanWebServiceExpectedValues = new CheckWishPlanWebServiceExpectedValues();
                }
                return this.mCheckWishPlanWebServiceExpectedValues;
            }
        }
        
        public virtual CloseFlexClockParams CloseFlexClockParams
        {
            get
            {
                if ((this.mCloseFlexClockParams == null))
                {
                    this.mCloseFlexClockParams = new CloseFlexClockParams();
                }
                return this.mCloseFlexClockParams;
            }
        }
        
        public virtual SetupServiceJobsParams SetupServiceJobsParams
        {
            get
            {
                if ((this.mSetupServiceJobsParams == null))
                {
                    this.mSetupServiceJobsParams = new SetupServiceJobsParams();
                }
                return this.mSetupServiceJobsParams;
            }
        }
        
        public virtual StartFlexTimeClockParams StartFlexTimeClockParams
        {
            get
            {
                if ((this.mStartFlexTimeClockParams == null))
                {
                    this.mStartFlexTimeClockParams = new StartFlexTimeClockParams();
                }
                return this.mStartFlexTimeClockParams;
            }
        }
        
        public virtual VaktutlånJohnsenFridayParams VaktutlånJohnsenFridayParams
        {
            get
            {
                if ((this.mVaktutlånJohnsenFridayParams == null))
                {
                    this.mVaktutlånJohnsenFridayParams = new VaktutlånJohnsenFridayParams();
                }
                return this.mVaktutlånJohnsenFridayParams;
            }
        }
        
        public UIFileExplorerWindow UIFileExplorerWindow
        {
            get
            {
                if ((this.mUIFileExplorerWindow == null))
                {
                    this.mUIFileExplorerWindow = new UIFileExplorerWindow();
                }
                return this.mUIFileExplorerWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIExtractCompressedZipWindow UIExtractCompressedZipWindow
        {
            get
            {
                if ((this.mUIExtractCompressedZipWindow == null))
                {
                    this.mUIExtractCompressedZipWindow = new UIExtractCompressedZipWindow();
                }
                return this.mUIExtractCompressedZipWindow;
            }
        }
        
        public UIGat_641_noWindow UIGat_641_noWindow
        {
            get
            {
                if ((this.mUIGat_641_noWindow == null))
                {
                    this.mUIGat_641_noWindow = new UIGat_641_noWindow();
                }
                return this.mUIGat_641_noWindow;
            }
        }
        
        public UIExeSearchResultsinGaWindow UIExeSearchResultsinGaWindow
        {
            get
            {
                if ((this.mUIExeSearchResultsinGaWindow == null))
                {
                    this.mUIExeSearchResultsinGaWindow = new UIExeSearchResultsinGaWindow();
                }
                return this.mUIExeSearchResultsinGaWindow;
            }
        }
        
        public UIGT2004AdvarselWindow UIGT2004AdvarselWindow
        {
            get
            {
                if ((this.mUIGT2004AdvarselWindow == null))
                {
                    this.mUIGT2004AdvarselWindow = new UIGT2004AdvarselWindow();
                }
                return this.mUIGT2004AdvarselWindow;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UIResultaterfrasystemsWindow UIResultaterfrasystemsWindow
        {
            get
            {
                if ((this.mUIResultaterfrasystemsWindow == null))
                {
                    this.mUIResultaterfrasystemsWindow = new UIResultaterfrasystemsWindow();
                }
                return this.mUIResultaterfrasystemsWindow;
            }
        }
        
        public UISystemmelding1Window UISystemmelding1Window
        {
            get
            {
                if ((this.mUISystemmelding1Window == null))
                {
                    this.mUISystemmelding1Window = new UISystemmelding1Window();
                }
                return this.mUISystemmelding1Window;
            }
        }
        
        public UISearchWindowsWindow UISearchWindowsWindow
        {
            get
            {
                if ((this.mUISearchWindowsWindow == null))
                {
                    this.mUISearchWindowsWindow = new UISearchWindowsWindow();
                }
                return this.mUISearchWindowsWindow;
            }
        }
        
        public UIGat_641_noWindow1 UIGat_641_noWindow1
        {
            get
            {
                if ((this.mUIGat_641_noWindow1 == null))
                {
                    this.mUIGat_641_noWindow1 = new UIGat_641_noWindow1();
                }
                return this.mUIGat_641_noWindow1;
            }
        }
        
        public UIGat_641_noWindow2 UIGat_641_noWindow2
        {
            get
            {
                if ((this.mUIGat_641_noWindow2 == null))
                {
                    this.mUIGat_641_noWindow2 = new UIGat_641_noWindow2();
                }
                return this.mUIGat_641_noWindow2;
            }
        }
        
        public UIGat_641_noWindow3 UIGat_641_noWindow3
        {
            get
            {
                if ((this.mUIGat_641_noWindow3 == null))
                {
                    this.mUIGat_641_noWindow3 = new UIGat_641_noWindow3();
                }
                return this.mUIGat_641_noWindow3;
            }
        }
        
        public UIGatver64138140ASCLAvWindow UIGatver64138140ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64138140ASCLAvWindow == null))
                {
                    this.mUIGatver64138140ASCLAvWindow = new UIGatver64138140ASCLAvWindow();
                }
                return this.mUIGatver64138140ASCLAvWindow;
            }
        }
        
        public UIItemWindow14 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow14();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIGatver64138140ASCLAvWindow1 UIGatver64138140ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver64138140ASCLAvWindow1 == null))
                {
                    this.mUIGatver64138140ASCLAvWindow1 = new UIGatver64138140ASCLAvWindow1();
                }
                return this.mUIGatver64138140ASCLAvWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIMerarbeidovertidWindow UIMerarbeidovertidWindow
        {
            get
            {
                if ((this.mUIMerarbeidovertidWindow == null))
                {
                    this.mUIMerarbeidovertidWindow = new UIMerarbeidovertidWindow();
                }
                return this.mUIMerarbeidovertidWindow;
            }
        }
        
        public UIItemWindow111 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow111();
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIItemWindow31 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow31();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIGatver64238230ASCLAvWindow UIGatver64238230ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64238230ASCLAvWindow == null))
                {
                    this.mUIGatver64238230ASCLAvWindow = new UIGatver64238230ASCLAvWindow();
                }
                return this.mUIGatver64238230ASCLAvWindow;
            }
        }
        
        public UIItemWindow41 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow41();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIByttemedavdelingWindow UIByttemedavdelingWindow
        {
            get
            {
                if ((this.mUIByttemedavdelingWindow == null))
                {
                    this.mUIByttemedavdelingWindow = new UIByttemedavdelingWindow();
                }
                return this.mUIByttemedavdelingWindow;
            }
        }
        
        public UIUtlånavvakterWindow UIUtlånavvakterWindow
        {
            get
            {
                if ((this.mUIUtlånavvakterWindow == null))
                {
                    this.mUIUtlånavvakterWindow = new UIUtlånavvakterWindow();
                }
                return this.mUIUtlånavvakterWindow;
            }
        }
        
        public UIEFO3000GatWindow UIEFO3000GatWindow
        {
            get
            {
                if ((this.mUIEFO3000GatWindow == null))
                {
                    this.mUIEFO3000GatWindow = new UIEFO3000GatWindow();
                }
                return this.mUIEFO3000GatWindow;
            }
        }
        
        public UIGatver64238230ASCLAvWindow1 UIGatver64238230ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver64238230ASCLAvWindow1 == null))
                {
                    this.mUIGatver64238230ASCLAvWindow1 = new UIGatver64238230ASCLAvWindow1();
                }
                return this.mUIGatver64238230ASCLAvWindow1;
            }
        }
        
        public UIItemWindow51 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow51();
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIDokumentWindow UIDokumentWindow
        {
            get
            {
                if ((this.mUIDokumentWindow == null))
                {
                    this.mUIDokumentWindow = new UIDokumentWindow();
                }
                return this.mUIDokumentWindow;
            }
        }
        
        public UIQuestionWindow UIQuestionWindow
        {
            get
            {
                if ((this.mUIQuestionWindow == null))
                {
                    this.mUIQuestionWindow = new UIQuestionWindow();
                }
                return this.mUIQuestionWindow;
            }
        }
        
        public UIDokumentGatdokumentEWindow UIDokumentGatdokumentEWindow
        {
            get
            {
                if ((this.mUIDokumentGatdokumentEWindow == null))
                {
                    this.mUIDokumentGatdokumentEWindow = new UIDokumentGatdokumentEWindow();
                }
                return this.mUIDokumentGatdokumentEWindow;
            }
        }
        
        public UIItemWindow61 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow61();
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UIGatver64HjelpCOPYRIGWindow UIGatver64HjelpCOPYRIGWindow
        {
            get
            {
                if ((this.mUIGatver64HjelpCOPYRIGWindow == null))
                {
                    this.mUIGatver64HjelpCOPYRIGWindow = new UIGatver64HjelpCOPYRIGWindow();
                }
                return this.mUIGatver64HjelpCOPYRIGWindow;
            }
        }
        
        public UIGat_iniWindow UIGat_iniWindow
        {
            get
            {
                if ((this.mUIGat_iniWindow == null))
                {
                    this.mUIGat_iniWindow = new UIGat_iniWindow();
                }
                return this.mUIGat_iniWindow;
            }
        }
        
        public UIGat_noWindow UIGat_noWindow
        {
            get
            {
                if ((this.mUIGat_noWindow == null))
                {
                    this.mUIGat_noWindow = new UIGat_noWindow();
                }
                return this.mUIGat_noWindow;
            }
        }
        
        public UIGatver64138140ASCLAvWindow2 UIGatver64138140ASCLAvWindow2
        {
            get
            {
                if ((this.mUIGatver64138140ASCLAvWindow2 == null))
                {
                    this.mUIGatver64138140ASCLAvWindow2 = new UIGatver64138140ASCLAvWindow2();
                }
                return this.mUIGatver64138140ASCLAvWindow2;
            }
        }
        
        public UIGT4000BekreftWindow UIGT4000BekreftWindow
        {
            get
            {
                if ((this.mUIGT4000BekreftWindow == null))
                {
                    this.mUIGT4000BekreftWindow = new UIGT4000BekreftWindow();
                }
                return this.mUIGT4000BekreftWindow;
            }
        }
        
        public UIRunningapplicationsWindow UIRunningapplicationsWindow
        {
            get
            {
                if ((this.mUIRunningapplicationsWindow == null))
                {
                    this.mUIRunningapplicationsWindow = new UIRunningapplicationsWindow();
                }
                return this.mUIRunningapplicationsWindow;
            }
        }
        
        public UIProgramManagerWindow UIProgramManagerWindow
        {
            get
            {
                if ((this.mUIProgramManagerWindow == null))
                {
                    this.mUIProgramManagerWindow = new UIProgramManagerWindow();
                }
                return this.mUIProgramManagerWindow;
            }
        }
        
        public UIInternetInformationSWindow UIInternetInformationSWindow
        {
            get
            {
                if ((this.mUIInternetInformationSWindow == null))
                {
                    this.mUIInternetInformationSWindow = new UIInternetInformationSWindow();
                }
                return this.mUIInternetInformationSWindow;
            }
        }
        
        public UIConfirmRemoveWindow UIConfirmRemoveWindow
        {
            get
            {
                if ((this.mUIConfirmRemoveWindow == null))
                {
                    this.mUIConfirmRemoveWindow = new UIConfirmRemoveWindow();
                }
                return this.mUIConfirmRemoveWindow;
            }
        }
        
        public UIAddApplicationWindow UIAddApplicationWindow
        {
            get
            {
                if ((this.mUIAddApplicationWindow == null))
                {
                    this.mUIAddApplicationWindow = new UIAddApplicationWindow();
                }
                return this.mUIAddApplicationWindow;
            }
        }
        
        public UISelectApplicationPooWindow UISelectApplicationPooWindow
        {
            get
            {
                if ((this.mUISelectApplicationPooWindow == null))
                {
                    this.mUISelectApplicationPooWindow = new UISelectApplicationPooWindow();
                }
                return this.mUISelectApplicationPooWindow;
            }
        }
        
        public UIAppSettingsconfigNotWindow UIAppSettingsconfigNotWindow
        {
            get
            {
                if ((this.mUIAppSettingsconfigNotWindow == null))
                {
                    this.mUIAppSettingsconfigNotWindow = new UIAppSettingsconfigNotWindow();
                }
                return this.mUIAppSettingsconfigNotWindow;
            }
        }
        
        public UINotepadWindow UINotepadWindow
        {
            get
            {
                if ((this.mUINotepadWindow == null))
                {
                    this.mUINotepadWindow = new UINotepadWindow();
                }
                return this.mUINotepadWindow;
            }
        }
        
        public UIAddApplicationPoolWindow UIAddApplicationPoolWindow
        {
            get
            {
                if ((this.mUIAddApplicationPoolWindow == null))
                {
                    this.mUIAddApplicationPoolWindow = new UIAddApplicationPoolWindow();
                }
                return this.mUIAddApplicationPoolWindow;
            }
        }
        
        public UIConnectionStringsconWindow UIConnectionStringsconWindow
        {
            get
            {
                if ((this.mUIConnectionStringsconWindow == null))
                {
                    this.mUIConnectionStringsconWindow = new UIConnectionStringsconWindow();
                }
                return this.mUIConnectionStringsconWindow;
            }
        }
        
        public UILogginnMinGatv642383Window UILogginnMinGatv642383Window
        {
            get
            {
                if ((this.mUILogginnMinGatv642383Window == null))
                {
                    this.mUILogginnMinGatv642383Window = new UILogginnMinGatv642383Window();
                }
                return this.mUILogginnMinGatv642383Window;
            }
        }
        
        public UIStartsidenMinGatv642Window UIStartsidenMinGatv642Window
        {
            get
            {
                if ((this.mUIStartsidenMinGatv642Window == null))
                {
                    this.mUIStartsidenMinGatv642Window = new UIStartsidenMinGatv642Window();
                }
                return this.mUIStartsidenMinGatv642Window;
            }
        }
        
        public UIMinGatHjelpv64COPYRIWindow UIMinGatHjelpv64COPYRIWindow
        {
            get
            {
                if ((this.mUIMinGatHjelpv64COPYRIWindow == null))
                {
                    this.mUIMinGatHjelpv64COPYRIWindow = new UIMinGatHjelpv64COPYRIWindow();
                }
                return this.mUIMinGatHjelpv64COPYRIWindow;
            }
        }
        
        public UIWebconfigNotepadWindow UIWebconfigNotepadWindow
        {
            get
            {
                if ((this.mUIWebconfigNotepadWindow == null))
                {
                    this.mUIWebconfigNotepadWindow = new UIWebconfigNotepadWindow();
                }
                return this.mUIWebconfigNotepadWindow;
            }
        }
        
        public UIGatWebserviceMainPagWindow UIGatWebserviceMainPagWindow
        {
            get
            {
                if ((this.mUIGatWebserviceMainPagWindow == null))
                {
                    this.mUIGatWebserviceMainPagWindow = new UIGatWebserviceMainPagWindow();
                }
                return this.mUIGatWebserviceMainPagWindow;
            }
        }
        
        public UIGatWebservices2MainPWindow UIGatWebservices2MainPWindow
        {
            get
            {
                if ((this.mUIGatWebservices2MainPWindow == null))
                {
                    this.mUIGatWebservices2MainPWindow = new UIGatWebservices2MainPWindow();
                }
                return this.mUIGatWebservices2MainPWindow;
            }
        }
        
        public UIGatFlexWindow UIGatFlexWindow
        {
            get
            {
                if ((this.mUIGatFlexWindow == null))
                {
                    this.mUIGatFlexWindow = new UIGatFlexWindow();
                }
                return this.mUIGatFlexWindow;
            }
        }
        
        public UIGatver64238306ASCLAvWindow UIGatver64238306ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64238306ASCLAvWindow == null))
                {
                    this.mUIGatver64238306ASCLAvWindow = new UIGatver64238306ASCLAvWindow();
                }
                return this.mUIGatver64238306ASCLAvWindow;
            }
        }
        
        public UIVelgradWindow UIVelgradWindow
        {
            get
            {
                if ((this.mUIVelgradWindow == null))
                {
                    this.mUIVelgradWindow = new UIVelgradWindow();
                }
                return this.mUIVelgradWindow;
            }
        }
        
        public UIOppsettavstemplingskWindow UIOppsettavstemplingskWindow
        {
            get
            {
                if ((this.mUIOppsettavstemplingskWindow == null))
                {
                    this.mUIOppsettavstemplingskWindow = new UIOppsettavstemplingskWindow();
                }
                return this.mUIOppsettavstemplingskWindow;
            }
        }
        
        public UIGATFlexWindow1 UIGATFlexWindow1
        {
            get
            {
                if ((this.mUIGATFlexWindow1 == null))
                {
                    this.mUIGATFlexWindow1 = new UIGATFlexWindow1();
                }
                return this.mUIGATFlexWindow1;
            }
        }
        
        public UIGATFlexWindow11 UIGATFlexWindow11
        {
            get
            {
                if ((this.mUIGATFlexWindow11 == null))
                {
                    this.mUIGATFlexWindow11 = new UIGATFlexWindow11();
                }
                return this.mUIGATFlexWindow11;
            }
        }
        
        public UIGATFlexWindow2 UIGATFlexWindow2
        {
            get
            {
                if ((this.mUIGATFlexWindow2 == null))
                {
                    this.mUIGATFlexWindow2 = new UIGATFlexWindow2();
                }
                return this.mUIGATFlexWindow2;
            }
        }
        
        public UIGatTaskSchedulerServWindow UIGatTaskSchedulerServWindow
        {
            get
            {
                if ((this.mUIGatTaskSchedulerServWindow == null))
                {
                    this.mUIGatTaskSchedulerServWindow = new UIGatTaskSchedulerServWindow();
                }
                return this.mUIGatTaskSchedulerServWindow;
            }
        }
        
        public UIUninstallWindow UIUninstallWindow
        {
            get
            {
                if ((this.mUIUninstallWindow == null))
                {
                    this.mUIUninstallWindow = new UIUninstallWindow();
                }
                return this.mUIUninstallWindow;
            }
        }
        
        public UISetupGatTaskScheduleWindow UISetupGatTaskScheduleWindow
        {
            get
            {
                if ((this.mUISetupGatTaskScheduleWindow == null))
                {
                    this.mUISetupGatTaskScheduleWindow = new UISetupGatTaskScheduleWindow();
                }
                return this.mUISetupGatTaskScheduleWindow;
            }
        }
        
        public UIBasisURLforWebservicWindow UIBasisURLforWebservicWindow
        {
            get
            {
                if ((this.mUIBasisURLforWebservicWindow == null))
                {
                    this.mUIBasisURLforWebservicWindow = new UIBasisURLforWebservicWindow();
                }
                return this.mUIBasisURLforWebservicWindow;
            }
        }
        
        public UIServiceoppsettWindow UIServiceoppsettWindow
        {
            get
            {
                if ((this.mUIServiceoppsettWindow == null))
                {
                    this.mUIServiceoppsettWindow = new UIServiceoppsettWindow();
                }
                return this.mUIServiceoppsettWindow;
            }
        }
        
        public UIGatSchedulerInternetWindow UIGatSchedulerInternetWindow
        {
            get
            {
                if ((this.mUIGatSchedulerInternetWindow == null))
                {
                    this.mUIGatSchedulerInternetWindow = new UIGatSchedulerInternetWindow();
                }
                return this.mUIGatSchedulerInternetWindow;
            }
        }
        
        public UIDatabaseLoginWindow UIDatabaseLoginWindow
        {
            get
            {
                if ((this.mUIDatabaseLoginWindow == null))
                {
                    this.mUIDatabaseLoginWindow = new UIDatabaseLoginWindow();
                }
                return this.mUIDatabaseLoginWindow;
            }
        }
        
        public UIConnectionparametersWindow UIConnectionparametersWindow
        {
            get
            {
                if ((this.mUIConnectionparametersWindow == null))
                {
                    this.mUIConnectionparametersWindow = new UIConnectionparametersWindow();
                }
                return this.mUIConnectionparametersWindow;
            }
        }
        
        public UIDataLinkPropertiesWindow UIDataLinkPropertiesWindow
        {
            get
            {
                if ((this.mUIDataLinkPropertiesWindow == null))
                {
                    this.mUIDataLinkPropertiesWindow = new UIDataLinkPropertiesWindow();
                }
                return this.mUIDataLinkPropertiesWindow;
            }
        }
        
        public UIGatver64238635ASCLAvWindow UIGatver64238635ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64238635ASCLAvWindow == null))
                {
                    this.mUIGatver64238635ASCLAvWindow = new UIGatver64238635ASCLAvWindow();
                }
                return this.mUIGatver64238635ASCLAvWindow;
            }
        }
        
        public UIGatver64238635ASCLAvWindow1 UIGatver64238635ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver64238635ASCLAvWindow1 == null))
                {
                    this.mUIGatver64238635ASCLAvWindow1 = new UIGatver64238635ASCLAvWindow1();
                }
                return this.mUIGatver64238635ASCLAvWindow1;
            }
        }
        
        public UIStartsidanMinGatv642Window UIStartsidanMinGatv642Window
        {
            get
            {
                if ((this.mUIStartsidanMinGatv642Window == null))
                {
                    this.mUIStartsidanMinGatv642Window = new UIStartsidanMinGatv642Window();
                }
                return this.mUIStartsidanMinGatv642Window;
            }
        }
        
        public UIRoleDepartmentServicWindow UIRoleDepartmentServicWindow
        {
            get
            {
                if ((this.mUIRoleDepartmentServicWindow == null))
                {
                    this.mUIRoleDepartmentServicWindow = new UIRoleDepartmentServicWindow();
                }
                return this.mUIRoleDepartmentServicWindow;
            }
        }
        
        public UIGatver64238635ASCLAvWindow2 UIGatver64238635ASCLAvWindow2
        {
            get
            {
                if ((this.mUIGatver64238635ASCLAvWindow2 == null))
                {
                    this.mUIGatver64238635ASCLAvWindow2 = new UIGatver64238635ASCLAvWindow2();
                }
                return this.mUIGatver64238635ASCLAvWindow2;
            }
        }
        
        public UIGatver635ASCLAvd3002Window UIGatver635ASCLAvd3002Window
        {
            get
            {
                if ((this.mUIGatver635ASCLAvd3002Window == null))
                {
                    this.mUIGatver635ASCLAvd3002Window = new UIGatver635ASCLAvd3002Window();
                }
                return this.mUIGatver635ASCLAvd3002Window;
            }
        }
        
        public UIGatver65038745ASCLAvWindow UIGatver65038745ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65038745ASCLAvWindow == null))
                {
                    this.mUIGatver65038745ASCLAvWindow = new UIGatver65038745ASCLAvWindow();
                }
                return this.mUIGatver65038745ASCLAvWindow;
            }
        }
        
        public UIGatver65038745ASCLAvWindow1 UIGatver65038745ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver65038745ASCLAvWindow1 == null))
                {
                    this.mUIGatver65038745ASCLAvWindow1 = new UIGatver65038745ASCLAvWindow1();
                }
                return this.mUIGatver65038745ASCLAvWindow1;
            }
        }
        
        public UIGatver64238741ASCLAvWindow UIGatver64238741ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64238741ASCLAvWindow == null))
                {
                    this.mUIGatver64238741ASCLAvWindow = new UIGatver64238741ASCLAvWindow();
                }
                return this.mUIGatver64238741ASCLAvWindow;
            }
        }
        
        public UIGatver64238741ASCLAvWindow1 UIGatver64238741ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver64238741ASCLAvWindow1 == null))
                {
                    this.mUIGatver64238741ASCLAvWindow1 = new UIGatver64238741ASCLAvWindow1();
                }
                return this.mUIGatver64238741ASCLAvWindow1;
            }
        }
        
        public UIGatver65038745ASCLAvWindow2 UIGatver65038745ASCLAvWindow2
        {
            get
            {
                if ((this.mUIGatver65038745ASCLAvWindow2 == null))
                {
                    this.mUIGatver65038745ASCLAvWindow2 = new UIGatver65038745ASCLAvWindow2();
                }
                return this.mUIGatver65038745ASCLAvWindow2;
            }
        }
        
        public UIGatver64339335ASCLAvWindow UIGatver64339335ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64339335ASCLAvWindow == null))
                {
                    this.mUIGatver64339335ASCLAvWindow = new UIGatver64339335ASCLAvWindow();
                }
                return this.mUIGatver64339335ASCLAvWindow;
            }
        }
        
        public UIGatver64339080ASCLAvWindow UIGatver64339080ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver64339080ASCLAvWindow == null))
                {
                    this.mUIGatver64339080ASCLAvWindow = new UIGatver64339080ASCLAvWindow();
                }
                return this.mUIGatver64339080ASCLAvWindow;
            }
        }
        
        public UIGlobaltoppsettWindow UIGlobaltoppsettWindow
        {
            get
            {
                if ((this.mUIGlobaltoppsettWindow == null))
                {
                    this.mUIGlobaltoppsettWindow = new UIGlobaltoppsettWindow();
                }
                return this.mUIGlobaltoppsettWindow;
            }
        }
        
        public UIGatver65041007ASCLAvWindow UIGatver65041007ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65041007ASCLAvWindow == null))
                {
                    this.mUIGatver65041007ASCLAvWindow = new UIGatver65041007ASCLAvWindow();
                }
                return this.mUIGatver65041007ASCLAvWindow;
            }
        }
        
        public UISammenligningavkompeWindow UISammenligningavkompeWindow
        {
            get
            {
                if ((this.mUISammenligningavkompeWindow == null))
                {
                    this.mUISammenligningavkompeWindow = new UISammenligningavkompeWindow();
                }
                return this.mUISammenligningavkompeWindow;
            }
        }
        
        public UIGatver65041007ASCLAvWindow1 UIGatver65041007ASCLAvWindow1
        {
            get
            {
                if ((this.mUIGatver65041007ASCLAvWindow1 == null))
                {
                    this.mUIGatver65041007ASCLAvWindow1 = new UIGatver65041007ASCLAvWindow1();
                }
                return this.mUIGatver65041007ASCLAvWindow1;
            }
        }
        
        public UIGatver65041632ASCLAvWindow UIGatver65041632ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver65041632ASCLAvWindow == null))
                {
                    this.mUIGatver65041632ASCLAvWindow = new UIGatver65041632ASCLAvWindow();
                }
                return this.mUIGatver65041632ASCLAvWindow;
            }
        }
        
        public UIRoleDepartmentServicWindow1 UIRoleDepartmentServicWindow1
        {
            get
            {
                if ((this.mUIRoleDepartmentServicWindow1 == null))
                {
                    this.mUIRoleDepartmentServicWindow1 = new UIRoleDepartmentServicWindow1();
                }
                return this.mUIRoleDepartmentServicWindow1;
            }
        }
        #endregion
        
        #region Fields
        private AddTaskScedulerPasswordParams mAddTaskScedulerPasswordParams;
        
        private CheckArbeidsplanTabExpectedValues mCheckArbeidsplanTabExpectedValues;
        
        private CheckAvdelingTabExpectedValues mCheckAvdelingTabExpectedValues;
        
        private CheckBudsjetTabExpectedValues mCheckBudsjetTabExpectedValues;
        
        private CheckBusinessAnalyzeServiceExpectedValues mCheckBusinessAnalyzeServiceExpectedValues;
        
        private CheckCalendarIntegrationWebServiceExpectedValues mCheckCalendarIntegrationWebServiceExpectedValues;
        
        private CheckCalendarServiceExpectedValues mCheckCalendarServiceExpectedValues;
        
        private CheckCommunicationQueueServiceExpectedValues mCheckCommunicationQueueServiceExpectedValues;
        
        private CheckDateTimePickerExpectedValues mCheckDateTimePickerExpectedValues;
        
        private CheckDepartmentServiceExpectedValues mCheckDepartmentServiceExpectedValues;
        
        private CheckDepartmentServiceV2ExpectedValues mCheckDepartmentServiceV2ExpectedValues;
        
        private CheckDepartmentServiceV63ExpectedValues mCheckDepartmentServiceV63ExpectedValues;
        
        private CheckEkstrainfoTabExpectedValues mCheckEkstrainfoTabExpectedValues;
        
        private CheckEmployeeChangeTrackingServiceExpectedValues mCheckEmployeeChangeTrackingServiceExpectedValues;
        
        private CheckEmployeeServiceExpectedValues mCheckEmployeeServiceExpectedValues;
        
        private CheckEmployeeServiceV63ExpectedValues mCheckEmployeeServiceV63ExpectedValues;
        
        private CheckExportServiceExpectedValues mCheckExportServiceExpectedValues;
        
        private CheckGatFlexServicesExpectedValues mCheckGatFlexServicesExpectedValues;
        
        private CheckGatGericaServiceExpectedValues mCheckGatGericaServiceExpectedValues;
        
        private CheckGatTaskSchedulerDataServiceExpectedValues mCheckGatTaskSchedulerDataServiceExpectedValues;
        
        private CheckGrovplanTabExpectedValues mCheckGrovplanTabExpectedValues;
        
        private CheckHeHaExpectedValues mCheckHeHaExpectedValues;
        
        private CheckHelpFileButtonTextSweExpectedValues mCheckHelpFileButtonTextSweExpectedValues;
        
        private CheckHelpFileLinkExpectedValues mCheckHelpFileLinkExpectedValues;
        
        private CheckIdmServiceExpectedValues mCheckIdmServiceExpectedValues;
        
        private CheckImportServiceExpectedValues mCheckImportServiceExpectedValues;
        
        private CheckLISTabExpectedValues mCheckLISTabExpectedValues;
        
        private CheckMainTitleMinGatSweExpectedValues mCheckMainTitleMinGatSweExpectedValues;
        
        private CheckMinGatHelpfileMainMenuTextExpectedValues mCheckMinGatHelpfileMainMenuTextExpectedValues;
        
        private CheckPatientInformationServiceExpectedValues mCheckPatientInformationServiceExpectedValues;
        
        private CheckPayslipImportServiceExpectedValues mCheckPayslipImportServiceExpectedValues;
        
        private CheckProduksjonsplanTabExpectedValues mCheckProduksjonsplanTabExpectedValues;
        
        private CheckRapportsenterTabExpectedValues mCheckRapportsenterTabExpectedValues;
        
        private CheckReshRosterServiceExpectedValues mCheckReshRosterServiceExpectedValues;
        
        private CheckRoleDepartmentServiceExpectedValues mCheckRoleDepartmentServiceExpectedValues;
        
        private CheckRoleDepartmentServiceV65ExpectedValues mCheckRoleDepartmentServiceV65ExpectedValues;
        
        private CheckServicesRunningErrorExpectedValues mCheckServicesRunningErrorExpectedValues;
        
        private CheckSmsByMailReaderExpectedValues mCheckSmsByMailReaderExpectedValues;
        
        private CheckSmsGatewayServiceExpectedValues mCheckSmsGatewayServiceExpectedValues;
        
        private CheckSmsServiceExpectedValues mCheckSmsServiceExpectedValues;
        
        private CheckSystemInformationServiceExpectedValues mCheckSystemInformationServiceExpectedValues;
        
        private CheckTaskAgreementServiceExpectedValues mCheckTaskAgreementServiceExpectedValues;
        
        private CheckTesServiceExpectedValues mCheckTesServiceExpectedValues;
        
        private CheckTestServiceExpectedValues mCheckTestServiceExpectedValues;
        
        private CheckTimeregImportExpectedValues mCheckTimeregImportExpectedValues;
        
        private CheckTopExpectedValues mCheckTopExpectedValues;
        
        private CheckUniqueServiceExpectedValues mCheckUniqueServiceExpectedValues;
        
        private CheckWeaBreakServiceExpectedValues mCheckWeaBreakServiceExpectedValues;
        
        private CheckWishPlanWebServiceExpectedValues mCheckWishPlanWebServiceExpectedValues;
        
        private CloseFlexClockParams mCloseFlexClockParams;
        
        private SetupServiceJobsParams mSetupServiceJobsParams;
        
        private StartFlexTimeClockParams mStartFlexTimeClockParams;
        
        private VaktutlånJohnsenFridayParams mVaktutlånJohnsenFridayParams;
        
        private UIFileExplorerWindow mUIFileExplorerWindow;
        
        private UIItemWindow2 mUIItemWindow;
        
        private UIExtractCompressedZipWindow mUIExtractCompressedZipWindow;
        
        private UIGat_641_noWindow mUIGat_641_noWindow;
        
        private UIExeSearchResultsinGaWindow mUIExeSearchResultsinGaWindow;
        
        private UIGT2004AdvarselWindow mUIGT2004AdvarselWindow;
        
        private UILoginWindow mUILoginWindow;
        
        private UIResultaterfrasystemsWindow mUIResultaterfrasystemsWindow;
        
        private UISystemmelding1Window mUISystemmelding1Window;
        
        private UISearchWindowsWindow mUISearchWindowsWindow;
        
        private UIGat_641_noWindow1 mUIGat_641_noWindow1;
        
        private UIGat_641_noWindow2 mUIGat_641_noWindow2;
        
        private UIGat_641_noWindow3 mUIGat_641_noWindow3;
        
        private UIGatver64138140ASCLAvWindow mUIGatver64138140ASCLAvWindow;
        
        private UIItemWindow14 mUIItemWindow1;
        
        private UIGatver64138140ASCLAvWindow1 mUIGatver64138140ASCLAvWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        
        private UIMerarbeidovertidWindow mUIMerarbeidovertidWindow;
        
        private UIItemWindow111 mUIItemWindow11;
        
        private UIItemWindow31 mUIItemWindow3;
        
        private UIGatver64238230ASCLAvWindow mUIGatver64238230ASCLAvWindow;
        
        private UIItemWindow41 mUIItemWindow4;
        
        private UIByttemedavdelingWindow mUIByttemedavdelingWindow;
        
        private UIUtlånavvakterWindow mUIUtlånavvakterWindow;
        
        private UIEFO3000GatWindow mUIEFO3000GatWindow;
        
        private UIGatver64238230ASCLAvWindow1 mUIGatver64238230ASCLAvWindow1;
        
        private UIItemWindow51 mUIItemWindow5;
        
        private UIDokumentWindow mUIDokumentWindow;
        
        private UIQuestionWindow mUIQuestionWindow;
        
        private UIDokumentGatdokumentEWindow mUIDokumentGatdokumentEWindow;
        
        private UIItemWindow61 mUIItemWindow6;
        
        private UIGatver64HjelpCOPYRIGWindow mUIGatver64HjelpCOPYRIGWindow;
        
        private UIGat_iniWindow mUIGat_iniWindow;
        
        private UIGat_noWindow mUIGat_noWindow;
        
        private UIGatver64138140ASCLAvWindow2 mUIGatver64138140ASCLAvWindow2;
        
        private UIGT4000BekreftWindow mUIGT4000BekreftWindow;
        
        private UIRunningapplicationsWindow mUIRunningapplicationsWindow;
        
        private UIProgramManagerWindow mUIProgramManagerWindow;
        
        private UIInternetInformationSWindow mUIInternetInformationSWindow;
        
        private UIConfirmRemoveWindow mUIConfirmRemoveWindow;
        
        private UIAddApplicationWindow mUIAddApplicationWindow;
        
        private UISelectApplicationPooWindow mUISelectApplicationPooWindow;
        
        private UIAppSettingsconfigNotWindow mUIAppSettingsconfigNotWindow;
        
        private UINotepadWindow mUINotepadWindow;
        
        private UIAddApplicationPoolWindow mUIAddApplicationPoolWindow;
        
        private UIConnectionStringsconWindow mUIConnectionStringsconWindow;
        
        private UILogginnMinGatv642383Window mUILogginnMinGatv642383Window;
        
        private UIStartsidenMinGatv642Window mUIStartsidenMinGatv642Window;
        
        private UIMinGatHjelpv64COPYRIWindow mUIMinGatHjelpv64COPYRIWindow;
        
        private UIWebconfigNotepadWindow mUIWebconfigNotepadWindow;
        
        private UIGatWebserviceMainPagWindow mUIGatWebserviceMainPagWindow;
        
        private UIGatWebservices2MainPWindow mUIGatWebservices2MainPWindow;
        
        private UIGatFlexWindow mUIGatFlexWindow;
        
        private UIGatver64238306ASCLAvWindow mUIGatver64238306ASCLAvWindow;
        
        private UIVelgradWindow mUIVelgradWindow;
        
        private UIOppsettavstemplingskWindow mUIOppsettavstemplingskWindow;
        
        private UIGATFlexWindow1 mUIGATFlexWindow1;
        
        private UIGATFlexWindow11 mUIGATFlexWindow11;
        
        private UIGATFlexWindow2 mUIGATFlexWindow2;
        
        private UIGatTaskSchedulerServWindow mUIGatTaskSchedulerServWindow;
        
        private UIUninstallWindow mUIUninstallWindow;
        
        private UISetupGatTaskScheduleWindow mUISetupGatTaskScheduleWindow;
        
        private UIBasisURLforWebservicWindow mUIBasisURLforWebservicWindow;
        
        private UIServiceoppsettWindow mUIServiceoppsettWindow;
        
        private UIGatSchedulerInternetWindow mUIGatSchedulerInternetWindow;
        
        private UIDatabaseLoginWindow mUIDatabaseLoginWindow;
        
        private UIConnectionparametersWindow mUIConnectionparametersWindow;
        
        private UIDataLinkPropertiesWindow mUIDataLinkPropertiesWindow;
        
        private UIGatver64238635ASCLAvWindow mUIGatver64238635ASCLAvWindow;
        
        private UIGatver64238635ASCLAvWindow1 mUIGatver64238635ASCLAvWindow1;
        
        private UIStartsidanMinGatv642Window mUIStartsidanMinGatv642Window;
        
        private UIRoleDepartmentServicWindow mUIRoleDepartmentServicWindow;
        
        private UIGatver64238635ASCLAvWindow2 mUIGatver64238635ASCLAvWindow2;
        
        private UIGatver635ASCLAvd3002Window mUIGatver635ASCLAvd3002Window;
        
        private UIGatver65038745ASCLAvWindow mUIGatver65038745ASCLAvWindow;
        
        private UIGatver65038745ASCLAvWindow1 mUIGatver65038745ASCLAvWindow1;
        
        private UIGatver64238741ASCLAvWindow mUIGatver64238741ASCLAvWindow;
        
        private UIGatver64238741ASCLAvWindow1 mUIGatver64238741ASCLAvWindow1;
        
        private UIGatver65038745ASCLAvWindow2 mUIGatver65038745ASCLAvWindow2;
        
        private UIGatver64339335ASCLAvWindow mUIGatver64339335ASCLAvWindow;
        
        private UIGatver64339080ASCLAvWindow mUIGatver64339080ASCLAvWindow;
        
        private UIGlobaltoppsettWindow mUIGlobaltoppsettWindow;
        
        private UIGatver65041007ASCLAvWindow mUIGatver65041007ASCLAvWindow;
        
        private UISammenligningavkompeWindow mUISammenligningavkompeWindow;
        
        private UIGatver65041007ASCLAvWindow1 mUIGatver65041007ASCLAvWindow1;
        
        private UIGatver65041632ASCLAvWindow mUIGatver65041632ASCLAvWindow;
        
        private UIRoleDepartmentServicWindow1 mUIRoleDepartmentServicWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddTaskScedulerPassword'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AddTaskScedulerPasswordParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'mysecret' in text box
        /// </summary>
        public string UIItemEditText = "mysecret";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckArbeidsplanTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckArbeidsplanTabExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Åpne' RibbonBaseButtonItem equals 'True'
        /// </summary>
        public bool UIÅpneRibbonBaseButtonItemEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAvdelingTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckAvdelingTabExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Avdeling' client equals 'True'
        /// </summary>
        public bool UIAvdelingClientEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBudsjetTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckBudsjetTabExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Budsjett' client equals 'True'
        /// </summary>
        public bool UIBudsjettClientEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBusinessAnalyzeService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckBusinessAnalyzeServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'UpdateBussinessAnalyzeData' link equals 'UpdateBussinessAnalyzeData'
        /// </summary>
        public string UIUpdateBussinessAnalyHyperlinkFriendlyName = "UpdateBussinessAnalyzeData";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalendarIntegrationWebService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckCalendarIntegrationWebServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Distribute' link equals 'Distribute'
        /// </summary>
        public string UIDistributeHyperlinkInnerText = "Distribute";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalendarService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckCalendarServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetJourShifts' link equals 'GetJourShifts'
        /// </summary>
        public string UIGetJourShiftsHyperlinkInnerText = "GetJourShifts";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCommunicationQueueService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckCommunicationQueueServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'FillMessageQueueWithDashboardWarnings' link equals 'FillMessageQueueWithDashboardWarnings'
        /// </summary>
        public string UIFillMessageQueueWithHyperlinkInnerText = "FillMessageQueueWithDashboardWarnings";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDateTimePicker'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckDateTimePickerExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Velg dato' BarBaseButtonItem equals 'btnDatePicker'
        /// </summary>
        public string UIVelgdatoBarBaseButtonItemName = "btnDatePicker";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDepartmentService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckDepartmentServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetRoleDepartmentRoster2' link equals 'GetRoleDepartmentRoster2'
        /// </summary>
        public string UIGetRoleDepartmentRosHyperlinkInnerText = "GetRoleDepartmentRoster2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDepartmentServiceV2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckDepartmentServiceV2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetDepartmentRoster' link equals 'GetDepartmentRoster'
        /// </summary>
        public string UIGetDepartmentRosterHyperlinkInnerText = "GetDepartmentRoster";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDepartmentServiceV63'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckDepartmentServiceV63ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetDepartmentRoster' link equals 'GetDepartmentRoster'
        /// </summary>
        public string UIGetDepartmentRosterHyperlinkInnerText = "GetDepartmentRoster";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEkstrainfoTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckEkstrainfoTabExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Ekstrainfo' client equals 'Ekstrainfo'
        /// </summary>
        public string UIEkstrainfoClientFriendlyName = "Ekstrainfo";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEmployeeChangeTrackingService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckEmployeeChangeTrackingServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'PushEmployeeDataChanges' link equals 'PushEmployeeDataChanges'
        /// </summary>
        public string UIPushEmployeeDataChanHyperlinkInnerText = "PushEmployeeDataChanges";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEmployeeService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckEmployeeServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetEmployee' link equals 'GetEmployee'
        /// </summary>
        public string UIGetEmployeeHyperlinkInnerText = "GetEmployee";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEmployeeServiceV63'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckEmployeeServiceV63ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetEmployee' link equals 'GetEmployee'
        /// </summary>
        public string UIGetEmployeeHyperlinkInnerText = "GetEmployee";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckExportService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckExportServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'PostAfterSystemExportReceipt' link equals 'PostAfterSystemExportReceipt'
        /// </summary>
        public string UIPostAfterSystemExporHyperlinkInnerText = "PostAfterSystemExportReceipt";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckGatFlexServices'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckGatFlexServicesExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'DeleteQueueAbsencePeriods' link equals 'DeleteQueueAbsencePeriods'
        /// </summary>
        public string UIDeleteQueueAbsencePeHyperlinkInnerText = "DeleteQueueAbsencePeriods";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckGatGericaService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckGatGericaServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'A_PrsGericaWS_Generell_Info' link equals 'A_PrsGericaWS_Generell_Info'
        /// </summary>
        public string UIA_PrsGericaWS_GenereHyperlinkInnerText = "A_PrsGericaWS_Generell_Info";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckGatTaskSchedulerDataService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckGatTaskSchedulerDataServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetScheduledTasks' link equals 'GetScheduledTasks'
        /// </summary>
        public string UIGetScheduledTasksHyperlinkInnerText = "GetScheduledTasks";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckGrovplanTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckGrovplanTabExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Nivå' RibbonBaseButtonItem equals 'True'
        /// </summary>
        public bool UINivåRibbonBaseButtonItemEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckHeHa'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckHeHaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Helene' label equals 'Helene'
        /// </summary>
        public string UIHeleneTextName = "Helene";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckHelpFileButtonTextSwe'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckHelpFileButtonTextSweExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Hjälp' BarBaseButtonItem equals 'Hjälp'
        /// </summary>
        public string UIHjälpBarBaseButtonItemText = "Hjälp";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckHelpFileLink'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckHelpFileLinkExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Href' property of '/MinGat/HelpFile/Page' link equals 'https://localhost/MinGat/HelpFile/Page?pageId=Employee_Home'
        /// </summary>
        public string UIMinGatHelpFilePageHyperlinkHref = "https://localhost/MinGat/HelpFile/Page?pageId=Employee_Home";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckIdmService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckIdmServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ActivateUser' link equals 'ActivateUser'
        /// </summary>
        public string UIActivateUserHyperlinkInnerText = "ActivateUser";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckImportService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckImportServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'InsertDepEmp' link equals 'InsertDepEmp'
        /// </summary>
        public string UIInsertDepEmpHyperlinkInnerText = "InsertDepEmp";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckLISTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckLISTabExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Avanserte instillinger' check box equals 'True'
        /// </summary>
        public bool UIAvanserteinstillingeCheckBoxEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMainTitleMinGatSwe'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckMainTitleMinGatSweExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Startsidan Tillbaka' pane equals 'Startsidan Tillbaka'
        /// </summary>
        public string UIStartsidanTillbakaPaneFriendlyName = "Startsidan Tillbaka";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMinGatHelpfileMainMenuText'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckMinGatHelpfileMainMenuTextExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'MinGat Hovedmeny' pane equals 'MinGat Hovedmeny'
        /// </summary>
        public string UIMinGatHovedmenyPaneInnerText = "MinGat Hovedmeny";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPatientInformationService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckPatientInformationServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetDepartmentAppointments' link equals 'GetDepartmentAppointments'
        /// </summary>
        public string UIGetDepartmentAppointHyperlinkInnerText = "GetDepartmentAppointments";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPayslipImportService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckPayslipImportServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ImportPayslips' link equals 'ImportPayslips'
        /// </summary>
        public string UIImportPayslipsHyperlinkInnerText = "ImportPayslips";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckProduksjonsplanTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckProduksjonsplanTabExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Planleggingsperioder' RibbonBaseButtonItem equals 'True'
        /// </summary>
        public bool UIPlanleggingsperioderRibbonBaseButtonItemEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRapportsenterTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckRapportsenterTabExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Rapportsenter' client equals 'True'
        /// </summary>
        public bool UIRapportsenterClientEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckReshRosterService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckReshRosterServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetReshRoster' link equals 'GetReshRoster'
        /// </summary>
        public string UIGetReshRosterHyperlinkInnerText = "GetReshRoster";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleDepartmentService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckRoleDepartmentServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetDepartmentRoles' link equals 'GetDepartmentRoles'
        /// </summary>
        public string UIGetDepartmentRolesHyperlinkInnerText = "GetDepartmentRoles";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRoleDepartmentServiceV65'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckRoleDepartmentServiceV65ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetDepartmentRoles' link equals 'GetDepartmentRoles'
        /// </summary>
        public string UIGetDepartmentRolesHyperlinkInnerText = "GetDepartmentRoles";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetDisplayRoles' link equals 'GetDisplayRoles'
        /// </summary>
        public string UIGetDisplayRolesHyperlinkInnerText = "GetDisplayRoles";
        #endregion
    }
      
    /// <summary>
    /// Parameters to be passed into 'CheckServicesRunningError'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckServicesRunningErrorExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Error' pane is not equal to 'Error'
        /// </summary>
        public string UIErrorPaneInnerText = "Error";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Error' pane is not equal to 'Error'
        /// </summary>
        public string UIErrorPane1InnerText = "Error";
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'Error' pane is not equal to 'Error'
        /// </summary>
        public string UIErrorPane2InnerText = "Error";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSmsByMailReader'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckSmsByMailReaderExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ReadMailQueueAndCreateSms' link equals 'ReadMailQueueAndCreateSms'
        /// </summary>
        public string UIReadMailQueueAndCreaHyperlinkInnerText = "ReadMailQueueAndCreateSms";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSmsGatewayService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckSmsGatewayServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'AddToInbox' link equals 'AddToInbox'
        /// </summary>
        public string UIAddToInboxHyperlinkInnerText = "AddToInbox";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSmsService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckSmsServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ProcessSmsQueues' link equals 'ProcessSmsQueues'
        /// </summary>
        public string UIProcessSmsQueuesHyperlinkInnerText = "ProcessSmsQueues";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSystemInformationService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckSystemInformationServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetAliveStatus' link equals 'GetAliveStatus'
        /// </summary>
        public string UIGetAliveStatusHyperlinkInnerText = "GetAliveStatus";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTaskAgreementService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckTaskAgreementServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'UpdateTaskAgreement' link equals 'UpdateTaskAgreement'
        /// </summary>
        public string UIUpdateTaskAgreementHyperlinkInnerText = "UpdateTaskAgreement";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTesService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckTesServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetWorkShiftData' link equals 'GetWorkShiftData'
        /// </summary>
        public string UIGetWorkShiftDataHyperlinkInnerText = "GetWorkShiftData";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTestService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckTestServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'TestDatabaseConnection' link equals 'TestDatabaseConnection'
        /// </summary>
        public string UITestDatabaseConnectiHyperlinkInnerText = "TestDatabaseConnection";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTimeregImport'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckTimeregImportExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ImportTimeregRegistration' link equals 'ImportTimeregRegistration'
        /// </summary>
        public string UIImportTimeregRegistrHyperlinkInnerText = "ImportTimeregRegistration";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTop'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckTopExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'AT-MAN (GATSOFT\geig)' tree item equals 'TreeItem'
        /// </summary>
        public string UIATMANGATSOFTgeigTreeItemControlType = "TreeItem";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckUniqueService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckUniqueServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ProfilturnusFaaPerson' link equals 'ProfilturnusFaaPerson'
        /// </summary>
        public string UIProfilturnusFaaPersoHyperlinkInnerText = "ProfilturnusFaaPerson";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWeaBreakService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckWeaBreakServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'CalculateWeaAndSaveWeaBreaksOverrideScheduler' link equals 'CalculateWeaAndSaveWeaBreaksOverrideScheduler'
        /// </summary>
        public string UICalculateWeaAndSaveWHyperlinkInnerText = "CalculateWeaAndSaveWeaBreaksOverrideScheduler";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWishPlanWebService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckWishPlanWebServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetAdditionalData' link equals 'GetAdditionalData'
        /// </summary>
        public string UIGetAdditionalDataHyperlinkInnerText = "GetAdditionalData";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CloseFlexClock'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CloseFlexClockParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Escape}' in 'tcEmployees' client
        /// </summary>
        public string UITcEmployeesClientSendKeys = "{Escape}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetupServiceJobs'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class SetupServiceJobsParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Deaktivert' check box
        /// </summary>
        public bool UIDeaktivertCheckBoxChecked = false;
        
        /// <summary>
        /// Clear 'Deaktivert' check box
        /// </summary>
        public bool UIDeaktivertCheckBoxChecked1 = false;
        
        /// <summary>
        /// Clear 'Deaktivert' check box
        /// </summary>
        public bool UIDeaktivertCheckBoxChecked2 = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'StartFlexTimeClock'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class StartFlexTimeClockParams
    {
        
        #region Fields
        /// <summary>
        /// Launch 'C:\gatsoft\GatFlex\GatFlexTimeClock.exe'
        /// </summary>
        public string ExePath = "C:\\gatsoft\\GatFlex\\GatFlexTimeClock.exe";
        
        /// <summary>
        /// Launch 'C:\gatsoft\GatFlex\GatFlexTimeClock.exe'
        /// </summary>
        public string AlternateExePath = "C:\\gatsoft\\GatFlex\\GatFlexTimeClock.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VaktutlånJohnsenFriday'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class VaktutlånJohnsenFridayParams
    {
        
        #region Fields
        /// <summary>
        /// Type '' in 'tlleDepartment' LookUpEdit
        /// </summary>
        public string UITlleDepartmentLookUpEditValueAsString = "";
        
        /// <summary>
        /// Type '{Up}{Enter}' in 'tlDepartments' TreeList
        /// </summary>
        public string UITlDepartmentsTreeListSendKeys = "{Up}{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFileExplorerWindow : WinWindow
    {
        
        public UIFileExplorerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "File Explorer";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("File Explorer");
            this.WindowTitles.Add("ZipFiles");
            #endregion
        }
        
        #region Properties
        public UIAddressQuickaccessWindow UIAddressQuickaccessWindow
        {
            get
            {
                if ((this.mUIAddressQuickaccessWindow == null))
                {
                    this.mUIAddressQuickaccessWindow = new UIAddressQuickaccessWindow(this);
                }
                return this.mUIAddressQuickaccessWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIAddressbandtoolbarWindow UIAddressbandtoolbarWindow
        {
            get
            {
                if ((this.mUIAddressbandtoolbarWindow == null))
                {
                    this.mUIAddressbandtoolbarWindow = new UIAddressbandtoolbarWindow(this);
                }
                return this.mUIAddressbandtoolbarWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIZipFilesTitleBar UIZipFilesTitleBar
        {
            get
            {
                if ((this.mUIZipFilesTitleBar == null))
                {
                    this.mUIZipFilesTitleBar = new UIZipFilesTitleBar(this);
                }
                return this.mUIZipFilesTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressQuickaccessWindow mUIAddressQuickaccessWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIAddressbandtoolbarWindow mUIAddressbandtoolbarWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIZipFilesTitleBar mUIZipFilesTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressQuickaccessWindow : WinWindow
    {
        
        public UIAddressQuickaccessWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("File Explorer");
            #endregion
        }
        
        #region Properties
        public WinToolBar UIAddressQuickaccessToolBar
        {
            get
            {
                if ((this.mUIAddressQuickaccessToolBar == null))
                {
                    this.mUIAddressQuickaccessToolBar = new WinToolBar(this);
                    #region Search Criteria
                    this.mUIAddressQuickaccessToolBar.SearchProperties[WinToolBar.PropertyNames.Name] = "Address: Quick access";
                    this.mUIAddressQuickaccessToolBar.WindowTitles.Add("File Explorer");
                    #endregion
                }
                return this.mUIAddressQuickaccessToolBar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mUIAddressQuickaccessToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "41477";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("File Explorer");
            this.WindowTitles.Add("ZipFiles");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIAddressComboBox
        {
            get
            {
                if ((this.mUIAddressComboBox == null))
                {
                    this.mUIAddressComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIAddressComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Address";
                    this.mUIAddressComboBox.WindowTitles.Add("File Explorer");
                    this.mUIAddressComboBox.WindowTitles.Add("ZipFiles");
                    #endregion
                }
                return this.mUIAddressComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIAddressComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressbandtoolbarWindow : WinWindow
    {
        
        public UIAddressbandtoolbarWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Address band toolbar";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ToolbarWindow32";
            this.WindowTitles.Add("File Explorer");
            #endregion
        }
        
        #region Properties
        public UIAddressbandtoolbarToolBar UIAddressbandtoolbarToolBar
        {
            get
            {
                if ((this.mUIAddressbandtoolbarToolBar == null))
                {
                    this.mUIAddressbandtoolbarToolBar = new UIAddressbandtoolbarToolBar(this);
                }
                return this.mUIAddressbandtoolbarToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressbandtoolbarToolBar mUIAddressbandtoolbarToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressbandtoolbarToolBar : WinToolBar
    {
        
        public UIAddressbandtoolbarToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Address band toolbar";
            this.WindowTitles.Add("File Explorer");
            #endregion
        }        
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("GatZip");
            #endregion
        }
        
        #region Properties
        public UIGatNOR641zipListItem UIGatNOR641zipListItem
        {
            get
            {
                if ((this.mUIGatNOR641zipListItem == null))
                {
                    this.mUIGatNOR641zipListItem = new UIGatNOR641zipListItem(this);
                }
                return this.mUIGatNOR641zipListItem;
            }
        }
        
        public UIGatNOR641ListItem UIGatNOR641ListItem
        {
            get
            {
                if ((this.mUIGatNOR641ListItem == null))
                {
                    this.mUIGatNOR641ListItem = new UIGatNOR641ListItem(this);
                }
                return this.mUIGatNOR641ListItem;
            }
        }
        
        public UIGatNOR641ListItem1 UIGatNOR641ListItem1
        {
            get
            {
                if ((this.mUIGatNOR641ListItem1 == null))
                {
                    this.mUIGatNOR641ListItem1 = new UIGatNOR641ListItem1(this);
                }
                return this.mUIGatNOR641ListItem1;
            }
        }
        #endregion
        
        #region Fields
        private UIGatNOR641zipListItem mUIGatNOR641zipListItem;
        
        private UIGatNOR641ListItem mUIGatNOR641ListItem;
        
        private UIGatNOR641ListItem1 mUIGatNOR641ListItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatNOR641zipListItem : WinListItem
    {
        
        public UIGatNOR641zipListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Gat NOR 6.4.1.zip";
            this.WindowTitles.Add("ZipFiles");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("ZipFiles");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatNOR641ListItem : WinListItem
    {
        
        public UIGatNOR641ListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Gat NOR";
            this.WindowTitles.Add("GatZip");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("GatZip");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatNOR641ListItem1 : WinListItem
    {
        
        public UIGatNOR641ListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Gat NOR";
            this.WindowTitles.Add("GatZip");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("GatZip");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIZipFilesTitleBar : WinTitleBar
    {
        
        public UIZipFilesTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("ZipFiles");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("ZipFiles");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIExtractAllMenuItem
        {
            get
            {
                if ((this.mUIExtractAllMenuItem == null))
                {
                    this.mUIExtractAllMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIExtractAllMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Extract All...";
                    #endregion
                }
                return this.mUIExtractAllMenuItem;
            }
        }
        
        public WinMenuItem UICopyMenuItem
        {
            get
            {
                if ((this.mUICopyMenuItem == null))
                {
                    this.mUICopyMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUICopyMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Copy";
                    #endregion
                }
                return this.mUICopyMenuItem;
            }
        }
        
        public WinMenuItem UIPasteMenuItem
        {
            get
            {
                if ((this.mUIPasteMenuItem == null))
                {
                    this.mUIPasteMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIPasteMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Paste";
                    #endregion
                }
                return this.mUIPasteMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIExtractAllMenuItem;
        
        private WinMenuItem mUICopyMenuItem;
        
        private WinMenuItem mUIPasteMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIExtractCompressedZipWindow : WinWindow
    {
        
        public UIExtractCompressedZipWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Extract Compressed (Zipped) Folders";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NativeHWNDHost";
            this.WindowTitles.Add("Extract Compressed (Zipped) Folders");
            #endregion
        }
        
        #region Properties
        public UIItemWindow3 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow3(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UISelectaDestinationanClient UISelectaDestinationanClient
        {
            get
            {
                if ((this.mUISelectaDestinationanClient == null))
                {
                    this.mUISelectaDestinationanClient = new UISelectaDestinationanClient(this);
                }
                return this.mUISelectaDestinationanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow3 mUIItemWindow;
        
        private UISelectaDestinationanClient mUISelectaDestinationanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1045";
            this.WindowTitles.Add("Extract Compressed (Zipped) Folders");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFileswillbeextractedEdit
        {
            get
            {
                if ((this.mUIFileswillbeextractedEdit == null))
                {
                    this.mUIFileswillbeextractedEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFileswillbeextractedEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Files will be extracted to this folder:";
                    this.mUIFileswillbeextractedEdit.WindowTitles.Add("Extract Compressed (Zipped) Folders");
                    #endregion
                }
                return this.mUIFileswillbeextractedEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFileswillbeextractedEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISelectaDestinationanClient : WinClient
    {
        
        public UISelectaDestinationanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Select a Destination and Extract Files";
            this.WindowTitles.Add("Extract Compressed (Zipped) Folders");
            #endregion
        }
        
        #region Properties
        public WinButton UIExtractButton
        {
            get
            {
                if ((this.mUIExtractButton == null))
                {
                    this.mUIExtractButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIExtractButton.SearchProperties[WinButton.PropertyNames.Name] = "Extract";
                    this.mUIExtractButton.WindowTitles.Add("Extract Compressed (Zipped) Folders");
                    #endregion
                }
                return this.mUIExtractButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIExtractButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGat_641_noWindow : WinWindow
    {
        
        public UIGat_641_noWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat_", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Gat_641_no");
            this.WindowTitles.Add("641_ini");
            #endregion
        }
        
        #region Properties
        public UIAddressCTempZipFilesWindow UIAddressCTempZipFilesWindow
        {
            get
            {
                if ((this.mUIAddressCTempZipFilesWindow == null))
                {
                    this.mUIAddressCTempZipFilesWindow = new UIAddressCTempZipFilesWindow(this);
                }
                return this.mUIAddressCTempZipFilesWindow;
            }
        }
        
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIAddressbandtoolbarWindow1 UIAddressbandtoolbarWindow
        {
            get
            {
                if ((this.mUIAddressbandtoolbarWindow == null))
                {
                    this.mUIAddressbandtoolbarWindow = new UIAddressbandtoolbarWindow1(this);
                }
                return this.mUIAddressbandtoolbarWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UINavigationbuttonsToolBar UINavigationbuttonsToolBar
        {
            get
            {
                if ((this.mUINavigationbuttonsToolBar == null))
                {
                    this.mUINavigationbuttonsToolBar = new UINavigationbuttonsToolBar(this);
                }
                return this.mUINavigationbuttonsToolBar;
            }
        }
        
        public UIShellViewWindow UIShellViewWindow
        {
            get
            {
                if ((this.mUIShellViewWindow == null))
                {
                    this.mUIShellViewWindow = new UIShellViewWindow(this);
                }
                return this.mUIShellViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressCTempZipFilesWindow mUIAddressCTempZipFilesWindow;
        
        private UIItemWindow4 mUIItemWindow;
        
        private UIAddressbandtoolbarWindow1 mUIAddressbandtoolbarWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UINavigationbuttonsToolBar mUINavigationbuttonsToolBar;
        
        private UIShellViewWindow mUIShellViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressCTempZipFilesWindow : WinWindow
    {
        
        public UIAddressCTempZipFilesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Gat_641_no");
            #endregion
        }
        
        #region Properties
        public WinToolBar UIAddressCTempZipFilesToolBar
        {
            get
            {
                if ((this.mUIAddressCTempZipFilesToolBar == null))
                {
                    this.mUIAddressCTempZipFilesToolBar = new WinToolBar(this);
                    #region Search Criteria
                    this.mUIAddressCTempZipFilesToolBar.SearchProperties[WinToolBar.PropertyNames.Name] = "Address: C:\\Temp\\ZipFiles\\Gat_641_no";
                    this.mUIAddressCTempZipFilesToolBar.WindowTitles.Add("Gat_641_no");
                    #endregion
                }
                return this.mUIAddressCTempZipFilesToolBar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mUIAddressCTempZipFilesToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "41477";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Gat_641_no");
            this.WindowTitles.Add("641_ini");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIAddressComboBox
        {
            get
            {
                if ((this.mUIAddressComboBox == null))
                {
                    this.mUIAddressComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIAddressComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Address";
                    this.mUIAddressComboBox.WindowTitles.Add("Gat_641_no");
                    this.mUIAddressComboBox.WindowTitles.Add("641_ini");
                    #endregion
                }
                return this.mUIAddressComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIAddressComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressbandtoolbarWindow1 : WinWindow
    {
        
        public UIAddressbandtoolbarWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Address band toolbar";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ToolbarWindow32";
            this.WindowTitles.Add("Gat_641_no");
            #endregion
        }
        
        #region Properties
        public UIAddressbandtoolbarToolBar1 UIAddressbandtoolbarToolBar
        {
            get
            {
                if ((this.mUIAddressbandtoolbarToolBar == null))
                {
                    this.mUIAddressbandtoolbarToolBar = new UIAddressbandtoolbarToolBar1(this);
                }
                return this.mUIAddressbandtoolbarToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressbandtoolbarToolBar1 mUIAddressbandtoolbarToolBar;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressbandtoolbarToolBar1 : WinToolBar
    {

        public UIAddressbandtoolbarToolBar1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Address band toolbar";
            this.WindowTitles.Add("Gat_641_no");
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("641_ini");
            #endregion
        }
        
        #region Properties
        public UIGATTURNUSiniListItem UIGATTURNUSiniListItem
        {
            get
            {
                if ((this.mUIGATTURNUSiniListItem == null))
                {
                    this.mUIGATTURNUSiniListItem = new UIGATTURNUSiniListItem(this);
                }
                return this.mUIGATTURNUSiniListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIGATTURNUSiniListItem mUIGATTURNUSiniListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGATTURNUSiniListItem : WinListItem
    {
        
        public UIGATTURNUSiniListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "GATTURNUS.ini";
            this.WindowTitles.Add("641_ini");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("641_ini");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINavigationbuttonsToolBar : WinToolBar
    {
        
        public UINavigationbuttonsToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Navigation buttons";
            this.WindowTitles.Add("641_ini");
            #endregion
        }
        
        #region Properties
        public WinButton UIBacktoGat_641_noAltLButton
        {
            get
            {
                if ((this.mUIBacktoGat_641_noAltLButton == null))
                {
                    this.mUIBacktoGat_641_noAltLButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBacktoGat_641_noAltLButton.SearchProperties[WinButton.PropertyNames.Name] = "Back to Gat_641_no (Alt + Left Arrow)";
                    this.mUIBacktoGat_641_noAltLButton.WindowTitles.Add("641_ini");
                    #endregion
                }
                return this.mUIBacktoGat_641_noAltLButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBacktoGat_641_noAltLButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIShellViewWindow : WinWindow
    {
        
        public UIShellViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ShellView";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "SHELLDLL_DefView";
            this.WindowTitles.Add("Gat_641_no");
            #endregion
        }
        
        #region Properties
        public UIShellViewClient UIShellViewClient
        {
            get
            {
                if ((this.mUIShellViewClient == null))
                {
                    this.mUIShellViewClient = new UIShellViewClient(this);
                }
                return this.mUIShellViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIShellViewClient mUIShellViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIShellViewClient : WinClient
    {
        
        public UIShellViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Shell Folder View";
            this.WindowTitles.Add("Gat_641_no");
            #endregion
        }
        
        #region Properties
        public WinList UIItemsViewList
        {
            get
            {
                if ((this.mUIItemsViewList == null))
                {
                    this.mUIItemsViewList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemsViewList.SearchProperties[WinList.PropertyNames.Name] = "Items View";
                    this.mUIItemsViewList.WindowTitles.Add("Gat_641_no");
                    #endregion
                }
                return this.mUIItemsViewList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemsViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIExeSearchResultsinGaWindow : WinWindow
    {
        
        public UIExeSearchResultsinGaWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, ".exe", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add(".exe - Search Results in Gat_641_no");
            #endregion
        }
        
        #region Properties
        public UIItemWindow5 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow5(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow5 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add(".exe - Search Results in Gat_641_no");
            #endregion
        }
        
        #region Properties
        public UIGATTURNUSEXEListItem UIGATTURNUSEXEListItem
        {
            get
            {
                if ((this.mUIGATTURNUSEXEListItem == null))
                {
                    this.mUIGATTURNUSEXEListItem = new UIGATTURNUSEXEListItem(this);
                }
                return this.mUIGATTURNUSEXEListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIGATTURNUSEXEListItem mUIGATTURNUSEXEListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGATTURNUSEXEListItem : WinListItem
    {
        
        public UIGATTURNUSEXEListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "GATTURNUS.EXE";
            this.WindowTitles.Add(".exe - Search Results in Gat_641_no");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add(".exe - Search Results in Gat_641_no");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT2004AdvarselWindow : WinWindow
    {
        
        public UIGT2004AdvarselWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GT-2004 - Advarsel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public UIItemWindow6 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow6(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow6 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public UIGT2004AdvarselClient UIGT2004AdvarselClient
        {
            get
            {
                if ((this.mUIGT2004AdvarselClient == null))
                {
                    this.mUIGT2004AdvarselClient = new UIGT2004AdvarselClient(this);
                }
                return this.mUIGT2004AdvarselClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGT2004AdvarselClient mUIGT2004AdvarselClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT2004AdvarselClient : WinClient
    {
        
        public UIGT2004AdvarselClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("GT-2004 - Advarsel");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmLogin";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UIItemWindow7 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow7(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UILoginWindow1 UILoginWindow1
        {
            get
            {
                if ((this.mUILoginWindow1 == null))
                {
                    this.mUILoginWindow1 = new UILoginWindow1(this);
                }
                return this.mUILoginWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow7 mUIItemWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UILoginWindow1 mUILoginWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginWindow1 : WinWindow
    {
        
        public UILoginWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TTabSheet";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UILoginClient UILoginClient
        {
            get
            {
                if ((this.mUILoginClient == null))
                {
                    this.mUILoginClient = new UILoginClient(this);
                }
                return this.mUILoginClient;
            }
        }
        #endregion
        
        #region Fields
        private UILoginClient mUILoginClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILoginClient : WinClient
    {
        
        public UILoginClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Login";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIResultaterfrasystemsWindow : WinWindow
    {
        
        public UIResultaterfrasystemsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Resultater fra systemsjekk / faste SQL scripts";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmSQLViewResult";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public UIItemWindow8 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow8(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow8 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public WinClient UIResultaterfrasystemsClient
        {
            get
            {
                if ((this.mUIResultaterfrasystemsClient == null))
                {
                    this.mUIResultaterfrasystemsClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIResultaterfrasystemsClient.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
                    #endregion
                }
                return this.mUIResultaterfrasystemsClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIResultaterfrasystemsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1Window : WinWindow
    {
        
        public UISystemmelding1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Systemmelding (1)";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmSystemMessage";
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public UIItemWindow9 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow9(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow9 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public UISystemmelding1Client UISystemmelding1Client
        {
            get
            {
                if ((this.mUISystemmelding1Client == null))
                {
                    this.mUISystemmelding1Client = new UISystemmelding1Client(this);
                }
                return this.mUISystemmelding1Client;
            }
        }
        #endregion
        
        #region Fields
        private UISystemmelding1Client mUISystemmelding1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemmelding1Client : WinClient
    {
        
        public UISystemmelding1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Systemmelding (1)");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Systemmelding (1)");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchWindowsWindow : WinWindow
    {
        
        public UISearchWindowsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Search Windows";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TrayButton";
            this.WindowTitles.Add("Search Windows");
            #endregion
        }
        
        #region Properties
        public WinButton UISearchWindowsButton
        {
            get
            {
                if ((this.mUISearchWindowsButton == null))
                {
                    this.mUISearchWindowsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISearchWindowsButton.SearchProperties[WinButton.PropertyNames.Name] = "Search Windows";
                    this.mUISearchWindowsButton.WindowTitles.Add("Search Windows");
                    #endregion
                }
                return this.mUISearchWindowsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISearchWindowsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGat_641_noWindow1 : WinWindow
    {
        
        public UIGat_641_noWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat_", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Gat_641_no");
            this.WindowTitles.Add(". - Gat_641_no");
            this.WindowTitles.Add(". - Search Results in Gat_641_no");
            this.WindowTitles.Add(".ex - Search Results in Gat_641_no");
            this.WindowTitles.Add(".exe - Search Results in Gat_641_no");
            this.WindowTitles.Add(".exe");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow10 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow10(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow10 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow10 : WinWindow
    {
        
        public UIItemWindow10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = " Search Gat_641_no";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Gat_641_no");
            this.WindowTitles.Add(". - Gat_641_no");
            #endregion
        }
        
        #region Properties
        public UISearchGat_641_noPane UISearchGat_641_noPane
        {
            get
            {
                if ((this.mUISearchGat_641_noPane == null))
                {
                    this.mUISearchGat_641_noPane = new UISearchGat_641_noPane(this);
                }
                return this.mUISearchGat_641_noPane;
            }
        }
        #endregion
        
        #region Fields
        private UISearchGat_641_noPane mUISearchGat_641_noPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchGat_641_noPane : WinPane
    {
        
        public UISearchGat_641_noPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " Search Gat_641_no";
            this.WindowTitles.Add("Gat_641_no");
            this.WindowTitles.Add(". - Gat_641_no");
            #endregion
        }
        
        #region Properties
        public WinEdit UISearchBoxEdit
        {
            get
            {
                if ((this.mUISearchBoxEdit == null))
                {
                    this.mUISearchBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUISearchBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Search Box";
                    this.mUISearchBoxEdit.WindowTitles.Add("Gat_641_no");
                    this.mUISearchBoxEdit.WindowTitles.Add(". - Gat_641_no");
                    #endregion
                }
                return this.mUISearchBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUISearchBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGat_641_noWindow2 : WinWindow
    {
        
        public UIGat_641_noWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat_", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Gat_641_no");
            this.WindowTitles.Add(". - Gat_641_no");
            this.WindowTitles.Add(". - Search Results in Gat_641_no");
            this.WindowTitles.Add(".ex - Search Results in Gat_641_no");
            this.WindowTitles.Add(".exe - Search Results in Gat_641_no");
            #endregion
        }
        
        #region Properties
        public UIItemWindow13 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow13 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "SearchEditBoxWrapperClass";
            this.WindowTitles.Add(". - Search Results in Gat_641_no");
            this.WindowTitles.Add(".ex - Search Results in Gat_641_no");
            this.WindowTitles.Add(".exe - Search Results in Gat_641_no");
            #endregion
        }
        
        #region Properties
        public UISearchResultsinGat_6Client UISearchResultsinGat_6Client
        {
            get
            {
                if ((this.mUISearchResultsinGat_6Client == null))
                {
                    this.mUISearchResultsinGat_6Client = new UISearchResultsinGat_6Client(this);
                }
                return this.mUISearchResultsinGat_6Client;
            }
        }
        #endregion
        
        #region Fields
        private UISearchResultsinGat_6Client mUISearchResultsinGat_6Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchResultsinGat_6Client : WinClient
    {
        
        public UISearchResultsinGat_6Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add(". - Search Results in Gat_641_no");
            this.WindowTitles.Add(".ex - Search Results in Gat_641_no");
            this.WindowTitles.Add(".exe - Search Results in Gat_641_no");
            #endregion
        }
        
        #region Properties
        public WinPane UISearchGat_641_noPane
        {
            get
            {
                if ((this.mUISearchGat_641_noPane == null))
                {
                    this.mUISearchGat_641_noPane = new WinPane(this);
                    #region Search Criteria
                    this.mUISearchGat_641_noPane.SearchProperties[WinControl.PropertyNames.Name] = " Search Gat_641_no";
                    this.mUISearchGat_641_noPane.WindowTitles.Add(". - Search Results in Gat_641_no");
                    this.mUISearchGat_641_noPane.WindowTitles.Add(".ex - Search Results in Gat_641_no");
                    this.mUISearchGat_641_noPane.WindowTitles.Add(".exe - Search Results in Gat_641_no");
                    #endregion
                }
                return this.mUISearchGat_641_noPane;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUISearchGat_641_noPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGat_641_noWindow3 : WinWindow
    {
        
        public UIGat_641_noWindow3()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat_", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Gat_641_no");
            #endregion
        }
        
        #region Properties
        public UIGat_641_noTitleBar UIGat_641_noTitleBar
        {
            get
            {
                if ((this.mUIGat_641_noTitleBar == null))
                {
                    this.mUIGat_641_noTitleBar = new UIGat_641_noTitleBar(this);
                }
                return this.mUIGat_641_noTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGat_641_noTitleBar mUIGat_641_noTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGat_641_noTitleBar : WinTitleBar
    {
        
        public UIGat_641_noTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat_641_no");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Gat_641_no");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64138140ASCLAvWindow : WinWindow
    {
        
        public UIGatver64138140ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat. ", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar : DXMenu
    {
        
        public UIMainmenuMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UINivåBarBaseButtonItem
        {
            get
            {
                if ((this.mUINivåBarBaseButtonItem == null))
                {
                    this.mUINivåBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDepartment";
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUINivåBarBaseButtonItem.WindowTitles.Add("Gat.");
                    #endregion
                }
                return this.mUINivåBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUINivåBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow14 : DXWindow
    {
        
        public UIItemWindow14()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Nivå";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGSLayoutControlCustom UIGSLayoutControlCustom
        {
            get
            {
                if ((this.mUIGSLayoutControlCustom == null))
                {
                    this.mUIGSLayoutControlCustom = new UIGSLayoutControlCustom(this);
                }
                return this.mUIGSLayoutControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGSLayoutControlCustom mUIGSLayoutControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSLayoutControlCustom : DXTestControl
    {
        
        public UIGSLayoutControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup1LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayDepartmentsLayoutControlItem UILayDepartmentsLayoutControlItem
        {
            get
            {
                if ((this.mUILayDepartmentsLayoutControlItem == null))
                {
                    this.mUILayDepartmentsLayoutControlItem = new UILayDepartmentsLayoutControlItem(this);
                }
                return this.mUILayDepartmentsLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayDepartmentsLayoutControlItem mUILayDepartmentsLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayDepartmentsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayDepartmentsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LayDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGSGroupControlClient UIGSGroupControlClient
        {
            get
            {
                if ((this.mUIGSGroupControlClient == null))
                {
                    this.mUIGSGroupControlClient = new UIGSGroupControlClient(this);
                }
                return this.mUIGSGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSGroupControlClient mUIGSGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSGroupControlClient : DXTestControl
    {
        
        public UIGSGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gbDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGSGridControlTable UIGSGridControlTable
        {
            get
            {
                if ((this.mUIGSGridControlTable == null))
                {
                    this.mUIGSGridControlTable = new UIGSGridControlTable(this);
                }
                return this.mUIGSGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGSGridControlTable mUIGSGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSGridControlTable : DXGrid
    {
        
        public UIGSGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXCell UIGDepartmentsGridContCell
        {
            get
            {
                if ((this.mUIGDepartmentsGridContCell == null))
                {
                    this.mUIGDepartmentsGridContCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGDepartmentsGridContCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartmentsGridControlCell[View]gvDepartments[Row]22[Column]cDepName";
                    this.mUIGDepartmentsGridContCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGDepartmentsGridContCell.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIGDepartmentsGridContCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGDepartmentsGridContCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64138140ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver64138140ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UICenterPanelPeriodDockPanel UICenterPanelPeriodDockPanel
        {
            get
            {
                if ((this.mUICenterPanelPeriodDockPanel == null))
                {
                    this.mUICenterPanelPeriodDockPanel = new UICenterPanelPeriodDockPanel(this);
                }
                return this.mUICenterPanelPeriodDockPanel;
            }
        }
        
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        
        public UIStandaloneBarDockConCustom1 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom1(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        
        public UIGatver64138140ASCLAvTitleBar UIGatver64138140ASCLAvTitleBar
        {
            get
            {
                if ((this.mUIGatver64138140ASCLAvTitleBar == null))
                {
                    this.mUIGatver64138140ASCLAvTitleBar = new UIGatver64138140ASCLAvTitleBar(this);
                }
                return this.mUIGatver64138140ASCLAvTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        
        private UICenterPanelPeriodDockPanel mUICenterPanelPeriodDockPanel;
        
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        
        private UIStandaloneBarDockConCustom1 mUIStandaloneBarDockConCustom;
        
        private UIGatver64138140ASCLAvTitleBar mUIGatver64138140ASCLAvTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpMainMenuRibbonPage : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGrpViewModeRibbonPageGroup UIGrpViewModeRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpViewModeRibbonPageGroup == null))
                {
                    this.mUIGrpViewModeRibbonPageGroup = new UIGrpViewModeRibbonPageGroup(this);
                }
                return this.mUIGrpViewModeRibbonPageGroup;
            }
        }
        
        public UIGrpDevianceRibbonPageGroup UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpViewModeRibbonPageGroup mUIGrpViewModeRibbonPageGroup;
        
        private UIGrpDevianceRibbonPageGroup mUIGrpDevianceRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpViewModeRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpViewModeRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpViewMode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIGanttdagRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIGanttdagRibbonBaseButtonItem == null))
                {
                    this.mUIGanttdagRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIGanttdagRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGanttDay";
                    this.mUIGanttdagRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIGanttdagRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGanttdagRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIGanttukeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIGanttukeRibbonBaseButtonItem == null))
                {
                    this.mUIGanttukeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIGanttukeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGanttWeek";
                    this.mUIGanttukeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIGanttukeRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGanttukeRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIUkeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIUkeRibbonBaseButtonItem == null))
                {
                    this.mUIUkeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIUkeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRangeWeek";
                    this.mUIUkeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIUkeRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIUkeRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIPeriodeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIPeriodeRibbonBaseButtonItem == null))
                {
                    this.mUIPeriodeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIPeriodeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRangePeriod";
                    this.mUIPeriodeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIPeriodeRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodeRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIKalenderRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIKalenderRibbonBaseButtonItem == null))
                {
                    this.mUIKalenderRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIKalenderRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCalendarView";
                    this.mUIKalenderRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIKalenderRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIKalenderRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIOppgaveRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppgaveRibbonBaseButtonItem == null))
                {
                    this.mUIOppgaveRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppgaveRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRoleView";
                    this.mUIOppgaveRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppgaveRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOppgaveRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIDagRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIDagRibbonBaseButtonItem == null))
                {
                    this.mUIDagRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIDagRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRangeDay";
                    this.mUIDagRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIDagRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDagRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIGanttdagRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIGanttukeRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIUkeRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIPeriodeRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIKalenderRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIOppgaveRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIDagRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpDevianceRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIEkstraRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEkstraRibbonBaseButtonItem == null))
                {
                    this.mUIEkstraRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExtra";
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEkstraRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEkstraRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIFraværRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIFraværRibbonBaseButtonItem == null))
                {
                    this.mUIFraværRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAbsence";
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIFraværRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFraværRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIEkstraRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIFraværRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICenterPanelPeriodDockPanel : DXDockPanel
    {
        
        public UICenterPanelPeriodDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriodControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleControCustom UIPeriodScheduleControCustom
        {
            get
            {
                if ((this.mUIPeriodScheduleControCustom == null))
                {
                    this.mUIPeriodScheduleControCustom = new UIPeriodScheduleControCustom(this);
                }
                return this.mUIPeriodScheduleControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleControCustom mUIPeriodScheduleControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleControCustom : DXTestControl
    {
        
        public UIPeriodScheduleControCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PeriodScheduleControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILayoutPanelSplitContainerControl UILayoutPanelSplitContainerControl
        {
            get
            {
                if ((this.mUILayoutPanelSplitContainerControl == null))
                {
                    this.mUILayoutPanelSplitContainerControl = new UILayoutPanelSplitContainerControl(this);
                }
                return this.mUILayoutPanelSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutPanelSplitContainerControl mUILayoutPanelSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutPanelSplitContainerControl : DXSplitContainerControl
    {
        
        public UILayoutPanelSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitLayoutPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITopPanelClient UITopPanelClient
        {
            get
            {
                if ((this.mUITopPanelClient == null))
                {
                    this.mUITopPanelClient = new UITopPanelClient(this);
                }
                return this.mUITopPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UITopPanelClient mUITopPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPanelClient : DXTestControl
    {
        
        public UITopPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomSplitGroupPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIXtraScrollableControScrollableControl UIXtraScrollableControScrollableControl
        {
            get
            {
                if ((this.mUIXtraScrollableControScrollableControl == null))
                {
                    this.mUIXtraScrollableControScrollableControl = new UIXtraScrollableControScrollableControl(this);
                }
                return this.mUIXtraScrollableControScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraScrollableControScrollableControl mUIXtraScrollableControScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIXtraScrollableControScrollableControl : DXScrollableControl
    {
        
        public UIXtraScrollableControScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBox UIPeriodScheduleListBoList
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList == null))
                {
                    this.mUIPeriodScheduleListBoList = new DXListBox(this);
                    #region Search Criteria
                    this.mUIPeriodScheduleListBoList.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[0]";
                    this.mUIPeriodScheduleListBoList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
                    this.mUIPeriodScheduleListBoList.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodScheduleListBoList;
            }
        }
        #endregion
        
        #region Fields
        private DXListBox mUIPeriodScheduleListBoList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIDag00167770770FalseDockPanel UIDag00167770770FalseDockPanel
        {
            get
            {
                if ((this.mUIDag00167770770FalseDockPanel == null))
                {
                    this.mUIDag00167770770FalseDockPanel = new UIDag00167770770FalseDockPanel(this);
                }
                return this.mUIDag00167770770FalseDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDag00167770770FalseDockPanel mUIDag00167770770FalseDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDag00167770770FalseDockPanel : DXDockPanel
    {
        
        public UIDag00167770770FalseDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom2 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom2 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom2 : DXTestControl
    {
        
        public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcDayColumnTable : DXGrid
    {
        
        public UIGcDayColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIJohnsonDonCell
        {
            get
            {
                if ((this.mUIJohnsonDonCell == null))
                {
                    this.mUIJohnsonDonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIJohnsonDonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]1[Column]colEmployeeName";
                    this.mUIJohnsonDonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIJohnsonDonCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIJohnsonDonCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIJohnsonDonCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom1 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar1 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar1(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar1 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar1 : DXMenu
    {
        
        public UIMainmenuMenuBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIVelgdatoBarBaseButtonItem
        {
            get
            {
                if ((this.mUIVelgdatoBarBaseButtonItem == null))
                {
                    this.mUIVelgdatoBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIVelgdatoBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIVelgdatoBarBaseButtonItem;
            }
        }
        
        public UIVelgdatoBarItem UIVelgdatoBarItem
        {
            get
            {
                if ((this.mUIVelgdatoBarItem == null))
                {
                    this.mUIVelgdatoBarItem = new UIVelgdatoBarItem(this);
                }
                return this.mUIVelgdatoBarItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIVelgdatoBarBaseButtonItem;
        
        private UIVelgdatoBarItem mUIVelgdatoBarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgdatoBarItem : DXMenuItem
    {
        
        public UIVelgdatoBarItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupContainerBarConMenu : DXMenu
    {
        
        public UIPopupContainerBarConMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPpcDatePickerClient UIPpcDatePickerClient
        {
            get
            {
                if ((this.mUIPpcDatePickerClient == null))
                {
                    this.mUIPpcDatePickerClient = new UIPpcDatePickerClient(this);
                }
                return this.mUIPpcDatePickerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcDatePickerClient mUIPpcDatePickerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPpcDatePickerClient : DXTestControl
    {
        
        public UIPpcDatePickerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        
        public DXButton UIGåtilButton
        {
            get
            {
                if ((this.mUIGåtilButton == null))
                {
                    this.mUIGåtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGoToDate";
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGåtilButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGåtilButton;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        
        private DXButton mUIGåtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64138140ASCLAvTitleBar : WinTitleBar
    {
        
        public UIGatver64138140ASCLAvTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu1 UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu1(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu1
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu1 == null))
                {
                    this.mUIPopupMenuBarControlMenu1 = new UIPopupMenuBarControlMenu1(this);
                }
                return this.mUIPopupMenuBarControlMenu1;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu1 mUIPopupContainerBarConMenu;
        
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        
        private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupContainerBarConMenu1 : DXMenu
    {
        
        public UIPopupContainerBarConMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            #endregion
        }
        
        #region Properties
        public UIPpcPeriodSelectorClient UIPpcPeriodSelectorClient
        {
            get
            {
                if ((this.mUIPpcPeriodSelectorClient == null))
                {
                    this.mUIPpcPeriodSelectorClient = new UIPpcPeriodSelectorClient(this);
                }
                return this.mUIPpcPeriodSelectorClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcPeriodSelectorClient mUIPpcPeriodSelectorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPpcPeriodSelectorClient : DXTestControl
    {
        
        public UIPpcPeriodSelectorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcPeriodSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            #endregion
        }
        
        #region Properties
        public UIPnlPeriodSelectorClient UIPnlPeriodSelectorClient
        {
            get
            {
                if ((this.mUIPnlPeriodSelectorClient == null))
                {
                    this.mUIPnlPeriodSelectorClient = new UIPnlPeriodSelectorClient(this);
                }
                return this.mUIPnlPeriodSelectorClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlPeriodSelectorClient mUIPnlPeriodSelectorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlPeriodSelectorClient : DXTestControl
    {
        
        public UIPnlPeriodSelectorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPeriodSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        //#region Properties
        //public DXButton UIVelgPeriodeButton
        //{
        //    get
        //    {
        //        if ((this.mUIVelgPeriodeButton == null))
        //        {
        //            this.mUIVelgPeriodeButton = new DXButton(this);
        //            #region Search Criteria
        //            this.mUIVelgPeriodeButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectPeriod";
        //            this.mUIVelgPeriodeButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
        //            #endregion
        //        }
        //        return this.mUIVelgPeriodeButton;
        //    }
        //}
        //#endregion
        
        //#region Fields
        //private DXButton mUIVelgPeriodeButton;
        //#endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBiOkMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBiOkMenuBaseButtonItem == null))
                {
                    this.mUIBiOkMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biOk";
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBiOkMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBarButtonItemLink0MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink0MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink0MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBiOkMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBarButtonItemLink0MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupMenuBarControlMenu1 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBiOkMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBiOkMenuBaseButtonItem == null))
                {
                    this.mUIBiOkMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biOk";
                    this.mUIBiOkMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBiOkMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBiOkMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMerarbeidovertidWindow : DXWindow
    {
        
        public UIMerarbeidovertidWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Merarbeid / overtid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UIPanClientClient UIPanClientClient
        {
            get
            {
                if ((this.mUIPanClientClient == null))
                {
                    this.mUIPanClientClient = new UIPanClientClient(this);
                }
                return this.mUIPanClientClient;
            }
        }
        
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientClient mUIPanClientClient;
        
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPanClientClient : DXTestControl
    {
        
        public UIPanClientClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UINbMenuNavBar UINbMenuNavBar
        {
            get
            {
                if ((this.mUINbMenuNavBar == null))
                {
                    this.mUINbMenuNavBar = new UINbMenuNavBar(this);
                }
                return this.mUINbMenuNavBar;
            }
        }
        
        public UITcClientTabList UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UINbMenuNavBar mUINbMenuNavBar;
        
        private UITcClientTabList mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbMenuNavBar : DXNavBar
    {
        
        public UINbMenuNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion

        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl mUINavBarGroupControlCoScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINavBarGroupControlCoScrollableControl : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UICbOvertimeCodeLookUpEdit UICbOvertimeCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbOvertimeCodeLookUpEdit == null))
                {
                    this.mUICbOvertimeCodeLookUpEdit = new UICbOvertimeCodeLookUpEdit(this);
                }
                return this.mUICbOvertimeCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UICbOvertimeCodeLookUpEdit mUICbOvertimeCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbOvertimeCodeLookUpEdit : DXLookUpEdit
    {
        
        public UICbOvertimeCodeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "cbOvertimeCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupSearchLookUpEdiWindow : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "cbOvertimeCodePopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchEditLookUpPopuCustom : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UILCCustom UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILCCustom : DXTestControl
    {
        
        public UILCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        
        public UILciGridLayoutControlItem UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup mUILcgFindLayoutGroup;
        
        private UILciGridLayoutControlItem mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgFindLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciLabelFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Merarbeid / overtid");
                    this.mUITeFindEdit.WindowTitles.Add("Mertid / övertid");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciGridLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGridControlTable.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
                    this.mUIGridControlTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
                    this.mUIGridControlTable.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcClientTabList : DXTestControl
    {
        
        public UITcClientTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UITpMainClient UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpMainClient : DXTestControl
    {
        
        public UITpMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsClient UIGcShiftDetailsClient
        {
            get
            {
                if ((this.mUIGcShiftDetailsClient == null))
                {
                    this.mUIGcShiftDetailsClient = new UIGcShiftDetailsClient(this);
                }
                return this.mUIGcShiftDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsClient mUIGcShiftDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcShiftDetailsClient : DXTestControl
    {
        
        public UIGcShiftDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        
        public UITcRegistrationTypeTabList UITcRegistrationTypeTabList
        {
            get
            {
                if ((this.mUITcRegistrationTypeTabList == null))
                {
                    this.mUITcRegistrationTypeTabList = new UITcRegistrationTypeTabList(this);
                }
                return this.mUITcRegistrationTypeTabList;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        
        private UITcRegistrationTypeTabList mUITcRegistrationTypeTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcRegistrationTypeTabList : DXTestControl
    {
        
        public UITcRegistrationTypeTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcRegistrationType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UITpNewShiftClient UITpNewShiftClient
        {
            get
            {
                if ((this.mUITpNewShiftClient == null))
                {
                    this.mUITpNewShiftClient = new UITpNewShiftClient(this);
                }
                return this.mUITpNewShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpNewShiftClient mUITpNewShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpNewShiftClient : DXTestControl
    {
        
        public UITpNewShiftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public UICbShiftCodeLookUpEdit UICbShiftCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbShiftCodeLookUpEdit == null))
                {
                    this.mUICbShiftCodeLookUpEdit = new UICbShiftCodeLookUpEdit(this);
                }
                return this.mUICbShiftCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UICbShiftCodeLookUpEdit mUICbShiftCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICbShiftCodeLookUpEdit : DXLookUpEdit
    {
        
        public UICbShiftCodeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCodePopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid / övertid");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow111 : DXWindow
    {
        
        public UIItemWindow111()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AML Brudd - Egen kommentar";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit == null))
                {
                    this.mUIGSLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gsBreakType";
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit;
            }
        }
        
        public DXTextEdit UIECommentEdit
        {
            get
            {
                if ((this.mUIECommentEdit == null))
                {
                    this.mUIECommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIECommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eComment";
                    this.mUIECommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSMemoEdit";
                    this.mUIECommentEdit.WindowTitles.Add("AML Brudd - Egen kommentar");
                    #endregion
                }
                return this.mUIECommentEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("AML Brudd - Egen kommentar");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit;
        
        private DXTextEdit mUIECommentEdit;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow31 : DXWindow
    {
        
        public UIItemWindow31()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsregistrering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGSNavBarControlNavBar UIGSNavBarControlNavBar
        {
            get
            {
                if ((this.mUIGSNavBarControlNavBar == null))
                {
                    this.mUIGSNavBarControlNavBar = new UIGSNavBarControlNavBar(this);
                }
                return this.mUIGSNavBarControlNavBar;
            }
        }
        
        public UIGSLayoutControlCustom1 UIGSLayoutControlCustom
        {
            get
            {
                if ((this.mUIGSLayoutControlCustom == null))
                {
                    this.mUIGSLayoutControlCustom = new UIGSLayoutControlCustom1(this);
                }
                return this.mUIGSLayoutControlCustom;
            }
        }
        
        public UILcMainCustom UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new UILcMainCustom(this);
                }
                return this.mUILcMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGSNavBarControlNavBar mUIGSNavBarControlNavBar;
        
        private UIGSLayoutControlCustom1 mUIGSLayoutControlCustom;
        
        private UILcMainCustom mUILcMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSNavBarControlNavBar : DXNavBar
    {
        
        public UIGSNavBarControlNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl1 UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl1(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl1 mUINavBarGroupControlCoScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINavBarGroupControlCoScrollableControl1 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcAbsenceCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lueAbsenceCodes";
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSLayoutControlCustom1 : DXTestControl
    {
        
        public UIGSLayoutControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgBottomLayoutGroup UILcgBottomLayoutGroup
        {
            get
            {
                if ((this.mUILcgBottomLayoutGroup == null))
                {
                    this.mUILcgBottomLayoutGroup = new UILcgBottomLayoutGroup(this);
                }
                return this.mUILcgBottomLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgBottomLayoutGroup mUILcgBottomLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgBottomLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgBottomLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciOkFinishLayoutControlItem UILciOkFinishLayoutControlItem
        {
            get
            {
                if ((this.mUILciOkFinishLayoutControlItem == null))
                {
                    this.mUILciOkFinishLayoutControlItem = new UILciOkFinishLayoutControlItem(this);
                }
                return this.mUILciOkFinishLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciOkFinishLayoutControlItem mUILciOkFinishLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciOkFinishLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciOkFinishLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciOkFinish";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        //#region Properties
        //public DXButton UIGSSimpleButtonButton
        //{
        //    get
        //    {
        //        if ((this.mUIGSSimpleButtonButton == null))
        //        {
        //            this.mUIGSSimpleButtonButton = new DXButton(this);
        //            #region Search Criteria
        //            this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOkFinish";
        //            this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
        //            this.mUIGSSimpleButtonButton.WindowTitles.Add("Fraværsregistrering");
        //            #endregion
        //        }
        //        return this.mUIGSSimpleButtonButton;
        //    }
        //}
        //#endregion
        
        //#region Fields
        //private DXButton mUIGSSimpleButtonButton;
        //#endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainCustom : DXTestControl
    {
        
        public UILcMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRootLayoutGroup : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciMainInformationLayoutControlItem UILciMainInformationLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainInformationLayoutControlItem == null))
                {
                    this.mUILciMainInformationLayoutControlItem = new UILciMainInformationLayoutControlItem(this);
                }
                return this.mUILciMainInformationLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainInformationLayoutControlItem mUILciMainInformationLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciMainInformationLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciMainInformationLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcInformationClient UIGrcInformationClient
        {
            get
            {
                if ((this.mUIGrcInformationClient == null))
                {
                    this.mUIGrcInformationClient = new UIGrcInformationClient(this);
                }
                return this.mUIGrcInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcInformationClient mUIGrcInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrcInformationClient : DXTestControl
    {
        
        public UIGrcInformationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcInformationNavBar UINbcInformationNavBar
        {
            get
            {
                if ((this.mUINbcInformationNavBar == null))
                {
                    this.mUINbcInformationNavBar = new UINbcInformationNavBar(this);
                }
                return this.mUINbcInformationNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInformationNavBar mUINbcInformationNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbcInformationNavBar : DXNavBar
    {
        
        public UINbcInformationNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbgcDocumentsScrollableControl UINbgcDocumentsScrollableControl
        {
            get
            {
                if ((this.mUINbgcDocumentsScrollableControl == null))
                {
                    this.mUINbgcDocumentsScrollableControl = new UINbgcDocumentsScrollableControl(this);
                }
                return this.mUINbgcDocumentsScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcDocumentsScrollableControl mUINbgcDocumentsScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINbgcDocumentsScrollableControl : DXScrollableControl
    {
        
        public UINbgcDocumentsScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcDocuments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITcDocumentationTabList UITcDocumentationTabList
        {
            get
            {
                if ((this.mUITcDocumentationTabList == null))
                {
                    this.mUITcDocumentationTabList = new UITcDocumentationTabList(this);
                }
                return this.mUITcDocumentationTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcDocumentationTabList mUITcDocumentationTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcDocumentationTabList : DXTestControl
    {
        
        public UITcDocumentationTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcDocumentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITabDocumentationClient UITabDocumentationClient
        {
            get
            {
                if ((this.mUITabDocumentationClient == null))
                {
                    this.mUITabDocumentationClient = new UITabDocumentationClient(this);
                }
                return this.mUITabDocumentationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITabDocumentationClient mUITabDocumentationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITabDocumentationClient : DXTestControl
    {
        
        public UITabDocumentationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabDocumentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlDocumentationClient UIPnlDocumentationClient
        {
            get
            {
                if ((this.mUIPnlDocumentationClient == null))
                {
                    this.mUIPnlDocumentationClient = new UIPnlDocumentationClient(this);
                }
                return this.mUIPnlDocumentationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlDocumentationClient mUIPnlDocumentationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlDocumentationClient : DXTestControl
    {
        
        public UIPnlDocumentationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlDocumentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcDocumentationCustom UILcDocumentationCustom
        {
            get
            {
                if ((this.mUILcDocumentationCustom == null))
                {
                    this.mUILcDocumentationCustom = new UILcDocumentationCustom(this);
                }
                return this.mUILcDocumentationCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcDocumentationCustom mUILcDocumentationCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcDocumentationCustom : DXTestControl
    {
        
        public UILcDocumentationCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcDocumentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgDocumentationLayoutGroup UILcgDocumentationLayoutGroup
        {
            get
            {
                if ((this.mUILcgDocumentationLayoutGroup == null))
                {
                    this.mUILcgDocumentationLayoutGroup = new UILcgDocumentationLayoutGroup(this);
                }
                return this.mUILcgDocumentationLayoutGroup;
            }
        }
        
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILcgDocumentationLayoutGroup mUILcgDocumentationLayoutGroup;
        
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgDocumentationLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgDocumentationLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgDocumentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciRecievedWrittenDoLayoutControlItem UILciRecievedWrittenDoLayoutControlItem
        {
            get
            {
                if ((this.mUILciRecievedWrittenDoLayoutControlItem == null))
                {
                    this.mUILciRecievedWrittenDoLayoutControlItem = new UILciRecievedWrittenDoLayoutControlItem(this);
                }
                return this.mUILciRecievedWrittenDoLayoutControlItem;
            }
        }
        
        public UILcgDocumentsLayoutGroup UILcgDocumentsLayoutGroup
        {
            get
            {
                if ((this.mUILcgDocumentsLayoutGroup == null))
                {
                    this.mUILcgDocumentsLayoutGroup = new UILcgDocumentsLayoutGroup(this);
                }
                return this.mUILcgDocumentsLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILciRecievedWrittenDoLayoutControlItem mUILciRecievedWrittenDoLayoutControlItem;
        
        private UILcgDocumentsLayoutGroup mUILcgDocumentsLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciRecievedWrittenDoLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciRecievedWrittenDoLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciRecievedWrittenDocumentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        //#region Properties
        //public DXCheckBox UIChbRecievedWrittenDoCheckBox
        //{
        //    get
        //    {
        //        if ((this.mUIChbRecievedWrittenDoCheckBox == null))
        //        {
        //            this.mUIChbRecievedWrittenDoCheckBox = new DXCheckBox(this);
        //            #region Search Criteria
        //            this.mUIChbRecievedWrittenDoCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbRecievedWrittenDocumentation";
        //            this.mUIChbRecievedWrittenDoCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
        //            this.mUIChbRecievedWrittenDoCheckBox.WindowTitles.Add("Fraværsregistrering");
        //            #endregion
        //        }
        //        return this.mUIChbRecievedWrittenDoCheckBox;
        //    }
        //}
        //#endregion
        
        //#region Fields
        //private DXCheckBox mUIChbRecievedWrittenDoCheckBox;
        //#endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgDocumentsLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgDocumentsLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgDocuments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciDocumentsLayoutControlItem UILciDocumentsLayoutControlItem
        {
            get
            {
                if ((this.mUILciDocumentsLayoutControlItem == null))
                {
                    this.mUILciDocumentsLayoutControlItem = new UILciDocumentsLayoutControlItem(this);
                }
                return this.mUILciDocumentsLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciDocumentsLayoutControlItem mUILciDocumentsLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciDocumentsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciDocumentsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciDocuments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILueDocumentsLookUpEdit UILueDocumentsLookUpEdit
        {
            get
            {
                if ((this.mUILueDocumentsLookUpEdit == null))
                {
                    this.mUILueDocumentsLookUpEdit = new UILueDocumentsLookUpEdit(this);
                }
                return this.mUILueDocumentsLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILueDocumentsLookUpEdit mUILueDocumentsLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILueDocumentsLookUpEdit : DXLookUpEdit
    {
        
        public UILueDocumentsLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueDocuments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "lueDocumentsPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238230ASCLAvWindow : WinWindow
    {
        
        public UIGatver64238230ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelPeriodDockPanel1 UICenterPanelPeriodDockPanel
        {
            get
            {
                if ((this.mUICenterPanelPeriodDockPanel == null))
                {
                    this.mUICenterPanelPeriodDockPanel = new UICenterPanelPeriodDockPanel1(this);
                }
                return this.mUICenterPanelPeriodDockPanel;
            }
        }
        
        public UIRibbonControlRibbon1 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon1(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UIItemWindow15 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow15(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow16 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow16(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow22 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow22(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow112 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow112(this);
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIStandaloneBarDockConCustom2 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom2(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelPeriodDockPanel1 mUICenterPanelPeriodDockPanel;
        
        private UIRibbonControlRibbon1 mUIRibbonControlRibbon;
        
        private UIItemWindow15 mUIItemWindow;
        
        private UIItemWindow16 mUIItemWindow1;
        
        private UIItemWindow22 mUIItemWindow2;
        
        private UIItemWindow112 mUIItemWindow11;
        
        private UIStandaloneBarDockConCustom2 mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICenterPanelPeriodDockPanel1 : DXDockPanel
    {
        
        public UICenterPanelPeriodDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom3 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom3 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIControlContainerCustom3 : DXTestControl
    {
        
        public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriodControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleControCustom1 UIPeriodScheduleControCustom
        {
            get
            {
                if ((this.mUIPeriodScheduleControCustom == null))
                {
                    this.mUIPeriodScheduleControCustom = new UIPeriodScheduleControCustom1(this);
                }
                return this.mUIPeriodScheduleControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleControCustom1 mUIPeriodScheduleControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleControCustom1 : DXTestControl
    {
        
        public UIPeriodScheduleControCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PeriodScheduleControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILayoutPanelSplitContainerControl1 UILayoutPanelSplitContainerControl
        {
            get
            {
                if ((this.mUILayoutPanelSplitContainerControl == null))
                {
                    this.mUILayoutPanelSplitContainerControl = new UILayoutPanelSplitContainerControl1(this);
                }
                return this.mUILayoutPanelSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutPanelSplitContainerControl1 mUILayoutPanelSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutPanelSplitContainerControl1 : DXSplitContainerControl
    {
        
        public UILayoutPanelSplitContainerControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitLayoutPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITopPanelClient1 UITopPanelClient
        {
            get
            {
                if ((this.mUITopPanelClient == null))
                {
                    this.mUITopPanelClient = new UITopPanelClient1(this);
                }
                return this.mUITopPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UITopPanelClient1 mUITopPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITopPanelClient1 : DXTestControl
    {
        
        public UITopPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomSplitGroupPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIXtraScrollableControScrollableControl1 UIXtraScrollableControScrollableControl
        {
            get
            {
                if ((this.mUIXtraScrollableControScrollableControl == null))
                {
                    this.mUIXtraScrollableControScrollableControl = new UIXtraScrollableControScrollableControl1(this);
                }
                return this.mUIXtraScrollableControScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraScrollableControScrollableControl1 mUIXtraScrollableControScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIXtraScrollableControScrollableControl1 : DXScrollableControl
    {
        
        public UIXtraScrollableControScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleListBoList UIPeriodScheduleListBoList
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList == null))
                {
                    this.mUIPeriodScheduleListBoList = new UIPeriodScheduleListBoList(this);
                }
                return this.mUIPeriodScheduleListBoList;
            }
        }
        
        public UIPeriodScheduleListBoList1 UIPeriodScheduleListBoList1
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList1 == null))
                {
                    this.mUIPeriodScheduleListBoList1 = new UIPeriodScheduleListBoList1(this);
                }
                return this.mUIPeriodScheduleListBoList1;
            }
        }
        
        public UIPeriodScheduleListBoList2 UIPeriodScheduleListBoList2
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList2 == null))
                {
                    this.mUIPeriodScheduleListBoList2 = new UIPeriodScheduleListBoList2(this);
                }
                return this.mUIPeriodScheduleListBoList2;
            }
        }
        
        public UIPeriodScheduleListBoList3 UIPeriodScheduleListBoList3
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList3 == null))
                {
                    this.mUIPeriodScheduleListBoList3 = new UIPeriodScheduleListBoList3(this);
                }
                return this.mUIPeriodScheduleListBoList3;
            }
        }
        
        public DXListBox UIPeriodScheduleListBoList4
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList4 == null))
                {
                    this.mUIPeriodScheduleListBoList4 = new DXListBox(this);
                    #region Search Criteria
                    this.mUIPeriodScheduleListBoList4.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[25]";
                    this.mUIPeriodScheduleListBoList4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
                    this.mUIPeriodScheduleListBoList4.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPeriodScheduleListBoList4;
            }
        }
        
        public UIPeriodScheduleListBoList5 UIPeriodScheduleListBoList5
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList5 == null))
                {
                    this.mUIPeriodScheduleListBoList5 = new UIPeriodScheduleListBoList5(this);
                }
                return this.mUIPeriodScheduleListBoList5;
            }
        }
        
        public UIPeriodScheduleListBoList6 UIPeriodScheduleListBoList6
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList6 == null))
                {
                    this.mUIPeriodScheduleListBoList6 = new UIPeriodScheduleListBoList6(this);
                }
                return this.mUIPeriodScheduleListBoList6;
            }
        }
        
        public UIPeriodScheduleListBoList7 UIPeriodScheduleListBoList7
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList7 == null))
                {
                    this.mUIPeriodScheduleListBoList7 = new UIPeriodScheduleListBoList7(this);
                }
                return this.mUIPeriodScheduleListBoList7;
            }
        }
        
        public UIPeriodScheduleListBoList8 UIPeriodScheduleListBoList8
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList8 == null))
                {
                    this.mUIPeriodScheduleListBoList8 = new UIPeriodScheduleListBoList8(this);
                }
                return this.mUIPeriodScheduleListBoList8;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleListBoList mUIPeriodScheduleListBoList;
        
        private UIPeriodScheduleListBoList1 mUIPeriodScheduleListBoList1;
        
        private UIPeriodScheduleListBoList2 mUIPeriodScheduleListBoList2;
        
        private UIPeriodScheduleListBoList3 mUIPeriodScheduleListBoList3;
        
        private DXListBox mUIPeriodScheduleListBoList4;
        
        private UIPeriodScheduleListBoList5 mUIPeriodScheduleListBoList5;
        
        private UIPeriodScheduleListBoList6 mUIPeriodScheduleListBoList6;
        
        private UIPeriodScheduleListBoList7 mUIPeriodScheduleListBoList7;
        
        private UIPeriodScheduleListBoList8 mUIPeriodScheduleListBoList8;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleListBoList : DXListBox
    {
        
        public UIPeriodScheduleListBoList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UID108001600ListItem
        {
            get
            {
                if ((this.mUID108001600ListItem == null))
                {
                    this.mUID108001600ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUID108001600ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[0]Item[0]";
                    this.mUID108001600ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUID108001600ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUID108001600ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUID108001600ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleListBoList1 : DXListBox
    {
        
        public UIPeriodScheduleListBoList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UID08001600ListItem
        {
            get
            {
                if ((this.mUID08001600ListItem == null))
                {
                    this.mUID08001600ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUID08001600ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[1]Item[1]";
                    this.mUID08001600ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUID08001600ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUID08001600ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUID08001600ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleListBoList2 : DXListBox
    {
        
        public UIPeriodScheduleListBoList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UID08001600ListItem
        {
            get
            {
                if ((this.mUID08001600ListItem == null))
                {
                    this.mUID08001600ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUID08001600ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[2]Item[2]";
                    this.mUID08001600ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUID08001600ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUID08001600ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUID08001600ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleListBoList3 : DXListBox
    {
        
        public UIPeriodScheduleListBoList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[3]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UID108001600ListItem
        {
            get
            {
                if ((this.mUID108001600ListItem == null))
                {
                    this.mUID108001600ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUID108001600ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[3]Item[3]";
                    this.mUID108001600ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUID108001600ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUID108001600ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUID108001600ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleListBoList5 : DXListBox
    {
        
        public UIPeriodScheduleListBoList5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[5]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UID08001600ListItem
        {
            get
            {
                if ((this.mUID08001600ListItem == null))
                {
                    this.mUID08001600ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUID08001600ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[5]Item[0]";
                    this.mUID08001600ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUID08001600ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUID08001600ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUID08001600ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleListBoList6 : DXListBox
    {
        
        public UIPeriodScheduleListBoList6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[24]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIItem00000000ListItem
        {
            get
            {
                if ((this.mUIItem00000000ListItem == null))
                {
                    this.mUIItem00000000ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIItem00000000ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[24]Item[0]";
                    this.mUIItem00000000ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIItem00000000ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem00000000ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIItem00000000ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleListBoList7 : DXListBox
    {
        
        public UIPeriodScheduleListBoList7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[4]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UID08001600ListItem
        {
            get
            {
                if ((this.mUID08001600ListItem == null))
                {
                    this.mUID08001600ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUID08001600ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[4]Item[1]";
                    this.mUID08001600ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUID08001600ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUID08001600ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUID08001600ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPeriodScheduleListBoList8 : DXListBox
    {
        
        public UIPeriodScheduleListBoList8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[26]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIItem00000000ListItem
        {
            get
            {
                if ((this.mUIItem00000000ListItem == null))
                {
                    this.mUIItem00000000ListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIItem00000000ListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[26]Item[4]";
                    this.mUIItem00000000ListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIItem00000000ListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem00000000ListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIItem00000000ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon1 : DXRibbon
    {
        
        public UIRibbonControlRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage1 UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage1(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage1 mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpMainMenuRibbonPage1 : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGrpDevianceRibbonPageGroup1 UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup1(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDevianceRibbonPageGroup1 mUIGrpDevianceRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpDevianceRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBytteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBytteRibbonBaseButtonItem == null))
                {
                    this.mUIBytteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBytteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExchange";
                    this.mUIBytteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBytteRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBytteRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIByttemedavdelingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIByttemedavdelingRibbonBaseButtonItem == null))
                {
                    this.mUIByttemedavdelingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIByttemedavdelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExchangeDep";
                    this.mUIByttemedavdelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIByttemedavdelingRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIByttemedavdelingRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIVaktutlånRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIVaktutlånRibbonBaseButtonItem == null))
                {
                    this.mUIVaktutlånRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIVaktutlånRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnLoan";
                    this.mUIVaktutlånRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIVaktutlånRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIVaktutlånRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBytteRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIByttemedavdelingRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIVaktutlånRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow15 : WinWindow
    {
        
        public UIItemWindow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64238230ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64238230ASCLAvClient == null))
                {
                    this.mUIGatver64238230ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64238230ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver64238230ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64238230ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow16 : WinWindow
    {
        
        public UIItemWindow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow22 : WinWindow
    {
        
        public UIItemWindow22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIDokClient
        {
            get
            {
                if ((this.mUIDokClient == null))
                {
                    this.mUIDokClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDokClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDokClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDokClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow112 : WinWindow
    {
        
        public UIItemWindow112(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIDokClient
        {
            get
            {
                if ((this.mUIDokClient == null))
                {
                    this.mUIDokClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDokClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDokClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDokClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom2 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar2 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar2(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar2 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar2 : DXMenu
    {
        
        public UIMainmenuMenuBar2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIHjelpBarBaseButtonItem
        {
            get
            {
                if ((this.mUIHjelpBarBaseButtonItem == null))
                {
                    this.mUIHjelpBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIHjelpBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnHelp";
                    this.mUIHjelpBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIHjelpBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIHjelpBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIHjelpBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow41 : DXWindow
    {
        
        public UIItemWindow41()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytte");
            this.WindowTitles.Add("Byte");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public UIGsPanelControl1Client1 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client1(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public DXButton UIOKButton1
        {
            get
            {
                if ((this.mUIOKButton1 == null))
                {
                    this.mUIOKButton1 = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton1.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIOKButton1;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient mUIGSPanelControlClient;
        
        private DXButton mUIOKButton;
        
        private UIGsPanelControl1Client1 mUIGsPanelControl1Client;
        
        private DXButton mUIOKButton1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSPanelControlClient : DXTestControl
    {
        
        public UIGSPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGSGroupControlClient1 UIGSGroupControlClient
        {
            get
            {
                if ((this.mUIGSGroupControlClient == null))
                {
                    this.mUIGSGroupControlClient = new UIGSGroupControlClient1(this);
                }
                return this.mUIGSGroupControlClient;
            }
        }
        
        public UIGsTabTabList UIGsTabTabList
        {
            get
            {
                if ((this.mUIGsTabTabList == null))
                {
                    this.mUIGsTabTabList = new UIGsTabTabList(this);
                }
                return this.mUIGsTabTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGSGroupControlClient1 mUIGSGroupControlClient;
        
        private UIGsTabTabList mUIGsTabTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSGroupControlClient1 : DXTestControl
    {
        
        public UIGSGroupControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment2";
                    this.mUIGSSearchLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsTabTabList : DXTestControl
    {
        
        public UIGsTabTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTab";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITpShiftExchangeClient UITpShiftExchangeClient
        {
            get
            {
                if ((this.mUITpShiftExchangeClient == null))
                {
                    this.mUITpShiftExchangeClient = new UITpShiftExchangeClient(this);
                }
                return this.mUITpShiftExchangeClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpShiftExchangeClient mUITpShiftExchangeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpShiftExchangeClient : DXTestControl
    {
        
        public UITpShiftExchangeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpShiftExchange";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGrpEmployee1ShiftsClient UIGrpEmployee1ShiftsClient
        {
            get
            {
                if ((this.mUIGrpEmployee1ShiftsClient == null))
                {
                    this.mUIGrpEmployee1ShiftsClient = new UIGrpEmployee1ShiftsClient(this);
                }
                return this.mUIGrpEmployee1ShiftsClient;
            }
        }
        
        public DXButton UIBtnGiveEmployee2Button
        {
            get
            {
                if ((this.mUIBtnGiveEmployee2Button == null))
                {
                    this.mUIBtnGiveEmployee2Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGiveEmployee2";
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnGiveEmployee2Button.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIBtnGiveEmployee2Button;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEmployee1ShiftsClient mUIGrpEmployee1ShiftsClient;
        
        private DXButton mUIBtnGiveEmployee2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEmployee1ShiftsClient : DXTestControl
    {
        
        public UIGrpEmployee1ShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee1Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcEmployment1ShiftsTable UIGcEmployment1ShiftsTable
        {
            get
            {
                if ((this.mUIGcEmployment1ShiftsTable == null))
                {
                    this.mUIGcEmployment1ShiftsTable = new UIGcEmployment1ShiftsTable(this);
                }
                return this.mUIGcEmployment1ShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployment1ShiftsTable mUIGcEmployment1ShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcEmployment1ShiftsTable : DXGrid
    {
        
        public UIGcEmployment1ShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment1Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UITirsdagCell
        {
            get
            {
                if ((this.mUITirsdagCell == null))
                {
                    this.mUITirsdagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITirsdagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment1ShiftsGridControlCell[View]gvEmployment1Shifts[Row]0[Column]colDayOf" +
                        "Week";
                    this.mUITirsdagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITirsdagCell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUITirsdagCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITirsdagCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsPanelControl1Client1 : DXTestControl
    {
        
        public UIGsPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGrpEmployee2Client UIGrpEmployee2Client
        {
            get
            {
                if ((this.mUIGrpEmployee2Client == null))
                {
                    this.mUIGrpEmployee2Client = new UIGrpEmployee2Client(this);
                }
                return this.mUIGrpEmployee2Client;
            }
        }
        
        public UIGsTabTabList1 UIGsTabTabList
        {
            get
            {
                if ((this.mUIGsTabTabList == null))
                {
                    this.mUIGsTabTabList = new UIGsTabTabList1(this);
                }
                return this.mUIGsTabTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEmployee2Client mUIGrpEmployee2Client;
        
        private UIGsTabTabList1 mUIGsTabTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEmployee2Client : DXTestControl
    {
        
        public UIGrpEmployee2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISleEmployment2LookUpEdit UISleEmployment2LookUpEdit
        {
            get
            {
                if ((this.mUISleEmployment2LookUpEdit == null))
                {
                    this.mUISleEmployment2LookUpEdit = new UISleEmployment2LookUpEdit(this);
                }
                return this.mUISleEmployment2LookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UISleEmployment2LookUpEdit mUISleEmployment2LookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISleEmployment2LookUpEdit : DXLookUpEdit
    {
        
        public UISleEmployment2LookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow1 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow1(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow1 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPopupSearchLookUpEdiWindow1 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sleEmployment2PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom1 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom1(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom1 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISearchEditLookUpPopuCustom1 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILCCustom1 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom1(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom1 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILCCustom1 : DXTestControl
    {
        
        public UILCCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup1 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup1(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup1 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcMainLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILciGridLayoutControlItem1 UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem1(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        
        public UILcgFindLayoutGroup1 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup1(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILciGridLayoutControlItem1 mUILciGridLayoutControlItem;
        
        private UILcgFindLayoutGroup1 mUILcgFindLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciGridLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGridControlTable : DXGrid
    {
        
        public UIGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UICrockettCell
        {
            get
            {
                if ((this.mUICrockettCell == null))
                {
                    this.mUICrockettCell = new DXCell(this);
                    #region Search Criteria
                    this.mUICrockettCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gridView11[Row]0[Column]colEmployment2L" +
                        "astName";
                    this.mUICrockettCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUICrockettCell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUICrockettCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUICrockettCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILcgFindLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem1 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem1(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem1 mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILciLabelFindLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsTabTabList1 : DXTestControl
    {
        
        public UIGsTabTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTab";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UITpShiftExchangeClient1 UITpShiftExchangeClient
        {
            get
            {
                if ((this.mUITpShiftExchangeClient == null))
                {
                    this.mUITpShiftExchangeClient = new UITpShiftExchangeClient1(this);
                }
                return this.mUITpShiftExchangeClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpShiftExchangeClient1 mUITpShiftExchangeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpShiftExchangeClient1 : DXTestControl
    {
        
        public UITpShiftExchangeClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpShiftExchange";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGrpEmployee1ShiftsClient1 UIGrpEmployee1ShiftsClient
        {
            get
            {
                if ((this.mUIGrpEmployee1ShiftsClient == null))
                {
                    this.mUIGrpEmployee1ShiftsClient = new UIGrpEmployee1ShiftsClient1(this);
                }
                return this.mUIGrpEmployee1ShiftsClient;
            }
        }
        
        public DXButton UIBtnGiveEmployee2Button
        {
            get
            {
                if ((this.mUIBtnGiveEmployee2Button == null))
                {
                    this.mUIBtnGiveEmployee2Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGiveEmployee2";
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnGiveEmployee2Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnGiveEmployee2Button.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIBtnGiveEmployee2Button;
            }
        }
        
        public UIGrpEmployee2ShiftsClient UIGrpEmployee2ShiftsClient
        {
            get
            {
                if ((this.mUIGrpEmployee2ShiftsClient == null))
                {
                    this.mUIGrpEmployee2ShiftsClient = new UIGrpEmployee2ShiftsClient(this);
                }
                return this.mUIGrpEmployee2ShiftsClient;
            }
        }
        
        public DXButton UIBtnGiveEmployee1Button
        {
            get
            {
                if ((this.mUIBtnGiveEmployee1Button == null))
                {
                    this.mUIBtnGiveEmployee1Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnGiveEmployee1Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGiveEmployee1";
                    this.mUIBtnGiveEmployee1Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnGiveEmployee1Button.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnGiveEmployee1Button.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIBtnGiveEmployee1Button;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEmployee1ShiftsClient1 mUIGrpEmployee1ShiftsClient;
        
        private DXButton mUIBtnGiveEmployee2Button;
        
        private UIGrpEmployee2ShiftsClient mUIGrpEmployee2ShiftsClient;
        
        private DXButton mUIBtnGiveEmployee1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEmployee1ShiftsClient1 : DXTestControl
    {
        
        public UIGrpEmployee1ShiftsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee1Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcEmployment1ShiftsTable1 UIGcEmployment1ShiftsTable
        {
            get
            {
                if ((this.mUIGcEmployment1ShiftsTable == null))
                {
                    this.mUIGcEmployment1ShiftsTable = new UIGcEmployment1ShiftsTable1(this);
                }
                return this.mUIGcEmployment1ShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployment1ShiftsTable1 mUIGcEmployment1ShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcEmployment1ShiftsTable1 : DXGrid
    {
        
        public UIGcEmployment1ShiftsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment1Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UITirsdagCell
        {
            get
            {
                if ((this.mUITirsdagCell == null))
                {
                    this.mUITirsdagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITirsdagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment1ShiftsGridControlCell[View]gvEmployment1Shifts[Row]0[Column]colDayOf" +
                        "Week";
                    this.mUITirsdagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITirsdagCell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUITirsdagCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITirsdagCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpEmployee2ShiftsClient : DXTestControl
    {
        
        public UIGrpEmployee2ShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEmployee2Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGcEmployment2ShiftsTable UIGcEmployment2ShiftsTable
        {
            get
            {
                if ((this.mUIGcEmployment2ShiftsTable == null))
                {
                    this.mUIGcEmployment2ShiftsTable = new UIGcEmployment2ShiftsTable(this);
                }
                return this.mUIGcEmployment2ShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcEmployment2ShiftsTable mUIGcEmployment2ShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcEmployment2ShiftsTable : DXGrid
    {
        
        public UIGcEmployment2ShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment2Shifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXCell UITirsdagCell
        {
            get
            {
                if ((this.mUITirsdagCell == null))
                {
                    this.mUITirsdagCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITirsdagCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployment2ShiftsGridControlCell[View]gvEmployment2Shifts[Row]1[Column]colDayOf" +
                        "Week2";
                    this.mUITirsdagCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITirsdagCell.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUITirsdagCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITirsdagCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIByttemedavdelingWindow : DXWindow
    {
        
        public UIByttemedavdelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytte med avdeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIUtlånavvakterWindow : DXWindow
    {
        
        public UIUtlånavvakterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utlån av vakter";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControl1Custom : DXTestControl
    {
        
        public UIGsLayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup1 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup1(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Utlån av vakter");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup1 mUILayoutControlGroup1LayoutGroup;
        
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup1LayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UIGcMainClient UIGcMainClient
        {
            get
            {
                if ((this.mUIGcMainClient == null))
                {
                    this.mUIGcMainClient = new UIGcMainClient(this);
                }
                return this.mUIGcMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcMainClient mUIGcMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcMainClient : DXTestControl
    {
        
        public UIGcMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl2Custom UIGsLayoutControl2Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl2Custom == null))
                {
                    this.mUIGsLayoutControl2Custom = new UIGsLayoutControl2Custom(this);
                }
                return this.mUIGsLayoutControl2Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl2Custom mUIGsLayoutControl2Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGsLayoutControl2Custom : DXTestControl
    {
        
        public UIGsLayoutControl2Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup2LayoutGroup UILayoutControlGroup2LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup2LayoutGroup == null))
                {
                    this.mUILayoutControlGroup2LayoutGroup = new UILayoutControlGroup2LayoutGroup(this);
                }
                return this.mUILayoutControlGroup2LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup2LayoutGroup mUILayoutControlGroup2LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlGroup2LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup2LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem1LayoutControlItem UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem1LayoutControlItem mUILayoutControlItem1LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILayoutControlItem1LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UIGcSelectedShiftsClient UIGcSelectedShiftsClient
        {
            get
            {
                if ((this.mUIGcSelectedShiftsClient == null))
                {
                    this.mUIGcSelectedShiftsClient = new UIGcSelectedShiftsClient(this);
                }
                return this.mUIGcSelectedShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcSelectedShiftsClient mUIGcSelectedShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGcSelectedShiftsClient : DXTestControl
    {
        
        public UIGcSelectedShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSelectedShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UITlleDepartmentLookUpEdit UITlleDepartmentLookUpEdit
        {
            get
            {
                if ((this.mUITlleDepartmentLookUpEdit == null))
                {
                    this.mUITlleDepartmentLookUpEdit = new UITlleDepartmentLookUpEdit(this);
                }
                return this.mUITlleDepartmentLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UITlleDepartmentLookUpEdit mUITlleDepartmentLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITlleDepartmentLookUpEdit : DXLookUpEdit
    {
        
        public UITlleDepartmentLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlleDepartment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListLookUpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public UITreeListLookUpEditPoWindow UITreeListLookUpEditPoWindow
        {
            get
            {
                if ((this.mUITreeListLookUpEditPoWindow == null))
                {
                    this.mUITreeListLookUpEditPoWindow = new UITreeListLookUpEditPoWindow(this);
                }
                return this.mUITreeListLookUpEditPoWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITreeListLookUpEditPoWindow mUITreeListLookUpEditPoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITreeListLookUpEditPoWindow : DXWindow
    {
        
        public UITreeListLookUpEditPoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlleDepartmentPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListLookUpEditPopupForm";
            this.WindowTitles.Add("Utlån av vakter");
            #endregion
        }
        
        #region Properties
        public DXTreeList UITlDepartmentsTreeList
        {
            get
            {
                if ((this.mUITlDepartmentsTreeList == null))
                {
                    this.mUITlDepartmentsTreeList = new DXTreeList(this);
                    #region Search Criteria
                    this.mUITlDepartmentsTreeList.SearchProperties[DXTestControl.PropertyNames.Name] = "tlDepartments";
                    this.mUITlDepartmentsTreeList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
                    this.mUITlDepartmentsTreeList.WindowTitles.Add("Utlån av vakter");
                    #endregion
                }
                return this.mUITlDepartmentsTreeList;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeList mUITlDepartmentsTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEFO3000GatWindow : WinWindow
    {
        
        public UIEFO3000GatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "EFO-3000 - Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("EFO-3000 - Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow17 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow17(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow17 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow17 : WinWindow
    {
        
        public UIItemWindow17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("EFO-3000 - Gat");
            #endregion
        }
        
        #region Properties
        public UIEFO3000GatClient UIEFO3000GatClient
        {
            get
            {
                if ((this.mUIEFO3000GatClient == null))
                {
                    this.mUIEFO3000GatClient = new UIEFO3000GatClient(this);
                }
                return this.mUIEFO3000GatClient;
            }
        }
        #endregion
        
        #region Fields
        private UIEFO3000GatClient mUIEFO3000GatClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEFO3000GatClient : WinClient
    {
        
        public UIEFO3000GatClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("EFO-3000 - Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("EFO-3000 - Gat");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238230ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver64238230ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow18 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow18(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow19 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow19(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow18 mUIItemWindow;
        
        private UIItemWindow19 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow18 : WinWindow
    {
        
        public UIItemWindow18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAdministrasjonClient
        {
            get
            {
                if ((this.mUIAdministrasjonClient == null))
                {
                    this.mUIAdministrasjonClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAdministrasjonClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAdministrasjonClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAdministrasjonClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow19 : WinWindow
    {
        
        public UIItemWindow19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64238230ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64238230ASCLAvClient == null))
                {
                    this.mUIGatver64238230ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64238230ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver64238230ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64238230ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow51 : DXWindow
    {
        
        public UIItemWindow51()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværskoder og dokumenter";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Frånvarokoder och dokument");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit == null))
                {
                    this.mUIGSLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gslueAbsenceCode";
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit;
            }
        }
        
        public UIGSGroupControlClient2 UIGSGroupControlClient
        {
            get
            {
                if ((this.mUIGSGroupControlClient == null))
                {
                    this.mUIGSGroupControlClient = new UIGSGroupControlClient2(this);
                }
                return this.mUIGSGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit;
        
        private UIGSGroupControlClient2 mUIGSGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGSGroupControlClient2 : DXTestControl
    {
        
        public UIGSGroupControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGroupControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværskoder og dokumenter");
            this.WindowTitles.Add("Frånvarokoder och dokument");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Fraværskoder og dokumenter");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDokumentWindow : WinWindow
    {
        
        public UIDokumentWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dokument: ";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Dokument: ");
            #endregion
        }
        
        #region Properties
        public UITextControl1Window UITextControl1Window
        {
            get
            {
                if ((this.mUITextControl1Window == null))
                {
                    this.mUITextControl1Window = new UITextControl1Window(this);
                }
                return this.mUITextControl1Window;
            }
        }
        
        public UIDokumentTitleBar UIDokumentTitleBar
        {
            get
            {
                if ((this.mUIDokumentTitleBar == null))
                {
                    this.mUIDokumentTitleBar = new UIDokumentTitleBar(this);
                }
                return this.mUIDokumentTitleBar;
            }
        }
        
        public UIMenuStrip1MenuBar UIMenuStrip1MenuBar
        {
            get
            {
                if ((this.mUIMenuStrip1MenuBar == null))
                {
                    this.mUIMenuStrip1MenuBar = new UIMenuStrip1MenuBar(this);
                }
                return this.mUIMenuStrip1MenuBar;
            }
        }
        
        public UIButtonBar1Window UIButtonBar1Window
        {
            get
            {
                if ((this.mUIButtonBar1Window == null))
                {
                    this.mUIButtonBar1Window = new UIButtonBar1Window(this);
                }
                return this.mUIButtonBar1Window;
            }
        }
        #endregion
        
        #region Fields
        private UITextControl1Window mUITextControl1Window;
        
        private UIDokumentTitleBar mUIDokumentTitleBar;
        
        private UIMenuStrip1MenuBar mUIMenuStrip1MenuBar;
        
        private UIButtonBar1Window mUIButtonBar1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITextControl1Window : WinWindow
    {
        
        public UITextControl1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textControl1";
            this.WindowTitles.Add("Dokument: ");
            #endregion
        }
        
        #region Properties
        public WinClient UIEGENMELDINGVEDSYKEFRClient
        {
            get
            {
                if ((this.mUIEGENMELDINGVEDSYKEFRClient == null))
                {
                    this.mUIEGENMELDINGVEDSYKEFRClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIEGENMELDINGVEDSYKEFRClient.SearchProperties.Add(new PropertyExpression(WinControl.PropertyNames.Name, "EGENMELDING ", PropertyExpressionOperator.Contains));
                    this.mUIEGENMELDINGVEDSYKEFRClient.WindowTitles.Add("Dokument: ");
                    #endregion
                }
                return this.mUIEGENMELDINGVEDSYKEFRClient;
            }
        }
        
        public WinClient UIEGENMELDINGVEDSYKEFRClient1
        {
            get
            {
                if ((this.mUIEGENMELDINGVEDSYKEFRClient1 == null))
                {
                    this.mUIEGENMELDINGVEDSYKEFRClient1 = new WinClient(this);
                    #region Search Criteria
                    this.mUIEGENMELDINGVEDSYKEFRClient1.SearchProperties[WinControl.PropertyNames.Name] = @"EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødselsdag og år:Tubbs, RicoEtat:Lønnsnr:GATSOFT3002 - Fleksavdeling 21091Har vært fraværende på grunn av egen sykdom:Fra og med:<<testac>>Til og med:Har vært fraværende på grunn av barns sykdom: Fra og med:<<fravær.fradato>>Til og med:Barnets navn:Født:Eneforsørger:¨ Ja ¨ NeiMener De at sykdommen/skaden har sammenheng med arbeidet?¨ Ja ¨ NeiØnsker de kontakt med bedriftshelsetjenesten?¨ Ja ¨ NeiSted:Dato:GATSOFT13.05.2016				____________________________________________							underskriftLeveres nærmeste overordnede1. arbeidsdag og sendesPERSONALKONTORETNærmeste overerordnedes sign.";
                    this.mUIEGENMELDINGVEDSYKEFRClient1.WindowTitles.Add("Dokument: ");
                    #endregion
                }
                return this.mUIEGENMELDINGVEDSYKEFRClient1;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIEGENMELDINGVEDSYKEFRClient;
        
        private WinClient mUIEGENMELDINGVEDSYKEFRClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDokumentTitleBar : WinTitleBar
    {
        
        public UIDokumentTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Dokument: ");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Dokument: ");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMenuStrip1MenuBar : WinMenuBar
    {
        
        public UIMenuStrip1MenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "menuStrip1";
            this.WindowTitles.Add("Dokument: ");
            #endregion
        }
        
        #region Properties
        public UIFilMenuItem UIFilMenuItem
        {
            get
            {
                if ((this.mUIFilMenuItem == null))
                {
                    this.mUIFilMenuItem = new UIFilMenuItem(this);
                }
                return this.mUIFilMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFilMenuItem mUIFilMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFilMenuItem : WinMenuItem
    {
        
        public UIFilMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Fil";
            this.WindowTitles.Add("Dokument: ");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIAvsluttMenuItem
        {
            get
            {
                if ((this.mUIAvsluttMenuItem == null))
                {
                    this.mUIAvsluttMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIAvsluttMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Avslutt";
                    this.mUIAvsluttMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIAvsluttMenuItem.WindowTitles.Add("Dokument: ");
                    #endregion
                }
                return this.mUIAvsluttMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIAvsluttMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIButtonBar1Window : WinWindow
    {
        
        public UIButtonBar1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonBar1";
            this.WindowTitles.Add("Dokument: ");
            #endregion
        }
        
        #region Properties
        public WinClient UIButtonBar1Client
        {
            get
            {
                if ((this.mUIButtonBar1Client == null))
                {
                    this.mUIButtonBar1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIButtonBar1Client.SearchProperties[WinControl.PropertyNames.Name] = "buttonBar1";
                    this.mUIButtonBar1Client.WindowTitles.Add("Dokument: ");
                    #endregion
                }
                return this.mUIButtonBar1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIButtonBar1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIQuestionWindow : WinWindow
    {
        
        public UIQuestionWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Question";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Question");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Question");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Question");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDokumentGatdokumentEWindow : WinWindow
    {
        
        public UIDokumentGatdokumentEWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Dokument: Gat dokument Egenmelding.doc";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Dokument: Gat dokument Egenmelding.doc");
            #endregion
        }
        
        #region Properties
        public UITextControl1Window1 UITextControl1Window
        {
            get
            {
                if ((this.mUITextControl1Window == null))
                {
                    this.mUITextControl1Window = new UITextControl1Window1(this);
                }
                return this.mUITextControl1Window;
            }
        }
        #endregion
        
        #region Fields
        private UITextControl1Window1 mUITextControl1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITextControl1Window1 : WinWindow
    {
        
        public UITextControl1Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textControl1";
            this.WindowTitles.Add("Dokument: Gat dokument Egenmelding.doc");
            #endregion
        }
        
        #region Properties
        public WinClient UIEGENMELDINGVEDSYKEFRClient
        {
            get
            {
                if ((this.mUIEGENMELDINGVEDSYKEFRClient == null))
                {
                    this.mUIEGENMELDINGVEDSYKEFRClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIEGENMELDINGVEDSYKEFRClient.SearchProperties[WinControl.PropertyNames.Name] = @"EGENMELDING VED SYKEFRAVÆRUndertegnedes navn:Fødselsdag og år:Tubbs, RicoEtat:Lønnsnr:GATSOFT3002 - Fleksavdeling 21091Har vært fraværende på grunn av egen sykdom:Fra og med:<<testac>>Til og med:Endre fra Anstatt | Dok tabDirekte etterreg. av fraværHar vært fraværende på grunn av barns sykdom: Fra og med:<<fravær.fradato>>Til og med:Barnets navn:Født:Eneforsørger:¨ Ja ¨ NeiMener De at sykdommen/skaden har sammenheng med arbeidet?¨ Ja ¨ NeiØnsker de kontakt med bedriftshelsetjenesten?¨ Ja ¨ NeiSted:Dato:GATSOFT12.05.2016				____________________________________________							underskriftLeveres nærmeste overordnede1. arbeidsdag og sendesPERSONALKONTORETNærmeste overerordnedes sign.";
                    this.mUIEGENMELDINGVEDSYKEFRClient.WindowTitles.Add("Dokument: Gat dokument Egenmelding.doc");
                    #endregion
                }
                return this.mUIEGENMELDINGVEDSYKEFRClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIEGENMELDINGVEDSYKEFRClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow61 : WinWindow
    {
        
        public UIItemWindow61()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDropDownMenu UIDropDownMenu
        {
            get
            {
                if ((this.mUIDropDownMenu == null))
                {
                    this.mUIDropDownMenu = new UIDropDownMenu(this);
                }
                return this.mUIDropDownMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIDropDownMenu mUIDropDownMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDropDownMenu : WinMenu
    {
        
        public UIDropDownMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "DropDown";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UICopyMenuItem
        {
            get
            {
                if ((this.mUICopyMenuItem == null))
                {
                    this.mUICopyMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUICopyMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Copy";
                    #endregion
                }
                return this.mUICopyMenuItem;
            }
        }
        
        public WinMenuItem UIRemoveMenuItem
        {
            get
            {
                if ((this.mUIRemoveMenuItem == null))
                {
                    this.mUIRemoveMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIRemoveMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Remove";
                    #endregion
                }
                return this.mUIRemoveMenuItem;
            }
        }
        
        public WinMenuItem UIConverttoApplicationMenuItem
        {
            get
            {
                if ((this.mUIConverttoApplicationMenuItem == null))
                {
                    this.mUIConverttoApplicationMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIConverttoApplicationMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Convert to Application";
                    #endregion
                }
                return this.mUIConverttoApplicationMenuItem;
            }
        }
        
        public WinMenuItem UIAddApplicationPoolMenuItem
        {
            get
            {
                if ((this.mUIAddApplicationPoolMenuItem == null))
                {
                    this.mUIAddApplicationPoolMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIAddApplicationPoolMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Add Application Pool...";
                    #endregion
                }
                return this.mUIAddApplicationPoolMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUICopyMenuItem;
        
        private WinMenuItem mUIRemoveMenuItem;
        
        private WinMenuItem mUIConverttoApplicationMenuItem;
        
        private WinMenuItem mUIAddApplicationPoolMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64HjelpCOPYRIGWindow : WinWindow
    {
        
        public UIGatver64HjelpCOPYRIGWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "HH Parent";
            this.WindowTitles.Add("Gat");
            this.WindowTitles.Add("HTML Help");
            #endregion
        }
        
        #region Properties
        public UIGatver64HjelpCOPYRIGTitleBar UIGatver64HjelpCOPYRIGTitleBar
        {
            get
            {
                if ((this.mUIGatver64HjelpCOPYRIGTitleBar == null))
                {
                    this.mUIGatver64HjelpCOPYRIGTitleBar = new UIGatver64HjelpCOPYRIGTitleBar(this);
                }
                return this.mUIGatver64HjelpCOPYRIGTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGatver64HjelpCOPYRIGTitleBar mUIGatver64HjelpCOPYRIGTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64HjelpCOPYRIGTitleBar : WinTitleBar
    {
        
        public UIGatver64HjelpCOPYRIGTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Gat.");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGat_iniWindow : WinWindow
    {
        
        public UIGat_iniWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat_ini";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Gat_ini");
            #endregion
        }
        
        #region Properties
        public UIGat_iniTitleBar UIGat_iniTitleBar
        {
            get
            {
                if ((this.mUIGat_iniTitleBar == null))
                {
                    this.mUIGat_iniTitleBar = new UIGat_iniTitleBar(this);
                }
                return this.mUIGat_iniTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGat_iniTitleBar mUIGat_iniTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGat_iniTitleBar : WinTitleBar
    {
        
        public UIGat_iniTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat_ini");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Gat_ini");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGat_noWindow : WinWindow
    {
        
        public UIGat_noWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat_no";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Gat_no");
            #endregion
        }
        
        #region Properties
        public UIGat_noTitleBar UIGat_noTitleBar
        {
            get
            {
                if ((this.mUIGat_noTitleBar == null))
                {
                    this.mUIGat_noTitleBar = new UIGat_noTitleBar(this);
                }
                return this.mUIGat_noTitleBar;
            }
        }
        
        public UIShellViewWindow1 UIShellViewWindow
        {
            get
            {
                if ((this.mUIShellViewWindow == null))
                {
                    this.mUIShellViewWindow = new UIShellViewWindow1(this);
                }
                return this.mUIShellViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIGat_noTitleBar mUIGat_noTitleBar;
        
        private UIShellViewWindow1 mUIShellViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGat_noTitleBar : WinTitleBar
    {
        
        public UIGat_noTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat_no");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Gat_no");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIShellViewWindow1 : WinWindow
    {
        
        public UIShellViewWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ShellView";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "SHELLDLL_DefView";
            this.WindowTitles.Add("Gat_no");
            #endregion
        }
        
        #region Properties
        public UIShellViewClient1 UIShellViewClient
        {
            get
            {
                if ((this.mUIShellViewClient == null))
                {
                    this.mUIShellViewClient = new UIShellViewClient1(this);
                }
                return this.mUIShellViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIShellViewClient1 mUIShellViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIShellViewClient1 : WinClient
    {
        
        public UIShellViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Shell Folder View";
            this.WindowTitles.Add("Gat_no");
            #endregion
        }
        
        #region Properties
        public WinList UIItemsViewList
        {
            get
            {
                if ((this.mUIItemsViewList == null))
                {
                    this.mUIItemsViewList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemsViewList.SearchProperties[WinList.PropertyNames.Name] = "Items View";
                    this.mUIItemsViewList.WindowTitles.Add("Gat_no");
                    #endregion
                }
                return this.mUIItemsViewList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemsViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64138140ASCLAvWindow2 : WinWindow
    {
        
        public UIGatver64138140ASCLAvWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow20 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow20(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow20 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow20 : WinWindow
    {
        
        public UIItemWindow20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT4000BekreftWindow : WinWindow
    {
        
        public UIGT4000BekreftWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GT-4000 - Bekreft";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("GT-4000 - Bekreft");
            this.WindowTitles.Add("GT-4000 - Bekräfta");
            #endregion
        }
        
        #region Properties
        public UIItemWindow23 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow23(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow23 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow23 : WinWindow
    {
        
        public UIItemWindow23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("GT-4000 - Bekreft");
            #endregion
        }
        
        #region Properties
        public UIGT4000BekreftClient UIGT4000BekreftClient
        {
            get
            {
                if ((this.mUIGT4000BekreftClient == null))
                {
                    this.mUIGT4000BekreftClient = new UIGT4000BekreftClient(this);
                }
                return this.mUIGT4000BekreftClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGT4000BekreftClient mUIGT4000BekreftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGT4000BekreftClient : WinClient
    {
        
        public UIGT4000BekreftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("GT-4000 - Bekreft");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("GT-4000 - Bekreft");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRunningapplicationsWindow : WinWindow
    {
        
        public UIRunningapplicationsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Running applications";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSTaskSwWClass";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public UIRunningapplicationsToolBar UIRunningapplicationsToolBar
        {
            get
            {
                if ((this.mUIRunningapplicationsToolBar == null))
                {
                    this.mUIRunningapplicationsToolBar = new UIRunningapplicationsToolBar(this);
                }
                return this.mUIRunningapplicationsToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRunningapplicationsToolBar mUIRunningapplicationsToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRunningapplicationsToolBar : WinToolBar
    {
        
        public UIRunningapplicationsToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Running applications";
            this.WindowTitles.Add("Running applications");
            #endregion
        }
        
        #region Properties
        public WinButton UIInternetInformationSButton
        {
            get
            {
                if ((this.mUIInternetInformationSButton == null))
                {
                    this.mUIInternetInformationSButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIInternetInformationSButton.SearchProperties[WinButton.PropertyNames.Name] = "Internet Information Services (IIS) Manager";
                    this.mUIInternetInformationSButton.WindowTitles.Add("Running applications");
                    #endregion
                }
                return this.mUIInternetInformationSButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIInternetInformationSButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIProgramManagerWindow : WinWindow
    {
        
        public UIProgramManagerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Program Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Progman";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public UIDesktopList UIDesktopList
        {
            get
            {
                if ((this.mUIDesktopList == null))
                {
                    this.mUIDesktopList = new UIDesktopList(this);
                }
                return this.mUIDesktopList;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopList mUIDesktopList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDesktopList : WinList
    {
        
        public UIDesktopList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Desktop";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public WinListItem UIInternetInformationSListItem
        {
            get
            {
                if ((this.mUIInternetInformationSListItem == null))
                {
                    this.mUIInternetInformationSListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIInternetInformationSListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Internet Information Services (IIS) Manager";
                    this.mUIInternetInformationSListItem.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUIInternetInformationSListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIInternetInformationSListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIInternetInformationSWindow : WinWindow
    {
        
        public UIInternetInformationSWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Internet Information Services (IIS) Manager";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIItemWindow24 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow24(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UI_treeViewWindow UI_treeViewWindow
        {
            get
            {
                if ((this.mUI_treeViewWindow == null))
                {
                    this.mUI_treeViewWindow = new UI_treeViewWindow(this);
                }
                return this.mUI_treeViewWindow;
            }
        }
        
        public UI_listViewWindow UI_listViewWindow
        {
            get
            {
                if ((this.mUI_listViewWindow == null))
                {
                    this.mUI_listViewWindow = new UI_listViewWindow(this);
                }
                return this.mUI_listViewWindow;
            }
        }
        
        public UIInternetInformationSTitleBar UIInternetInformationSTitleBar
        {
            get
            {
                if ((this.mUIInternetInformationSTitleBar == null))
                {
                    this.mUIInternetInformationSTitleBar = new UIInternetInformationSTitleBar(this);
                }
                return this.mUIInternetInformationSTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow24 mUIItemWindow;
        
        private UI_treeViewWindow mUI_treeViewWindow;
        
        private UI_listViewWindow mUI_listViewWindow;
        
        private UIInternetInformationSTitleBar mUIInternetInformationSTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow24 : WinWindow
    {
        
        public UIItemWindow24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.SysTreeView32", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIItemTree UIItemTree
        {
            get
            {
                if ((this.mUIItemTree == null))
                {
                    this.mUIItemTree = new UIItemTree(this);
                }
                return this.mUIItemTree;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTree mUIItemTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemTree : WinTree
    {
        
        public UIItemTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIATMANGATSOFTgeigTreeItem
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIATMANGATSOFTgeigTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "AT-MAN (GATSOFT\\geig)";
                    this.mUIATMANGATSOFTgeigTreeItem.SearchProperties["Value"] = "0";
                    this.mUIATMANGATSOFTgeigTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIATMANGATSOFTgeigTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIATMANGATSOFTgeigTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_treeViewWindow : WinWindow
    {
        
        public UI_treeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_treeView";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIATMANGATSOFTgeigTreeItem UIATMANGATSOFTgeigTreeItem
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem = new UIATMANGATSOFTgeigTreeItem(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem;
            }
        }
        
        public UIATMANGATSOFTgeigTreeItem1 UIATMANGATSOFTgeigTreeItem1
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem1 == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem1 = new UIATMANGATSOFTgeigTreeItem1(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem1;
            }
        }
        
        public UIATMANGATSOFTgeigTreeItem2 UIATMANGATSOFTgeigTreeItem2
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem2 == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem2 = new UIATMANGATSOFTgeigTreeItem2(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem2;
            }
        }
        
        public UIATMANGATSOFTgeigTreeItem3 UIATMANGATSOFTgeigTreeItem3
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem3 == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem3 = new UIATMANGATSOFTgeigTreeItem3(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem3;
            }
        }
        
        public UIATMANGATSOFTgeigTreeItem4 UIATMANGATSOFTgeigTreeItem4
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem4 == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem4 = new UIATMANGATSOFTgeigTreeItem4(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem4;
            }
        }
        
        public UIATMANGATSOFTgeigTreeItem5 UIATMANGATSOFTgeigTreeItem5
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem5 == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem5 = new UIATMANGATSOFTgeigTreeItem5(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem5;
            }
        }
        
        public UIATMANGATSOFTgeigTreeItem6 UIATMANGATSOFTgeigTreeItem6
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem6 == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem6 = new UIATMANGATSOFTgeigTreeItem6(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem6;
            }
        }
        
        public UIATMANGATSOFTgeigTreeItem7 UIATMANGATSOFTgeigTreeItem7
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem7 == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem7 = new UIATMANGATSOFTgeigTreeItem7(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem7;
            }
        }
        
        public UIATMANGATSOFTgeigTreeItem8 UIATMANGATSOFTgeigTreeItem8
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem8 == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem8 = new UIATMANGATSOFTgeigTreeItem8(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem8;
            }
        }
        #endregion
        
        #region Fields
        private UIATMANGATSOFTgeigTreeItem mUIATMANGATSOFTgeigTreeItem;
        
        private UIATMANGATSOFTgeigTreeItem1 mUIATMANGATSOFTgeigTreeItem1;
        
        private UIATMANGATSOFTgeigTreeItem2 mUIATMANGATSOFTgeigTreeItem2;
        
        private UIATMANGATSOFTgeigTreeItem3 mUIATMANGATSOFTgeigTreeItem3;
        
        private UIATMANGATSOFTgeigTreeItem4 mUIATMANGATSOFTgeigTreeItem4;
        
        private UIATMANGATSOFTgeigTreeItem5 mUIATMANGATSOFTgeigTreeItem5;
        
        private UIATMANGATSOFTgeigTreeItem6 mUIATMANGATSOFTgeigTreeItem6;
        
        private UIATMANGATSOFTgeigTreeItem7 mUIATMANGATSOFTgeigTreeItem7;
        
        private UIATMANGATSOFTgeigTreeItem8 mUIATMANGATSOFTgeigTreeItem8;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIATMANGATSOFTgeigTreeItem : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        
        public UISitesTreeItem UISitesTreeItem
        {
            get
            {
                if ((this.mUISitesTreeItem == null))
                {
                    this.mUISitesTreeItem = new UISitesTreeItem(this);
                }
                return this.mUISitesTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIApplicationPoolsTreeItem;
        
        private UISitesTreeItem mUISitesTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISitesTreeItem : WinTreeItem
    {
        
        public UISitesTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Sites";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIDefaultWebSiteTreeItem UIDefaultWebSiteTreeItem
        {
            get
            {
                if ((this.mUIDefaultWebSiteTreeItem == null))
                {
                    this.mUIDefaultWebSiteTreeItem = new UIDefaultWebSiteTreeItem(this);
                }
                return this.mUIDefaultWebSiteTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultWebSiteTreeItem mUIDefaultWebSiteTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDefaultWebSiteTreeItem : WinTreeItem
    {
        
        public UIDefaultWebSiteTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Default Web Site";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIMinGat642TreeItem
        {
            get
            {
                if ((this.mUIMinGat642TreeItem == null))
                {
                    this.mUIMinGat642TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIMinGat642TreeItem.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "MinGat", PropertyExpressionOperator.Contains));
                    this.mUIMinGat642TreeItem.SearchProperties["Value"] = "3";
                    this.mUIMinGat642TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIMinGat642TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIMinGat642TreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIMinGat642TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIMinGat642TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIATMANGATSOFTgeigTreeItem1 : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIApplicationPoolsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIATMANGATSOFTgeigTreeItem2 : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIApplicationPoolsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIATMANGATSOFTgeigTreeItem3 : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        
        public UISitesTreeItem1 UISitesTreeItem
        {
            get
            {
                if ((this.mUISitesTreeItem == null))
                {
                    this.mUISitesTreeItem = new UISitesTreeItem1(this);
                }
                return this.mUISitesTreeItem;
            }
        }
        
        public UISitesTreeItem11 UISitesTreeItem1
        {
            get
            {
                if ((this.mUISitesTreeItem1 == null))
                {
                    this.mUISitesTreeItem1 = new UISitesTreeItem11(this);
                }
                return this.mUISitesTreeItem1;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIApplicationPoolsTreeItem;
        
        private UISitesTreeItem1 mUISitesTreeItem;
        
        private UISitesTreeItem11 mUISitesTreeItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISitesTreeItem1 : WinTreeItem
    {
        
        public UISitesTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Sites";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIDefaultWebSiteTreeItem1 UIDefaultWebSiteTreeItem
        {
            get
            {
                if ((this.mUIDefaultWebSiteTreeItem == null))
                {
                    this.mUIDefaultWebSiteTreeItem = new UIDefaultWebSiteTreeItem1(this);
                }
                return this.mUIDefaultWebSiteTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultWebSiteTreeItem1 mUIDefaultWebSiteTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDefaultWebSiteTreeItem1 : WinTreeItem
    {
        
        public UIDefaultWebSiteTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Default Web Site";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIGatWs1TreeItem
        {
            get
            {
                if ((this.mUIGatWs1TreeItem == null))
                {
                    this.mUIGatWs1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIGatWs1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "GatWs1";
                    this.mUIGatWs1TreeItem.SearchProperties["Value"] = "3";
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGatWs1TreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs1TreeItem;
            }
        }
        
        public WinTreeItem UIGatWs2TreeItem
        {
            get
            {
                if ((this.mUIGatWs2TreeItem == null))
                {
                    this.mUIGatWs2TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIGatWs2TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "GatWs2";
                    this.mUIGatWs2TreeItem.SearchProperties["Value"] = "3";
                    this.mUIGatWs2TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIGatWs2TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGatWs2TreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs2TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIGatWs1TreeItem;
        
        private WinTreeItem mUIGatWs2TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISitesTreeItem11 : WinTreeItem
    {
        
        public UISitesTreeItem11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Sites";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIDefaultWebSiteTreeItem2 UIDefaultWebSiteTreeItem
        {
            get
            {
                if ((this.mUIDefaultWebSiteTreeItem == null))
                {
                    this.mUIDefaultWebSiteTreeItem = new UIDefaultWebSiteTreeItem2(this);
                }
                return this.mUIDefaultWebSiteTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultWebSiteTreeItem2 mUIDefaultWebSiteTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDefaultWebSiteTreeItem2 : WinTreeItem
    {
        
        public UIDefaultWebSiteTreeItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Default Web Site";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIGatWs1TreeItem
        {
            get
            {
                if ((this.mUIGatWs1TreeItem == null))
                {
                    this.mUIGatWs1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIGatWs1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "GatWs1";
                    this.mUIGatWs1TreeItem.SearchProperties["Value"] = "3";
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGatWs1TreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIGatWs1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIATMANGATSOFTgeigTreeItem4 : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIApplicationPoolsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIATMANGATSOFTgeigTreeItem5 : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UISitesTreeItem2 UISitesTreeItem
        {
            get
            {
                if ((this.mUISitesTreeItem == null))
                {
                    this.mUISitesTreeItem = new UISitesTreeItem2(this);
                }
                return this.mUISitesTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UISitesTreeItem2 mUISitesTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISitesTreeItem2 : WinTreeItem
    {
        
        public UISitesTreeItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Sites";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIDefaultWebSiteTreeItem3 UIDefaultWebSiteTreeItem
        {
            get
            {
                if ((this.mUIDefaultWebSiteTreeItem == null))
                {
                    this.mUIDefaultWebSiteTreeItem = new UIDefaultWebSiteTreeItem3(this);
                }
                return this.mUIDefaultWebSiteTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultWebSiteTreeItem3 mUIDefaultWebSiteTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDefaultWebSiteTreeItem3 : WinTreeItem
    {
        
        public UIDefaultWebSiteTreeItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Default Web Site";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIGatWs1TreeItem
        {
            get
            {
                if ((this.mUIGatWs1TreeItem == null))
                {
                    this.mUIGatWs1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIGatWs1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "GatWs1";
                    this.mUIGatWs1TreeItem.SearchProperties["Value"] = "3";
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGatWs1TreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIGatWs1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIATMANGATSOFTgeigTreeItem6 : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UISitesTreeItem3 UISitesTreeItem
        {
            get
            {
                if ((this.mUISitesTreeItem == null))
                {
                    this.mUISitesTreeItem = new UISitesTreeItem3(this);
                }
                return this.mUISitesTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UISitesTreeItem3 mUISitesTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISitesTreeItem3 : WinTreeItem
    {
        
        public UISitesTreeItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Sites";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIDefaultWebSiteTreeItem4 UIDefaultWebSiteTreeItem
        {
            get
            {
                if ((this.mUIDefaultWebSiteTreeItem == null))
                {
                    this.mUIDefaultWebSiteTreeItem = new UIDefaultWebSiteTreeItem4(this);
                }
                return this.mUIDefaultWebSiteTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultWebSiteTreeItem4 mUIDefaultWebSiteTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDefaultWebSiteTreeItem4 : WinTreeItem
    {
        
        public UIDefaultWebSiteTreeItem4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Default Web Site";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIGatWs1TreeItem
        {
            get
            {
                if ((this.mUIGatWs1TreeItem == null))
                {
                    this.mUIGatWs1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIGatWs1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "GatWs1";
                    this.mUIGatWs1TreeItem.SearchProperties["Value"] = "3";
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGatWs1TreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIGatWs1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIATMANGATSOFTgeigTreeItem7 : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UISitesTreeItem4 UISitesTreeItem
        {
            get
            {
                if ((this.mUISitesTreeItem == null))
                {
                    this.mUISitesTreeItem = new UISitesTreeItem4(this);
                }
                return this.mUISitesTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UISitesTreeItem4 mUISitesTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISitesTreeItem4 : WinTreeItem
    {
        
        public UISitesTreeItem4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Sites";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIDefaultWebSiteTreeItem5 UIDefaultWebSiteTreeItem
        {
            get
            {
                if ((this.mUIDefaultWebSiteTreeItem == null))
                {
                    this.mUIDefaultWebSiteTreeItem = new UIDefaultWebSiteTreeItem5(this);
                }
                return this.mUIDefaultWebSiteTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultWebSiteTreeItem5 mUIDefaultWebSiteTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDefaultWebSiteTreeItem5 : WinTreeItem
    {
        
        public UIDefaultWebSiteTreeItem5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Default Web Site";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIGatWs2TreeItem
        {
            get
            {
                if ((this.mUIGatWs2TreeItem == null))
                {
                    this.mUIGatWs2TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIGatWs2TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "GatWs2";
                    this.mUIGatWs2TreeItem.SearchProperties["Value"] = "3";
                    this.mUIGatWs2TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIGatWs2TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGatWs2TreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs2TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIGatWs2TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIATMANGATSOFTgeigTreeItem8 : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIApplicationPoolsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_listViewWindow : WinWindow
    {
        
        public UI_listViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_listView";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UI_listViewList UI_listViewList
        {
            get
            {
                if ((this.mUI_listViewList == null))
                {
                    this.mUI_listViewList = new UI_listViewList(this);
                }
                return this.mUI_listViewList;
            }
        }
        #endregion
        
        #region Fields
        private UI_listViewList mUI_listViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_listViewList : WinList
    {
        
        public UI_listViewList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Application Pools";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinListItem UIMinGatListItem
        {
            get
            {
                if ((this.mUIMinGatListItem == null))
                {
                    this.mUIMinGatListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIMinGatListItem.SearchProperties[WinListItem.PropertyNames.Name] = "MinGat";
                    this.mUIMinGatListItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIMinGatListItem;
            }
        }
        
        public WinListItem UIGatWs2ListItem
        {
            get
            {
                if ((this.mUIGatWs2ListItem == null))
                {
                    this.mUIGatWs2ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIGatWs2ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "GatWs2";
                    this.mUIGatWs2ListItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs2ListItem;
            }
        }
        
        public WinListItem UIGatWs1ListItem
        {
            get
            {
                if ((this.mUIGatWs1ListItem == null))
                {
                    this.mUIGatWs1ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIGatWs1ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "GatWs1";
                    this.mUIGatWs1ListItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIMinGatListItem;
        
        private WinListItem mUIGatWs2ListItem;
        
        private WinListItem mUIGatWs1ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIInternetInformationSTitleBar : WinTitleBar
    {
        
        public UIInternetInformationSTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIConfirmRemoveWindow : WinWindow
    {
        
        public UIConfirmRemoveWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Confirm Remove";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Confirm Remove");
            #endregion
        }
        
        #region Properties
        public UIYesWindow1 UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow1(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow1 mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYesWindow1 : WinWindow
    {
        
        public UIYesWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Confirm Remove");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Confirm Remove");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddApplicationWindow : WinWindow
    {
        
        public UIAddApplicationWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Add Application";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add Application");
            #endregion
        }
        
        #region Properties
        public UISelectWindow UISelectWindow
        {
            get
            {
                if ((this.mUISelectWindow == null))
                {
                    this.mUISelectWindow = new UISelectWindow(this);
                }
                return this.mUISelectWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISelectWindow mUISelectWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISelectWindow : WinWindow
    {
        
        public UISelectWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_selectApplicationPoolButton";
            this.WindowTitles.Add("Add Application");
            #endregion
        }
        
        #region Properties
        public WinButton UISelectButton
        {
            get
            {
                if ((this.mUISelectButton == null))
                {
                    this.mUISelectButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISelectButton.SearchProperties[WinButton.PropertyNames.Name] = "Select...";
                    this.mUISelectButton.WindowTitles.Add("Add Application");
                    #endregion
                }
                return this.mUISelectButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISelectButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_okButton";
            this.WindowTitles.Add("Add Application");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Add Application");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISelectApplicationPooWindow : WinWindow
    {
        
        public UISelectApplicationPooWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Select Application Pool";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Select Application Pool");
            #endregion
        }
        
        #region Properties
        public UI_applicationPoolNameWindow UI_applicationPoolNameWindow
        {
            get
            {
                if ((this.mUI_applicationPoolNameWindow == null))
                {
                    this.mUI_applicationPoolNameWindow = new UI_applicationPoolNameWindow(this);
                }
                return this.mUI_applicationPoolNameWindow;
            }
        }
        
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_applicationPoolNameWindow mUI_applicationPoolNameWindow;
        
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_applicationPoolNameWindow : WinWindow
    {
        
        public UI_applicationPoolNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_applicationPoolNameComboBox";
            this.WindowTitles.Add("Select Application Pool");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIApplicationpoolComboBox
        {
            get
            {
                if ((this.mUIApplicationpoolComboBox == null))
                {
                    this.mUIApplicationpoolComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIApplicationpoolComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Application pool:";
                    this.mUIApplicationpoolComboBox.WindowTitles.Add("Select Application Pool");
                    #endregion
                }
                return this.mUIApplicationpoolComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIApplicationpoolComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_okButton";
            this.WindowTitles.Add("Select Application Pool");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Select Application Pool");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAppSettingsconfigNotWindow : WinWindow
    {
        
        public UIAppSettingsconfigNotWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "appSettings.config - Notepad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Notepad";
            this.WindowTitles.Add("appSettings.config - Notepad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow25 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow25(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIApplicationMenuBar UIApplicationMenuBar
        {
            get
            {
                if ((this.mUIApplicationMenuBar == null))
                {
                    this.mUIApplicationMenuBar = new UIApplicationMenuBar(this);
                }
                return this.mUIApplicationMenuBar;
            }
        }
        
        public UIAppSettingsconfigNotTitleBar UIAppSettingsconfigNotTitleBar
        {
            get
            {
                if ((this.mUIAppSettingsconfigNotTitleBar == null))
                {
                    this.mUIAppSettingsconfigNotTitleBar = new UIAppSettingsconfigNotTitleBar(this);
                }
                return this.mUIAppSettingsconfigNotTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow25 mUIItemWindow;
        
        private UIApplicationMenuBar mUIApplicationMenuBar;
        
        private UIAppSettingsconfigNotTitleBar mUIAppSettingsconfigNotTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow25 : WinWindow
    {
        
        public UIItemWindow25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "15";
            this.WindowTitles.Add("appSettings.config - Notepad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("appSettings.config - Notepad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIApplicationMenuBar : WinMenuBar
    {
        
        public UIApplicationMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
            this.WindowTitles.Add("appSettings.config - Notepad");
            #endregion
        }
        
        #region Properties
        public UIFileMenuItem UIFileMenuItem
        {
            get
            {
                if ((this.mUIFileMenuItem == null))
                {
                    this.mUIFileMenuItem = new UIFileMenuItem(this);
                }
                return this.mUIFileMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFileMenuItem mUIFileMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIFileMenuItem : WinMenuItem
    {
        
        public UIFileMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "File";
            this.WindowTitles.Add("appSettings.config - Notepad");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UISaveCtrlSMenuItem
        {
            get
            {
                if ((this.mUISaveCtrlSMenuItem == null))
                {
                    this.mUISaveCtrlSMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUISaveCtrlSMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Save\tCtrl+S";
                    this.mUISaveCtrlSMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUISaveCtrlSMenuItem.WindowTitles.Add("appSettings.config - Notepad");
                    #endregion
                }
                return this.mUISaveCtrlSMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUISaveCtrlSMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAppSettingsconfigNotTitleBar : WinTitleBar
    {
        
        public UIAppSettingsconfigNotTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("appSettings.config - Notepad");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("appSettings.config - Notepad");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINotepadWindow : WinWindow
    {
        
        public UINotepadWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Notepad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Notepad");
            #endregion
        }
        
        #region Properties
        public UINotepadPane UINotepadPane
        {
            get
            {
                if ((this.mUINotepadPane == null))
                {
                    this.mUINotepadPane = new UINotepadPane(this);
                }
                return this.mUINotepadPane;
            }
        }
        #endregion
        
        #region Fields
        private UINotepadPane mUINotepadPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINotepadPane : WinPane
    {
        
        public UINotepadPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Notepad";
            this.WindowTitles.Add("Notepad");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Notepad");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddApplicationPoolWindow : WinWindow
    {
        
        public UIAddApplicationPoolWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Add Application Pool";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add Application Pool");
            #endregion
        }
        
        #region Properties
        public UI_applicationPoolNameWindow1 UI_applicationPoolNameWindow
        {
            get
            {
                if ((this.mUI_applicationPoolNameWindow == null))
                {
                    this.mUI_applicationPoolNameWindow = new UI_applicationPoolNameWindow1(this);
                }
                return this.mUI_applicationPoolNameWindow;
            }
        }
        
        public UI_applicationPoolVersWindow UI_applicationPoolVersWindow
        {
            get
            {
                if ((this.mUI_applicationPoolVersWindow == null))
                {
                    this.mUI_applicationPoolVersWindow = new UI_applicationPoolVersWindow(this);
                }
                return this.mUI_applicationPoolVersWindow;
            }
        }
        
        public UIOKWindow2 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow2(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_applicationPoolNameWindow1 mUI_applicationPoolNameWindow;
        
        private UI_applicationPoolVersWindow mUI_applicationPoolVersWindow;
        
        private UIOKWindow2 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_applicationPoolNameWindow1 : WinWindow
    {
        
        public UI_applicationPoolNameWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_applicationPoolNameTextBox";
            this.WindowTitles.Add("Add Application Pool");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_applicationPoolNameEdit
        {
            get
            {
                if ((this.mUI_applicationPoolNameEdit == null))
                {
                    this.mUI_applicationPoolNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_applicationPoolNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name:";
                    this.mUI_applicationPoolNameEdit.WindowTitles.Add("Add Application Pool");
                    #endregion
                }
                return this.mUI_applicationPoolNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_applicationPoolNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UI_applicationPoolVersWindow : WinWindow
    {
        
        public UI_applicationPoolVersWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_applicationPoolVersionComboBox";
            this.WindowTitles.Add("Add Application Pool");
            #endregion
        }
        
        #region Properties
        public WinComboBox UINETCLRversionComboBox
        {
            get
            {
                if ((this.mUINETCLRversionComboBox == null))
                {
                    this.mUINETCLRversionComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUINETCLRversionComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = ".NET CLR version:";
                    this.mUINETCLRversionComboBox.WindowTitles.Add("Add Application Pool");
                    #endregion
                }
                return this.mUINETCLRversionComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUINETCLRversionComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOKWindow2 : WinWindow
    {
        
        public UIOKWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_okButton";
            this.WindowTitles.Add("Add Application Pool");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Add Application Pool");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIConnectionStringsconWindow : WinWindow
    {
        
        public UIConnectionStringsconWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "connectionStrings.config - Notepad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Notepad";
            this.WindowTitles.Add("connectionStrings.config - Notepad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow26 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow26(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIConnectionStringsconTitleBar UIConnectionStringsconTitleBar
        {
            get
            {
                if ((this.mUIConnectionStringsconTitleBar == null))
                {
                    this.mUIConnectionStringsconTitleBar = new UIConnectionStringsconTitleBar(this);
                }
                return this.mUIConnectionStringsconTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow26 mUIItemWindow;
        
        private UIConnectionStringsconTitleBar mUIConnectionStringsconTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow26 : WinWindow
    {
        
        public UIItemWindow26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "15";
            this.WindowTitles.Add("connectionStrings.config - Notepad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("connectionStrings.config - Notepad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIConnectionStringsconTitleBar : WinTitleBar
    {
        
        public UIConnectionStringsconTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("connectionStrings.config - Notepad");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("connectionStrings.config - Notepad");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILogginnMinGatv642383Window : BrowserWindow
    {
        
        public UILogginnMinGatv642383Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Logg inn - MinGat v.6.4.2.38306";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Logg inn - MinGat v.6.4.2.38306");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UILogginnMinGatv642383Document UILogginnMinGatv642383Document
        {
            get
            {
                if ((this.mUILogginnMinGatv642383Document == null))
                {
                    this.mUILogginnMinGatv642383Document = new UILogginnMinGatv642383Document(this);
                }
                return this.mUILogginnMinGatv642383Document;
            }
        }
        #endregion
        
        #region Fields
        private UILogginnMinGatv642383Document mUILogginnMinGatv642383Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILogginnMinGatv642383Document : HtmlDocument
    {
        
        public UILogginnMinGatv642383Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Logg inn - MinGat v.6.4.2.38306";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/MinGat";
            this.WindowTitles.Add("Logg inn - MinGat v.6.4.2.38306");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIBrukernavnEdit
        {
            get
            {
                if ((this.mUIBrukernavnEdit == null))
                {
                    this.mUIBrukernavnEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIBrukernavnEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "username";
                    this.mUIBrukernavnEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "username";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Brukernavn*";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"username\" id=\"username\" type=\"text";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIBrukernavnEdit.WindowTitles.Add("Logg inn - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIBrukernavnEdit;
            }
        }
        
        public HtmlEdit UIPassordEdit
        {
            get
            {
                if ((this.mUIPassordEdit == null))
                {
                    this.mUIPassordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPassordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "password";
                    this.mUIPassordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "password";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Passord*";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"password\" id=\"password\" type=\"pass";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIPassordEdit.WindowTitles.Add("Logg inn - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIPassordEdit;
            }
        }
        
        public UILogginnButton UILogginnButton
        {
            get
            {
                if ((this.mUILogginnButton == null))
                {
                    this.mUILogginnButton = new UILogginnButton(this);
                }
                return this.mUILogginnButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIBrukernavnEdit;
        
        private HtmlEdit mUIPassordEdit;
        
        private UILogginnButton mUILogginnButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILogginnButton : HtmlButton
    {
        
        public UILogginnButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlButton.PropertyNames.Id] = "btnLoginPage1";
            this.SearchProperties[HtmlButton.PropertyNames.Name] = null;
            this.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "\r\n\r\n\r\n\r\n\r\n\r\nLogg inn";
            this.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
            this.FilterProperties[HtmlButton.PropertyNames.Title] = null;
            this.FilterProperties[HtmlButton.PropertyNames.Class] = "gs-button kind-normal-blue type-button ui-icon-size-normal";
            this.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"gs-button kind-normal-blue type-b";
            this.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Logg inn - MinGat v.6.4.2.38306");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UILogginnPane
        {
            get
            {
                if ((this.mUILogginnPane == null))
                {
                    this.mUILogginnPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUILogginnPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUILogginnPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Logg inn";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-caption no-select";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-caption no-select\"";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "25";
                    this.mUILogginnPane.WindowTitles.Add("Logg inn - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUILogginnPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUILogginnPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStartsidenMinGatv642Window : BrowserWindow
    {
        
        public UIStartsidenMinGatv642Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Startsiden - MinGat v.", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Startsiden - MinGat v.");
            this.WindowTitles.Add("Startsidan - MinGat v.");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIStartsidenMinGatv642Document UIStartsidenMinGatv642Document
        {
            get
            {
                if ((this.mUIStartsidenMinGatv642Document == null))
                {
                    this.mUIStartsidenMinGatv642Document = new UIStartsidenMinGatv642Document(this);
                }
                return this.mUIStartsidenMinGatv642Document;
            }
        }
        
        public UIPåminnelserMinGatv64Document UIPåminnelserMinGatv64Document
        {
            get
            {
                if ((this.mUIPåminnelserMinGatv64Document == null))
                {
                    this.mUIPåminnelserMinGatv64Document = new UIPåminnelserMinGatv64Document(this);
                }
                return this.mUIPåminnelserMinGatv64Document;
            }
        }
        
        public UIStartsidenMinGatv642TitleBar UIStartsidenMinGatv642TitleBar
        {
            get
            {
                if ((this.mUIStartsidenMinGatv642TitleBar == null))
                {
                    this.mUIStartsidenMinGatv642TitleBar = new UIStartsidenMinGatv642TitleBar(this);
                }
                return this.mUIStartsidenMinGatv642TitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIStartsidenMinGatv642Document mUIStartsidenMinGatv642Document;
        
        private UIPåminnelserMinGatv64Document mUIPåminnelserMinGatv64Document;
        
        private UIStartsidenMinGatv642TitleBar mUIStartsidenMinGatv642TitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStartsidenMinGatv642Document : HtmlDocument
    {
        
        public UIStartsidenMinGatv642Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Startsiden - MinGat v.";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/MinGat/Employee/Home";
            this.WindowTitles.Add("Startsiden - MinGat v.");
            this.WindowTitles.Add("Startsidan - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        
        public HtmlHyperlink UIMinGatHelpFilePageHyperlink
        {
            get
            {
                if ((this.mUIMinGatHelpFilePageHyperlink == null))
                {
                    this.mUIMinGatHelpFilePageHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMinGatHelpFilePageHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "lnkHeader_Help";
                    //this.mUIMinGatHelpFilePageHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    //this.mUIMinGatHelpFilePageHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_blank";
                    //this.mUIMinGatHelpFilePageHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
                    this.mUIMinGatHelpFilePageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/HelpFile/Page";
                    //this.mUIMinGatHelpFilePageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMinGatHelpFilePageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/MinGat/HelpFile/Page?pageId=Employee_Home";
                    //this.mUIMinGatHelpFilePageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIMinGatHelpFilePageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"lnkHeader_Help\" href=\"/MinGat/HelpFi";
                    //this.mUIMinGatHelpFilePageHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIMinGatHelpFilePageHyperlink.WindowTitles.Add("Startsiden - MinGat v.");
                    this.mUIMinGatHelpFilePageHyperlink.WindowTitles.Add("Startsidan - MinGat v.");
                    #endregion
                }
                return this.mUIMinGatHelpFilePageHyperlink;
            }
        }
        
        public UIBodyWrapperPane UIBodyWrapperPane
        {
            get
            {
                if ((this.mUIBodyWrapperPane == null))
                {
                    this.mUIBodyWrapperPane = new UIBodyWrapperPane(this);
                }
                return this.mUIBodyWrapperPane;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom mUIRootQuickNavCustom;
        
        private HtmlHyperlink mUIMinGatHelpFilePageHyperlink;
        
        private UIBodyWrapperPane mUIBodyWrapperPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRootQuickNavCustom : HtmlCustom
    {
        
        public UIRootQuickNavCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Startsiden - MinGat v.6.4.2.38306");
            this.WindowTitles.Add("Min kalender - MinGat v.6.4.2.38306");
            this.WindowTitles.Add("Vaktbok, mandag 23.05.2016 - MinGat v.6.4.2.38306");
            this.WindowTitles.Add("Oppgaveoversikt - MinGat v.6.4.2.38306");
            this.WindowTitles.Add("Ukevisning - MinGat v.6.4.2.38306");
            this.WindowTitles.Add("Mine banker - MinGat v.6.4.2.38306");
            this.WindowTitles.Add("Forespørsler - MinGat v.6.4.2.38306");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.sta" +
                        "rtpage\')\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "139";
                    this.mUIItemPane.WindowTitles.Add("Startsiden - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/MinGat/Employee/Home#!/start/";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/start/\"";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIItemHyperlink.WindowTitles.Add("Startsiden - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        
        public HtmlDiv UIItemPane1
        {
            get
            {
                if ((this.mUIItemPane1 == null))
                {
                    this.mUIItemPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.cal" +
                        "endar\')\"";
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "140";
                    this.mUIItemPane1.WindowTitles.Add("Startsiden - MinGat v.6.4.2.38306");
                    this.mUIItemPane1.WindowTitles.Add("Min kalender - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemPane1;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink1
        {
            get
            {
                if ((this.mUIItemHyperlink1 == null))
                {
                    this.mUIItemHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/MinGat/Employee/Home#!/employee/mycalendar/";
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/employee/mycalendar/\"";
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIItemHyperlink1.WindowTitles.Add("Startsiden - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemHyperlink1;
            }
        }
        
        public HtmlDiv UIItem010Pane
        {
            get
            {
                if ((this.mUIItem010Pane == null))
                {
                    this.mUIItem010Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem010Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem010Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "0 \r\n   \r\n\r\n 1 \r\n   \r\n\r\n 0 \r\n  ";
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "mg-quick-nav-group system-group";
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"mg-quick-nav-group system-group\" data-bind=\"visible: true\"";
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "138";
                    this.mUIItem010Pane.WindowTitles.Add("Min kalender - MinGat v.6.4.2.38306");
                    this.mUIItem010Pane.WindowTitles.Add("Vaktbok, mandag 23.05.2016 - MinGat v.6.4.2.38306");
                    this.mUIItem010Pane.WindowTitles.Add("Oppgaveoversikt - MinGat v.6.4.2.38306");
                    this.mUIItem010Pane.WindowTitles.Add("Mine banker - MinGat v.6.4.2.38306");
                    this.mUIItem010Pane.WindowTitles.Add("Forespørsler - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItem010Pane;
            }
        }
        
        public HtmlDiv UIItemPane2
        {
            get
            {
                if ((this.mUIItemPane2 == null))
                {
                    this.mUIItemPane2 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane2.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane2.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.shi" +
                        "ftbook\')\"";
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "141";
                    this.mUIItemPane2.WindowTitles.Add("Min kalender - MinGat v.6.4.2.38306");
                    this.mUIItemPane2.WindowTitles.Add("Vaktbok, mandag 23.05.2016 - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemPane2;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink2
        {
            get
            {
                if ((this.mUIItemHyperlink2 == null))
                {
                    this.mUIItemHyperlink2 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/MinGat/Employee/Home#!/department/shiftbook/";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/shiftbook/\"";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIItemHyperlink2.WindowTitles.Add("Min kalender - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemHyperlink2;
            }
        }
        
        public HtmlDiv UIItemPane3
        {
            get
            {
                if ((this.mUIItemPane3 == null))
                {
                    this.mUIItemPane3 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane3.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane3.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.tas" +
                        "koverview\')\"";
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "142";
                    this.mUIItemPane3.WindowTitles.Add("Vaktbok, mandag 23.05.2016 - MinGat v.6.4.2.38306");
                    this.mUIItemPane3.WindowTitles.Add("Oppgaveoversikt - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemPane3;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink3
        {
            get
            {
                if ((this.mUIItemHyperlink3 == null))
                {
                    this.mUIItemHyperlink3 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/MinGat/Employee/Home#!/department/taskoverview/";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/taskoverview/\"";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIItemHyperlink3.WindowTitles.Add("Vaktbok, mandag 23.05.2016 - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemHyperlink3;
            }
        }
        
        public HtmlDiv UIItemPane4
        {
            get
            {
                if ((this.mUIItemPane4 == null))
                {
                    this.mUIItemPane4 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane4.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane4.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane4.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane4.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane4.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane4.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.wee" +
                        "klist\')\"";
                    this.mUIItemPane4.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "143";
                    this.mUIItemPane4.WindowTitles.Add("Oppgaveoversikt - MinGat v.6.4.2.38306");
                    this.mUIItemPane4.WindowTitles.Add("Ukevisning - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemPane4;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink4
        {
            get
            {
                if ((this.mUIItemHyperlink4 == null))
                {
                    this.mUIItemHyperlink4 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink4.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink4.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink4.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink4.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/MinGat/Employee/Home#!/department/weeklist/";
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/weeklist/\"";
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIItemHyperlink4.WindowTitles.Add("Oppgaveoversikt - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemHyperlink4;
            }
        }
        
        public HtmlDiv UIItemPane5
        {
            get
            {
                if ((this.mUIItemPane5 == null))
                {
                    this.mUIItemPane5 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane5.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane5.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane5.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane5.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane5.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane5.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.ban" +
                        "ks\')\"";
                    this.mUIItemPane5.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "144";
                    this.mUIItemPane5.WindowTitles.Add("Ukevisning - MinGat v.6.4.2.38306");
                    this.mUIItemPane5.WindowTitles.Add("Mine banker - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemPane5;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink5
        {
            get
            {
                if ((this.mUIItemHyperlink5 == null))
                {
                    this.mUIItemHyperlink5 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink5.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink5.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink5.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink5.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/MinGat/Employee/Home#!/employee/mybanks/";
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/employee/mybanks/\"";
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIItemHyperlink5.WindowTitles.Add("Ukevisning - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemHyperlink5;
            }
        }
        
        public HtmlHyperlink UIItem0Hyperlink
        {
            get
            {
                if ((this.mUIItem0Hyperlink == null))
                {
                    this.mUIItem0Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " 0 \r\n ";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/MinGat/Employee/Home#!/selfservicelist/";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/selfservicelist/\"";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    this.mUIItem0Hyperlink.WindowTitles.Add("Mine banker - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItem0Hyperlink;
            }
        }
        
        public HtmlDiv UIItem0Pane
        {
            get
            {
                if ((this.mUIItem0Pane == null))
                {
                    this.mUIItem0Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem0Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem0Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "0 \r\n  ";
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.sel" +
                        "fservices\')\"";
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "145";
                    this.mUIItem0Pane.WindowTitles.Add("Forespørsler - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItem0Pane;
            }
        }
        
        public HtmlHyperlink UIItem1Hyperlink
        {
            get
            {
                if ((this.mUIItem1Hyperlink == null))
                {
                    this.mUIItem1Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItem1Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItem1Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItem1Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItem1Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " 1 \r\n ";
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/MinGat/Employee/Home#!/reminders/";
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/reminders/\"";
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "8";
                    this.mUIItem1Hyperlink.WindowTitles.Add("Forespørsler - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItem1Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        
        private HtmlHyperlink mUIItemHyperlink;
        
        private HtmlDiv mUIItemPane1;
        
        private HtmlHyperlink mUIItemHyperlink1;
        
        private HtmlDiv mUIItem010Pane;
        
        private HtmlDiv mUIItemPane2;
        
        private HtmlHyperlink mUIItemHyperlink2;
        
        private HtmlDiv mUIItemPane3;
        
        private HtmlHyperlink mUIItemHyperlink3;
        
        private HtmlDiv mUIItemPane4;
        
        private HtmlHyperlink mUIItemHyperlink4;
        
        private HtmlDiv mUIItemPane5;
        
        private HtmlHyperlink mUIItemHyperlink5;
        
        private HtmlHyperlink mUIItem0Hyperlink;
        
        private HtmlDiv mUIItem0Pane;
        
        private HtmlHyperlink mUIItem1Hyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBodyWrapperPane : HtmlDiv
    {
        
        public UIBodyWrapperPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "bodyWrapper";
            //this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Meny\r\n \r\n \r\n\r\n\r\n \r\nv.6.4.2.38306\r\n \r\n(AU";
            //this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "body-wrapper aftvf-blurable";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"body-wrapper aftvf-blurable\" id=\"bodyWrapper\" data-bind=\"css: { \'page-opti" +
                "ons-active\': PageOptionsActive, \'show-page-options\': PageOptionsVisible, \'show-p" +
                "age-options-ontop\': ShowPageOptionsAbove }\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Startsiden - MinGat v.");
            this.WindowTitles.Add("Startsidan - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIV64238306Pane
        {
            get
            {
                if ((this.mUIV64238306Pane == null))
                {
                    this.mUIV64238306Pane = new HtmlDiv(this);
                    #region Search Criteria
                    //this.mUIV64238306Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    //this.mUIV64238306Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    //this.mUIV64238306Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "v.6.4.2.38306";
                    //this.mUIV64238306Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIV64238306Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "mg-version";
                    this.mUIV64238306Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"mg-version\" data-bind=\"text: \'v.\' + MinGat.Application.versionNumber\"";
                    //this.mUIV64238306Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
                    this.mUIV64238306Pane.WindowTitles.Add("Startsiden - MinGat v.");
                    this.mUIV64238306Pane.WindowTitles.Add("Startsidan - MinGat v.");
                    
                    #endregion
                }
                return this.mUIV64238306Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIV64238306Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPåminnelserMinGatv64Document : HtmlDocument
    {
        
        public UIPåminnelserMinGatv64Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Påminnelser - MinGat v.6.4.2.38306";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/MinGat/Employee/Home#!/reminders/";
            this.WindowTitles.Add("Påminnelser - MinGat v.6.4.2.38306");
            #endregion
        }
        
        #region Properties
        public UIRemindersPagePane UIRemindersPagePane
        {
            get
            {
                if ((this.mUIRemindersPagePane == null))
                {
                    this.mUIRemindersPagePane = new UIRemindersPagePane(this);
                }
                return this.mUIRemindersPagePane;
            }
        }
        
        public UIBodyWrapperPane1 UIBodyWrapperPane
        {
            get
            {
                if ((this.mUIBodyWrapperPane == null))
                {
                    this.mUIBodyWrapperPane = new UIBodyWrapperPane1(this);
                }
                return this.mUIBodyWrapperPane;
            }
        }
        
        public UIMenuHeader_mainMenuPane UIMenuHeader_mainMenuPane
        {
            get
            {
                if ((this.mUIMenuHeader_mainMenuPane == null))
                {
                    this.mUIMenuHeader_mainMenuPane = new UIMenuHeader_mainMenuPane(this);
                }
                return this.mUIMenuHeader_mainMenuPane;
            }
        }
        #endregion
        
        #region Fields
        private UIRemindersPagePane mUIRemindersPagePane;
        
        private UIBodyWrapperPane1 mUIBodyWrapperPane;
        
        private UIMenuHeader_mainMenuPane mUIMenuHeader_mainMenuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRemindersPagePane : HtmlDiv
    {
        
        public UIRemindersPagePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "remindersPage";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Filter\r\n\r\n\r\nSystemmeldinger \r\n\r\n\r\n\r\n \r\nF";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"remindersPage\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "190";
            this.WindowTitles.Add("Påminnelser - MinGat v.6.4.2.38306");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISYSTEMTESTDATABASEDePane
        {
            get
            {
                if ((this.mUISYSTEMTESTDATABASEDePane == null))
                {
                    this.mUISYSTEMTESTDATABASEDePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUISYSTEMTESTDATABASEDePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISYSTEMTESTDATABASEDePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISYSTEMTESTDATABASEDePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SYSTEMTESTDATABASE!\r\n\r\n\r\n\r\n\r\nDette er MA";
                    this.mUISYSTEMTESTDATABASEDePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISYSTEMTESTDATABASEDePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "note note-blue";
                    this.mUISYSTEMTESTDATABASEDePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = @"class=""note note-blue"" data-bind=""mgReminderPageNote: { colorClass: ColorClass, title: Caption, subTitle: BodyCaption, html: Message, gotoUrl: Url, gotoUrlText: UrlText, gotoSameWin: true, bodyLinkUrl: CustomLinkUrl, bodyLinkText: CustomLinkText, attachmentUrl: AttachmentUrl, attachmentName: AttachmentName, forceDownloadAttachment: ForceDownloadAttachment, signature: From, readable: Readable, read: HasBeenRead }""";
                    this.mUISYSTEMTESTDATABASEDePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "250";
                    this.mUISYSTEMTESTDATABASEDePane.WindowTitles.Add("Påminnelser - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUISYSTEMTESTDATABASEDePane;
            }
        }
        
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "UL";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "sticky-notes";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"sticky-notes\" data-bind=\"foreach:";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Påminnelser - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISYSTEMTESTDATABASEDePane;
        
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBodyWrapperPane1 : HtmlDiv
    {
        
        public UIBodyWrapperPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "bodyWrapper";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Meny\r\n \r\n \r\n\r\n\r\n \r\nv.6.4.2.38306\r\n \r\n(AU";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "body-wrapper aftvf-blurable page-options-active";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"body-wrapper aftvf-blurable page-options-active\" id=\"bodyWrapper\" data-bin" +
                "d=\"css: { \'page-options-active\': PageOptionsActive, \'show-page-options\': PageOpt" +
                "ionsVisible, \'show-page-options-ontop\': ShowPageOptionsAbove }\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Påminnelser - MinGat v.6.4.2.38306");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menu-indicator";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"menu-indicator\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIItemPane.WindowTitles.Add("Påminnelser - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMenuHeader_mainMenuPane : HtmlDiv
    {
        
        public UIMenuHeader_mainMenuPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuHeader_mainMenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Ansatt \r\nLogg ut \r\n\r\n\r\n\r\n  \r\nStartsiden\r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"menuHeader_mainMenu\" style=\"display: block;\" data-bind=\"fadeVisible: ShowMain" +
                "Menu\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "16";
            this.WindowTitles.Add("Påminnelser - MinGat v.6.4.2.38306");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "data-bind=\"click: $parents[1].logout.bin";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Påminnelser - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStartsidenMinGatv642TitleBar : WinTitleBar
    {
        
        public UIStartsidenMinGatv642TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Startsiden - MinGat v.6.4.2.38306");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Startsiden - MinGat v.6.4.2.38306");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMinGatHjelpv64COPYRIWindow : BrowserWindow
    {
        
        public UIMinGatHjelpv64COPYRIWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "MinGat Hjelp v.6.4     COPYRIGHT ©  - GATSOFT AS";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("MinGat Hjelp v.6.4     COPYRIGHT ©  - GATSOFT AS");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMinGatHjelpv64COPYRIDocument UIMinGatHjelpv64COPYRIDocument
        {
            get
            {
                if ((this.mUIMinGatHjelpv64COPYRIDocument == null))
                {
                    this.mUIMinGatHjelpv64COPYRIDocument = new UIMinGatHjelpv64COPYRIDocument(this);
                }
                return this.mUIMinGatHjelpv64COPYRIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMinGatHjelpv64COPYRIDocument mUIMinGatHjelpv64COPYRIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMinGatHjelpv64COPYRIDocument : HtmlDocument
    {
        
        public UIMinGatHjelpv64COPYRIDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "MinGat Hjelp v.6.4     COPYRIGHT ©  - GATSOFT AS";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/help/index.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/MinGat/help/index.html?Employee_Home.html";
            this.WindowTitles.Add("MinGat Hjelp v.6.4     COPYRIGHT ©  - GATSOFT AS");
            #endregion
        }
        
        #region Properties
        public UIHmheadboxPane UIHmheadboxPane
        {
            get
            {
                if ((this.mUIHmheadboxPane == null))
                {
                    this.mUIHmheadboxPane = new UIHmheadboxPane(this);
                }
                return this.mUIHmheadboxPane;
            }
        }
        
        public UIContentPageFrame UIContentPageFrame
        {
            get
            {
                if ((this.mUIContentPageFrame == null))
                {
                    this.mUIContentPageFrame = new UIContentPageFrame(this);
                }
                return this.mUIContentPageFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIHmheadboxPane mUIHmheadboxPane;
        
        private UIContentPageFrame mUIContentPageFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHmheadboxPane : HtmlDiv
    {
        
        public UIHmheadboxPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "hmheadbox";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "MinGat Hjelp v.6.4     COPYRIGHT ©  - GA";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"hmheadbox\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("MinGat Hjelp v.6.4     COPYRIGHT ©  - GATSOFT AS");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMinGatHjelpv64COPYRIPane
        {
            get
            {
                if ((this.mUIMinGatHjelpv64COPYRIPane == null))
                {
                    this.mUIMinGatHjelpv64COPYRIPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMinGatHjelpv64COPYRIPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMinGatHjelpv64COPYRIPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMinGatHjelpv64COPYRIPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "MinGat Hjelp v.6.4     COPYRIGHT ©  - GA";
                    this.mUIMinGatHjelpv64COPYRIPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMinGatHjelpv64COPYRIPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "title";
                    this.mUIMinGatHjelpv64COPYRIPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"title\"";
                    this.mUIMinGatHjelpv64COPYRIPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUIMinGatHjelpv64COPYRIPane.WindowTitles.Add("MinGat Hjelp v.6.4     COPYRIGHT ©  - GATSOFT AS");
                    #endregion
                }
                return this.mUIMinGatHjelpv64COPYRIPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMinGatHjelpv64COPYRIPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPageFrame : HtmlIFrame
    {
        
        public UIContentPageFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "hmcontent";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = "hmcontent";
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "Employee_Home.html";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = "Content Page";
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"hmcontent\" title=\"Content Page\" id";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("MinGat Hjelp v.6.4     COPYRIGHT ©  - GATSOFT AS");
            #endregion
        }
        
        #region Properties
        public UIMinGatHjelpDocument UIMinGatHjelpDocument
        {
            get
            {
                if ((this.mUIMinGatHjelpDocument == null))
                {
                    this.mUIMinGatHjelpDocument = new UIMinGatHjelpDocument(this);
                }
                return this.mUIMinGatHjelpDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMinGatHjelpDocument mUIMinGatHjelpDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMinGatHjelpDocument : HtmlDocument
    {
        
        public UIMinGatHjelpDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "pageBody";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "MinGat Hjelp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/help/Employee_Home.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/MinGat/help/Employee_Home.html";
            this.WindowTitles.Add("MinGat Hjelp v.6.4     COPYRIGHT ©  - GATSOFT AS");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIMinGatHovedmenyPane
        {
            get
            {
                if ((this.mUIMinGatHovedmenyPane == null))
                {
                    this.mUIMinGatHovedmenyPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIMinGatHovedmenyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMinGatHovedmenyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMinGatHovedmenyPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "MinGat Hovedmeny";
                    this.mUIMinGatHovedmenyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMinGatHovedmenyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "f_Heading1";
                    this.mUIMinGatHovedmenyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"f_Heading1\"";
                    this.mUIMinGatHovedmenyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIMinGatHovedmenyPane.WindowTitles.Add("MinGat Hjelp v.6.4     COPYRIGHT ©  - GATSOFT AS");
                    #endregion
                }
                return this.mUIMinGatHovedmenyPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIMinGatHovedmenyPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWebconfigNotepadWindow : WinWindow
    {
        
        public UIWebconfigNotepadWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Web.config - Notepad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Notepad";
            this.WindowTitles.Add("Web.config - Notepad");
            #endregion
        }
        
        #region Properties
        public UIWebconfigNotepadTitleBar UIWebconfigNotepadTitleBar
        {
            get
            {
                if ((this.mUIWebconfigNotepadTitleBar == null))
                {
                    this.mUIWebconfigNotepadTitleBar = new UIWebconfigNotepadTitleBar(this);
                }
                return this.mUIWebconfigNotepadTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIWebconfigNotepadTitleBar mUIWebconfigNotepadTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWebconfigNotepadTitleBar : WinTitleBar
    {
        
        public UIWebconfigNotepadTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Web.config - Notepad");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Web.config - Notepad");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatWebserviceMainPagWindow : BrowserWindow
    {
        
        public UIGatWebserviceMainPagWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Gat Webservice Main Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Gat Webservice Main Page");
            //this.WindowTitles.Add("AppService Web Service");
            //this.WindowTitles.Add("BussinesAnalyzeService Web Service");
            //this.WindowTitles.Add("CalendarIntegrationWebService Web Service");
            //this.WindowTitles.Add("CalendarService Web Service");
            //this.WindowTitles.Add("DepartmentServiceV2 Web Service");
            //this.WindowTitles.Add("DepartmentServiceV63 Web Service");
            //this.WindowTitles.Add("EmployeeChangeTrackingService Web Service");
            //this.WindowTitles.Add("EmployeeService Web Service");
            //this.WindowTitles.Add("EmployeeServiceV63 Web Service");
            //this.WindowTitles.Add("ExportService Web Service");
            //this.WindowTitles.Add("Gat-Flex Services Web Service");
            //this.WindowTitles.Add("GatGerica Web Service");
            //this.WindowTitles.Add("GatTaskSchedulerDataService Web Service");
            //this.WindowTitles.Add("ImportService Web Service");
            //this.WindowTitles.Add("PatientInformationService Web Service");
            //this.WindowTitles.Add("PayslipImportService Web Service");
            //this.WindowTitles.Add("ReshRosterService Web Service");
            //this.WindowTitles.Add("SmsByMailReader Web Service");
            //this.WindowTitles.Add("SmsGatewayService Web Service");
            //this.WindowTitles.Add("SmsService Web Service");
            //this.WindowTitles.Add("SystemInformationService Web Service");
            //this.WindowTitles.Add("TaskAgreementService Web Service");
            //this.WindowTitles.Add("TesService Web Service");
            //this.WindowTitles.Add("TestService Web Service");
            //this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGatWebserviceMainPagDocument UIGatWebserviceMainPagDocument
        {
            get
            {
                if ((this.mUIGatWebserviceMainPagDocument == null))
                {
                    this.mUIGatWebserviceMainPagDocument = new UIGatWebserviceMainPagDocument(this);
                }
                return this.mUIGatWebserviceMainPagDocument;
            }
        }
        
        public UIBussinesAnalyzeServiDocument UIBussinesAnalyzeServiDocument
        {
            get
            {
                if ((this.mUIBussinesAnalyzeServiDocument == null))
                {
                    this.mUIBussinesAnalyzeServiDocument = new UIBussinesAnalyzeServiDocument(this);
                }
                return this.mUIBussinesAnalyzeServiDocument;
            }
        }
        
        public UICalendarIntegrationWDocument UICalendarIntegrationWDocument
        {
            get
            {
                if ((this.mUICalendarIntegrationWDocument == null))
                {
                    this.mUICalendarIntegrationWDocument = new UICalendarIntegrationWDocument(this);
                }
                return this.mUICalendarIntegrationWDocument;
            }
        }
        
        public UICalendarServiceWebSeDocument UICalendarServiceWebSeDocument
        {
            get
            {
                if ((this.mUICalendarServiceWebSeDocument == null))
                {
                    this.mUICalendarServiceWebSeDocument = new UICalendarServiceWebSeDocument(this);
                }
                return this.mUICalendarServiceWebSeDocument;
            }
        }
        
        public UIDepartmentServiceV2WDocument UIDepartmentServiceV2WDocument
        {
            get
            {
                if ((this.mUIDepartmentServiceV2WDocument == null))
                {
                    this.mUIDepartmentServiceV2WDocument = new UIDepartmentServiceV2WDocument(this);
                }
                return this.mUIDepartmentServiceV2WDocument;
            }
        }
        
        public UIDepartmentServiceV63Document UIDepartmentServiceV63Document
        {
            get
            {
                if ((this.mUIDepartmentServiceV63Document == null))
                {
                    this.mUIDepartmentServiceV63Document = new UIDepartmentServiceV63Document(this);
                }
                return this.mUIDepartmentServiceV63Document;
            }
        }
        
        public UIEmployeeChangeTrackiDocument UIEmployeeChangeTrackiDocument
        {
            get
            {
                if ((this.mUIEmployeeChangeTrackiDocument == null))
                {
                    this.mUIEmployeeChangeTrackiDocument = new UIEmployeeChangeTrackiDocument(this);
                }
                return this.mUIEmployeeChangeTrackiDocument;
            }
        }
        
        public UIEmployeeServiceWebSeDocument UIEmployeeServiceWebSeDocument
        {
            get
            {
                if ((this.mUIEmployeeServiceWebSeDocument == null))
                {
                    this.mUIEmployeeServiceWebSeDocument = new UIEmployeeServiceWebSeDocument(this);
                }
                return this.mUIEmployeeServiceWebSeDocument;
            }
        }
        
        public UIEmployeeServiceV63WeDocument UIEmployeeServiceV63WeDocument
        {
            get
            {
                if ((this.mUIEmployeeServiceV63WeDocument == null))
                {
                    this.mUIEmployeeServiceV63WeDocument = new UIEmployeeServiceV63WeDocument(this);
                }
                return this.mUIEmployeeServiceV63WeDocument;
            }
        }
        
        public UIExportServiceWebServDocument UIExportServiceWebServDocument
        {
            get
            {
                if ((this.mUIExportServiceWebServDocument == null))
                {
                    this.mUIExportServiceWebServDocument = new UIExportServiceWebServDocument(this);
                }
                return this.mUIExportServiceWebServDocument;
            }
        }
        
        public UIGatFlexServicesWebSeDocument UIGatFlexServicesWebSeDocument
        {
            get
            {
                if ((this.mUIGatFlexServicesWebSeDocument == null))
                {
                    this.mUIGatFlexServicesWebSeDocument = new UIGatFlexServicesWebSeDocument(this);
                }
                return this.mUIGatFlexServicesWebSeDocument;
            }
        }
        
        public UIGatGericaWebServiceDocument UIGatGericaWebServiceDocument
        {
            get
            {
                if ((this.mUIGatGericaWebServiceDocument == null))
                {
                    this.mUIGatGericaWebServiceDocument = new UIGatGericaWebServiceDocument(this);
                }
                return this.mUIGatGericaWebServiceDocument;
            }
        }
        
        public UIGatTaskSchedulerDataDocument UIGatTaskSchedulerDataDocument
        {
            get
            {
                if ((this.mUIGatTaskSchedulerDataDocument == null))
                {
                    this.mUIGatTaskSchedulerDataDocument = new UIGatTaskSchedulerDataDocument(this);
                }
                return this.mUIGatTaskSchedulerDataDocument;
            }
        }
        
        public UIImportServiceWebServDocument UIImportServiceWebServDocument
        {
            get
            {
                if ((this.mUIImportServiceWebServDocument == null))
                {
                    this.mUIImportServiceWebServDocument = new UIImportServiceWebServDocument(this);
                }
                return this.mUIImportServiceWebServDocument;
            }
        }
        
        public UIPatientInformationSeDocument UIPatientInformationSeDocument
        {
            get
            {
                if ((this.mUIPatientInformationSeDocument == null))
                {
                    this.mUIPatientInformationSeDocument = new UIPatientInformationSeDocument(this);
                }
                return this.mUIPatientInformationSeDocument;
            }
        }
        
        public UIPayslipImportServiceDocument UIPayslipImportServiceDocument
        {
            get
            {
                if ((this.mUIPayslipImportServiceDocument == null))
                {
                    this.mUIPayslipImportServiceDocument = new UIPayslipImportServiceDocument(this);
                }
                return this.mUIPayslipImportServiceDocument;
            }
        }
        
        public UIReshRosterServiceWebDocument UIReshRosterServiceWebDocument
        {
            get
            {
                if ((this.mUIReshRosterServiceWebDocument == null))
                {
                    this.mUIReshRosterServiceWebDocument = new UIReshRosterServiceWebDocument(this);
                }
                return this.mUIReshRosterServiceWebDocument;
            }
        }
        
        public UISmsByMailReaderWebSeDocument UISmsByMailReaderWebSeDocument
        {
            get
            {
                if ((this.mUISmsByMailReaderWebSeDocument == null))
                {
                    this.mUISmsByMailReaderWebSeDocument = new UISmsByMailReaderWebSeDocument(this);
                }
                return this.mUISmsByMailReaderWebSeDocument;
            }
        }
        
        public UISmsGatewayServiceWebDocument UISmsGatewayServiceWebDocument
        {
            get
            {
                if ((this.mUISmsGatewayServiceWebDocument == null))
                {
                    this.mUISmsGatewayServiceWebDocument = new UISmsGatewayServiceWebDocument(this);
                }
                return this.mUISmsGatewayServiceWebDocument;
            }
        }
        
        public UISmsServiceWebServiceDocument UISmsServiceWebServiceDocument
        {
            get
            {
                if ((this.mUISmsServiceWebServiceDocument == null))
                {
                    this.mUISmsServiceWebServiceDocument = new UISmsServiceWebServiceDocument(this);
                }
                return this.mUISmsServiceWebServiceDocument;
            }
        }
        
        public UISystemInformationSerDocument UISystemInformationSerDocument
        {
            get
            {
                if ((this.mUISystemInformationSerDocument == null))
                {
                    this.mUISystemInformationSerDocument = new UISystemInformationSerDocument(this);
                }
                return this.mUISystemInformationSerDocument;
            }
        }
        
        public UITaskAgreementServiceDocument UITaskAgreementServiceDocument
        {
            get
            {
                if ((this.mUITaskAgreementServiceDocument == null))
                {
                    this.mUITaskAgreementServiceDocument = new UITaskAgreementServiceDocument(this);
                }
                return this.mUITaskAgreementServiceDocument;
            }
        }
        
        public UITesServiceWebServiceDocument UITesServiceWebServiceDocument
        {
            get
            {
                if ((this.mUITesServiceWebServiceDocument == null))
                {
                    this.mUITesServiceWebServiceDocument = new UITesServiceWebServiceDocument(this);
                }
                return this.mUITesServiceWebServiceDocument;
            }
        }
        
        public UITestServiceWebServicDocument UITestServiceWebServicDocument
        {
            get
            {
                if ((this.mUITestServiceWebServicDocument == null))
                {
                    this.mUITestServiceWebServicDocument = new UITestServiceWebServicDocument(this);
                }
                return this.mUITestServiceWebServicDocument;
            }
        }
        
        public UIWeaBreakServiceWebSeDocument UIWeaBreakServiceWebSeDocument
        {
            get
            {
                if ((this.mUIWeaBreakServiceWebSeDocument == null))
                {
                    this.mUIWeaBreakServiceWebSeDocument = new UIWeaBreakServiceWebSeDocument(this);
                }
                return this.mUIWeaBreakServiceWebSeDocument;
            }
        }
        
        public UIGatWebserviceMainPagDocument1 UIGatWebserviceMainPagDocument1
        {
            get
            {
                if ((this.mUIGatWebserviceMainPagDocument1 == null))
                {
                    this.mUIGatWebserviceMainPagDocument1 = new UIGatWebserviceMainPagDocument1(this);
                }
                return this.mUIGatWebserviceMainPagDocument1;
            }
        }
        
        public UIGatWebserviceMainPagDocument2 UIGatWebserviceMainPagDocument2
        {
            get
            {
                if ((this.mUIGatWebserviceMainPagDocument2 == null))
                {
                    this.mUIGatWebserviceMainPagDocument2 = new UIGatWebserviceMainPagDocument2(this);
                }
                return this.mUIGatWebserviceMainPagDocument2;
            }
        }
        #endregion
        
        #region Fields
        private UIGatWebserviceMainPagDocument mUIGatWebserviceMainPagDocument;
        
        private UIBussinesAnalyzeServiDocument mUIBussinesAnalyzeServiDocument;
        
        private UICalendarIntegrationWDocument mUICalendarIntegrationWDocument;
        
        private UICalendarServiceWebSeDocument mUICalendarServiceWebSeDocument;
        
        private UIDepartmentServiceV2WDocument mUIDepartmentServiceV2WDocument;
        
        private UIDepartmentServiceV63Document mUIDepartmentServiceV63Document;
        
        private UIEmployeeChangeTrackiDocument mUIEmployeeChangeTrackiDocument;
        
        private UIEmployeeServiceWebSeDocument mUIEmployeeServiceWebSeDocument;
        
        private UIEmployeeServiceV63WeDocument mUIEmployeeServiceV63WeDocument;
        
        private UIExportServiceWebServDocument mUIExportServiceWebServDocument;
        
        private UIGatFlexServicesWebSeDocument mUIGatFlexServicesWebSeDocument;
        
        private UIGatGericaWebServiceDocument mUIGatGericaWebServiceDocument;
        
        private UIGatTaskSchedulerDataDocument mUIGatTaskSchedulerDataDocument;
        
        private UIImportServiceWebServDocument mUIImportServiceWebServDocument;
        
        private UIPatientInformationSeDocument mUIPatientInformationSeDocument;
        
        private UIPayslipImportServiceDocument mUIPayslipImportServiceDocument;
        
        private UIReshRosterServiceWebDocument mUIReshRosterServiceWebDocument;
        
        private UISmsByMailReaderWebSeDocument mUISmsByMailReaderWebSeDocument;
        
        private UISmsGatewayServiceWebDocument mUISmsGatewayServiceWebDocument;
        
        private UISmsServiceWebServiceDocument mUISmsServiceWebServiceDocument;
        
        private UISystemInformationSerDocument mUISystemInformationSerDocument;
        
        private UITaskAgreementServiceDocument mUITaskAgreementServiceDocument;
        
        private UITesServiceWebServiceDocument mUITesServiceWebServiceDocument;
        
        private UITestServiceWebServicDocument mUITestServiceWebServicDocument;
        
        private UIWeaBreakServiceWebSeDocument mUIWeaBreakServiceWebSeDocument;
        
        private UIGatWebserviceMainPagDocument1 mUIGatWebserviceMainPagDocument1;
        
        private UIGatWebserviceMainPagDocument2 mUIGatWebserviceMainPagDocument2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatWebserviceMainPagDocument : HtmlDocument
    {
        
        public UIGatWebserviceMainPagDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gat Webservice Main Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/";
            //this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/";
            this.WindowTitles.Add("Gat Webservice Main Page");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIGatWebservicesv64238Pane
        {
            get
            {
                if ((this.mUIGatWebservicesv64238Pane == null))
                {
                    this.mUIGatWebservicesv64238Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGatWebservicesv64238Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = "lblTitle";
                    this.mUIGatWebservicesv64238Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Gat Webservices";
                    this.mUIGatWebservicesv64238Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "Heading";
                    this.mUIGatWebservicesv64238Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"Heading\" id=\"lblTitle\"";
                    this.mUIGatWebservicesv64238Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIGatWebservicesv64238Pane.WindowTitles.Add("Gat Webservice");
                    #endregion
                }
                return this.mUIGatWebservicesv64238Pane;
            }
        }
        
        public HtmlHyperlink UIBussinesAnalyzeServiHyperlink
        {
            get
            {
                if ((this.mUIBussinesAnalyzeServiHyperlink == null))
                {
                    this.mUIBussinesAnalyzeServiHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBussinesAnalyzeServiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBussinesAnalyzeServiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBussinesAnalyzeServiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "BussinesAnalyzeService";
                    this.mUIBussinesAnalyzeServiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/BussinesAnalyzeService.asmx";
                    this.mUIBussinesAnalyzeServiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBussinesAnalyzeServiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/BussinesAnalyzeService.asmx";
                    this.mUIBussinesAnalyzeServiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIBussinesAnalyzeServiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_0\" href=\"Buss";
                    this.mUIBussinesAnalyzeServiHyperlink.WindowTitles.Add("Gat Webservice Main Page");
                    #endregion
                }
                return this.mUIBussinesAnalyzeServiHyperlink;
            }
        }
        
        public HtmlHyperlink UICalendarIntegrationWHyperlink
        {
            get
            {
                if ((this.mUICalendarIntegrationWHyperlink == null))
                {
                    this.mUICalendarIntegrationWHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICalendarIntegrationWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICalendarIntegrationWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICalendarIntegrationWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "CalendarIntegrationWebService";
                    this.mUICalendarIntegrationWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/CalendarIntegrationWebService.asmx";
                    this.mUICalendarIntegrationWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICalendarIntegrationWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/CalendarIntegrationWebService.asmx";
                    this.mUICalendarIntegrationWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICalendarIntegrationWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_1\" href=\"Cale";
                    this.mUICalendarIntegrationWHyperlink.WindowTitles.Add("Gat Webservice Main Page");
                    #endregion
                }
                return this.mUICalendarIntegrationWHyperlink;
            }
        }
        
        public HtmlHyperlink UICalendarServiceHyperlink
        {
            get
            {
                if ((this.mUICalendarServiceHyperlink == null))
                {
                    this.mUICalendarServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICalendarServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICalendarServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICalendarServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "CalendarService";
                    this.mUICalendarServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/CalendarService.asmx";
                    this.mUICalendarServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICalendarServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/CalendarService.asmx";
                    this.mUICalendarServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICalendarServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_2\" href=\"Cale";
                    this.mUICalendarServiceHyperlink.WindowTitles.Add("Gat Webservice Main Page");
                    #endregion
                }
                return this.mUICalendarServiceHyperlink;
            }
        }
        public HtmlHyperlink UIDepartmentServiceV66Hyperlink
        {            
            get
            {
                if ((this.mUIDepartmentServiceV66Hyperlink == null))
                {
                    this.mUIDepartmentServiceV66Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDepartmentServiceV66Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDepartmentServiceV66Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDepartmentServiceV66Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "DepartmentServiceV66";
                    this.mUIDepartmentServiceV66Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/DepartmentServiceV66.asmx";
                    this.mUIDepartmentServiceV66Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDepartmentServiceV66Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/DepartmentServiceV66.asmx";
                    this.mUIDepartmentServiceV66Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                   #endregion
                }
                return this.mUIDepartmentServiceV66Hyperlink;
            }
        }

        public HtmlHyperlink UIDepartmentServiceV20182Hyperlink
        {
            get
            {
                if ((this.mUIDepartmentServiceV20182Hyperlink == null))
                {
                    this.mUIDepartmentServiceV20182Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDepartmentServiceV20182Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDepartmentServiceV20182Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDepartmentServiceV20182Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "DepartmentServiceV20182";
                    this.mUIDepartmentServiceV20182Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/DepartmentServiceV20182.asmx";
                    this.mUIDepartmentServiceV20182Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDepartmentServiceV20182Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/DepartmentServiceV20182.asmx";
                    this.mUIDepartmentServiceV20182Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    #endregion
                }
                return this.mUIDepartmentServiceV20182Hyperlink;
            }
        }

        public HtmlHyperlink UIEmployeeChangeTrackiHyperlink
        {
            get
            {
                if ((this.mUIEmployeeChangeTrackiHyperlink == null))
                {
                    this.mUIEmployeeChangeTrackiHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEmployeeChangeTrackiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEmployeeChangeTrackiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEmployeeChangeTrackiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "EmployeeChangeTrackingService";
                    this.mUIEmployeeChangeTrackiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/EmployeeChangeTrackingService.asmx";
                    this.mUIEmployeeChangeTrackiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEmployeeChangeTrackiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/EmployeeChangeTrackingService.asmx";
                    this.mUIEmployeeChangeTrackiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEmployeeChangeTrackiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_4\" href=\"Empl";
                    #endregion
                }
                return this.mUIEmployeeChangeTrackiHyperlink;
            }
        }
        
        public HtmlHyperlink UIEmployeeServiceV63Hyperlink
        {
            get
            {
                if ((this.mUIEmployeeServiceV63Hyperlink == null))
                {
                    this.mUIEmployeeServiceV63Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEmployeeServiceV63Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEmployeeServiceV63Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEmployeeServiceV63Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "EmployeeServiceV63";
                    this.mUIEmployeeServiceV63Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/EmployeeServiceV63.asmx";
                    this.mUIEmployeeServiceV63Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEmployeeServiceV63Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/EmployeeServiceV63.asmx";
                    this.mUIEmployeeServiceV63Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEmployeeServiceV63Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_5\" href=\"Empl";
                    #endregion
                }
                return this.mUIEmployeeServiceV63Hyperlink;
            }
        }
        
        public HtmlHyperlink UIExportServiceHyperlink
        {
            get
            {
                if ((this.mUIExportServiceHyperlink == null))
                {
                    this.mUIExportServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIExportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIExportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIExportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ExportService";
                    this.mUIExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/ExportService.asmx";
                    this.mUIExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/ExportService.asmx";
                    this.mUIExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_6\" href=\"Expo";
                    #endregion
                }
                return this.mUIExportServiceHyperlink;
            }
        }
        public HtmlHyperlink UIGatFlexExternalServiceHyperlink
        {
            get
            {
                if ((this.mUIGatFlexExternalServiceHyperlink == null))
                {
                    this.mUIGatFlexExternalServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGatFlexExternalServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGatFlexExternalServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGatFlexExternalServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Gat.ExternalFlexService";
                    this.mUIGatFlexExternalServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/ExternalFlexService.svc";
                    this.mUIGatFlexExternalServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGatFlexExternalServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/ExternalFlexService.svc";
                    this.mUIGatFlexExternalServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    #endregion
                }
                return this.mUIGatFlexExternalServiceHyperlink;
            }
        }
        

        public HtmlHyperlink UIGatFlexServicesHyperlink
        {
            get
            {
                if ((this.mUIGatFlexServicesHyperlink == null))
                {
                    this.mUIGatFlexServicesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGatFlexServicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGatFlexServicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGatFlexServicesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Gat-Flex Services";
                    this.mUIGatFlexServicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/FlexService.asmx";
                    this.mUIGatFlexServicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGatFlexServicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/FlexService.asmx";
                    this.mUIGatFlexServicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGatFlexServicesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_7\" href=\"Flex";
                    #endregion
                }
                return this.mUIGatFlexServicesHyperlink;
            }
        }
        
        public HtmlHyperlink UIGatGericaHyperlink
        {
            get
            {
                if ((this.mUIGatGericaHyperlink == null))
                {
                    this.mUIGatGericaHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGatGericaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGatGericaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGatGericaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GatGerica";
                    this.mUIGatGericaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/GatGerica.asmx";
                    this.mUIGatGericaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGatGericaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/GatGerica.asmx";
                    this.mUIGatGericaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGatGericaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_8\" href=\"Gat";
                     #endregion
                }
                return this.mUIGatGericaHyperlink;
            }
        }
        
        public HtmlHyperlink UIGatTaskSchedulerDataHyperlink
        {
            get
            {
                if ((this.mUIGatTaskSchedulerDataHyperlink == null))
                {
                    this.mUIGatTaskSchedulerDataHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGatTaskSchedulerDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGatTaskSchedulerDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGatTaskSchedulerDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GatTaskSchedulerDataService";
                    this.mUIGatTaskSchedulerDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/GatTaskSchedulerDataService.asmx";
                    this.mUIGatTaskSchedulerDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGatTaskSchedulerDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/GatTaskSchedulerDataService.asmx";
                    this.mUIGatTaskSchedulerDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGatTaskSchedulerDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_9\" href=\"Gat";
                    #endregion
                }
                return this.mUIGatTaskSchedulerDataHyperlink;
            }
        }
        
        public HtmlHyperlink UIImportServiceHyperlink
        {
            get
            {
                if ((this.mUIImportServiceHyperlink == null))
                {
                    this.mUIImportServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIImportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIImportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIImportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ImportService";
                    this.mUIImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/ImportService.asmx";
                    this.mUIImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/ImportService.asmx";
                    this.mUIImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_10\" href=\"Imp";
                    #endregion
                }
                return this.mUIImportServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UIPatientInformationSeHyperlink
        {
            get
            {
                if ((this.mUIPatientInformationSeHyperlink == null))
                {
                    this.mUIPatientInformationSeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIPatientInformationSeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPatientInformationSeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPatientInformationSeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "PatientInformationService";
                    this.mUIPatientInformationSeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/PatientInformationService.asmx";
                    this.mUIPatientInformationSeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPatientInformationSeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/PatientInformationService.asmx";
                    this.mUIPatientInformationSeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPatientInformationSeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_11\" href=\"Pat";
                    #endregion
                }
                return this.mUIPatientInformationSeHyperlink;
            }
        }
        
        public HtmlHyperlink UIPayslipImportServiceHyperlink
        {
            get
            {
                if ((this.mUIPayslipImportServiceHyperlink == null))
                {
                    this.mUIPayslipImportServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIPayslipImportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPayslipImportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPayslipImportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "PayslipImportService";
                    this.mUIPayslipImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/PayslipImportService.asmx";
                    this.mUIPayslipImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPayslipImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/PayslipImportService.asmx";
                    this.mUIPayslipImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPayslipImportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_12\" href=\"Pay";
                    #endregion
                }
                return this.mUIPayslipImportServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UIReshRosterServiceHyperlink
        {
            get
            {
                if ((this.mUIReshRosterServiceHyperlink == null))
                {
                    this.mUIReshRosterServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIReshRosterServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIReshRosterServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIReshRosterServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ReshRosterService";
                    this.mUIReshRosterServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/ReshRosterService.asmx";
                    this.mUIReshRosterServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIReshRosterServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/ReshRosterService.asmx";
                    this.mUIReshRosterServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIReshRosterServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_13\" href=\"Res";
                    #endregion
                }
                return this.mUIReshRosterServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UISmsByMailReaderHyperlink
        {
            get
            {
                if ((this.mUISmsByMailReaderHyperlink == null))
                {
                    this.mUISmsByMailReaderHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISmsByMailReaderHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISmsByMailReaderHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISmsByMailReaderHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "SmsByMailReader";
                    this.mUISmsByMailReaderHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/SmsByMailReader.asmx";
                    this.mUISmsByMailReaderHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISmsByMailReaderHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/SmsByMailReader.asmx";
                    this.mUISmsByMailReaderHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISmsByMailReaderHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_16\" href=\"Sms";
                    #endregion
                }
                return this.mUISmsByMailReaderHyperlink;
            }
        }
        
        public HtmlHyperlink UISmsGatewayServiceHyperlink
        {
            get
            {
                if ((this.mUISmsGatewayServiceHyperlink == null))
                {
                    this.mUISmsGatewayServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISmsGatewayServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISmsGatewayServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISmsGatewayServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "SmsGatewayService";
                    this.mUISmsGatewayServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/SmsGatewayService.asmx";
                    this.mUISmsGatewayServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISmsGatewayServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/SmsGatewayService.asmx";
                    this.mUISmsGatewayServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISmsGatewayServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_17\" href=\"Sms";
                    #endregion
                }
                return this.mUISmsGatewayServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UISmsServiceHyperlink
        {
            get
            {
                if ((this.mUISmsServiceHyperlink == null))
                {
                    this.mUISmsServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISmsServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISmsServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISmsServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "SmsService";
                    this.mUISmsServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/SmsService.asmx";
                    this.mUISmsServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISmsServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/SmsService.asmx";
                    this.mUISmsServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISmsServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_18\" href=\"Sms";
                    #endregion
                }
                return this.mUISmsServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UISystemInformationSerHyperlink
        {
            get
            {
                if ((this.mUISystemInformationSerHyperlink == null))
                {
                    this.mUISystemInformationSerHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISystemInformationSerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISystemInformationSerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISystemInformationSerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "SystemInformationService";
                    this.mUISystemInformationSerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/SystemInformationService.asmx";
                    this.mUISystemInformationSerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISystemInformationSerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/SystemInformationService.asmx";
                    this.mUISystemInformationSerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISystemInformationSerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_19\" href=\"Sys";
                    #endregion
                }
                return this.mUISystemInformationSerHyperlink;
            }
        }
        
        public HtmlHyperlink UITaskAgreementServiceHyperlink
        {
            get
            {
                if ((this.mUITaskAgreementServiceHyperlink == null))
                {
                    this.mUITaskAgreementServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUITaskAgreementServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUITaskAgreementServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUITaskAgreementServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "TaskAgreementService";
                    this.mUITaskAgreementServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/TaskAgreementService.asmx";
                    this.mUITaskAgreementServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUITaskAgreementServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/TaskAgreementService.asmx";
                    this.mUITaskAgreementServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUITaskAgreementServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_20\" href=\"Tas";
                    #endregion
                }
                return this.mUITaskAgreementServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UITesServiceHyperlink
        {
            get
            {
                if ((this.mUITesServiceHyperlink == null))
                {
                    this.mUITesServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUITesServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUITesServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUITesServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "TesService";
                    this.mUITesServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/TesService.asmx";
                    this.mUITesServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUITesServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/TesService.asmx";
                    this.mUITesServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUITesServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_21\" href=\"Tes";
                    #endregion
                }
                return this.mUITesServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UITestServiceHyperlink
        {
            get
            {
                if ((this.mUITestServiceHyperlink == null))
                {
                    this.mUITestServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUITestServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUITestServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUITestServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "TestService";
                    this.mUITestServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/TestService.asmx";
                    this.mUITestServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUITestServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/TestService.asmx";
                    this.mUITestServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUITestServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_22\" href=\"Tes";
                    #endregion
                }
                return this.mUITestServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UIWeaBreakServiceHyperlink
        {
            get
            {
                if ((this.mUIWeaBreakServiceHyperlink == null))
                {
                    this.mUIWeaBreakServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIWeaBreakServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIWeaBreakServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIWeaBreakServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "WeaBreakService";
                    this.mUIWeaBreakServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/WeaBreakService.asmx";
                    this.mUIWeaBreakServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIWeaBreakServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/WeaBreakService.asmx";
                    this.mUIWeaBreakServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIWeaBreakServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_23\" href=\"Wea";
                    #endregion
                }
                return this.mUIWeaBreakServiceHyperlink;
            }
        }
        public HtmlHyperlink UIRoleDepartmentServiceV20182Hyperlink
        {
            get
            {
                if ((this.mUIRoleDepartmentServiceV20182Hyperlink == null))
                {
                    this.mUIRoleDepartmentServiceV20182Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIRoleDepartmentServiceV20182Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "RoleDepartmentServiceV20182";
                    this.mUIRoleDepartmentServiceV20182Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/RoleDepartmentServiceV20182.asmx";
                    this.mUIRoleDepartmentServiceV20182Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIRoleDepartmentServiceV20182Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/RoleDepartmentServiceV20182.asmx";
                    #endregion
                }
                return this.mUIRoleDepartmentServiceV20182Hyperlink;
            }
        }
        
        #endregion

        #region Fields
        private HtmlSpan mUIGatWebservicesv64238Pane;
        
        private HtmlHyperlink mUIBussinesAnalyzeServiHyperlink;
        
        private HtmlHyperlink mUICalendarIntegrationWHyperlink;
        
        private HtmlHyperlink mUICalendarServiceHyperlink;
               
        private HtmlHyperlink mUIDepartmentServiceV20182Hyperlink;

        private HtmlHyperlink mUIDepartmentServiceV66Hyperlink;
        
        private HtmlHyperlink mUIEmployeeChangeTrackiHyperlink;
        
        private HtmlHyperlink mUIEmployeeServiceV63Hyperlink;
        
        private HtmlHyperlink mUIExportServiceHyperlink;

        private HtmlHyperlink mUIGatFlexExternalServiceHyperlink;

        private HtmlHyperlink mUIGatFlexServicesHyperlink;
        
        private HtmlHyperlink mUIGatGericaHyperlink;
        
        private HtmlHyperlink mUIGatTaskSchedulerDataHyperlink;
        
        private HtmlHyperlink mUIImportServiceHyperlink;
        
        private HtmlHyperlink mUIPatientInformationSeHyperlink;
        
        private HtmlHyperlink mUIPayslipImportServiceHyperlink;
        
        private HtmlHyperlink mUIReshRosterServiceHyperlink;
        
        private HtmlHyperlink mUISmsByMailReaderHyperlink;
        
        private HtmlHyperlink mUISmsGatewayServiceHyperlink;
        
        private HtmlHyperlink mUISmsServiceHyperlink;
        
        private HtmlHyperlink mUISystemInformationSerHyperlink;
        
        private HtmlHyperlink mUITaskAgreementServiceHyperlink;
        
        private HtmlHyperlink mUITesServiceHyperlink;
        
        private HtmlHyperlink mUITestServiceHyperlink;
        
        private HtmlHyperlink mUIWeaBreakServiceHyperlink;

        private HtmlHyperlink mUIRoleDepartmentServiceV20182Hyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBussinesAnalyzeServiDocument : HtmlDocument
    {
        
        public UIBussinesAnalyzeServiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "BussinesAnalyzeService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/BussinesAnalyzeService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/BussinesAnalyzeService.asmx";
            this.WindowTitles.Add("BussinesAnalyzeService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane : HtmlDiv
    {
        
        public UIContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "BussinesAnalyzeService\r\n\r\n\r\nService for ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("BussinesAnalyzeService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIUpdateBussinessAnalyHyperlink
        {
            get
            {
                if ((this.mUIUpdateBussinessAnalyHyperlink == null))
                {
                    this.mUIUpdateBussinessAnalyHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIUpdateBussinessAnalyHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "UpdateBussinessAnalyzeData";
                    this.mUIUpdateBussinessAnalyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/BussinesAnalyzeService.asmx";
                    this.mUIUpdateBussinessAnalyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIUpdateBussinessAnalyHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/BussinesAnalyzeService.asmx?op=UpdateBussinessAnalyzeData"; 
                    #endregion
                }
                return this.mUIUpdateBussinessAnalyHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIUpdateBussinessAnalyHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICalendarIntegrationWDocument : HtmlDocument
    {
        
        public UICalendarIntegrationWDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "CalendarIntegrationWebService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/CalendarIntegrationWebService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/CalendarIntegrationWebService.asmx";
            this.WindowTitles.Add("CalendarIntegrationWebService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane1 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane1(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane1 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane1 : HtmlDiv
    {
        
        public UIContentPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "CalendarIntegrationWebService\r\n\r\n\r\nServi";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("CalendarIntegrationWebService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDistributeHyperlink
        {
            get
            {
                if ((this.mUIDistributeHyperlink == null))
                {
                    this.mUIDistributeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDistributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDistributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDistributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDistributeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Distribute";
                    this.mUIDistributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/CalendarIntegrationWebService.asmx";
                    this.mUIDistributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDistributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/CalendarIntegrationWebService.asmx?op=Distribute";
                    this.mUIDistributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDistributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"CalendarIntegrationWebService.asmx";
                    this.mUIDistributeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIDistributeHyperlink.WindowTitles.Add("CalendarIntegrationWebService Web Service");
                    #endregion
                }
                return this.mUIDistributeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDistributeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICalendarServiceWebSeDocument : HtmlDocument
    {
        
        public UICalendarServiceWebSeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "CalendarService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/CalendarService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/CalendarService.asmx";
            this.WindowTitles.Add("CalendarService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane2 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane2(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane2 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane2 : HtmlDiv
    {
        
        public UIContentPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "CalendarService\r\n\r\n\r\nThe following opera";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("CalendarService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetJourShiftsHyperlink
        {
            get
            {
                if ((this.mUIGetJourShiftsHyperlink == null))
                {
                    this.mUIGetJourShiftsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetJourShiftsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetJourShiftsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetJourShiftsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetJourShiftsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetJourShifts";
                    this.mUIGetJourShiftsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/CalendarService.asmx";
                    this.mUIGetJourShiftsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetJourShiftsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/CalendarService.asmx?op=GetJourShifts";
                    this.mUIGetJourShiftsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetJourShiftsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"CalendarService.asmx?op=GetJourShi";
                    this.mUIGetJourShiftsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetJourShiftsHyperlink.WindowTitles.Add("CalendarService Web Service");
                    #endregion
                }
                return this.mUIGetJourShiftsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetJourShiftsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDepartmentServiceV2WDocument : HtmlDocument
    {
        
        public UIDepartmentServiceV2WDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "DepartmentServiceV2 Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/DepartmentServiceV2.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/DepartmentServiceV2.asmx";
            this.WindowTitles.Add("DepartmentServiceV2 Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane3 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane3(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane3 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane3 : HtmlDiv
    {
        
        public UIContentPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "DepartmentServiceV2\r\n\r\n\r\nDepartment rela";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("DepartmentServiceV2 Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetDepartmentRosterHyperlink
        {
            get
            {
                if ((this.mUIGetDepartmentRosterHyperlink == null))
                {
                    this.mUIGetDepartmentRosterHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetDepartmentRoster";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/DepartmentServiceV2.asmx";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/DepartmentServiceV2.asmx?op=GetDepartmentRoster";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"DepartmentServiceV2.asmx?op=GetDep";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIGetDepartmentRosterHyperlink.WindowTitles.Add("DepartmentServiceV2 Web Service");
                    #endregion
                }
                return this.mUIGetDepartmentRosterHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetDepartmentRosterHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDepartmentServiceV63Document : HtmlDocument
    {
        
        public UIDepartmentServiceV63Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "DepartmentServiceV63 Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/DepartmentServiceV63.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/DepartmentServiceV63.asmx";
            this.WindowTitles.Add("DepartmentServiceV63 Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane4 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane4(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane4 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane4 : HtmlDiv
    {
        
        public UIContentPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "DepartmentServiceV63\r\n\r\n\r\nDepartment rel";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("DepartmentServiceV63 Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetDepartmentRosterHyperlink
        {
            get
            {
                if ((this.mUIGetDepartmentRosterHyperlink == null))
                {
                    this.mUIGetDepartmentRosterHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetDepartmentRoster";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/DepartmentServiceV63.asmx";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/DepartmentServiceV63.asmx?op=GetDepartmentRoster";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"DepartmentServiceV63.asmx?op=GetDe";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIGetDepartmentRosterHyperlink.WindowTitles.Add("DepartmentServiceV63 Web Service");
                    #endregion
                }
                return this.mUIGetDepartmentRosterHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetDepartmentRosterHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeChangeTrackiDocument : HtmlDocument
    {
        
        public UIEmployeeChangeTrackiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "EmployeeChangeTrackingService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/EmployeeChangeTrackingService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/EmployeeChangeTrackingService.asmx";
            this.WindowTitles.Add("EmployeeChangeTrackingService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane5 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane5(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane5 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane5 : HtmlDiv
    {
        
        public UIContentPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "EmployeeChangeTrackingService\r\n\r\n\r\nServi";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("EmployeeChangeTrackingService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIPushEmployeeDataChanHyperlink
        {
            get
            {
                if ((this.mUIPushEmployeeDataChanHyperlink == null))
                {
                    this.mUIPushEmployeeDataChanHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIPushEmployeeDataChanHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIPushEmployeeDataChanHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPushEmployeeDataChanHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPushEmployeeDataChanHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "PushEmployeeDataChanges";
                    this.mUIPushEmployeeDataChanHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/EmployeeChangeTrackingService.asmx";
                    this.mUIPushEmployeeDataChanHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPushEmployeeDataChanHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/EmployeeChangeTrackingService.asmx?op=PushEmployeeDataCh" +
                        "anges";
                    this.mUIPushEmployeeDataChanHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPushEmployeeDataChanHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"EmployeeChangeTrackingService.asmx";
                    this.mUIPushEmployeeDataChanHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIPushEmployeeDataChanHyperlink.WindowTitles.Add("EmployeeChangeTrackingService Web Service");
                    #endregion
                }
                return this.mUIPushEmployeeDataChanHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIPushEmployeeDataChanHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeServiceWebSeDocument : HtmlDocument
    {
        
        public UIEmployeeServiceWebSeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "EmployeeService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/EmployeeService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/EmployeeService.asmx";
            this.WindowTitles.Add("EmployeeService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane6 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane6(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane6 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane6 : HtmlDiv
    {
        
        public UIContentPane6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "EmployeeService\r\n\r\n\r\nEmployee related se";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("EmployeeService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetEmployeeHyperlink
        {
            get
            {
                if ((this.mUIGetEmployeeHyperlink == null))
                {
                    this.mUIGetEmployeeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetEmployee";
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/EmployeeService.asmx";
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/EmployeeService.asmx?op=GetEmployee";
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"EmployeeService.asmx?op=GetEmploye";
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetEmployeeHyperlink.WindowTitles.Add("EmployeeService Web Service");
                    #endregion
                }
                return this.mUIGetEmployeeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetEmployeeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeServiceV63WeDocument : HtmlDocument
    {
        
        public UIEmployeeServiceV63WeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "EmployeeServiceV63 Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/EmployeeServiceV63.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/EmployeeServiceV63.asmx";
            this.WindowTitles.Add("EmployeeServiceV63 Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane7 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane7(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane7 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane7 : HtmlDiv
    {
        
        public UIContentPane7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "EmployeeServiceV63\r\n\r\n\r\nEmployee related";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("EmployeeServiceV63 Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetEmployeeHyperlink
        {
            get
            {
                if ((this.mUIGetEmployeeHyperlink == null))
                {
                    this.mUIGetEmployeeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetEmployeeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetEmployee";
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/EmployeeServiceV63.asmx";
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/EmployeeServiceV63.asmx?op=GetEmployee";
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"EmployeeServiceV63.asmx?op=GetEmpl";
                    this.mUIGetEmployeeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetEmployeeHyperlink.WindowTitles.Add("EmployeeServiceV63 Web Service");
                    #endregion
                }
                return this.mUIGetEmployeeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetEmployeeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIExportServiceWebServDocument : HtmlDocument
    {
        
        public UIExportServiceWebServDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ExportService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/ExportService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/ExportService.asmx";
            this.WindowTitles.Add("ExportService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane8 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane8(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane8 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane8 : HtmlDiv
    {
        
        public UIContentPane8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ExportService\r\n\r\n\r\nService for managing ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("ExportService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIPostAfterSystemExporHyperlink
        {
            get
            {
                if ((this.mUIPostAfterSystemExporHyperlink == null))
                {
                    this.mUIPostAfterSystemExporHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIPostAfterSystemExporHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIPostAfterSystemExporHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPostAfterSystemExporHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPostAfterSystemExporHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "PostAfterSystemExportReceipt";
                    this.mUIPostAfterSystemExporHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/ExportService.asmx";
                    this.mUIPostAfterSystemExporHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPostAfterSystemExporHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/ExportService.asmx?op=PostAfterSystemExportReceipt";
                    this.mUIPostAfterSystemExporHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPostAfterSystemExporHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"ExportService.asmx?op=PostAfterSys";
                    this.mUIPostAfterSystemExporHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIPostAfterSystemExporHyperlink.WindowTitles.Add("ExportService Web Service");
                    #endregion
                }
                return this.mUIPostAfterSystemExporHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIPostAfterSystemExporHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatFlexServicesWebSeDocument : HtmlDocument
    {
        
        public UIGatFlexServicesWebSeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gat-Flex Services Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/FlexService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/FlexService.asmx";
            this.WindowTitles.Add("Gat-Flex Services Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane9 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane9(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane9 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane9 : HtmlDiv
    {
        
        public UIContentPane9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Gat-Flex Services\r\n\r\n\r\nServices related ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Gat-Flex Services Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDeleteQueueAbsencePeHyperlink
        {
            get
            {
                if ((this.mUIDeleteQueueAbsencePeHyperlink == null))
                {
                    this.mUIDeleteQueueAbsencePeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteQueueAbsencePeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDeleteQueueAbsencePeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteQueueAbsencePeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteQueueAbsencePeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "DeleteQueueAbsencePeriods";
                    this.mUIDeleteQueueAbsencePeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/FlexService.asmx";
                    this.mUIDeleteQueueAbsencePeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteQueueAbsencePeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/FlexService.asmx?op=DeleteQueueAbsencePeriods";
                    this.mUIDeleteQueueAbsencePeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDeleteQueueAbsencePeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"FlexService.asmx?op=DeleteQueueAbs";
                    this.mUIDeleteQueueAbsencePeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteQueueAbsencePeHyperlink.WindowTitles.Add("Gat-Flex Services Web Service");
                    #endregion
                }
                return this.mUIDeleteQueueAbsencePeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDeleteQueueAbsencePeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatGericaWebServiceDocument : HtmlDocument
    {
        
        public UIGatGericaWebServiceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "GatGerica Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/GatGerica.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/GatGerica.asmx";
            this.WindowTitles.Add("GatGerica Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane10 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane10(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane10 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane10 : HtmlDiv
    {
        
        public UIContentPane10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "GatGerica\r\n\r\n\r\nService adapter used by G";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("GatGerica Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIA_PrsGericaWS_GenereHyperlink
        {
            get
            {
                if ((this.mUIA_PrsGericaWS_GenereHyperlink == null))
                {
                    this.mUIA_PrsGericaWS_GenereHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIA_PrsGericaWS_GenereHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIA_PrsGericaWS_GenereHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIA_PrsGericaWS_GenereHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIA_PrsGericaWS_GenereHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "A_PrsGericaWS_Generell_Info";
                    this.mUIA_PrsGericaWS_GenereHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/GatGerica.asmx";
                    this.mUIA_PrsGericaWS_GenereHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIA_PrsGericaWS_GenereHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/GatGerica.asmx?op=A_PrsGericaWS_Generell_Info";
                    this.mUIA_PrsGericaWS_GenereHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIA_PrsGericaWS_GenereHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"GatGerica.asmx?op=A_PrsGericaWS_Ge";
                    this.mUIA_PrsGericaWS_GenereHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIA_PrsGericaWS_GenereHyperlink.WindowTitles.Add("GatGerica Web Service");
                    #endregion
                }
                return this.mUIA_PrsGericaWS_GenereHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIA_PrsGericaWS_GenereHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatTaskSchedulerDataDocument : HtmlDocument
    {
        
        public UIGatTaskSchedulerDataDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "GatTaskSchedulerDataService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/GatTaskSchedulerDataService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/GatTaskSchedulerDataService.asmx";
            this.WindowTitles.Add("GatTaskSchedulerDataService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane11 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane11(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane11 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane11 : HtmlDiv
    {
        
        public UIContentPane11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "GatTaskSchedulerDataService\r\n\r\n\r\nService";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("GatTaskSchedulerDataService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetScheduledTasksHyperlink
        {
            get
            {
                if ((this.mUIGetScheduledTasksHyperlink == null))
                {
                    this.mUIGetScheduledTasksHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetScheduledTasksHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetScheduledTasksHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetScheduledTasksHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetScheduledTasksHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetScheduledTasks";
                    this.mUIGetScheduledTasksHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/GatTaskSchedulerDataService.asmx";
                    this.mUIGetScheduledTasksHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetScheduledTasksHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/GatTaskSchedulerDataService.asmx?op=GetScheduledTasks";
                    this.mUIGetScheduledTasksHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetScheduledTasksHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"GatTaskSchedulerDataService.asmx?o";
                    this.mUIGetScheduledTasksHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetScheduledTasksHyperlink.WindowTitles.Add("GatTaskSchedulerDataService Web Service");
                    #endregion
                }
                return this.mUIGetScheduledTasksHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetScheduledTasksHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIImportServiceWebServDocument : HtmlDocument
    {
        
        public UIImportServiceWebServDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ImportService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/ImportService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/ImportService.asmx";
            this.WindowTitles.Add("ImportService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane12 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane12(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane12 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane12 : HtmlDiv
    {
        
        public UIContentPane12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ImportService\r\n\r\n\r\nService for managing ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("ImportService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIInsertDepEmpHyperlink
        {
            get
            {
                if ((this.mUIInsertDepEmpHyperlink == null))
                {
                    this.mUIInsertDepEmpHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIInsertDepEmpHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIInsertDepEmpHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIInsertDepEmpHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIInsertDepEmpHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "InsertDepEmp";
                    this.mUIInsertDepEmpHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/ImportService.asmx";
                    this.mUIInsertDepEmpHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIInsertDepEmpHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/ImportService.asmx?op=InsertDepEmp";
                    this.mUIInsertDepEmpHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIInsertDepEmpHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"ImportService.asmx?op=InsertDepEmp";
                    this.mUIInsertDepEmpHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIInsertDepEmpHyperlink.WindowTitles.Add("ImportService Web Service");
                    #endregion
                }
                return this.mUIInsertDepEmpHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIInsertDepEmpHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPatientInformationSeDocument : HtmlDocument
    {
        
        public UIPatientInformationSeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "PatientInformationService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/PatientInformationService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/PatientInformationService.asmx";
            this.WindowTitles.Add("PatientInformationService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane13 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane13(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane13 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane13 : HtmlDiv
    {
        
        public UIContentPane13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "PatientInformationService\r\n\r\n\r\nService f";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("PatientInformationService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetDepartmentAppointHyperlink
        {
            get
            {
                if ((this.mUIGetDepartmentAppointHyperlink == null))
                {
                    this.mUIGetDepartmentAppointHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetDepartmentAppointHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetDepartmentAppointHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetDepartmentAppointHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetDepartmentAppointHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetDepartmentAppointments";
                    this.mUIGetDepartmentAppointHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/PatientInformationService.asmx";
                    this.mUIGetDepartmentAppointHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetDepartmentAppointHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/PatientInformationService.asmx?op=GetDepartmentAppointme" +
                        "nts";
                    this.mUIGetDepartmentAppointHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetDepartmentAppointHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"PatientInformationService.asmx?op=";
                    this.mUIGetDepartmentAppointHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetDepartmentAppointHyperlink.WindowTitles.Add("PatientInformationService Web Service");
                    #endregion
                }
                return this.mUIGetDepartmentAppointHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetDepartmentAppointHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPayslipImportServiceDocument : HtmlDocument
    {
        
        public UIPayslipImportServiceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "PayslipImportService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/PayslipImportService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/PayslipImportService.asmx";
            this.WindowTitles.Add("PayslipImportService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane14 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane14(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane14 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane14 : HtmlDiv
    {
        
        public UIContentPane14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "PayslipImportService\r\n\r\n\r\nService for ma";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("PayslipImportService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIImportPayslipsHyperlink
        {
            get
            {
                if ((this.mUIImportPayslipsHyperlink == null))
                {
                    this.mUIImportPayslipsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIImportPayslipsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIImportPayslipsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIImportPayslipsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIImportPayslipsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ImportPayslips";
                    this.mUIImportPayslipsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/PayslipImportService.asmx";
                    this.mUIImportPayslipsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIImportPayslipsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/PayslipImportService.asmx?op=ImportPayslips";
                    this.mUIImportPayslipsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIImportPayslipsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"PayslipImportService.asmx?op=Impor";
                    this.mUIImportPayslipsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIImportPayslipsHyperlink.WindowTitles.Add("PayslipImportService Web Service");
                    #endregion
                }
                return this.mUIImportPayslipsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIImportPayslipsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIReshRosterServiceWebDocument : HtmlDocument
    {
        
        public UIReshRosterServiceWebDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ReshRosterService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/ReshRosterService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/ReshRosterService.asmx";
            this.WindowTitles.Add("ReshRosterService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane15 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane15(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane15 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane15 : HtmlDiv
    {
        
        public UIContentPane15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "ReshRosterService\r\n\r\n\r\nResh roster servi";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("ReshRosterService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetReshRosterHyperlink
        {
            get
            {
                if ((this.mUIGetReshRosterHyperlink == null))
                {
                    this.mUIGetReshRosterHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetReshRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetReshRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetReshRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetReshRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetReshRoster";
                    this.mUIGetReshRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/ReshRosterService.asmx";
                    this.mUIGetReshRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetReshRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/ReshRosterService.asmx?op=GetReshRoster";
                    this.mUIGetReshRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetReshRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"ReshRosterService.asmx?op=GetReshR";
                    this.mUIGetReshRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetReshRosterHyperlink.WindowTitles.Add("ReshRosterService Web Service");
                    #endregion
                }
                return this.mUIGetReshRosterHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetReshRosterHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISmsByMailReaderWebSeDocument : HtmlDocument
    {
        
        public UISmsByMailReaderWebSeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "SmsByMailReader Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/SmsByMailReader.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/SmsByMailReader.asmx";
            this.WindowTitles.Add("SmsByMailReader Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane16 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane16(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane16 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane16 : HtmlDiv
    {
        
        public UIContentPane16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SmsByMailReader\r\n\r\n\r\nSMSByMailReader Ser";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("SmsByMailReader Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIReadMailQueueAndCreaHyperlink
        {
            get
            {
                if ((this.mUIReadMailQueueAndCreaHyperlink == null))
                {
                    this.mUIReadMailQueueAndCreaHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIReadMailQueueAndCreaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIReadMailQueueAndCreaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIReadMailQueueAndCreaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIReadMailQueueAndCreaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ReadMailQueueAndCreateSms";
                    this.mUIReadMailQueueAndCreaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/SmsByMailReader.asmx";
                    this.mUIReadMailQueueAndCreaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIReadMailQueueAndCreaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/SmsByMailReader.asmx?op=ReadMailQueueAndCreateSms";
                    this.mUIReadMailQueueAndCreaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIReadMailQueueAndCreaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"SmsByMailReader.asmx?op=ReadMailQu";
                    this.mUIReadMailQueueAndCreaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIReadMailQueueAndCreaHyperlink.WindowTitles.Add("SmsByMailReader Web Service");
                    #endregion
                }
                return this.mUIReadMailQueueAndCreaHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIReadMailQueueAndCreaHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISmsGatewayServiceWebDocument : HtmlDocument
    {
        
        public UISmsGatewayServiceWebDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "SmsGatewayService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/SmsGatewayService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/SmsGatewayService.asmx";
            this.WindowTitles.Add("SmsGatewayService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane17 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane17(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane17 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane17 : HtmlDiv
    {
        
        public UIContentPane17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SmsGatewayService\r\n\r\n\r\nThis webservice r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("SmsGatewayService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddToInboxHyperlink
        {
            get
            {
                if ((this.mUIAddToInboxHyperlink == null))
                {
                    this.mUIAddToInboxHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddToInboxHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIAddToInboxHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddToInboxHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddToInboxHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "AddToInbox";
                    this.mUIAddToInboxHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/SmsGatewayService.asmx";
                    this.mUIAddToInboxHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddToInboxHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/SmsGatewayService.asmx?op=AddToInbox";
                    this.mUIAddToInboxHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIAddToInboxHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"SmsGatewayService.asmx?op=AddToInb";
                    this.mUIAddToInboxHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIAddToInboxHyperlink.WindowTitles.Add("SmsGatewayService Web Service");
                    #endregion
                }
                return this.mUIAddToInboxHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddToInboxHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISmsServiceWebServiceDocument : HtmlDocument
    {
        
        public UISmsServiceWebServiceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "SmsService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/SmsService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/SmsService.asmx";
            this.WindowTitles.Add("SmsService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane18 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane18(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane18 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane18 : HtmlDiv
    {
        
        public UIContentPane18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SmsService\r\n\r\n\r\nService for managing SMS";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("SmsService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIProcessSmsQueuesHyperlink
        {
            get
            {
                if ((this.mUIProcessSmsQueuesHyperlink == null))
                {
                    this.mUIProcessSmsQueuesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIProcessSmsQueuesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIProcessSmsQueuesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIProcessSmsQueuesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIProcessSmsQueuesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ProcessSmsQueues";
                    this.mUIProcessSmsQueuesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/SmsService.asmx";
                    this.mUIProcessSmsQueuesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIProcessSmsQueuesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/SmsService.asmx?op=ProcessSmsQueues";
                    this.mUIProcessSmsQueuesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIProcessSmsQueuesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"SmsService.asmx?op=ProcessSmsQueue";
                    this.mUIProcessSmsQueuesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIProcessSmsQueuesHyperlink.WindowTitles.Add("SmsService Web Service");
                    #endregion
                }
                return this.mUIProcessSmsQueuesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIProcessSmsQueuesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISystemInformationSerDocument : HtmlDocument
    {
        
        public UISystemInformationSerDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "SystemInformationService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/SystemInformationService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/SystemInformationService.asmx";
            this.WindowTitles.Add("SystemInformationService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane19 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane19(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane19 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane19 : HtmlDiv
    {
        
        public UIContentPane19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "SystemInformationService\r\n\r\n\r\nService pr";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("SystemInformationService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetAliveStatusHyperlink
        {
            get
            {
                if ((this.mUIGetAliveStatusHyperlink == null))
                {
                    this.mUIGetAliveStatusHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetAliveStatusHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetAliveStatusHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetAliveStatusHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetAliveStatusHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetAliveStatus";
                    this.mUIGetAliveStatusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/SystemInformationService.asmx";
                    this.mUIGetAliveStatusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetAliveStatusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/SystemInformationService.asmx?op=GetAliveStatus";
                    this.mUIGetAliveStatusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetAliveStatusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"SystemInformationService.asmx?op=G";
                    this.mUIGetAliveStatusHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetAliveStatusHyperlink.WindowTitles.Add("SystemInformationService Web Service");
                    #endregion
                }
                return this.mUIGetAliveStatusHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetAliveStatusHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITaskAgreementServiceDocument : HtmlDocument
    {
        
        public UITaskAgreementServiceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "TaskAgreementService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/TaskAgreementService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/TaskAgreementService.asmx";
            this.WindowTitles.Add("TaskAgreementService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane20 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane20(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane20 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane20 : HtmlDiv
    {
        
        public UIContentPane20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "TaskAgreementService\r\n\r\n\r\nTask agreement";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("TaskAgreementService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIUpdateTaskAgreementHyperlink
        {
            get
            {
                if ((this.mUIUpdateTaskAgreementHyperlink == null))
                {
                    this.mUIUpdateTaskAgreementHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIUpdateTaskAgreementHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIUpdateTaskAgreementHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIUpdateTaskAgreementHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIUpdateTaskAgreementHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "UpdateTaskAgreement";
                    this.mUIUpdateTaskAgreementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/TaskAgreementService.asmx";
                    this.mUIUpdateTaskAgreementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIUpdateTaskAgreementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/TaskAgreementService.asmx?op=UpdateTaskAgreement";
                    this.mUIUpdateTaskAgreementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIUpdateTaskAgreementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"TaskAgreementService.asmx?op=Updat";
                    this.mUIUpdateTaskAgreementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIUpdateTaskAgreementHyperlink.WindowTitles.Add("TaskAgreementService Web Service");
                    #endregion
                }
                return this.mUIUpdateTaskAgreementHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIUpdateTaskAgreementHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITesServiceWebServiceDocument : HtmlDocument
    {
        
        public UITesServiceWebServiceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "TesService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/TesService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/TesService.asmx";
            this.WindowTitles.Add("TesService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane21 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane21(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane21 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane21 : HtmlDiv
    {
        
        public UIContentPane21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "TesService\r\n\r\n\r\nTES integration Service.";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("TesService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetWorkShiftDataHyperlink
        {
            get
            {
                if ((this.mUIGetWorkShiftDataHyperlink == null))
                {
                    this.mUIGetWorkShiftDataHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetWorkShiftDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetWorkShiftDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetWorkShiftDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetWorkShiftDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetWorkShiftData";
                    this.mUIGetWorkShiftDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/TesService.asmx";
                    this.mUIGetWorkShiftDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetWorkShiftDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/TesService.asmx?op=GetWorkShiftData";
                    this.mUIGetWorkShiftDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetWorkShiftDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"TesService.asmx?op=GetWorkShiftDat";
                    this.mUIGetWorkShiftDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetWorkShiftDataHyperlink.WindowTitles.Add("TesService Web Service");
                    #endregion
                }
                return this.mUIGetWorkShiftDataHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetWorkShiftDataHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITestServiceWebServicDocument : HtmlDocument
    {
        
        public UITestServiceWebServicDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "TestService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/TestService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/TestService.asmx";
            this.WindowTitles.Add("TestService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane22 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane22(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane22 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane22 : HtmlDiv
    {
        
        public UIContentPane22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "TestService\r\n\r\n\r\nContains methods for te";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("TestService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UITestDatabaseConnectiHyperlink
        {
            get
            {
                if ((this.mUITestDatabaseConnectiHyperlink == null))
                {
                    this.mUITestDatabaseConnectiHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUITestDatabaseConnectiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUITestDatabaseConnectiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUITestDatabaseConnectiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUITestDatabaseConnectiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "TestDatabaseConnection";
                    this.mUITestDatabaseConnectiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/TestService.asmx";
                    this.mUITestDatabaseConnectiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUITestDatabaseConnectiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/TestService.asmx?op=TestDatabaseConnection";
                    this.mUITestDatabaseConnectiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUITestDatabaseConnectiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"TestService.asmx?op=TestDatabaseCo";
                    this.mUITestDatabaseConnectiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUITestDatabaseConnectiHyperlink.WindowTitles.Add("TestService Web Service");
                    #endregion
                }
                return this.mUITestDatabaseConnectiHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUITestDatabaseConnectiHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWeaBreakServiceWebSeDocument : HtmlDocument
    {
        
        public UIWeaBreakServiceWebSeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "WeaBreakService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/WeaBreakService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs1/WeaBreakService.asmx";
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane23 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane23(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane23 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane23 : HtmlDiv
    {
        
        public UIContentPane23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "WeaBreakService\r\n\r\n\r\nGat Wea break relat";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("WeaBreakService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICalculateWeaAndSaveWHyperlink
        {
            get
            {
                if ((this.mUICalculateWeaAndSaveWHyperlink == null))
                {
                    this.mUICalculateWeaAndSaveWHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICalculateWeaAndSaveWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "CalculateWeaAndSaveWeaBreaksOverrideScheduler";
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/WeaBreakService.asmx";
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs1/WeaBreakService.asmx?op=CalculateWeaAndSaveWeaBreaksOver" +
                        "rideScheduler";
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"WeaBreakService.asmx?op=CalculateW";
                    this.mUICalculateWeaAndSaveWHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUICalculateWeaAndSaveWHyperlink.WindowTitles.Add("WeaBreakService Web Service");
                    #endregion
                }
                return this.mUICalculateWeaAndSaveWHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICalculateWeaAndSaveWHyperlink;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatWebserviceMainPagDocument1 : HtmlDocument
    {

        public UIGatWebserviceMainPagDocument1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gat Webservice Main Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1_se/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1_se/";
            this.WindowTitles.Add("Gat Webservice Main Page");
            #endregion
        }

        #region Properties
        public HtmlHyperlink UISickleaveMessageImportServiceHyperlink
        {
            get
            {
                if ((this.mUISickleaveMessageImportService == null))
                {
                    this.mUISickleaveMessageImportService = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISickleaveMessageImportService.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISickleaveMessageImportService.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISickleaveMessageImportService.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "SickleaveMessageImportService";
                    this.mUISickleaveMessageImportService.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/SickleaveMessageImportService.svc";
                    this.mUISickleaveMessageImportService.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISickleaveMessageImportService.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1_se/RoleDepartmentService.asmx";
                    this.mUISickleaveMessageImportService.WindowTitles.Add("Gat Webservice Main Page");
                    #endregion
                }
                return this.mUISickleaveMessageImportService;
            }
        }
        #endregion

        #region Fields
        private HtmlHyperlink mUISickleaveMessageImportService;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatWebserviceMainPagDocument2 : HtmlDocument
    {
        
        public UIGatWebserviceMainPagDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gat Webservice Main Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1/";
            this.WindowTitles.Add("Gat Webservice Main Page");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIRoleDepartmentServicHyperlink
        {
            get
            {
                if ((this.mUIRoleDepartmentServicHyperlink == null))
                {
                    this.mUIRoleDepartmentServicHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIRoleDepartmentServicHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "RoleDepartmentServiceV65";
                    this.mUIRoleDepartmentServicHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/RoleDepartmentServiceV65.asmx";
                    this.mUIRoleDepartmentServicHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIRoleDepartmentServicHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/RoleDepartmentServiceV65.asmx";
                    #endregion
                }
                return this.mUIRoleDepartmentServicHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIRoleDepartmentServicHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatWebservices2MainPWindow : BrowserWindow
    {
        
        public UIGatWebservices2MainPWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Gat Webservices2 Main Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Gat Webservices2 Main Page");
            //this.WindowTitles.Add("CommunicationQueueService Web Service");
            //this.WindowTitles.Add("DepartmentService Web Service");
            //this.WindowTitles.Add("IdmService Web Service");
            //this.WindowTitles.Add("TimeregImport Web Service");
            //this.WindowTitles.Add("UniqueService Web Service");
            //this.WindowTitles.Add("WishPlanWebService Web Service");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGatWebservices2MainPDocument UIGatWebservices2MainPDocument
        {
            get
            {
                if ((this.mUIGatWebservices2MainPDocument == null))
                {
                    this.mUIGatWebservices2MainPDocument = new UIGatWebservices2MainPDocument(this);
                }
                return this.mUIGatWebservices2MainPDocument;
            }
        }
        
        public UICommunicationQueueSeDocument UICommunicationQueueSeDocument
        {
            get
            {
                if ((this.mUICommunicationQueueSeDocument == null))
                {
                    this.mUICommunicationQueueSeDocument = new UICommunicationQueueSeDocument(this);
                }
                return this.mUICommunicationQueueSeDocument;
            }
        }
        
        public UIDepartmentServiceWebDocument UIDepartmentServiceWebDocument
        {
            get
            {
                if ((this.mUIDepartmentServiceWebDocument == null))
                {
                    this.mUIDepartmentServiceWebDocument = new UIDepartmentServiceWebDocument(this);
                }
                return this.mUIDepartmentServiceWebDocument;
            }
        }
        
        public UIIdmServiceWebServiceDocument UIIdmServiceWebServiceDocument
        {
            get
            {
                if ((this.mUIIdmServiceWebServiceDocument == null))
                {
                    this.mUIIdmServiceWebServiceDocument = new UIIdmServiceWebServiceDocument(this);
                }
                return this.mUIIdmServiceWebServiceDocument;
            }
        }
        
        public UITimeregImportWebServDocument UITimeregImportWebServDocument
        {
            get
            {
                if ((this.mUITimeregImportWebServDocument == null))
                {
                    this.mUITimeregImportWebServDocument = new UITimeregImportWebServDocument(this);
                }
                return this.mUITimeregImportWebServDocument;
            }
        }
        
        public UIUniqueServiceWebServDocument UIUniqueServiceWebServDocument
        {
            get
            {
                if ((this.mUIUniqueServiceWebServDocument == null))
                {
                    this.mUIUniqueServiceWebServDocument = new UIUniqueServiceWebServDocument(this);
                }
                return this.mUIUniqueServiceWebServDocument;
            }
        }
        
        public UIWishPlanWebServiceWeDocument UIWishPlanWebServiceWeDocument
        {
            get
            {
                if ((this.mUIWishPlanWebServiceWeDocument == null))
                {
                    this.mUIWishPlanWebServiceWeDocument = new UIWishPlanWebServiceWeDocument(this);
                }
                return this.mUIWishPlanWebServiceWeDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGatWebservices2MainPDocument mUIGatWebservices2MainPDocument;
        
        private UICommunicationQueueSeDocument mUICommunicationQueueSeDocument;
        
        private UIDepartmentServiceWebDocument mUIDepartmentServiceWebDocument;
        
        private UIIdmServiceWebServiceDocument mUIIdmServiceWebServiceDocument;
        
        private UITimeregImportWebServDocument mUITimeregImportWebServDocument;
        
        private UIUniqueServiceWebServDocument mUIUniqueServiceWebServDocument;
        
        private UIWishPlanWebServiceWeDocument mUIWishPlanWebServiceWeDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatWebservices2MainPDocument : HtmlDocument
    {
        
        public UIGatWebservices2MainPDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gat Webservices2 Main Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs2/";
            //this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs2/";
            this.WindowTitles.Add("Gat Webservices2 Main Page");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIGatWebservices2v6423Pane
        {
            get
            {
                if ((this.mUIGatWebservices2v6423Pane == null))
                {
                    this.mUIGatWebservices2v6423Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIGatWebservices2v6423Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = "lblTitle";
                    this.mUIGatWebservices2v6423Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Gat Webservices2";
                    this.mUIGatWebservices2v6423Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"lblTitle\"";
                    this.mUIGatWebservices2v6423Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIGatWebservices2v6423Pane.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatWebservices2v6423Pane;
            }
        }
        
        public HtmlHyperlink UICommunicationQueueSeHyperlink
        {
            get
            {
                if ((this.mUICommunicationQueueSeHyperlink == null))
                {
                    this.mUICommunicationQueueSeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICommunicationQueueSeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "CommunicationQueueService";
                    this.mUICommunicationQueueSeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/CommunicationQueueService.asmx";
                    this.mUICommunicationQueueSeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICommunicationQueueSeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/CommunicationQueueService.asmx";
                    #endregion
                }
                return this.mUICommunicationQueueSeHyperlink;
            }
        }
        
        public HtmlHyperlink UIIdmServiceHyperlink
        {
            get
            {
                if ((this.mUIIdmServiceHyperlink == null))
                {
                    this.mUIIdmServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIIdmServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "IdmService";
                    this.mUIIdmServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/IdmService.asmx";
                    this.mUIIdmServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIIdmServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/IdmService.asmx";
                    #endregion
                }
                return this.mUIIdmServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UITimeregImportHyperlink
        {
            get
            {
                if ((this.mUITimeregImportHyperlink == null))
                {
                    this.mUITimeregImportHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUITimeregImportHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "TimeregImport";
                    this.mUITimeregImportHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/TimeregImport.asmx";
                    this.mUITimeregImportHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUITimeregImportHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/TimeregImport.asmx";
                    #endregion
                }
                return this.mUITimeregImportHyperlink;
            }
        }
        
        public HtmlHyperlink UIUniqueServiceHyperlink
        {
            get
            {
                if ((this.mUIUniqueServiceHyperlink == null))
                {
                    this.mUIUniqueServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIUniqueServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "UniqueService";
                    this.mUIUniqueServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/UniqueService.asmx";
                    this.mUIUniqueServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIUniqueServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/UniqueService.asmx";
                    #endregion
                }
                return this.mUIUniqueServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UIWishPlanWebServiceHyperlink
        {
            get
            {
                if ((this.mUIWishPlanWebServiceHyperlink == null))
                {
                    this.mUIWishPlanWebServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIWishPlanWebServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "WishPlanWebService";
                    this.mUIWishPlanWebServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/WishPlanWebService.asmx";
                    this.mUIWishPlanWebServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIWishPlanWebServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/WishPlanWebService.asmx";
                    #endregion
                }
                return this.mUIWishPlanWebServiceHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIGatWebservices2v6423Pane;
        
        private HtmlHyperlink mUICommunicationQueueSeHyperlink;
        
        private HtmlHyperlink mUIIdmServiceHyperlink;
        
        private HtmlHyperlink mUITimeregImportHyperlink;
        
        private HtmlHyperlink mUIUniqueServiceHyperlink;
        
        private HtmlHyperlink mUIWishPlanWebServiceHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICommunicationQueueSeDocument : HtmlDocument
    {
        
        public UICommunicationQueueSeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "CommunicationQueueService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs2/CommunicationQueueService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs2/CommunicationQueueService.asmx";
            this.WindowTitles.Add("CommunicationQueueService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane24 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane24(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane24 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane24 : HtmlDiv
    {
        
        public UIContentPane24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "CommunicationQueueService\r\n\r\n\r\nService f";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("CommunicationQueueService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIFillMessageQueueWithHyperlink
        {
            get
            {
                if ((this.mUIFillMessageQueueWithHyperlink == null))
                {
                    this.mUIFillMessageQueueWithHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFillMessageQueueWithHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIFillMessageQueueWithHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFillMessageQueueWithHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFillMessageQueueWithHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "FillMessageQueueWithDashboardWarnings";
                    this.mUIFillMessageQueueWithHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/CommunicationQueueService.asmx";
                    this.mUIFillMessageQueueWithHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFillMessageQueueWithHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/CommunicationQueueService.asmx?op=FillMessageQueueWithDa" +
                        "shboardWarnings";
                    this.mUIFillMessageQueueWithHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIFillMessageQueueWithHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"CommunicationQueueService.asmx?op=";
                    this.mUIFillMessageQueueWithHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIFillMessageQueueWithHyperlink.WindowTitles.Add("CommunicationQueueService Web Service");
                    #endregion
                }
                return this.mUIFillMessageQueueWithHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIFillMessageQueueWithHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDepartmentServiceWebDocument : HtmlDocument
    {
        
        public UIDepartmentServiceWebDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "DepartmentService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs2/DepartmentService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs2/DepartmentService.asmx";
            this.WindowTitles.Add("DepartmentService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane25 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane25(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane25 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane25 : HtmlDiv
    {
        
        public UIContentPane25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "DepartmentService\r\n\r\n\r\nService for handl";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("DepartmentService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetRoleDepartmentRosHyperlink
        {
            get
            {
                if ((this.mUIGetRoleDepartmentRosHyperlink == null))
                {
                    this.mUIGetRoleDepartmentRosHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetRoleDepartmentRosHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetRoleDepartmentRosHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetRoleDepartmentRosHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetRoleDepartmentRosHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetRoleDepartmentRoster2";
                    this.mUIGetRoleDepartmentRosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/DepartmentService.asmx";
                    this.mUIGetRoleDepartmentRosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetRoleDepartmentRosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/DepartmentService.asmx?op=GetRoleDepartmentRoster2";
                    this.mUIGetRoleDepartmentRosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetRoleDepartmentRosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"DepartmentService.asmx?op=GetRoleD";
                    this.mUIGetRoleDepartmentRosHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetRoleDepartmentRosHyperlink.WindowTitles.Add("DepartmentService Web Service");
                    #endregion
                }
                return this.mUIGetRoleDepartmentRosHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetRoleDepartmentRosHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIIdmServiceWebServiceDocument : HtmlDocument
    {
        
        public UIIdmServiceWebServiceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "IdmService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs2/IdmService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs2/IdmService.asmx";
            this.WindowTitles.Add("IdmService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane26 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane26(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane26 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane26 : HtmlDiv
    {
        
        public UIContentPane26(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "IdmService\r\n\r\n\r\nThis is a web service fo";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("IdmService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIActivateUserHyperlink
        {
            get
            {
                if ((this.mUIActivateUserHyperlink == null))
                {
                    this.mUIActivateUserHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIActivateUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIActivateUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIActivateUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIActivateUserHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ActivateUser";
                    this.mUIActivateUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/IdmService.asmx";
                    this.mUIActivateUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIActivateUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/IdmService.asmx?op=ActivateUser";
                    this.mUIActivateUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIActivateUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"IdmService.asmx?op=ActivateUser\"";
                    this.mUIActivateUserHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIActivateUserHyperlink.WindowTitles.Add("IdmService Web Service");
                    #endregion
                }
                return this.mUIActivateUserHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIActivateUserHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITimeregImportWebServDocument : HtmlDocument
    {
        
        public UITimeregImportWebServDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "TimeregImport Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs2/TimeregImport.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs2/TimeregImport.asmx";
            this.WindowTitles.Add("TimeregImport Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane27 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane27(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane27 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane27 : HtmlDiv
    {
        
        public UIContentPane27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "TimeregImport\r\n\r\n\r\nThis web service has ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("TimeregImport Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIImportTimeregRegistrHyperlink
        {
            get
            {
                if ((this.mUIImportTimeregRegistrHyperlink == null))
                {
                    this.mUIImportTimeregRegistrHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIImportTimeregRegistrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIImportTimeregRegistrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIImportTimeregRegistrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIImportTimeregRegistrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ImportTimeregRegistration";
                    this.mUIImportTimeregRegistrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/TimeregImport.asmx";
                    this.mUIImportTimeregRegistrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIImportTimeregRegistrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/TimeregImport.asmx?op=ImportTimeregRegistration";
                    this.mUIImportTimeregRegistrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIImportTimeregRegistrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"TimeregImport.asmx?op=ImportTimere";
                    this.mUIImportTimeregRegistrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIImportTimeregRegistrHyperlink.WindowTitles.Add("TimeregImport Web Service");
                    #endregion
                }
                return this.mUIImportTimeregRegistrHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIImportTimeregRegistrHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIUniqueServiceWebServDocument : HtmlDocument
    {
        
        public UIUniqueServiceWebServDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "UniqueService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs2/UniqueService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs2/UniqueService.asmx";
            this.WindowTitles.Add("UniqueService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane28 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane28(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane28 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane28 : HtmlDiv
    {
        
        public UIContentPane28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "UniqueService\r\n\r\n\r\nThis web service is m";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("UniqueService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIProfilturnusFaaPersoHyperlink
        {
            get
            {
                if ((this.mUIProfilturnusFaaPersoHyperlink == null))
                {
                    this.mUIProfilturnusFaaPersoHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIProfilturnusFaaPersoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIProfilturnusFaaPersoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIProfilturnusFaaPersoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIProfilturnusFaaPersoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ProfilturnusFaaPerson";
                    this.mUIProfilturnusFaaPersoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/UniqueService.asmx";
                    this.mUIProfilturnusFaaPersoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIProfilturnusFaaPersoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/UniqueService.asmx?op=ProfilturnusFaaPerson";
                    this.mUIProfilturnusFaaPersoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIProfilturnusFaaPersoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"UniqueService.asmx?op=Profilturnus";
                    this.mUIProfilturnusFaaPersoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIProfilturnusFaaPersoHyperlink.WindowTitles.Add("UniqueService Web Service");
                    #endregion
                }
                return this.mUIProfilturnusFaaPersoHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIProfilturnusFaaPersoHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWishPlanWebServiceWeDocument : HtmlDocument
    {
        
        public UIWishPlanWebServiceWeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "WishPlanWebService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs2/WishPlanWebService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/GatWs2/WishPlanWebService.asmx";
            this.WindowTitles.Add("WishPlanWebService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane29 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane29(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane29 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane29 : HtmlDiv
    {
        
        public UIContentPane29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "WishPlanWebService\r\n\r\n\r\nThis web service";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("WishPlanWebService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetAdditionalDataHyperlink
        {
            get
            {
                if ((this.mUIGetAdditionalDataHyperlink == null))
                {
                    this.mUIGetAdditionalDataHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetAdditionalDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetAdditionalDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetAdditionalDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetAdditionalDataHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetAdditionalData";
                    this.mUIGetAdditionalDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs2/WishPlanWebService.asmx";
                    this.mUIGetAdditionalDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetAdditionalDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost/GatWs2/WishPlanWebService.asmx?op=GetAdditionalData";
                    this.mUIGetAdditionalDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetAdditionalDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"WishPlanWebService.asmx?op=GetAddi";
                    this.mUIGetAdditionalDataHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetAdditionalDataHyperlink.WindowTitles.Add("WishPlanWebService Web Service");
                    #endregion
                }
                return this.mUIGetAdditionalDataHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetAdditionalDataHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatFlexWindow : WinWindow
    {
        
        public UIGatFlexWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GatFlex";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("GatFlex");
            #endregion
        }
        
        #region Properties
        public UIItemWindow27 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow27(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow27 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow27 : WinWindow
    {
        
        public UIItemWindow27(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("GatFlex");
            #endregion
        }
        
        #region Properties
        public UIGatFlexTimeClockListItem UIGatFlexTimeClockListItem
        {
            get
            {
                if ((this.mUIGatFlexTimeClockListItem == null))
                {
                    this.mUIGatFlexTimeClockListItem = new UIGatFlexTimeClockListItem(this);
                }
                return this.mUIGatFlexTimeClockListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIGatFlexTimeClockListItem mUIGatFlexTimeClockListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatFlexTimeClockListItem : WinListItem
    {
        
        public UIGatFlexTimeClockListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "GatFlexTimeClock";
            this.WindowTitles.Add("GatFlex");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("GatFlex");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238306ASCLAvWindow : WinWindow
    {
        
        public UIGatver64238306ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow28 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow28(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow110 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow110(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIGatver64238306ASCLAvTitleBar UIGatver64238306ASCLAvTitleBar
        {
            get
            {
                if ((this.mUIGatver64238306ASCLAvTitleBar == null))
                {
                    this.mUIGatver64238306ASCLAvTitleBar = new UIGatver64238306ASCLAvTitleBar(this);
                }
                return this.mUIGatver64238306ASCLAvTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow28 mUIItemWindow;
        
        private UIItemWindow110 mUIItemWindow1;
        
        private UIGatver64238306ASCLAvTitleBar mUIGatver64238306ASCLAvTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow28 : WinWindow
    {
        
        public UIItemWindow28(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64238306ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64238306ASCLAvClient == null))
                {
                    this.mUIGatver64238306ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64238306ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver64238306ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64238306ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow110 : WinWindow
    {
        
        public UIItemWindow110(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAdministrasjonClient
        {
            get
            {
                if ((this.mUIAdministrasjonClient == null))
                {
                    this.mUIAdministrasjonClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAdministrasjonClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAdministrasjonClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAdministrasjonClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238306ASCLAvTitleBar : WinTitleBar
    {
        
        public UIGatver64238306ASCLAvTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIVelgradWindow : WinWindow
    {
        
        public UIVelgradWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Velg rad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmGridSearch";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow29 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow29(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow29 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow29 : WinWindow
    {
        
        public UIItemWindow29(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TEdit";
            this.WindowTitles.Add("Velg rad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Velg rad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOppsettavstemplingskWindow : WinWindow
    {
        
        public UIOppsettavstemplingskWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Oppsett av stempling skjerm";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmFlexUnitAdm";
            this.WindowTitles.Add("Oppsett av stempling skjerm");
            #endregion
        }
        
        #region Properties
        public UIItemWindow30 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow30(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow113 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow113(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow30 mUIItemWindow;
        
        private UIItemWindow113 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow30 : WinWindow
    {
        
        public UIItemWindow30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Oppsett av stempling skjerm");
            #endregion
        }
        
        #region Properties
        public UIOppsettavstemplingskClient UIOppsettavstemplingskClient
        {
            get
            {
                if ((this.mUIOppsettavstemplingskClient == null))
                {
                    this.mUIOppsettavstemplingskClient = new UIOppsettavstemplingskClient(this);
                }
                return this.mUIOppsettavstemplingskClient;
            }
        }
        #endregion
        
        #region Fields
        private UIOppsettavstemplingskClient mUIOppsettavstemplingskClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOppsettavstemplingskClient : WinClient
    {
        
        public UIOppsettavstemplingskClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Oppsett av stempling skjerm");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Oppsett av stempling skjerm");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("Oppsett av stempling skjerm");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow113 : WinWindow
    {
        
        public UIItemWindow113(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Oppsett av stempling skjerm");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsatteClient
        {
            get
            {
                if ((this.mUIAnsatteClient == null))
                {
                    this.mUIAnsatteClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsatteClient.WindowTitles.Add("Oppsett av stempling skjerm");
                    #endregion
                }
                return this.mUIAnsatteClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsatteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGATFlexWindow1 : WinWindow
    {
        
        public UIGATFlexWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GAT-Flex";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIDocumentsHostTabList UIDocumentsHostTabList
        {
            get
            {
                if ((this.mUIDocumentsHostTabList == null))
                {
                    this.mUIDocumentsHostTabList = new UIDocumentsHostTabList(this);
                }
                return this.mUIDocumentsHostTabList;
            }
        }
        
        public UITcEmployeesWindow1 UITcEmployeesWindow
        {
            get
            {
                if ((this.mUITcEmployeesWindow == null))
                {
                    this.mUITcEmployeesWindow = new UITcEmployeesWindow1(this);
                }
                return this.mUITcEmployeesWindow;
            }
        }
        
        public WinClient UIWindowsUIButtonPanelClient
        {
            get
            {
                if ((this.mUIWindowsUIButtonPanelClient == null))
                {
                    this.mUIWindowsUIButtonPanelClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIWindowsUIButtonPanelClient.SearchProperties[WinControl.PropertyNames.Name] = "windowsUIButtonPanel1";
                    this.mUIWindowsUIButtonPanelClient.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIWindowsUIButtonPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentsHostTabList mUIDocumentsHostTabList;
        
        private UITcEmployeesWindow1 mUITcEmployeesWindow;
        
        private WinClient mUIWindowsUIButtonPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDocumentsHostTabList : DXTestControl
    {
        
        public UIDocumentsHostTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentsHost[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentsHost";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIAlleansatteCustom UIAlleansatteCustom
        {
            get
            {
                if ((this.mUIAlleansatteCustom == null))
                {
                    this.mUIAlleansatteCustom = new UIAlleansatteCustom(this);
                }
                return this.mUIAlleansatteCustom;
            }
        }
        
        public UIAnsattCustom UIAnsattCustom
        {
            get
            {
                if ((this.mUIAnsattCustom == null))
                {
                    this.mUIAnsattCustom = new UIAnsattCustom(this);
                }
                return this.mUIAnsattCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAlleansatteCustom mUIAlleansatteCustom;
        
        private UIAnsattCustom mUIAnsattCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAlleansatteCustom : DXTestControl
    {
        
        public UIAlleansatteCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Alle ansatte";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSelectionConCustom UIEmployeeSelectionConCustom
        {
            get
            {
                if ((this.mUIEmployeeSelectionConCustom == null))
                {
                    this.mUIEmployeeSelectionConCustom = new UIEmployeeSelectionConCustom(this);
                }
                return this.mUIEmployeeSelectionConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSelectionConCustom mUIEmployeeSelectionConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeSelectionConCustom : DXTestControl
    {
        
        public UIEmployeeSelectionConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSelectionControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSelectionControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UITcEmployeesWindow UITcEmployeesWindow
        {
            get
            {
                if ((this.mUITcEmployeesWindow == null))
                {
                    this.mUITcEmployeesWindow = new UITcEmployeesWindow(this);
                }
                return this.mUITcEmployeesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITcEmployeesWindow mUITcEmployeesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcEmployeesWindow : WinWindow
    {
        
        public UITcEmployeesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tcEmployees";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public WinClient UITcEmployeesClient
        {
            get
            {
                if ((this.mUITcEmployeesClient == null))
                {
                    this.mUITcEmployeesClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITcEmployeesClient.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUITcEmployeesClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITcEmployeesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAnsattCustom : DXTestControl
    {
        
        public UIAnsattCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatt";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeClockControlCustom UIEmployeeClockControlCustom
        {
            get
            {
                if ((this.mUIEmployeeClockControlCustom == null))
                {
                    this.mUIEmployeeClockControlCustom = new UIEmployeeClockControlCustom(this);
                }
                return this.mUIEmployeeClockControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeClockControlCustom mUIEmployeeClockControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeClockControlCustom : DXTestControl
    {
        
        public UIEmployeeClockControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeClockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeClockControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIXscMainScrollableControl UIXscMainScrollableControl
        {
            get
            {
                if ((this.mUIXscMainScrollableControl == null))
                {
                    this.mUIXscMainScrollableControl = new UIXscMainScrollableControl(this);
                }
                return this.mUIXscMainScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscMainScrollableControl mUIXscMainScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIXscMainScrollableControl : DXScrollableControl
    {
        
        public UIXscMainScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXButton UIStempleinnButton
        {
            get
            {
                if ((this.mUIStempleinnButton == null))
                {
                    this.mUIStempleinnButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIStempleinnButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClockIn";
                    this.mUIStempleinnButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ClockButton";
                    this.mUIStempleinnButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUIStempleinnButton.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIStempleinnButton;
            }
        }
        
        public DXButton UIStempleutButton
        {
            get
            {
                if ((this.mUIStempleutButton == null))
                {
                    this.mUIStempleutButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIStempleutButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClockOut";
                    this.mUIStempleutButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ClockButton";
                    this.mUIStempleutButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUIStempleutButton.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIStempleutButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIStempleinnButton;
        
        private DXButton mUIStempleutButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcEmployeesWindow1 : WinWindow
    {
        
        public UITcEmployeesWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tcEmployees";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public WinClient UITcEmployeesClient
        {
            get
            {
                if ((this.mUITcEmployeesClient == null))
                {
                    this.mUITcEmployeesClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITcEmployeesClient.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUITcEmployeesClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITcEmployeesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGATFlexWindow11 : DXWindow
    {
        
        public UIGATFlexWindow11()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GAT-Flex";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIDocumentsHostTabList1 UIDocumentsHostTabList
        {
            get
            {
                if ((this.mUIDocumentsHostTabList == null))
                {
                    this.mUIDocumentsHostTabList = new UIDocumentsHostTabList1(this);
                }
                return this.mUIDocumentsHostTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentsHostTabList1 mUIDocumentsHostTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDocumentsHostTabList1 : DXTestControl
    {
        
        public UIDocumentsHostTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentsHost[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentsHost";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UISøketteransattCustom UISøketteransattCustom
        {
            get
            {
                if ((this.mUISøketteransattCustom == null))
                {
                    this.mUISøketteransattCustom = new UISøketteransattCustom(this);
                }
                return this.mUISøketteransattCustom;
            }
        }
        
        public UIAnsattCustom1 UIAnsattCustom
        {
            get
            {
                if ((this.mUIAnsattCustom == null))
                {
                    this.mUIAnsattCustom = new UIAnsattCustom1(this);
                }
                return this.mUIAnsattCustom;
            }
        }
        
        public UIAllaanställdaCustom UIAllaanställdaCustom
        {
            get
            {
                if ((this.mUIAllaanställdaCustom == null))
                {
                    this.mUIAllaanställdaCustom = new UIAllaanställdaCustom(this);
                }
                return this.mUIAllaanställdaCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISøketteransattCustom mUISøketteransattCustom;
        
        private UIAnsattCustom1 mUIAnsattCustom;
        
        private UIAllaanställdaCustom mUIAllaanställdaCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISøketteransattCustom : DXTestControl
    {
        
        public UISøketteransattCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Søk etter ansatt";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSearchControCustom UIEmployeeSearchControCustom
        {
            get
            {
                if ((this.mUIEmployeeSearchControCustom == null))
                {
                    this.mUIEmployeeSearchControCustom = new UIEmployeeSearchControCustom(this);
                }
                return this.mUIEmployeeSearchControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSearchControCustom mUIEmployeeSearchControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeSearchControCustom : DXTestControl
    {
        
        public UIEmployeeSearchControCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSearchControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSearchControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtSearchEdit
        {
            get
            {
                if ((this.mUITxtSearchEdit == null))
                {
                    this.mUITxtSearchEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtSearchEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSearch";
                    this.mUITxtSearchEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITxtSearchEdit.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUITxtSearchEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtSearchEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAnsattCustom1 : DXTestControl
    {
        
        public UIAnsattCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatt";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeClockControlCustom1 UIEmployeeClockControlCustom
        {
            get
            {
                if ((this.mUIEmployeeClockControlCustom == null))
                {
                    this.mUIEmployeeClockControlCustom = new UIEmployeeClockControlCustom1(this);
                }
                return this.mUIEmployeeClockControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeClockControlCustom1 mUIEmployeeClockControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeClockControlCustom1 : DXTestControl
    {
        
        public UIEmployeeClockControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeClockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeClockControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXScrollableControl UIXscMainScrollableControl
        {
            get
            {
                if ((this.mUIXscMainScrollableControl == null))
                {
                    this.mUIXscMainScrollableControl = new DXScrollableControl(this);
                    #region Search Criteria
                    this.mUIXscMainScrollableControl.SearchProperties[DXTestControl.PropertyNames.Name] = "xscMain";
                    this.mUIXscMainScrollableControl.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
                    this.mUIXscMainScrollableControl.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIXscMainScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private DXScrollableControl mUIXscMainScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAllaanställdaCustom : DXTestControl
    {
        
        public UIAllaanställdaCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Alla anställda";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSelectionConCustom1 UIEmployeeSelectionConCustom
        {
            get
            {
                if ((this.mUIEmployeeSelectionConCustom == null))
                {
                    this.mUIEmployeeSelectionConCustom = new UIEmployeeSelectionConCustom1(this);
                }
                return this.mUIEmployeeSelectionConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSelectionConCustom1 mUIEmployeeSelectionConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeSelectionConCustom1 : DXTestControl
    {
        
        public UIEmployeeSelectionConCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSelectionControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSelectionControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILabelControlLabel
        {
            get
            {
                if ((this.mUILabelControlLabel == null))
                {
                    this.mUILabelControlLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILabelControlLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSelectionControlLabelControl[6]";
                    this.mUILabelControlLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LabelControl";
                    this.mUILabelControlLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUILabelControlLabel.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUILabelControlLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILabelControlLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGATFlexWindow2 : WinWindow
    {
        
        public UIGATFlexWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GAT-Flex";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIDocumentsHostTabList2 UIDocumentsHostTabList
        {
            get
            {
                if ((this.mUIDocumentsHostTabList == null))
                {
                    this.mUIDocumentsHostTabList = new UIDocumentsHostTabList2(this);
                }
                return this.mUIDocumentsHostTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentsHostTabList2 mUIDocumentsHostTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDocumentsHostTabList2 : DXTestControl
    {
        
        public UIDocumentsHostTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentsHost[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentsHost";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIAnsattCustom2 UIAnsattCustom
        {
            get
            {
                if ((this.mUIAnsattCustom == null))
                {
                    this.mUIAnsattCustom = new UIAnsattCustom2(this);
                }
                return this.mUIAnsattCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAnsattCustom2 mUIAnsattCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAnsattCustom2 : DXTestControl
    {
        
        public UIAnsattCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatt";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeClockControlCustom2 UIEmployeeClockControlCustom
        {
            get
            {
                if ((this.mUIEmployeeClockControlCustom == null))
                {
                    this.mUIEmployeeClockControlCustom = new UIEmployeeClockControlCustom2(this);
                }
                return this.mUIEmployeeClockControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeClockControlCustom2 mUIEmployeeClockControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmployeeClockControlCustom2 : DXTestControl
    {
        
        public UIEmployeeClockControlCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeClockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeClockControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIXscMainScrollableControl1 UIXscMainScrollableControl
        {
            get
            {
                if ((this.mUIXscMainScrollableControl == null))
                {
                    this.mUIXscMainScrollableControl = new UIXscMainScrollableControl1(this);
                }
                return this.mUIXscMainScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscMainScrollableControl1 mUIXscMainScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIXscMainScrollableControl1 : DXScrollableControl
    {
        
        public UIXscMainScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIHeleneWindow UIHeleneWindow
        {
            get
            {
                if ((this.mUIHeleneWindow == null))
                {
                    this.mUIHeleneWindow = new UIHeleneWindow(this);
                }
                return this.mUIHeleneWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIHeleneWindow mUIHeleneWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHeleneWindow : WinWindow
    {
        
        public UIHeleneWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lblEmployeeName";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public WinText UIHeleneText
        {
            get
            {
                if ((this.mUIHeleneText == null))
                {
                    this.mUIHeleneText = new WinText(this);
                    #region Search Criteria
                    this.mUIHeleneText.SearchProperties[WinText.PropertyNames.Name] = "Helene";
                    this.mUIHeleneText.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIHeleneText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIHeleneText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatTaskSchedulerServWindow : WinWindow
    {
        
        public UIGatTaskSchedulerServWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat Task Scheduler Service Uninstall";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Gat Task Scheduler Service Uninstall");
            #endregion
        }
        
        #region Properties
        public UIYesWindow2 UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow2(this);
                }
                return this.mUIYesWindow;
            }
        }
        
        public UIOKWindow3 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow3(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow2 mUIYesWindow;
        
        private UIOKWindow3 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIYesWindow2 : WinWindow
    {
        
        public UIYesWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Gat Task Scheduler Service Uninstall");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Gat Task Scheduler Service Uninstall");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOKWindow3 : WinWindow
    {
        
        public UIOKWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Gat Task Scheduler Service Uninstall");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Gat Task Scheduler Service Uninstall");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIUninstallWindow : WinWindow
    {
        
        public UIUninstallWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Uninstall";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Uninstall");
            #endregion
        }
        
        #region Properties
        public UINOWindow UINOWindow
        {
            get
            {
                if ((this.mUINOWindow == null))
                {
                    this.mUINOWindow = new UINOWindow(this);
                }
                return this.mUINOWindow;
            }
        }
        
        public UIOKWindow4 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow4(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UINOWindow mUINOWindow;
        
        private UIOKWindow4 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINOWindow : WinWindow
    {
        
        public UINOWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "7";
            this.WindowTitles.Add("Uninstall");
            #endregion
        }
        
        #region Properties
        public WinButton UINOButton
        {
            get
            {
                if ((this.mUINOButton == null))
                {
                    this.mUINOButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINOButton.SearchProperties[WinButton.PropertyNames.Name] = "No";
                    this.mUINOButton.WindowTitles.Add("Uninstall");
                    #endregion
                }
                return this.mUINOButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINOButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOKWindow4 : WinWindow
    {
        
        public UIOKWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Uninstall");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Uninstall");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISetupGatTaskScheduleWindow : WinWindow
    {
        
        public UISetupGatTaskScheduleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Setup - Gat Task Scheduler Service";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TWizardForm";
            this.WindowTitles.Add("Setup - Gat Task Scheduler Service");
            #endregion
        }
        
        #region Properties
        public UISetupGatTaskScheduleClient UISetupGatTaskScheduleClient
        {
            get
            {
                if ((this.mUISetupGatTaskScheduleClient == null))
                {
                    this.mUISetupGatTaskScheduleClient = new UISetupGatTaskScheduleClient(this);
                }
                return this.mUISetupGatTaskScheduleClient;
            }
        }
        #endregion
        
        #region Fields
        private UISetupGatTaskScheduleClient mUISetupGatTaskScheduleClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISetupGatTaskScheduleClient : WinClient
    {
        
        public UISetupGatTaskScheduleClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Setup - Gat Task Scheduler Service";
            this.WindowTitles.Add("Setup - Gat Task Scheduler Service");
            #endregion
        }
        
        #region Properties
        public WinButton UINextButton
        {
            get
            {
                if ((this.mUINextButton == null))
                {
                    this.mUINextButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINextButton.SearchProperties[WinButton.PropertyNames.Name] = "Next >";
                    this.mUINextButton.WindowTitles.Add("Setup - Gat Task Scheduler Service");
                    #endregion
                }
                return this.mUINextButton;
            }
        }
        
        public WinButton UIInstallButton
        {
            get
            {
                if ((this.mUIInstallButton == null))
                {
                    this.mUIInstallButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIInstallButton.SearchProperties[WinButton.PropertyNames.Name] = "Install";
                    this.mUIInstallButton.WindowTitles.Add("Setup - Gat Task Scheduler Service");
                    #endregion
                }
                return this.mUIInstallButton;
            }
        }
        
        public WinButton UIFinishButton
        {
            get
            {
                if ((this.mUIFinishButton == null))
                {
                    this.mUIFinishButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFinishButton.SearchProperties[WinButton.PropertyNames.Name] = "Finish";
                    this.mUIFinishButton.WindowTitles.Add("Setup - Gat Task Scheduler Service");
                    #endregion
                }
                return this.mUIFinishButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINextButton;
        
        private WinButton mUIInstallButton;
        
        private WinButton mUIFinishButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBasisURLforWebservicWindow : WinWindow
    {
        
        public UIBasisURLforWebservicWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Basis URL for Webservice";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmRegEdit";
            this.WindowTitles.Add("Basis URL for Webservice");
            #endregion
        }
        
        #region Properties
        public UIItemWindow32 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow32(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIBasisURLforWebservicClient UIBasisURLforWebservicClient
        {
            get
            {
                if ((this.mUIBasisURLforWebservicClient == null))
                {
                    this.mUIBasisURLforWebservicClient = new UIBasisURLforWebservicClient(this);
                }
                return this.mUIBasisURLforWebservicClient;
            }
        }
        
        public UIHttpatmanWindow UIHttpatmanWindow
        {
            get
            {
                if ((this.mUIHttpatmanWindow == null))
                {
                    this.mUIHttpatmanWindow = new UIHttpatmanWindow(this);
                }
                return this.mUIHttpatmanWindow;
            }
        }
        
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIItemClient1 UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new UIItemClient1(this);
                }
                return this.mUIItemClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow32 mUIItemWindow;
        
        private UIBasisURLforWebservicClient mUIBasisURLforWebservicClient;
        
        private UIHttpatmanWindow mUIHttpatmanWindow;
        
        private UIItemClient mUIItemClient;
        
        private UIItemClient1 mUIItemClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow32 : WinWindow
    {
        
        public UIItemWindow32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Basis URL for Webservice");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.WindowTitles.Add("Basis URL for Webservice");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBasisURLforWebservicClient : WinClient
    {
        
        public UIBasisURLforWebservicClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Basis URL for Webservice";
            this.WindowTitles.Add("Basis URL for Webservice");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("Basis URL for Webservice");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttpatmanWindow : WinWindow
    {
        
        public UIHttpatmanWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "http://at-man/";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Basis URL for Webservice");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Basis URL for Webservice");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Basis URL for Webservice");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Basis URL for Webservice");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public WinButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[WinButton.PropertyNames.Name] = "Avbryt";
                    this.mUIAvbrytButton.WindowTitles.Add("Basis URL for Webservice");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        
        private WinButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient1 : WinClient
    {
        
        public UIItemClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Basis URL for Webservice");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient.WindowTitles.Add("Basis URL for Webservice");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIServiceoppsettWindow : WinWindow
    {
        
        public UIServiceoppsettWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Service oppsett";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmRegEdit";
            this.WindowTitles.Add("Service oppsett");
            #endregion
        }
        
        #region Properties
        public UIItemWindow33 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow33(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIServiceoppsettClient UIServiceoppsettClient
        {
            get
            {
                if ((this.mUIServiceoppsettClient == null))
                {
                    this.mUIServiceoppsettClient = new UIServiceoppsettClient(this);
                }
                return this.mUIServiceoppsettClient;
            }
        }
        
        public UIItemWindow114 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow114(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemClient3 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient3(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIItemClient11 UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new UIItemClient11(this);
                }
                return this.mUIItemClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow33 mUIItemWindow;
        
        private UIServiceoppsettClient mUIServiceoppsettClient;
        
        private UIItemWindow114 mUIItemWindow1;
        
        private UIItemClient3 mUIItemClient;
        
        private UIItemClient11 mUIItemClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow33 : WinWindow
    {
        
        public UIItemWindow33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Service oppsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.WindowTitles.Add("Service oppsett");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIServiceoppsettClient : WinClient
    {
        
        public UIServiceoppsettClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Service oppsett";
            this.WindowTitles.Add("Service oppsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("Service oppsett");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow114 : WinWindow
    {
        
        public UIItemWindow114(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TScrollBox";
            this.WindowTitles.Add("Service oppsett");
            #endregion
        }
        
        #region Properties
        public UIItemClient2 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient2(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient2 mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient2 : WinClient
    {
        
        public UIItemClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Service oppsett");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIDeaktivertCheckBox
        {
            get
            {
                if ((this.mUIDeaktivertCheckBox == null))
                {
                    this.mUIDeaktivertCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIDeaktivertCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Deaktivert";
                    this.mUIDeaktivertCheckBox.WindowTitles.Add("Service oppsett");
                    #endregion
                }
                return this.mUIDeaktivertCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIDeaktivertCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient3 : WinClient
    {
        
        public UIItemClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Service oppsett");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Service oppsett");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemClient11 : WinClient
    {
        
        public UIItemClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Service oppsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient.WindowTitles.Add("Service oppsett");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatSchedulerInternetWindow : BrowserWindow
    {
        
        public UIGatSchedulerInternetWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "GatScheduler";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("GatScheduler");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGatSchedulerDocument UIGatSchedulerDocument
        {
            get
            {
                if ((this.mUIGatSchedulerDocument == null))
                {
                    this.mUIGatSchedulerDocument = new UIGatSchedulerDocument(this);
                }
                return this.mUIGatSchedulerDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGatSchedulerDocument mUIGatSchedulerDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatSchedulerDocument : HtmlDocument
    {
        
        public UIGatSchedulerDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "GatScheduler";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/gatscheduler/home/index";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://at-man:3333/gatscheduler/home/index";
            this.WindowTitles.Add("GatScheduler");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIBehandlekømedendringPane
        {
            get
            {
                if ((this.mUIBehandlekømedendringPane == null))
                {
                    this.mUIBehandlekømedendringPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBehandlekømedendringPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIBehandlekømedendringPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBehandlekømedendringPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Behandle kø med endringer i fravær";
                    this.mUIBehandlekømedendringPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBehandlekømedendringPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "task-name";
                    this.mUIBehandlekømedendringPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"task-name\" data-bind=\"text: task.Name\"";
                    this.mUIBehandlekømedendringPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIBehandlekømedendringPane.WindowTitles.Add("GatScheduler");
                    #endregion
                }
                return this.mUIBehandlekømedendringPane;
            }
        }
        
        public HtmlDiv UIKalkulerAMLbruddPane
        {
            get
            {
                if ((this.mUIKalkulerAMLbruddPane == null))
                {
                    this.mUIKalkulerAMLbruddPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIKalkulerAMLbruddPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIKalkulerAMLbruddPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIKalkulerAMLbruddPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Kalkuler AML brudd";
                    this.mUIKalkulerAMLbruddPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIKalkulerAMLbruddPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "task-name";
                    this.mUIKalkulerAMLbruddPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"task-name\" data-bind=\"text: task.Name\"";
                    this.mUIKalkulerAMLbruddPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "29";
                    this.mUIKalkulerAMLbruddPane.WindowTitles.Add("GatScheduler");
                    #endregion
                }
                return this.mUIKalkulerAMLbruddPane;
            }
        }
        
        public HtmlDiv UIOppdatereBussinessAnPane
        {
            get
            {
                if ((this.mUIOppdatereBussinessAnPane == null))
                {
                    this.mUIOppdatereBussinessAnPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOppdatereBussinessAnPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOppdatereBussinessAnPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOppdatereBussinessAnPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Oppdatere Bussiness Analyze Data tabelle";
                    this.mUIOppdatereBussinessAnPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOppdatereBussinessAnPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "task-name";
                    this.mUIOppdatereBussinessAnPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"task-name\" data-bind=\"text: task.Name\"";
                    this.mUIOppdatereBussinessAnPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "49";
                    this.mUIOppdatereBussinessAnPane.WindowTitles.Add("GatScheduler");
                    #endregion
                }
                return this.mUIOppdatereBussinessAnPane;
            }
        }
        
        public HtmlDiv UIGatScheduler64238741Pane
        {
            get
            {
                if ((this.mUIGatScheduler64238741Pane == null))
                {
                    this.mUIGatScheduler64238741Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIGatScheduler64238741Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIGatScheduler64238741Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGatScheduler64238741Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "GatScheduler 6.4.2.38741";
                    this.mUIGatScheduler64238741Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGatScheduler64238741Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "header";
                    this.mUIGatScheduler64238741Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"header\"";
                    this.mUIGatScheduler64238741Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIGatScheduler64238741Pane.WindowTitles.Add("GatScheduler");
                    #endregion
                }
                return this.mUIGatScheduler64238741Pane;
            }
        }
        
        public HtmlDiv UIErrorPane
        {
            get
            {
                if ((this.mUIErrorPane == null))
                {
                    this.mUIErrorPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIErrorPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIErrorPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIErrorPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Error";
                    this.mUIErrorPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIErrorPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "status-value error";
                    this.mUIErrorPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"status-value error\" data-bind=\"text: task.Health, css: $root.getTaskHealth" +
                        "CssClass(task)\"";
                    this.mUIErrorPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "13";
                    this.mUIErrorPane.WindowTitles.Add("GatScheduler");
                    #endregion
                }
                return this.mUIErrorPane;
            }
        }
        
        public HtmlDiv UIErrorPane1
        {
            get
            {
                if ((this.mUIErrorPane1 == null))
                {
                    this.mUIErrorPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIErrorPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIErrorPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIErrorPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Error";
                    this.mUIErrorPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIErrorPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "status-value error";
                    this.mUIErrorPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"status-value error\" data-bind=\"text: task.Health, css: $root.getTaskHealth" +
                        "CssClass(task)\"";
                    this.mUIErrorPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "33";
                    this.mUIErrorPane1.WindowTitles.Add("GatScheduler");
                    #endregion
                }
                return this.mUIErrorPane1;
            }
        }
        
        public HtmlDiv UIErrorPane2
        {
            get
            {
                if ((this.mUIErrorPane2 == null))
                {
                    this.mUIErrorPane2 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIErrorPane2.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIErrorPane2.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIErrorPane2.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Error";
                    this.mUIErrorPane2.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIErrorPane2.FilterProperties[HtmlDiv.PropertyNames.Class] = "status-value error";
                    this.mUIErrorPane2.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"status-value error\" data-bind=\"text: task.Health, css: $root.getTaskHealth" +
                        "CssClass(task)\"";
                    this.mUIErrorPane2.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "53";
                    this.mUIErrorPane2.WindowTitles.Add("GatScheduler");
                    #endregion
                }
                return this.mUIErrorPane2;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIBehandlekømedendringPane;
        
        private HtmlDiv mUIKalkulerAMLbruddPane;
        
        private HtmlDiv mUIOppdatereBussinessAnPane;
        
        private HtmlDiv mUIGatScheduler64238741Pane;
        
        private HtmlDiv mUIErrorPane;
        
        private HtmlDiv mUIErrorPane1;
        
        private HtmlDiv mUIErrorPane2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDatabaseLoginWindow : WinWindow
    {
        
        public UIDatabaseLoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Database Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmADOLogin";
            this.WindowTitles.Add("Database Login");
            #endregion
        }
        
        #region Properties
        public UIStandardClient UIStandardClient
        {
            get
            {
                if ((this.mUIStandardClient == null))
                {
                    this.mUIStandardClient = new UIStandardClient(this);
                }
                return this.mUIStandardClient;
            }
        }
        #endregion
        
        #region Fields
        private UIStandardClient mUIStandardClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandardClient : WinClient
    {
        
        public UIStandardClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Standard";
            this.WindowTitles.Add("Database Login");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Database Login");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Database Login");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIConnectionparametersWindow : WinWindow
    {
        
        public UIConnectionparametersWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Connection parameters";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmEditADOConnectionString";
            this.WindowTitles.Add("Connection parameters");
            #endregion
        }
        
        #region Properties
        public UIItemWindow34 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow34(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow115 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow115(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIConnectionparametersClient UIConnectionparametersClient
        {
            get
            {
                if ((this.mUIConnectionparametersClient == null))
                {
                    this.mUIConnectionparametersClient = new UIConnectionparametersClient(this);
                }
                return this.mUIConnectionparametersClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow34 mUIItemWindow;
        
        private UIItemWindow115 mUIItemWindow1;
        
        private UIConnectionparametersClient mUIConnectionparametersClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow34 : WinWindow
    {
        
        public UIItemWindow34(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TBitBtn";
            this.WindowTitles.Add("Connection parameters");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.WindowTitles.Add("Connection parameters");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow115 : WinWindow
    {
        
        public UIItemWindow115(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Connection parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Connection parameters");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIConnectionparametersClient : WinClient
    {
        
        public UIConnectionparametersClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Connection parameters";
            this.WindowTitles.Add("Connection parameters");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Connection parameters");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDataLinkPropertiesWindow : WinWindow
    {
        
        public UIDataLinkPropertiesWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Data Link Properties";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public UIList1Window UIList1Window
        {
            get
            {
                if ((this.mUIList1Window == null))
                {
                    this.mUIList1Window = new UIList1Window(this);
                }
                return this.mUIList1Window;
            }
        }
        
        public UINextWindow UINextWindow
        {
            get
            {
                if ((this.mUINextWindow == null))
                {
                    this.mUINextWindow = new UINextWindow(this);
                }
                return this.mUINextWindow;
            }
        }
        
        public UIItemWindow35 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow35(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow116 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow116(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow210 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow210(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIAllowsavingpasswordWindow UIAllowsavingpasswordWindow
        {
            get
            {
                if ((this.mUIAllowsavingpasswordWindow == null))
                {
                    this.mUIAllowsavingpasswordWindow = new UIAllowsavingpasswordWindow(this);
                }
                return this.mUIAllowsavingpasswordWindow;
            }
        }
        
        public UIItemWindow36 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow36(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow42 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow42(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIOKWindow5 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow5(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIList1Window mUIList1Window;
        
        private UINextWindow mUINextWindow;
        
        private UIItemWindow35 mUIItemWindow;
        
        private UIItemWindow116 mUIItemWindow1;
        
        private UIItemWindow210 mUIItemWindow2;
        
        private UIAllowsavingpasswordWindow mUIAllowsavingpasswordWindow;
        
        private UIItemWindow36 mUIItemWindow3;
        
        private UIItemWindow42 mUIItemWindow4;
        
        private UIOKWindow5 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIList1Window : WinWindow
    {
        
        public UIList1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1000";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinList UISelectthedatayouwantList
        {
            get
            {
                if ((this.mUISelectthedatayouwantList == null))
                {
                    this.mUISelectthedatayouwantList = new WinList(this);
                    #region Search Criteria
                    this.mUISelectthedatayouwantList.SearchProperties[WinList.PropertyNames.Name] = "Select the data you want to connect to:";
                    this.mUISelectthedatayouwantList.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUISelectthedatayouwantList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUISelectthedatayouwantList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINextWindow : WinWindow
    {
        
        public UINextWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "233";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinButton UINextButton
        {
            get
            {
                if ((this.mUINextButton == null))
                {
                    this.mUINextButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINextButton.SearchProperties[WinButton.PropertyNames.Name] = "Next >>";
                    this.mUINextButton.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUINextButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINextButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow35 : WinWindow
    {
        
        public UIItemWindow35(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1023";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItem1SelectorenterasComboBox
        {
            get
            {
                if ((this.mUIItem1SelectorenterasComboBox == null))
                {
                    this.mUIItem1SelectorenterasComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItem1SelectorenterasComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "1. Select or enter a server name:";
                    this.mUIItem1SelectorenterasComboBox.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIItem1SelectorenterasComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItem1SelectorenterasComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow116 : WinWindow
    {
        
        public UIItemWindow116(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1027";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "User name:";
                    this.mUIUsernameEdit.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUsernameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow210 : WinWindow
    {
        
        public UIItemWindow210(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1029";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Password:";
                    this.mUIPasswordEdit.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAllowsavingpasswordWindow : WinWindow
    {
        
        public UIAllowsavingpasswordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "236";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIAllowsavingpasswordCheckBox
        {
            get
            {
                if ((this.mUIAllowsavingpasswordCheckBox == null))
                {
                    this.mUIAllowsavingpasswordCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIAllowsavingpasswordCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Allow saving password";
                    this.mUIAllowsavingpasswordCheckBox.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIAllowsavingpasswordCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIAllowsavingpasswordCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow36 : WinWindow
    {
        
        public UIItemWindow36(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "251";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow42 : WinWindow
    {
        
        public UIItemWindow42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIOKWindow5 : WinWindow
    {
        
        public UIOKWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238635ASCLAvWindow : WinWindow
    {
        
        public UIGatver64238635ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow37 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow37(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow37 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow37 : WinWindow
    {
        
        public UIItemWindow37(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnställdClient
        {
            get
            {
                if ((this.mUIAnställdClient == null))
                {
                    this.mUIAnställdClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnställdClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnställdClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnställdClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238635ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver64238635ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public UIItemWindow38 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow38(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow38 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow38 : WinWindow
    {
        
        public UIItemWindow38(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnställdClient
        {
            get
            {
                if ((this.mUIAnställdClient == null))
                {
                    this.mUIAnställdClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnställdClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnställdClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnställdClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStartsidanMinGatv642Window : BrowserWindow
    {
        
        public UIStartsidanMinGatv642Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Startsidan - MinGat v.6.4.2.38635";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Startsidan - MinGat v.6.4.2.38635");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIStartsidanMinGatv642Document UIStartsidanMinGatv642Document
        {
            get
            {
                if ((this.mUIStartsidanMinGatv642Document == null))
                {
                    this.mUIStartsidanMinGatv642Document = new UIStartsidanMinGatv642Document(this);
                }
                return this.mUIStartsidanMinGatv642Document;
            }
        }
        #endregion
        
        #region Fields
        private UIStartsidanMinGatv642Document mUIStartsidanMinGatv642Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStartsidanMinGatv642Document : HtmlDocument
    {
        
        public UIStartsidanMinGatv642Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Startsidan - MinGat v.6.4.2.38635";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat_se/Employee/Home";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost/MinGat_se/Employee/Home";
            this.WindowTitles.Add("Startsidan - MinGat v.6.4.2.38635");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIStartsidanTillbakaPane
        {
            get
            {
                if ((this.mUIStartsidanTillbakaPane == null))
                {
                    this.mUIStartsidanTillbakaPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIStartsidanTillbakaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "pageHeader";
                    this.mUIStartsidanTillbakaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIStartsidanTillbakaPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Startsidan\r\n\r\n\r\n\r\n\r\n\r\n\r\nTillbaka\r\n \r\n \r\n";
                    this.mUIStartsidanTillbakaPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIStartsidanTillbakaPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIStartsidanTillbakaPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"pageHeader\" data-bind=\"with: PageTitleViewModel\"";
                    this.mUIStartsidanTillbakaPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "158";
                    this.mUIStartsidanTillbakaPane.WindowTitles.Add("Startsidan - MinGat v.6.4.2.38635");
                    #endregion
                }
                return this.mUIStartsidanTillbakaPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIStartsidanTillbakaPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRoleDepartmentServicWindow : BrowserWindow
    {
        
        public UIRoleDepartmentServicWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "RoleDepartmentService Web Service";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("RoleDepartmentService Web Service");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIRoleDepartmentServicDocument UIRoleDepartmentServicDocument
        {
            get
            {
                if ((this.mUIRoleDepartmentServicDocument == null))
                {
                    this.mUIRoleDepartmentServicDocument = new UIRoleDepartmentServicDocument(this);
                }
                return this.mUIRoleDepartmentServicDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDepartmentServicDocument mUIRoleDepartmentServicDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRoleDepartmentServicDocument : HtmlDocument
    {
        
        public UIRoleDepartmentServicDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "RoleDepartmentService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1_se/RoleDepartmentService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1_se/RoleDepartmentService.asmx";
            this.WindowTitles.Add("RoleDepartmentService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane30 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane30(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane30 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane30 : HtmlDiv
    {
        
        public UIContentPane30(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "RoleDepartmentService\r\n\r\n\r\nDepartment re";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("RoleDepartmentService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetDepartmentRolesHyperlink
        {
            get
            {
                if ((this.mUIGetDepartmentRolesHyperlink == null))
                {
                    this.mUIGetDepartmentRolesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetDepartmentRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetDepartmentRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetDepartmentRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetDepartmentRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetDepartmentRoles";
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1_se/RoleDepartmentService.asmx";
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1_se/RoleDepartmentService.asmx?op=GetDepartmentRoles";
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"RoleDepartmentService.asmx?op=GetD";
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIGetDepartmentRolesHyperlink.WindowTitles.Add("RoleDepartmentService Web Service");
                    #endregion
                }
                return this.mUIGetDepartmentRolesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetDepartmentRolesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238635ASCLAvWindow2 : WinWindow
    {
        
        public UIGatver64238635ASCLAvWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom3 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom3(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom3 mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom3 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar3 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar3(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar3 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar3 : DXMenu
    {
        
        public UIMainmenuMenuBar3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIHjälpBarBaseButtonItem
        {
            get
            {
                if ((this.mUIHjälpBarBaseButtonItem == null))
                {
                    this.mUIHjälpBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIHjälpBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnHelp";
                    this.mUIHjälpBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIHjälpBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIHjälpBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIHjälpBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver635ASCLAvd3002Window : WinWindow
    {
        
        public UIGatver635ASCLAvd3002Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom4 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom4(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom4 mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom4 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar4 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar4(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar4 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar4 : DXMenu
    {
        
        public UIMainmenuMenuBar4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIVelgdatoBarBaseButtonItem
        {
            get
            {
                if ((this.mUIVelgdatoBarBaseButtonItem == null))
                {
                    this.mUIVelgdatoBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIVelgdatoBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIVelgdatoBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIVelgdatoBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65038745ASCLAvWindow : WinWindow
    {
        
        public UIGatver65038745ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow39 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow39(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow39 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow39 : WinWindow
    {
        
        public UIItemWindow39(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver65038745ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver65038745ASCLAvClient == null))
                {
                    this.mUIGatver65038745ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver65038745ASCLAvClient.WindowTitles.Add("Gat");
                    this.mUIGatver65038745ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver65038745ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver65038745ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65038745ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver65038745ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow40 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow40(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow40 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow40 : WinWindow
    {
        
        public UIItemWindow40(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver65038745ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver65038745ASCLAvClient == null))
                {
                    this.mUIGatver65038745ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver65038745ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver65038745ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver65038745ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238741ASCLAvWindow : WinWindow
    {
        
        public UIGatver64238741ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public UIItemWindow43 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow43(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow43 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow43 : WinWindow
    {
        
        public UIItemWindow43(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64238741ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver64238741ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow44 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow44(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow44 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow44 : WinWindow
    {
        
        public UIItemWindow44(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64238741ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64238741ASCLAvClient == null))
                {
                    this.mUIGatver64238741ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64238741ASCLAvClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGatver64238741ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64238741ASCLAvClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65038745ASCLAvWindow2 : WinWindow
    {
        
        public UIGatver65038745ASCLAvWindow2()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow45 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow45(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow117 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow117(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIPcMainPanelClient UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        
        public UIMainMenuControlCustom UIMainMenuControlCustom
        {
            get
            {
                if ((this.mUIMainMenuControlCustom == null))
                {
                    this.mUIMainMenuControlCustom = new UIMainMenuControlCustom(this);
                }
                return this.mUIMainMenuControlCustom;
            }
        }
        
        public UIItemWindow211 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow211(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow310 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow310(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow46 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow46(this);
                }
                return this.mUIItemWindow4;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow45 mUIItemWindow;
        
        private UIItemWindow117 mUIItemWindow1;
        
        private UIPcMainPanelClient mUIPcMainPanelClient;
        
        private UIMainMenuControlCustom mUIMainMenuControlCustom;
        
        private UIItemWindow211 mUIItemWindow2;
        
        private UIItemWindow310 mUIItemWindow3;
        
        private UIItemWindow46 mUIItemWindow4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow45 : WinWindow
    {
        
        public UIItemWindow45(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIEkstrainfoClient
        {
            get
            {
                if ((this.mUIEkstrainfoClient == null))
                {
                    this.mUIEkstrainfoClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIEkstrainfoClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEkstrainfoClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIEkstrainfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow117 : WinWindow
    {
        
        public UIItemWindow117(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILISClient UILISClient
        {
            get
            {
                if ((this.mUILISClient == null))
                {
                    this.mUILISClient = new UILISClient(this);
                }
                return this.mUILISClient;
            }
        }
        #endregion
        
        #region Fields
        private UILISClient mUILISClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UILISClient : WinClient
    {
        
        public UILISClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIAvanserteinstillingeCheckBox
        {
            get
            {
                if ((this.mUIAvanserteinstillingeCheckBox == null))
                {
                    this.mUIAvanserteinstillingeCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIAvanserteinstillingeCheckBox.SearchProperties.Add(new PropertyExpression(WinCheckBox.PropertyNames.Name, "Avan", PropertyExpressionOperator.Contains));
                    this.mUIAvanserteinstillingeCheckBox.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAvanserteinstillingeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIAvanserteinstillingeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient : DXTestControl
    {
        
        public UIPcMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList : DXTestControl
    {
        
        public UITcPanListsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient : DXTestControl
    {
        
        public UITpRosterPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlButtonsClient UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlButtonsClient mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlButtonsClient : DXTestControl
    {
        
        public UIPnlButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UICeShowStartAndEndColCheckBox
        {
            get
            {
                if ((this.mUICeShowStartAndEndColCheckBox == null))
                {
                    this.mUICeShowStartAndEndColCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICeShowStartAndEndColCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "ceShowStartAndEndColumns";
                    this.mUICeShowStartAndEndColCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICeShowStartAndEndColCheckBox.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUICeShowStartAndEndColCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUICeShowStartAndEndColCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainMenuControlCustom : DXTestControl
    {
        
        public UIMainMenuControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "mainMenuControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MainMenuControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRcMainRibbon UIRcMainRibbon
        {
            get
            {
                if ((this.mUIRcMainRibbon == null))
                {
                    this.mUIRcMainRibbon = new UIRcMainRibbon(this);
                }
                return this.mUIRcMainRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMainRibbon mUIRcMainRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMainRibbon : DXRibbon
    {
        
        public UIRcMainRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainRibbonPage UIRpMainRibbonPage
        {
            get
            {
                if ((this.mUIRpMainRibbonPage == null))
                {
                    this.mUIRpMainRibbonPage = new UIRpMainRibbonPage(this);
                }
                return this.mUIRpMainRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainRibbonPage mUIRpMainRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpMainRibbonPage : DXRibbonPage
    {
        
        public UIRpMainRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpgPeriodViewViewRibbonPageGroup UIRpgPeriodViewViewRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPeriodViewViewRibbonPageGroup == null))
                {
                    this.mUIRpgPeriodViewViewRibbonPageGroup = new UIRpgPeriodViewViewRibbonPageGroup(this);
                }
                return this.mUIRpgPeriodViewViewRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPeriodViewViewRibbonPageGroup mUIRpgPeriodViewViewRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPeriodViewViewRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPeriodViewViewRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPeriodViewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINivåRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINivåRibbonBaseButtonItem == null))
                {
                    this.mUINivåRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINivåRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiLevel";
                    this.mUINivåRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINivåRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINivåRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINivåRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow211 : WinWindow
    {
        
        public UIItemWindow211(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAvdelingClient
        {
            get
            {
                if ((this.mUIAvdelingClient == null))
                {
                    this.mUIAvdelingClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAvdelingClient.WindowTitles.Add("Gat.");
                    #endregion
                }
                return this.mUIAvdelingClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAvdelingClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow310 : WinWindow
    {
        
        public UIItemWindow310(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "14";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIRapportsenterClient
        {
            get
            {
                if ((this.mUIRapportsenterClient == null))
                {
                    this.mUIRapportsenterClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIRapportsenterClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIRapportsenterClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIRapportsenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow46 : WinWindow
    {
        
        public UIItemWindow46(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIBudsjettClient
        {
            get
            {
                if ((this.mUIBudsjettClient == null))
                {
                    this.mUIBudsjettClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIBudsjettClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBudsjettClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIBudsjettClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64339335ASCLAvWindow : WinWindow
    {
        
        public UIGatver64339335ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom5 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom5(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom5 mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIStandaloneBarDockConCustom5 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar5 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar5(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar5 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainmenuMenuBar5 : DXMenu
    {
        
        public UIMainmenuMenuBar5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UINivåBarBaseButtonItem
        {
            get
            {
                if ((this.mUINivåBarBaseButtonItem == null))
                {
                    this.mUINivåBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDepartment";
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUINivåBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINivåBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUINivåBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver64339080ASCLAvWindow : WinWindow
    {
        
        public UIGatver64339080ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow47 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow47(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow47 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow47 : WinWindow
    {
        
        public UIItemWindow47(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnställdClient
        {
            get
            {
                if ((this.mUIAnställdClient == null))
                {
                    this.mUIAnställdClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnställdClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnställdClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnställdClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGlobaltoppsettWindow : WinWindow
    {
        
        public UIGlobaltoppsettWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Globalt oppsett";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmSetup";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public UIItemWindow48 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow48(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIMYSECRETWindow UIMYSECRETWindow
        {
            get
            {
                if ((this.mUIMYSECRETWindow == null))
                {
                    this.mUIMYSECRETWindow = new UIMYSECRETWindow(this);
                }
                return this.mUIMYSECRETWindow;
            }
        }
        
        public UIItemWindow118 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow118(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow48 mUIItemWindow;
        
        private UIMYSECRETWindow mUIMYSECRETWindow;
        
        private UIItemWindow118 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow48 : WinWindow
    {
        
        public UIItemWindow48(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxTreeList";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinClient UIGlobaltoppsettClient
        {
            get
            {
                if ((this.mUIGlobaltoppsettClient == null))
                {
                    this.mUIGlobaltoppsettClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGlobaltoppsettClient.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIGlobaltoppsettClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGlobaltoppsettClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMYSECRETWindow : WinWindow
    {
        
        public UIMYSECRETWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MYSECRET";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow118 : WinWindow
    {
        
        public UIItemWindow118(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public UIGlobaltoppsettClient UIGlobaltoppsettClient
        {
            get
            {
                if ((this.mUIGlobaltoppsettClient == null))
                {
                    this.mUIGlobaltoppsettClient = new UIGlobaltoppsettClient(this);
                }
                return this.mUIGlobaltoppsettClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGlobaltoppsettClient mUIGlobaltoppsettClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGlobaltoppsettClient : WinClient
    {
        
        public UIGlobaltoppsettClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Globalt oppsett");
            #endregion
        }
        
        #region Properties
        public WinButton UILagreButton
        {
            get
            {
                if ((this.mUILagreButton == null))
                {
                    this.mUILagreButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILagreButton.SearchProperties[WinButton.PropertyNames.Name] = "Lagre";
                    this.mUILagreButton.WindowTitles.Add("Globalt oppsett");
                    #endregion
                }
                return this.mUILagreButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILagreButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65041007ASCLAvWindow : WinWindow
    {
        
        public UIGatver65041007ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon2 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon2(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon2 mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon2 : DXRibbon
    {
        
        public UIRibbonControlRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage2 UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage2(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage2 mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpMainMenuRibbonPage2 : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGrpDevianceRibbonPageGroup2 UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup2(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDevianceRibbonPageGroup2 mUIGrpDevianceRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGrpDevianceRibbonPageGroup2 : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBytteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBytteRibbonBaseButtonItem == null))
                {
                    this.mUIBytteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBytteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExchange";
                    this.mUIBytteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBytteRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBytteRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBytteRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UISammenligningavkompeWindow : DXWindow
    {
        
        public UISammenligningavkompeWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Sammenligning av kompetanse";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Sammenligning av kompetanse");
            this.WindowTitles.Add("Jämförelse av kompetens");
            #endregion
        }
        
        #region Properties
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Sammenligning av kompetanse");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65041007ASCLAvWindow1 : WinWindow
    {
        
        public UIGatver65041007ASCLAvWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient1 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient1(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient1 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPcMainPanelClient1 : DXTestControl
    {
        
        public UIPcMainPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList1 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList1(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList1 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITcPanListsTabList1 : DXTestControl
    {
        
        public UITcPanListsTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient1 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient1(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient1 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITpRosterPlanListClient1 : DXTestControl
    {
        
        public UITpRosterPlanListClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRosterPlanListCustom : DXTestControl
    {
        
        public UIRosterPlanListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPnlGridClient : DXTestControl
    {
        
        public UIPnlGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon3 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon3(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon3 mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRibbonControlRibbon3 : DXRibbon
    {
        
        public UIRibbonControlRibbon3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRpgPlanRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIÅpneRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIÅpneRibbonBaseButtonItem == null))
                {
                    this.mUIÅpneRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIÅpneRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiOpenPlan";
                    this.mUIÅpneRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIÅpneRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIÅpneRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIÅpneRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIGatver65041632ASCLAvWindow : WinWindow
    {
        
        public UIGatver65041632ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat.", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat.");
            #endregion
        }
        
        #region Properties
        public UIProductionPlanContaiCustom UIProductionPlanContaiCustom
        {
            get
            {
                if ((this.mUIProductionPlanContaiCustom == null))
                {
                    this.mUIProductionPlanContaiCustom = new UIProductionPlanContaiCustom(this);
                }
                return this.mUIProductionPlanContaiCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIProductionPlanContaiCustom mUIProductionPlanContaiCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIProductionPlanContaiCustom : DXTestControl
    {
        
        public UIProductionPlanContaiCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ProductionPlanContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ProductionPlanContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRbHomeRibbonPage UIRbHomeRibbonPage
        {
            get
            {
                if ((this.mUIRbHomeRibbonPage == null))
                {
                    this.mUIRbHomeRibbonPage = new UIRbHomeRibbonPage(this);
                }
                return this.mUIRbHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRbHomeRibbonPage mUIRbHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRbHomeRibbonPage : DXRibbonPage
    {
        
        public UIRbHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rbHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRbActionsRibbonPageGroup UIRbActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRbActionsRibbonPageGroup == null))
                {
                    this.mUIRbActionsRibbonPageGroup = new UIRbActionsRibbonPageGroup(this);
                }
                return this.mUIRbActionsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRbActionsRibbonPageGroup mUIRbActionsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRbActionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRbActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rbActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIPlanleggingsperioderRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIPlanleggingsperioderRibbonBaseButtonItem == null))
                {
                    this.mUIPlanleggingsperioderRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIPlanleggingsperioderRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiPlanningPeriods";
                    this.mUIPlanleggingsperioderRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIPlanleggingsperioderRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPlanleggingsperioderRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIPlanleggingsperioderRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRoleDepartmentServicWindow1 : BrowserWindow
    {
        
        public UIRoleDepartmentServicWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "RoleDepartmentServiceV65 Web Service";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("RoleDepartmentServiceV65 Web Service");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIRoleDepartmentServicDocument1 UIRoleDepartmentServicDocument
        {
            get
            {
                if ((this.mUIRoleDepartmentServicDocument == null))
                {
                    this.mUIRoleDepartmentServicDocument = new UIRoleDepartmentServicDocument1(this);
                }
                return this.mUIRoleDepartmentServicDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDepartmentServicDocument1 mUIRoleDepartmentServicDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRoleDepartmentServicDocument1 : HtmlDocument
    {
        
        public UIRoleDepartmentServicDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "RoleDepartmentServiceV65 Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/RoleDepartmentServiceV65.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1/RoleDepartmentServiceV65.asmx";
            this.WindowTitles.Add("RoleDepartmentServiceV65 Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane31 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane31(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane31 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIContentPane31 : HtmlDiv
    {
        
        public UIContentPane31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "RoleDepartmentServiceV65\r\n\r\n\r\nService fo";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("RoleDepartmentServiceV65 Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetDepartmentRolesHyperlink
        {
            get
            {
                if ((this.mUIGetDepartmentRolesHyperlink == null))
                {
                    this.mUIGetDepartmentRolesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetDepartmentRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetDepartmentRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetDepartmentRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetDepartmentRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetDepartmentRoles";
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/RoleDepartmentServiceV65.asmx";
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/RoleDepartmentServiceV65.asmx?op=GetDepartmentRoles";
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"RoleDepartmentServiceV65.asmx?op=G";
                    this.mUIGetDepartmentRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIGetDepartmentRolesHyperlink.WindowTitles.Add("RoleDepartmentServiceV65 Web Service");
                    #endregion
                }
                return this.mUIGetDepartmentRolesHyperlink;
            }
        }
        
        public HtmlHyperlink UIGetDisplayRolesHyperlink
        {
            get
            {
                if ((this.mUIGetDisplayRolesHyperlink == null))
                {
                    this.mUIGetDisplayRolesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetDisplayRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetDisplayRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetDisplayRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetDisplayRolesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetDisplayRoles";
                    this.mUIGetDisplayRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/RoleDepartmentServiceV65.asmx";
                    this.mUIGetDisplayRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetDisplayRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/RoleDepartmentServiceV65.asmx?op=GetDisplayRoles";
                    this.mUIGetDisplayRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetDisplayRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"RoleDepartmentServiceV65.asmx?op=G";
                    this.mUIGetDisplayRolesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIGetDisplayRolesHyperlink.WindowTitles.Add("RoleDepartmentServiceV65 Web Service");
                    #endregion
                }
                return this.mUIGetDisplayRolesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetDepartmentRolesHyperlink;
        
        private HtmlHyperlink mUIGetDisplayRolesHyperlink;
        #endregion
    }
}
