// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _099_Test_Distribusjon_Leveranse.UIMapVS2015Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMapVS2015
    {
        
        /// <summary>
        /// CheckAppservice - Use 'CheckAppserviceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAppservice()
        {
            #region Variable Declarations
            HtmlHyperlink uIProcessAppFlexQueueHyperlink = this.UIGatWebserviceMainPagWindow.UIAppServiceWebServiceDocument.UIContentPane.UIProcessAppFlexQueueHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'ProcessAppFlexQueue' link equals 'ProcessAppFlexQueue'
            Assert.AreEqual(this.CheckAppserviceExpectedValues.UIProcessAppFlexQueueHyperlinkInnerText, uIProcessAppFlexQueueHyperlink.InnerText, "Feil i Appservice");
        }
        
        /// <summary>
        /// CheckBanks - Use 'CheckBanksExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBanks()
        {
            #region Variable Declarations
            HtmlCustom uIPageTitleCustom = this.UIStartsidenMinGatv653Window.UIMinebankerMinGatv653Document.UIPageTitleCustom;
            #endregion

            // Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Mine banker'
            Assert.AreEqual(this.CheckBanksExpectedValues.UIPageTitleCustomInnerText, uIPageTitleCustom.InnerText, "Feil tekst");
        }
        
        /// <summary>
        /// CheckCalendar - Use 'CheckCalendarExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCalendar()
        {
            #region Variable Declarations
            HtmlCustom uIPageTitleCustom = this.UIStartsidenMinGatv653Window.UIMinkalenderMinGatv65Document.UIPageTitleCustom;
            #endregion

            // Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Min kalender'
            Assert.AreEqual(this.CheckCalendarExpectedValues.UIPageTitleCustomInnerText, uIPageTitleCustom.InnerText, "Feil tekst");
        }
        
        /// <summary>
        /// CheckDepartmentServiceV66 - Use 'CheckDepartmentServiceV66ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDepartmentServiceV66()
        {
            #region Variable Declarations
            HtmlHyperlink uIGetDepartmentRosterHyperlink = this.UIDepartmentServiceV66Window.UIDepartmentServiceV66Document.UIContentPane.UIGetDepartmentRosterHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'GetDepartmentRoster' link equals 'GetDepartmentRoster'
            Assert.AreEqual(this.CheckDepartmentServiceV66ExpectedValues.UIGetDepartmentRosterHyperlinkInnerText, uIGetDepartmentRosterHyperlink.InnerText, "Service not found");
        }
        
        /// <summary>
        /// CheckGatFlexExportService - Use 'CheckGatFlexExportServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckGatFlexExportService()
        {
            #region Variable Declarations
            HtmlHyperlink uIHttplocalhostGatWs1FHyperlink = this.UIGatFlexExportServiceWindow.UIGatFlexExportServiceDocument.UIContentPane.UIHttplocalhostGatWs1FHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'http://localhost/GatWs1/FlexExportService.svc?wsdl' link equals 'http://localhost/GatWs1/FlexExportService.svc?wsdl'
            Assert.AreEqual(this.CheckGatFlexExportServiceExpectedValues.UIHttplocalhostGatWs1FHyperlinkInnerText, uIHttplocalhostGatWs1FHyperlink.InnerText, "Feil i GatFlexExportService");
        }
        
        /// <summary>
        /// CheckGatFlexSweLanguage - Use 'CheckGatFlexSweLanguageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckGatFlexSweLanguage()
        {
            #region Variable Declarations
            DXTestControl uILblSearchLabel = this.UIGATFlexWindow1.UIDocumentsHostTabList.UIAllaanställdaCustom.UIEmployeeSelectionConCustom.UIPcHeaderClient.UILblSearchLabel;
            #endregion

            // Verify that the 'Text' property of 'lblSearch' label equals 'Sök efter anställd'
            Assert.AreEqual(this.CheckGatFlexSweLanguageExpectedValues.UILblSearchLabelText, uILblSearchLabel.Text, "Feil i svensk språk");
        }
        
        /// <summary>
        /// CheckHeHa - Use 'CheckHeHaExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckHeHa()
        {
            #region Variable Declarations
            DXTestControl uILblEmployeeLabel = this.UIGATFlexWindow1.UIDocumentsHostTabList.UIAnsattCustom.UIEmployeeClockControlCustom.UIXscMainScrollableControl.UILblEmployeeLabel;
            #endregion

            // Verify that the 'Text' property of 'lblEmployee' label equals 'Helene Hansen'
            Assert.AreEqual(this.CheckHeHaExpectedValues.UILblEmployeeLabelText, uILblEmployeeLabel.Text, "Wrong employee");
        }
        
        /// <summary>
        /// CheckHome - Use 'CheckHomeExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckHome()
        {
            #region Variable Declarations
            HtmlCustom uIPageTitleCustom = this.UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document1.UIPageTitleCustom;
            #endregion

            // Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Startsiden'
            Assert.AreEqual(this.CheckHomeExpectedValues.UIPageTitleCustomInnerText, uIPageTitleCustom.InnerText, "Feil tekst");
        }
        
        /// <summary>
        /// CheckMySalary - Use 'CheckMySalaryExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMySalary()
        {
            #region Variable Declarations
            HtmlCustom uIPageTitleCustom = this.UIStartsidenMinGatv653Window.UIMinlønnsoversiktMinGDocument.UIPageTitleCustom;
            #endregion

            // Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Min lønnsoversikt'
            Assert.AreEqual(this.CheckMySalaryExpectedValues.UIPageTitleCustomInnerText, uIPageTitleCustom.InnerText, "Feil tekst");
        }
        
        /// <summary>
        /// CheckReminders - Use 'CheckRemindersExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckReminders()
        {
            #region Variable Declarations
            HtmlCustom uIPageTitleCustom = this.UIStartsidenMinGatv653Window.UIPåminnelserMinGatv65Document.UIPageTitleCustom;
            #endregion

            // Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Påminnelser'
            Assert.AreEqual(this.CheckRemindersExpectedValues.UIPageTitleCustomInnerText, uIPageTitleCustom.InnerText, "Feil text");
        }
        
        /// <summary>
        /// CheckSaubrekka - Use 'CheckSaubrekkaExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSaubrekka()
        {
            #region Variable Declarations
            DXTestControl uILblEmployeeLabel = this.UIGATFlexWindow1.UIDocumentsHostTabList.UIAnställdCustom.UIEmployeeClockControlCustom.UIXscMainScrollableControl.UILblEmployeeLabel;
            #endregion

            // Verify that the 'Text' property of 'lblEmployee' label equals 'Elin Saubrekka'
            Assert.AreEqual(this.CheckSaubrekkaExpectedValues.UILblEmployeeLabelText, uILblEmployeeLabel.Text, "Feil ansatt");
        }
        
        /// <summary>
        /// CheckSelfService - Use 'CheckSelfServiceExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSelfService()
        {
            #region Variable Declarations
            HtmlCustom uIPageTitleCustom = this.UIStartsidenMinGatv653Window.UIForespørslerMinGatv6Document.UIPageTitleCustom;
            #endregion

            // Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Forespørsler'
            Assert.AreEqual(this.CheckSelfServiceExpectedValues.UIPageTitleCustomInnerText, uIPageTitleCustom.InnerText, "Feil navn");
        }
        
        /// <summary>
        /// CheckShiftbook - Use 'CheckShiftbookExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckShiftbook()
        {
            #region Variable Declarations
            HtmlCustom uIPageTitleCustom = this.UIStartsidenMinGatv653Window.UIVaktbokMinGatv653438Document.UIPageTitleCustom;
            #endregion

            // Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Vaktbok'
            Assert.AreEqual(this.CheckShiftbookExpectedValues.UIPageTitleCustomInnerText, uIPageTitleCustom.InnerText, "Feil tekst");
        }
        
        /// <summary>
        /// CheckShowWeek - Use 'CheckShowWeekExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckShowWeek()
        {
            #region Variable Declarations
            HtmlCustom uIPageTitleCustom = this.UIStartsidenMinGatv653Window.UIUkevisningMinGatv653Document.UIPageTitleCustom;
            #endregion

            // Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Ukevisning'
            Assert.AreEqual(this.CheckShowWeekExpectedValues.UIPageTitleCustomInnerText, uIPageTitleCustom.InnerText, "Feil tekst");
        }
        
        /// <summary>
        /// CheckTasks - Use 'CheckTasksExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckTasks()
        {
            #region Variable Declarations
            HtmlCustom uIPageTitleCustom = this.UIStartsidenMinGatv653Window.UIOppgaveoversiktMinGaDocument.UIPageTitleCustom;
            #endregion

            // Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Oppgaver-tid'
            Assert.AreEqual(this.CheckTasksExpectedValues.UIPageTitleCustomInnerText, uIPageTitleCustom.InnerText, "Feil tekst");
        }
        
        /// <summary>
        /// CheckWishplan - Use 'CheckWishplanExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckWishplan()
        {
            #region Variable Declarations
            WinText uIØnskeplanforBASEPLANText = this.UIMinønskeplanMinGatv6Window.UIItemWindow.UISilverlightControlWindow.UIØnskeplanforBASEPLANText;
            WinClient uIFerie5dgrukeClient = this.UIMinønskeplanMinGatv6Window.UIItemWindow.UIItemListItem.UIFerie5dgrukeClient;
            #endregion

            // Verify that the 'Name' property of 'Ønskeplan for BASEPLAN TIL AUTOTEST' label equals 'Ønskeplan for BASEPLAN TIL AUTOTEST'
            Assert.AreEqual(this.CheckWishplanExpectedValues.UIØnskeplanforBASEPLANTextName, uIØnskeplanforBASEPLANText.Name, "Feil i baseplan");

            // Verify that the 'Name' property of 'Ferie - 5 dgr/uke' client equals 'Ferie - 5 dgr/uke'
            Assert.AreEqual(this.CheckWishplanExpectedValues.UIFerie5dgrukeClientName, uIFerie5dgrukeClient.Name, "Feil i feriebank");
        }
        
        /// <summary>
        /// ClickAppserviceLink
        /// </summary>
        public void ClickAppserviceLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIAppServiceHyperlink = this.UIGatWebserviceMainPagWindow.UIGatWebserviceMainPagDocument.UIAppServiceHyperlink;
            #endregion

            // Click 'AppService' link
            Mouse.Click(uIAppServiceHyperlink, new Point(28, 7));
        }
        
        /// <summary>
        /// ClickBanks
        /// </summary>
        public void ClickBanks()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv653Window.UIForespørslerMinGatv6Document.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(14, 0));
        }
        
        /// <summary>
        /// ClickCalendar
        /// </summary>
        public void ClickCalendar()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv653Window.UIVaktbokMinGatv653438Document.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(14, -7));
        }
        
        /// <summary>
        /// ClickChoosePeriodViewButton
        /// </summary>
        public void ClickChoosePeriodViewButton()
        {
            #region Variable Declarations
            DXButton uIVelgPeriodeButton = this.UIItemWindow.UIPopupContainerBarConMenu.UIPpcPeriodSelectorClient.UIPnlPeriodSelectorClient.UIVelgPeriodeButton;
            #endregion

            // Click 'Velg Periode' button
            Playback.Wait(5000);
            uIVelgPeriodeButton.DrawHighlight();
            Mouse.Click(uIVelgPeriodeButton);
        }
        
        /// <summary>
        /// ClickGatFlexExportServiceLink
        /// </summary>
        public void ClickGatFlexExportServiceLink()
        {
            #region Variable Declarations
            HtmlHyperlink uIGatFlexExportServiceHyperlink = this.UIGatWebserviceMainPagWindow.UIGatWebserviceMainPagDocument.UIGatFlexExportServiceHyperlink;
            #endregion

            // Click 'Gat.FlexExportService' link
            Mouse.Click(uIGatFlexExportServiceHyperlink, new Point(63, 6));
        }
        
        /// <summary>
        /// ClickGoToStart
        /// </summary>
        public void ClickGoToStart()
        {
            #region Variable Declarations
            HtmlDiv uIItemPane = this.UIStartsidenMinGatv653Window.UIMinlønnsoversiktMinGDocument.UIBodyWrapperPane.UIItemPane;
            #endregion

            // Click pane
            Mouse.Click(uIItemPane, new Point(21, 10));
        }
        
        /// <summary>
        /// ClickHome
        /// </summary>
        public void ClickHome()
        {
            #region Variable Declarations
            HtmlDiv uIItemPane = this.UIStartsidenMinGatv653Window.UIMinkalenderMinGatv65Document.UIRootQuickNavCustom.UIItemPane;
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv653Window.UIMinkalenderMinGatv65Document.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(16, -8));
        }
        
        /// <summary>
        /// ClickMySalaryFromMenu
        /// </summary>
        public void ClickMySalaryFromMenu()
        {
            #region Variable Declarations
            HtmlDiv uIItemPane = this.UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document1.UIBodyWrapperPane.UIItemPane;
            HtmlHyperlink uILønnsoversiktHyperlink = this.UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document1.UIMenuHeader_mainMenuPane.UILønnsoversiktHyperlink;
            #endregion

            // Click pane
            Mouse.Click(uIItemPane, new Point(5, 11));

            // Click 'Lønnsoversikt' link
            Mouse.Click(uILønnsoversiktHyperlink, new Point(61, 36));
        }
        
        /// <summary>
        /// ClickReminders
        /// </summary>
        public void ClickReminders()
        {
            #region Variable Declarations
            HtmlHyperlink uIItem1Hyperlink = this.UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document.UIRootQuickNavCustom.UIItem1Hyperlink;
            #endregion

            try
            {
                UIStartsidenMinGatv653Window.DrawHighlight();
                UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document.DrawHighlight();
                UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document.UIRootQuickNavCustom.DrawHighlight();
                UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document.UIRootQuickNavCustom.UIItem1Hyperlink.DrawHighlight();
            }
            catch
            {
                UIStartsidenMinGatv653Window.DrawHighlight();
                UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document.DrawHighlight();
                UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document.UIRootQuickNavCustom.DrawHighlight();
                UIStartsidenMinGatv653Window.UIStartsidenMinGatv653Document.UIRootQuickNavCustom.UIItem1Hyperlink.DrawHighlight();
                            }

            Mouse.Click(uIItem1Hyperlink);
        }
        
        /// <summary>
        /// ClickSelfService
        /// </summary>
        public void ClickSelfService()
        {
            #region Variable Declarations
            HtmlHyperlink uIItem0Hyperlink = this.UIStartsidenMinGatv653Window.UIPåminnelserMinGatv65Document.UIRootQuickNavCustom.UIItem0Hyperlink;
            #endregion

            // Click '0' link
            Mouse.Click(uIItem0Hyperlink, new Point(14, 4));
        }
        
        /// <summary>
        /// ClickShiftbook
        /// </summary>
        public void ClickShiftbook()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv653Window.UIOppgaveoversiktMinGaDocument.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(16, -4));
        }
        
        /// <summary>
        /// ClickShowWeek
        /// </summary>
        public void ClickShowWeek()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink3 = this.UIStartsidenMinGatv653Window.UIMinebankerMinGatv653Document.UIRootQuickNavCustom.UIItemHyperlink3;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink3, new Point(17, -5));
        }
        
        /// <summary>
        /// ClickTasks
        /// </summary>
        public void ClickTasks()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink2 = this.UIStartsidenMinGatv653Window.UIUkevisningMinGatv653Document.UIRootQuickNavCustom.UIItemHyperlink2;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink2, new Point(13, -5));
        }
        
        /// <summary>
        /// CloseWishplan
        /// </summary>
        public void CloseWishplan()
        {
            #region Variable Declarations
            WinButton uILukkButton = this.UIMinønskeplanMinGatv6Window.UIItemWindow1.UISilverlightControlWindow.UILukkButton;
            WinButton uIJAButton = this.UIMinønskeplanMinGatv6Window.UIItemWindow2.UISilverlightControlWindow.UIJAButton;
            WinButton uIYesButton = this.UIWindowsInternetExploWindow.UIYesWindow.UIYesButton;
            #endregion

            // Wait for 2 seconds for user delay between actions; Click 'Lukk' button
            Playback.Wait(2000);
            Mouse.Click(uILukkButton, new Point(34, 11));

            // Wait for 1 seconds for user delay between actions; Click 'Ja' button
            Playback.Wait(1000);
            Mouse.Click(uIJAButton, new Point(25, 10));

            // Wait for 1 seconds for user delay between actions; Click '&Yes' button
            Playback.Wait(1000);
            Mouse.Click(uIYesButton, new Point(42, 12));
        }
        
        /// <summary>
        /// IgnoreCertificateError
        /// </summary>
        public void IgnoreCertificateError()
        {
            #region Variable Declarations
            HtmlHyperlink uIContinuetothiswebsitHyperlink = this.UICertificateErrorNaviWindow.UICertificateErrorNaviDocument.UIContinuetothiswebsitHyperlink;
            #endregion

            // Click 'Continue to this website (not recommended).' link
            Mouse.Click(uIContinuetothiswebsitHyperlink, new Point(68, 11));
        }
        
        /// <summary>
        /// IgnoreCertificateError2
        /// </summary>
        public void IgnoreCertificateError2()
        {
            #region Variable Declarations
            HtmlHyperlink uIContinuetothiswebsitHyperlink = this.UICertificateErrorNaviWindow1.UICertificateErrorNaviDocument.UIContinuetothiswebsitHyperlink;
            #endregion

            // Click 'Continue to this website (not recommended).' link
            Mouse.Click(uIContinuetothiswebsitHyperlink, new Point(98, 10));
        }
        
        /// <summary>
        /// Login - Use 'LoginParams' to pass parameters into this method.
        /// </summary>
        public void Login()
        {
            #region Variable Declarations
            HtmlEdit uIBrukernavnEdit = this.UILogginnMinGatv653438Window.UILogginnMinGatv653438Document.UIBrukernavnEdit;
            HtmlEdit uIPassordEdit = this.UILogginnMinGatv653438Window.UILogginnMinGatv653438Document.UIPassordEdit;
            HtmlSpan uILogginnPane = this.UILogginnMinGatv653438Window.UILogginnMinGatv653438Document.UILogginnButton.UILogginnPane;
            #endregion

            // Type 'ascl' in 'Brukernavn*' text box
            uIBrukernavnEdit.Text = this.LoginParams.UIBrukernavnEditText;

            // Type '{Tab}' in 'Brukernavn*' text box
            Keyboard.SendKeys(uIBrukernavnEdit, this.LoginParams.UIBrukernavnEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Passord*' text box
            uIPassordEdit.Password = this.LoginParams.UIPassordEditPassword;

            // Click 'Logg inn' pane
            Mouse.Click(uILogginnPane, new Point(87, 17));
        }
        
        /// <summary>
        /// LoginNew - Use 'LoginNewParams' to pass parameters into this method.
        /// </summary>
        public void LoginNew()
        {
            #region Variable Declarations
            HtmlEdit uIBrukernavnEdit = this.UIMinGatMinGatv6604403Window.UIMinGatMinGatv6604403Document.UIBrukernavnEdit;
            HtmlEdit uIPassordEdit = this.UIMinGatMinGatv6604403Window.UIMinGatMinGatv6604403Document.UIPassordEdit;
            HtmlSpan uILogginnPane = this.UIMinGatMinGatv6604403Window.UIMinGatMinGatv6604403Document.UILogginnButton.UILogginnPane;
            #endregion
            
            // Type 'ascl' in 'Brukernavn*' text box
            uIBrukernavnEdit.Text = this.LoginNewParams.UIBrukernavnEditText;

            // Type '{Tab}' in 'Brukernavn*' text box
            Keyboard.SendKeys(uIBrukernavnEdit, this.LoginNewParams.UIBrukernavnEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Passord*' text box
            uIPassordEdit.Password = this.LoginNewParams.UIPassordEditPassword;

            // Type '{Tab}' in 'Passord*' text box
            Keyboard.SendKeys(uIPassordEdit, this.LoginNewParams.UIPassordEditSendKeys, ModifierKeys.None);

            // Click 'Logg inn' pane
            Mouse.Click(uILogginnPane, new Point(122, 11));
            Playback.Wait(2000);
        }
        
        /// <summary>
        /// SeachHansen - Use 'SeachHansenParams' to pass parameters into this method.
        /// </summary>
        public void SeachHansen()
        {
            #region Variable Declarations
            DXTestControl uILblSearchLabel = this.UIGATFlexWindow1.UIDocumentsHostTabList.UIAlleansatteCustom.UIEmployeeSelectionConCustom.UIPcHeaderClient.UILblSearchLabel;
            DXTextEdit uITxtSearchEdit = this.UIGATFlexWindow1.UIDocumentsHostTabList.UISøketteransattCustom.UIEmployeeSearchControCustom.UITxtSearchEdit;
            DXButton uIOKButton = this.UIGATFlexWindow1.UIDocumentsHostTabList.UISøketteransattCustom.UIEmployeeSearchControCustom.UIOKButton;
            #endregion

            // Click 'lblSearch' label
            Mouse.Click(uILblSearchLabel, new Point(82, 21));

            // Type 'HEHA' in 'txtSearch' text box
            //ValueAsString
            uITxtSearchEdit.ValueAsString = this.SeachHansenParams.UITxtSearchEditValueAsString;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SeachSaubrekka - Use 'SeachSaubrekkaParams' to pass parameters into this method.
        /// </summary>
        public void SeachSaubrekka()
        {
            #region Variable Declarations
            DXTestControl uILblSearchLabel = this.UIGATFlexWindow1.UIDocumentsHostTabList.UIAllaanställdaCustom.UIEmployeeSelectionConCustom.UIPcHeaderClient.UILblSearchLabel;
            DXTextEdit uITxtSearchEdit = this.UIGATFlexWindow1.UIDocumentsHostTabList.UISökefteranställdCustom.UIEmployeeSearchControCustom.UITxtSearchEdit;
            DXButton uIOKButton = this.UIGATFlexWindow1.UIDocumentsHostTabList.UISökefteranställdCustom.UIEmployeeSearchControCustom.UIOKButton;
            #endregion

            // Click 'lblSearch' label
            Mouse.Click(uILblSearchLabel, new Point(75, 24));

            // Type 'ELIN' in 'txtSearch' text box
            //ValueAsString
            uITxtSearchEdit.ValueAsString = this.SeachSaubrekkaParams.UITxtSearchEditValueAsString;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CheckGatFlexExportService_se - Use 'CheckGatFlexExportService_seExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckGatFlexExportService_se()
        {
            #region Variable Declarations
            HtmlHyperlink uIHttplocalhostGatWs1_Hyperlink = this.UIGatFlexExportServiceWindow.UIGatFlexExportServiceDocument1.UIContentPane.UIHttplocalhostGatWs1_Hyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'http://localhost/GatWs1_se/FlexExportService.svc?w...' link equals 'http://localhost/GatWs1_se/FlexExportService.svc?wsdl'
            Assert.AreEqual(this.CheckGatFlexExportService_seExpectedValues.UIHttplocalhostGatWs1_HyperlinkInnerText, uIHttplocalhostGatWs1_Hyperlink.InnerText, "Feil i GatFlexExportService_se");
        }
        
        #region Properties
        public virtual CheckAppserviceExpectedValues CheckAppserviceExpectedValues
        {
            get
            {
                if ((this.mCheckAppserviceExpectedValues == null))
                {
                    this.mCheckAppserviceExpectedValues = new CheckAppserviceExpectedValues();
                }
                return this.mCheckAppserviceExpectedValues;
            }
        }
        
        public virtual CheckBanksExpectedValues CheckBanksExpectedValues
        {
            get
            {
                if ((this.mCheckBanksExpectedValues == null))
                {
                    this.mCheckBanksExpectedValues = new CheckBanksExpectedValues();
                }
                return this.mCheckBanksExpectedValues;
            }
        }
        
        public virtual CheckCalendarExpectedValues CheckCalendarExpectedValues
        {
            get
            {
                if ((this.mCheckCalendarExpectedValues == null))
                {
                    this.mCheckCalendarExpectedValues = new CheckCalendarExpectedValues();
                }
                return this.mCheckCalendarExpectedValues;
            }
        }
        
        public virtual CheckDepartmentServiceV66ExpectedValues CheckDepartmentServiceV66ExpectedValues
        {
            get
            {
                if ((this.mCheckDepartmentServiceV66ExpectedValues == null))
                {
                    this.mCheckDepartmentServiceV66ExpectedValues = new CheckDepartmentServiceV66ExpectedValues();
                }
                return this.mCheckDepartmentServiceV66ExpectedValues;
            }
        }
        
        public virtual CheckGatFlexExportServiceExpectedValues CheckGatFlexExportServiceExpectedValues
        {
            get
            {
                if ((this.mCheckGatFlexExportServiceExpectedValues == null))
                {
                    this.mCheckGatFlexExportServiceExpectedValues = new CheckGatFlexExportServiceExpectedValues();
                }
                return this.mCheckGatFlexExportServiceExpectedValues;
            }
        }
        
        public virtual CheckGatFlexSweLanguageExpectedValues CheckGatFlexSweLanguageExpectedValues
        {
            get
            {
                if ((this.mCheckGatFlexSweLanguageExpectedValues == null))
                {
                    this.mCheckGatFlexSweLanguageExpectedValues = new CheckGatFlexSweLanguageExpectedValues();
                }
                return this.mCheckGatFlexSweLanguageExpectedValues;
            }
        }
        
        public virtual CheckHeHaExpectedValues CheckHeHaExpectedValues
        {
            get
            {
                if ((this.mCheckHeHaExpectedValues == null))
                {
                    this.mCheckHeHaExpectedValues = new CheckHeHaExpectedValues();
                }
                return this.mCheckHeHaExpectedValues;
            }
        }
        
        public virtual CheckHomeExpectedValues CheckHomeExpectedValues
        {
            get
            {
                if ((this.mCheckHomeExpectedValues == null))
                {
                    this.mCheckHomeExpectedValues = new CheckHomeExpectedValues();
                }
                return this.mCheckHomeExpectedValues;
            }
        }
        
        public virtual CheckMySalaryExpectedValues CheckMySalaryExpectedValues
        {
            get
            {
                if ((this.mCheckMySalaryExpectedValues == null))
                {
                    this.mCheckMySalaryExpectedValues = new CheckMySalaryExpectedValues();
                }
                return this.mCheckMySalaryExpectedValues;
            }
        }
        
        public virtual CheckRemindersExpectedValues CheckRemindersExpectedValues
        {
            get
            {
                if ((this.mCheckRemindersExpectedValues == null))
                {
                    this.mCheckRemindersExpectedValues = new CheckRemindersExpectedValues();
                }
                return this.mCheckRemindersExpectedValues;
            }
        }
        
        public virtual CheckSaubrekkaExpectedValues CheckSaubrekkaExpectedValues
        {
            get
            {
                if ((this.mCheckSaubrekkaExpectedValues == null))
                {
                    this.mCheckSaubrekkaExpectedValues = new CheckSaubrekkaExpectedValues();
                }
                return this.mCheckSaubrekkaExpectedValues;
            }
        }
        
        public virtual CheckSelfServiceExpectedValues CheckSelfServiceExpectedValues
        {
            get
            {
                if ((this.mCheckSelfServiceExpectedValues == null))
                {
                    this.mCheckSelfServiceExpectedValues = new CheckSelfServiceExpectedValues();
                }
                return this.mCheckSelfServiceExpectedValues;
            }
        }
        
        public virtual CheckShiftbookExpectedValues CheckShiftbookExpectedValues
        {
            get
            {
                if ((this.mCheckShiftbookExpectedValues == null))
                {
                    this.mCheckShiftbookExpectedValues = new CheckShiftbookExpectedValues();
                }
                return this.mCheckShiftbookExpectedValues;
            }
        }
        
        public virtual CheckShowWeekExpectedValues CheckShowWeekExpectedValues
        {
            get
            {
                if ((this.mCheckShowWeekExpectedValues == null))
                {
                    this.mCheckShowWeekExpectedValues = new CheckShowWeekExpectedValues();
                }
                return this.mCheckShowWeekExpectedValues;
            }
        }
        
        public virtual CheckTasksExpectedValues CheckTasksExpectedValues
        {
            get
            {
                if ((this.mCheckTasksExpectedValues == null))
                {
                    this.mCheckTasksExpectedValues = new CheckTasksExpectedValues();
                }
                return this.mCheckTasksExpectedValues;
            }
        }
        
        public virtual CheckWishplanExpectedValues CheckWishplanExpectedValues
        {
            get
            {
                if ((this.mCheckWishplanExpectedValues == null))
                {
                    this.mCheckWishplanExpectedValues = new CheckWishplanExpectedValues();
                }
                return this.mCheckWishplanExpectedValues;
            }
        }
        
        public virtual LoginParams LoginParams
        {
            get
            {
                if ((this.mLoginParams == null))
                {
                    this.mLoginParams = new LoginParams();
                }
                return this.mLoginParams;
            }
        }
        
        public virtual LoginNewParams LoginNewParams
        {
            get
            {
                if ((this.mLoginNewParams == null))
                {
                    this.mLoginNewParams = new LoginNewParams();
                }
                return this.mLoginNewParams;
            }
        }
        
        public virtual SeachHansenParams SeachHansenParams
        {
            get
            {
                if ((this.mSeachHansenParams == null))
                {
                    this.mSeachHansenParams = new SeachHansenParams();
                }
                return this.mSeachHansenParams;
            }
        }
        
        public virtual SeachSaubrekkaParams SeachSaubrekkaParams
        {
            get
            {
                if ((this.mSeachSaubrekkaParams == null))
                {
                    this.mSeachSaubrekkaParams = new SeachSaubrekkaParams();
                }
                return this.mSeachSaubrekkaParams;
            }
        }
        
        public virtual CheckGatFlexExportService_seExpectedValues CheckGatFlexExportService_seExpectedValues
        {
            get
            {
                if ((this.mCheckGatFlexExportService_seExpectedValues == null))
                {
                    this.mCheckGatFlexExportService_seExpectedValues = new CheckGatFlexExportService_seExpectedValues();
                }
                return this.mCheckGatFlexExportService_seExpectedValues;
            }
        }
        
        public UIStartsidenMinGatv660Window UIStartsidenMinGatv660Window
        {
            get
            {
                if ((this.mUIStartsidenMinGatv660Window == null))
                {
                    this.mUIStartsidenMinGatv660Window = new UIStartsidenMinGatv660Window();
                }
                return this.mUIStartsidenMinGatv660Window;
            }
        }
        
        public UIDepartmentServiceV66Window UIDepartmentServiceV66Window
        {
            get
            {
                if ((this.mUIDepartmentServiceV66Window == null))
                {
                    this.mUIDepartmentServiceV66Window = new UIDepartmentServiceV66Window();
                }
                return this.mUIDepartmentServiceV66Window;
            }
        }
        
        public UIGATFlexWindow UIGATFlexWindow
        {
            get
            {
                if ((this.mUIGATFlexWindow == null))
                {
                    this.mUIGATFlexWindow = new UIGATFlexWindow();
                }
                return this.mUIGATFlexWindow;
            }
        }
        
        public UIGATFlexWindow1 UIGATFlexWindow1
        {
            get
            {
                if ((this.mUIGATFlexWindow1 == null))
                {
                    this.mUIGATFlexWindow1 = new UIGATFlexWindow1();
                }
                return this.mUIGATFlexWindow1;
            }
        }
        
        public UILogginnMinGatv653438Window UILogginnMinGatv653438Window
        {
            get
            {
                if ((this.mUILogginnMinGatv653438Window == null))
                {
                    this.mUILogginnMinGatv653438Window = new UILogginnMinGatv653438Window();
                }
                return this.mUILogginnMinGatv653438Window;
            }
        }
        
        public UIStartsidenMinGatv653Window UIStartsidenMinGatv653Window
        {
            get
            {
                if ((this.mUIStartsidenMinGatv653Window == null))
                {
                    this.mUIStartsidenMinGatv653Window = new UIStartsidenMinGatv653Window();
                }
                return this.mUIStartsidenMinGatv653Window;
            }
        }
        
        public UIStartsidenMinGatv653Window1 UIStartsidenMinGatv653Window1
        {
            get
            {
                if ((this.mUIStartsidenMinGatv653Window1 == null))
                {
                    this.mUIStartsidenMinGatv653Window1 = new UIStartsidenMinGatv653Window1();
                }
                return this.mUIStartsidenMinGatv653Window1;
            }
        }
        
        public UIMinønskeplanMinGatv6Window1 UIMinønskeplanMinGatv6Window1
        {
            get
            {
                if ((this.mUIMinønskeplanMinGatv6Window1 == null))
                {
                    this.mUIMinønskeplanMinGatv6Window1 = new UIMinønskeplanMinGatv6Window1();
                }
                return this.mUIMinønskeplanMinGatv6Window1;
            }
        }
        
        public UIMinønskeplanMinGatv6Window UIMinønskeplanMinGatv6Window
        {
            get
            {
                if ((this.mUIMinønskeplanMinGatv6Window == null))
                {
                    this.mUIMinønskeplanMinGatv6Window = new UIMinønskeplanMinGatv6Window();
                }
                return this.mUIMinønskeplanMinGatv6Window;
            }
        }
        
        public UIWindowsInternetExploWindow UIWindowsInternetExploWindow
        {
            get
            {
                if ((this.mUIWindowsInternetExploWindow == null))
                {
                    this.mUIWindowsInternetExploWindow = new UIWindowsInternetExploWindow();
                }
                return this.mUIWindowsInternetExploWindow;
            }
        }
        
        public UIMinGatMinGatv6604403Window UIMinGatMinGatv6604403Window
        {
            get
            {
                if ((this.mUIMinGatMinGatv6604403Window == null))
                {
                    this.mUIMinGatMinGatv6604403Window = new UIMinGatMinGatv6604403Window();
                }
                return this.mUIMinGatMinGatv6604403Window;
            }
        }
        
        public UICertificateErrorNaviWindow UICertificateErrorNaviWindow
        {
            get
            {
                if ((this.mUICertificateErrorNaviWindow == null))
                {
                    this.mUICertificateErrorNaviWindow = new UICertificateErrorNaviWindow();
                }
                return this.mUICertificateErrorNaviWindow;
            }
        }
        
        public UICertificateErrorNaviWindow1 UICertificateErrorNaviWindow1
        {
            get
            {
                if ((this.mUICertificateErrorNaviWindow1 == null))
                {
                    this.mUICertificateErrorNaviWindow1 = new UICertificateErrorNaviWindow1();
                }
                return this.mUICertificateErrorNaviWindow1;
            }
        }
        
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIGatWebserviceMainPagWindow UIGatWebserviceMainPagWindow
        {
            get
            {
                if ((this.mUIGatWebserviceMainPagWindow == null))
                {
                    this.mUIGatWebserviceMainPagWindow = new UIGatWebserviceMainPagWindow();
                }
                return this.mUIGatWebserviceMainPagWindow;
            }
        }
        
        public UIGatFlexExportServiceWindow UIGatFlexExportServiceWindow
        {
            get
            {
                if ((this.mUIGatFlexExportServiceWindow == null))
                {
                    this.mUIGatFlexExportServiceWindow = new UIGatFlexExportServiceWindow();
                }
                return this.mUIGatFlexExportServiceWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckAppserviceExpectedValues mCheckAppserviceExpectedValues;
        
        private CheckBanksExpectedValues mCheckBanksExpectedValues;
        
        private CheckCalendarExpectedValues mCheckCalendarExpectedValues;
        
        private CheckDepartmentServiceV66ExpectedValues mCheckDepartmentServiceV66ExpectedValues;
        
        private CheckGatFlexExportServiceExpectedValues mCheckGatFlexExportServiceExpectedValues;
        
        private CheckGatFlexSweLanguageExpectedValues mCheckGatFlexSweLanguageExpectedValues;
        
        private CheckHeHaExpectedValues mCheckHeHaExpectedValues;
        
        private CheckHomeExpectedValues mCheckHomeExpectedValues;
        
        private CheckMySalaryExpectedValues mCheckMySalaryExpectedValues;
        
        private CheckRemindersExpectedValues mCheckRemindersExpectedValues;
        
        private CheckSaubrekkaExpectedValues mCheckSaubrekkaExpectedValues;
        
        private CheckSelfServiceExpectedValues mCheckSelfServiceExpectedValues;
        
        private CheckShiftbookExpectedValues mCheckShiftbookExpectedValues;
        
        private CheckShowWeekExpectedValues mCheckShowWeekExpectedValues;
        
        private CheckTasksExpectedValues mCheckTasksExpectedValues;
        
        private CheckWishplanExpectedValues mCheckWishplanExpectedValues;
        
        private LoginParams mLoginParams;
        
        private LoginNewParams mLoginNewParams;
        
        private SeachHansenParams mSeachHansenParams;
        
        private SeachSaubrekkaParams mSeachSaubrekkaParams;
        
        private CheckGatFlexExportService_seExpectedValues mCheckGatFlexExportService_seExpectedValues;
        
        private UIStartsidenMinGatv660Window mUIStartsidenMinGatv660Window;
        
        private UIDepartmentServiceV66Window mUIDepartmentServiceV66Window;
        
        private UIGATFlexWindow mUIGATFlexWindow;
        
        private UIGATFlexWindow1 mUIGATFlexWindow1;
        
        private UILogginnMinGatv653438Window mUILogginnMinGatv653438Window;
        
        private UIStartsidenMinGatv653Window mUIStartsidenMinGatv653Window;
        
        private UIStartsidenMinGatv653Window1 mUIStartsidenMinGatv653Window1;
        
        private UIMinønskeplanMinGatv6Window1 mUIMinønskeplanMinGatv6Window1;
        
        private UIMinønskeplanMinGatv6Window mUIMinønskeplanMinGatv6Window;
        
        private UIWindowsInternetExploWindow mUIWindowsInternetExploWindow;
        
        private UIMinGatMinGatv6604403Window mUIMinGatMinGatv6604403Window;
        
        private UICertificateErrorNaviWindow mUICertificateErrorNaviWindow;
        
        private UICertificateErrorNaviWindow1 mUICertificateErrorNaviWindow1;
        
        private UIItemWindow4 mUIItemWindow;
        
        private UIGatWebserviceMainPagWindow mUIGatWebserviceMainPagWindow;
        
        private UIGatFlexExportServiceWindow mUIGatFlexExportServiceWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAppservice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckAppserviceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'ProcessAppFlexQueue' link equals 'ProcessAppFlexQueue'
        /// </summary>
        public string UIProcessAppFlexQueueHyperlinkInnerText = "ProcessAppFlexQueue";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBanks'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckBanksExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Mine banker'
        /// </summary>
        public string UIPageTitleCustomInnerText = "Mine banker";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCalendar'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckCalendarExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Min kalender'
        /// </summary>
        public string UIPageTitleCustomInnerText = "Min kalender";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDepartmentServiceV66'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckDepartmentServiceV66ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'GetDepartmentRoster' link equals 'GetDepartmentRoster'
        /// </summary>
        public string UIGetDepartmentRosterHyperlinkInnerText = "GetDepartmentRoster";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckGatFlexExportService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckGatFlexExportServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'http://localhost/GatWs1/FlexExportService.svc?wsdl' link equals 'http://localhost/GatWs1/FlexExportService.svc?wsdl'
        /// </summary>
        public string UIHttplocalhostGatWs1FHyperlinkInnerText = "http://localhost/GatWs1/FlexExportService.svc?wsdl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckGatFlexSweLanguage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckGatFlexSweLanguageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblSearch' label equals 'Sök efter anställd'
        /// </summary>
        public string UILblSearchLabelText = "Sök efter anställd";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckHeHa'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckHeHaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblEmployee' label equals 'Helene Hansen'
        /// </summary>
        public string UILblEmployeeLabelText = "Helene Hansen";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckHome'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckHomeExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Startsiden'
        /// </summary>
        public string UIPageTitleCustomInnerText = "Startsiden";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMySalary'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckMySalaryExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Min lønnsoversikt'
        /// </summary>
        public string UIPageTitleCustomInnerText = "Min lønnsoversikt";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckReminders'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckRemindersExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Påminnelser'
        /// </summary>
        public string UIPageTitleCustomInnerText = "Påminnelser";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSaubrekka'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckSaubrekkaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblEmployee' label equals 'Elin Saubrekka'
        /// </summary>
        public string UILblEmployeeLabelText = "Elin Saubrekka";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSelfService'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckSelfServiceExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Forespørsler'
        /// </summary>
        public string UIPageTitleCustomInnerText = "Forespørsler";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckShiftbook'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckShiftbookExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Vaktbok'
        /// </summary>
        public string UIPageTitleCustomInnerText = "Vaktbok";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckShowWeek'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckShowWeekExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Ukevisning'
        /// </summary>
        public string UIPageTitleCustomInnerText = "Ukevisning";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckTasks'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckTasksExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'pageTitle' custom control equals 'Oppgaver-tid'
        /// </summary>
        public string UIPageTitleCustomInnerText = "Oppgaver-tid";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckWishplan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckWishplanExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Ønskeplan for BASEPLAN TIL AUTOTEST' label equals 'Ønskeplan for BASEPLAN TIL AUTOTEST'
        /// </summary>
        public string UIØnskeplanforBASEPLANTextName = "Ønskeplan for BASEPLAN TIL AUTOTEST";
        
        /// <summary>
        /// Verify that the 'Name' property of 'Ferie - 5 dgr/uke' client equals 'Ferie - 5 dgr/uke'
        /// </summary>
        public string UIFerie5dgrukeClientName = "Ferie - 5 dgr/uke";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Login'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LoginParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'ascl' in 'Brukernavn*' text box
        /// </summary>
        public string UIBrukernavnEditText = "ascl";
        
        /// <summary>
        /// Type '{Tab}' in 'Brukernavn*' text box
        /// </summary>
        public string UIBrukernavnEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Passord*' text box
        /// </summary>
        public string UIPassordEditPassword = "VLLA+bJzNf882FWpmiwJPY0v6P7+sGGK";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginNew'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LoginNewParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'ascl' in 'Brukernavn*' text box
        /// </summary>
        public string UIBrukernavnEditText = "ascl";
        
        /// <summary>
        /// Type '{Tab}' in 'Brukernavn*' text box
        /// </summary>
        public string UIBrukernavnEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Passord*' text box
        /// </summary>
        public string UIPassordEditPassword = "VLLA+bJzNf882FWpmiwJPY0v6P7+sGGK";
        
        /// <summary>
        /// Type '{Tab}' in 'Passord*' text box
        /// </summary>
        public string UIPassordEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SeachHansen'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SeachHansenParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'HEHA' in 'txtSearch' text box
        /// </summary>
        public string UITxtSearchEditValueAsString = "HEHA";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SeachSaubrekka'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SeachSaubrekkaParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'ELIN' in 'txtSearch' text box
        /// </summary>
        public string UITxtSearchEditValueAsString = "ELIN";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckGatFlexExportService_se'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckGatFlexExportService_seExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'http://localhost/GatWs1_se/FlexExportService.svc?w...' link equals 'http://localhost/GatWs1_se/FlexExportService.svc?wsdl'
        /// </summary>
        public string UIHttplocalhostGatWs1_HyperlinkInnerText = "http://localhost/GatWs1_se/FlexExportService.svc?wsdl";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStartsidenMinGatv660Window : BrowserWindow
    {
        
        public UIStartsidenMinGatv660Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Startsiden", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Startsiden - MinGat");
            this.WindowTitles.Add("Min kalender - MinGat");
            this.WindowTitles.Add("Vaktbok - MinGat");
            this.WindowTitles.Add("Oppgaver-tid - MinGat");
            this.WindowTitles.Add("Ukevisning - MinGat");
            this.WindowTitles.Add("Mine banker - MinGat");
            this.WindowTitles.Add("Forespørsler - MinGat");
            this.WindowTitles.Add("Påminnelser - MinGat");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIStartsidenMinGatv660Document UIStartsidenMinGatv660Document
        {
            get
            {
                if ((this.mUIStartsidenMinGatv660Document == null))
                {
                    this.mUIStartsidenMinGatv660Document = new UIStartsidenMinGatv660Document(this);
                }
                return this.mUIStartsidenMinGatv660Document;
            }
        }
        #endregion
        
        #region Fields
        private UIStartsidenMinGatv660Document mUIStartsidenMinGatv660Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStartsidenMinGatv660Document : HtmlDocument
    {
        
        public UIStartsidenMinGatv660Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Startsiden", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/start/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Startsiden - MinGat");
            this.WindowTitles.Add("Min kalender - MinGat");
            this.WindowTitles.Add("Vaktbok - MinGat");
            this.WindowTitles.Add("Oppgaver-tid - MinGat");
            this.WindowTitles.Add("Ukevisning - MinGat");
            this.WindowTitles.Add("Mine banker - MinGat");
            this.WindowTitles.Add("Forespørsler - MinGat");
            this.WindowTitles.Add("Påminnelser - MinGat");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        
        public HtmlDiv UILasterPane
        {
            get
            {
                if ((this.mUILasterPane == null))
                {
                    this.mUILasterPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUILasterPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "empGlobalLoadingPanelWrapper";
                    this.mUILasterPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILasterPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Laster... ";
                    this.mUILasterPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILasterPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUILasterPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"empGlobalLoadingPanelWrapper\" data-bind=\"visible: GlobalProgress.waitScope.is" +
                        "Waiting\"";
                    this.mUILasterPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "705";
                    this.mUILasterPane.WindowTitles.Add("Min kalender - MinGat");
                    this.mUILasterPane.WindowTitles.Add("Vaktbok - MinGat");
                    #endregion
                }
                return this.mUILasterPane;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom mUIRootQuickNavCustom;
        
        private HtmlDiv mUILasterPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootQuickNavCustom : HtmlCustom
    {
        
        public UIRootQuickNavCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Startsiden - MinGat");
            this.WindowTitles.Add("Min kalender - MinGat");
            this.WindowTitles.Add("Vaktbok - MinGat");
            this.WindowTitles.Add("Oppgaver-tid - MinGat");
            this.WindowTitles.Add("Ukevisning - MinGat");
            this.WindowTitles.Add("Mine banker - MinGat");
            this.WindowTitles.Add("Forespørsler - MinGat");
            this.WindowTitles.Add("Påminnelser - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man/MinGat/Employee/Home#!/start/";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/start/\"";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIItemHyperlink.WindowTitles.Add("Startsiden - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.sta" +
                        "rtpage\')\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "126";
                    this.mUIItemPane.WindowTitles.Add("Startsiden - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink1
        {
            get
            {
                if ((this.mUIItemHyperlink1 == null))
                {
                    this.mUIItemHyperlink1 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink1.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man/MinGat/Employee/Home#!/employee/mycalendar/";
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/employee/mycalendar/\"";
                    this.mUIItemHyperlink1.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIItemHyperlink1.WindowTitles.Add("Startsiden - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemHyperlink1;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink2
        {
            get
            {
                if ((this.mUIItemHyperlink2 == null))
                {
                    this.mUIItemHyperlink2 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man/MinGat/Employee/Home#!/department/shiftbook/";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/shiftbook/\"";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIItemHyperlink2.WindowTitles.Add("Min kalender - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemHyperlink2;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink3
        {
            get
            {
                if ((this.mUIItemHyperlink3 == null))
                {
                    this.mUIItemHyperlink3 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man/MinGat/Employee/Home#!/department/taskoverview/";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/taskoverview/\"";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIItemHyperlink3.WindowTitles.Add("Vaktbok - MinGat v.6.6.0.43804");
                    this.mUIItemHyperlink3.WindowTitles.Add("Oppgaver-tid - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemHyperlink3;
            }
        }
        
        public HtmlDiv UIItemPane1
        {
            get
            {
                if ((this.mUIItemPane1 == null))
                {
                    this.mUIItemPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.tas" +
                        "koverview\')\"";
                    this.mUIItemPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "129";
                    this.mUIItemPane1.WindowTitles.Add("Oppgaver-tid - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemPane1;
            }
        }
        
        public HtmlDiv UIItem010Pane
        {
            get
            {
                if ((this.mUIItem010Pane == null))
                {
                    this.mUIItem010Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem010Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem010Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "0 \r\n   \r\n\r\n 1 \r\n   \r\n\r\n 0 \r\n  ";
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "mg-quick-nav-group system-group";
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"mg-quick-nav-group system-group\" data-bind=\"visible: true\"";
                    this.mUIItem010Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "125";
                    this.mUIItem010Pane.WindowTitles.Add("Oppgaver-tid - MinGat v.6.6.0.43804");
                    this.mUIItem010Pane.WindowTitles.Add("Ukevisning - MinGat v.6.6.0.43804");
                    this.mUIItem010Pane.WindowTitles.Add("Mine banker - MinGat v.6.6.0.43804");
                    this.mUIItem010Pane.WindowTitles.Add("Forespørsler - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItem010Pane;
            }
        }
        
        public HtmlDiv UIItemPane2
        {
            get
            {
                if ((this.mUIItemPane2 == null))
                {
                    this.mUIItemPane2 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane2.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane2.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.wee" +
                        "klist\')\"";
                    this.mUIItemPane2.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "130";
                    this.mUIItemPane2.WindowTitles.Add("Oppgaver-tid - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemPane2;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink4
        {
            get
            {
                if ((this.mUIItemHyperlink4 == null))
                {
                    this.mUIItemHyperlink4 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink4.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink4.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink4.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink4.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man/MinGat/Employee/Home#!/department/weeklist/";
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/weeklist/\"";
                    this.mUIItemHyperlink4.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIItemHyperlink4.WindowTitles.Add("Oppgaver-tid - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemHyperlink4;
            }
        }
        
        public HtmlDiv UIItemPane3
        {
            get
            {
                if ((this.mUIItemPane3 == null))
                {
                    this.mUIItemPane3 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane3.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane3.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.ban" +
                        "ks\')\"";
                    this.mUIItemPane3.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "131";
                    this.mUIItemPane3.WindowTitles.Add("Ukevisning - MinGat v.6.6.0.43804");
                    this.mUIItemPane3.WindowTitles.Add("Mine banker - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemPane3;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink5
        {
            get
            {
                if ((this.mUIItemHyperlink5 == null))
                {
                    this.mUIItemHyperlink5 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink5.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink5.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink5.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink5.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man/MinGat/Employee/Home#!/employee/mybanks/";
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/employee/mybanks/\"";
                    this.mUIItemHyperlink5.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIItemHyperlink5.WindowTitles.Add("Ukevisning - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItemHyperlink5;
            }
        }
        
        public HtmlDiv UIItem0Pane
        {
            get
            {
                if ((this.mUIItem0Pane == null))
                {
                    this.mUIItem0Pane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItem0Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItem0Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "0 \r\n  ";
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.sel" +
                        "fservices\')\"";
                    this.mUIItem0Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "132";
                    this.mUIItem0Pane.WindowTitles.Add("Mine banker - MinGat v.6.6.0.43804");
                    this.mUIItem0Pane.WindowTitles.Add("Forespørsler - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItem0Pane;
            }
        }
        
        public HtmlHyperlink UIItem0Hyperlink
        {
            get
            {
                if ((this.mUIItem0Hyperlink == null))
                {
                    this.mUIItem0Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " 0 \r\n ";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man/MinGat/Employee/Home#!/selfservicelist/";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/selfservicelist/\"";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    this.mUIItem0Hyperlink.WindowTitles.Add("Mine banker - MinGat v.6.6.0.43804");
                    this.mUIItem0Hyperlink.WindowTitles.Add("Forespørsler - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItem0Hyperlink;
            }
        }
        
        public HtmlHyperlink UIItem1Hyperlink
        {
            get
            {
                if ((this.mUIItem1Hyperlink == null))
                {
                    this.mUIItem1Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItem1Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItem1Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItem1Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItem1Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " 1 \r\n ";
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man/MinGat/Employee/Home#!/reminders/";
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/reminders/\"";
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "8";
                    this.mUIItem1Hyperlink.WindowTitles.Add("Forespørsler - MinGat v.6.6.0.43804");
                    #endregion
                }
                return this.mUIItem1Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        
        private HtmlDiv mUIItemPane;
        
        private HtmlHyperlink mUIItemHyperlink1;
        
        private HtmlHyperlink mUIItemHyperlink2;
        
        private HtmlHyperlink mUIItemHyperlink3;
        
        private HtmlDiv mUIItemPane1;
        
        private HtmlDiv mUIItem010Pane;
        
        private HtmlDiv mUIItemPane2;
        
        private HtmlHyperlink mUIItemHyperlink4;
        
        private HtmlDiv mUIItemPane3;
        
        private HtmlHyperlink mUIItemHyperlink5;
        
        private HtmlDiv mUIItem0Pane;
        
        private HtmlHyperlink mUIItem0Hyperlink;
        
        private HtmlHyperlink mUIItem1Hyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDepartmentServiceV66Window : BrowserWindow
    {
        
        public UIDepartmentServiceV66Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "DepartmentServiceV66 Web Service";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("DepartmentServiceV66 Web Service");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDepartmentServiceV66Document UIDepartmentServiceV66Document
        {
            get
            {
                if ((this.mUIDepartmentServiceV66Document == null))
                {
                    this.mUIDepartmentServiceV66Document = new UIDepartmentServiceV66Document(this);
                }
                return this.mUIDepartmentServiceV66Document;
            }
        }
        #endregion
        
        #region Fields
        private UIDepartmentServiceV66Document mUIDepartmentServiceV66Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDepartmentServiceV66Document : HtmlDocument
    {
        
        public UIDepartmentServiceV66Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "DepartmentServiceV66 Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/DepartmentServiceV66.asmx";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/GatWs1/DepartmentServiceV66.asmx", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("DepartmentServiceV66 Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIContentPane : HtmlDiv
    {
        
        public UIContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "DepartmentServiceV66\r\n\r\n\r\nDepartment rel";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("DepartmentServiceV66 Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGetDepartmentRosterHyperlink
        {
            get
            {
                if ((this.mUIGetDepartmentRosterHyperlink == null))
                {
                    this.mUIGetDepartmentRosterHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGetDepartmentRosterHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "GetDepartmentRoster";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/DepartmentServiceV66.asmx";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/DepartmentServiceV66.asmx?op=GetDepartmentRoster";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"DepartmentServiceV66.asmx?op=GetDe";
                    this.mUIGetDepartmentRosterHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIGetDepartmentRosterHyperlink.WindowTitles.Add("DepartmentServiceV66 Web Service");
                    #endregion
                }
                return this.mUIGetDepartmentRosterHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGetDepartmentRosterHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGATFlexWindow : WinWindow
    {
        
        public UIGATFlexWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GAT-Flex";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIDocumentsHostTabList UIDocumentsHostTabList
        {
            get
            {
                if ((this.mUIDocumentsHostTabList == null))
                {
                    this.mUIDocumentsHostTabList = new UIDocumentsHostTabList(this);
                }
                return this.mUIDocumentsHostTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentsHostTabList mUIDocumentsHostTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentsHostTabList : DXTestControl
    {
        
        public UIDocumentsHostTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentsHost[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentsHost";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIAlleansatteCustom UIAlleansatteCustom
        {
            get
            {
                if ((this.mUIAlleansatteCustom == null))
                {
                    this.mUIAlleansatteCustom = new UIAlleansatteCustom(this);
                }
                return this.mUIAlleansatteCustom;
            }
        }
        
        public UIAnsattCustom UIAnsattCustom
        {
            get
            {
                if ((this.mUIAnsattCustom == null))
                {
                    this.mUIAnsattCustom = new UIAnsattCustom(this);
                }
                return this.mUIAnsattCustom;
            }
        }
        
        public UIAllaanställdaCustom UIAllaanställdaCustom
        {
            get
            {
                if ((this.mUIAllaanställdaCustom == null))
                {
                    this.mUIAllaanställdaCustom = new UIAllaanställdaCustom(this);
                }
                return this.mUIAllaanställdaCustom;
            }
        }
        
        public UIAnställdCustom UIAnställdCustom
        {
            get
            {
                if ((this.mUIAnställdCustom == null))
                {
                    this.mUIAnställdCustom = new UIAnställdCustom(this);
                }
                return this.mUIAnställdCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAlleansatteCustom mUIAlleansatteCustom;
        
        private UIAnsattCustom mUIAnsattCustom;
        
        private UIAllaanställdaCustom mUIAllaanställdaCustom;
        
        private UIAnställdCustom mUIAnställdCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAlleansatteCustom : DXTestControl
    {
        
        public UIAlleansatteCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Alle ansatte";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            this.WindowTitles.Add("Alla anställda");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSelectionConCustom UIEmployeeSelectionConCustom
        {
            get
            {
                if ((this.mUIEmployeeSelectionConCustom == null))
                {
                    this.mUIEmployeeSelectionConCustom = new UIEmployeeSelectionConCustom(this);
                }
                return this.mUIEmployeeSelectionConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSelectionConCustom mUIEmployeeSelectionConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeSelectionConCustom : DXTestControl
    {
        
        public UIEmployeeSelectionConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSelectionControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSelectionControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UITcEmployeesWindow UITcEmployeesWindow
        {
            get
            {
                if ((this.mUITcEmployeesWindow == null))
                {
                    this.mUITcEmployeesWindow = new UITcEmployeesWindow(this);
                }
                return this.mUITcEmployeesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITcEmployeesWindow mUITcEmployeesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcEmployeesWindow : WinWindow
    {
        
        public UITcEmployeesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tcEmployees";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public WinClient UITcEmployeesClient
        {
            get
            {
                if ((this.mUITcEmployeesClient == null))
                {
                    this.mUITcEmployeesClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITcEmployeesClient.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUITcEmployeesClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITcEmployeesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnsattCustom : DXTestControl
    {
        
        public UIAnsattCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatt";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeClockControlCustom UIEmployeeClockControlCustom
        {
            get
            {
                if ((this.mUIEmployeeClockControlCustom == null))
                {
                    this.mUIEmployeeClockControlCustom = new UIEmployeeClockControlCustom(this);
                }
                return this.mUIEmployeeClockControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeClockControlCustom mUIEmployeeClockControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeClockControlCustom : DXTestControl
    {
        
        public UIEmployeeClockControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeClockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeClockControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIXscMainScrollableControl UIXscMainScrollableControl
        {
            get
            {
                if ((this.mUIXscMainScrollableControl == null))
                {
                    this.mUIXscMainScrollableControl = new UIXscMainScrollableControl(this);
                }
                return this.mUIXscMainScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscMainScrollableControl mUIXscMainScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXscMainScrollableControl : DXScrollableControl
    {
        
        public UIXscMainScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIBtnClockInLabel
        {
            get
            {
                if ((this.mUIBtnClockInLabel == null))
                {
                    this.mUIBtnClockInLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIBtnClockInLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClockIn";
                    this.mUIBtnClockInLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExtendedLabelControl";
                    this.mUIBtnClockInLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnClockInLabel.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIBtnClockInLabel;
            }
        }
        
        public DXTestControl UIBtnClockOutLabel
        {
            get
            {
                if ((this.mUIBtnClockOutLabel == null))
                {
                    this.mUIBtnClockOutLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIBtnClockOutLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClockOut";
                    this.mUIBtnClockOutLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExtendedLabelControl";
                    this.mUIBtnClockOutLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnClockOutLabel.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIBtnClockOutLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIBtnClockInLabel;
        
        private DXTestControl mUIBtnClockOutLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAllaanställdaCustom : DXTestControl
    {
        
        public UIAllaanställdaCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Alla anställda";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSelectionConCustom1 UIEmployeeSelectionConCustom
        {
            get
            {
                if ((this.mUIEmployeeSelectionConCustom == null))
                {
                    this.mUIEmployeeSelectionConCustom = new UIEmployeeSelectionConCustom1(this);
                }
                return this.mUIEmployeeSelectionConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSelectionConCustom1 mUIEmployeeSelectionConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeSelectionConCustom1 : DXTestControl
    {
        
        public UIEmployeeSelectionConCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSelectionControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSelectionControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UITcEmployeesWindow1 UITcEmployeesWindow
        {
            get
            {
                if ((this.mUITcEmployeesWindow == null))
                {
                    this.mUITcEmployeesWindow = new UITcEmployeesWindow1(this);
                }
                return this.mUITcEmployeesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITcEmployeesWindow1 mUITcEmployeesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcEmployeesWindow1 : WinWindow
    {
        
        public UITcEmployeesWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tcEmployees";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public WinClient UITcEmployeesClient
        {
            get
            {
                if ((this.mUITcEmployeesClient == null))
                {
                    this.mUITcEmployeesClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITcEmployeesClient.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUITcEmployeesClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITcEmployeesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnställdCustom : DXTestControl
    {
        
        public UIAnställdCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Anställd";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeClockControlCustom1 UIEmployeeClockControlCustom
        {
            get
            {
                if ((this.mUIEmployeeClockControlCustom == null))
                {
                    this.mUIEmployeeClockControlCustom = new UIEmployeeClockControlCustom1(this);
                }
                return this.mUIEmployeeClockControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeClockControlCustom1 mUIEmployeeClockControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeClockControlCustom1 : DXTestControl
    {
        
        public UIEmployeeClockControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeClockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeClockControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIXscMainScrollableControl1 UIXscMainScrollableControl
        {
            get
            {
                if ((this.mUIXscMainScrollableControl == null))
                {
                    this.mUIXscMainScrollableControl = new UIXscMainScrollableControl1(this);
                }
                return this.mUIXscMainScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscMainScrollableControl1 mUIXscMainScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXscMainScrollableControl1 : DXScrollableControl
    {
        
        public UIXscMainScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIBtnClockInLabel
        {
            get
            {
                if ((this.mUIBtnClockInLabel == null))
                {
                    this.mUIBtnClockInLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIBtnClockInLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClockIn";
                    this.mUIBtnClockInLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExtendedLabelControl";
                    this.mUIBtnClockInLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnClockInLabel.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIBtnClockInLabel;
            }
        }
        
        public DXTestControl UIBtnClockOutLabel
        {
            get
            {
                if ((this.mUIBtnClockOutLabel == null))
                {
                    this.mUIBtnClockOutLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIBtnClockOutLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClockOut";
                    this.mUIBtnClockOutLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExtendedLabelControl";
                    this.mUIBtnClockOutLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIBtnClockOutLabel.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIBtnClockOutLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIBtnClockInLabel;
        
        private DXTestControl mUIBtnClockOutLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGATFlexWindow1 : DXWindow
    {
        
        public UIGATFlexWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GAT-Flex";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIDocumentsHostTabList1 UIDocumentsHostTabList
        {
            get
            {
                if ((this.mUIDocumentsHostTabList == null))
                {
                    this.mUIDocumentsHostTabList = new UIDocumentsHostTabList1(this);
                }
                return this.mUIDocumentsHostTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIDocumentsHostTabList1 mUIDocumentsHostTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDocumentsHostTabList1 : DXTestControl
    {
        
        public UIDocumentsHostTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DocumentsHost[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentsHost";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIAlleansatteCustom1 UIAlleansatteCustom
        {
            get
            {
                if ((this.mUIAlleansatteCustom == null))
                {
                    this.mUIAlleansatteCustom = new UIAlleansatteCustom1(this);
                }
                return this.mUIAlleansatteCustom;
            }
        }
        
        public UISøketteransattCustom UISøketteransattCustom
        {
            get
            {
                if ((this.mUISøketteransattCustom == null))
                {
                    this.mUISøketteransattCustom = new UISøketteransattCustom(this);
                }
                return this.mUISøketteransattCustom;
            }
        }
        
        public UIAnsattCustom1 UIAnsattCustom
        {
            get
            {
                if ((this.mUIAnsattCustom == null))
                {
                    this.mUIAnsattCustom = new UIAnsattCustom1(this);
                }
                return this.mUIAnsattCustom;
            }
        }
        
        public UIAllaanställdaCustom1 UIAllaanställdaCustom
        {
            get
            {
                if ((this.mUIAllaanställdaCustom == null))
                {
                    this.mUIAllaanställdaCustom = new UIAllaanställdaCustom1(this);
                }
                return this.mUIAllaanställdaCustom;
            }
        }
        
        public UISökefteranställdCustom UISökefteranställdCustom
        {
            get
            {
                if ((this.mUISökefteranställdCustom == null))
                {
                    this.mUISökefteranställdCustom = new UISökefteranställdCustom(this);
                }
                return this.mUISökefteranställdCustom;
            }
        }
        
        public UIAnställdCustom1 UIAnställdCustom
        {
            get
            {
                if ((this.mUIAnställdCustom == null))
                {
                    this.mUIAnställdCustom = new UIAnställdCustom1(this);
                }
                return this.mUIAnställdCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAlleansatteCustom1 mUIAlleansatteCustom;
        
        private UISøketteransattCustom mUISøketteransattCustom;
        
        private UIAnsattCustom1 mUIAnsattCustom;
        
        private UIAllaanställdaCustom1 mUIAllaanställdaCustom;
        
        private UISökefteranställdCustom mUISökefteranställdCustom;
        
        private UIAnställdCustom1 mUIAnställdCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAlleansatteCustom1 : DXTestControl
    {
        
        public UIAlleansatteCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Alle ansatte";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSelectionConCustom2 UIEmployeeSelectionConCustom
        {
            get
            {
                if ((this.mUIEmployeeSelectionConCustom == null))
                {
                    this.mUIEmployeeSelectionConCustom = new UIEmployeeSelectionConCustom2(this);
                }
                return this.mUIEmployeeSelectionConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSelectionConCustom2 mUIEmployeeSelectionConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeSelectionConCustom2 : DXTestControl
    {
        
        public UIEmployeeSelectionConCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSelectionControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSelectionControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIPcHeaderClient UIPcHeaderClient
        {
            get
            {
                if ((this.mUIPcHeaderClient == null))
                {
                    this.mUIPcHeaderClient = new UIPcHeaderClient(this);
                }
                return this.mUIPcHeaderClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcHeaderClient mUIPcHeaderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcHeaderClient : DXTestControl
    {
        
        public UIPcHeaderClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcHeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "Titlebar";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblSearchLabel
        {
            get
            {
                if ((this.mUILblSearchLabel == null))
                {
                    this.mUILblSearchLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblSearchLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblSearch";
                    this.mUILblSearchLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExtendedLabelControl";
                    this.mUILblSearchLabel.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUILblSearchLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblSearchLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISøketteransattCustom : DXTestControl
    {
        
        public UISøketteransattCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Søk etter ansatt";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSearchControCustom UIEmployeeSearchControCustom
        {
            get
            {
                if ((this.mUIEmployeeSearchControCustom == null))
                {
                    this.mUIEmployeeSearchControCustom = new UIEmployeeSearchControCustom(this);
                }
                return this.mUIEmployeeSearchControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSearchControCustom mUIEmployeeSearchControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeSearchControCustom : DXTestControl
    {
        
        public UIEmployeeSearchControCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSearchControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSearchControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtSearchEdit
        {
            get
            {
                if ((this.mUITxtSearchEdit == null))
                {
                    this.mUITxtSearchEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtSearchEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSearch";
                    this.mUITxtSearchEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITxtSearchEdit.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUITxtSearchEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSearch";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ClockButton";
                    this.mUIOKButton.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtSearchEdit;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnsattCustom1 : DXTestControl
    {
        
        public UIAnsattCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatt";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeClockControlCustom2 UIEmployeeClockControlCustom
        {
            get
            {
                if ((this.mUIEmployeeClockControlCustom == null))
                {
                    this.mUIEmployeeClockControlCustom = new UIEmployeeClockControlCustom2(this);
                }
                return this.mUIEmployeeClockControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeClockControlCustom2 mUIEmployeeClockControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeClockControlCustom2 : DXTestControl
    {
        
        public UIEmployeeClockControlCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeClockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeClockControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIXscMainScrollableControl2 UIXscMainScrollableControl
        {
            get
            {
                if ((this.mUIXscMainScrollableControl == null))
                {
                    this.mUIXscMainScrollableControl = new UIXscMainScrollableControl2(this);
                }
                return this.mUIXscMainScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscMainScrollableControl2 mUIXscMainScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXscMainScrollableControl2 : DXScrollableControl
    {
        
        public UIXscMainScrollableControl2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblEmployeeLabel
        {
            get
            {
                if ((this.mUILblEmployeeLabel == null))
                {
                    this.mUILblEmployeeLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblEmployeeLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblEmployee";
                    this.mUILblEmployeeLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExtendedLabelControl";
                    this.mUILblEmployeeLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILblEmployeeLabel.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUILblEmployeeLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblEmployeeLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAllaanställdaCustom1 : DXTestControl
    {
        
        public UIAllaanställdaCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Alla anställda";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSelectionConCustom3 UIEmployeeSelectionConCustom
        {
            get
            {
                if ((this.mUIEmployeeSelectionConCustom == null))
                {
                    this.mUIEmployeeSelectionConCustom = new UIEmployeeSelectionConCustom3(this);
                }
                return this.mUIEmployeeSelectionConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSelectionConCustom3 mUIEmployeeSelectionConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeSelectionConCustom3 : DXTestControl
    {
        
        public UIEmployeeSelectionConCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSelectionControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSelectionControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIPcHeaderClient1 UIPcHeaderClient
        {
            get
            {
                if ((this.mUIPcHeaderClient == null))
                {
                    this.mUIPcHeaderClient = new UIPcHeaderClient1(this);
                }
                return this.mUIPcHeaderClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcHeaderClient1 mUIPcHeaderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcHeaderClient1 : DXTestControl
    {
        
        public UIPcHeaderClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcHeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "Titlebar";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblSearchLabel
        {
            get
            {
                if ((this.mUILblSearchLabel == null))
                {
                    this.mUILblSearchLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblSearchLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblSearch";
                    this.mUILblSearchLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExtendedLabelControl";
                    this.mUILblSearchLabel.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUILblSearchLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblSearchLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISökefteranställdCustom : DXTestControl
    {
        
        public UISökefteranställdCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Sök efter anställd";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeSearchControCustom1 UIEmployeeSearchControCustom
        {
            get
            {
                if ((this.mUIEmployeeSearchControCustom == null))
                {
                    this.mUIEmployeeSearchControCustom = new UIEmployeeSearchControCustom1(this);
                }
                return this.mUIEmployeeSearchControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeSearchControCustom1 mUIEmployeeSearchControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeSearchControCustom1 : DXTestControl
    {
        
        public UIEmployeeSearchControCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeSearchControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeSearchControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtSearchEdit
        {
            get
            {
                if ((this.mUITxtSearchEdit == null))
                {
                    this.mUITxtSearchEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtSearchEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSearch";
                    this.mUITxtSearchEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITxtSearchEdit.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUITxtSearchEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSearch";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ClockButton";
                    this.mUIOKButton.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtSearchEdit;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnställdCustom1 : DXTestControl
    {
        
        public UIAnställdCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Anställd";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DocumentContainer";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIEmployeeClockControlCustom3 UIEmployeeClockControlCustom
        {
            get
            {
                if ((this.mUIEmployeeClockControlCustom == null))
                {
                    this.mUIEmployeeClockControlCustom = new UIEmployeeClockControlCustom3(this);
                }
                return this.mUIEmployeeClockControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeClockControlCustom3 mUIEmployeeClockControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeClockControlCustom3 : DXTestControl
    {
        
        public UIEmployeeClockControlCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeClockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeClockControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public UIXscMainScrollableControl3 UIXscMainScrollableControl
        {
            get
            {
                if ((this.mUIXscMainScrollableControl == null))
                {
                    this.mUIXscMainScrollableControl = new UIXscMainScrollableControl3(this);
                }
                return this.mUIXscMainScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscMainScrollableControl3 mUIXscMainScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXscMainScrollableControl3 : DXScrollableControl
    {
        
        public UIXscMainScrollableControl3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("GAT-Flex");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblEmployeeLabel
        {
            get
            {
                if ((this.mUILblEmployeeLabel == null))
                {
                    this.mUILblEmployeeLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblEmployeeLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblEmployee";
                    this.mUILblEmployeeLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ExtendedLabelControl";
                    this.mUILblEmployeeLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILblEmployeeLabel.WindowTitles.Add("GAT-Flex");
                    #endregion
                }
                return this.mUILblEmployeeLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblEmployeeLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILogginnMinGatv653438Window : BrowserWindow
    {
        
        public UILogginnMinGatv653438Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Logg inn", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Logg inn - MinGat");
            this.WindowTitles.Add("Logga in - MinGat");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UILogginnMinGatv653438Document UILogginnMinGatv653438Document
        {
            get
            {
                if ((this.mUILogginnMinGatv653438Document == null))
                {
                    this.mUILogginnMinGatv653438Document = new UILogginnMinGatv653438Document(this);
                }
                return this.mUILogginnMinGatv653438Document;
            }
        }
        #endregion
        
        #region Fields
        private UILogginnMinGatv653438Document mUILogginnMinGatv653438Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILogginnMinGatv653438Document : HtmlDocument
    {
        
        public UILogginnMinGatv653438Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/mingat";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/mingat", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Logg inn - MinGat");
            this.WindowTitles.Add("Logga in");
            #endregion
        }
        
        #region Properties
        public UILogginnButton UILogginnButton
        {
            get
            {
                if ((this.mUILogginnButton == null))
                {
                    this.mUILogginnButton = new UILogginnButton(this);
                }
                return this.mUILogginnButton;
            }
        }
        
        public HtmlEdit UIBrukernavnEdit
        {
            get
            {
                if ((this.mUIBrukernavnEdit == null))
                {
                    this.mUIBrukernavnEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIBrukernavnEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "username";
                    this.mUIBrukernavnEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "username";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"username\" id=\"username\" type=\"text";
                    this.mUIBrukernavnEdit.WindowTitles.Add("Logg inn - MinGat");
                    this.mUIBrukernavnEdit.WindowTitles.Add("Logga in");
                    #endregion
                }
                return this.mUIBrukernavnEdit;
            }
        }
        
        public HtmlEdit UIPassordEdit
        {
            get
            {
                if ((this.mUIPassordEdit == null))
                {
                    this.mUIPassordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPassordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "password";
                    this.mUIPassordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "password";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"password\" id=\"password\" type=\"pass";
                    this.mUIPassordEdit.WindowTitles.Add("Logg inn - MinGat");
                    this.mUIPassordEdit.WindowTitles.Add("Logga in");
                    #endregion
                }
                return this.mUIPassordEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILogginnButton mUILogginnButton;
        
        private HtmlEdit mUIBrukernavnEdit;
        
        private HtmlEdit mUIPassordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILogginnButton : HtmlButton
    {
        
        public UILogginnButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlButton.PropertyNames.Id] = "btnLoginPage1";
            this.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
            this.FilterProperties[HtmlButton.PropertyNames.Class] = "gs-button kind-normal-blue type-button ui-icon-size-normal";
            this.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"gs-button kind-normal-blue type-b";
            this.WindowTitles.Add("Logg inn - MinGat");
            this.WindowTitles.Add("Logga in - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UILogginnPane
        {
            get
            {
                if ((this.mUILogginnPane == null))
                {
                    this.mUILogginnPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUILogginnPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUILogginnPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Logg inn";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-caption no-select";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-caption no-select\"";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "25";
                    this.mUILogginnPane.WindowTitles.Add("Logg inn - MinGat");
                    this.mUILogginnPane.WindowTitles.Add("Logga in - MinGat");
                    #endregion
                }
                return this.mUILogginnPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUILogginnPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStartsidenMinGatv653Window : BrowserWindow
    {
        
        public UIStartsidenMinGatv653Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, " - MinGat", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Startsiden - MinGat v.");
            this.WindowTitles.Add("Startsidan - MinGat v.");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIStartsidenMinGatv653Document UIStartsidenMinGatv653Document
        {
            get
            {
                if ((this.mUIStartsidenMinGatv653Document == null))
                {
                    this.mUIStartsidenMinGatv653Document = new UIStartsidenMinGatv653Document(this);
                }
                return this.mUIStartsidenMinGatv653Document;
            }
        }
        
        public UIPåminnelserMinGatv65Document UIPåminnelserMinGatv65Document
        {
            get
            {
                if ((this.mUIPåminnelserMinGatv65Document == null))
                {
                    this.mUIPåminnelserMinGatv65Document = new UIPåminnelserMinGatv65Document(this);
                }
                return this.mUIPåminnelserMinGatv65Document;
            }
        }
        
        public UIForespørslerMinGatv6Document UIForespørslerMinGatv6Document
        {
            get
            {
                if ((this.mUIForespørslerMinGatv6Document == null))
                {
                    this.mUIForespørslerMinGatv6Document = new UIForespørslerMinGatv6Document(this);
                }
                return this.mUIForespørslerMinGatv6Document;
            }
        }
        
        public UIMinebankerMinGatv653Document UIMinebankerMinGatv653Document
        {
            get
            {
                if ((this.mUIMinebankerMinGatv653Document == null))
                {
                    this.mUIMinebankerMinGatv653Document = new UIMinebankerMinGatv653Document(this);
                }
                return this.mUIMinebankerMinGatv653Document;
            }
        }
        
        public UIUkevisningMinGatv653Document UIUkevisningMinGatv653Document
        {
            get
            {
                if ((this.mUIUkevisningMinGatv653Document == null))
                {
                    this.mUIUkevisningMinGatv653Document = new UIUkevisningMinGatv653Document(this);
                }
                return this.mUIUkevisningMinGatv653Document;
            }
        }
        
        public UIOppgaveoversiktMinGaDocument UIOppgaveoversiktMinGaDocument
        {
            get
            {
                if ((this.mUIOppgaveoversiktMinGaDocument == null))
                {
                    this.mUIOppgaveoversiktMinGaDocument = new UIOppgaveoversiktMinGaDocument(this);
                }
                return this.mUIOppgaveoversiktMinGaDocument;
            }
        }
        
        public UIVaktbokMinGatv653438Document UIVaktbokMinGatv653438Document
        {
            get
            {
                if ((this.mUIVaktbokMinGatv653438Document == null))
                {
                    this.mUIVaktbokMinGatv653438Document = new UIVaktbokMinGatv653438Document(this);
                }
                return this.mUIVaktbokMinGatv653438Document;
            }
        }
        
        public UIMinkalenderMinGatv65Document UIMinkalenderMinGatv65Document
        {
            get
            {
                if ((this.mUIMinkalenderMinGatv65Document == null))
                {
                    this.mUIMinkalenderMinGatv65Document = new UIMinkalenderMinGatv65Document(this);
                }
                return this.mUIMinkalenderMinGatv65Document;
            }
        }
        
        public UIStartsidenMinGatv653Document1 UIStartsidenMinGatv653Document1
        {
            get
            {
                if ((this.mUIStartsidenMinGatv653Document1 == null))
                {
                    this.mUIStartsidenMinGatv653Document1 = new UIStartsidenMinGatv653Document1(this);
                }
                return this.mUIStartsidenMinGatv653Document1;
            }
        }
        
        public UIMinlønnsoversiktMinGDocument UIMinlønnsoversiktMinGDocument
        {
            get
            {
                if ((this.mUIMinlønnsoversiktMinGDocument == null))
                {
                    this.mUIMinlønnsoversiktMinGDocument = new UIMinlønnsoversiktMinGDocument(this);
                }
                return this.mUIMinlønnsoversiktMinGDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIStartsidenMinGatv653Document mUIStartsidenMinGatv653Document;
        
        private UIPåminnelserMinGatv65Document mUIPåminnelserMinGatv65Document;
        
        private UIForespørslerMinGatv6Document mUIForespørslerMinGatv6Document;
        
        private UIMinebankerMinGatv653Document mUIMinebankerMinGatv653Document;
        
        private UIUkevisningMinGatv653Document mUIUkevisningMinGatv653Document;
        
        private UIOppgaveoversiktMinGaDocument mUIOppgaveoversiktMinGaDocument;
        
        private UIVaktbokMinGatv653438Document mUIVaktbokMinGatv653438Document;
        
        private UIMinkalenderMinGatv65Document mUIMinkalenderMinGatv65Document;
        
        private UIStartsidenMinGatv653Document1 mUIStartsidenMinGatv653Document1;
        
        private UIMinlønnsoversiktMinGDocument mUIMinlønnsoversiktMinGDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStartsidenMinGatv653Document : HtmlDocument
    {
        
        public UIStartsidenMinGatv653Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Startsiden - MinGat");
            this.WindowTitles.Add("Startsidan - MinGat");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom1 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom1(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom1 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootQuickNavCustom1 : HtmlCustom
    {
        
        public UIRootQuickNavCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Startsiden");
            this.WindowTitles.Add("Startsidan");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItem1Hyperlink
        {
            get
            {
                if ((this.mUIItem1Hyperlink == null))
                {
                    this.mUIItem1Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItem1Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/reminders/\"";
                    this.mUIItem1Hyperlink.WindowTitles.Add("Startsiden");
                    this.mUIItem1Hyperlink.WindowTitles.Add("Startsidan");
                    #endregion
                }
                return this.mUIItem1Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItem1Hyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPåminnelserMinGatv65Document : HtmlDocument
    {
        
        public UIPåminnelserMinGatv65Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/reminders/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Påminnelser - MinGa");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPageTitleCustom
        {
            get
            {
                if ((this.mUIPageTitleCustom == null))
                {
                    this.mUIPageTitleCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPageTitleCustom.SearchProperties["TagName"] = "H2";
                    this.mUIPageTitleCustom.SearchProperties["Id"] = "pageTitle";
                    this.mUIPageTitleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPageTitleCustom.FilterProperties["Class"] = null;
                    this.mUIPageTitleCustom.FilterProperties["ControlDefinition"] = "id=\"pageTitle\" style=\"display: table;\" d";
                    this.mUIPageTitleCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPageTitleCustom.WindowTitles.Add("Påminnelser");
                    #endregion
                }
                return this.mUIPageTitleCustom;
            }
        }
        
        public UIRootQuickNavCustom2 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom2(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPageTitleCustom;
        
        private UIRootQuickNavCustom2 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootQuickNavCustom2 : HtmlCustom
    {
        
        public UIRootQuickNavCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Påminnelser");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItem0Hyperlink
        {
            get
            {
                if ((this.mUIItem0Hyperlink == null))
                {
                    this.mUIItem0Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItem0Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " 0 \r\n ";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man.gatsoft.local/MinGat/Employee/Home#!/selfservicelist/";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/selfservicelist/\"";
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    this.mUIItem0Hyperlink.WindowTitles.Add("Påminnelser");
                    #endregion
                }
                return this.mUIItem0Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItem0Hyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIForespørslerMinGatv6Document : HtmlDocument
    {
        
        public UIForespørslerMinGatv6Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/selfservicelist/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forespørsler - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPageTitleCustom
        {
            get
            {
                if ((this.mUIPageTitleCustom == null))
                {
                    this.mUIPageTitleCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPageTitleCustom.SearchProperties["TagName"] = "H2";
                    this.mUIPageTitleCustom.SearchProperties["Id"] = "pageTitle";
                    this.mUIPageTitleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPageTitleCustom.FilterProperties["Class"] = null;
                    this.mUIPageTitleCustom.FilterProperties["ControlDefinition"] = "id=\"pageTitle\" style=\"display: table;\" d";
                    this.mUIPageTitleCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPageTitleCustom.WindowTitles.Add("Forespørsler");
                    #endregion
                }
                return this.mUIPageTitleCustom;
            }
        }
        
        public UIRootQuickNavCustom3 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom3(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPageTitleCustom;
        
        private UIRootQuickNavCustom3 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootQuickNavCustom3 : HtmlCustom
    {
        
        public UIRootQuickNavCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Forespørsler");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man.gatsoft.local/MinGat/Employee/Home#!/employee/mybanks/";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/employee/mybanks/\"";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIItemHyperlink.WindowTitles.Add("Forespørsler");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMinebankerMinGatv653Document : HtmlDocument
    {
        
        public UIMinebankerMinGatv653Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/employee/mybanks/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Mine banker - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPageTitleCustom
        {
            get
            {
                if ((this.mUIPageTitleCustom == null))
                {
                    this.mUIPageTitleCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPageTitleCustom.SearchProperties["TagName"] = "H2";
                    this.mUIPageTitleCustom.SearchProperties["Id"] = "pageTitle";
                    this.mUIPageTitleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPageTitleCustom.FilterProperties["Class"] = null;
                    this.mUIPageTitleCustom.FilterProperties["ControlDefinition"] = "id=\"pageTitle\" style=\"display: table;\" d";
                    this.mUIPageTitleCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPageTitleCustom.WindowTitles.Add("Mine banker");
                    #endregion
                }
                return this.mUIPageTitleCustom;
            }
        }
        
        public UIRootQuickNavCustom4 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom4(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPageTitleCustom;
        
        private UIRootQuickNavCustom4 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootQuickNavCustom4 : HtmlCustom
    {
        
        public UIRootQuickNavCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Mine banker");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink3
        {
            get
            {
                if ((this.mUIItemHyperlink3 == null))
                {
                    this.mUIItemHyperlink3 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink3.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man.gatsoft.local/MinGat/Employee/Home#!/department/weeklist/";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/weeklist/\"";
                    this.mUIItemHyperlink3.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIItemHyperlink3.WindowTitles.Add("Mine banker");
                    #endregion
                }
                return this.mUIItemHyperlink3;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUkevisningMinGatv653Document : HtmlDocument
    {
        
        public UIUkevisningMinGatv653Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Ukevisning - MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/department/weeklist/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ukevisning - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPageTitleCustom
        {
            get
            {
                if ((this.mUIPageTitleCustom == null))
                {
                    this.mUIPageTitleCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPageTitleCustom.SearchProperties["TagName"] = "H2";
                    this.mUIPageTitleCustom.SearchProperties["Id"] = "pageTitle";
                    this.mUIPageTitleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPageTitleCustom.FilterProperties["Class"] = null;
                    this.mUIPageTitleCustom.FilterProperties["ControlDefinition"] = "id=\"pageTitle\" style=\"display: table;\" d";
                    this.mUIPageTitleCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPageTitleCustom.WindowTitles.Add("Ukevisning");
                    #endregion
                }
                return this.mUIPageTitleCustom;
            }
        }
        
        public UIRootQuickNavCustom5 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom5(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPageTitleCustom;
        
        private UIRootQuickNavCustom5 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootQuickNavCustom5 : HtmlCustom
    {
        
        public UIRootQuickNavCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Ukevisning");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink2
        {
            get
            {
                if ((this.mUIItemHyperlink2 == null))
                {
                    this.mUIItemHyperlink2 = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink2.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man.gatsoft.local/MinGat/Employee/Home#!/department/taskoverview/";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/taskoverview/\"";
                    this.mUIItemHyperlink2.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIItemHyperlink2.WindowTitles.Add("Ukevisning");
                    #endregion
                }
                return this.mUIItemHyperlink2;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOppgaveoversiktMinGaDocument : HtmlDocument
    {
        
        public UIOppgaveoversiktMinGaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Oppgaveoversikt - MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/department/taskoverview/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgaveoversikt - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPageTitleCustom
        {
            get
            {
                if ((this.mUIPageTitleCustom == null))
                {
                    this.mUIPageTitleCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPageTitleCustom.SearchProperties["TagName"] = "H2";
                    this.mUIPageTitleCustom.SearchProperties["Id"] = "pageTitle";
                    this.mUIPageTitleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPageTitleCustom.FilterProperties["Class"] = null;
                    this.mUIPageTitleCustom.FilterProperties["ControlDefinition"] = "id=\"pageTitle\" style=\"display: table;\" d";
                    this.mUIPageTitleCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPageTitleCustom.WindowTitles.Add("Oppgaveoversikt");
                    #endregion
                }
                return this.mUIPageTitleCustom;
            }
        }
        
        public UIRootQuickNavCustom6 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom6(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPageTitleCustom;
        
        private UIRootQuickNavCustom6 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootQuickNavCustom6 : HtmlCustom
    {
        
        public UIRootQuickNavCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Oppgaveoversikt");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man.gatsoft.local/MinGat/Employee/Home#!/department/shiftbook/";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/shiftbook/\"";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIItemHyperlink.WindowTitles.Add("Oppgaveoversikt");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVaktbokMinGatv653438Document : HtmlDocument
    {
        
        public UIVaktbokMinGatv653438Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Vaktbok - MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/department/shiftbook/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Vaktbok - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPageTitleCustom
        {
            get
            {
                if ((this.mUIPageTitleCustom == null))
                {
                    this.mUIPageTitleCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPageTitleCustom.SearchProperties["TagName"] = "H2";
                    this.mUIPageTitleCustom.SearchProperties["Id"] = "pageTitle";
                    this.mUIPageTitleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPageTitleCustom.FilterProperties["Class"] = null;
                    this.mUIPageTitleCustom.FilterProperties["ControlDefinition"] = "id=\"pageTitle\" style=\"display: table;\" d";
                    this.mUIPageTitleCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPageTitleCustom.WindowTitles.Add("Vaktbok");
                    #endregion
                }
                return this.mUIPageTitleCustom;
            }
        }
        
        public UIRootQuickNavCustom7 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom7(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPageTitleCustom;
        
        private UIRootQuickNavCustom7 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootQuickNavCustom7 : HtmlCustom
    {
        
        public UIRootQuickNavCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Vaktbok");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man.gatsoft.local/MinGat/Employee/Home#!/employee/mycalendar/";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/employee/mycalendar/\"";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIItemHyperlink.WindowTitles.Add("Vaktbok");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMinkalenderMinGatv65Document : HtmlDocument
    {
        
        public UIMinkalenderMinGatv65Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Min kalender - MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/employee/mycalendar?view=mcViewMonth&currentDate=2017-03-" +
                        "01&empGuid=", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Min kalender - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPageTitleCustom
        {
            get
            {
                if ((this.mUIPageTitleCustom == null))
                {
                    this.mUIPageTitleCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPageTitleCustom.SearchProperties["TagName"] = "H2";
                    this.mUIPageTitleCustom.SearchProperties["Id"] = "pageTitle";
                    this.mUIPageTitleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPageTitleCustom.FilterProperties["Class"] = null;
                    this.mUIPageTitleCustom.FilterProperties["ControlDefinition"] = "id=\"pageTitle\" style=\"display: table;\" d";
                    this.mUIPageTitleCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPageTitleCustom.WindowTitles.Add("Min kalender");
                    #endregion
                }
                return this.mUIPageTitleCustom;
            }
        }
        
        public UIRootQuickNavCustom8 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom8(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPageTitleCustom;
        
        private UIRootQuickNavCustom8 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootQuickNavCustom8 : HtmlCustom
    {
        
        public UIRootQuickNavCustom8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Min kalender");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "nav-item";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"nav-item\" data-bind=\"gsTooltip: Gatsoft.UI.Resources.get(\'mg.quickmenu.sta" +
                        "rtpage\')\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "142";
                    this.mUIItemPane.WindowTitles.Add("Min kalender");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man.gatsoft.local/MinGat/Employee/Home#!/start/";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/start/\"";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIItemHyperlink.WindowTitles.Add("Min kalender");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStartsidenMinGatv653Document1 : HtmlDocument
    {
        
        public UIStartsidenMinGatv653Document1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Startsiden - MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/start/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Startsiden - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPageTitleCustom
        {
            get
            {
                if ((this.mUIPageTitleCustom == null))
                {
                    this.mUIPageTitleCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPageTitleCustom.SearchProperties["TagName"] = "H2";
                    this.mUIPageTitleCustom.SearchProperties["Id"] = "pageTitle";
                    this.mUIPageTitleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPageTitleCustom.FilterProperties["Class"] = null;
                    this.mUIPageTitleCustom.FilterProperties["ControlDefinition"] = "id=\"pageTitle\" style=\"display: table;\" d";
                    this.mUIPageTitleCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPageTitleCustom.WindowTitles.Add("Startsiden");
                    #endregion
                }
                return this.mUIPageTitleCustom;
            }
        }
        
        public UIBodyWrapperPane UIBodyWrapperPane
        {
            get
            {
                if ((this.mUIBodyWrapperPane == null))
                {
                    this.mUIBodyWrapperPane = new UIBodyWrapperPane(this);
                }
                return this.mUIBodyWrapperPane;
            }
        }
        
        public UIMenuHeader_mainMenuPane UIMenuHeader_mainMenuPane
        {
            get
            {
                if ((this.mUIMenuHeader_mainMenuPane == null))
                {
                    this.mUIMenuHeader_mainMenuPane = new UIMenuHeader_mainMenuPane(this);
                }
                return this.mUIMenuHeader_mainMenuPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPageTitleCustom;
        
        private UIBodyWrapperPane mUIBodyWrapperPane;
        
        private UIMenuHeader_mainMenuPane mUIMenuHeader_mainMenuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBodyWrapperPane : HtmlDiv
    {
        
        public UIBodyWrapperPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "bodyWrapper";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Meny\r\n \r\n \r\n\r\n\r\n \r\nv.6.5.3.43866\r\n \r\n(AU";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "body-wrapper aftvf-blurable";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"body-wrapper aftvf-blurable\" id=\"bodyWrapper\" data-bind=\"css: { \'page-opti" +
                "ons-active\': PageOptionsActive, \'show-page-options\': PageOptionsVisible, \'show-p" +
                "age-options-ontop\': ShowPageOptionsAbove }\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Startsiden - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "menu-indicator";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"menu-indicator\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIItemPane.WindowTitles.Add("Startsiden");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMenuHeader_mainMenuPane : HtmlDiv
    {
        
        public UIMenuHeader_mainMenuPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuHeader_mainMenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Ansatt \r\nLogg ut \r\n\r\n\r\n\r\n  \r\nStartsiden\r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"menuHeader_mainMenu\" style=\"display: block;\" data-bind=\"fadeVisible: ShowMain" +
                "Menu\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "16";
            this.WindowTitles.Add("Startsiden - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILønnsoversiktHyperlink
        {
            get
            {
                if ((this.mUILønnsoversiktHyperlink == null))
                {
                    this.mUILønnsoversiktHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILønnsoversiktHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILønnsoversiktHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILønnsoversiktHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILønnsoversiktHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "sikt", PropertyExpressionOperator.Contains));
                    this.mUILønnsoversiktHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUILønnsoversiktHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILønnsoversiktHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man.gatsoft.local/MinGat/Employee/Home#!/employee/mysalaryoverview/";
                    this.mUILønnsoversiktHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "nav-item";
                    this.mUILønnsoversiktHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"nav-item\" href=\"#!/employee/mysal";
                    this.mUILønnsoversiktHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "16";
                    this.mUILønnsoversiktHyperlink.WindowTitles.Add("Startsiden - MinGat");
                    #endregion
                }
                return this.mUILønnsoversiktHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILønnsoversiktHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMinlønnsoversiktMinGDocument : HtmlDocument
    {
        
        public UIMinlønnsoversiktMinGDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Min lønnsoversikt - MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/employee/mysalaryoverview/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Min lønnsoversikt - MinGat");
            this.WindowTitles.Add("Löneöversikt - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIPageTitleCustom
        {
            get
            {
                if ((this.mUIPageTitleCustom == null))
                {
                    this.mUIPageTitleCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIPageTitleCustom.SearchProperties["TagName"] = "H2";
                    this.mUIPageTitleCustom.SearchProperties["Id"] = "pageTitle";
                    this.mUIPageTitleCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIPageTitleCustom.FilterProperties["Class"] = null;
                    this.mUIPageTitleCustom.FilterProperties["ControlDefinition"] = "id=\"pageTitle\" style=\"display: table;\" d";
                    this.mUIPageTitleCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIPageTitleCustom.WindowTitles.Add("Min lønnsoversikt");
                    #endregion
                }
                return this.mUIPageTitleCustom;
            }
        }
        
        public UIBodyWrapperPane1 UIBodyWrapperPane
        {
            get
            {
                if ((this.mUIBodyWrapperPane == null))
                {
                    this.mUIBodyWrapperPane = new UIBodyWrapperPane1(this);
                }
                return this.mUIBodyWrapperPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIPageTitleCustom;
        
        private UIBodyWrapperPane1 mUIBodyWrapperPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBodyWrapperPane1 : HtmlDiv
    {
        
        public UIBodyWrapperPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "bodyWrapper";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Meny\r\n \r\n \r\n\r\n\r\n \r\nv.6.5.3.43866\r\n \r\n(AU";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "body-wrapper aftvf-blurable";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"body-wrapper aftvf-blurable\" id=\"bodyWrapper\" data-bind=\"css: { \'page-opti" +
                "ons-active\': PageOptionsActive, \'show-page-options\': PageOptionsVisible, \'show-p" +
                "age-options-ontop\': ShowPageOptionsAbove }\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Min lønnsoversikt");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "gat-logo-symbol";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"gat-logo-symbol\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIItemPane.WindowTitles.Add("Min lønnsoversikt");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStartsidenMinGatv653Window1 : BrowserWindow
    {
        
        public UIStartsidenMinGatv653Window1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Startsiden - MinGat", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Startsiden - MinGat");
            this.WindowTitles.Add("Startsidan - MinGat");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIStartsidenMinGatv653Document2 UIStartsidenMinGatv653Document
        {
            get
            {
                if ((this.mUIStartsidenMinGatv653Document == null))
                {
                    this.mUIStartsidenMinGatv653Document = new UIStartsidenMinGatv653Document2(this);
                }
                return this.mUIStartsidenMinGatv653Document;
            }
        }
        #endregion
        
        #region Fields
        private UIStartsidenMinGatv653Document2 mUIStartsidenMinGatv653Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStartsidenMinGatv653Document2 : HtmlDocument
    {
        
        public UIStartsidenMinGatv653Document2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Startsiden - MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/start/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Startsiden - MinGat");
            #endregion
        }
        
        #region Properties
        public UIBodyWrapperPane2 UIBodyWrapperPane
        {
            get
            {
                if ((this.mUIBodyWrapperPane == null))
                {
                    this.mUIBodyWrapperPane = new UIBodyWrapperPane2(this);
                }
                return this.mUIBodyWrapperPane;
            }
        }
        
        public UIMenuHeader_mainMenuPane1 UIMenuHeader_mainMenuPane
        {
            get
            {
                if ((this.mUIMenuHeader_mainMenuPane == null))
                {
                    this.mUIMenuHeader_mainMenuPane = new UIMenuHeader_mainMenuPane1(this);
                }
                return this.mUIMenuHeader_mainMenuPane;
            }
        }
        #endregion
        
        #region Fields
        private UIBodyWrapperPane2 mUIBodyWrapperPane;
        
        private UIMenuHeader_mainMenuPane1 mUIMenuHeader_mainMenuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBodyWrapperPane2 : HtmlDiv
    {
        
        public UIBodyWrapperPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "bodyWrapper";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Meny\r\n \r\n \r\n\r\n\r\n \r\nv.6.5.3.43911\r\n \r\n(AU";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "body-wrapper aftvf-blurable";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"body-wrapper aftvf-blurable\" id=\"bodyWrapper\" data-bind=\"css: { \'page-opti" +
                "ons-active\': PageOptionsActive, \'show-page-options\': PageOptionsVisible, \'show-p" +
                "age-options-ontop\': ShowPageOptionsAbove }\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
            this.WindowTitles.Add("Startsiden - MinGat v.6.5.3.43911");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMenyPane
        {
            get
            {
                if ((this.mUIMenyPane == null))
                {
                    this.mUIMenyPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMenyPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMenyPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMenyPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Meny";
                    this.mUIMenyPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMenyPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "caption";
                    this.mUIMenyPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"caption\"";
                    this.mUIMenyPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "8";
                    this.mUIMenyPane.WindowTitles.Add("Startsiden - MinGat v.6.5.3.43911");
                    #endregion
                }
                return this.mUIMenyPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMenyPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMenuHeader_mainMenuPane1 : HtmlDiv
    {
        
        public UIMenuHeader_mainMenuPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuHeader_mainMenu";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Ansatt \r\nLogg ut \r\n\r\n\r\n\r\n  \r\nStartsiden\r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"menuHeader_mainMenu\" style=\"display: block;\" data-bind=\"fadeVisible: ShowMain" +
                "Menu\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "16";
            this.WindowTitles.Add("Startsiden - MinGat");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIØnskeplanerHyperlink
        {
            get
            {
                if ((this.mUIØnskeplanerHyperlink == null))
                {
                    this.mUIØnskeplanerHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIØnskeplanerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIØnskeplanerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIØnskeplanerHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIØnskeplanerHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "\r\n  \r\nnskeplaner", PropertyExpressionOperator.Contains));
                    this.mUIØnskeplanerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIØnskeplanerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIØnskeplanerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://at-man.gatsoft.local/MinGat/Employee/Home#!/employee/mywishplans/";
                    this.mUIØnskeplanerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "nav-item";
                    this.mUIØnskeplanerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"nav-item\" href=\"#!/employee/mywis";
                    this.mUIØnskeplanerHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "17";
                    this.mUIØnskeplanerHyperlink.WindowTitles.Add("Startsiden - MinGat");
                    this.mUIØnskeplanerHyperlink.WindowTitles.Add("MinGat");
                    #endregion
                }
                return this.mUIØnskeplanerHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIØnskeplanerHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMinønskeplanMinGatv6Window1 : BrowserWindow
    {
        
        public UIMinønskeplanMinGatv6Window1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Min ønskeplan - MinGat", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Min ønskeplan - MinGat");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMinønskeplanMinGatv6Document UIMinønskeplanMinGatv6Document
        {
            get
            {
                if ((this.mUIMinønskeplanMinGatv6Document == null))
                {
                    this.mUIMinønskeplanMinGatv6Document = new UIMinønskeplanMinGatv6Document(this);
                }
                return this.mUIMinønskeplanMinGatv6Document;
            }
        }
        #endregion
        
        #region Fields
        private UIMinønskeplanMinGatv6Document mUIMinønskeplanMinGatv6Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMinønskeplanMinGatv6Document : HtmlDocument
    {
        
        public UIMinønskeplanMinGatv6Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Min ønskeplan - MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/employee/mywishplans/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Min ønskeplan - MinGat");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        #region Properties
        public UIMyWishPlansPagePane UIMyWishPlansPagePane
        {
            get
            {
                if ((this.mUIMyWishPlansPagePane == null))
                {
                    this.mUIMyWishPlansPagePane = new UIMyWishPlansPagePane(this);
                }
                return this.mUIMyWishPlansPagePane;
            }
        }
        #endregion
        
        #region Fields
        private UIMyWishPlansPagePane mUIMyWishPlansPagePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMyWishPlansPagePane : HtmlDiv
    {
        
        public UIMyWishPlansPagePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "myWishPlansPage";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Vis også perioder eldre enn 1 år \r\n\r\n\r\n\r";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"myWishPlansPage\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "196";
            this.WindowTitles.Add("Min ønskeplan - MinGat");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlLabel UIVisogsåperiodereldreLabel
        {
            get
            {
                if ((this.mUIVisogsåperiodereldreLabel == null))
                {
                    this.mUIVisogsåperiodereldreLabel = new HtmlLabel(this);
                    #region Search Criteria
                    this.mUIVisogsåperiodereldreLabel.SearchProperties[HtmlLabel.PropertyNames.LabelFor] = "myTimeLogPage_showAll";
                    this.mUIVisogsåperiodereldreLabel.FilterProperties[HtmlLabel.PropertyNames.Class] = "gs-label checkedit-label";
                    this.mUIVisogsåperiodereldreLabel.FilterProperties[HtmlLabel.PropertyNames.ControlDefinition] = "class=\"gs-label checkedit-label\" for=\"my";
                    this.mUIVisogsåperiodereldreLabel.FilterProperties[HtmlLabel.PropertyNames.TagInstance] = "2";
                    this.mUIVisogsåperiodereldreLabel.WindowTitles.Add("Min ønskeplan - MinGat");
                    this.mUIVisogsåperiodereldreLabel.WindowTitles.Add("MinGat");
                    #endregion
                }
                return this.mUIVisogsåperiodereldreLabel;
            }
        }
        #endregion
        
        #region Fields
        private HtmlLabel mUIVisogsåperiodereldreLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMinønskeplanMinGatv6Window : BrowserWindow
    {
        
        public UIMinønskeplanMinGatv6Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Min ønskeplan - MinGat", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Min ønskeplan - MinGat");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMinønskeplanMinGatv6Document1 UIMinønskeplanMinGatv6Document
        {
            get
            {
                if ((this.mUIMinønskeplanMinGatv6Document == null))
                {
                    this.mUIMinønskeplanMinGatv6Document = new UIMinønskeplanMinGatv6Document1(this);
                }
                return this.mUIMinønskeplanMinGatv6Document;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        #endregion
        
        #region Fields
        private UIMinønskeplanMinGatv6Document1 mUIMinønskeplanMinGatv6Document;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMinønskeplanMinGatv6Document1 : HtmlDocument
    {
        
        public UIMinønskeplanMinGatv6Document1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/Employee/Home#!/employee/mywishplans/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Min ønskeplan - MinGat");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        #region Properties
        public UIMyWishPlansGridGridPane UIMyWishPlansGridGridPane
        {
            get
            {
                if ((this.mUIMyWishPlansGridGridPane == null))
                {
                    this.mUIMyWishPlansGridGridPane = new UIMyWishPlansGridGridPane(this);
                }
                return this.mUIMyWishPlansGridGridPane;
            }
        }
        #endregion
        
        #region Fields
        private UIMyWishPlansGridGridPane mUIMyWishPlansGridGridPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMyWishPlansGridGridPane : HtmlDiv
    {
        
        public UIMyWishPlansGridGridPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "myWishPlansGridGrid";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Dra en kolonne hit for å gruppere på den";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "dx-widget dx-visibility-change-handler";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"dx-widget dx-visibility-change-handler\" id=\"myWishPlansGridGrid\" role=\"app" +
                "lication\" style=\"width: 100%; height: 100%;\" aria-label=\"Datatabell\" data-bind=\"" +
                "dxDataGrid: WishPlansDataGrid\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "210";
            this.WindowTitles.Add("Min ønskeplan - MinGat");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UINyfaneHyperlink
        {
            get
            {
                if ((this.mUINyfaneHyperlink == null))
                {
                    this.mUINyfaneHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINyfaneHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINyfaneHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINyfaneHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_blank";
                    this.mUINyfaneHyperlink.SearchProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, " ny f", PropertyExpressionOperator.Contains));
                    this.mUINyfaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/MyWishPlans/ViewPlan/";
                    this.mUINyfaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINyfaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "/MinGat/Employee/MyWishPlans/ViewPlan/?id=738161723";
                    this.mUINyfaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUINyfaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "style=\"text-decoration: underline;\" href";
                    this.mUINyfaneHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUINyfaneHyperlink.WindowTitles.Add("Min ønskeplan - MinGat");
                    this.mUINyfaneHyperlink.WindowTitles.Add("MinGat");
                    #endregion
                }
                return this.mUINyfaneHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUINyfaneHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "166051360";
            this.WindowTitles.Add("Min Ønskeplan - MinGat");
            #endregion
        }
        
        #region Properties
        public UISilverlightControlWindow UISilverlightControlWindow
        {
            get
            {
                if ((this.mUISilverlightControlWindow == null))
                {
                    this.mUISilverlightControlWindow = new UISilverlightControlWindow(this);
                }
                return this.mUISilverlightControlWindow;
            }
        }
        
        public UIItemListItem UIItemListItem
        {
            get
            {
                if ((this.mUIItemListItem == null))
                {
                    this.mUIItemListItem = new UIItemListItem(this);
                }
                return this.mUIItemListItem;
            }
        }
        #endregion
        
        #region Fields
        private UISilverlightControlWindow mUISilverlightControlWindow;
        
        private UIItemListItem mUIItemListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISilverlightControlWindow : WinWindow
    {
        
        public UISilverlightControlWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Silverlight Control";
            this.WindowTitles.Add("Min Ønskeplan - MinGat v.6.5.3.43911");
            #endregion
        }
        
        #region Properties
        public WinText UIØnskeplanforBASEPLANText
        {
            get
            {
                if ((this.mUIØnskeplanforBASEPLANText == null))
                {
                    this.mUIØnskeplanforBASEPLANText = new WinText(this);
                    #region Search Criteria
                    this.mUIØnskeplanforBASEPLANText.SearchProperties[WinText.PropertyNames.Name] = "Ønskeplan for BASEPLAN TIL AUTOTEST";
                    this.mUIØnskeplanforBASEPLANText.WindowTitles.Add("Min Ønskeplan - MinGat");
                    #endregion
                }
                return this.mUIØnskeplanforBASEPLANText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIØnskeplanforBASEPLANText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemListItem : WinListItem
    {
        
        public UIItemListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Min Ønskeplan - MinGat");
            #endregion
        }
        
        #region Properties
        public WinClient UIFerie5dgrukeClient
        {
            get
            {
                if ((this.mUIFerie5dgrukeClient == null))
                {
                    this.mUIFerie5dgrukeClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIFerie5dgrukeClient.SearchProperties[WinControl.PropertyNames.Name] = "Ferie - 5 dgr/uke";
                    this.mUIFerie5dgrukeClient.WindowTitles.Add("Min Ønskeplan - MinGat");
                    #endregion
                }
                return this.mUIFerie5dgrukeClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIFerie5dgrukeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "383221384";
            this.WindowTitles.Add("Min Ønskeplan - MinGat");
            #endregion
        }
        
        #region Properties
        public UISilverlightControlWindow1 UISilverlightControlWindow
        {
            get
            {
                if ((this.mUISilverlightControlWindow == null))
                {
                    this.mUISilverlightControlWindow = new UISilverlightControlWindow1(this);
                }
                return this.mUISilverlightControlWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISilverlightControlWindow1 mUISilverlightControlWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISilverlightControlWindow1 : WinWindow
    {
        
        public UISilverlightControlWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Silverlight Control";
            this.WindowTitles.Add("Min Ønskeplan - MinGat");
            #endregion
        }
        
        #region Properties
        public WinButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[WinButton.PropertyNames.Name] = "Lukk";
                    this.mUILukkButton.WindowTitles.Add("Min Ønskeplan - MinGat");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "383221384";
            this.WindowTitles.Add("Min Ønskeplan - MinGat");
            #endregion
        }
        
        #region Properties
        public UISilverlightControlWindow2 UISilverlightControlWindow
        {
            get
            {
                if ((this.mUISilverlightControlWindow == null))
                {
                    this.mUISilverlightControlWindow = new UISilverlightControlWindow2(this);
                }
                return this.mUISilverlightControlWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISilverlightControlWindow2 mUISilverlightControlWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISilverlightControlWindow2 : WinWindow
    {
        
        public UISilverlightControlWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Silverlight Control";
            this.WindowTitles.Add("Min Ønskeplan - MinGat");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("Min Ønskeplan - MinGat");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "387337184";
            this.WindowTitles.Add("Min Ønskeplan - MinGat");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        #region Properties
        public UISilverlightControlWindow3 UISilverlightControlWindow
        {
            get
            {
                if ((this.mUISilverlightControlWindow == null))
                {
                    this.mUISilverlightControlWindow = new UISilverlightControlWindow3(this);
                }
                return this.mUISilverlightControlWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISilverlightControlWindow3 mUISilverlightControlWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISilverlightControlWindow3 : WinWindow
    {
        
        public UISilverlightControlWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Silverlight Control";
            this.WindowTitles.Add("Min Ønskeplan - MinGat");
            this.WindowTitles.Add("MinGat");
            #endregion
        }
        
        #region Properties
        public WinList UIWishPlanCalendarItemList
        {
            get
            {
                if ((this.mUIWishPlanCalendarItemList == null))
                {
                    this.mUIWishPlanCalendarItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIWishPlanCalendarItemList.SearchProperties[WinList.PropertyNames.Name] = "WishPlanCalendarItems";
                    this.mUIWishPlanCalendarItemList.WindowTitles.Add("Min Ønskeplan - MinGat");
                    this.mUIWishPlanCalendarItemList.WindowTitles.Add("MinGat");
                    #endregion
                }
                return this.mUIWishPlanCalendarItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIWishPlanCalendarItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWindowsInternetExploWindow : WinWindow
    {
        
        public UIWindowsInternetExploWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Windows Internet Explorer";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Windows Internet Explorer");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Windows Internet Explorer");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Windows Internet Explorer");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMinGatMinGatv6604403Window : BrowserWindow
    {
        
        public UIMinGatMinGatv6604403Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "MinGat - MinGat v.", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("MinGat - MinGat v.");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMinGatMinGatv6604403Document UIMinGatMinGatv6604403Document
        {
            get
            {
                if ((this.mUIMinGatMinGatv6604403Document == null))
                {
                    this.mUIMinGatMinGatv6604403Document = new UIMinGatMinGatv6604403Document(this);
                }
                return this.mUIMinGatMinGatv6604403Document;
            }
        }
        #endregion
        
        #region Fields
        private UIMinGatMinGatv6604403Document mUIMinGatMinGatv6604403Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMinGatMinGatv6604403Document : HtmlDocument
    {
        
        public UIMinGatMinGatv6604403Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "MinGat", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "/MinGat/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MinGat - MinGat");
            this.WindowTitles.Add("Innlogget - MinGat");
            this.WindowTitles.Add("Innoggad - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIBrukernavnEdit
        {
            get
            {
                if ((this.mUIBrukernavnEdit == null))
                {
                    this.mUIBrukernavnEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIBrukernavnEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "username";
                    this.mUIBrukernavnEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "username";
                    //this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Brukernavn*";
                    //this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    //this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    //this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"username\" id=\"username\" type=\"text";
                    //this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIBrukernavnEdit.WindowTitles.Add("MinGat - MinGat");
                    #endregion
                }
                return this.mUIBrukernavnEdit;
            }
        }
        
        public HtmlEdit UIPassordEdit
        {
            get
            {
                if ((this.mUIPassordEdit == null))
                {
                    this.mUIPassordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPassordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "password";
                    this.mUIPassordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "password";
                    //this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Passord*";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    //this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    //this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"password\" id=\"password\" type=\"pass";
                    //this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIPassordEdit.WindowTitles.Add("MinGat - MinGat");
                    #endregion
                }
                return this.mUIPassordEdit;
            }
        }
        
        public UILogginnButton1 UILogginnButton
        {
            get
            {
                if ((this.mUILogginnButton == null))
                {
                    this.mUILogginnButton = new UILogginnButton1(this);
                }
                return this.mUILogginnButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIBrukernavnEdit;
        
        private HtmlEdit mUIPassordEdit;
        
        private UILogginnButton1 mUILogginnButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILogginnButton1 : HtmlButton
    {
        
        public UILogginnButton1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlButton.PropertyNames.Id] = "btnLoginPage1";
            this.SearchProperties[HtmlButton.PropertyNames.Name] = null;
            this.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
            this.FilterProperties[HtmlButton.PropertyNames.Title] = null;
            this.FilterProperties[HtmlButton.PropertyNames.Class] = "gs-button kind-normal-green type-button ui-icon-size-normal";
            this.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"gs-button kind-normal-green type-";
            this.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("MinGat - MinGat");
            this.WindowTitles.Add("Innlogget - MinGat");
            this.WindowTitles.Add("Innoggad - MinGat");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UILogginnPane
        {
            get
            {
                if ((this.mUILogginnPane == null))
                {
                    this.mUILogginnPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUILogginnPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUILogginnPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    mUILogginnPane.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Log", PropertyExpressionOperator.Contains));
                    //this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Logg inn";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-caption no-select";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-caption no-select\"";
                    //this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "23";
                    this.mUILogginnPane.WindowTitles.Add("MinGat - MinGat");
                    #endregion
                }
                return this.mUILogginnPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUILogginnPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICertificateErrorNaviWindow : BrowserWindow
    {
        
        public UICertificateErrorNaviWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Certificate Error:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Certificate Error:");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICertificateErrorNaviDocument UICertificateErrorNaviDocument
        {
            get
            {
                if ((this.mUICertificateErrorNaviDocument == null))
                {
                    this.mUICertificateErrorNaviDocument = new UICertificateErrorNaviDocument(this);
                }
                return this.mUICertificateErrorNaviDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICertificateErrorNaviDocument mUICertificateErrorNaviDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICertificateErrorNaviDocument : HtmlDocument
    {
        
        public UICertificateErrorNaviDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Certificate Error:", PropertyExpressionOperator.Contains));
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "://", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Certificate Error:");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIContinuetothiswebsitHyperlink
        {
            get
            {
                if ((this.mUIContinuetothiswebsitHyperlink == null))
                {
                    this.mUIContinuetothiswebsitHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIContinuetothiswebsitHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.InnerText, "Continue to this website", PropertyExpressionOperator.Contains));
                    this.mUIContinuetothiswebsitHyperlink.WindowTitles.Add("Certificate Error:");
                    #endregion
                }
                return this.mUIContinuetothiswebsitHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIContinuetothiswebsitHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICertificateErrorNaviWindow1 : BrowserWindow
    {
        
        public UICertificateErrorNaviWindow1()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Certificate Error:", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Certificate Error:");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICertificateErrorNaviDocument1 UICertificateErrorNaviDocument
        {
            get
            {
                if ((this.mUICertificateErrorNaviDocument == null))
                {
                    this.mUICertificateErrorNaviDocument = new UICertificateErrorNaviDocument1(this);
                }
                return this.mUICertificateErrorNaviDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICertificateErrorNaviDocument1 mUICertificateErrorNaviDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICertificateErrorNaviDocument1 : HtmlDocument
    {
        
        public UICertificateErrorNaviDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Certificate Error:", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/invalidcert.htm";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "res://ieframe.dll/invalidcert.htm?SSLError=33554432", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Certificate Error:");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIContinuetothiswebsitHyperlink
        {
            get
            {
                if ((this.mUIContinuetothiswebsitHyperlink == null))
                {
                    this.mUIContinuetothiswebsitHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIContinuetothiswebsitHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "overridelink";
                    this.mUIContinuetothiswebsitHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = "overridelink";
                    this.mUIContinuetothiswebsitHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIContinuetothiswebsitHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.InnerText] = "Continue to this website (not recommended).";
                    this.mUIContinuetothiswebsitHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/MyWishPlans/ViewPlan/";
                    this.mUIContinuetothiswebsitHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIContinuetothiswebsitHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/MinGat/Employee/MyWishPlans/ViewPlan/?id=738161723", PropertyExpressionOperator.Contains));
                    this.mUIContinuetothiswebsitHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIContinuetothiswebsitHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "name=\"overridelink\" id=\"overridelink\" hr";
                    this.mUIContinuetothiswebsitHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIContinuetothiswebsitHyperlink.WindowTitles.Add("Certificate Error:");
                    #endregion
                }
                return this.mUIContinuetothiswebsitHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIContinuetothiswebsitHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerBarConMenu : DXMenu
    {
        
        public UIPopupContainerBarConMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            #endregion
        }
        
        #region Properties
        public UIPpcPeriodSelectorClient UIPpcPeriodSelectorClient
        {
            get
            {
                if ((this.mUIPpcPeriodSelectorClient == null))
                {
                    this.mUIPpcPeriodSelectorClient = new UIPpcPeriodSelectorClient(this);
                }
                return this.mUIPpcPeriodSelectorClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcPeriodSelectorClient mUIPpcPeriodSelectorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPpcPeriodSelectorClient : DXTestControl
    {
        
        public UIPpcPeriodSelectorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcPeriodSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            #endregion
        }
        
        #region Properties
        public UIPnlPeriodSelectorClient UIPnlPeriodSelectorClient
        {
            get
            {
                if ((this.mUIPnlPeriodSelectorClient == null))
                {
                    this.mUIPnlPeriodSelectorClient = new UIPnlPeriodSelectorClient(this);
                }
                return this.mUIPnlPeriodSelectorClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlPeriodSelectorClient mUIPnlPeriodSelectorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlPeriodSelectorClient : DXTestControl
    {
        
        public UIPnlPeriodSelectorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPeriodSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgPeriodeButton
        {
            get
            {
                if ((this.mUIVelgPeriodeButton == null))
                {
                    this.mUIVelgPeriodeButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgPeriodeButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectPeriod";
                    this.mUIVelgPeriodeButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    #endregion
                }
                return this.mUIVelgPeriodeButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgPeriodeButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatWebserviceMainPagWindow : BrowserWindow
    {
        
        public UIGatWebserviceMainPagWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Gat Webservice Main Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Gat Webservice Main Page");
            this.WindowTitles.Add("AppService Web Service");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGatWebserviceMainPagDocument UIGatWebserviceMainPagDocument
        {
            get
            {
                if ((this.mUIGatWebserviceMainPagDocument == null))
                {
                    this.mUIGatWebserviceMainPagDocument = new UIGatWebserviceMainPagDocument(this);
                }
                return this.mUIGatWebserviceMainPagDocument;
            }
        }
        
        public UIAppServiceWebServiceDocument UIAppServiceWebServiceDocument
        {
            get
            {
                if ((this.mUIAppServiceWebServiceDocument == null))
                {
                    this.mUIAppServiceWebServiceDocument = new UIAppServiceWebServiceDocument(this);
                }
                return this.mUIAppServiceWebServiceDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGatWebserviceMainPagDocument mUIGatWebserviceMainPagDocument;
        
        private UIAppServiceWebServiceDocument mUIAppServiceWebServiceDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatWebserviceMainPagDocument : HtmlDocument
    {
        
        public UIGatWebserviceMainPagDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gat Webservice Main Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1/";
            this.WindowTitles.Add("Gat Webservice Main Page");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAppServiceHyperlink
        {
            get
            {
                if ((this.mUIAppServiceHyperlink == null))
                {
                    this.mUIAppServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAppServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAppServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAppServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "AppService";
                    this.mUIAppServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/AppService.asmx";
                    this.mUIAppServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAppServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/AppService.asmx";
                    this.mUIAppServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIAppServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_0\" href=\"AppS";
                    this.mUIAppServiceHyperlink.WindowTitles.Add("Gat Webservice Main Page");
                    #endregion
                }
                return this.mUIAppServiceHyperlink;
            }
        }
        
        public HtmlHyperlink UIGatFlexExportServiceHyperlink
        {
            get
            {
                if ((this.mUIGatFlexExportServiceHyperlink == null))
                {
                    this.mUIGatFlexExportServiceHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGatFlexExportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGatFlexExportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGatFlexExportServiceHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Gat.FlexExportService";
                    this.mUIGatFlexExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/FlexExportService.svc";
                    this.mUIGatFlexExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGatFlexExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/FlexExportService.svc";
                    this.mUIGatFlexExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGatFlexExportServiceHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"repServices_lnkService_9\" href=\"Flex";
                    this.mUIGatFlexExportServiceHyperlink.WindowTitles.Add("Gat Webservice Main Page");
                    #endregion
                }
                return this.mUIGatFlexExportServiceHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAppServiceHyperlink;
        
        private HtmlHyperlink mUIGatFlexExportServiceHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAppServiceWebServiceDocument : HtmlDocument
    {
        
        public UIAppServiceWebServiceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "AppService Web Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/AppService.asmx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1/AppService.asmx";
            this.WindowTitles.Add("AppService Web Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane1 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane1(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane1 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIContentPane1 : HtmlDiv
    {
        
        public UIContentPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "AppService\r\n\r\n\r\nThe following operations";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("AppService Web Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIProcessAppFlexQueueHyperlink
        {
            get
            {
                if ((this.mUIProcessAppFlexQueueHyperlink == null))
                {
                    this.mUIProcessAppFlexQueueHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIProcessAppFlexQueueHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIProcessAppFlexQueueHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIProcessAppFlexQueueHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIProcessAppFlexQueueHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "ProcessAppFlexQueue";
                    this.mUIProcessAppFlexQueueHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/AppService.asmx";
                    this.mUIProcessAppFlexQueueHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIProcessAppFlexQueueHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/AppService.asmx?op=ProcessAppFlexQueue";
                    this.mUIProcessAppFlexQueueHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIProcessAppFlexQueueHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"AppService.asmx?op=ProcessAppFlexQ";
                    this.mUIProcessAppFlexQueueHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIProcessAppFlexQueueHyperlink.WindowTitles.Add("AppService Web Service");
                    #endregion
                }
                return this.mUIProcessAppFlexQueueHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIProcessAppFlexQueueHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatFlexExportServiceWindow : BrowserWindow
    {
        
        public UIGatFlexExportServiceWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Gat.FlexExportService Service";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Gat.FlexExportService Service");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGatFlexExportServiceDocument UIGatFlexExportServiceDocument
        {
            get
            {
                if ((this.mUIGatFlexExportServiceDocument == null))
                {
                    this.mUIGatFlexExportServiceDocument = new UIGatFlexExportServiceDocument(this);
                }
                return this.mUIGatFlexExportServiceDocument;
            }
        }
        
        public UIGatFlexExportServiceDocument1 UIGatFlexExportServiceDocument1
        {
            get
            {
                if ((this.mUIGatFlexExportServiceDocument1 == null))
                {
                    this.mUIGatFlexExportServiceDocument1 = new UIGatFlexExportServiceDocument1(this);
                }
                return this.mUIGatFlexExportServiceDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIGatFlexExportServiceDocument mUIGatFlexExportServiceDocument;
        
        private UIGatFlexExportServiceDocument1 mUIGatFlexExportServiceDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatFlexExportServiceDocument : HtmlDocument
    {
        
        public UIGatFlexExportServiceDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gat.FlexExportService Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1/FlexExportService.svc";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1/FlexExportService.svc";
            this.WindowTitles.Add("Gat.FlexExportService Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane2 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane2(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane2 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIContentPane2 : HtmlDiv
    {
        
        public UIContentPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Gat.FlexExportService Service\r\n\r\n\r\nYou h";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Gat.FlexExportService Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHttplocalhostGatWs1FHyperlink
        {
            get
            {
                if ((this.mUIHttplocalhostGatWs1FHyperlink == null))
                {
                    this.mUIHttplocalhostGatWs1FHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIHttplocalhostGatWs1FHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHttplocalhostGatWs1FHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHttplocalhostGatWs1FHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHttplocalhostGatWs1FHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "http://localhost/GatWs1/FlexExportService.svc?wsdl";
                    this.mUIHttplocalhostGatWs1FHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1/FlexExportService.svc";
                    this.mUIHttplocalhostGatWs1FHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHttplocalhostGatWs1FHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1/FlexExportService.svc?wsdl";
                    this.mUIHttplocalhostGatWs1FHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHttplocalhostGatWs1FHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"http://localhost/GatWs1/FlexExport";
                    this.mUIHttplocalhostGatWs1FHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIHttplocalhostGatWs1FHyperlink.WindowTitles.Add("Gat.FlexExportService Service");
                    #endregion
                }
                return this.mUIHttplocalhostGatWs1FHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHttplocalhostGatWs1FHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatFlexExportServiceDocument1 : HtmlDocument
    {
        
        public UIGatFlexExportServiceDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gat.FlexExportService Service";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/GatWs1_se/FlexExportService.svc";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/GatWs1_se/FlexExportService.svc";
            this.WindowTitles.Add("Gat.FlexExportService Service");
            #endregion
        }
        
        #region Properties
        public UIContentPane3 UIContentPane
        {
            get
            {
                if ((this.mUIContentPane == null))
                {
                    this.mUIContentPane = new UIContentPane3(this);
                }
                return this.mUIContentPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPane3 mUIContentPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIContentPane3 : HtmlDiv
    {
        
        public UIContentPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "content";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Gat.FlexExportService Service\r\n\r\n\r\nYou h";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"content\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Gat.FlexExportService Service");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHttplocalhostGatWs1_Hyperlink
        {
            get
            {
                if ((this.mUIHttplocalhostGatWs1_Hyperlink == null))
                {
                    this.mUIHttplocalhostGatWs1_Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIHttplocalhostGatWs1_Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHttplocalhostGatWs1_Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHttplocalhostGatWs1_Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHttplocalhostGatWs1_Hyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "http://localhost/GatWs1_se/FlexExportService.svc?wsdl";
                    this.mUIHttplocalhostGatWs1_Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/GatWs1_se/FlexExportService.svc";
                    this.mUIHttplocalhostGatWs1_Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHttplocalhostGatWs1_Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/GatWs1_se/FlexExportService.svc?wsdl";
                    this.mUIHttplocalhostGatWs1_Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHttplocalhostGatWs1_Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"http://localhost/GatWs1_se/FlexExp";
                    this.mUIHttplocalhostGatWs1_Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIHttplocalhostGatWs1_Hyperlink.WindowTitles.Add("Gat.FlexExportService Service");
                    #endregion
                }
                return this.mUIHttplocalhostGatWs1_Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHttplocalhostGatWs1_Hyperlink;
        #endregion
    }
}
