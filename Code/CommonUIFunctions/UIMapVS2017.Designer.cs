// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CommonUIFunctions.UIMapVS2017Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMapVS2017
    {
        
        /// <summary>
        /// ApproveApprovalInApprovalTab
        /// </summary>
        public void ApproveApprovalInApprovalTab()
        {
            #region Variable Declarations
            DXButton uIGodkjennButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient1.UIApprovalViewCustom.UILcMainCustom.UIGodkjennButton;
            DXButton uIJAButton = this.UIGT4006InformasjonWindow.UIJAButton;
            #endregion

            // Click 'Godkjenn' button
            Mouse.Click(uIGodkjennButton, new Point(1, 1));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ApproveApprovalInApprovalTabPlace4
        /// </summary>
        public void ApproveApprovalInApprovalTabPlace4()
        {
            #region Variable Declarations
            DXButton uIGodkjennButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIApprovalViewCustom.UILcMainCustom.UIGodkjennButton;
            DXButton uIJAButton = this.UIGT4006InformasjonWindow.UIJAButton;
            #endregion

            // Click 'Godkjenn' button
            Mouse.Click(uIGodkjennButton, new Point(1, 1));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ApproveApprovalInApprovalTabPlace5
        /// </summary>
        public void ApproveApprovalInApprovalTabPlace5()
        {
            #region Variable Declarations
            DXButton uIGodkjennButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient2.UIApprovalViewCustom.UILcMainCustom.UIGodkjennButton;
            DXButton uIJAButton = this.UIGT4006InformasjonWindow.UIJAButton;
            #endregion

            // Click 'Godkjenn' button
            Mouse.Click(uIGodkjennButton, new Point(1, 1));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CancelRoleAssignmentWindow
        /// </summary>
        public void CancelRoleAssignmentWindow()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIOppgavetildelingWindow.UIAvbrytButton;
            #endregion

            // Click 'Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CancelUtjevning
        /// </summary>
        public void CancelUtjevning()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIUtjevningsvaktWindow.UIPnlButtonsClient.UIAvbrytButton;
            #endregion

            // Click '&Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CheckAmlReport7UseCalculatedAmlViolation - Use 'CheckAmlReport7UseCalculatedAmlViolationParams' to pass parameters into this method.
        /// </summary>
        public void CheckAmlReport7UseCalculatedAmlViolation()
        {
            #region Variable Declarations
            WinCheckBox uIBrukkalkulerteAMLbruCheckBox = this.UIGatWindow.UIItemWindow1.UITimelisteClient.UIBrukkalkulerteAMLbruCheckBox;
            #endregion

            // Select 'Bruk kalkulerte AML brudd OBS! Utdatert!' check box
            uIBrukkalkulerteAMLbruCheckBox.Checked = this.CheckAmlReport7UseCalculatedAmlViolationParams.UIBrukkalkulerteAMLbruCheckBoxChecked;
        }
        
        /// <summary>
        /// CheckCloseRosterplanButtonPlanTabExists - Use 'CheckCloseRosterplanButtonPlanTabExistsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckCloseRosterplanButtonPlanTabExists()
        {
            #region Variable Declarations
            DXRibbonButtonItem uILukkRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRibbonPageGroup17RibbonPageGroup.UILukkRibbonBaseButtonItem;
            #endregion

            // Verify that the 'Exists' property of 'Lukk' RibbonBaseButtonItem equals 'True'
            Assert.AreEqual(this.CheckCloseRosterplanButtonPlanTabExistsExpectedValues.UILukkRibbonBaseButtonItemExists, uILukkRibbonBaseButtonItem.Exists);
        }
        
        /// <summary>
        /// CheckDocumentationAbsence - Use 'CheckDocumentationAbsenceParams' to pass parameters into this method.
        /// </summary>
        public void CheckDocumentationAbsence()
        {
            #region Variable Declarations
            DXCheckBox uIChbRecievedWrittenDoCheckBox = this.UIFraværsregistreringWindow.UIPnlAbsenceInformatioClient.UIGrcInformationClient.UINbcInformationNavBar.UINbgcDocumentsScrollableControl.UITcDocumentationTabList.UITabDocumentationClient.UIPnlDocumentationScrollableControl.UIChbRecievedWrittenDoCheckBox;
            #endregion

            // Select 'chbRecievedWrittenDocumentation' check box
            uIChbRecievedWrittenDoCheckBox.Checked = this.CheckDocumentationAbsenceParams.UIChbRecievedWrittenDoCheckBoxChecked;
        }
        
        /// <summary>
        /// CheckDoUseWeek0AndNPlus1InPlanSettings - Use 'CheckDoUseWeek0AndNPlus1InPlanSettingsParams' to pass parameters into this method.
        /// </summary>
        public void CheckDoUseWeek0AndNPlus1InPlanSettings()
        {
            #region Variable Declarations
            DXCheckBox uIChkDoUseWeek0AndNPluCheckBox = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIChkDoUseWeek0AndNPluCheckBox;
            #endregion

            // Select 'chkDoUseWeek0AndNPlus1' check box
            uIChkDoUseWeek0AndNPluCheckBox.Checked = this.CheckDoUseWeek0AndNPlus1InPlanSettingsParams.UIChkDoUseWeek0AndNPluCheckBoxChecked;
        }
        
        /// <summary>
        /// CheckEffectuationButtonDisabled - Use 'CheckEffectuationButtonDisabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEffectuationButtonDisabled()
        {
            #region Variable Declarations
            DXButton uIIverksett28linjerButton = this.UIIverksetteWindow.UIPnlButtonsClient.UIIverksett28linjerButton;
            #endregion

            // Verify that the 'Enabled' property of 'Iverksett 28 linjer' button equals 'False'
            Assert.AreEqual(this.CheckEffectuationButtonDisabledExpectedValues.UIIverksett28linjerButtonEnabled, uIIverksett28linjerButton.Enabled, "Effectuationbutten is enabled");
        }
        
        /// <summary>
        /// CheckEffectuationDisabled - Use 'CheckEffectuationDisabledExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEffectuationDisabled()
        {
            #region Variable Declarations
            DXButton uIIverksett28linjerButton = this.UIIverksetteWindow.UIPnlButtonsClient.UIIverksett28linjerButton;
            #endregion

            // Verify that the 'Enabled' property of 'Iverksett 28 linjer' button equals 'False'
            Assert.AreEqual(this.CheckEffectuationDisabledExpectedValues.UIIverksett28linjerButtonEnabled, uIIverksett28linjerButton.Enabled);
        }
        
        /// <summary>
        /// CheckNewHelpplanWindowTasksDraftUnchecked - Use 'CheckNewHelpplanWindowTasksDraftUncheckedExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckNewHelpplanWindowTasksDraftUnchecked()
        {
            #region Variable Declarations
            DXCheckBox uIChkTasksCheckBox = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIGcIncludeClient.UIChkTasksCheckBox;
            DXCheckBox uIChkKladdCheckBox = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILcMainInfoLayoutControlItem.UIPnlMainInfoClient.UIChkKladdCheckBox;
            #endregion

            // Verify that the 'Checked' property of 'chkTasks' check box equals 'False'
            Assert.AreEqual(this.CheckNewHelpplanWindowTasksDraftUncheckedExpectedValues.UIChkTasksCheckBoxChecked, uIChkTasksCheckBox.Checked);

            // Verify that the 'Checked' property of 'chkKladd' check box equals 'False'
            Assert.AreEqual(this.CheckNewHelpplanWindowTasksDraftUncheckedExpectedValues.UIChkKladdCheckBoxChecked, uIChkKladdCheckBox.Checked);
        }
        
        /// <summary>
        /// CheckOkDisabledInRejectCommentWindow - Use 'CheckOkDisabledInRejectCommentWindowExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckOkDisabledInRejectCommentWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UISkrivenkommentartilaWindow1.UIOKButton;
            #endregion

            // Verify that the 'Enabled' property of 'Ok' button equals 'False'
            Assert.AreEqual(this.CheckOkDisabledInRejectCommentWindowExpectedValues.UIOKButtonEnabled, uIOKButton.Enabled);
        }
        
        /// <summary>
        /// CheckShowCoverageBreaks - Use 'CheckShowCoverageBreaksParams' to pass parameters into this method.
        /// </summary>
        public void CheckShowCoverageBreaks()
        {
            #region Variable Declarations
            DXCheckBox uIChkShowCoverageBreakCheckBox = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIDpSummaryDockPanel.UIDockPanel1_ContainerCustom.UISumDemandHostViewCustom.UIViewHost1Custom.UIPcViewClient.UIPanFilterClient.UIChkShowCoverageBreakCheckBox;
            #endregion

            // Select 'chkShowCoverageBreaks' check box
            uIChkShowCoverageBreakCheckBox.Checked = this.CheckShowCoverageBreaksParams.UIChkShowCoverageBreakCheckBoxChecked;
        }
        
        /// <summary>
        /// CheckShowNightShiftPlacementFilter
        /// </summary>
        public void CheckShowNightShiftPlacementFilter()
        {
            #region Variable Declarations
            DXRibbonEditItem uICbShowNightShiftPlacRibbonEditItem = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpFilterRibbonPage.UIGrpFilterAndVisualRibbonPageGroup.UICbShowNightShiftPlacRibbonEditItem;
            #endregion

            // Click 'cbShowNightShiftPlacement' RibbonEditItem
            Mouse.Click(uICbShowNightShiftPlacRibbonEditItem, new Point(10, 10));
        }
        
        /// <summary>
        /// CheckShowOnlyForSelectedEmpInWarningsSubTab - Use 'CheckShowOnlyForSelectedEmpInWarningsSubTabParams' to pass parameters into this method.
        /// </summary>
        public void CheckShowOnlyForSelectedEmpInWarningsSubTab()
        {
            #region Variable Declarations
            DXCheckBox uIChkFilterValidationMCheckBox = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIChkFilterValidationMCheckBox;
            #endregion

            // Select 'chkFilterValidationMessagesOnSelectedPerson' check box
            uIChkFilterValidationMCheckBox.Checked = this.CheckShowOnlyForSelectedEmpInWarningsSubTabParams.UIChkFilterValidationMCheckBoxChecked;
        }
        
        /// <summary>
        /// CheckShowOnlyMessagesOnSelectedDateInWarningsSubTab - Use 'CheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams' to pass parameters into this method.
        /// </summary>
        public void CheckShowOnlyMessagesOnSelectedDateInWarningsSubTab()
        {
            #region Variable Declarations
            DXCheckBox uIChkFilterValidationMCheckBox = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel1.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpValidationMessagesClient.UIChkFilterValidationMCheckBox;
            #endregion

            // Select 'chkFilterValidationMessagesOnSelectedDate' check box
            uIChkFilterValidationMCheckBox.Checked = this.CheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams.UIChkFilterValidationMCheckBoxChecked;
        }
        
        /// <summary>
        /// CleanUpMinGatIIS - Use 'CleanUpMinGatIISParams' to pass parameters into this method.
        /// </summary>
        public void CleanUpMinGatIIS()
        {
            #region Variable Declarations
            WinTreeItem uISitesTreeItem = this.UIInternetInformationSWindow.UI_treeViewWindow.UINOLABWS0018INTERNALgTreeItem.UISitesTreeItem;
            WinTreeItem uIDefaultWebSiteTreeItem = this.UIInternetInformationSWindow.UI_treeViewWindow.UINOLABWS0018INTERNALgTreeItem.UISitesTreeItem.UIDefaultWebSiteTreeItem;
            WinTreeItem uIMinGatTreeItem = this.UIInternetInformationSWindow.UI_treeViewWindow.UINOLABWS0018INTERNALgTreeItem.UISitesTreeItem.UIDefaultWebSiteTreeItem.UIMinGatTreeItem;
            WinMenu uIDropDownMenu = this.UIItemWindow16.UIDropDownMenu;
            WinButton uIYesButton = this.UIConfirmRemoveWindow.UIYesWindow.UIYesButton;
            #endregion

            // Click 'NO-LAB-WS-0018 (INTERNAL\geir.gaustad)' -> 'Sites' tree item
            Mouse.Click(uISitesTreeItem, new Point(-28, 5));

            // Click 'NO-LAB-WS-0018 (INTERNAL\geir.gaustad)' -> 'Sites' -> 'Default Web Site' tree item
            Mouse.Click(uIDefaultWebSiteTreeItem, new Point(-32, 9));

            // Right-Click 'NO-LAB-WS-0018 (INTERNAL\geir.gaustad)' -> 'Sites' -> 'Default Web Site' -> 'MinGat' tree item
            Mouse.Click(uIMinGatTreeItem, MouseButtons.Right, ModifierKeys.None, new Point(22, 11));

            // Type '{Down 7}{Enter}' in 'DropDown' popup menu
            Keyboard.SendKeys(uIDropDownMenu, this.CleanUpMinGatIISParams.UIDropDownMenuSendKeys, ModifierKeys.None);

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(48, 9));
        }
        
        /// <summary>
        /// ClearEmpFilterInEditFilterWindow
        /// </summary>
        public void ClearEmpFilterInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uIEditorButton2Button = this.UIAnsattfilterWindow.UIGleSavedFiltersLookUpEdit.UIEditorButton2Button;
            #endregion

            // Click 'EditorButton2' button
            Mouse.Click(uIEditorButton2Button, new Point(6, 6));
        }
        
        /// <summary>
        /// ClickAbsenceRibbonButton
        /// </summary>
        public void ClickAbsenceRibbonButton()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIFraværRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIFraværRibbonBaseButtonItem;
            #endregion

            // Click 'Fravær' RibbonBaseButtonItem
            Mouse.Click(uIFraværRibbonBaseButtonItem, new Point(17, 25));
        }
        
        /// <summary>
        /// ClickAddEmpFilterInEditFilterWindow
        /// </summary>
        public void ClickAddEmpFilterInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uISimpleButtonButton = this.UIItemWindow13.UIPanelControlClient.UIPanelControlClient1.UISimpleButtonButton;
            #endregion

            // Click 'SimpleButton' button
            Mouse.Click(uISimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickAddRolesForSharing
        /// </summary>
        public void ClickAddRolesForSharing()
        {
            #region Variable Declarations
            DXButton uILeggtilButton = this.UIOppgavedelingWindow.UIGroupControl1Client.UILeggtilButton;
            #endregion

            // Click 'Legg til...' button
            Mouse.Click(uILeggtilButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickAssignmentInWorkbookRoleAssignmentView
        /// </summary>
        public void ClickAssignmentInWorkbookRoleAssignmentView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uITildelingRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage.UIRpgViewActionsRibbonPageGroup.UITildelingRibbonBaseButtonItem;
            #endregion

            // Click 'Tildeling' RibbonBaseButtonItem
            Mouse.Click(uITildelingRibbonBaseButtonItem, new Point(43, 13));
        }
        
        /// <summary>
        /// ClickBackViewPeriodInFilterTab
        /// </summary>
        public void ClickBackViewPeriodInFilterTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uITilbakeRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon1.UIRpFilterRibbonPage.UIRpgDisplayPeriodRibbonPageGroup.UITilbakeRibbonBaseButtonItem;
            #endregion

            // Click 'Tilbake' RibbonBaseButtonItem
            Mouse.Click(uITilbakeRibbonBaseButtonItem, new Point(18, 25));
        }
        
        /// <summary>
        /// ClickCalculateFTTButton
        /// </summary>
        public void ClickCalculateFTTButton()
        {
            #region Variable Declarations
            DXButton uIKalkulerButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient3.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIKalkulerButton;
            #endregion

            // Click 'Kalkuler' button
            Mouse.Click(uIKalkulerButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCalculateInCostSimulationTab
        /// </summary>
        public void ClickCalculateInCostSimulationTab()
        {
            #region Variable Declarations
            DXButton uIBeregnkostnaderButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcVisualizationTabList.UITpCostCalculationClient.UIGsPanelControl1Client.UIBeregnkostnaderButton;
            #endregion

            // Click 'Beregn kostnader' button
            Mouse.Click(uIBeregnkostnaderButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelAbsenceWindow
        /// </summary>
        public void ClickCancelAbsenceWindow()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIFraværsregistreringWindow.UIPnlBottomActionsClient.UIAvbrytButton;
            #endregion

            // Click 'Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelCallout
        /// </summary>
        public void ClickCancelCallout()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UI_liCancelLayoutControlItem.UIAvbrytButton;
            #endregion

            // Click 'Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelEffectuationWindow
        /// </summary>
        public void ClickCancelEffectuationWindow()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UIIverksetteWindow.UIPnlButtonsClient.UILukkButton;
            #endregion

            // Click '&Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelEmpFilterInEditFilterWindow
        /// </summary>
        public void ClickCancelEmpFilterInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIItemWindow13.UIPanelControlClient.UIPanelControlClient1.UIAvbrytButton;
            #endregion

            // Click 'Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelExtraWindow
        /// </summary>
        public void ClickCancelExtraWindow()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIMerarbeidovertidWindow.UIGsPanelControl1Client.UIAvbrytButton;
            #endregion

            // Click '&Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelInAddRolesForSharingWindow
        /// </summary>
        public void ClickCancelInAddRolesForSharingWindow()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIVelgoppgaverWindow.UIAvbrytButton;
            #endregion

            // Click 'Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelInExtraWindow
        /// </summary>
        public void ClickCancelInExtraWindow()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIMerarbeidovertidWindow.UIGsPanelControl1Client.UIAvbrytButton;
            #endregion

            // Click '&Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelInRosterplanEmployeeLineSettings
        /// </summary>
        public void ClickCancelInRosterplanEmployeeLineSettings()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIItemWindow5.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelInRosterplanEmployeeSettings
        /// </summary>
        public void ClickCancelInRosterplanEmployeeSettings()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIItemWindow4.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelInTransfereWindow
        /// </summary>
        public void ClickCancelInTransfereWindow()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIOverførtilleggWindow.UIAvbrytButton;
            #endregion

            // Click '&Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelRoleSharingInRoleSharingTab
        /// </summary>
        public void ClickCancelRoleSharingInRoleSharingTab()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIOppgavedelingWindow.UIAvbrytButton;
            #endregion

            // Click 'Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelRosterplanSettings
        /// </summary>
        public void ClickCancelRosterplanSettings()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIArbeidsplanInnstilliWindow.UIPaBottomClient.UIAvbrytButton;
            #endregion

            // Click '&Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickChangeAbsenceShiftsButton
        /// </summary>
        public void ClickChangeAbsenceShiftsButton()
        {
            #region Variable Declarations
            DXButton uIEndrevakterButton = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIPnlShiftGridButtonsClient.UIEndrevakterButton;
            #endregion

            // Click 'Endre vakt(er)' button
            Mouse.Click(uIEndrevakterButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickChangeDepFromDepTab
        /// </summary>
        public void ClickChangeDepFromDepTab()
        {
            #region Variable Declarations
            WinClient uIAvdelingClient = this.UIGatWindow.UIItemWindow3.UIAvdelingClient;
            #endregion

            // Click 'Avdeling' client
            Mouse.Click(uIAvdelingClient, new Point(60, 18));
        }
        
        /// <summary>
        /// ClickClickUpdateButtonInWorkbookRoleAssignment
        /// </summary>
        public void ClickClickUpdateButtonInWorkbookRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIOppdaterRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpNavigationRibbonPageGroup.UIOppdaterRibbonBaseButtonItem;
            #endregion

            // Click 'Oppdater' RibbonBaseButtonItem
            Mouse.Click(uIOppdaterRibbonBaseButtonItem, new Point(26, 25));
        }
        
        /// <summary>
        /// ClickCloseEmpFilterInEditFilterWindow
        /// </summary>
        public void ClickCloseEmpFilterInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UIAnsattfilterWindow.UILukkButton;
            #endregion

            // Click 'Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCloseFilterInRoleFilterWindow
        /// </summary>
        public void ClickCloseFilterInRoleFilterWindow()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIDefinisjonavfilterfoWindow.UIPcBottomClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCloseInEmpFilterInRoleFilterWindow
        /// </summary>
        public void ClickCloseInEmpFilterInRoleFilterWindow()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UIAnsattfilterWindow.UILukkButton;
            #endregion

            // Click 'Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCloseInRoleFilterInShiftBookRoleView
        /// </summary>
        public void ClickCloseInRoleFilterInShiftBookRoleView()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UIOppgavevaktbokvisninWindow.UIPcBottomClient.UILukkButton;
            #endregion

            // Click 'Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCloseWorkbookRoleAssignment
        /// </summary>
        public void ClickCloseWorkbookRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uILukkRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgWindowRibbonPageGroup.UILukkRibbonBaseButtonItem;
            #endregion

            // Click 'Lukk' RibbonBaseButtonItem
            Mouse.Click(uILukkRibbonBaseButtonItem, new Point(20, 28));
        }
        
        /// <summary>
        /// ClickCompleteCoverWizardButton
        /// </summary>
        public void ClickCompleteCoverWizardButton()
        {
            #region Variable Declarations
            DXButton uIFullførButton = this.UIVelgansattsomskaldekWindow.UIFullførButton;
            #endregion

            // Click '&Fullfør' button
            Mouse.Click(uIFullførButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickDeleteeWorkbookRoleAssignment
        /// </summary>
        public void ClickDeleteeWorkbookRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UISlettRibbonBaseButtonItem;
            #endregion

            // Click 'Slett' RibbonBaseButtonItem
            Mouse.Click(uISlettRibbonBaseButtonItem, new Point(31, 9));
        }
        
        /// <summary>
        /// ClickDeleteInRosterplanRightClickMenu
        /// </summary>
        public void ClickDeleteInRosterplanRightClickMenu()
        {
            #region Variable Declarations
            DXCell firstCellinPlan = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.FirstCellinPlan;
            DXMenuBaseButtonItem uIBarButtonItemLink3MenuBaseButtonItem = this.UIItemWindow12.UIPopupMenuBarControlMenu.UIBarButtonItemLink3MenuBaseButtonItem;
            #endregion

            // Right-Click cell
            Mouse.Click(firstCellinPlan, MouseButtons.Right, ModifierKeys.None, new Point(12, 8));

            // Click 'BarButtonItemLink[3]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink3MenuBaseButtonItem, new Point(44, 13));
        }
        
        /// <summary>
        /// ClickDetaildAssignmentInWorkbookRoleAssignment
        /// </summary>
        public void ClickDetaildAssignmentInWorkbookRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIDetaljerttildelingRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UIDetaljerttildelingRibbonBaseButtonItem;
            #endregion

            // Click 'Detaljert tildeling' RibbonBaseButtonItem
            Mouse.Click(uIDetaljerttildelingRibbonBaseButtonItem, new Point(32, 10));
        }
        
        /// <summary>
        /// ClickDetailedInRosterplanRoleAssignmentView
        /// </summary>
        public void ClickDetailedInRosterplanRoleAssignmentView()
        {
            #region Variable Declarations
            DXButton uIBrukdetaljertoppgaveButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIBrukdetaljertoppgaveButton;
            #endregion

            // Click 'Bruk detaljert oppgavetildeling' button
            Mouse.Click(uIBrukdetaljertoppgaveButton, new Point(9, 10));
        }
        
        /// <summary>
        /// ClickDispInWorkbookRoleAssignmentView
        /// </summary>
        public void ClickDispInWorkbookRoleAssignmentView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIDisponibleRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage.UIRpgViewActionsRibbonPageGroup.UIDisponibleRibbonBaseButtonItem;
            #endregion

            // Click 'Disponible' RibbonBaseButtonItem
            Mouse.Click(uIDisponibleRibbonBaseButtonItem, new Point(38, 6));
        }
        
        /// <summary>
        /// ClickDownArrowInEmpFilter
        /// </summary>
        public void ClickDownArrowInEmpFilter()
        {
            #region Variable Declarations
            DXButton uIRibbonGalleryDownButButton = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRpgEmployeeFilterFilRibbonPageGroup.UIRibbonGalleryBarItemRibbonGallery.UIRibbonGalleryDownButButton;
            #endregion

            // Click 'RibbonGalleryDownButton' button
            Mouse.Click(uIRibbonGalleryDownButButton, new Point(7, 11));
        }
        
        /// <summary>
        /// ClickDownArrowOpenEmpFilter
        /// </summary>
        public void ClickDownArrowOpenEmpFilter()
        {
            #region Variable Declarations
            DXButton uIRibbonGalleryDropDowButton = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRpgEmployeeFilterFilRibbonPageGroup.UIRibbonGalleryBarItemRibbonGallery.UIRibbonGalleryDropDowButton;
            #endregion

            // Click 'RibbonGalleryDropDownButton' button
            Mouse.Click(uIRibbonGalleryDropDowButton, new Point(7, 10));
        }
        
        /// <summary>
        /// ClickDownArrowOpenRoleFilter
        /// </summary>
        public void ClickDownArrowOpenRoleFilter()
        {
            #region Variable Declarations
            DXButton uIRibbonGalleryDropDowButton = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgRoleCodeFilterRibbonPageGroup.UIRibbonGalleryBarItemRibbonGallery.UIRibbonGalleryDropDowButton;
            #endregion

            // Click 'RibbonGalleryDropDownButton' button
            Mouse.Click(uIRibbonGalleryDropDowButton, new Point(4, 11));
        }
        
        /// <summary>
        /// ClickEditDayRythmLayer
        /// </summary>
        public void ClickEditDayRythmLayer()
        {
            #region Variable Declarations
            DXButton uIEndrelagButton = this.UIDøgnrytmeplanWindow.UIPaNavbarPanelClient.UIGsMainControlNavBar.UINbgccLayerScrollableControl.UIPaMainPanelClient.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIPaTopPanelClient.UIEndrelagButton;
            #endregion

            // Click 'Endre lag' button
            Mouse.Click(uIEndrelagButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickEditEmpFilter
        /// </summary>
        public void ClickEditEmpFilter()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBarButtonItemLink0MenuBaseButtonItem = this.UIItemWindow12.UIGalleryDropDownBarCoMenu.UIBarButtonItemLink0MenuBaseButtonItem;
            #endregion

            // Click 'BarButtonItemLink[0]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink0MenuBaseButtonItem, new Point(56, 9));
        }
        
        /// <summary>
        /// ClickEditRoleFilter
        /// </summary>
        public void ClickEditRoleFilter()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIEndrefilterMenuBaseButtonItem = this.UIItemWindow15.UIGalleryDropDownBarCoMenu.UIEndrefilterMenuBaseButtonItem;
            #endregion

            // Click 'Endre filter' MenuBaseButtonItem
            Mouse.Click(uIEndrefilterMenuBaseButtonItem, new Point(52, 11));
        }
        
        /// <summary>
        /// ClickEditRosterplanFromHomeTab
        /// </summary>
        public void ClickEditRosterplanFromHomeTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIRedigerRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpRosterPlanRibbonPage.UIGrpEditRibbonPageGroup.UIRedigerRibbonBaseButtonItem;
            #endregion

            // Click 'Rediger' RibbonBaseButtonItem
            Mouse.Click(uIRedigerRibbonBaseButtonItem, new Point(27, 35));
        }
        
        /// <summary>
        /// ClickEmployeeFilterInRoleAssignmentWindow
        /// </summary>
        public void ClickEmployeeFilterInRoleAssignmentWindow()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIPåAvRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgEmployeeFilterRibbonPageGroup.UIPåAvRibbonBaseButtonItem;
            #endregion

            // Click 'På/Av' RibbonBaseButtonItem
            Mouse.Click(uIPåAvRibbonBaseButtonItem, new Point(21, 31));
        }
        
        /// <summary>
        /// ClickEmployeesInWorkbookRoleAssignmentView
        /// </summary>
        public void ClickEmployeesInWorkbookRoleAssignmentView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIAnsatteRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage.UIRpgViewActionsRibbonPageGroup.UIAnsatteRibbonBaseButtonItem;
            #endregion

            // Click 'Ansatte' RibbonBaseButtonItem
            Mouse.Click(uIAnsatteRibbonBaseButtonItem, new Point(41, 11));
        }
        
        /// <summary>
        /// ClickExtraRibbonButton
        /// </summary>
        public void ClickExtraRibbonButton()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIEkstraRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom1.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpDevianceRibbonPageGroup.UIEkstraRibbonBaseButtonItem;
            #endregion

            // Click 'Ekstra' RibbonBaseButtonItem
            Mouse.Click(uIEkstraRibbonBaseButtonItem, new Point(22, 28));
        }
        
        /// <summary>
        /// ClickForwardViewPeriodInFilterTab
        /// </summary>
        public void ClickForwardViewPeriodInFilterTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIFremRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon1.UIRpFilterRibbonPage.UIRpgDisplayPeriodRibbonPageGroup.UIFremRibbonBaseButtonItem;
            #endregion

            // Click 'Frem' RibbonBaseButtonItem
            Mouse.Click(uIFremRibbonBaseButtonItem, new Point(21, 25));
        }
        
        /// <summary>
        /// ClickNewEmpFilterInEditFilterWindow
        /// </summary>
        public void ClickNewEmpFilterInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uILeggtilButton = this.UIAnsattfilterWindow.UIPanelControl1Client.UIViewHost1Custom.UIPcViewClient.UIEmployeeFilterEditViCustom.UILeggtilButton;
            #endregion

            // Click 'Legg til' button
            Mouse.Click(uILeggtilButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickNewRoleFromSubTabRoleAssignment
        /// </summary>
        public void ClickNewRoleFromSubTabRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINYRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIRibbonControlRoleShaRibbon.UIRibbonPageRoleSharinRibbonPage.UIRpgActionsRibbonPageGroup.UINYRibbonBaseButtonItem;
            #endregion

            // Click 'Ny' RibbonBaseButtonItem
            Mouse.Click(uINYRibbonBaseButtonItem, new Point(18, 27));
        }
        
        /// <summary>
        /// ClickNewRoleSharingInRoleSharingTab
        /// </summary>
        public void ClickNewRoleSharingInRoleSharingTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINYRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleSharingViewCustom.UIRibbonControlRoleShaRibbon.UIRibbonPageRoleSharinRibbonPage.UIRpgActionsRibbonPageGroup.UINYRibbonBaseButtonItem;
            #endregion

            // Click 'Ny' RibbonBaseButtonItem
            Mouse.Click(uINYRibbonBaseButtonItem, new Point(21, 26));
        }
        
        /// <summary>
        /// ClickNewSeparationInDayAndWeekSeparationEmployeeTab
        /// </summary>
        public void ClickNewSeparationInDayAndWeekSeparationEmployeeTab()
        {
            #region Variable Declarations
            WinClient uITimelisteClient = this.UIGatWindow.UIItemWindow1.UITimelisteClient;
            #endregion

            // Click 'Døgn- og ukeskille' client
            Mouse.Click(uITimelisteClient, new Point(51, 22));
        }
        
        /// <summary>
        /// ClickNewShiftFromAbsence
        /// </summary>
        public void ClickNewShiftFromAbsence()
        {
            #region Variable Declarations
            DXButton uINyvaktButton = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIPnlShiftGridButtonsClient.UINyvaktButton;
            #endregion

            // Click 'Ny vakt' button
            Mouse.Click(uINyvaktButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickNewShiftPatternInDepTab
        /// </summary>
        public void ClickNewShiftPatternInDepTab()
        {
            #region Variable Declarations
            DXButton uINYButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRoleCodePatternListCCustom.UINYButton;
            #endregion

            // Click '&Ny' button
            Mouse.Click(uINYButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickNextWeekInRoleAssignmentWindow
        /// </summary>
        public void ClickNextWeekInRoleAssignmentWindow()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINesteRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpNavigationRibbonPageGroup.UINesteRibbonBaseButtonItem;
            #endregion

            // Click 'Neste' RibbonBaseButtonItem
            Mouse.Click(uINesteRibbonBaseButtonItem, new Point(32, 8));
        }
        
        /// <summary>
        /// ClickNoInChangeWishplanPhaseConfirmationWindow
        /// </summary>
        public void ClickNoInChangeWishplanPhaseConfirmationWindow()
        {
            #region Variable Declarations
            DXButton uINeiButton = this.UIGT4006InformasjonWindow.UINeiButton;
            #endregion

            // Click '&Nei' button
            Mouse.Click(uINeiButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkAddRoleAssignmentInDetailsWindow
        /// </summary>
        public void ClickOkAddRoleAssignmentInDetailsWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIVelgoppgaverWindow.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkAddRoleFilterInEditFilterWindow
        /// </summary>
        public void ClickOkAddRoleFilterInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uIOKLagreButton = this.UIItemWindow15.UIPopupContainerBarConMenu.UIPccFilterNameClient.UIPnlFilterNameClient.UIOKLagreButton;
            #endregion

            // Click 'OK - Lagre' button
            Mouse.Click(uIOKLagreButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkCallout
        /// </summary>
        public void ClickOkCallout()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UI_liOKLayoutControlItem.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkConstuctAbsence
        /// </summary>
        public void ClickOkConstuctAbsence()
        {
            #region Variable Declarations
            DXButton uIOKFerdigButton = this.UIFraværsregistreringWindow.UIPnlBottomActionsClient.UIOKFerdigButton;
            #endregion

            // Click 'OK - Ferdig' button
            Mouse.Click(uIOKFerdigButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOKDayRythmplan
        /// </summary>
        public void ClickOKDayRythmplan()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIDøgnrytmeplanWindow.UIPaBottomPanelClient.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOKDayRythmplanLayer
        /// </summary>
        public void ClickOKDayRythmplanLayer()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIDøgnrytmelagWindow.UIPaBottomClient.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkEditRosterplanFromHomeTab
        /// </summary>
        public void ClickOkEditRosterplanFromHomeTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnOkRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpRosterPlanRibbonPage.UIGrpEditRibbonPageGroup.UIBtnOkRibbonBaseButtonItem;
            #endregion

            // Click 'btnOk' RibbonBaseButtonItem
            Mouse.Click(uIBtnOkRibbonBaseButtonItem, new Point(28, 6));
        }
        
        /// <summary>
        /// ClickOkExchangeEmployeeShift
        /// </summary>
        public void ClickOkExchangeEmployeeShift()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIByttansattWindow.UIDbFooterCustom.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkInAddRolesForSharingWindow
        /// </summary>
        public void ClickOkInAddRolesForSharingWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIVelgoppgaverWindow.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkInDeleteShiftWindow
        /// </summary>
        public void ClickOkInDeleteShiftWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UISlettWindow.UIDbFooterCustom.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkInExchangeWindow
        /// </summary>
        public void ClickOkInExchangeWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIBytteWindow.UIOKButton;
            DXMenuBaseButtonItem uIOKMenuBaseButtonItem = this.UIItemWindow12.UIPopupMenuBarControlMenu.UIOKMenuBaseButtonItem;
            #endregion

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));

            // Click 'Ok' MenuBaseButtonItem
            Mouse.Click(uIOKMenuBaseButtonItem, new Point(55, 14));
        }
        
        /// <summary>
        /// ClickOkInExtraWindow
        /// </summary>
        public void ClickOkInExtraWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIMerarbeidovertidWindow.UIGsPanelControl1Client.UIOKButton;
            DXMenuBaseButtonItem uIOKMenuBaseButtonItem = this.UIItemWindow9.UIPopupMenuBarControlMenu.UIOKMenuBaseButtonItem;
            #endregion

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));

            // Click 'Ok' MenuBaseButtonItem
            Mouse.Click(uIOKMenuBaseButtonItem, new Point(38, 10));
        }
        
        /// <summary>
        /// ClickOkInReloadPlanInfoWindow
        /// </summary>
        public void ClickOkInReloadPlanInfoWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIRPL23006InformasjonWindow.UIOKButton;
            #endregion

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkInRemanningWindow
        /// </summary>
        public void ClickOkInRemanningWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIForskyvningWindow.UIPanBottomPanelClient.UIOKButton;
            DXMenuBaseButtonItem uIOKMenuBaseButtonItem = this.UIItemWindow9.UIPopupMenuBarControlMenu.UIOKMenuBaseButtonItem;
            #endregion

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));

            // Click 'Ok' MenuBaseButtonItem
            Mouse.Click(uIOKMenuBaseButtonItem, new Point(47, 14));
        }
        
        /// <summary>
        /// ClickOkInRosterplanEmployeeLineSettings
        /// </summary>
        public void ClickOkInRosterplanEmployeeLineSettings()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIItemWindow5.UIGSPanelControlClient.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkInRosterplanEmployeeSettings
        /// </summary>
        public void ClickOkInRosterplanEmployeeSettings()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIItemWindow4.UIGSPanelControlClient.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkInShiftPatternWindow
        /// </summary>
        public void ClickOkInShiftPatternWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIOppgavemønsterWindow.UIDbFooterCustom.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkInTimesheetTabNoNeedToRecalculateDialog
        /// </summary>
        public void ClickOkInTimesheetTabNoNeedToRecalculateDialog()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIREC3001InformasjonWindow.UIOKButton;
            #endregion

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkInWorkbookRoleAssignmentErrorMessageDialog
        /// </summary>
        public void ClickOkInWorkbookRoleAssignmentErrorMessageDialog()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIItemWindowNine.UIEndringenekanikkelagWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkNewCallout
        /// </summary>
        public void ClickOkNewCallout()
        {
            #region Variable Declarations
            DXButton uIOkNyButton = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UI_liOk_NewLayoutControlItem.UIOkNyButton;
            #endregion

            // Click 'Ok - Ny' button
            Mouse.Click(uIOkNyButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkNewCustomFilter
        /// </summary>
        public void ClickOkNewCustomFilter()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UITilpassetvisningWindow.UIPnlButtonsClient.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkNewInExtraWindow
        /// </summary>
        public void ClickOkNewInExtraWindow()
        {
            #region Variable Declarations
            DXButton uIOkNyButton = this.UIMerarbeidovertidWindow.UIGsPanelControl1Client.UIOkNyButton;
            #endregion

            // Click 'Ok &Ny' button
            Mouse.Click(uIOkNyButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkRoleAssignmentMainWindow
        /// </summary>
        public void ClickOkRoleAssignmentMainWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIOppgavetildelingWindow.UILcMainCustom.UIRootLayoutGroup.UILciCenterLayoutControlItem.UIPcCenterClient.UILcInnerCustom.UILcgInnerLayoutGroup.UILciInnerBottomLayoutControlItem.UIPcInnerBottomClient.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkRoleAssignmentWindow
        /// </summary>
        public void ClickOkRoleAssignmentWindow()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIOppgavetildelingWindow.UILcMainCustom.UIRootLayoutGroup.UILciCenterLayoutControlItem.UIPcCenterClient.UILcInnerCustom.UILcgInnerLayoutGroup.UILciInnerBottomLayoutControlItem.UIPcInnerBottomClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkRoleSharingInRoleSharingTab
        /// </summary>
        public void ClickOkRoleSharingInRoleSharingTab()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIOppgavedelingWindow.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(39, 11));
        }
        
        /// <summary>
        /// ClickOkTerminateApplication
        /// </summary>
        public void ClickOkTerminateApplication()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIHandlingutførtWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(40, 8));
        }
        
        /// <summary>
        /// ClickPreviousWeekInRoleAssignmentWindow
        /// </summary>
        public void ClickPreviousWeekInRoleAssignmentWindow()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIForrigeRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpNavigationRibbonPageGroup.UIForrigeRibbonBaseButtonItem;
            #endregion

            // Click 'Forrige' RibbonBaseButtonItem
            Mouse.Click(uIForrigeRibbonBaseButtonItem, new Point(39, 15));
        }
        
        /// <summary>
        /// ClickRecalculateInEmpTimesheetTab
        /// </summary>
        public void ClickRecalculateInEmpTimesheetTab()
        {
            #region Variable Declarations
            WinClient uITimelisteClient1 = this.UIGatWindow.UIItemWindow1.UITimelisteClient1;
            #endregion

            // Click 'Timeliste' client
            Mouse.Click(uITimelisteClient1, new Point(436, 18));
        }
        
        /// <summary>
        /// ClickRegretInWorkbookRoleAssignment
        /// </summary>
        public void ClickRegretInWorkbookRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIAngreRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UIAngreRibbonBaseButtonItem;
            #endregion

            // Click 'Angre' RibbonBaseButtonItem
            Mouse.Click(uIAngreRibbonBaseButtonItem, new Point(36, 13));
        }
        
        /// <summary>
        /// ClickRegstatusInAssignNewRoleWindow
        /// </summary>
        public void ClickRegstatusInAssignNewRoleWindow()
        {
            #region Variable Declarations
            DXTestControl uITitleBarClient = this.UIOppgavedelingWindow.UITitleBarClient;
            #endregion

            // Click 'titleBar' client
            Mouse.Click(uITitleBarClient, new Point(302, 36));
        }
        
        /// <summary>
        /// ClickRemoveRoleAssignmentInDetailsWindow
        /// </summary>
        public void ClickRemoveRoleAssignmentInDetailsWindow()
        {
            #region Variable Declarations
            DXButton uIFjernButton = this.UIOppgavetildelingWindow.UIGcContentClient.UIFjernButton;
            #endregion

            // Click 'Fjern' button
            Mouse.Click(uIFjernButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickReplaceInWorkbookRoleAssignment
        /// </summary>
        public void ClickReplaceInWorkbookRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIErstattRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UIErstattRibbonBaseButtonItem;
            #endregion

            // Click 'Erstatt' RibbonBaseButtonItem
            Mouse.Click(uIErstattRibbonBaseButtonItem, new Point(31, 10));
        }
        
        /// <summary>
        /// ClickRestetLayoutInWorkbookRoleAssignmentView
        /// </summary>
        public void ClickRestetLayoutInWorkbookRoleAssignmentView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINullstillRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage.UIRpgViewActionsRibbonPageGroup.UINullstillRibbonBaseButtonItem;
            #endregion

            // Click 'Nullstill' RibbonBaseButtonItem
            Mouse.Click(uINullstillRibbonBaseButtonItem, new Point(25, 8));
        }
        
        /// <summary>
        /// ClickRoleFilterInRoleAssignmentWindow
        /// </summary>
        public void ClickRoleFilterInRoleAssignmentWindow()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIPåAvRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgRoleCodeFilterRibbonPageGroup.UIPåAvRibbonBaseButtonItem;
            #endregion

            // Click 'På/Av' RibbonBaseButtonItem
            Mouse.Click(uIPåAvRibbonBaseButtonItem, new Point(19, 35));
        }
        
        /// <summary>
        /// ClickRoleInWorkbookRoleAssignmentView
        /// </summary>
        public void ClickRoleInWorkbookRoleAssignmentView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIOppgaverRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage.UIRpgViewActionsRibbonPageGroup.UIOppgaverRibbonBaseButtonItem;
            #endregion

            // Click 'Oppgaver' RibbonBaseButtonItem
            Mouse.Click(uIOppgaverRibbonBaseButtonItem, new Point(44, 9));
        }
        
        /// <summary>
        /// ClickRolePatternInWorkbookRoleAssignmentView
        /// </summary>
        public void ClickRolePatternInWorkbookRoleAssignmentView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIOppgavemønsterRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage.UIRpgViewActionsRibbonPageGroup.UIOppgavemønsterRibbonBaseButtonItem;
            #endregion

            // Click 'Oppgavemønster' RibbonBaseButtonItem
            Mouse.Click(uIOppgavemønsterRibbonBaseButtonItem, new Point(38, 10));
        }
        
        /// <summary>
        /// ClickRosterplanSettingsInRosterplanTab
        /// </summary>
        public void ClickRosterplanSettingsInRosterplanTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIInnstillingerRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIRosterPlanListCustom.UIPnlGridClient.UIRibbonControlRibbon.UIRpHomeRibbonPage.UIRpgPlanRibbonPageGroup.UIInnstillingerRibbonBaseButtonItem;
            #endregion

            // Click 'Innstillinger' RibbonBaseButtonItem
            Mouse.Click(uIInnstillingerRibbonBaseButtonItem, new Point(28, 29));
        }
        
        /// <summary>
        /// ClickSaveAsRoleFilterInEditFilterWindow
        /// </summary>
        public void ClickSaveAsRoleFilterInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uILagresomButton = this.UIDefinisjonavfilterfoWindow.UIGcSavedViewsClient.UILagresomButton;
            #endregion

            // Click 'Lagre som...' button
            Mouse.Click(uILagresomButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickSaveInWorkbookRoleAssignment
        /// </summary>
        public void ClickSaveInWorkbookRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uILagreRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UILagreRibbonBaseButtonItem;
            #endregion

            // Click 'Lagre' RibbonBaseButtonItem
            Mouse.Click(uILagreRibbonBaseButtonItem, new Point(23, 28));
        }
        
        /// <summary>
        /// ClickSearchDepToAssignTo
        /// </summary>
        public void ClickSearchDepToAssignTo()
        {
            #region Variable Declarations
            DXButton uISøkButton = this.UIVelgavdelingerWindow.UITlDepartmentsTreeList.UIFindControlCoreCustom.UILayoutControl1Custom.UIRootLayoutGroup.UILciFindButtonLayoutControlItem.UISøkButton;
            #endregion

            // Click 'Søk' button
            Mouse.Click(uISøkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickSearchReplaceInWorkbookRoleAssignmentView
        /// </summary>
        public void ClickSearchReplaceInWorkbookRoleAssignmentView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uISøkogerstattRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage.UIRpgViewActionsRibbonPageGroup.UISøkogerstattRibbonBaseButtonItem;
            #endregion

            // Click 'Søk og erstatt' RibbonBaseButtonItem
            Mouse.Click(uISøkogerstattRibbonBaseButtonItem, new Point(44, 11));
        }
        
        /// <summary>
        /// ClickShowShiftsInRoleAssignmentTaskView
        /// </summary>
        public void ClickShowShiftsInRoleAssignmentTaskView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIVisvakterRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgViewRibbonPageGroup.UIVisvakterRibbonBaseButtonItem;
            #endregion

            // Click 'Vis vakter' RibbonBaseButtonItem
            Mouse.Click(uIVisvakterRibbonBaseButtonItem, new Point(33, 10));
        }
        
        /// <summary>
        /// ClickShowTimePeriodsInRoleAssignmentTaskView
        /// </summary>
        public void ClickShowTimePeriodsInRoleAssignmentTaskView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIVistidsperioderRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgViewRibbonPageGroup.UIVistidsperioderRibbonBaseButtonItem;
            #endregion

            // Click 'Vis tidsperioder' RibbonBaseButtonItem
            Mouse.Click(uIVistidsperioderRibbonBaseButtonItem, new Point(42, 12));
        }
        
        /// <summary>
        /// ClickSpecificationInWorkbookRoleAssignmentView
        /// </summary>
        public void ClickSpecificationInWorkbookRoleAssignmentView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uISpesifikasjonRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage.UIRpgViewActionsRibbonPageGroup.UISpesifikasjonRibbonBaseButtonItem;
            #endregion

            // Click 'Spesifikasjon' RibbonBaseButtonItem
            Mouse.Click(uISpesifikasjonRibbonBaseButtonItem, new Point(49, 11));
        }
        
        /// <summary>
        /// ClickSummaryInWorkbookRoleAssignmentView
        /// </summary>
        public void ClickSummaryInWorkbookRoleAssignmentView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uISummeringRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage.UIRpgViewActionsRibbonPageGroup.UISummeringRibbonBaseButtonItem;
            #endregion

            // Click 'Summering' RibbonBaseButtonItem
            Mouse.Click(uISummeringRibbonBaseButtonItem, new Point(39, 10));
        }
        
        /// <summary>
        /// ClickTransfereFTTButton
        /// </summary>
        public void ClickTransfereFTTButton()
        {
            #region Variable Declarations
            DXButton uIOverførButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient3.UIFixedPaymentViewCustom.UIFixedPaymentControlCustom.UIViewHost1Custom.UIPcViewClient.UIFixedPaymentControlCustom.UIOverførButton;
            #endregion

            // Click 'Overfør...' button
            Mouse.Click(uIOverførButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickTransfereInTransfereWindow
        /// </summary>
        public void ClickTransfereInTransfereWindow()
        {
            #region Variable Declarations
            DXButton uIOverførButton = this.UIOverførtilleggWindow.UIOverførButton;
            #endregion

            // Click '&Overfør' button
            Mouse.Click(uIOverførButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickUndoRegretInWorkbookRoleAssignment
        /// </summary>
        public void ClickUndoRegretInWorkbookRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIGjøromRibbonBaseButtonItem = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgActionsRibbonPageGroup.UIGjøromRibbonBaseButtonItem;
            #endregion

            // Click 'Gjør om' RibbonBaseButtonItem
            Mouse.Click(uIGjøromRibbonBaseButtonItem, new Point(33, 12));
        }
        
        /// <summary>
        /// ClickUpArrowInEmpFilter
        /// </summary>
        public void ClickUpArrowInEmpFilter()
        {
            #region Variable Declarations
            DXButton uIRibbonGalleryUpButtoButton = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRpgEmployeeFilterFilRibbonPageGroup.UIRibbonGalleryBarItemRibbonGallery.UIRibbonGalleryUpButtoButton;
            #endregion

            // Click 'RibbonGalleryUpButton' button
            Mouse.Click(uIRibbonGalleryUpButtoButton, new Point(9, 9));
        }
        
        /// <summary>
        /// ClickUseEmpFilterInEditFilterWindow
        /// </summary>
        public void ClickUseEmpFilterInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uIBrukButton = this.UIAnsattfilterWindow.UIBrukButton;
            #endregion

            // Click 'Bruk' button
            Mouse.Click(uIBrukButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickUseEmpFilterInRoleFilterWindow
        /// </summary>
        public void ClickUseEmpFilterInRoleFilterWindow()
        {
            #region Variable Declarations
            DXButton uIBrukButton = this.UIAnsattfilterWindow.UIBrukButton;
            #endregion

            // Click 'Bruk' button
            Mouse.Click(uIBrukButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickUseFilterInRoleAssignmentShiftbook
        /// </summary>
        public void ClickUseFilterInRoleAssignmentShiftbook()
        {
            #region Variable Declarations
            DXButton uIBrukButton = this.UIOppgavevaktbokvisninWindow.UIPcBottomClient.UIBrukButton;
            #endregion

            // Click 'Bruk' button
            Mouse.Click(uIBrukButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickUseFilterInRoleFilterWindow
        /// </summary>
        public void ClickUseFilterInRoleFilterWindow()
        {
            #region Variable Declarations
            DXButton uIBrukButton = this.UIDefinisjonavfilterfoWindow.UIPcBottomClient.UIBrukButton;
            #endregion

            // Click 'Bruk' button
            Mouse.Click(uIBrukButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickUseNewCustomFilter
        /// </summary>
        public void ClickUseNewCustomFilter()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UITilpassetvisningWindow.UIPnlButtonsClient.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickUseRoleFilterInEditFilterWindow
        /// </summary>
        public void ClickUseRoleFilterInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uIBrukButton = this.UIDefinisjonavfilterfoWindow.UIPcBottomClient.UIBrukButton;
            #endregion

            // Click 'Bruk' button
            Mouse.Click(uIBrukButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickUseRoleFilterInShiftBookRoleView
        /// </summary>
        public void ClickUseRoleFilterInShiftBookRoleView()
        {
            #region Variable Declarations
            DXButton uIBrukButton = this.UIOppgavevaktbokvisninWindow.UIPcBottomClient.UIBrukButton;
            #endregion

            // Click 'Bruk' button
            Mouse.Click(uIBrukButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickVakantButtonInEmployeeWindow
        /// </summary>
        public void ClickVakantButtonInEmployeeWindow()
        {
            #region Variable Declarations
            DXButton uIVakantButton = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UIVakantButton;
            #endregion

            // Click 'Vakant' button
            Mouse.Click(uIVakantButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickWorkbookPlanner
        /// </summary>
        public void ClickWorkbookPlanner()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIPlanleggerRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpViewModeRibbonPageGroup.UIPlanleggerRibbonBaseButtonItem;
            #endregion

            // Click 'Planlegger' RibbonBaseButtonItem
            Mouse.Click(uIPlanleggerRibbonBaseButtonItem, new Point(43, 14));
        }
        
        /// <summary>
        /// ClickWorkbookRoleAssignment
        /// </summary>
        public void ClickWorkbookRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIOppgaverRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom1.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpMiscRibbonPageGroup.UIOppgaverRibbonBaseButtonItem;
            #endregion

            // Click 'Oppgaver' RibbonBaseButtonItem
            Mouse.Click(uIOppgaverRibbonBaseButtonItem, new Point(20, 23));
        }
        
        /// <summary>
        /// ClickWorkbookRoleAssignmentAllocationAllocationTab
        /// </summary>
        public void ClickWorkbookRoleAssignmentAllocationAllocationTab()
        {
            #region Variable Declarations
            DXButton uITildelingButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UITildelingButton;
            #endregion

            // Click 'Tildeling' button
            Mouse.Click(uITildelingButton, new Point(38, 7));
        }
        
        /// <summary>
        /// ClickWorkbookRoleAssignmentAllocationSearchTab
        /// </summary>
        public void ClickWorkbookRoleAssignmentAllocationSearchTab()
        {
            #region Variable Declarations
            DXButton uISøkButton = this.UIOppgavetildelingWindow1.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UISøkButton;
            #endregion

            // Click 'Søk' button
            Mouse.Click(uISøkButton, new Point(25, 8));
        }
        
        /// <summary>
        /// ClickWorkbookRoleAssignmentAllocationSpecificationTab
        /// </summary>
        public void ClickWorkbookRoleAssignmentAllocationSpecificationTab()
        {
            #region Variable Declarations
            DXButton uISpesifikasjonButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer3DockPanel.UISpesifikasjonButton;
            #endregion

            // Click 'Spesifikasjon' button
            Mouse.Click(uISpesifikasjonButton, new Point(50, 7));
        }
        
        /// <summary>
        /// ClickWorkbookRoleAssignmentFilterTab
        /// </summary>
        public void ClickWorkbookRoleAssignmentFilterTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpFilteringRibbonPage = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpFilteringRibbonPage;
            #endregion

            // Click 'rpFiltering' RibbonPage
            Mouse.Click(uIRpFilteringRibbonPage, new Point(25, 13));
        }
        
        /// <summary>
        /// ClickWorkbookRoleAssignmentHomeTab
        /// </summary>
        public void ClickWorkbookRoleAssignmentHomeTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpgHomeRibbonPage = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpgHomeRibbonPage;
            #endregion

            // Click 'rpgHome' RibbonPage
            Mouse.Click(uIRpgHomeRibbonPage, new Point(26, 7));
        }
        
        /// <summary>
        /// ClickWorkbookRoleAssignmentRoleListRolesTab
        /// </summary>
        public void ClickWorkbookRoleAssignmentRoleListRolesTab()
        {
            #region Variable Declarations
            DXButton uIOppgaverButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIOppgaverButton;
            #endregion

            // Click 'Oppgaver' button
            Mouse.Click(uIOppgaverButton, new Point(45, 10));
        }
        
        /// <summary>
        /// ClickWorkbookRoleAssignmentRoleListShiftPatternTab
        /// </summary>
        public void ClickWorkbookRoleAssignmentRoleListShiftPatternTab()
        {
            #region Variable Declarations
            DXButton uIOppgavemønsterButton = this.UIOppgavetildelingWindow.UIVhContentCustom.UIPcViewClient.UIRoleAssignmentOverviCustom.UIPanelContainer2DockPanel.UIPanelContainer1DockPanel.UIOppgavemønsterButton;
            #endregion

            // Click 'Oppgavemønster' button
            Mouse.Click(uIOppgavemønsterButton, new Point(44, 9));
        }
        
        /// <summary>
        /// ClickWorkbookRoleAssignmentViewTab
        /// </summary>
        public void ClickWorkbookRoleAssignmentViewTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpViewRibbonPage = this.UIOppgavetildelingWindow1.UIRcMenuRibbon.UIRpViewRibbonPage;
            #endregion

            // Click 'rpView' RibbonPage
            Mouse.Click(uIRpViewRibbonPage, new Point(30, 9));
        }
        
        /// <summary>
        /// ClickWorkbookRoleView
        /// </summary>
        public void ClickWorkbookRoleView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIOppgaveRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom1.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpViewModeRibbonPageGroup.UIOppgaveRibbonBaseButtonItem;
            #endregion

            // Click 'Oppgave' RibbonBaseButtonItem
            Mouse.Click(uIOppgaveRibbonBaseButtonItem, new Point(41, 9));
        }
        
        /// <summary>
        /// ClickYesInChangeWishplanPhaseConfirmationWindow
        /// </summary>
        public void ClickYesInChangeWishplanPhaseConfirmationWindow()
        {
            #region Variable Declarations
            DXButton uIJAButton = this.UIGT4006InformasjonWindow.UIJAButton;
            #endregion

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickYesInCompatibilityWindowWhenExportToExcel
        /// </summary>
        public void ClickYesInCompatibilityWindowWhenExportToExcel()
        {
            #region Variable Declarations
            WinButton uIYesButton = this.UIMicrosoftExcelWindow.UIYesWindow.UIYesButton;
            #endregion

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(34, 8));
        }
        
        /// <summary>
        /// ClickYesInWorkbookRoleAssignmentSaveDialog
        /// </summary>
        public void ClickYesInWorkbookRoleAssignmentSaveDialog()
        {
            #region Variable Declarations
            DXButton uIJAButton = this.UIItemWindow8.UIOppgavetildelingWindow.UIJAButton;
            #endregion

            // Click 'Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseDepRosterplanSettings
        /// </summary>
        public void CloseDepRosterplanSettings()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UIArbeidsplanoppsettfoWindow.UIPnlButtonsClient.UILukkButton;
            #endregion

            // Click 'L&ukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseF3SearchInRosterplanGrid
        /// </summary>
        public void CloseF3SearchInRosterplanGrid()
        {
            #region Variable Declarations
            DXButton uI_BtCloseButton = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UI_LayoutControl1Custom.UILcGroupMainLayoutGroup.UILciCloseButtonLayoutControlItem.UI_BtCloseButton;
            #endregion

            // Click '_BtClose' button
            Mouse.Click(uI_BtCloseButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseIE
        /// </summary>
        public void CloseIE()
        {
            #region Variable Declarations
            BrowserWindow uIMinGatMinGatv2020120Window = this.UIMinGatMinGatv2020120Window;
            #endregion

            // Perform Close on Browser Window
            uIMinGatMinGatv2020120Window.Close();
        }
        
        /// <summary>
        /// CloseIIS
        /// </summary>
        public void CloseIIS()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIInternetInformationSWindow.UIInternetInformationSTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(22, 14));
        }
        
        /// <summary>
        /// CloseMinGatCookieMessage
        /// </summary>
        public void CloseMinGatCookieMessage()
        {
            #region Variable Declarations
            HtmlSpan uIOKPane = this.UIStartsidenMinGatv201Window.UIStartsidenMinGatv201Document.UICookieDisclaimerCustom.UIOKPane;
            #endregion

            // Click 'OK' pane
            Mouse.Click(uIOKPane, new Point(5, 9));
        }
        
        /// <summary>
        /// ClosePrintAndPreviewFullRosterplan
        /// </summary>
        public void ClosePrintAndPreviewFullRosterplan()
        {
            #region Variable Declarations
            DXButton uICloseButton = this.UIForhåndsvisningWindow.UICloseButton;
            DXButton uILukkButton = this.UIUtskriftavarbeidsplaWindow.UIPnlButtonsClient.UILukkButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(10, 9));

            // Click 'Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseRegStatusUtjevning
        /// </summary>
        public void CloseRegStatusUtjevning()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIRegistreringsstatusWindow.UILcMessagesCustom1.UILcgMessagesLayoutGroup.UILciOkLayoutControlItem.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseRegStatusWindow
        /// </summary>
        public void CloseRegStatusWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIRegistreringsstatusWindow.UILcMessagesCustom.UILcgMessagesLayoutGroup.UILciOkLayoutControlItem.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseRoleAssignmentMainWindow
        /// </summary>
        public void CloseRoleAssignmentMainWindow()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBbiCloseRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgWindowRibbonPageGroup.UIBbiCloseRibbonBaseButtonItem;
            #endregion

            // Click 'bbiClose' RibbonBaseButtonItem
            Mouse.Click(uIBbiCloseRibbonBaseButtonItem, new Point(17, 31));
        }
        
        /// <summary>
        /// CloseRosterplanApprovalLog
        /// </summary>
        public void CloseRosterplanApprovalLog()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UISøkingidatabaseloggWindow.UILukkButton;
            #endregion

            // Click 'Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseRosterplanFromHomeTab
        /// </summary>
        public void CloseRosterplanFromHomeTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnCloseRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpRosterPlanRibbonPage.UIGrpCloseRibbonPageGroup.UIBtnCloseRibbonBaseButtonItem;
            #endregion

            // Click 'btnClose' RibbonBaseButtonItem
            Mouse.Click(uIBtnCloseRibbonBaseButtonItem, new Point(39, 35));
        }
        
        /// <summary>
        /// CloseShiftInEmpTab
        /// </summary>
        public void CloseShiftInEmpTab()
        {
            #region Variable Declarations
            WinButton uILukkButton = this.UIEndrekonteringWindow.UIItemWindow.UIEndrekonteringClient.UILukkButton;
            #endregion

            // Click 'L&ukk' button
            Mouse.Click(uILukkButton, new Point(29, 19));
        }
        
        /// <summary>
        /// CloseSubscribeDashboardMessages
        /// </summary>
        public void CloseSubscribeDashboardMessages()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UIAbonnementpådashboarWindow.UILukkButton;
            #endregion

            // Click 'Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseTimesheetTabRecalcWindow
        /// </summary>
        public void CloseTimesheetTabRecalcWindow()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UIRekalkuleringWindow.UIDbFooterCustom.UILukkButton;
            #endregion

            // Click 'Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseUserLog
        /// </summary>
        public void CloseUserLog()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UILoggWindow.UILoggTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(20, 19));
        }
        
        /// <summary>
        /// DeleteCustomFilter
        /// </summary>
        public void DeleteCustomFilter()
        {
            #region Variable Declarations
            DXButton uISlettButton = this.UITilpassetvisningWindow.UIPnlToppButtonClient.UISlettButton;
            DXButton uIJAButton = this.UIGT4001InformasjonWindow.UIJAButton;
            #endregion

            // Click '&Slett' button
            Mouse.Click(uISlettButton, new Point(1, 1));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// DeleteUtjevning
        /// </summary>
        public void DeleteUtjevning()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIFjernutjevningRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon1.UIRpRosterPlanRibbonPage.UIGrpFunctionsRibbonPageGroup.UIFjernutjevningRibbonBaseButtonItem;
            DXButton uIJAButton = this.UIGT4003InformasjonWindow.UIJAButton;
            #endregion

            // Click 'Fjern utjevning' RibbonBaseButtonItem
            Mouse.Click(uIFjernutjevningRibbonBaseButtonItem, new Point(34, 35));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// EditDayRytmplan
        /// </summary>
        public void EditDayRytmplan()
        {
            #region Variable Declarations
            DXButton uIEndreButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIEndreButton;
            #endregion

            // Click '&Endre' button
            Mouse.Click(uIEndreButton, new Point(1, 1));
        }
        
        /// <summary>
        /// EditUtjevning
        /// </summary>
        public void EditUtjevning()
        {
            #region Variable Declarations
            DXRibbonButtonItem uILeggtilutjevningRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon1.UIRpRosterPlanRibbonPage.UIGrpFunctionsRibbonPageGroup.UILeggtilutjevningRibbonBaseButtonItem;
            #endregion

            // Click 'Legg til utjevning' RibbonBaseButtonItem
            Mouse.Click(uILeggtilutjevningRibbonBaseButtonItem, new Point(30, 24));
        }
        
        /// <summary>
        /// ExportShiftbookRoleView
        /// </summary>
        public void ExportShiftbookRoleView()
        {
            #region Variable Declarations
            DXMenuItem uISkrivutBarItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UISkrivutBarItem;
            DXMenuBaseButtonItem uIBtnExportDetailReporMenuBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UISkrivutBarItem.UIBtnExportDetailReporMenuBaseButtonItem;
            #endregion

            // Click 'Skriv ut' BarItem
            Mouse.Click(uISkrivutBarItem, new Point(43, 11));

            // Click 'btnExportDetailReport1' MenuBaseButtonItem
            Mouse.Click(uIBtnExportDetailReporMenuBaseButtonItem, new Point(81, 10));
        }
        
        /// <summary>
        /// ExportToXLSFromPreview
        /// </summary>
        public void ExportToXLSFromPreview()
        {
            #region Variable Declarations
            DXButton uIBarButtonItemLink0Button = this.UIForhåndsvisningWindow.UIRibbonControlRibbon.UIPrintPreviewRibbonPaRibbonPage.UIExportRibbonPageGroup.UIEksportertilRibbonItem.UIBarButtonItemLink0Button;
            DXTestControl uIXLSFilGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu.UIItemGalleryItemGroup.UIXLSFilGalleryItem;
            DXButton uIOKButton = this.UIEksportertilXLSWindow.UILayoutControl1Custom.UIRootLayoutGroup.UIGrpButtonsLayoutGroup.UILayoutControlItemOKLayoutControlItem.UIOKButton;
            #endregion

            // Click 'BarButtonItemLink[0]' button
            Mouse.Click(uIBarButtonItemLink0Button, new Point(30, 18));

            // Click 'XLS Fil' GalleryItem
            Mouse.Click(uIXLSFilGalleryItem, new Point(64, 21));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ExportToXLSXFromPreview
        /// </summary>
        public void ExportToXLSXFromPreview()
        {
            #region Variable Declarations
            DXButton uIBarButtonItemLink0Button = this.UIForhåndsvisningWindow.UIRibbonControlRibbon.UIPrintPreviewRibbonPaRibbonPage.UIExportRibbonPageGroup.UIEksportertilRibbonItem.UIBarButtonItemLink0Button;
            DXTestControl uIXLSXFilGalleryItem = this.UIItemWindow.UIGalleryDropDownBarCoMenu.UIItemGalleryItemGroup.UIXLSXFilGalleryItem;
            DXButton uIOKButton = this.UIEksportertilXLSXWindow.UILayoutControl1Custom.UIRootLayoutGroup.UIGrpButtonsLayoutGroup.UILayoutControlItemOKLayoutControlItem.UIOKButton;
            #endregion

            // Click 'BarButtonItemLink[0]' button
            Mouse.Click(uIBarButtonItemLink0Button, new Point(28, 18));

            // Click 'XLSX Fil' GalleryItem
            Mouse.Click(uIXLSXFilGalleryItem, new Point(86, 22));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// GenerateAMLCause - Use 'GenerateAMLCauseParams' to pass parameters into this method.
        /// </summary>
        public void GenerateAMLCause()
        {
            #region Variable Declarations
            DXLookUpEdit uIGSLookUpEditLookUpEdit = this.UIItemWindow10.UIGSLookUpEditLookUpEdit;
            DXTextEdit uIECommentEdit = this.UIItemWindow10.UIECommentEdit;
            DXButton uIOKButton = this.UIItemWindow10.UIOKButton;
            #endregion

            // Type 'System.String' in 'GSLookUpEdit' LookUpEdit
            //ValueTypeName
            uIGSLookUpEditLookUpEdit.ValueTypeName = this.GenerateAMLCauseParams.UIGSLookUpEditLookUpEditValueTypeName;

            // Type 'SYKDOM' in 'GSLookUpEdit' LookUpEdit
            //ValueAsString
            uIGSLookUpEditLookUpEdit.ValueAsString = this.GenerateAMLCauseParams.UIGSLookUpEditLookUpEditValueAsString;

            // Type 'Automatister test [SelectionStart]11' in 'eComment' text box
            //ValueAsString
            uIECommentEdit.ValueAsString = this.GenerateAMLCauseParams.UIECommentEditValueAsString;

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// GoToCurrentShiftDateArrow
        /// </summary>
        public void GoToCurrentShiftDateArrow()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uITodayBarBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UITodayBarBaseButtonItem;
            #endregion

            // Click 'Today' BarBaseButtonItem
            Mouse.Click(uITodayBarBaseButtonItem, new Point(12, 8));
        }
        
        /// <summary>
        /// GoToNextShiftDateArrow
        /// </summary>
        public void GoToNextShiftDateArrow()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uINextBarBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UINextBarBaseButtonItem;
            #endregion

            // Click 'Next' BarBaseButtonItem
            Mouse.Click(uINextBarBaseButtonItem, new Point(16, 12));
        }
        
        /// <summary>
        /// GoToPrevioushiftDateArrow
        /// </summary>
        public void GoToPrevioushiftDateArrow()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIPreviousBarBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIPreviousBarBaseButtonItem;
            #endregion

            // Click 'Previous' BarBaseButtonItem
            Mouse.Click(uIPreviousBarBaseButtonItem, new Point(14, 9));
        }
        
        /// <summary>
        /// MinGatLogOut
        /// </summary>
        public void MinGatLogOut()
        {
            #region Variable Declarations
            HtmlSpan uILoggutPane = this.UIStartsidenMinGatv202Window.UIForespørslerMinGatv2Document.UIMgmenufooterwrapperPane.UILoggutPane;
            #endregion
            this.UIStartsidenMinGatv202Window.DrawHighlight();
      
            // Click 'Logg ut' pane
            Mouse.Click(uILoggutPane, new Point(15, 8));
        }
        
        /// <summary>
        /// MinGatSelectBanks
        /// </summary>
        public void MinGatSelectBanks()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv202Window.UIForespørslerMinGatv2Document.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(12, -11));
        }
        
        /// <summary>
        /// MinGatSelectCalendar
        /// </summary>
        public void MinGatSelectCalendar()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink = this.UIVaktbokMinGatv202012Window.UIVaktbokMinGatv202012Document.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(12, 7));
        }
        
        /// <summary>
        /// MinGatSelectOpenMenu
        /// </summary>
        public void MinGatSelectOpenMenu()
        {
            #region Variable Declarations
            HtmlDiv uIMinGatPane1 = this.UIStartsidenMinGatv202Window.UIStartsidenMinGatv202Document.UIMinGatPane.UIMinGatPane1;
            #endregion
            this.UIStartsidenMinGatv202Window.DrawHighlight();
       
            // Click 'MinGat' pane
            Mouse.Click(uIMinGatPane1, new Point(39, 23));
        }
        
        /// <summary>
        /// MinGatSelectReminders
        /// </summary>
        public void MinGatSelectReminders()
        {
            #region Variable Declarations
            HtmlHyperlink uIItem2Hyperlink = this.UIStartsidenMinGatv202Window.UIStartsidenMinGatv202Document.UIRootQuickNavCustom.UIItem2Hyperlink;
            #endregion

            // Click '2' link
            Mouse.Click(uIItem2Hyperlink, new Point(18, 1));
        }
        
        /// <summary>
        /// MinGatSelectRequests
        /// </summary>
        public void MinGatSelectRequests()
        {
            #region Variable Declarations
            HtmlHyperlink uIItem0Hyperlink = this.UIStartsidenMinGatv202Window.UIPåminnelserMinGatv20Document.UIRootQuickNavCustom.UIItem0Hyperlink;
            #endregion
            UIStartsidenMinGatv202Window.DrawHighlight();
            uIItem0Hyperlink.WaitForControlReady();
            // Click '0' link
            Mouse.Click(uIItem0Hyperlink, new Point(19, 8));
        }
        
        /// <summary>
        /// MinGatSelectShiftbook
        /// </summary>
        public void MinGatSelectShiftbook()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv202Window.UIOppgavertidMinGatv20Document.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(22, -14));
        }
        
        /// <summary>
        /// MinGatSelectStartpage
        /// </summary>
        public void MinGatSelectStartpage()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv202Window.UIMinkalenderMinGatv20Document.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(20, -6));
        }
        
        /// <summary>
        /// MinGatSelectTaskView
        /// </summary>
        public void MinGatSelectTaskView()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv202Window.UIUkevisningMinGatv202Document.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(20, -3));
        }
        
        /// <summary>
        /// MinGatSelectWeekView
        /// </summary>
        public void MinGatSelectWeekView()
        {
            #region Variable Declarations
            HtmlHyperlink uIItemHyperlink = this.UIStartsidenMinGatv202Window.UIMinebankerMinGatv202Document.UIRootQuickNavCustom.UIItemHyperlink;
            #endregion

            // Click link
            Mouse.Click(uIItemHyperlink, new Point(12, 4));
        }
        
        /// <summary>
        /// OkClickEmpLayoutWindow
        /// </summary>
        public void OkClickEmpLayoutWindow()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIItemWindow1.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OkCreateCalendarplanCopy
        /// </summary>
        public void OkCreateCalendarplanCopy()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIItemWindow2.UIGSPanelControlClient.UIGSSimpleButtonButton;
            DXButton uIOKButton = this.UIGT3999InformasjonWindow.UIOKButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OkCreateMasterlistCopy
        /// </summary>
        public void OkCreateMasterlistCopy()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIItemWindow3.UIGSPanelControlClient.UIGSSimpleButtonButton;
            DXButton uIOKButton = this.UIGT3999InformasjonWindow.UIOKButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OkUtjevning
        /// </summary>
        public void OkUtjevning()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIUtjevningsvaktWindow.UIPnlButtonsClient.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OpenCostSimulationEmpPanel
        /// </summary>
        public void OpenCostSimulationEmpPanel()
        {
            #region Variable Declarations
            DXNavBarGroupButton uIAnsatteNavBarGroupButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UICostSimulationViewCustom.UIGsSplitContainerContSplitContainerControl.UISplitGroupPanelClient.UIGsNavBarControl1NavBar.UIAnsatteNavBarGroup.UIAnsatteNavBarGroupButton;
            #endregion

            // Click 'Ansatte' NavBarGroupButton
            Mouse.Click(uIAnsatteNavBarGroupButton, new Point(8, 9));
        }
        
        /// <summary>
        /// OpenDropdownInPlanSettingsWindow
        /// </summary>
        public void OpenDropdownInPlanSettingsWindow()
        {
            #region Variable Declarations
            DXButton uIEditorButton0Button = this.UIArbeidsplanoppsettWindow.UIGsTabControlTabList.UITabPersonGroupRosterClient.UIPnlFilterClient.UIGrpRuleTypeClient.UIPcEditEmployeePopupEdit.UIEditorButton0Button;
            #endregion

            // Click 'EditorButton0' button
            Mouse.Click(uIEditorButton0Button, new Point(12, 9));
        }
        
        /// <summary>
        /// OpenExcelFromRosterplanCalculations
        /// </summary>
        public void OpenExcelFromRosterplanCalculations()
        {
            #region Variable Declarations
            DXGrid uIGcExtraGridTable = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable;
            DXMenuBaseButtonItem uIBarButtonItemLink1MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink1MenuBaseButtonItem;
            #endregion

            // Right-Click 'gcExtraGrid' table
            Mouse.Click(uIGcExtraGridTable, MouseButtons.Right, ModifierKeys.None, new Point(201, 294));

            // Click 'BarButtonItemLink[1]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink1MenuBaseButtonItem, new Point(50, 14));
        }
        
        /// <summary>
        /// OpenFilterWindowInRoleAssignmentShiftbook
        /// </summary>
        public void OpenFilterWindowInRoleAssignmentShiftbook()
        {
            #region Variable Declarations
            DXButton uIGSDropDownButtonButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraPanelScrollableControl.UIGSDropDownButtonButton;
            #endregion

            // Click 'GSDropDownButton' button
            Mouse.Click(uIGSDropDownButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OpenLogForUser
        /// </summary>
        public void OpenLogForUser()
        {
            #region Variable Declarations
            WinClient uIItemClient = this.UIBrukeradministrasjonWindow.UIItemWindow.UIItemClient;
            WinMenuItem uIVisloggMenuItem = this.UIItemWindow14.UIContextMenu.UIVisloggMenuItem;
            #endregion

            // Right-Click client
            Mouse.Click(uIItemClient, MouseButtons.Right, ModifierKeys.None, new Point(38, 11));

            // Click 'Vis logg...' menu item
            Mouse.Click(uIVisloggMenuItem, new Point(69, 9));
        }
        
        /// <summary>
        /// OpenRoleSharingRegStatus
        /// </summary>
        public void OpenRoleSharingRegStatus()
        {
            #region Variable Declarations
            DXTestControl uITitleBarClient = this.UIOppgavedelingWindow.UITitleBarClient;
            #endregion

            // Click 'titleBar' client
            Mouse.Click(uITitleBarClient, new Point(382, 39));
        }
        
        /// <summary>
        /// OpenRosterplanApprovalLog
        /// </summary>
        public void OpenRosterplanApprovalLog()
        {
            #region Variable Declarations
            DXButton uIVisloggButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient1.UIApprovalViewCustom.UILcMainCustom.UIVisloggButton;
            #endregion

            // Click 'Vis logg' button
            Mouse.Click(uIVisloggButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OpenUtjevning
        /// </summary>
        public void OpenUtjevning()
        {
            #region Variable Declarations
            DXRibbonButtonItem uILeggtilutjevningRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon1.UIRpRosterPlanRibbonPage.UIGrpFunctionsRibbonPageGroup.UILeggtilutjevningRibbonBaseButtonItem;
            #endregion

            // Click 'Legg til utjevning' RibbonBaseButtonItem
            Mouse.Click(uILeggtilutjevningRibbonBaseButtonItem, new Point(29, 29));
        }
        
        /// <summary>
        /// PinRoleAssigmentDashboard
        /// </summary>
        public void PinRoleAssigmentDashboard()
        {
            #region Variable Declarations
            DXButton uIPinButtonButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIAutoHideControlClient.UILeftPanelDockPanel.UIPinButtonButton;
            #endregion

            // Click 'PinButton' button
            Mouse.Click(uIPinButtonButton, new Point(10, 11));
        }
        
        /// <summary>
        /// RecalculateAbsence
        /// </summary>
        public void RecalculateAbsence()
        {
            #region Variable Declarations
            DXButton uIBtnRecalcDeductPaymeButton = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient1.UIGrcSalaryClient.UIPnlRecalcDeductPaymeClient.UIBtnRecalcDeductPaymeButton;
            #endregion

            // Click 'btnRecalcDeductPayment' button
            Mouse.Click(uIBtnRecalcDeductPaymeButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RecalculateCallout
        /// </summary>
        public void RecalculateCallout()
        {
            #region Variable Declarations
            DXButton uIRekalkulerButton = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_tcMainTabList.UI_tpSalaryClient.UIRekalkulerButton;
            #endregion

            // Click 'Rekalkuler' button
            Mouse.Click(uIRekalkulerButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RecalculateInAbsenceWindow
        /// </summary>
        public void RecalculateInAbsenceWindow()
        {
            #region Variable Declarations
            DXButton uIBtnRecalcDeductPaymeButton = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient1.UIGrcSalaryClient.UIPnlRecalcDeductPaymeClient.UIBtnRecalcDeductPaymeButton;
            #endregion

            // Click 'btnRecalcDeductPayment' button
            Mouse.Click(uIBtnRecalcDeductPaymeButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RecalculateInRemaningWindow
        /// </summary>
        public void RecalculateInRemaningWindow()
        {
            #region Variable Declarations
            DXButton uILønnButton = this.UIForskyvningWindow.UIPanBottomPanelClient.UILønnButton;
            #endregion

            // Click 'lønn' button
            Mouse.Click(uILønnButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RecalculateInTimesheetTabRecalcWindow
        /// </summary>
        public void RecalculateInTimesheetTabRecalcWindow()
        {
            #region Variable Declarations
            DXButton uIRekalkulerButton = this.UIRekalkuleringWindow.UIPcContentClient.UIRekalkulerButton;
            #endregion

            // Click 'Rekalkuler' button
            Mouse.Click(uIRekalkulerButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RefreshDashboard
        /// </summary>
        public void RefreshDashboard()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uIBtnRefreshAllBarBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIBtnRefreshAllBarBaseButtonItem;
            #endregion

            // Click 'btnRefreshAll' BarBaseButtonItem
            Mouse.Click(uIBtnRefreshAllBarBaseButtonItem, new Point(18, 13));
        }
        
        /// <summary>
        /// RemoveAllRepresentations
        /// </summary>
        public void RemoveAllRepresentations()
        {
            #region Variable Declarations
            DXButton uIBtnRemoveAllButton = this.UIVelgrepresentanterWindow.UIGsLayoutControl1Custom.UILayoutControlGroup1LayoutGroup.UILayoutControlGroup2LayoutGroup.UILayoutControlItem8LayoutControlItem.UIBtnRemoveAllButton;
            #endregion

            // Click 'btnRemoveAll' button
            Mouse.Click(uIBtnRemoveAllButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RepealApprovalInApprovalTab
        /// </summary>
        public void RepealApprovalInApprovalTab()
        {
            #region Variable Declarations
            DXButton uIOpphevButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient1.UIApprovalViewCustom.UILcMainCustom.UIOpphevButton;
            DXButton uIJAButton = this.UIGT4006InformasjonWindow.UIJAButton;
            #endregion

            // Click 'Opphev' button
            Mouse.Click(uIOpphevButton, new Point(1, 1));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ResizeSettingsWindow
        /// </summary>
        public void ResizeSettingsWindow()
        {
            #region Variable Declarations
            DXButton uIMaximizeButton = this.UIArbeidsplanoppsettWindow1.UIMaximizeButton;
            #endregion

            // Click 'Maximize' button
            Mouse.Click(uIMaximizeButton, new Point(5, 8));
        }
        
        /// <summary>
        /// RotateRosterplanLeft
        /// </summary>
        public void RotateRosterplanLeft()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIRotermotvenstreRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon1.UIRpRosterPlanRibbonPage.UIGrpFunctionsRibbonPageGroup.UIRotermotvenstreRibbonBaseButtonItem;
            DXButton uIJAButton = this.UIRPL4047InformasjonWindow.UIJAButton;
            #endregion

            // Click 'Roter mot venstre' RibbonBaseButtonItem
            Mouse.Click(uIRotermotvenstreRibbonBaseButtonItem, new Point(29, 27));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// RotateRosterplanRight
        /// </summary>
        public void RotateRosterplanRight()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIRotermothøyreRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon1.UIRpRosterPlanRibbonPage.UIGrpFunctionsRibbonPageGroup.UIRotermothøyreRibbonBaseButtonItem;
            DXButton uIJAButton = this.UIRPL4046InformasjonWindow.UIJAButton;
            #endregion

            // Click 'Roter mot høyre' RibbonBaseButtonItem
            Mouse.Click(uIRotermothøyreRibbonBaseButtonItem, new Point(29, 41));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SaveAndCloseDepRosterplanSettings
        /// </summary>
        public void SaveAndCloseDepRosterplanSettings()
        {
            #region Variable Declarations
            DXButton uILagreLukkButton = this.UIArbeidsplanoppsettfoWindow.UIPnlButtonsClient.UILagreLukkButton;
            #endregion

            // Click '&Lagre Lukk' button
            Mouse.Click(uILagreLukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SaveAndCloseGlobalRosterplanSettings
        /// </summary>
        public void SaveAndCloseGlobalRosterplanSettings()
        {
            #region Variable Declarations
            DXButton uILagreLukkButton = this.UIGlobaltarbeidsplanopWindow.UIPnlButtonsClient.UILagreLukkButton;
            #endregion

            // Click '&Lagre Lukk' button
            Mouse.Click(uILagreLukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SaveDepRosterplanSettings
        /// </summary>
        public void SaveDepRosterplanSettings()
        {
            #region Variable Declarations
            DXButton uILagreButton = this.UIArbeidsplanoppsettfoWindow.UIPnlButtonsClient.UILagreButton;
            #endregion

            // Click 'Lagre' button
            Mouse.Click(uILagreButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectADM_AdministrasjonInPlanSettingsWindow - Use 'SelectADM_AdministrasjonInPlanSettingsWindowParams' to pass parameters into this method.
        /// </summary>
        public void SelectADM_AdministrasjonInPlanSettingsWindow()
        {
            #region Variable Declarations
            DXLookUpEdit uILePositionLookUpEdit = this.UIArbeidsplanoppsettfoWindow.UIPnlFilterClient.UIGrpRuleTypeClient.UILePositionLookUpEdit;
            DXWindow uIPopupLookUpEditFormWindow = this.UIArbeidsplanoppsettfoWindow.UIPnlFilterClient.UIGrpRuleTypeClient.UILePositionLookUpEdit.UIPopupLookUpEditFormWindow;
            #endregion

            // Type 'Gatsoft.Gat.DataModel.Simple.Position' in 'lePosition' LookUpEdit
            //ValueTypeName
            uILePositionLookUpEdit.ValueTypeName = this.SelectADM_AdministrasjonInPlanSettingsWindowParams.UILePositionLookUpEditValueTypeName;

            // Type '' in 'lePosition' LookUpEdit
            //ValueAsString
            uILePositionLookUpEdit.ValueAsString = this.SelectADM_AdministrasjonInPlanSettingsWindowParams.UILePositionLookUpEditValueAsString;

            // Click 'PopupLookUpEditForm' window
            Mouse.Click(uIPopupLookUpEditFormWindow, new Point(142, 9));
        }
        
        /// <summary>
        /// SelectAllEmpsInTransfereWindow
        /// </summary>
        public void SelectAllEmpsInTransfereWindow()
        {
            #region Variable Declarations
            DXColumnHeader uIDXCheckboxSelectorCoColumnHeader = this.UIOverførtilleggWindow.UIGcExportsTable.UIDXCheckboxSelectorCoColumnHeader;
            #endregion

            // Click 'DX$CheckboxSelectorColumn' column header
            Mouse.Click(uIDXCheckboxSelectorCoColumnHeader, new Point(21, 8));
        }
        
        /// <summary>
        /// SelectAllLinesInRosterplanApprovalTab
        /// </summary>
        public void SelectAllLinesInRosterplanApprovalTab()
        {
            #region Variable Declarations
            DXButton uIVelgalleButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient1.UIApprovalViewCustom.UILcMainCustom.UIVelgalleButton;
            #endregion

            // Click 'Velg alle' button
            Mouse.Click(uIVelgalleButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectAllLinesInRosterplanApprovalTabPlace4
        /// </summary>
        public void SelectAllLinesInRosterplanApprovalTabPlace4()
        {
            #region Variable Declarations
            DXButton uIVelgalleButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient.UIApprovalViewCustom.UILcMainCustom.UIVelgalleButton;
            #endregion

            // Click 'Velg alle' button
            Mouse.Click(uIVelgalleButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectAllLinesInRosterplanApprovalTabPlace5
        /// </summary>
        public void SelectAllLinesInRosterplanApprovalTabPlace5()
        {
            #region Variable Declarations
            DXButton uIVelgalleButton = this.UIArbeidsplanWindow.UIDpnlVisualizationDockPanel.UIDockPanel3_ContainerCustom.UITcSubtabsTabList.UIViewTabPageClient2.UIApprovalViewCustom.UILcMainCustom.UIVelgalleButton;
            #endregion

            // Click 'Velg alle' button
            Mouse.Click(uIVelgalleButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectAllRolesInEditFilterWindow
        /// </summary>
        public void SelectAllRolesInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uIVelgalleButton = this.UIDefinisjonavfilterfoWindow.UIPcRowSelectionClient.UIGcRowSelectorClient.UIVelgalleButton;
            #endregion

            // Click 'Velg alle' button
            Mouse.Click(uIVelgalleButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectAndOperationInF3SearchWindow - Use 'SelectAndOperationInF3SearchWindowParams' to pass parameters into this method.
        /// </summary>
        public void SelectAndOperationInF3SearchWindow()
        {
            #region Variable Declarations
            DXRadioGroup uIRgMultiTermLogicRadioGroup = this.UISøkilisteWindow.UIPnlSearchClient.UIRgMultiTermLogicRadioGroup;
            #endregion

            // Type '0' in 'rgMultiTermLogic' RadioGroup
            //SelectedIndex
            uIRgMultiTermLogicRadioGroup.SelectedIndex = this.SelectAndOperationInF3SearchWindowParams.UIRgMultiTermLogicRadioGroupSelectedIndex;
        }
        
        /// <summary>
        /// SelectBeregningsgrunnlagTabExtraWindow
        /// </summary>
        public void SelectBeregningsgrunnlagTabExtraWindow()
        {
            #region Variable Declarations
            DXTestControl uIXtraTabControlHeaderTabPage = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UIXtraTabControlHeaderTabPage;
            #endregion

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage, new Point(49, 8));
        }
        
        /// <summary>
        /// SelectCalloutDay1 - Use 'SelectCalloutDay1Params' to pass parameters into this method.
        /// </summary>
        public void SelectCalloutDay1()
        {
            #region Variable Declarations
            DXCheckBox uIItem27augusttirCheckBox = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_periodCreatorCustom.UIItem27augusttirCheckBox;
            #endregion

            // Select '27. august (tir.)' check box
            uIItem27augusttirCheckBox.Checked = this.SelectCalloutDay1Params.UIItem27augusttirCheckBoxChecked;
        }
        
        /// <summary>
        /// SelectCalloutDay2 - Use 'SelectCalloutDay2Params' to pass parameters into this method.
        /// </summary>
        public void SelectCalloutDay2()
        {
            #region Variable Declarations
            DXCheckBox uIItem28augustonsCheckBox = this.UIUtrykningWindow.UI_layoutControlCustom.UIRootLayoutGroup.UILayoutControlItem5LayoutControlItem.UI_tcRightTabList.UI_tpCalloutDetailsClient.UI_periodCreatorCustom.UIItem28augustonsCheckBox;
            #endregion

            // Select '28. august (ons.)' check box
            uIItem28augustonsCheckBox.Checked = this.SelectCalloutDay2Params.UIItem28augustonsCheckBoxChecked;
        }
        
        /// <summary>
        /// SelectCustomFilter
        /// </summary>
        public void SelectCustomFilter()
        {
            #region Variable Declarations
            DXRibbonEditItem uIBeiRosterPlanColumnSRibbonEditItem = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRpgFilterRibbonPageGroup.UIBeiRosterPlanColumnSRibbonEditItem;
            #endregion

            // Click 'beiRosterPlanColumnSetup' RibbonEditItem
            Mouse.Click(uIBeiRosterPlanColumnSRibbonEditItem, new Point(157, 9));
        }
        
        /// <summary>
        /// SelectDashboardAbsences
        /// </summary>
        public void SelectDashboardAbsences()
        {
            #region Variable Declarations
            DXNavBarGroup uIFravær1NavBarGroup = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UIFravær1NavBarGroup;
            #endregion

            // Click 'Fravær (1)' NavBarGroup
            Mouse.Click(uIFravær1NavBarGroup, new Point(67, 17));
        }
        
        /// <summary>
        /// SelectDashboardWhenUnpinned
        /// </summary>
        public void SelectDashboardWhenUnpinned()
        {
            #region Variable Declarations
            DXButton uIDashboardButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIAutoHideContainerClient.UIDashboardButton;
            #endregion

            // Click 'Dashboard' button
            Mouse.Click(uIDashboardButton, new Point(7, 32));
        }
        
        /// <summary>
        /// SelectDetailedRoleAssignmentInDashboard - Use 'SelectDetailedRoleAssignmentInDashboardParams' to pass parameters into this method.
        /// </summary>
        public void SelectDetailedRoleAssignmentInDashboard()
        {
            #region Variable Declarations
            DXCheckBox uIChkDetailedCheckBox = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingDockPanel.UIControlContainerCustom.UIGsPanelControl1Client.UIChkDetailedCheckBox;
            #endregion

            // Select 'chkDetailed' check box
            uIChkDetailedCheckBox.Checked = this.SelectDetailedRoleAssignmentInDashboardParams.UIChkDetailedCheckBoxChecked;
        }
        
        /// <summary>
        /// SelectDivCauseRemaning - Use 'SelectDivCauseRemaningParams' to pass parameters into this method.
        /// </summary>
        public void SelectDivCauseRemaning()
        {
            #region Variable Declarations
            DXLookUpEdit uILeOvertimeCodeLookUpEdit = this.UIForskyvningWindow.UIPanClientPanelClient.UIBnMenuNavBar.UINbgcOvertimeCodeScrollableControl.UILeOvertimeCodeLookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.DataModel.OvertimeCode' in 'leOvertimeCode' LookUpEdit
            //ValueTypeName
            uILeOvertimeCodeLookUpEdit.ValueTypeName = this.SelectDivCauseRemaningParams.UILeOvertimeCodeLookUpEditValueTypeName;

            // Type 'OvertimeCode(Id=242481501)' in 'leOvertimeCode' LookUpEdit
            //ValueAsString
            uILeOvertimeCodeLookUpEdit.ValueAsString = this.SelectDivCauseRemaningParams.UILeOvertimeCodeLookUpEditValueAsString;
        }
        
        /// <summary>
        /// SelectDivOvertimeCode - Use 'SelectDivOvertimeCodeParams' to pass parameters into this method.
        /// </summary>
        public void SelectDivOvertimeCode()
        {
            #region Variable Declarations
            DXLookUpEdit uICbOvertimeCodeLookUpEdit = this.UIMerarbeidovertidWindow.UIPanClientClient.UINbMenuNavBar.UINavBarGroupControlCoScrollableControl.UICbOvertimeCodeLookUpEdit;
            #endregion

            // Type 'Gatsoft.Gat.DataModel.OvertimeCode' in 'cbOvertimeCode' LookUpEdit
            //ValueTypeName
            uICbOvertimeCodeLookUpEdit.ValueTypeName = this.SelectDivOvertimeCodeParams.UICbOvertimeCodeLookUpEditValueTypeName;

            // Type 'OvertimeCode(Id=242481501)' in 'cbOvertimeCode' LookUpEdit
            //ValueAsString
            uICbOvertimeCodeLookUpEdit.ValueAsString = this.SelectDivOvertimeCodeParams.UICbOvertimeCodeLookUpEditValueAsString;
        }
        
        /// <summary>
        /// SelectDocumentAbsence - Use 'SelectDocumentAbsenceParams' to pass parameters into this method.
        /// </summary>
        public void SelectDocumentAbsence()
        {
            #region Variable Declarations
            DXLookUpEdit uILueDocumentsLookUpEdit = this.UIFraværsregistreringWindow.UIPnlAbsenceInformatioClient.UIGrcInformationClient.UINbcInformationNavBar.UINbgcDocumentsScrollableControl.UITcDocumentationTabList.UITabDocumentationClient.UIPnlDocumentationScrollableControl.UIPnlGenerateDocClient.UILueDocumentsLookUpEdit;
            DXWindow uIPopupLookUpEditFormWindow = this.UIFraværsregistreringWindow.UIPnlAbsenceInformatioClient.UIGrcInformationClient.UINbcInformationNavBar.UINbgcDocumentsScrollableControl.UITcDocumentationTabList.UITabDocumentationClient.UIPnlDocumentationScrollableControl.UIPnlGenerateDocClient.UILueDocumentsLookUpEdit.UIPopupLookUpEditFormWindow;
            #endregion

            // Type '' in 'lueDocuments' LookUpEdit
            //ValueAsString
            uILueDocumentsLookUpEdit.ValueAsString = this.SelectDocumentAbsenceParams.UILueDocumentsLookUpEditValueAsString;

            // Click 'PopupLookUpEditForm' window
            Mouse.Click(uIPopupLookUpEditFormWindow, new Point(50, 29));
        }
        
        /// <summary>
        /// SelectFirstCellInPlan
        /// </summary>
        public void SelectFirstCellInPlan()
        {
            #region Variable Declarations
            DXCell firstCellinPlan = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.FirstCellinPlan;
            #endregion

            // Click cell
            Mouse.Click(firstCellinPlan, new Point(13, 9));
        }
        
        /// <summary>
        /// SelectFirstNewRemanageShift
        /// </summary>
        public void SelectFirstNewRemanageShift()
        {
            #region Variable Declarations
            DXCell uIValgtCell = this.UIForskyvningWindow.UIPanClientPanelClient.UIGpcMainClient.UITcClientTabList.UITpMainClient.UIGpcShiftsClient.UIGcNewShiftsClient.UITcNewShiftTabList.UITpNewshiftGridClient.UIGNewShiftsTable.UIValgtCell;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell, new Point(13, 7));
        }
        
        /// <summary>
        /// SelectFullInfoFilter - Use 'SelectFullInfoFilterParams' to pass parameters into this method.
        /// </summary>
        public void SelectFullInfoFilter()
        {
            #region Variable Declarations
            DXRibbonEditItem uIBeiRosterPlanColumnSRibbonEditItem = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRpgFilterRibbonPageGroup.UIBeiRosterPlanColumnSRibbonEditItem;
            DXLookUpEdit uIGridLookUpEditLookUpEdit = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIGridLookUpEditLookUpEdit;
            #endregion

            // Click 'beiRosterPlanColumnSetup' RibbonEditItem
            Mouse.Click(uIBeiRosterPlanColumnSRibbonEditItem, new Point(139, 11));

            // Type 'Gatsoft.Gat.UI.Windows.Controls.Planning.RosterPlanning.Presentation.Columns.ViewModels.RosterPlanColumnSetupViewModel' in 'GridLookUpEdit' LookUpEdit
            //ValueTypeName
            uIGridLookUpEditLookUpEdit.ValueTypeName = this.SelectFullInfoFilterParams.UIGridLookUpEditLookUpEditValueTypeName;

            // Type 'Full stillingsinformasjon' in 'GridLookUpEdit' LookUpEdit
            //ValueAsString
            uIGridLookUpEditLookUpEdit.ValueAsString = this.SelectFullInfoFilterParams.UIGridLookUpEditLookUpEditValueAsString;
        }
        
        /// <summary>
        /// SelectL38InPlanSettingsWindow - Use 'SelectL38InPlanSettingsWindowParams' to pass parameters into this method.
        /// </summary>
        public void SelectL38InPlanSettingsWindow()
        {
            #region Variable Declarations
            DXLookUpEdit uILePositionLookUpEdit = this.UIArbeidsplanoppsettfoWindow.UIPnlFilterClient.UIGrpRuleTypeClient.UILePositionLookUpEdit;
            DXWindow uIPopupLookUpEditFormWindow = this.UIArbeidsplanoppsettfoWindow.UIPnlFilterClient.UIGrpRuleTypeClient.UILePositionLookUpEdit.UIPopupLookUpEditFormWindow;
            #endregion

            // Type 'Gatsoft.Gat.DataModel.Simple.Position' in 'lePosition' LookUpEdit
            //ValueTypeName
            uILePositionLookUpEdit.ValueTypeName = this.SelectL38InPlanSettingsWindowParams.UILePositionLookUpEditValueTypeName;

            // Type '' in 'lePosition' LookUpEdit
            //ValueAsString
            uILePositionLookUpEdit.ValueAsString = this.SelectL38InPlanSettingsWindowParams.UILePositionLookUpEditValueAsString;

            // Click 'PopupLookUpEditForm' window
            Mouse.Click(uIPopupLookUpEditFormWindow, new Point(93, 97));
        }
        
        /// <summary>
        /// SelectNameOnlyInfoFilter - Use 'SelectNameOnlyInfoFilterParams' to pass parameters into this method.
        /// </summary>
        public void SelectNameOnlyInfoFilter()
        {
            #region Variable Declarations
            DXRibbonEditItem uIBeiRosterPlanColumnSRibbonEditItem = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRpgFilterRibbonPageGroup.UIBeiRosterPlanColumnSRibbonEditItem;
            DXLookUpEdit uIGridLookUpEditLookUpEdit = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIGridLookUpEditLookUpEdit;
            #endregion

            // Click 'beiRosterPlanColumnSetup' RibbonEditItem
            Mouse.Click(uIBeiRosterPlanColumnSRibbonEditItem, new Point(139, 6));

            // Type 'Gatsoft.Gat.UI.Windows.Controls.Planning.RosterPlanning.Presentation.Columns.ViewModels.RosterPlanColumnSetupViewModel' in 'GridLookUpEdit' LookUpEdit
            //ValueTypeName
            uIGridLookUpEditLookUpEdit.ValueTypeName = this.SelectNameOnlyInfoFilterParams.UIGridLookUpEditLookUpEditValueTypeName;

            // Type 'Kun navn på ansatt' in 'GridLookUpEdit' LookUpEdit
            //ValueAsString
            uIGridLookUpEditLookUpEdit.ValueAsString = this.SelectNameOnlyInfoFilterParams.UIGridLookUpEditLookUpEditValueAsString;
        }
        
        /// <summary>
        /// SelectNewCustomFilter
        /// </summary>
        public void SelectNewCustomFilter()
        {
            #region Variable Declarations
            DXButton uINYButton = this.UITilpassetvisningWindow.UIPnlToppButtonClient.UINYButton;
            #endregion

            // Click '&Ny' button
            Mouse.Click(uINYButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SelectPartlyInfoFilter - Use 'SelectPartlyInfoFilterParams' to pass parameters into this method.
        /// </summary>
        public void SelectPartlyInfoFilter()
        {
            #region Variable Declarations
            DXRibbonEditItem uIBeiRosterPlanColumnSRibbonEditItem = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRpgFilterRibbonPageGroup.UIBeiRosterPlanColumnSRibbonEditItem;
            DXLookUpEdit uIGridLookUpEditLookUpEdit = this.UIArbeidsplanWindow.UIRosterPlanGridMenu1Custom.UIRcMenuRibbon.UIGridLookUpEditLookUpEdit;
            #endregion

            // Click 'beiRosterPlanColumnSetup' RibbonEditItem
            Mouse.Click(uIBeiRosterPlanColumnSRibbonEditItem, new Point(139, 6));

            // Type 'Gatsoft.Gat.UI.Windows.Controls.Planning.RosterPlanning.Presentation.Columns.ViewModels.RosterPlanColumnSetupViewModel' in 'GridLookUpEdit' LookUpEdit
            //ValueTypeName
            uIGridLookUpEditLookUpEdit.ValueTypeName = this.SelectPartlyInfoFilterParams.UIGridLookUpEditLookUpEditValueTypeName;

            // Type 'Delvis stillingsinformasjon' in 'GridLookUpEdit' LookUpEdit
            //ValueAsString
            uIGridLookUpEditLookUpEdit.ValueAsString = this.SelectPartlyInfoFilterParams.UIGridLookUpEditLookUpEditValueAsString;
        }
        
        /// <summary>
        /// SelectRoleAssigmentDashboardWhenPinned
        /// </summary>
        public void SelectRoleAssigmentDashboardWhenPinned()
        {
            #region Variable Declarations
            DXButton uIOppgavetildelingButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIOppgavetildelingButton;
            #endregion

            // Click 'Oppgavetildeling' button
            Mouse.Click(uIOppgavetildelingButton, new Point(47, 7));
        }
        
        /// <summary>
        /// SelectRoleAssigmentDashboardWhenUnpinned
        /// </summary>
        public void SelectRoleAssigmentDashboardWhenUnpinned()
        {
            #region Variable Declarations
            DXButton uIOppgavetildelingButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIAutoHideContainerClient.UIOppgavetildelingButton;
            #endregion

            // Click 'Oppgavetildeling' button
            Mouse.Click(uIOppgavetildelingButton, new Point(10, 50));
        }
        
        /// <summary>
        /// SelectRoleAssignmentEmployeeView
        /// </summary>
        public void SelectRoleAssignmentEmployeeView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIAnsattvisningRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgViewRibbonPageGroup.UIAnsattvisningRibbonBaseButtonItem;
            #endregion

            // Click 'Ansattvisning' RibbonBaseButtonItem
            Mouse.Click(uIAnsattvisningRibbonBaseButtonItem, new Point(24, 26));
        }
        
        /// <summary>
        /// SelectRoleAssignmentTaskView
        /// </summary>
        public void SelectRoleAssignmentTaskView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIOppgavevisningRibbonBaseButtonItem = this.UIOppgavetildelingWindow.UIRcMenuRibbon.UIRpgHomeRibbonPage.UIRpgViewRibbonPageGroup.UIOppgavevisningRibbonBaseButtonItem;
            #endregion

            // Click 'Oppgavevisning' RibbonBaseButtonItem
            Mouse.Click(uIOppgavevisningRibbonBaseButtonItem, new Point(25, 26));
        }
        
        /// <summary>
        /// SelectShiftBookDayView
        /// </summary>
        public void SelectShiftBookDayView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIDagRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpViewModeRibbonPageGroup.UIDagRibbonBaseButtonItem;
            #endregion

            // Click 'Dag' RibbonBaseButtonItem
            Mouse.Click(uIDagRibbonBaseButtonItem, new Point(31, 10));
        }
        
        /// <summary>
        /// SelectShiftBookWeekView
        /// </summary>
        public void SelectShiftBookWeekView()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIUkeRibbonBaseButtonItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIRibbonControlRibbon.UIRpMainMenuRibbonPage.UIGrpViewModeRibbonPageGroup.UIUkeRibbonBaseButtonItem;
            #endregion

            // Click 'Uke' RibbonBaseButtonItem
            Mouse.Click(uIUkeRibbonBaseButtonItem, new Point(24, 10));
        }
        
        /// <summary>
        /// SelectShowInformationRosterplanCalk
        /// </summary>
        public void SelectShowInformationRosterplanCalk()
        {
            #region Variable Declarations
            DXRibbonEditItem uIDdlCustomizeColumnsRibbonEditItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpFilterRibbonPage.UIRpgFilterRibbonPageGroup.UIDdlCustomizeColumnsRibbonEditItem;
            DXListBoxItem uIArbeidsplanberegningListItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIComboBoxEditComboBox.UIComboBoxPopupListBoxWindow.UIComboBoxPopupListBoxList.UIArbeidsplanberegningListItem;
            #endregion

            // Click 'ddlCustomizeColumns' RibbonEditItem
            Mouse.Click(uIDdlCustomizeColumnsRibbonEditItem, new Point(156, 13));

            // Click 'Arbeidsplanberegning' list item
            Mouse.Click(uIArbeidsplanberegningListItem, new Point(91, 11));
        }
        
        /// <summary>
        /// SelectShowWeek0AndN1Filter
        /// </summary>
        public void SelectShowWeek0AndN1Filter()
        {
            #region Variable Declarations
            DXRibbonEditItem uICbShowExtendedWeeksRibbonEditItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpFilterRibbonPage.UIGrpFilterAndVisualRibbonPageGroup.UICbShowExtendedWeeksRibbonEditItem;
            #endregion

            // Click 'cbShowExtendedWeeks' RibbonEditItem
            Mouse.Click(uICbShowExtendedWeeksRibbonEditItem, new Point(11, 10));
        }
        
        /// <summary>
        /// SelectTurnusInPlanSettingsWindow - Use 'SelectTurnusInPlanSettingsWindowParams' to pass parameters into this method.
        /// </summary>
        public void SelectTurnusInPlanSettingsWindow()
        {
            #region Variable Declarations
            DXLookUpEdit uILePositionLookUpEdit = this.UIArbeidsplanoppsettfoWindow.UIPnlFilterClient.UIGrpRuleTypeClient.UILePositionLookUpEdit;
            DXWindow uIPopupLookUpEditFormWindow = this.UIArbeidsplanoppsettfoWindow.UIPnlFilterClient.UIGrpRuleTypeClient.UILePositionLookUpEdit.UIPopupLookUpEditFormWindow;
            #endregion

            // Type 'Gatsoft.Gat.DataModel.Simple.Position' in 'lePosition' LookUpEdit
            //ValueTypeName
            uILePositionLookUpEdit.ValueTypeName = this.SelectTurnusInPlanSettingsWindowParams.UILePositionLookUpEditValueTypeName;

            // Type '' in 'lePosition' LookUpEdit
            //ValueAsString
            uILePositionLookUpEdit.ValueAsString = this.SelectTurnusInPlanSettingsWindowParams.UILePositionLookUpEditValueAsString;

            // Click 'PopupLookUpEditForm' window
            Mouse.Click(uIPopupLookUpEditFormWindow, new Point(83, 159));
        }
        
        /// <summary>
        /// SelectVaktTimegrunnlagTabExtraWindow
        /// </summary>
        public void SelectVaktTimegrunnlagTabExtraWindow()
        {
            #region Variable Declarations
            DXTestControl uIXtraTabControlHeaderTabPage1 = this.UIMerarbeidovertidWindow.UIPanClientClient.UITcClientTabList.UITpMainClient.UITcExtraDetailTabList.UIXtraTabControlHeaderTabPage1;
            #endregion

            // Click 'XtraTabControlHeader' tab
            Mouse.Click(uIXtraTabControlHeaderTabPage1, new Point(59, 9));
        }
        
        /// <summary>
        /// SelectWeeksumLineAndTotalFilter - Use 'SelectWeeksumLineAndTotalFilterParams' to pass parameters into this method.
        /// </summary>
        public void SelectWeeksumLineAndTotalFilter()
        {
            #region Variable Declarations
            DXRibbonEditItem uIUkesumRibbonEditItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpFilterRibbonPage.UIGrpFilterAndVisualRibbonPageGroup.UIUkesumRibbonEditItem;
            DXRadioGroup uIRgSumFilterRadioGroup = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIPopupContainerEditPopupEdit.UIPopupContainerFormWindow.UIPccSumFilterClient.UIPcSumFilterClient.UIRgSumFilterRadioGroup;
            #endregion

            // Click 'Ukesum' RibbonEditItem
            Mouse.Click(uIUkesumRibbonEditItem, new Point(170, 9));

            // Type '2' in 'rgSumFilter' RadioGroup
            //SelectedIndex
            uIRgSumFilterRadioGroup.SelectedIndex = this.SelectWeeksumLineAndTotalFilterParams.UIRgSumFilterRadioGroupSelectedIndex;
        }
        
        /// <summary>
        /// SelectWeeksumShowTotalOnlyFilter - Use 'SelectWeeksumShowTotalOnlyFilterParams' to pass parameters into this method.
        /// </summary>
        public void SelectWeeksumShowTotalOnlyFilter()
        {
            #region Variable Declarations
            DXRibbonEditItem uIUkesumRibbonEditItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpFilterRibbonPage.UIGrpFilterAndVisualRibbonPageGroup.UIUkesumRibbonEditItem;
            DXRadioGroup uIRgSumFilterRadioGroup = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIPopupContainerEditPopupEdit.UIPopupContainerFormWindow.UIPccSumFilterClient.UIPcSumFilterClient.UIRgSumFilterRadioGroup;
            #endregion

            // Click 'Ukesum' RibbonEditItem
            Mouse.Click(uIUkesumRibbonEditItem, new Point(170, 10));

            // Type '1' in 'rgSumFilter' RadioGroup
            //SelectedIndex
            uIRgSumFilterRadioGroup.SelectedIndex = this.SelectWeeksumShowTotalOnlyFilterParams.UIRgSumFilterRadioGroupSelectedIndex;
        }
        
        /// <summary>
        /// SelectWholeRosterplan - Use 'SelectWholeRosterplanParams' to pass parameters into this method.
        /// </summary>
        public void SelectWholeRosterplan()
        {
            #region Variable Declarations
            WinClient uIDesktop1Client = this.UIItemWindow8.UIDesktop1Client;
            DXMenu uIPopupMenuBarControlMenu = this.UIItemWindow8.UIPopupMenuBarControlMenu;
            #endregion

            // Right-Click client
            Mouse.Click(uIDesktop1Client, MouseButtons.Right, ModifierKeys.None, new Point(140, 252));

            // Type '{Tab}{Tab}{ENTER}' in 'PopupMenuBarControl' popup menu
            Keyboard.SendKeys(uIPopupMenuBarControlMenu, this.SelectWholeRosterplanParams.UIPopupMenuBarControlMenuSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// SelectWholeRosterplanFromEmpCol
        /// </summary>
        public void SelectWholeRosterplanFromEmpCol()
        {
            #region Variable Declarations
            DXCell uIItem10HelgCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem10HelgCell;
            DXMenuBaseButtonItem uIMerkalleMenuBaseButtonItem = this.UIItemWindow12.UIPopupMenuBarControlMenu.UIMerkalleMenuBaseButtonItem;
            #endregion

            // Right-Click '10, Helg' cell
            Mouse.Click(uIItem10HelgCell, MouseButtons.Right, ModifierKeys.None, new Point(19, 8));

            // Click 'Merk alle' MenuBaseButtonItem
            Mouse.Click(uIMerkalleMenuBaseButtonItem, new Point(68, 12));
        }
        
        /// <summary>
        /// SortReportsById
        /// </summary>
        public void SortReportsById()
        {
            #region Variable Declarations
            WinClient uIPanel1Client = this.UIGatWindow.UIItemWindow2.UIPanel1Client;
            #endregion

            // Click 'Panel1' client
            Mouse.Click(uIPanel1Client, new Point(33, 9));
        }
        
        /// <summary>
        /// UncheckAllEmployeesInNewRosterplanWindow
        /// </summary>
        public void UncheckAllEmployeesInNewRosterplanWindow()
        {
            #region Variable Declarations
            DXButton uIVelgingenButton = this.UINyarbeidsplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem4LayoutControlItem.UIPnlRuleButtonsClient.UIVelgingenButton;
            #endregion

            // Click 'Velg ingen' button
            Mouse.Click(uIVelgingenButton, new Point(1, 1));
        }
        
        /// <summary>
        /// UnCheckAmlReport7UseCalculatedAmlViolation - Use 'UnCheckAmlReport7UseCalculatedAmlViolationParams' to pass parameters into this method.
        /// </summary>
        public void UnCheckAmlReport7UseCalculatedAmlViolation()
        {
            #region Variable Declarations
            WinCheckBox uIBrukkalkulerteAMLbruCheckBox = this.UIGatWindow.UIItemWindow1.UITimelisteClient.UIBrukkalkulerteAMLbruCheckBox;
            #endregion

            // Clear 'Bruk kalkulerte AML brudd OBS! Utdatert!' check box
            uIBrukkalkulerteAMLbruCheckBox.Checked = this.UnCheckAmlReport7UseCalculatedAmlViolationParams.UIBrukkalkulerteAMLbruCheckBoxChecked;
        }
        
        /// <summary>
        /// UnCheckDoUseWeek0AndNPlus1InPlanSettings - Use 'UnCheckDoUseWeek0AndNPlus1InPlanSettingsParams' to pass parameters into this method.
        /// </summary>
        public void UnCheckDoUseWeek0AndNPlus1InPlanSettings()
        {
            #region Variable Declarations
            DXCheckBox uIChkDoUseWeek0AndNPluCheckBox = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIChkDoUseWeek0AndNPluCheckBox;
            #endregion

            // Clear 'chkDoUseWeek0AndNPlus1' check box
            uIChkDoUseWeek0AndNPluCheckBox.Checked = this.UnCheckDoUseWeek0AndNPlus1InPlanSettingsParams.UIChkDoUseWeek0AndNPluCheckBoxChecked;
        }
        
        /// <summary>
        /// UnPinRoleAssigmentDashboard
        /// </summary>
        public void UnPinRoleAssigmentDashboard()
        {
            #region Variable Declarations
            DXButton uIPinButtonButton = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIPinButtonButton;
            #endregion

            // Click 'PinButton' button
            Mouse.Click(uIPinButtonButton, new Point(8, 7));
        }
        
        /// <summary>
        /// UnSelectAllRolesInEditFilterWindow
        /// </summary>
        public void UnSelectAllRolesInEditFilterWindow()
        {
            #region Variable Declarations
            DXButton uIVelgingenButton = this.UIDefinisjonavfilterfoWindow.UIPcRowSelectionClient.UIGcRowSelectorClient.UIVelgingenButton;
            #endregion

            // Click 'Velg ingen' button
            Mouse.Click(uIVelgingenButton, new Point(1, 1));
        }
        
        /// <summary>
        /// UnSelectShowWeek0AndN1Filter
        /// </summary>
        public void UnSelectShowWeek0AndN1Filter()
        {
            #region Variable Declarations
            DXRibbonEditItem uICbShowExtendedWeeksRibbonEditItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpFilterRibbonPage.UIGrpFilterAndVisualRibbonPageGroup.UICbShowExtendedWeeksRibbonEditItem;
            #endregion

            // Click 'cbShowExtendedWeeks' RibbonEditItem
            Mouse.Click(uICbShowExtendedWeeksRibbonEditItem, new Point(9, 10));
        }
        
        /// <summary>
        /// XCloseExportLogWindow
        /// </summary>
        public void XCloseExportLogWindow()
        {
            #region Variable Declarations
            DXButton uICloseButton = this.UIItemWindow6.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(9, 10));
        }
        
        #region Properties
        public virtual CheckAmlReport7UseCalculatedAmlViolationParams CheckAmlReport7UseCalculatedAmlViolationParams
        {
            get
            {
                if ((this.mCheckAmlReport7UseCalculatedAmlViolationParams == null))
                {
                    this.mCheckAmlReport7UseCalculatedAmlViolationParams = new CheckAmlReport7UseCalculatedAmlViolationParams();
                }
                return this.mCheckAmlReport7UseCalculatedAmlViolationParams;
            }
        }
        
        public virtual CheckCloseRosterplanButtonPlanTabExistsExpectedValues CheckCloseRosterplanButtonPlanTabExistsExpectedValues
        {
            get
            {
                if ((this.mCheckCloseRosterplanButtonPlanTabExistsExpectedValues == null))
                {
                    this.mCheckCloseRosterplanButtonPlanTabExistsExpectedValues = new CheckCloseRosterplanButtonPlanTabExistsExpectedValues();
                }
                return this.mCheckCloseRosterplanButtonPlanTabExistsExpectedValues;
            }
        }
        
        public virtual CheckDocumentationAbsenceParams CheckDocumentationAbsenceParams
        {
            get
            {
                if ((this.mCheckDocumentationAbsenceParams == null))
                {
                    this.mCheckDocumentationAbsenceParams = new CheckDocumentationAbsenceParams();
                }
                return this.mCheckDocumentationAbsenceParams;
            }
        }
        
        public virtual CheckDoUseWeek0AndNPlus1InPlanSettingsParams CheckDoUseWeek0AndNPlus1InPlanSettingsParams
        {
            get
            {
                if ((this.mCheckDoUseWeek0AndNPlus1InPlanSettingsParams == null))
                {
                    this.mCheckDoUseWeek0AndNPlus1InPlanSettingsParams = new CheckDoUseWeek0AndNPlus1InPlanSettingsParams();
                }
                return this.mCheckDoUseWeek0AndNPlus1InPlanSettingsParams;
            }
        }
        
        public virtual CheckEffectuationButtonDisabledExpectedValues CheckEffectuationButtonDisabledExpectedValues
        {
            get
            {
                if ((this.mCheckEffectuationButtonDisabledExpectedValues == null))
                {
                    this.mCheckEffectuationButtonDisabledExpectedValues = new CheckEffectuationButtonDisabledExpectedValues();
                }
                return this.mCheckEffectuationButtonDisabledExpectedValues;
            }
        }
        
        public virtual CheckEffectuationDisabledExpectedValues CheckEffectuationDisabledExpectedValues
        {
            get
            {
                if ((this.mCheckEffectuationDisabledExpectedValues == null))
                {
                    this.mCheckEffectuationDisabledExpectedValues = new CheckEffectuationDisabledExpectedValues();
                }
                return this.mCheckEffectuationDisabledExpectedValues;
            }
        }
        
        public virtual CheckNewHelpplanWindowTasksDraftUncheckedExpectedValues CheckNewHelpplanWindowTasksDraftUncheckedExpectedValues
        {
            get
            {
                if ((this.mCheckNewHelpplanWindowTasksDraftUncheckedExpectedValues == null))
                {
                    this.mCheckNewHelpplanWindowTasksDraftUncheckedExpectedValues = new CheckNewHelpplanWindowTasksDraftUncheckedExpectedValues();
                }
                return this.mCheckNewHelpplanWindowTasksDraftUncheckedExpectedValues;
            }
        }
        
        public virtual CheckOkDisabledInRejectCommentWindowExpectedValues CheckOkDisabledInRejectCommentWindowExpectedValues
        {
            get
            {
                if ((this.mCheckOkDisabledInRejectCommentWindowExpectedValues == null))
                {
                    this.mCheckOkDisabledInRejectCommentWindowExpectedValues = new CheckOkDisabledInRejectCommentWindowExpectedValues();
                }
                return this.mCheckOkDisabledInRejectCommentWindowExpectedValues;
            }
        }
        
        public virtual CheckShowCoverageBreaksParams CheckShowCoverageBreaksParams
        {
            get
            {
                if ((this.mCheckShowCoverageBreaksParams == null))
                {
                    this.mCheckShowCoverageBreaksParams = new CheckShowCoverageBreaksParams();
                }
                return this.mCheckShowCoverageBreaksParams;
            }
        }
        
        public virtual CheckShowOnlyForSelectedEmpInWarningsSubTabParams CheckShowOnlyForSelectedEmpInWarningsSubTabParams
        {
            get
            {
                if ((this.mCheckShowOnlyForSelectedEmpInWarningsSubTabParams == null))
                {
                    this.mCheckShowOnlyForSelectedEmpInWarningsSubTabParams = new CheckShowOnlyForSelectedEmpInWarningsSubTabParams();
                }
                return this.mCheckShowOnlyForSelectedEmpInWarningsSubTabParams;
            }
        }
        
        public virtual CheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams CheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams
        {
            get
            {
                if ((this.mCheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams == null))
                {
                    this.mCheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams = new CheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams();
                }
                return this.mCheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams;
            }
        }
        
        public virtual CleanUpMinGatIISParams CleanUpMinGatIISParams
        {
            get
            {
                if ((this.mCleanUpMinGatIISParams == null))
                {
                    this.mCleanUpMinGatIISParams = new CleanUpMinGatIISParams();
                }
                return this.mCleanUpMinGatIISParams;
            }
        }
        
        public virtual GenerateAMLCauseParams GenerateAMLCauseParams
        {
            get
            {
                if ((this.mGenerateAMLCauseParams == null))
                {
                    this.mGenerateAMLCauseParams = new GenerateAMLCauseParams();
                }
                return this.mGenerateAMLCauseParams;
            }
        }
        
        public virtual SelectADM_AdministrasjonInPlanSettingsWindowParams SelectADM_AdministrasjonInPlanSettingsWindowParams
        {
            get
            {
                if ((this.mSelectADM_AdministrasjonInPlanSettingsWindowParams == null))
                {
                    this.mSelectADM_AdministrasjonInPlanSettingsWindowParams = new SelectADM_AdministrasjonInPlanSettingsWindowParams();
                }
                return this.mSelectADM_AdministrasjonInPlanSettingsWindowParams;
            }
        }
        
        public virtual SelectAndOperationInF3SearchWindowParams SelectAndOperationInF3SearchWindowParams
        {
            get
            {
                if ((this.mSelectAndOperationInF3SearchWindowParams == null))
                {
                    this.mSelectAndOperationInF3SearchWindowParams = new SelectAndOperationInF3SearchWindowParams();
                }
                return this.mSelectAndOperationInF3SearchWindowParams;
            }
        }
        
        public virtual SelectCalloutDay1Params SelectCalloutDay1Params
        {
            get
            {
                if ((this.mSelectCalloutDay1Params == null))
                {
                    this.mSelectCalloutDay1Params = new SelectCalloutDay1Params();
                }
                return this.mSelectCalloutDay1Params;
            }
        }
        
        public virtual SelectCalloutDay2Params SelectCalloutDay2Params
        {
            get
            {
                if ((this.mSelectCalloutDay2Params == null))
                {
                    this.mSelectCalloutDay2Params = new SelectCalloutDay2Params();
                }
                return this.mSelectCalloutDay2Params;
            }
        }
        
        public virtual SelectDetailedRoleAssignmentInDashboardParams SelectDetailedRoleAssignmentInDashboardParams
        {
            get
            {
                if ((this.mSelectDetailedRoleAssignmentInDashboardParams == null))
                {
                    this.mSelectDetailedRoleAssignmentInDashboardParams = new SelectDetailedRoleAssignmentInDashboardParams();
                }
                return this.mSelectDetailedRoleAssignmentInDashboardParams;
            }
        }
        
        public virtual SelectDivCauseRemaningParams SelectDivCauseRemaningParams
        {
            get
            {
                if ((this.mSelectDivCauseRemaningParams == null))
                {
                    this.mSelectDivCauseRemaningParams = new SelectDivCauseRemaningParams();
                }
                return this.mSelectDivCauseRemaningParams;
            }
        }
        
        public virtual SelectDivOvertimeCodeParams SelectDivOvertimeCodeParams
        {
            get
            {
                if ((this.mSelectDivOvertimeCodeParams == null))
                {
                    this.mSelectDivOvertimeCodeParams = new SelectDivOvertimeCodeParams();
                }
                return this.mSelectDivOvertimeCodeParams;
            }
        }
        
        public virtual SelectDocumentAbsenceParams SelectDocumentAbsenceParams
        {
            get
            {
                if ((this.mSelectDocumentAbsenceParams == null))
                {
                    this.mSelectDocumentAbsenceParams = new SelectDocumentAbsenceParams();
                }
                return this.mSelectDocumentAbsenceParams;
            }
        }
        
        public virtual SelectFullInfoFilterParams SelectFullInfoFilterParams
        {
            get
            {
                if ((this.mSelectFullInfoFilterParams == null))
                {
                    this.mSelectFullInfoFilterParams = new SelectFullInfoFilterParams();
                }
                return this.mSelectFullInfoFilterParams;
            }
        }
        
        public virtual SelectL38InPlanSettingsWindowParams SelectL38InPlanSettingsWindowParams
        {
            get
            {
                if ((this.mSelectL38InPlanSettingsWindowParams == null))
                {
                    this.mSelectL38InPlanSettingsWindowParams = new SelectL38InPlanSettingsWindowParams();
                }
                return this.mSelectL38InPlanSettingsWindowParams;
            }
        }
        
        public virtual SelectNameOnlyInfoFilterParams SelectNameOnlyInfoFilterParams
        {
            get
            {
                if ((this.mSelectNameOnlyInfoFilterParams == null))
                {
                    this.mSelectNameOnlyInfoFilterParams = new SelectNameOnlyInfoFilterParams();
                }
                return this.mSelectNameOnlyInfoFilterParams;
            }
        }
        
        public virtual SelectPartlyInfoFilterParams SelectPartlyInfoFilterParams
        {
            get
            {
                if ((this.mSelectPartlyInfoFilterParams == null))
                {
                    this.mSelectPartlyInfoFilterParams = new SelectPartlyInfoFilterParams();
                }
                return this.mSelectPartlyInfoFilterParams;
            }
        }
        
        public virtual SelectTurnusInPlanSettingsWindowParams SelectTurnusInPlanSettingsWindowParams
        {
            get
            {
                if ((this.mSelectTurnusInPlanSettingsWindowParams == null))
                {
                    this.mSelectTurnusInPlanSettingsWindowParams = new SelectTurnusInPlanSettingsWindowParams();
                }
                return this.mSelectTurnusInPlanSettingsWindowParams;
            }
        }
        
        public virtual SelectWeeksumLineAndTotalFilterParams SelectWeeksumLineAndTotalFilterParams
        {
            get
            {
                if ((this.mSelectWeeksumLineAndTotalFilterParams == null))
                {
                    this.mSelectWeeksumLineAndTotalFilterParams = new SelectWeeksumLineAndTotalFilterParams();
                }
                return this.mSelectWeeksumLineAndTotalFilterParams;
            }
        }
        
        public virtual SelectWeeksumShowTotalOnlyFilterParams SelectWeeksumShowTotalOnlyFilterParams
        {
            get
            {
                if ((this.mSelectWeeksumShowTotalOnlyFilterParams == null))
                {
                    this.mSelectWeeksumShowTotalOnlyFilterParams = new SelectWeeksumShowTotalOnlyFilterParams();
                }
                return this.mSelectWeeksumShowTotalOnlyFilterParams;
            }
        }
        
        public virtual SelectWholeRosterplanParams SelectWholeRosterplanParams
        {
            get
            {
                if ((this.mSelectWholeRosterplanParams == null))
                {
                    this.mSelectWholeRosterplanParams = new SelectWholeRosterplanParams();
                }
                return this.mSelectWholeRosterplanParams;
            }
        }
        
        public virtual UnCheckAmlReport7UseCalculatedAmlViolationParams UnCheckAmlReport7UseCalculatedAmlViolationParams
        {
            get
            {
                if ((this.mUnCheckAmlReport7UseCalculatedAmlViolationParams == null))
                {
                    this.mUnCheckAmlReport7UseCalculatedAmlViolationParams = new UnCheckAmlReport7UseCalculatedAmlViolationParams();
                }
                return this.mUnCheckAmlReport7UseCalculatedAmlViolationParams;
            }
        }
        
        public virtual UnCheckDoUseWeek0AndNPlus1InPlanSettingsParams UnCheckDoUseWeek0AndNPlus1InPlanSettingsParams
        {
            get
            {
                if ((this.mUnCheckDoUseWeek0AndNPlus1InPlanSettingsParams == null))
                {
                    this.mUnCheckDoUseWeek0AndNPlus1InPlanSettingsParams = new UnCheckDoUseWeek0AndNPlus1InPlanSettingsParams();
                }
                return this.mUnCheckDoUseWeek0AndNPlus1InPlanSettingsParams;
            }
        }
        
        public UIForhåndsvisningWindow UIForhåndsvisningWindow
        {
            get
            {
                if ((this.mUIForhåndsvisningWindow == null))
                {
                    this.mUIForhåndsvisningWindow = new UIForhåndsvisningWindow();
                }
                return this.mUIForhåndsvisningWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIEksportertilXLSWindow UIEksportertilXLSWindow
        {
            get
            {
                if ((this.mUIEksportertilXLSWindow == null))
                {
                    this.mUIEksportertilXLSWindow = new UIEksportertilXLSWindow();
                }
                return this.mUIEksportertilXLSWindow;
            }
        }
        
        public UIEksportertilXLSXWindow UIEksportertilXLSXWindow
        {
            get
            {
                if ((this.mUIEksportertilXLSXWindow == null))
                {
                    this.mUIEksportertilXLSXWindow = new UIEksportertilXLSXWindow();
                }
                return this.mUIEksportertilXLSXWindow;
            }
        }
        
        public UIFraværsregistreringWindow UIFraværsregistreringWindow
        {
            get
            {
                if ((this.mUIFraværsregistreringWindow == null))
                {
                    this.mUIFraværsregistreringWindow = new UIFraværsregistreringWindow();
                }
                return this.mUIFraværsregistreringWindow;
            }
        }
        
        public UIMicrosoftExcelWindow UIMicrosoftExcelWindow
        {
            get
            {
                if ((this.mUIMicrosoftExcelWindow == null))
                {
                    this.mUIMicrosoftExcelWindow = new UIMicrosoftExcelWindow();
                }
                return this.mUIMicrosoftExcelWindow;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        
        public UIByttansattWindow UIByttansattWindow
        {
            get
            {
                if ((this.mUIByttansattWindow == null))
                {
                    this.mUIByttansattWindow = new UIByttansattWindow();
                }
                return this.mUIByttansattWindow;
            }
        }
        
        public UITilpassetvisningWindow UITilpassetvisningWindow
        {
            get
            {
                if ((this.mUITilpassetvisningWindow == null))
                {
                    this.mUITilpassetvisningWindow = new UITilpassetvisningWindow();
                }
                return this.mUITilpassetvisningWindow;
            }
        }
        
        public UIStartsidenMinGatv201Window UIStartsidenMinGatv201Window
        {
            get
            {
                if ((this.mUIStartsidenMinGatv201Window == null))
                {
                    this.mUIStartsidenMinGatv201Window = new UIStartsidenMinGatv201Window();
                }
                return this.mUIStartsidenMinGatv201Window;
            }
        }
        
        public UINewProgressBarFormWindow UINewProgressBarFormWindow
        {
            get
            {
                if ((this.mUINewProgressBarFormWindow == null))
                {
                    this.mUINewProgressBarFormWindow = new UINewProgressBarFormWindow();
                }
                return this.mUINewProgressBarFormWindow;
            }
        }
        
        public UIArbeidsplanoppsettfoWindow UIArbeidsplanoppsettfoWindow
        {
            get
            {
                if ((this.mUIArbeidsplanoppsettfoWindow == null))
                {
                    this.mUIArbeidsplanoppsettfoWindow = new UIArbeidsplanoppsettfoWindow();
                }
                return this.mUIArbeidsplanoppsettfoWindow;
            }
        }
        
        public UIArbeidsplanInnstilliWindow UIArbeidsplanInnstilliWindow
        {
            get
            {
                if ((this.mUIArbeidsplanInnstilliWindow == null))
                {
                    this.mUIArbeidsplanInnstilliWindow = new UIArbeidsplanInnstilliWindow();
                }
                return this.mUIArbeidsplanInnstilliWindow;
            }
        }
        
        public UIArbeidsplanoppsettWindow UIArbeidsplanoppsettWindow
        {
            get
            {
                if ((this.mUIArbeidsplanoppsettWindow == null))
                {
                    this.mUIArbeidsplanoppsettWindow = new UIArbeidsplanoppsettWindow();
                }
                return this.mUIArbeidsplanoppsettWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIGlobaltarbeidsplanopWindow UIGlobaltarbeidsplanopWindow
        {
            get
            {
                if ((this.mUIGlobaltarbeidsplanopWindow == null))
                {
                    this.mUIGlobaltarbeidsplanopWindow = new UIGlobaltarbeidsplanopWindow();
                }
                return this.mUIGlobaltarbeidsplanopWindow;
            }
        }
        
        public UIAnsatteiarbeidsplanWindow UIAnsatteiarbeidsplanWindow
        {
            get
            {
                if ((this.mUIAnsatteiarbeidsplanWindow == null))
                {
                    this.mUIAnsatteiarbeidsplanWindow = new UIAnsatteiarbeidsplanWindow();
                }
                return this.mUIAnsatteiarbeidsplanWindow;
            }
        }
        
        public UIUtskriftavarbeidsplaWindow UIUtskriftavarbeidsplaWindow
        {
            get
            {
                if ((this.mUIUtskriftavarbeidsplaWindow == null))
                {
                    this.mUIUtskriftavarbeidsplaWindow = new UIUtskriftavarbeidsplaWindow();
                }
                return this.mUIUtskriftavarbeidsplaWindow;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow11();
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIStillingsforholdWindow UIStillingsforholdWindow
        {
            get
            {
                if ((this.mUIStillingsforholdWindow == null))
                {
                    this.mUIStillingsforholdWindow = new UIStillingsforholdWindow();
                }
                return this.mUIStillingsforholdWindow;
            }
        }
        
        public UINyarbeidsplanWindow UINyarbeidsplanWindow
        {
            get
            {
                if ((this.mUINyarbeidsplanWindow == null))
                {
                    this.mUINyarbeidsplanWindow = new UINyarbeidsplanWindow();
                }
                return this.mUINyarbeidsplanWindow;
            }
        }
        
        public UIGT3999InformasjonWindow UIGT3999InformasjonWindow
        {
            get
            {
                if ((this.mUIGT3999InformasjonWindow == null))
                {
                    this.mUIGT3999InformasjonWindow = new UIGT3999InformasjonWindow();
                }
                return this.mUIGT3999InformasjonWindow;
            }
        }
        
        public UIOppgavetildelingWindow UIOppgavetildelingWindow
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow == null))
                {
                    this.mUIOppgavetildelingWindow = new UIOppgavetildelingWindow();
                }
                return this.mUIOppgavetildelingWindow;
            }
        }
        
        public UIIverksetteWindow UIIverksetteWindow
        {
            get
            {
                if ((this.mUIIverksetteWindow == null))
                {
                    this.mUIIverksetteWindow = new UIIverksetteWindow();
                }
                return this.mUIIverksetteWindow;
            }
        }
        
        public UIRegistreringsstatusWindow UIRegistreringsstatusWindow
        {
            get
            {
                if ((this.mUIRegistreringsstatusWindow == null))
                {
                    this.mUIRegistreringsstatusWindow = new UIRegistreringsstatusWindow();
                }
                return this.mUIRegistreringsstatusWindow;
            }
        }
        
        public UINyhjelpeplanWindow UINyhjelpeplanWindow
        {
            get
            {
                if ((this.mUINyhjelpeplanWindow == null))
                {
                    this.mUINyhjelpeplanWindow = new UINyhjelpeplanWindow();
                }
                return this.mUINyhjelpeplanWindow;
            }
        }
        
        public UIItemWindow22 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow22();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UINybaseplanWindow UINybaseplanWindow
        {
            get
            {
                if ((this.mUINybaseplanWindow == null))
                {
                    this.mUINybaseplanWindow = new UINybaseplanWindow();
                }
                return this.mUINybaseplanWindow;
            }
        }
        
        public UIItemWindow32 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow32();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UINivåWindow UINivåWindow
        {
            get
            {
                if ((this.mUINivåWindow == null))
                {
                    this.mUINivåWindow = new UINivåWindow();
                }
                return this.mUINivåWindow;
            }
        }
        
        public UIGodkjenningskravarbeWindow UIGodkjenningskravarbeWindow
        {
            get
            {
                if ((this.mUIGodkjenningskravarbeWindow == null))
                {
                    this.mUIGodkjenningskravarbeWindow = new UIGodkjenningskravarbeWindow();
                }
                return this.mUIGodkjenningskravarbeWindow;
            }
        }
        
        public UIBekreftWindow UIBekreftWindow
        {
            get
            {
                if ((this.mUIBekreftWindow == null))
                {
                    this.mUIBekreftWindow = new UIBekreftWindow();
                }
                return this.mUIBekreftWindow;
            }
        }
        
        public UIRepresentasjonerWindow UIRepresentasjonerWindow
        {
            get
            {
                if ((this.mUIRepresentasjonerWindow == null))
                {
                    this.mUIRepresentasjonerWindow = new UIRepresentasjonerWindow();
                }
                return this.mUIRepresentasjonerWindow;
            }
        }
        
        public UIGT4001InformasjonWindow UIGT4001InformasjonWindow
        {
            get
            {
                if ((this.mUIGT4001InformasjonWindow == null))
                {
                    this.mUIGT4001InformasjonWindow = new UIGT4001InformasjonWindow();
                }
                return this.mUIGT4001InformasjonWindow;
            }
        }
        
        public UIVelgfagforeningerWindow UIVelgfagforeningerWindow
        {
            get
            {
                if ((this.mUIVelgfagforeningerWindow == null))
                {
                    this.mUIVelgfagforeningerWindow = new UIVelgfagforeningerWindow();
                }
                return this.mUIVelgfagforeningerWindow;
            }
        }
        
        public UIVelgrepresentanterWindow UIVelgrepresentanterWindow
        {
            get
            {
                if ((this.mUIVelgrepresentanterWindow == null))
                {
                    this.mUIVelgrepresentanterWindow = new UIVelgrepresentanterWindow();
                }
                return this.mUIVelgrepresentanterWindow;
            }
        }
        
        public UIVelgperiodeWindow UIVelgperiodeWindow
        {
            get
            {
                if ((this.mUIVelgperiodeWindow == null))
                {
                    this.mUIVelgperiodeWindow = new UIVelgperiodeWindow();
                }
                return this.mUIVelgperiodeWindow;
            }
        }
        
        public UIOverførtilleggWindow UIOverførtilleggWindow
        {
            get
            {
                if ((this.mUIOverførtilleggWindow == null))
                {
                    this.mUIOverførtilleggWindow = new UIOverførtilleggWindow();
                }
                return this.mUIOverførtilleggWindow;
            }
        }
        
        public UIGT4006InformasjonWindow UIGT4006InformasjonWindow
        {
            get
            {
                if ((this.mUIGT4006InformasjonWindow == null))
                {
                    this.mUIGT4006InformasjonWindow = new UIGT4006InformasjonWindow();
                }
                return this.mUIGT4006InformasjonWindow;
            }
        }
        
        public UISkrivenkommentartilaWindow UISkrivenkommentartilaWindow
        {
            get
            {
                if ((this.mUISkrivenkommentartilaWindow == null))
                {
                    this.mUISkrivenkommentartilaWindow = new UISkrivenkommentartilaWindow();
                }
                return this.mUISkrivenkommentartilaWindow;
            }
        }
        
        public UISkrivenkommentartilaWindow1 UISkrivenkommentartilaWindow1
        {
            get
            {
                if ((this.mUISkrivenkommentartilaWindow1 == null))
                {
                    this.mUISkrivenkommentartilaWindow1 = new UISkrivenkommentartilaWindow1();
                }
                return this.mUISkrivenkommentartilaWindow1;
            }
        }
        
        public UIItemWindow41 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow41();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5();
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UISøkingidatabaseloggWindow UISøkingidatabaseloggWindow
        {
            get
            {
                if ((this.mUISøkingidatabaseloggWindow == null))
                {
                    this.mUISøkingidatabaseloggWindow = new UISøkingidatabaseloggWindow();
                }
                return this.mUISøkingidatabaseloggWindow;
            }
        }
        
        public UIItemWindow6 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow6();
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UIItemWindow7 UIItemWindow7
        {
            get
            {
                if ((this.mUIItemWindow7 == null))
                {
                    this.mUIItemWindow7 = new UIItemWindow7();
                }
                return this.mUIItemWindow7;
            }
        }
        
        public UISletteiverksettingWindow UISletteiverksettingWindow
        {
            get
            {
                if ((this.mUISletteiverksettingWindow == null))
                {
                    this.mUISletteiverksettingWindow = new UISletteiverksettingWindow();
                }
                return this.mUISletteiverksettingWindow;
            }
        }
        
        public UIEXC_4004InformasjonWindow UIEXC_4004InformasjonWindow
        {
            get
            {
                if ((this.mUIEXC_4004InformasjonWindow == null))
                {
                    this.mUIEXC_4004InformasjonWindow = new UIEXC_4004InformasjonWindow();
                }
                return this.mUIEXC_4004InformasjonWindow;
            }
        }
        
        public UIRPL24003InformasjonWindow UIRPL24003InformasjonWindow
        {
            get
            {
                if ((this.mUIRPL24003InformasjonWindow == null))
                {
                    this.mUIRPL24003InformasjonWindow = new UIRPL24003InformasjonWindow();
                }
                return this.mUIRPL24003InformasjonWindow;
            }
        }
        
        public UISøkilisteWindow UISøkilisteWindow
        {
            get
            {
                if ((this.mUISøkilisteWindow == null))
                {
                    this.mUISøkilisteWindow = new UISøkilisteWindow();
                }
                return this.mUISøkilisteWindow;
            }
        }
        
        public UIMerarbeidovertidWindow UIMerarbeidovertidWindow
        {
            get
            {
                if ((this.mUIMerarbeidovertidWindow == null))
                {
                    this.mUIMerarbeidovertidWindow = new UIMerarbeidovertidWindow();
                }
                return this.mUIMerarbeidovertidWindow;
            }
        }
        
        public UISkrivenkommentartiloWindow UISkrivenkommentartiloWindow
        {
            get
            {
                if ((this.mUISkrivenkommentartiloWindow == null))
                {
                    this.mUISkrivenkommentartiloWindow = new UISkrivenkommentartiloWindow();
                }
                return this.mUISkrivenkommentartiloWindow;
            }
        }
        
        public UIUtjevningsvaktWindow UIUtjevningsvaktWindow
        {
            get
            {
                if ((this.mUIUtjevningsvaktWindow == null))
                {
                    this.mUIUtjevningsvaktWindow = new UIUtjevningsvaktWindow();
                }
                return this.mUIUtjevningsvaktWindow;
            }
        }
        
        public UIGT4003InformasjonWindow UIGT4003InformasjonWindow
        {
            get
            {
                if ((this.mUIGT4003InformasjonWindow == null))
                {
                    this.mUIGT4003InformasjonWindow = new UIGT4003InformasjonWindow();
                }
                return this.mUIGT4003InformasjonWindow;
            }
        }
        
        public UIRPL4047InformasjonWindow UIRPL4047InformasjonWindow
        {
            get
            {
                if ((this.mUIRPL4047InformasjonWindow == null))
                {
                    this.mUIRPL4047InformasjonWindow = new UIRPL4047InformasjonWindow();
                }
                return this.mUIRPL4047InformasjonWindow;
            }
        }
        
        public UIRPL4046InformasjonWindow UIRPL4046InformasjonWindow
        {
            get
            {
                if ((this.mUIRPL4046InformasjonWindow == null))
                {
                    this.mUIRPL4046InformasjonWindow = new UIRPL4046InformasjonWindow();
                }
                return this.mUIRPL4046InformasjonWindow;
            }
        }
        
        public UIItemWindow8 UIItemWindow8
        {
            get
            {
                if ((this.mUIItemWindow8 == null))
                {
                    this.mUIItemWindow8 = new UIItemWindow8();
                }
                return this.mUIItemWindow8;
            }
        }
        
        public UIOppgavetildelingWindow11 UIOppgavetildelingWindow1
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow1 == null))
                {
                    this.mUIOppgavetildelingWindow1 = new UIOppgavetildelingWindow11();
                }
                return this.mUIOppgavetildelingWindow1;
            }
        }
        
        public UIItemWindowNine UIItemWindowNine
        {
            get
            {
                if ((this.mUIItemWindowNine == null))
                {
                    this.mUIItemWindowNine = new UIItemWindowNine();
                }
                return this.mUIItemWindowNine;
            }
        }
        
        public UITildeloppgavemønsterWindow UITildeloppgavemønsterWindow
        {
            get
            {
                if ((this.mUITildeloppgavemønsterWindow == null))
                {
                    this.mUITildeloppgavemønsterWindow = new UITildeloppgavemønsterWindow();
                }
                return this.mUITildeloppgavemønsterWindow;
            }
        }
        
        public UIDefinisjonavfilterfoWindow UIDefinisjonavfilterfoWindow
        {
            get
            {
                if ((this.mUIDefinisjonavfilterfoWindow == null))
                {
                    this.mUIDefinisjonavfilterfoWindow = new UIDefinisjonavfilterfoWindow();
                }
                return this.mUIDefinisjonavfilterfoWindow;
            }
        }
        
        public UIAnsattfilterWindow UIAnsattfilterWindow
        {
            get
            {
                if ((this.mUIAnsattfilterWindow == null))
                {
                    this.mUIAnsattfilterWindow = new UIAnsattfilterWindow();
                }
                return this.mUIAnsattfilterWindow;
            }
        }
        
        public UIItemWindow9 UIItemWindow9
        {
            get
            {
                if ((this.mUIItemWindow9 == null))
                {
                    this.mUIItemWindow9 = new UIItemWindow9();
                }
                return this.mUIItemWindow9;
            }
        }
        
        public UIItemWindow10 UIItemWindow10
        {
            get
            {
                if ((this.mUIItemWindow10 == null))
                {
                    this.mUIItemWindow10 = new UIItemWindow10();
                }
                return this.mUIItemWindow10;
            }
        }
        
        public UIRekalkuleringWindow UIRekalkuleringWindow
        {
            get
            {
                if ((this.mUIRekalkuleringWindow == null))
                {
                    this.mUIRekalkuleringWindow = new UIRekalkuleringWindow();
                }
                return this.mUIRekalkuleringWindow;
            }
        }
        
        public UIForskyvningWindow UIForskyvningWindow
        {
            get
            {
                if ((this.mUIForskyvningWindow == null))
                {
                    this.mUIForskyvningWindow = new UIForskyvningWindow();
                }
                return this.mUIForskyvningWindow;
            }
        }
        
        public UIRemanageCreateNewShiWindow UIRemanageCreateNewShiWindow
        {
            get
            {
                if ((this.mUIRemanageCreateNewShiWindow == null))
                {
                    this.mUIRemanageCreateNewShiWindow = new UIRemanageCreateNewShiWindow();
                }
                return this.mUIRemanageCreateNewShiWindow;
            }
        }
        
        public UISlettWindow UISlettWindow
        {
            get
            {
                if ((this.mUISlettWindow == null))
                {
                    this.mUISlettWindow = new UISlettWindow();
                }
                return this.mUISlettWindow;
            }
        }
        
        public UIArbeidsplanoppsettWindow1 UIArbeidsplanoppsettWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanoppsettWindow1 == null))
                {
                    this.mUIArbeidsplanoppsettWindow1 = new UIArbeidsplanoppsettWindow1();
                }
                return this.mUIArbeidsplanoppsettWindow1;
            }
        }
        
        public UIItemWindow121 UIItemWindow12
        {
            get
            {
                if ((this.mUIItemWindow12 == null))
                {
                    this.mUIItemWindow12 = new UIItemWindow121();
                }
                return this.mUIItemWindow12;
            }
        }
        
        public UIUtrykningWindow UIUtrykningWindow
        {
            get
            {
                if ((this.mUIUtrykningWindow == null))
                {
                    this.mUIUtrykningWindow = new UIUtrykningWindow();
                }
                return this.mUIUtrykningWindow;
            }
        }
        
        public UIOppgavedelingWindow UIOppgavedelingWindow
        {
            get
            {
                if ((this.mUIOppgavedelingWindow == null))
                {
                    this.mUIOppgavedelingWindow = new UIOppgavedelingWindow();
                }
                return this.mUIOppgavedelingWindow;
            }
        }
        
        public UIVelgoppgaverWindow UIVelgoppgaverWindow
        {
            get
            {
                if ((this.mUIVelgoppgaverWindow == null))
                {
                    this.mUIVelgoppgaverWindow = new UIVelgoppgaverWindow();
                }
                return this.mUIVelgoppgaverWindow;
            }
        }
        
        public UIEndrekonteringWindow UIEndrekonteringWindow
        {
            get
            {
                if ((this.mUIEndrekonteringWindow == null))
                {
                    this.mUIEndrekonteringWindow = new UIEndrekonteringWindow();
                }
                return this.mUIEndrekonteringWindow;
            }
        }
        
        public UIWindowsFormsParkingWWindow UIWindowsFormsParkingWWindow
        {
            get
            {
                if ((this.mUIWindowsFormsParkingWWindow == null))
                {
                    this.mUIWindowsFormsParkingWWindow = new UIWindowsFormsParkingWWindow();
                }
                return this.mUIWindowsFormsParkingWWindow;
            }
        }
        
        public UIItemWindow131 UIItemWindow13
        {
            get
            {
                if ((this.mUIItemWindow13 == null))
                {
                    this.mUIItemWindow13 = new UIItemWindow131();
                }
                return this.mUIItemWindow13;
            }
        }
        
        public UIBytteWindow UIBytteWindow
        {
            get
            {
                if ((this.mUIBytteWindow == null))
                {
                    this.mUIBytteWindow = new UIBytteWindow();
                }
                return this.mUIBytteWindow;
            }
        }
        
        public UIVelgansattsomskaldekWindow UIVelgansattsomskaldekWindow
        {
            get
            {
                if ((this.mUIVelgansattsomskaldekWindow == null))
                {
                    this.mUIVelgansattsomskaldekWindow = new UIVelgansattsomskaldekWindow();
                }
                return this.mUIVelgansattsomskaldekWindow;
            }
        }
        
        public UIOppgavevaktbokvisninWindow UIOppgavevaktbokvisninWindow
        {
            get
            {
                if ((this.mUIOppgavevaktbokvisninWindow == null))
                {
                    this.mUIOppgavevaktbokvisninWindow = new UIOppgavevaktbokvisninWindow();
                }
                return this.mUIOppgavevaktbokvisninWindow;
            }
        }
        
        public UIVacantShiftsFormWindow UIVacantShiftsFormWindow
        {
            get
            {
                if ((this.mUIVacantShiftsFormWindow == null))
                {
                    this.mUIVacantShiftsFormWindow = new UIVacantShiftsFormWindow();
                }
                return this.mUIVacantShiftsFormWindow;
            }
        }
        
        public UIRPL23006InformasjonWindow UIRPL23006InformasjonWindow
        {
            get
            {
                if ((this.mUIRPL23006InformasjonWindow == null))
                {
                    this.mUIRPL23006InformasjonWindow = new UIRPL23006InformasjonWindow();
                }
                return this.mUIRPL23006InformasjonWindow;
            }
        }
        
        public UIAbonnementpådashboarWindow UIAbonnementpådashboarWindow
        {
            get
            {
                if ((this.mUIAbonnementpådashboarWindow == null))
                {
                    this.mUIAbonnementpådashboarWindow = new UIAbonnementpådashboarWindow();
                }
                return this.mUIAbonnementpådashboarWindow;
            }
        }
        
        public UIDøgnrytmelagWindow UIDøgnrytmelagWindow
        {
            get
            {
                if ((this.mUIDøgnrytmelagWindow == null))
                {
                    this.mUIDøgnrytmelagWindow = new UIDøgnrytmelagWindow();
                }
                return this.mUIDøgnrytmelagWindow;
            }
        }
        
        public UISettekravtilpersonerWindow UISettekravtilpersonerWindow
        {
            get
            {
                if ((this.mUISettekravtilpersonerWindow == null))
                {
                    this.mUISettekravtilpersonerWindow = new UISettekravtilpersonerWindow();
                }
                return this.mUISettekravtilpersonerWindow;
            }
        }
        
        public UISettekravtilpersonerWindow1 UISettekravtilpersonerWindow1
        {
            get
            {
                if ((this.mUISettekravtilpersonerWindow1 == null))
                {
                    this.mUISettekravtilpersonerWindow1 = new UISettekravtilpersonerWindow1();
                }
                return this.mUISettekravtilpersonerWindow1;
            }
        }
        
        public UIDataLinkPropertiesWindow UIDataLinkPropertiesWindow
        {
            get
            {
                if ((this.mUIDataLinkPropertiesWindow == null))
                {
                    this.mUIDataLinkPropertiesWindow = new UIDataLinkPropertiesWindow();
                }
                return this.mUIDataLinkPropertiesWindow;
            }
        }
        
        public UIDetharoppståttenfeilWindow UIDetharoppståttenfeilWindow
        {
            get
            {
                if ((this.mUIDetharoppståttenfeilWindow == null))
                {
                    this.mUIDetharoppståttenfeilWindow = new UIDetharoppståttenfeilWindow();
                }
                return this.mUIDetharoppståttenfeilWindow;
            }
        }
        
        public UITekstinformasjonforsWindow UITekstinformasjonforsWindow
        {
            get
            {
                if ((this.mUITekstinformasjonforsWindow == null))
                {
                    this.mUITekstinformasjonforsWindow = new UITekstinformasjonforsWindow();
                }
                return this.mUITekstinformasjonforsWindow;
            }
        }
        
        public UIHandlingutførtWindow UIHandlingutførtWindow
        {
            get
            {
                if ((this.mUIHandlingutførtWindow == null))
                {
                    this.mUIHandlingutførtWindow = new UIHandlingutførtWindow();
                }
                return this.mUIHandlingutførtWindow;
            }
        }
        
        public UIItemWindow141 UIItemWindow14
        {
            get
            {
                if ((this.mUIItemWindow14 == null))
                {
                    this.mUIItemWindow14 = new UIItemWindow141();
                }
                return this.mUIItemWindow14;
            }
        }
        
        public UIExcelWindow UIExcelWindow
        {
            get
            {
                if ((this.mUIExcelWindow == null))
                {
                    this.mUIExcelWindow = new UIExcelWindow();
                }
                return this.mUIExcelWindow;
            }
        }
        
        public UIBrukeradministrasjonWindow UIBrukeradministrasjonWindow
        {
            get
            {
                if ((this.mUIBrukeradministrasjonWindow == null))
                {
                    this.mUIBrukeradministrasjonWindow = new UIBrukeradministrasjonWindow();
                }
                return this.mUIBrukeradministrasjonWindow;
            }
        }
        
        public UILoggWindow UILoggWindow
        {
            get
            {
                if ((this.mUILoggWindow == null))
                {
                    this.mUILoggWindow = new UILoggWindow();
                }
                return this.mUILoggWindow;
            }
        }
        
        public UIREC3001InformasjonWindow UIREC3001InformasjonWindow
        {
            get
            {
                if ((this.mUIREC3001InformasjonWindow == null))
                {
                    this.mUIREC3001InformasjonWindow = new UIREC3001InformasjonWindow();
                }
                return this.mUIREC3001InformasjonWindow;
            }
        }
        
        public UIDøgnrytmeplanWindow UIDøgnrytmeplanWindow
        {
            get
            {
                if ((this.mUIDøgnrytmeplanWindow == null))
                {
                    this.mUIDøgnrytmeplanWindow = new UIDøgnrytmeplanWindow();
                }
                return this.mUIDøgnrytmeplanWindow;
            }
        }
        
        public UIVelgavdelingerWindow UIVelgavdelingerWindow
        {
            get
            {
                if ((this.mUIVelgavdelingerWindow == null))
                {
                    this.mUIVelgavdelingerWindow = new UIVelgavdelingerWindow();
                }
                return this.mUIVelgavdelingerWindow;
            }
        }
        
        public UIItemWindow151 UIItemWindow15
        {
            get
            {
                if ((this.mUIItemWindow15 == null))
                {
                    this.mUIItemWindow15 = new UIItemWindow151();
                }
                return this.mUIItemWindow15;
            }
        }
        
        public UIOppgavemønsterWindow UIOppgavemønsterWindow
        {
            get
            {
                if ((this.mUIOppgavemønsterWindow == null))
                {
                    this.mUIOppgavemønsterWindow = new UIOppgavemønsterWindow();
                }
                return this.mUIOppgavemønsterWindow;
            }
        }
        
        public UIDatabaseLoginWindow UIDatabaseLoginWindow
        {
            get
            {
                if ((this.mUIDatabaseLoginWindow == null))
                {
                    this.mUIDatabaseLoginWindow = new UIDatabaseLoginWindow();
                }
                return this.mUIDatabaseLoginWindow;
            }
        }
        
        public UIConnectionparametersWindow UIConnectionparametersWindow
        {
            get
            {
                if ((this.mUIConnectionparametersWindow == null))
                {
                    this.mUIConnectionparametersWindow = new UIConnectionparametersWindow();
                }
                return this.mUIConnectionparametersWindow;
            }
        }
        
        public UIGT2004AdvarselWindow UIGT2004AdvarselWindow
        {
            get
            {
                if ((this.mUIGT2004AdvarselWindow == null))
                {
                    this.mUIGT2004AdvarselWindow = new UIGT2004AdvarselWindow();
                }
                return this.mUIGT2004AdvarselWindow;
            }
        }
        
        public UIMinGatMinGatv2020120Window UIMinGatMinGatv2020120Window
        {
            get
            {
                if ((this.mUIMinGatMinGatv2020120Window == null))
                {
                    this.mUIMinGatMinGatv2020120Window = new UIMinGatMinGatv2020120Window();
                }
                return this.mUIMinGatMinGatv2020120Window;
            }
        }
        
        public UIStartsidenMinGatv202Window UIStartsidenMinGatv202Window
        {
            get
            {
                if ((this.mUIStartsidenMinGatv202Window == null))
                {
                    this.mUIStartsidenMinGatv202Window = new UIStartsidenMinGatv202Window();
                }
                return this.mUIStartsidenMinGatv202Window;
            }
        }
        
        public UIVaktbokMinGatv202012Window UIVaktbokMinGatv202012Window
        {
            get
            {
                if ((this.mUIVaktbokMinGatv202012Window == null))
                {
                    this.mUIVaktbokMinGatv202012Window = new UIVaktbokMinGatv202012Window();
                }
                return this.mUIVaktbokMinGatv202012Window;
            }
        }
        
        public UIInternetInformationSWindow UIInternetInformationSWindow
        {
            get
            {
                if ((this.mUIInternetInformationSWindow == null))
                {
                    this.mUIInternetInformationSWindow = new UIInternetInformationSWindow();
                }
                return this.mUIInternetInformationSWindow;
            }
        }
        
        public UIItemWindow161 UIItemWindow16
        {
            get
            {
                if ((this.mUIItemWindow16 == null))
                {
                    this.mUIItemWindow16 = new UIItemWindow161();
                }
                return this.mUIItemWindow16;
            }
        }
        
        public UIConfirmRemoveWindow UIConfirmRemoveWindow
        {
            get
            {
                if ((this.mUIConfirmRemoveWindow == null))
                {
                    this.mUIConfirmRemoveWindow = new UIConfirmRemoveWindow();
                }
                return this.mUIConfirmRemoveWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckAmlReport7UseCalculatedAmlViolationParams mCheckAmlReport7UseCalculatedAmlViolationParams;
        
        private CheckCloseRosterplanButtonPlanTabExistsExpectedValues mCheckCloseRosterplanButtonPlanTabExistsExpectedValues;
        
        private CheckDocumentationAbsenceParams mCheckDocumentationAbsenceParams;
        
        private CheckDoUseWeek0AndNPlus1InPlanSettingsParams mCheckDoUseWeek0AndNPlus1InPlanSettingsParams;
        
        private CheckEffectuationButtonDisabledExpectedValues mCheckEffectuationButtonDisabledExpectedValues;
        
        private CheckEffectuationDisabledExpectedValues mCheckEffectuationDisabledExpectedValues;
        
        private CheckNewHelpplanWindowTasksDraftUncheckedExpectedValues mCheckNewHelpplanWindowTasksDraftUncheckedExpectedValues;
        
        private CheckOkDisabledInRejectCommentWindowExpectedValues mCheckOkDisabledInRejectCommentWindowExpectedValues;
        
        private CheckShowCoverageBreaksParams mCheckShowCoverageBreaksParams;
        
        private CheckShowOnlyForSelectedEmpInWarningsSubTabParams mCheckShowOnlyForSelectedEmpInWarningsSubTabParams;
        
        private CheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams mCheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams;
        
        private CleanUpMinGatIISParams mCleanUpMinGatIISParams;
        
        private GenerateAMLCauseParams mGenerateAMLCauseParams;
        
        private SelectADM_AdministrasjonInPlanSettingsWindowParams mSelectADM_AdministrasjonInPlanSettingsWindowParams;
        
        private SelectAndOperationInF3SearchWindowParams mSelectAndOperationInF3SearchWindowParams;
        
        private SelectCalloutDay1Params mSelectCalloutDay1Params;
        
        private SelectCalloutDay2Params mSelectCalloutDay2Params;
        
        private SelectDetailedRoleAssignmentInDashboardParams mSelectDetailedRoleAssignmentInDashboardParams;
        
        private SelectDivCauseRemaningParams mSelectDivCauseRemaningParams;
        
        private SelectDivOvertimeCodeParams mSelectDivOvertimeCodeParams;
        
        private SelectDocumentAbsenceParams mSelectDocumentAbsenceParams;
        
        private SelectFullInfoFilterParams mSelectFullInfoFilterParams;
        
        private SelectL38InPlanSettingsWindowParams mSelectL38InPlanSettingsWindowParams;
        
        private SelectNameOnlyInfoFilterParams mSelectNameOnlyInfoFilterParams;
        
        private SelectPartlyInfoFilterParams mSelectPartlyInfoFilterParams;
        
        private SelectTurnusInPlanSettingsWindowParams mSelectTurnusInPlanSettingsWindowParams;
        
        private SelectWeeksumLineAndTotalFilterParams mSelectWeeksumLineAndTotalFilterParams;
        
        private SelectWeeksumShowTotalOnlyFilterParams mSelectWeeksumShowTotalOnlyFilterParams;
        
        private SelectWholeRosterplanParams mSelectWholeRosterplanParams;
        
        private UnCheckAmlReport7UseCalculatedAmlViolationParams mUnCheckAmlReport7UseCalculatedAmlViolationParams;
        
        private UnCheckDoUseWeek0AndNPlus1InPlanSettingsParams mUnCheckDoUseWeek0AndNPlus1InPlanSettingsParams;
        
        private UIForhåndsvisningWindow mUIForhåndsvisningWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIEksportertilXLSWindow mUIEksportertilXLSWindow;
        
        private UIEksportertilXLSXWindow mUIEksportertilXLSXWindow;
        
        private UIFraværsregistreringWindow mUIFraværsregistreringWindow;
        
        private UIMicrosoftExcelWindow mUIMicrosoftExcelWindow;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        
        private UIByttansattWindow mUIByttansattWindow;
        
        private UITilpassetvisningWindow mUITilpassetvisningWindow;
        
        private UIStartsidenMinGatv201Window mUIStartsidenMinGatv201Window;
        
        private UINewProgressBarFormWindow mUINewProgressBarFormWindow;
        
        private UIArbeidsplanoppsettfoWindow mUIArbeidsplanoppsettfoWindow;
        
        private UIArbeidsplanInnstilliWindow mUIArbeidsplanInnstilliWindow;
        
        private UIArbeidsplanoppsettWindow mUIArbeidsplanoppsettWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIGlobaltarbeidsplanopWindow mUIGlobaltarbeidsplanopWindow;
        
        private UIAnsatteiarbeidsplanWindow mUIAnsatteiarbeidsplanWindow;
        
        private UIUtskriftavarbeidsplaWindow mUIUtskriftavarbeidsplaWindow;
        
        private UISaveAsWindow mUISaveAsWindow;
        
        private UIItemWindow11 mUIItemWindow11;
        
        private UIGatWindow mUIGatWindow;
        
        private UIStillingsforholdWindow mUIStillingsforholdWindow;
        
        private UINyarbeidsplanWindow mUINyarbeidsplanWindow;
        
        private UIGT3999InformasjonWindow mUIGT3999InformasjonWindow;
        
        private UIOppgavetildelingWindow mUIOppgavetildelingWindow;
        
        private UIIverksetteWindow mUIIverksetteWindow;
        
        private UIRegistreringsstatusWindow mUIRegistreringsstatusWindow;
        
        private UINyhjelpeplanWindow mUINyhjelpeplanWindow;
        
        private UIItemWindow22 mUIItemWindow2;
        
        private UINybaseplanWindow mUINybaseplanWindow;
        
        private UIItemWindow32 mUIItemWindow3;
        
        private UINivåWindow mUINivåWindow;
        
        private UIGodkjenningskravarbeWindow mUIGodkjenningskravarbeWindow;
        
        private UIBekreftWindow mUIBekreftWindow;
        
        private UIRepresentasjonerWindow mUIRepresentasjonerWindow;
        
        private UIGT4001InformasjonWindow mUIGT4001InformasjonWindow;
        
        private UIVelgfagforeningerWindow mUIVelgfagforeningerWindow;
        
        private UIVelgrepresentanterWindow mUIVelgrepresentanterWindow;
        
        private UIVelgperiodeWindow mUIVelgperiodeWindow;
        
        private UIOverførtilleggWindow mUIOverførtilleggWindow;
        
        private UIGT4006InformasjonWindow mUIGT4006InformasjonWindow;
        
        private UISkrivenkommentartilaWindow mUISkrivenkommentartilaWindow;
        
        private UISkrivenkommentartilaWindow1 mUISkrivenkommentartilaWindow1;
        
        private UIItemWindow41 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UISøkingidatabaseloggWindow mUISøkingidatabaseloggWindow;
        
        private UIItemWindow6 mUIItemWindow6;
        
        private UIItemWindow7 mUIItemWindow7;
        
        private UISletteiverksettingWindow mUISletteiverksettingWindow;
        
        private UIEXC_4004InformasjonWindow mUIEXC_4004InformasjonWindow;
        
        private UIRPL24003InformasjonWindow mUIRPL24003InformasjonWindow;
        
        private UISøkilisteWindow mUISøkilisteWindow;
        
        private UIMerarbeidovertidWindow mUIMerarbeidovertidWindow;
        
        private UISkrivenkommentartiloWindow mUISkrivenkommentartiloWindow;
        
        private UIUtjevningsvaktWindow mUIUtjevningsvaktWindow;
        
        private UIGT4003InformasjonWindow mUIGT4003InformasjonWindow;
        
        private UIRPL4047InformasjonWindow mUIRPL4047InformasjonWindow;
        
        private UIRPL4046InformasjonWindow mUIRPL4046InformasjonWindow;
        
        private UIItemWindow8 mUIItemWindow8;
        
        private UIOppgavetildelingWindow11 mUIOppgavetildelingWindow1;
        
        private UIItemWindowNine mUIItemWindowNine;
        
        private UITildeloppgavemønsterWindow mUITildeloppgavemønsterWindow;
        
        private UIDefinisjonavfilterfoWindow mUIDefinisjonavfilterfoWindow;
        
        private UIAnsattfilterWindow mUIAnsattfilterWindow;
        
        private UIItemWindow9 mUIItemWindow9;
        
        private UIItemWindow10 mUIItemWindow10;
        
        private UIRekalkuleringWindow mUIRekalkuleringWindow;
        
        private UIForskyvningWindow mUIForskyvningWindow;
        
        private UIRemanageCreateNewShiWindow mUIRemanageCreateNewShiWindow;
        
        private UISlettWindow mUISlettWindow;
        
        private UIArbeidsplanoppsettWindow1 mUIArbeidsplanoppsettWindow1;
        
        private UIItemWindow121 mUIItemWindow12;
        
        private UIUtrykningWindow mUIUtrykningWindow;
        
        private UIOppgavedelingWindow mUIOppgavedelingWindow;
        
        private UIVelgoppgaverWindow mUIVelgoppgaverWindow;
        
        private UIEndrekonteringWindow mUIEndrekonteringWindow;
        
        private UIWindowsFormsParkingWWindow mUIWindowsFormsParkingWWindow;
        
        private UIItemWindow131 mUIItemWindow13;
        
        private UIBytteWindow mUIBytteWindow;
        
        private UIVelgansattsomskaldekWindow mUIVelgansattsomskaldekWindow;
        
        private UIOppgavevaktbokvisninWindow mUIOppgavevaktbokvisninWindow;
        
        private UIVacantShiftsFormWindow mUIVacantShiftsFormWindow;
        
        private UIRPL23006InformasjonWindow mUIRPL23006InformasjonWindow;
        
        private UIAbonnementpådashboarWindow mUIAbonnementpådashboarWindow;
        
        private UIDøgnrytmelagWindow mUIDøgnrytmelagWindow;
        
        private UISettekravtilpersonerWindow mUISettekravtilpersonerWindow;
        
        private UISettekravtilpersonerWindow1 mUISettekravtilpersonerWindow1;
        
        private UIDataLinkPropertiesWindow mUIDataLinkPropertiesWindow;
        
        private UIDetharoppståttenfeilWindow mUIDetharoppståttenfeilWindow;
        
        private UITekstinformasjonforsWindow mUITekstinformasjonforsWindow;
        
        private UIHandlingutførtWindow mUIHandlingutførtWindow;
        
        private UIItemWindow141 mUIItemWindow14;
        
        private UIExcelWindow mUIExcelWindow;
        
        private UIBrukeradministrasjonWindow mUIBrukeradministrasjonWindow;
        
        private UILoggWindow mUILoggWindow;
        
        private UIREC3001InformasjonWindow mUIREC3001InformasjonWindow;
        
        private UIDøgnrytmeplanWindow mUIDøgnrytmeplanWindow;
        
        private UIVelgavdelingerWindow mUIVelgavdelingerWindow;
        
        private UIItemWindow151 mUIItemWindow15;
        
        private UIOppgavemønsterWindow mUIOppgavemønsterWindow;
        
        private UIDatabaseLoginWindow mUIDatabaseLoginWindow;
        
        private UIConnectionparametersWindow mUIConnectionparametersWindow;
        
        private UIGT2004AdvarselWindow mUIGT2004AdvarselWindow;
        
        private UIMinGatMinGatv2020120Window mUIMinGatMinGatv2020120Window;
        
        private UIStartsidenMinGatv202Window mUIStartsidenMinGatv202Window;
        
        private UIVaktbokMinGatv202012Window mUIVaktbokMinGatv202012Window;
        
        private UIInternetInformationSWindow mUIInternetInformationSWindow;
        
        private UIItemWindow161 mUIItemWindow16;
        
        private UIConfirmRemoveWindow mUIConfirmRemoveWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAmlReport7UseCalculatedAmlViolation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAmlReport7UseCalculatedAmlViolationParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Bruk kalkulerte AML brudd OBS! Utdatert!' check box
        /// </summary>
        public bool UIBrukkalkulerteAMLbruCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckCloseRosterplanButtonPlanTabExists'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckCloseRosterplanButtonPlanTabExistsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'Lukk' RibbonBaseButtonItem equals 'True'
        /// </summary>
        public bool UILukkRibbonBaseButtonItemExists = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDocumentationAbsence'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckDocumentationAbsenceParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'chbRecievedWrittenDocumentation' check box
        /// </summary>
        public bool UIChbRecievedWrittenDoCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDoUseWeek0AndNPlus1InPlanSettings'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckDoUseWeek0AndNPlus1InPlanSettingsParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'chkDoUseWeek0AndNPlus1' check box
        /// </summary>
        public bool UIChkDoUseWeek0AndNPluCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEffectuationButtonDisabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckEffectuationButtonDisabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Iverksett 28 linjer' button equals 'False'
        /// </summary>
        public bool UIIverksett28linjerButtonEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEffectuationDisabled'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckEffectuationDisabledExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Iverksett 28 linjer' button equals 'False'
        /// </summary>
        public bool UIIverksett28linjerButtonEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckNewHelpplanWindowTasksDraftUnchecked'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckNewHelpplanWindowTasksDraftUncheckedExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Checked' property of 'chkTasks' check box equals 'False'
        /// </summary>
        public bool UIChkTasksCheckBoxChecked = false;
        
        /// <summary>
        /// Verify that the 'Checked' property of 'chkKladd' check box equals 'False'
        /// </summary>
        public bool UIChkKladdCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckOkDisabledInRejectCommentWindow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckOkDisabledInRejectCommentWindowExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Enabled' property of 'Ok' button equals 'False'
        /// </summary>
        public bool UIOKButtonEnabled = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckShowCoverageBreaks'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckShowCoverageBreaksParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'chkShowCoverageBreaks' check box
        /// </summary>
        public bool UIChkShowCoverageBreakCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckShowOnlyForSelectedEmpInWarningsSubTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckShowOnlyForSelectedEmpInWarningsSubTabParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'chkFilterValidationMessagesOnSelectedPerson' check box
        /// </summary>
        public bool UIChkFilterValidationMCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckShowOnlyMessagesOnSelectedDateInWarningsSubTab'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckShowOnlyMessagesOnSelectedDateInWarningsSubTabParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'chkFilterValidationMessagesOnSelectedDate' check box
        /// </summary>
        public bool UIChkFilterValidationMCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CleanUpMinGatIIS'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CleanUpMinGatIISParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Down 7}{Enter}' in 'DropDown' popup menu
        /// </summary>
        public string UIDropDownMenuSendKeys = "{Down 7}{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'GenerateAMLCause'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class GenerateAMLCauseParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'System.String' in 'GSLookUpEdit' LookUpEdit
        /// </summary>
        public string UIGSLookUpEditLookUpEditValueTypeName = "System.String";
        
        /// <summary>
        /// Type 'SYKDOM' in 'GSLookUpEdit' LookUpEdit
        /// </summary>
        public string UIGSLookUpEditLookUpEditValueAsString = "SYKDOM";
        
        /// <summary>
        /// Type 'Automatister test [SelectionStart]11' in 'eComment' text box
        /// </summary>
        public string UIECommentEditValueAsString = "Automatister test [SelectionStart]11";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectADM_AdministrasjonInPlanSettingsWindow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectADM_AdministrasjonInPlanSettingsWindowParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.DataModel.Simple.Position' in 'lePosition' LookUpEdit
        /// </summary>
        public string UILePositionLookUpEditValueTypeName = "Gatsoft.Gat.DataModel.Simple.Position";
        
        /// <summary>
        /// Type '' in 'lePosition' LookUpEdit
        /// </summary>
        public string UILePositionLookUpEditValueAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectAndOperationInF3SearchWindow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectAndOperationInF3SearchWindowParams
    {
        
        #region Fields
        /// <summary>
        /// Type '0' in 'rgMultiTermLogic' RadioGroup
        /// </summary>
        public int UIRgMultiTermLogicRadioGroupSelectedIndex = 0;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectCalloutDay1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectCalloutDay1Params
    {
        
        #region Fields
        /// <summary>
        /// Select '27. august (tir.)' check box
        /// </summary>
        public bool UIItem27augusttirCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectCalloutDay2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectCalloutDay2Params
    {
        
        #region Fields
        /// <summary>
        /// Select '28. august (ons.)' check box
        /// </summary>
        public bool UIItem28augustonsCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectDetailedRoleAssignmentInDashboard'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectDetailedRoleAssignmentInDashboardParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'chkDetailed' check box
        /// </summary>
        public bool UIChkDetailedCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectDivCauseRemaning'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectDivCauseRemaningParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.DataModel.OvertimeCode' in 'leOvertimeCode' LookUpEdit
        /// </summary>
        public string UILeOvertimeCodeLookUpEditValueTypeName = "Gatsoft.Gat.DataModel.OvertimeCode";
        
        /// <summary>
        /// Type 'OvertimeCode(Id=242481501)' in 'leOvertimeCode' LookUpEdit
        /// </summary>
        public string UILeOvertimeCodeLookUpEditValueAsString = "OvertimeCode(Id=242481501)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectDivOvertimeCode'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectDivOvertimeCodeParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.DataModel.OvertimeCode' in 'cbOvertimeCode' LookUpEdit
        /// </summary>
        public string UICbOvertimeCodeLookUpEditValueTypeName = "Gatsoft.Gat.DataModel.OvertimeCode";
        
        /// <summary>
        /// Type 'OvertimeCode(Id=242481501)' in 'cbOvertimeCode' LookUpEdit
        /// </summary>
        public string UICbOvertimeCodeLookUpEditValueAsString = "OvertimeCode(Id=242481501)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectDocumentAbsence'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectDocumentAbsenceParams
    {
        
        #region Fields
        /// <summary>
        /// Type '' in 'lueDocuments' LookUpEdit
        /// </summary>
        public string UILueDocumentsLookUpEditValueAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectFullInfoFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectFullInfoFilterParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.UI.Windows.Controls.Planning.RosterPlanning.Presentation.Columns.ViewModels.RosterPlanColumnSetupViewModel' in 'GridLookUpEdit' LookUpEdit
        /// </summary>
        public string UIGridLookUpEditLookUpEditValueTypeName = "Gatsoft.Gat.UI.Windows.Controls.Planning.RosterPlanning.Presentation.Columns.View" +
            "Models.RosterPlanColumnSetupViewModel";
        
        /// <summary>
        /// Type 'Full stillingsinformasjon' in 'GridLookUpEdit' LookUpEdit
        /// </summary>
        public string UIGridLookUpEditLookUpEditValueAsString = "Full stillingsinformasjon";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectL38InPlanSettingsWindow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectL38InPlanSettingsWindowParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.DataModel.Simple.Position' in 'lePosition' LookUpEdit
        /// </summary>
        public string UILePositionLookUpEditValueTypeName = "Gatsoft.Gat.DataModel.Simple.Position";
        
        /// <summary>
        /// Type '' in 'lePosition' LookUpEdit
        /// </summary>
        public string UILePositionLookUpEditValueAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectNameOnlyInfoFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectNameOnlyInfoFilterParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.UI.Windows.Controls.Planning.RosterPlanning.Presentation.Columns.ViewModels.RosterPlanColumnSetupViewModel' in 'GridLookUpEdit' LookUpEdit
        /// </summary>
        public string UIGridLookUpEditLookUpEditValueTypeName = "Gatsoft.Gat.UI.Windows.Controls.Planning.RosterPlanning.Presentation.Columns.View" +
            "Models.RosterPlanColumnSetupViewModel";
        
        /// <summary>
        /// Type 'Kun navn på ansatt' in 'GridLookUpEdit' LookUpEdit
        /// </summary>
        public string UIGridLookUpEditLookUpEditValueAsString = "Kun navn på ansatt";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectPartlyInfoFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectPartlyInfoFilterParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.UI.Windows.Controls.Planning.RosterPlanning.Presentation.Columns.ViewModels.RosterPlanColumnSetupViewModel' in 'GridLookUpEdit' LookUpEdit
        /// </summary>
        public string UIGridLookUpEditLookUpEditValueTypeName = "Gatsoft.Gat.UI.Windows.Controls.Planning.RosterPlanning.Presentation.Columns.View" +
            "Models.RosterPlanColumnSetupViewModel";
        
        /// <summary>
        /// Type 'Delvis stillingsinformasjon' in 'GridLookUpEdit' LookUpEdit
        /// </summary>
        public string UIGridLookUpEditLookUpEditValueAsString = "Delvis stillingsinformasjon";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectTurnusInPlanSettingsWindow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectTurnusInPlanSettingsWindowParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.DataModel.Simple.Position' in 'lePosition' LookUpEdit
        /// </summary>
        public string UILePositionLookUpEditValueTypeName = "Gatsoft.Gat.DataModel.Simple.Position";
        
        /// <summary>
        /// Type '' in 'lePosition' LookUpEdit
        /// </summary>
        public string UILePositionLookUpEditValueAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectWeeksumLineAndTotalFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectWeeksumLineAndTotalFilterParams
    {
        
        #region Fields
        /// <summary>
        /// Type '2' in 'rgSumFilter' RadioGroup
        /// </summary>
        public int UIRgSumFilterRadioGroupSelectedIndex = 2;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectWeeksumShowTotalOnlyFilter'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectWeeksumShowTotalOnlyFilterParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1' in 'rgSumFilter' RadioGroup
        /// </summary>
        public int UIRgSumFilterRadioGroupSelectedIndex = 1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectWholeRosterplan'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SelectWholeRosterplanParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Tab}{Tab}{ENTER}' in 'PopupMenuBarControl' popup menu
        /// </summary>
        public string UIPopupMenuBarControlMenuSendKeys = "{Tab}{Tab}{ENTER}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnCheckAmlReport7UseCalculatedAmlViolation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UnCheckAmlReport7UseCalculatedAmlViolationParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'Bruk kalkulerte AML brudd OBS! Utdatert!' check box
        /// </summary>
        public bool UIBrukkalkulerteAMLbruCheckBoxChecked = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnCheckDoUseWeek0AndNPlus1InPlanSettings'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UnCheckDoUseWeek0AndNPlus1InPlanSettingsParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'chkDoUseWeek0AndNPlus1' check box
        /// </summary>
        public bool UIChkDoUseWeek0AndNPluCheckBoxChecked = false;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIForhåndsvisningWindow : DXWindow
    {
        
        public UIForhåndsvisningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Forhåndsvisning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UIBarDockControlCustom UIBarDockControlCustom
        {
            get
            {
                if ((this.mUIBarDockControlCustom == null))
                {
                    this.mUIBarDockControlCustom = new UIBarDockControlCustom(this);
                }
                return this.mUIBarDockControlCustom;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        
        private UIBarDockControlCustom mUIBarDockControlCustom;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIPrintPreviewRibbonPaRibbonPage UIPrintPreviewRibbonPaRibbonPage
        {
            get
            {
                if ((this.mUIPrintPreviewRibbonPaRibbonPage == null))
                {
                    this.mUIPrintPreviewRibbonPaRibbonPage = new UIPrintPreviewRibbonPaRibbonPage(this);
                }
                return this.mUIPrintPreviewRibbonPaRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIPrintPreviewRibbonPaRibbonPage mUIPrintPreviewRibbonPaRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPrintPreviewRibbonPaRibbonPage : DXRibbonPage
    {
        
        public UIPrintPreviewRibbonPaRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PrintPreviewRibbonPage0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIExportRibbonPageGroup UIExportRibbonPageGroup
        {
            get
            {
                if ((this.mUIExportRibbonPageGroup == null))
                {
                    this.mUIExportRibbonPageGroup = new UIExportRibbonPageGroup(this);
                }
                return this.mUIExportRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIExportRibbonPageGroup mUIExportRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIExportRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIExportRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Export";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIEksportertilRibbonItem UIEksportertilRibbonItem
        {
            get
            {
                if ((this.mUIEksportertilRibbonItem == null))
                {
                    this.mUIEksportertilRibbonItem = new UIEksportertilRibbonItem(this);
                }
                return this.mUIEksportertilRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private UIEksportertilRibbonItem mUIEksportertilRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEksportertilRibbonItem : DXRibbonItem
    {
        
        public UIEksportertilRibbonItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXButton UIBarButtonItemLink0Button
        {
            get
            {
                if ((this.mUIBarButtonItemLink0Button == null))
                {
                    this.mUIBarButtonItemLink0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItemDrop";
                    this.mUIBarButtonItemLink0Button.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIBarButtonItemLink0Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBarButtonItemLink0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBarDockControlCustom : DXTestControl
    {
        
        public UIBarDockControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarDockControl[3]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarDockControl";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIMainMenuMenuBar UIMainMenuMenuBar
        {
            get
            {
                if ((this.mUIMainMenuMenuBar == null))
                {
                    this.mUIMainMenuMenuBar = new UIMainMenuMenuBar(this);
                }
                return this.mUIMainMenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainMenuMenuBar mUIMainMenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainMenuMenuBar : DXMenu
    {
        
        public UIMainMenuMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main Menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIFilBarItem UIFilBarItem
        {
            get
            {
                if ((this.mUIFilBarItem == null))
                {
                    this.mUIFilBarItem = new UIFilBarItem(this);
                }
                return this.mUIFilBarItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFilBarItem mUIFilBarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFilBarItem : DXMenuItem
    {
        
        public UIFilBarItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "miFile";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public UIEksporterdokumentMenuItem UIEksporterdokumentMenuItem
        {
            get
            {
                if ((this.mUIEksporterdokumentMenuItem == null))
                {
                    this.mUIEksporterdokumentMenuItem = new UIEksporterdokumentMenuItem(this);
                }
                return this.mUIEksporterdokumentMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIEksporterdokumentMenuItem mUIEksporterdokumentMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEksporterdokumentMenuItem : DXMenuItem
    {
        
        public UIEksporterdokumentMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiExportFile";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            this.WindowTitles.Add("Forhåndsvisning");
            #endregion
        }
        
        #region Properties
        public DXButton UIBarItemOpenArrowButton
        {
            get
            {
                if ((this.mUIBarItemOpenArrowButton == null))
                {
                    this.mUIBarItemOpenArrowButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBarItemOpenArrowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiExportFile";
                    this.mUIBarItemOpenArrowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItemOpenArrow";
                    this.mUIBarItemOpenArrowButton.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIBarItemOpenArrowButton;
            }
        }
        
        public DXMenuBaseButtonItem UIXLSfilMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIXLSfilMenuBaseButtonItem == null))
                {
                    this.mUIXLSfilMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIXLSfilMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[1]";
                    this.mUIXLSfilMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    this.mUIXLSfilMenuBaseButtonItem.WindowTitles.Add("Forhåndsvisning");
                    #endregion
                }
                return this.mUIXLSfilMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBarItemOpenArrowButton;
        
        private DXMenuBaseButtonItem mUIXLSfilMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIGalleryDropDownBarCoMenu UIGalleryDropDownBarCoMenu
        {
            get
            {
                if ((this.mUIGalleryDropDownBarCoMenu == null))
                {
                    this.mUIGalleryDropDownBarCoMenu = new UIGalleryDropDownBarCoMenu(this);
                }
                return this.mUIGalleryDropDownBarCoMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UIPopupContainerBarConMenu UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        
        public UIStatusMessageFlyoutPCustom UIStatusMessageFlyoutPCustom
        {
            get
            {
                if ((this.mUIStatusMessageFlyoutPCustom == null))
                {
                    this.mUIStatusMessageFlyoutPCustom = new UIStatusMessageFlyoutPCustom(this);
                }
                return this.mUIStatusMessageFlyoutPCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGalleryDropDownBarCoMenu mUIGalleryDropDownBarCoMenu;
        
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        
        private UIPopupContainerBarConMenu mUIPopupContainerBarConMenu;
        
        private UIStatusMessageFlyoutPCustom mUIStatusMessageFlyoutPCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGalleryDropDownBarCoMenu : DXMenu
    {
        
        public UIGalleryDropDownBarCoMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
            #endregion
        }
        
        #region Properties
        public UIItemGalleryItemGroup UIItemGalleryItemGroup
        {
            get
            {
                if ((this.mUIItemGalleryItemGroup == null))
                {
                    this.mUIItemGalleryItemGroup = new UIItemGalleryItemGroup(this);
                }
                return this.mUIItemGalleryItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGalleryItemGroup mUIItemGalleryItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGalleryItemGroup : DXTestControl
    {
        
        public UIItemGalleryItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItemGroup";
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXLSFilGalleryItem
        {
            get
            {
                if ((this.mUIXLSFilGalleryItem == null))
                {
                    this.mUIXLSFilGalleryItem = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXLSFilGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "XLS Fil";
                    this.mUIXLSFilGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
                    #endregion
                }
                return this.mUIXLSFilGalleryItem;
            }
        }
        
        public DXTestControl UIXLSXFilGalleryItem
        {
            get
            {
                if ((this.mUIXLSXFilGalleryItem == null))
                {
                    this.mUIXLSXFilGalleryItem = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXLSXFilGalleryItem.SearchProperties[DXTestControl.PropertyNames.Name] = "XLSX Fil";
                    this.mUIXLSXFilGalleryItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryItem";
                    #endregion
                }
                return this.mUIXLSXFilGalleryItem;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXLSFilGalleryItem;
        
        private DXTestControl mUIXLSXFilGalleryItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink1MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink1MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink1MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink1MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink1MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupContainerBarConMenu : DXMenu
    {
        
        public UIPopupContainerBarConMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            #endregion
        }
        
        #region Properties
        public UIPopupControlContaineClient UIPopupControlContaineClient
        {
            get
            {
                if ((this.mUIPopupControlContaineClient == null))
                {
                    this.mUIPopupControlContaineClient = new UIPopupControlContaineClient(this);
                }
                return this.mUIPopupControlContaineClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupControlContaineClient mUIPopupControlContaineClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupControlContaineClient : DXTestControl
    {
        
        public UIPopupControlContaineClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "popupControlContainerNew";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UISmartDateEditFromDatDateTimeEdit
        {
            get
            {
                if ((this.mUISmartDateEditFromDatDateTimeEdit == null))
                {
                    this.mUISmartDateEditFromDatDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUISmartDateEditFromDatDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "smartDateEditFromDate";
                    this.mUISmartDateEditFromDatDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    #endregion
                }
                return this.mUISmartDateEditFromDatDateTimeEdit;
            }
        }
        
        public DXDateTimePicker UISmartDateEditToDateDateTimeEdit
        {
            get
            {
                if ((this.mUISmartDateEditToDateDateTimeEdit == null))
                {
                    this.mUISmartDateEditToDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUISmartDateEditToDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "smartDateEditToDate";
                    this.mUISmartDateEditToDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    #endregion
                }
                return this.mUISmartDateEditToDateDateTimeEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonNewOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUISmartDateEditFromDatDateTimeEdit;
        
        private DXDateTimePicker mUISmartDateEditToDateDateTimeEdit;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStatusMessageFlyoutPCustom : DXTestControl
    {
        
        public UIStatusMessageFlyoutPCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageFlyoutPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageFlyoutPanel";
            #endregion
        }
        
        #region Properties
        public UIStatusMessageListCustom UIStatusMessageListCustom
        {
            get
            {
                if ((this.mUIStatusMessageListCustom == null))
                {
                    this.mUIStatusMessageListCustom = new UIStatusMessageListCustom(this);
                }
                return this.mUIStatusMessageListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStatusMessageListCustom mUIStatusMessageListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStatusMessageListCustom : DXTestControl
    {
        
        public UIStatusMessageListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageList";
            #endregion
        }
        
        #region Properties
        public DXTestControl UIStatusMessageItemLabel
        {
            get
            {
                if ((this.mUIStatusMessageItemLabel == null))
                {
                    this.mUIStatusMessageItemLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIStatusMessageItemLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "StatusMessageListStatusMessageItem[2]";
                    this.mUIStatusMessageItemLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StatusMessageItem";
                    #endregion
                }
                return this.mUIStatusMessageItemLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIStatusMessageItemLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEksportertilXLSWindow : DXWindow
    {
        
        public UIEksportertilXLSWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Eksporter til XLS";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Eksporter til XLS");
            #endregion
        }
        
        #region Properties
        public UILayoutControl1Custom UILayoutControl1Custom
        {
            get
            {
                if ((this.mUILayoutControl1Custom == null))
                {
                    this.mUILayoutControl1Custom = new UILayoutControl1Custom(this);
                }
                return this.mUILayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControl1Custom mUILayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControl1Custom : DXTestControl
    {
        
        public UILayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Eksporter til XLS");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Eksporter til XLS");
            #endregion
        }
        
        #region Properties
        public UIGrpButtonsLayoutGroup UIGrpButtonsLayoutGroup
        {
            get
            {
                if ((this.mUIGrpButtonsLayoutGroup == null))
                {
                    this.mUIGrpButtonsLayoutGroup = new UIGrpButtonsLayoutGroup(this);
                }
                return this.mUIGrpButtonsLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpButtonsLayoutGroup mUIGrpButtonsLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpButtonsLayoutGroup : DXBaseLayoutItem
    {
        
        public UIGrpButtonsLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Eksporter til XLS");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItemOKLayoutControlItem UILayoutControlItemOKLayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItemOKLayoutControlItem == null))
                {
                    this.mUILayoutControlItemOKLayoutControlItem = new UILayoutControlItemOKLayoutControlItem(this);
                }
                return this.mUILayoutControlItemOKLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItemOKLayoutControlItem mUILayoutControlItemOKLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItemOKLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItemOKLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItemOK";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Eksporter til XLS");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Eksporter til XLS");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEksportertilXLSXWindow : DXWindow
    {
        
        public UIEksportertilXLSXWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Eksporter til XLSX";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Eksporter til XLSX");
            #endregion
        }
        
        #region Properties
        public UILayoutControl1Custom1 UILayoutControl1Custom
        {
            get
            {
                if ((this.mUILayoutControl1Custom == null))
                {
                    this.mUILayoutControl1Custom = new UILayoutControl1Custom1(this);
                }
                return this.mUILayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControl1Custom1 mUILayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControl1Custom1 : DXTestControl
    {
        
        public UILayoutControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Eksporter til XLSX");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup1 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup1(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup1 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Eksporter til XLSX");
            #endregion
        }
        
        #region Properties
        public UIGrpButtonsLayoutGroup1 UIGrpButtonsLayoutGroup
        {
            get
            {
                if ((this.mUIGrpButtonsLayoutGroup == null))
                {
                    this.mUIGrpButtonsLayoutGroup = new UIGrpButtonsLayoutGroup1(this);
                }
                return this.mUIGrpButtonsLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpButtonsLayoutGroup1 mUIGrpButtonsLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpButtonsLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UIGrpButtonsLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Eksporter til XLSX");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItemOKLayoutControlItem1 UILayoutControlItemOKLayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItemOKLayoutControlItem == null))
                {
                    this.mUILayoutControlItemOKLayoutControlItem = new UILayoutControlItemOKLayoutControlItem1(this);
                }
                return this.mUILayoutControlItemOKLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItemOKLayoutControlItem1 mUILayoutControlItemOKLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItemOKLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItemOKLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItemOK";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Eksporter til XLSX");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Eksporter til XLSX");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFraværsregistreringWindow : DXWindow
    {
        
        public UIFraværsregistreringWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsregistrering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcLeftNavBar UINbcLeftNavBar
        {
            get
            {
                if ((this.mUINbcLeftNavBar == null))
                {
                    this.mUINbcLeftNavBar = new UINbcLeftNavBar(this);
                }
                return this.mUINbcLeftNavBar;
            }
        }
        
        public UIPnlAbsenceInformatioClient UIPnlAbsenceInformatioClient
        {
            get
            {
                if ((this.mUIPnlAbsenceInformatioClient == null))
                {
                    this.mUIPnlAbsenceInformatioClient = new UIPnlAbsenceInformatioClient(this);
                }
                return this.mUIPnlAbsenceInformatioClient;
            }
        }
        
        public UIPnlShiftManagementClient UIPnlShiftManagementClient
        {
            get
            {
                if ((this.mUIPnlShiftManagementClient == null))
                {
                    this.mUIPnlShiftManagementClient = new UIPnlShiftManagementClient(this);
                }
                return this.mUIPnlShiftManagementClient;
            }
        }
        
        public UIPnlBottomActionsClient UIPnlBottomActionsClient
        {
            get
            {
                if ((this.mUIPnlBottomActionsClient == null))
                {
                    this.mUIPnlBottomActionsClient = new UIPnlBottomActionsClient(this);
                }
                return this.mUIPnlBottomActionsClient;
            }
        }
        #endregion
        
        #region Fields
        private UINbcLeftNavBar mUINbcLeftNavBar;
        
        private UIPnlAbsenceInformatioClient mUIPnlAbsenceInformatioClient;
        
        private UIPnlShiftManagementClient mUIPnlShiftManagementClient;
        
        private UIPnlBottomActionsClient mUIPnlBottomActionsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbcLeftNavBar : DXNavBar
    {
        
        public UINbcLeftNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINgbcPeriodScrollableControl UINgbcPeriodScrollableControl
        {
            get
            {
                if ((this.mUINgbcPeriodScrollableControl == null))
                {
                    this.mUINgbcPeriodScrollableControl = new UINgbcPeriodScrollableControl(this);
                }
                return this.mUINgbcPeriodScrollableControl;
            }
        }
        
        public UINbgcAbsenceCodesScrollableControl UINbgcAbsenceCodesScrollableControl
        {
            get
            {
                if ((this.mUINbgcAbsenceCodesScrollableControl == null))
                {
                    this.mUINbgcAbsenceCodesScrollableControl = new UINbgcAbsenceCodesScrollableControl(this);
                }
                return this.mUINbgcAbsenceCodesScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINgbcPeriodScrollableControl mUINgbcPeriodScrollableControl;
        
        private UINbgcAbsenceCodesScrollableControl mUINbgcAbsenceCodesScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINgbcPeriodScrollableControl : DXScrollableControl
    {
        
        public UINgbcPeriodScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ngbcPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlPeriodClient UIPnlPeriodClient
        {
            get
            {
                if ((this.mUIPnlPeriodClient == null))
                {
                    this.mUIPnlPeriodClient = new UIPnlPeriodClient(this);
                }
                return this.mUIPnlPeriodClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlPeriodClient mUIPnlPeriodClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlPeriodClient : DXTestControl
    {
        
        public UIPnlPeriodClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISdePeriodFromDateCustom UISdePeriodFromDateCustom
        {
            get
            {
                if ((this.mUISdePeriodFromDateCustom == null))
                {
                    this.mUISdePeriodFromDateCustom = new UISdePeriodFromDateCustom(this);
                }
                return this.mUISdePeriodFromDateCustom;
            }
        }
        
        public UISdePeriodToDateCustom UISdePeriodToDateCustom
        {
            get
            {
                if ((this.mUISdePeriodToDateCustom == null))
                {
                    this.mUISdePeriodToDateCustom = new UISdePeriodToDateCustom(this);
                }
                return this.mUISdePeriodToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISdePeriodFromDateCustom mUISdePeriodFromDateCustom;
        
        private UISdePeriodToDateCustom mUISdePeriodToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISdePeriodFromDateCustom : DXTestControl
    {
        
        public UISdePeriodFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdePeriodFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISdePeriodToDateCustom : DXTestControl
    {
        
        public UISdePeriodToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdePeriodToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgcAbsenceCodesScrollableControl : DXScrollableControl
    {
        
        public UINbgcAbsenceCodesScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcAbsenceCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UILueAbsenceCodesLookUpEdit UILueAbsenceCodesLookUpEdit
        {
            get
            {
                if ((this.mUILueAbsenceCodesLookUpEdit == null))
                {
                    this.mUILueAbsenceCodesLookUpEdit = new UILueAbsenceCodesLookUpEdit(this);
                }
                return this.mUILueAbsenceCodesLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILueAbsenceCodesLookUpEdit mUILueAbsenceCodesLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILueAbsenceCodesLookUpEdit : DXLookUpEdit
    {
        
        public UILueAbsenceCodesLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueAbsenceCodes";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueAbsenceCodesPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILCCustom UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom : DXTestControl
    {
        
        public UILCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup mUILcgFindLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgFindLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciLabelFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlAbsenceInformatioClient : DXTestControl
    {
        
        public UIPnlAbsenceInformatioClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlAbsenceInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcInformationClient UIGrcInformationClient
        {
            get
            {
                if ((this.mUIGrcInformationClient == null))
                {
                    this.mUIGrcInformationClient = new UIGrcInformationClient(this);
                }
                return this.mUIGrcInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcInformationClient mUIGrcInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrcInformationClient : DXTestControl
    {
        
        public UIGrcInformationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcInformationNavBar UINbcInformationNavBar
        {
            get
            {
                if ((this.mUINbcInformationNavBar == null))
                {
                    this.mUINbcInformationNavBar = new UINbcInformationNavBar(this);
                }
                return this.mUINbcInformationNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInformationNavBar mUINbcInformationNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbcInformationNavBar : DXNavBar
    {
        
        public UINbcInformationNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInformation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbgcHourAbsenceScrollableControl UINbgcHourAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINbgcHourAbsenceScrollableControl == null))
                {
                    this.mUINbgcHourAbsenceScrollableControl = new UINbgcHourAbsenceScrollableControl(this);
                }
                return this.mUINbgcHourAbsenceScrollableControl;
            }
        }
        
        public UINbgcPartialAbsenceScrollableControl UINbgcPartialAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINbgcPartialAbsenceScrollableControl == null))
                {
                    this.mUINbgcPartialAbsenceScrollableControl = new UINbgcPartialAbsenceScrollableControl(this);
                }
                return this.mUINbgcPartialAbsenceScrollableControl;
            }
        }
        
        public UINbgcDocumentsScrollableControl UINbgcDocumentsScrollableControl
        {
            get
            {
                if ((this.mUINbgcDocumentsScrollableControl == null))
                {
                    this.mUINbgcDocumentsScrollableControl = new UINbgcDocumentsScrollableControl(this);
                }
                return this.mUINbgcDocumentsScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcHourAbsenceScrollableControl mUINbgcHourAbsenceScrollableControl;
        
        private UINbgcPartialAbsenceScrollableControl mUINbgcPartialAbsenceScrollableControl;
        
        private UINbgcDocumentsScrollableControl mUINbgcDocumentsScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgcHourAbsenceScrollableControl : DXScrollableControl
    {
        
        public UINbgcHourAbsenceScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlHourAbsenceClient UIPnlHourAbsenceClient
        {
            get
            {
                if ((this.mUIPnlHourAbsenceClient == null))
                {
                    this.mUIPnlHourAbsenceClient = new UIPnlHourAbsenceClient(this);
                }
                return this.mUIPnlHourAbsenceClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlHourAbsenceClient mUIPnlHourAbsenceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlHourAbsenceClient : DXTestControl
    {
        
        public UIPnlHourAbsenceClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlHourAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChbPabsHourlyAbsenceCheckBox
        {
            get
            {
                if ((this.mUIChbPabsHourlyAbsenceCheckBox == null))
                {
                    this.mUIChbPabsHourlyAbsenceCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChbPabsHourlyAbsenceCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbPabsHourlyAbsence";
                    this.mUIChbPabsHourlyAbsenceCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChbPabsHourlyAbsenceCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIChbPabsHourlyAbsenceCheckBox.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIChbPabsHourlyAbsenceCheckBox;
            }
        }
        
        public UIPnlHourAbsenceTimeClient UIPnlHourAbsenceTimeClient
        {
            get
            {
                if ((this.mUIPnlHourAbsenceTimeClient == null))
                {
                    this.mUIPnlHourAbsenceTimeClient = new UIPnlHourAbsenceTimeClient(this);
                }
                return this.mUIPnlHourAbsenceTimeClient;
            }
        }
        
        public DXTextEdit UITxtHourAbsenceShiftCEdit
        {
            get
            {
                if ((this.mUITxtHourAbsenceShiftCEdit == null))
                {
                    this.mUITxtHourAbsenceShiftCEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtHourAbsenceShiftCEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtHourAbsenceShiftCode";
                    this.mUITxtHourAbsenceShiftCEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtHourAbsenceShiftCEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUITxtHourAbsenceShiftCEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUITxtHourAbsenceShiftCEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChbPabsHourlyAbsenceCheckBox;
        
        private UIPnlHourAbsenceTimeClient mUIPnlHourAbsenceTimeClient;
        
        private DXTextEdit mUITxtHourAbsenceShiftCEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlHourAbsenceTimeClient : DXTestControl
    {
        
        public UIPnlHourAbsenceTimeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlHourAbsenceTime";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlPabsFromTimeClient UIPnlPabsFromTimeClient
        {
            get
            {
                if ((this.mUIPnlPabsFromTimeClient == null))
                {
                    this.mUIPnlPabsFromTimeClient = new UIPnlPabsFromTimeClient(this);
                }
                return this.mUIPnlPabsFromTimeClient;
            }
        }
        
        public UIPnlPabsToDateClient UIPnlPabsToDateClient
        {
            get
            {
                if ((this.mUIPnlPabsToDateClient == null))
                {
                    this.mUIPnlPabsToDateClient = new UIPnlPabsToDateClient(this);
                }
                return this.mUIPnlPabsToDateClient;
            }
        }
        
        public DXTextEdit UIENumberEdit
        {
            get
            {
                if ((this.mUIENumberEdit == null))
                {
                    this.mUIENumberEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumberEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIENumberEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlPabsFromTimeClient mUIPnlPabsFromTimeClient;
        
        private UIPnlPabsToDateClient mUIPnlPabsToDateClient;
        
        private DXTextEdit mUIENumberEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlPabsFromTimeClient : DXTestControl
    {
        
        public UIPnlPabsFromTimeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPabsFromTime";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIETimeEdit
        {
            get
            {
                if ((this.mUIETimeEdit == null))
                {
                    this.mUIETimeEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime";
                    this.mUIETimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETimeEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETimeEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIETimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIETimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlPabsToDateClient : DXTestControl
    {
        
        public UIPnlPabsToDateClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPabsToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIETimeEdit
        {
            get
            {
                if ((this.mUIETimeEdit == null))
                {
                    this.mUIETimeEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime";
                    this.mUIETimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETimeEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETimeEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIETimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIETimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgcPartialAbsenceScrollableControl : DXScrollableControl
    {
        
        public UINbgcPartialAbsenceScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcPartialAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlPartialAbsenceClient UIPnlPartialAbsenceClient
        {
            get
            {
                if ((this.mUIPnlPartialAbsenceClient == null))
                {
                    this.mUIPnlPartialAbsenceClient = new UIPnlPartialAbsenceClient(this);
                }
                return this.mUIPnlPartialAbsenceClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlPartialAbsenceClient mUIPnlPartialAbsenceClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlPartialAbsenceClient : DXTestControl
    {
        
        public UIPnlPartialAbsenceClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPartialAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgPartialAbsenceTypeRadioGroup
        {
            get
            {
                if ((this.mUIRgPartialAbsenceTypeRadioGroup == null))
                {
                    this.mUIRgPartialAbsenceTypeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgPartialAbsenceTypeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgPartialAbsenceType";
                    this.mUIRgPartialAbsenceTypeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgPartialAbsenceTypeRadioGroup.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIRgPartialAbsenceTypeRadioGroup;
            }
        }
        
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUIENumber0Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        
        public DXTextEdit UIENumber1Edit
        {
            get
            {
                if ((this.mUIENumber1Edit == null))
                {
                    this.mUIENumber1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[1]";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUIENumber1Edit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIENumber1Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgPartialAbsenceTypeRadioGroup;
        
        private DXTextEdit mUIENumber0Edit;
        
        private DXTextEdit mUIENumber1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgcDocumentsScrollableControl : DXScrollableControl
    {
        
        public UINbgcDocumentsScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcDocuments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITcDocumentationTabList UITcDocumentationTabList
        {
            get
            {
                if ((this.mUITcDocumentationTabList == null))
                {
                    this.mUITcDocumentationTabList = new UITcDocumentationTabList(this);
                }
                return this.mUITcDocumentationTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcDocumentationTabList mUITcDocumentationTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcDocumentationTabList : DXTestControl
    {
        
        public UITcDocumentationTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcDocumentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITabDocumentationClient UITabDocumentationClient
        {
            get
            {
                if ((this.mUITabDocumentationClient == null))
                {
                    this.mUITabDocumentationClient = new UITabDocumentationClient(this);
                }
                return this.mUITabDocumentationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITabDocumentationClient mUITabDocumentationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabDocumentationClient : DXTestControl
    {
        
        public UITabDocumentationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabDocumentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlDocumentationScrollableControl UIPnlDocumentationScrollableControl
        {
            get
            {
                if ((this.mUIPnlDocumentationScrollableControl == null))
                {
                    this.mUIPnlDocumentationScrollableControl = new UIPnlDocumentationScrollableControl(this);
                }
                return this.mUIPnlDocumentationScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlDocumentationScrollableControl mUIPnlDocumentationScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlDocumentationScrollableControl : DXScrollableControl
    {
        
        public UIPnlDocumentationScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlDocumentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSScrollableControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChbRecievedWrittenDoCheckBox
        {
            get
            {
                if ((this.mUIChbRecievedWrittenDoCheckBox == null))
                {
                    this.mUIChbRecievedWrittenDoCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChbRecievedWrittenDoCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chbRecievedWrittenDocumentation";
                    this.mUIChbRecievedWrittenDoCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChbRecievedWrittenDoCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIChbRecievedWrittenDoCheckBox.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIChbRecievedWrittenDoCheckBox;
            }
        }
        
        public UIPnlGenerateDocClient UIPnlGenerateDocClient
        {
            get
            {
                if ((this.mUIPnlGenerateDocClient == null))
                {
                    this.mUIPnlGenerateDocClient = new UIPnlGenerateDocClient(this);
                }
                return this.mUIPnlGenerateDocClient;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChbRecievedWrittenDoCheckBox;
        
        private UIPnlGenerateDocClient mUIPnlGenerateDocClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGenerateDocClient : DXTestControl
    {
        
        public UIPnlGenerateDocClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGenerateDoc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILueDocumentsLookUpEdit UILueDocumentsLookUpEdit
        {
            get
            {
                if ((this.mUILueDocumentsLookUpEdit == null))
                {
                    this.mUILueDocumentsLookUpEdit = new UILueDocumentsLookUpEdit(this);
                }
                return this.mUILueDocumentsLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILueDocumentsLookUpEdit mUILueDocumentsLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILueDocumentsLookUpEdit : DXLookUpEdit
    {
        
        public UILueDocumentsLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueDocuments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "lueDocumentsPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlShiftManagementClient : DXTestControl
    {
        
        public UIPnlShiftManagementClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISccShiftManagementSplitContainerControl UISccShiftManagementSplitContainerControl
        {
            get
            {
                if ((this.mUISccShiftManagementSplitContainerControl == null))
                {
                    this.mUISccShiftManagementSplitContainerControl = new UISccShiftManagementSplitContainerControl(this);
                }
                return this.mUISccShiftManagementSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UISccShiftManagementSplitContainerControl mUISccShiftManagementSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISccShiftManagementSplitContainerControl : DXSplitContainerControl
    {
        
        public UISccShiftManagementSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        
        public UISplitGroupPanelClient1 UISplitGroupPanelClient1
        {
            get
            {
                if ((this.mUISplitGroupPanelClient1 == null))
                {
                    this.mUISplitGroupPanelClient1 = new UISplitGroupPanelClient1(this);
                }
                return this.mUISplitGroupPanelClient1;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient mUISplitGroupPanelClient;
        
        private UISplitGroupPanelClient1 mUISplitGroupPanelClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient : DXTestControl
    {
        
        public UISplitGroupPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagementSplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcShiftsClient UIGrcShiftsClient
        {
            get
            {
                if ((this.mUIGrcShiftsClient == null))
                {
                    this.mUIGrcShiftsClient = new UIGrcShiftsClient(this);
                }
                return this.mUIGrcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcShiftsClient mUIGrcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrcShiftsClient : DXTestControl
    {
        
        public UIGrcShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITcShiftsTabList UITcShiftsTabList
        {
            get
            {
                if ((this.mUITcShiftsTabList == null))
                {
                    this.mUITcShiftsTabList = new UITcShiftsTabList(this);
                }
                return this.mUITcShiftsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcShiftsTabList mUITcShiftsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcShiftsTabList : DXTestControl
    {
        
        public UITcShiftsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIXtpShiftsGridClient UIXtpShiftsGridClient
        {
            get
            {
                if ((this.mUIXtpShiftsGridClient == null))
                {
                    this.mUIXtpShiftsGridClient = new UIXtpShiftsGridClient(this);
                }
                return this.mUIXtpShiftsGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtpShiftsGridClient mUIXtpShiftsGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtpShiftsGridClient : DXTestControl
    {
        
        public UIXtpShiftsGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpShiftsGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlShiftGridButtonsClient UIPnlShiftGridButtonsClient
        {
            get
            {
                if ((this.mUIPnlShiftGridButtonsClient == null))
                {
                    this.mUIPnlShiftGridButtonsClient = new UIPnlShiftGridButtonsClient(this);
                }
                return this.mUIPnlShiftGridButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlShiftGridButtonsClient mUIPnlShiftGridButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlShiftGridButtonsClient : DXTestControl
    {
        
        public UIPnlShiftGridButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlShiftGridButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXButton UIEndrevakterButton
        {
            get
            {
                if ((this.mUIEndrevakterButton == null))
                {
                    this.mUIEndrevakterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndrevakterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnChangeShifts";
                    this.mUIEndrevakterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndrevakterButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIEndrevakterButton.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIEndrevakterButton;
            }
        }
        
        public DXButton UINyvaktButton
        {
            get
            {
                if ((this.mUINyvaktButton == null))
                {
                    this.mUINyvaktButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINyvaktButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNewShift";
                    this.mUINyvaktButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINyvaktButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUINyvaktButton.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUINyvaktButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEndrevakterButton;
        
        private DXButton mUINyvaktButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient1 : DXTestControl
    {
        
        public UISplitGroupPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagementSplitGroupPanel[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcSalaryClient UIGrcSalaryClient
        {
            get
            {
                if ((this.mUIGrcSalaryClient == null))
                {
                    this.mUIGrcSalaryClient = new UIGrcSalaryClient(this);
                }
                return this.mUIGrcSalaryClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcSalaryClient mUIGrcSalaryClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrcSalaryClient : DXTestControl
    {
        
        public UIGrcSalaryClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcSalary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlRecalcDeductPaymeClient UIPnlRecalcDeductPaymeClient
        {
            get
            {
                if ((this.mUIPnlRecalcDeductPaymeClient == null))
                {
                    this.mUIPnlRecalcDeductPaymeClient = new UIPnlRecalcDeductPaymeClient(this);
                }
                return this.mUIPnlRecalcDeductPaymeClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRecalcDeductPaymeClient mUIPnlRecalcDeductPaymeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRecalcDeductPaymeClient : DXTestControl
    {
        
        public UIPnlRecalcDeductPaymeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRecalcDeductPayment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXButton UIBtnRecalcDeductPaymeButton
        {
            get
            {
                if ((this.mUIBtnRecalcDeductPaymeButton == null))
                {
                    this.mUIBtnRecalcDeductPaymeButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnRecalcDeductPaymeButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRecalcDeductPayment";
                    this.mUIBtnRecalcDeductPaymeButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnRecalcDeductPaymeButton.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIBtnRecalcDeductPaymeButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBtnRecalcDeductPaymeButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlBottomActionsClient : DXTestControl
    {
        
        public UIPnlBottomActionsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottomActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKFerdigButton
        {
            get
            {
                if ((this.mUIOKFerdigButton == null))
                {
                    this.mUIOKFerdigButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKFerdigButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOkFinish";
                    this.mUIOKFerdigButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKFerdigButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIOKFerdigButton.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIOKFerdigButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIAvbrytButton.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKFerdigButton;
        
        private DXButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMicrosoftExcelWindow : WinWindow
    {
        
        public UIMicrosoftExcelWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Microsoft Excel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Microsoft Excel");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Microsoft Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Microsoft Excel");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIDpnlVisualizationDockPanel UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        
        public UIDpnlVisualizationDockPanel1 UIDpnlVisualizationDockPanel1
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel1 == null))
                {
                    this.mUIDpnlVisualizationDockPanel1 = new UIDpnlVisualizationDockPanel1(this);
                }
                return this.mUIDpnlVisualizationDockPanel1;
            }
        }
        
        public UIPnlRosterPlanClient1 UIPnlRosterPlanClient1
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient1 == null))
                {
                    this.mUIPnlRosterPlanClient1 = new UIPnlRosterPlanClient1(this);
                }
                return this.mUIPnlRosterPlanClient1;
            }
        }
        
        public UIRcMenuRibbon1 UIRcMenuRibbon1
        {
            get
            {
                if ((this.mUIRcMenuRibbon1 == null))
                {
                    this.mUIRcMenuRibbon1 = new UIRcMenuRibbon1(this);
                }
                return this.mUIRcMenuRibbon1;
            }
        }
        
        public UIRosterPlanGridMenu1Custom UIRosterPlanGridMenu1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGridMenu1Custom == null))
                {
                    this.mUIRosterPlanGridMenu1Custom = new UIRosterPlanGridMenu1Custom(this);
                }
                return this.mUIRosterPlanGridMenu1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        
        private UIDpnlVisualizationDockPanel mUIDpnlVisualizationDockPanel;
        
        private UIDpnlVisualizationDockPanel1 mUIDpnlVisualizationDockPanel1;
        
        private UIPnlRosterPlanClient1 mUIPnlRosterPlanClient1;
        
        private UIRcMenuRibbon1 mUIRcMenuRibbon1;
        
        private UIRosterPlanGridMenu1Custom mUIRosterPlanGridMenu1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        
        public UIPopupContainerEditPopupEdit UIPopupContainerEditPopupEdit
        {
            get
            {
                if ((this.mUIPopupContainerEditPopupEdit == null))
                {
                    this.mUIPopupContainerEditPopupEdit = new UIPopupContainerEditPopupEdit(this);
                }
                return this.mUIPopupContainerEditPopupEdit;
            }
        }
        
        public UIComboBoxEditComboBox UIComboBoxEditComboBox
        {
            get
            {
                if ((this.mUIComboBoxEditComboBox == null))
                {
                    this.mUIComboBoxEditComboBox = new UIComboBoxEditComboBox(this);
                }
                return this.mUIComboBoxEditComboBox;
            }
        }
        
        public UIRpPlanRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        
        public UIRpRosterPlanRibbonPage UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage mUIRpFilterRibbonPage;
        
        private UIPopupContainerEditPopupEdit mUIPopupContainerEditPopupEdit;
        
        private UIComboBoxEditComboBox mUIComboBoxEditComboBox;
        
        private UIRpPlanRibbonPage mUIRpPlanRibbonPage;
        
        private UIRpRosterPlanRibbonPage mUIRpRosterPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpFilterRibbonPage : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpFilterAndVisualRibbonPageGroup UIGrpFilterAndVisualRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpFilterAndVisualRibbonPageGroup == null))
                {
                    this.mUIGrpFilterAndVisualRibbonPageGroup = new UIGrpFilterAndVisualRibbonPageGroup(this);
                }
                return this.mUIGrpFilterAndVisualRibbonPageGroup;
            }
        }
        
        public UIRpgFilterRibbonPageGroup UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpFilterAndVisualRibbonPageGroup mUIGrpFilterAndVisualRibbonPageGroup;
        
        private UIRpgFilterRibbonPageGroup mUIRpgFilterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpFilterAndVisualRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpFilterAndVisualRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpFilterAndVisual";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIUkesumRibbonEditItem
        {
            get
            {
                if ((this.mUIUkesumRibbonEditItem == null))
                {
                    this.mUIUkesumRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIUkesumRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "beiSumFilter";
                    this.mUIUkesumRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIUkesumRibbonEditItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIUkesumRibbonEditItem;
            }
        }
        
        public DXRibbonEditItem UICbShowExtendedWeeksRibbonEditItem
        {
            get
            {
                if ((this.mUICbShowExtendedWeeksRibbonEditItem == null))
                {
                    this.mUICbShowExtendedWeeksRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUICbShowExtendedWeeksRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShowExtendedWeeks";
                    this.mUICbShowExtendedWeeksRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUICbShowExtendedWeeksRibbonEditItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUICbShowExtendedWeeksRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIUkesumRibbonEditItem;
        
        private DXRibbonEditItem mUICbShowExtendedWeeksRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgFilterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIDdlCustomizeColumnsRibbonEditItem
        {
            get
            {
                if ((this.mUIDdlCustomizeColumnsRibbonEditItem == null))
                {
                    this.mUIDdlCustomizeColumnsRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlCustomizeColumns";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDdlCustomizeColumnsRibbonEditItem;
            }
        }
        
        public DXRibbonEditItem UIDdlFilterRibbonEditItem
        {
            get
            {
                if ((this.mUIDdlFilterRibbonEditItem == null))
                {
                    this.mUIDdlFilterRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIDdlFilterRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlFilter";
                    this.mUIDdlFilterRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIDdlFilterRibbonEditItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDdlFilterRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIDdlCustomizeColumnsRibbonEditItem;
        
        private DXRibbonEditItem mUIDdlFilterRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupContainerEditPopupEdit : DXPopupEdit
    {
        
        public UIPopupContainerEditPopupEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerEdit";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerFormWindow UIPopupContainerFormWindow
        {
            get
            {
                if ((this.mUIPopupContainerFormWindow == null))
                {
                    this.mUIPopupContainerFormWindow = new UIPopupContainerFormWindow(this);
                }
                return this.mUIPopupContainerFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerFormWindow mUIPopupContainerFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupContainerFormWindow : DXWindow
    {
        
        public UIPopupContainerFormWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuPopupContainerEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPccSumFilterClient UIPccSumFilterClient
        {
            get
            {
                if ((this.mUIPccSumFilterClient == null))
                {
                    this.mUIPccSumFilterClient = new UIPccSumFilterClient(this);
                }
                return this.mUIPccSumFilterClient;
            }
        }
        
        public UIDdlFilterPopupContaiClient UIDdlFilterPopupContaiClient
        {
            get
            {
                if ((this.mUIDdlFilterPopupContaiClient == null))
                {
                    this.mUIDdlFilterPopupContaiClient = new UIDdlFilterPopupContaiClient(this);
                }
                return this.mUIDdlFilterPopupContaiClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPccSumFilterClient mUIPccSumFilterClient;
        
        private UIDdlFilterPopupContaiClient mUIDdlFilterPopupContaiClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPccSumFilterClient : DXTestControl
    {
        
        public UIPccSumFilterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pccSumFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcSumFilterClient UIPcSumFilterClient
        {
            get
            {
                if ((this.mUIPcSumFilterClient == null))
                {
                    this.mUIPcSumFilterClient = new UIPcSumFilterClient(this);
                }
                return this.mUIPcSumFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcSumFilterClient mUIPcSumFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcSumFilterClient : DXTestControl
    {
        
        public UIPcSumFilterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcSumFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgSumFilterRadioGroup
        {
            get
            {
                if ((this.mUIRgSumFilterRadioGroup == null))
                {
                    this.mUIRgSumFilterRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgSumFilterRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgSumFilter";
                    this.mUIRgSumFilterRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroup";
                    this.mUIRgSumFilterRadioGroup.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRgSumFilterRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgSumFilterRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdlFilterPopupContaiClient : DXTestControl
    {
        
        public UIDdlFilterPopupContaiClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlFilterPopupContainerControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDdlFilterTreeListTreeList UIDdlFilterTreeListTreeList
        {
            get
            {
                if ((this.mUIDdlFilterTreeListTreeList == null))
                {
                    this.mUIDdlFilterTreeListTreeList = new UIDdlFilterTreeListTreeList(this);
                }
                return this.mUIDdlFilterTreeListTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UIDdlFilterTreeListTreeList mUIDdlFilterTreeListTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdlFilterTreeListTreeList : DXTreeList
    {
        
        public UIDdlFilterTreeListTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlFilterTreeList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode2TreeListNode UINode2TreeListNode
        {
            get
            {
                if ((this.mUINode2TreeListNode == null))
                {
                    this.mUINode2TreeListNode = new UINode2TreeListNode(this);
                }
                return this.mUINode2TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode2TreeListNode mUINode2TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode2TreeListNode : DXTreeListNode
    {
        
        public UINode2TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode1TreeListNode UINode1TreeListNode
        {
            get
            {
                if ((this.mUINode1TreeListNode == null))
                {
                    this.mUINode1TreeListNode = new UINode1TreeListNode(this);
                }
                return this.mUINode1TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode1TreeListNode mUINode1TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode1TreeListNode : DXTreeListNode
    {
        
        public UINode1TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTestControl UINode1TreeListNodeCheckBox
        {
            get
            {
                if ((this.mUINode1TreeListNodeCheckBox == null))
                {
                    this.mUINode1TreeListNodeCheckBox = new DXTestControl(this);
                    #region Search Criteria
                    this.mUINode1TreeListNodeCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "Node1";
                    this.mUINode1TreeListNodeCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNodeCheckBox";
                    this.mUINode1TreeListNodeCheckBox.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUINode1TreeListNodeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUINode1TreeListNodeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIComboBoxEditComboBox : DXComboBox
    {
        
        public UIComboBoxEditComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxWindow UIComboBoxPopupListBoxWindow
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxWindow == null))
                {
                    this.mUIComboBoxPopupListBoxWindow = new UIComboBoxPopupListBoxWindow(this);
                }
                return this.mUIComboBoxPopupListBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxWindow mUIComboBoxPopupListBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIComboBoxPopupListBoxWindow : DXWindow
    {
        
        public UIComboBoxPopupListBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxForm";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxList UIComboBoxPopupListBoxList
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxList == null))
                {
                    this.mUIComboBoxPopupListBoxList = new UIComboBoxPopupListBoxList(this);
                }
                return this.mUIComboBoxPopupListBoxList;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxList mUIComboBoxPopupListBoxList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIComboBoxPopupListBoxList : DXListBox
    {
        
        public UIComboBoxPopupListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBox";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIArbeidsplanberegningListItem
        {
            get
            {
                if ((this.mUIArbeidsplanberegningListItem == null))
                {
                    this.mUIArbeidsplanberegningListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIArbeidsplanberegningListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]Item[4]";
                    this.mUIArbeidsplanberegningListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxItem";
                    this.mUIArbeidsplanberegningListItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIArbeidsplanberegningListItem;
            }
        }
        
        public DXListBoxItem UITilpassetvisningListItem
        {
            get
            {
                if ((this.mUITilpassetvisningListItem == null))
                {
                    this.mUITilpassetvisningListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUITilpassetvisningListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]Item[8]";
                    this.mUITilpassetvisningListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxItem";
                    this.mUITilpassetvisningListItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUITilpassetvisningListItem;
            }
        }
        
        public DXListBoxItem UIVaktfordelingListItem
        {
            get
            {
                if ((this.mUIVaktfordelingListItem == null))
                {
                    this.mUIVaktfordelingListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIVaktfordelingListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]Item[5]";
                    this.mUIVaktfordelingListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxItem";
                    this.mUIVaktfordelingListItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVaktfordelingListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIArbeidsplanberegningListItem;
        
        private DXListBoxItem mUITilpassetvisningListItem;
        
        private DXListBoxItem mUIVaktfordelingListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanPrintRibbonPageGroup UIRpgPlanPrintRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanPrintRibbonPageGroup == null))
                {
                    this.mUIRpgPlanPrintRibbonPageGroup = new UIRpgPlanPrintRibbonPageGroup(this);
                }
                return this.mUIRpgPlanPrintRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanPrintRibbonPageGroup mUIRpgPlanPrintRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgPlanPrintRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanPrintRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlanPrint";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIArbeidsplanRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIArbeidsplanRibbonBaseButtonItem == null))
                {
                    this.mUIArbeidsplanRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIArbeidsplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPrint";
                    this.mUIArbeidsplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIArbeidsplanRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIArbeidsplanRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIArbeidsplanRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpRosterPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpCloseRibbonPageGroup UIGrpCloseRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpCloseRibbonPageGroup == null))
                {
                    this.mUIGrpCloseRibbonPageGroup = new UIGrpCloseRibbonPageGroup(this);
                }
                return this.mUIGrpCloseRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpCloseRibbonPageGroup mUIGrpCloseRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpCloseRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpCloseRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpClose";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBtnCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBtnCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        
        public UIRosterPlanGrid1Custom UIRosterPlanGrid1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGrid1Custom == null))
                {
                    this.mUIRosterPlanGrid1Custom = new UIRosterPlanGrid1Custom(this);
                }
                return this.mUIRosterPlanGrid1Custom;
            }
        }
        
        public UI_LayoutControl1Custom UI_LayoutControl1Custom
        {
            get
            {
                if ((this.mUI_LayoutControl1Custom == null))
                {
                    this.mUI_LayoutControl1Custom = new UI_LayoutControl1Custom(this);
                }
                return this.mUI_LayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel mUIDpnlColumnsDockPanel;
        
        private UIRosterPlanGrid1Custom mUIRosterPlanGrid1Custom;
        
        private UI_LayoutControl1Custom mUI_LayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlColumnsDockPanel : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcExtraGridTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
                    this.mUIGcExtraGridTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcExtraGridTable.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGrid1Custom : DXTestControl
    {
        
        public UIRosterPlanGrid1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGrid1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGrid";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell FirstCellinPlan
        {
            get
            {
                if ((this.mFirstCellinPlan == null))
                {
                    this.mFirstCellinPlan = new DXCell(this);
                    #region Search Criteria
                    this.mFirstCellinPlan.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_0";
                    this.mFirstCellinPlan.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mFirstCellinPlan.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mFirstCellinPlan;
            }
        }
        
        public DXCell UIItem10HelgCell
        {
            get
            {
                if ((this.mUIItem10HelgCell == null))
                {
                    this.mUIItem10HelgCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]EmployeeName";
                    this.mUIItem10HelgCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem10HelgCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem10HelgCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mFirstCellinPlan;
        
        private DXCell mUIItem10HelgCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_LayoutControl1Custom : DXTestControl
    {
        
        public UI_LayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_LayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcGroupMainLayoutGroup UILcGroupMainLayoutGroup
        {
            get
            {
                if ((this.mUILcGroupMainLayoutGroup == null))
                {
                    this.mUILcGroupMainLayoutGroup = new UILcGroupMainLayoutGroup(this);
                }
                return this.mUILcGroupMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcGroupMainLayoutGroup mUILcGroupMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcGroupMainLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcGroupMainLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcGroupMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILciFindLayoutControlItem UILciFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciFindLayoutControlItem == null))
                {
                    this.mUILciFindLayoutControlItem = new UILciFindLayoutControlItem(this);
                }
                return this.mUILciFindLayoutControlItem;
            }
        }
        
        public UILciFindButtonLayoutControlItem UILciFindButtonLayoutControlItem
        {
            get
            {
                if ((this.mUILciFindButtonLayoutControlItem == null))
                {
                    this.mUILciFindButtonLayoutControlItem = new UILciFindButtonLayoutControlItem(this);
                }
                return this.mUILciFindButtonLayoutControlItem;
            }
        }
        
        public UILciClearButtonLayoutControlItem UILciClearButtonLayoutControlItem
        {
            get
            {
                if ((this.mUILciClearButtonLayoutControlItem == null))
                {
                    this.mUILciClearButtonLayoutControlItem = new UILciClearButtonLayoutControlItem(this);
                }
                return this.mUILciClearButtonLayoutControlItem;
            }
        }
        
        public UILciCloseButtonLayoutControlItem UILciCloseButtonLayoutControlItem
        {
            get
            {
                if ((this.mUILciCloseButtonLayoutControlItem == null))
                {
                    this.mUILciCloseButtonLayoutControlItem = new UILciCloseButtonLayoutControlItem(this);
                }
                return this.mUILciCloseButtonLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciFindLayoutControlItem mUILciFindLayoutControlItem;
        
        private UILciFindButtonLayoutControlItem mUILciFindButtonLayoutControlItem;
        
        private UILciClearButtonLayoutControlItem mUILciClearButtonLayoutControlItem;
        
        private UILciCloseButtonLayoutControlItem mUILciCloseButtonLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciFindLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciFindLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXMRUEdit UI_TeFindMRUEdit
        {
            get
            {
                if ((this.mUI_TeFindMRUEdit == null))
                {
                    this.mUI_TeFindMRUEdit = new DXMRUEdit(this);
                    #region Search Criteria
                    this.mUI_TeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "_TeFind";
                    this.mUI_TeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MRUEdit";
                    this.mUI_TeFindMRUEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUI_TeFindMRUEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXMRUEdit mUI_TeFindMRUEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciFindButtonLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciFindButtonLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFindButton";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UISøkButton
        {
            get
            {
                if ((this.mUISøkButton == null))
                {
                    this.mUISøkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_BtFind";
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISøkButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISøkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISøkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciClearButtonLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciClearButtonLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciClearButton";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UITømButton
        {
            get
            {
                if ((this.mUITømButton == null))
                {
                    this.mUITømButton = new DXButton(this);
                    #region Search Criteria
                    this.mUITømButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_BtClear";
                    this.mUITømButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUITømButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUITømButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUITømButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciCloseButtonLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciCloseButtonLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciCloseButton";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UI_BtCloseButton
        {
            get
            {
                if ((this.mUI_BtCloseButton == null))
                {
                    this.mUI_BtCloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUI_BtCloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_BtClose";
                    this.mUI_BtCloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CloseButton";
                    this.mUI_BtCloseButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUI_BtCloseButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUI_BtCloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlVisualizationDockPanel : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITcVisualizationTabList UITcVisualizationTabList
        {
            get
            {
                if ((this.mUITcVisualizationTabList == null))
                {
                    this.mUITcVisualizationTabList = new UITcVisualizationTabList(this);
                }
                return this.mUITcVisualizationTabList;
            }
        }
        
        public UITcSubtabsTabList UITcSubtabsTabList
        {
            get
            {
                if ((this.mUITcSubtabsTabList == null))
                {
                    this.mUITcSubtabsTabList = new UITcSubtabsTabList(this);
                }
                return this.mUITcSubtabsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcVisualizationTabList mUITcVisualizationTabList;
        
        private UITcSubtabsTabList mUITcSubtabsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcVisualizationTabList : DXTestControl
    {
        
        public UITcVisualizationTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITpValidationMessagesClient UITpValidationMessagesClient
        {
            get
            {
                if ((this.mUITpValidationMessagesClient == null))
                {
                    this.mUITpValidationMessagesClient = new UITpValidationMessagesClient(this);
                }
                return this.mUITpValidationMessagesClient;
            }
        }
        
        public UITpFixedPaymentClient UITpFixedPaymentClient
        {
            get
            {
                if ((this.mUITpFixedPaymentClient == null))
                {
                    this.mUITpFixedPaymentClient = new UITpFixedPaymentClient(this);
                }
                return this.mUITpFixedPaymentClient;
            }
        }
        
        public UITpApprovalClient UITpApprovalClient
        {
            get
            {
                if ((this.mUITpApprovalClient == null))
                {
                    this.mUITpApprovalClient = new UITpApprovalClient(this);
                }
                return this.mUITpApprovalClient;
            }
        }
        
        public UITpCostCalculationClient UITpCostCalculationClient
        {
            get
            {
                if ((this.mUITpCostCalculationClient == null))
                {
                    this.mUITpCostCalculationClient = new UITpCostCalculationClient(this);
                }
                return this.mUITpCostCalculationClient;
            }
        }
        
        public UITpVacationBanksClient UITpVacationBanksClient
        {
            get
            {
                if ((this.mUITpVacationBanksClient == null))
                {
                    this.mUITpVacationBanksClient = new UITpVacationBanksClient(this);
                }
                return this.mUITpVacationBanksClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpValidationMessagesClient mUITpValidationMessagesClient;
        
        private UITpFixedPaymentClient mUITpFixedPaymentClient;
        
        private UITpApprovalClient mUITpApprovalClient;
        
        private UITpCostCalculationClient mUITpCostCalculationClient;
        
        private UITpVacationBanksClient mUITpVacationBanksClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpValidationMessagesClient : DXTestControl
    {
        
        public UITpValidationMessagesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpValidationMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkFilterValidationMCheckBox
        {
            get
            {
                if ((this.mUIChkFilterValidationMCheckBox == null))
                {
                    this.mUIChkFilterValidationMCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkFilterValidationMCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkFilterValidationMessagesOnSelectedPerson";
                    this.mUIChkFilterValidationMCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkFilterValidationMCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIChkFilterValidationMCheckBox.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIChkFilterValidationMCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkFilterValidationMCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpFixedPaymentClient : DXTestControl
    {
        
        public UITpFixedPaymentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpFixedPayment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentControlCustom : DXTestControl
    {
        
        public UIFixedPaymentControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControllerToViewModelWrapper";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom : DXTestControl
    {
        
        public UIViewHost1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom1 UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom1(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom1 mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentControlCustom1 : DXTestControl
    {
        
        public UIFixedPaymentControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedPaymentControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIKalkulerButton
        {
            get
            {
                if ((this.mUIKalkulerButton == null))
                {
                    this.mUIKalkulerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIKalkulerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCalculate";
                    this.mUIKalkulerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIKalkulerButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIKalkulerButton;
            }
        }
        
        public DXButton UIOverførButton
        {
            get
            {
                if ((this.mUIOverførButton == null))
                {
                    this.mUIOverførButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExport";
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOverførButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOverførButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIKalkulerButton;
        
        private DXButton mUIOverførButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpApprovalClient : DXTestControl
    {
        
        public UITpApprovalClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpApproval";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILcMainCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
                    this.mUILcMainCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
                    this.mUILcMainCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILcMainCustom.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILcMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILcMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpCostCalculationClient : DXTestControl
    {
        
        public UITpCostCalculationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpCostCalculation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public UIGsSplitContainerContSplitContainerControl UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        
        private UIGsSplitContainerContSplitContainerControl mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIBeregnkostnaderButton
        {
            get
            {
                if ((this.mUIBeregnkostnaderButton == null))
                {
                    this.mUIBeregnkostnaderButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBeregnkostnaderButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btCalculate";
                    this.mUIBeregnkostnaderButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBeregnkostnaderButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBeregnkostnaderButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBeregnkostnaderButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsSplitContainerContSplitContainerControl : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient2 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient2(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient2 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient2 : DXTestControl
    {
        
        public UISplitGroupPanelClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1SplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsNavBarControl1NavBar UIGsNavBarControl1NavBar
        {
            get
            {
                if ((this.mUIGsNavBarControl1NavBar == null))
                {
                    this.mUIGsNavBarControl1NavBar = new UIGsNavBarControl1NavBar(this);
                }
                return this.mUIGsNavBarControl1NavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsNavBarControl1NavBar mUIGsNavBarControl1NavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsNavBarControl1NavBar : DXNavBar
    {
        
        public UIGsNavBarControl1NavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsNavBarControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIAnsatteNavBarGroup UIAnsatteNavBarGroup
        {
            get
            {
                if ((this.mUIAnsatteNavBarGroup == null))
                {
                    this.mUIAnsatteNavBarGroup = new UIAnsatteNavBarGroup(this);
                }
                return this.mUIAnsatteNavBarGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIAnsatteNavBarGroup mUIAnsatteNavBarGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAnsatteNavBarGroup : DXNavBarGroup
    {
        
        public UIAnsatteNavBarGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXNavBarGroupButton UIAnsatteNavBarGroupButton
        {
            get
            {
                if ((this.mUIAnsatteNavBarGroupButton == null))
                {
                    this.mUIAnsatteNavBarGroupButton = new DXNavBarGroupButton(this);
                    #region Search Criteria
                    this.mUIAnsatteNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
                    this.mUIAnsatteNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupButton";
                    this.mUIAnsatteNavBarGroupButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteNavBarGroupButton;
            }
        }
        #endregion
        
        #region Fields
        private DXNavBarGroupButton mUIAnsatteNavBarGroupButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpVacationBanksClient : DXTestControl
    {
        
        public UITpVacationBanksClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpVacationBanks";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIVhVacationBanksCustom UIVhVacationBanksCustom
        {
            get
            {
                if ((this.mUIVhVacationBanksCustom == null))
                {
                    this.mUIVhVacationBanksCustom = new UIVhVacationBanksCustom(this);
                }
                return this.mUIVhVacationBanksCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhVacationBanksCustom mUIVhVacationBanksCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhVacationBanksCustom : DXTestControl
    {
        
        public UIVhVacationBanksCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhVacationBanks";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPlannedEmployeesVacaCustom UIPlannedEmployeesVacaCustom
        {
            get
            {
                if ((this.mUIPlannedEmployeesVacaCustom == null))
                {
                    this.mUIPlannedEmployeesVacaCustom = new UIPlannedEmployeesVacaCustom(this);
                }
                return this.mUIPlannedEmployeesVacaCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPlannedEmployeesVacaCustom mUIPlannedEmployeesVacaCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPlannedEmployeesVacaCustom : DXTestControl
    {
        
        public UIPlannedEmployeesVacaCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PlannedEmployeesVacationBanksView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PlannedEmployeesVacationBanksView";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcPlannedEmployeesVaTable UIGcPlannedEmployeesVaTable
        {
            get
            {
                if ((this.mUIGcPlannedEmployeesVaTable == null))
                {
                    this.mUIGcPlannedEmployeesVaTable = new UIGcPlannedEmployeesVaTable(this);
                }
                return this.mUIGcPlannedEmployeesVaTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcPlannedEmployeesVaTable mUIGcPlannedEmployeesVaTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcPlannedEmployeesVaTable : DXGrid
    {
        
        public UIGcPlannedEmployeesVaTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlannedEmployeesVacationBanks";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXGroupRow UIGridControlGroupRowGroupRow
        {
            get
            {
                if ((this.mUIGridControlGroupRowGroupRow == null))
                {
                    this.mUIGridControlGroupRowGroupRow = new DXGroupRow(this);
                    #region Search Criteria
                    this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlannedEmployeesVacationBanksGridControlGroupRow[View]gvPlannedEmployeesVacatio" +
                        "nBanks[Row]-1[Column]colBankName";
                    this.mUIGridControlGroupRowGroupRow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlGroupRow";
                    this.mUIGridControlGroupRowGroupRow.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGridControlGroupRowGroupRow;
            }
        }
        #endregion
        
        #region Fields
        private DXGroupRow mUIGridControlGroupRowGroupRow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcSubtabsTabList : DXTestControl
    {
        
        public UITcSubtabsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabs";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabsPageHeader0";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        
        public UIGatsoftGatUIWindowsFClient UIGatsoftGatUIWindowsFClient
        {
            get
            {
                if ((this.mUIGatsoftGatUIWindowsFClient == null))
                {
                    this.mUIGatsoftGatUIWindowsFClient = new UIGatsoftGatUIWindowsFClient(this);
                }
                return this.mUIGatsoftGatUIWindowsFClient;
            }
        }
        
        public UIViewTabPageClient UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        
        public UIViewTabPageClient1 UIViewTabPageClient1
        {
            get
            {
                if ((this.mUIViewTabPageClient1 == null))
                {
                    this.mUIViewTabPageClient1 = new UIViewTabPageClient1(this);
                }
                return this.mUIViewTabPageClient1;
            }
        }
        
        public UIViewTabPageClient2 UIViewTabPageClient2
        {
            get
            {
                if ((this.mUIViewTabPageClient2 == null))
                {
                    this.mUIViewTabPageClient2 = new UIViewTabPageClient2(this);
                }
                return this.mUIViewTabPageClient2;
            }
        }
        
        public UIViewTabPageClient3 UIViewTabPageClient3
        {
            get
            {
                if ((this.mUIViewTabPageClient3 == null))
                {
                    this.mUIViewTabPageClient3 = new UIViewTabPageClient3(this);
                }
                return this.mUIViewTabPageClient3;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private UIGatsoftGatUIWindowsFClient mUIGatsoftGatUIWindowsFClient;
        
        private UIViewTabPageClient mUIViewTabPageClient;
        
        private UIViewTabPageClient1 mUIViewTabPageClient1;
        
        private UIViewTabPageClient2 mUIViewTabPageClient2;
        
        private UIViewTabPageClient3 mUIViewTabPageClient3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatsoftGatUIWindowsFClient : DXTestControl
    {
        
        public UIGatsoftGatUIWindowsFClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Gatsoft.Gat.UI.Windows.Forms.Planning.RosterPlanning.RosterPlanGrid.Subtabs.CostS" +
                "imulation.Views.CostSimulationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UICostSimulationViewCustom UICostSimulationViewCustom
        {
            get
            {
                if ((this.mUICostSimulationViewCustom == null))
                {
                    this.mUICostSimulationViewCustom = new UICostSimulationViewCustom(this);
                }
                return this.mUICostSimulationViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICostSimulationViewCustom mUICostSimulationViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICostSimulationViewCustom : DXTestControl
    {
        
        public UICostSimulationViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CostSimulationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CostSimulationView";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl1 UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl1(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl1 mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsSplitContainerContSplitContainerControl1 : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient3 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient3(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient3 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient3 : DXTestControl
    {
        
        public UISplitGroupPanelClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1SplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsNavBarControl1NavBar1 UIGsNavBarControl1NavBar
        {
            get
            {
                if ((this.mUIGsNavBarControl1NavBar == null))
                {
                    this.mUIGsNavBarControl1NavBar = new UIGsNavBarControl1NavBar1(this);
                }
                return this.mUIGsNavBarControl1NavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsNavBarControl1NavBar1 mUIGsNavBarControl1NavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsNavBarControl1NavBar1 : DXNavBar
    {
        
        public UIGsNavBarControl1NavBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsNavBarControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIAnsatteNavBarGroup1 UIAnsatteNavBarGroup
        {
            get
            {
                if ((this.mUIAnsatteNavBarGroup == null))
                {
                    this.mUIAnsatteNavBarGroup = new UIAnsatteNavBarGroup1(this);
                }
                return this.mUIAnsatteNavBarGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIAnsatteNavBarGroup1 mUIAnsatteNavBarGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAnsatteNavBarGroup1 : DXNavBarGroup
    {
        
        public UIAnsatteNavBarGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXNavBarGroupButton UIAnsatteNavBarGroupButton
        {
            get
            {
                if ((this.mUIAnsatteNavBarGroupButton == null))
                {
                    this.mUIAnsatteNavBarGroupButton = new DXNavBarGroupButton(this);
                    #region Search Criteria
                    this.mUIAnsatteNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
                    this.mUIAnsatteNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupButton";
                    this.mUIAnsatteNavBarGroupButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteNavBarGroupButton;
            }
        }
        #endregion
        
        #region Fields
        private DXNavBarGroupButton mUIAnsatteNavBarGroupButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient : DXTestControl
    {
        
        public UIViewTabPageClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabsViewTabPage[4]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UICostSimulationViewCustom1 UICostSimulationViewCustom
        {
            get
            {
                if ((this.mUICostSimulationViewCustom == null))
                {
                    this.mUICostSimulationViewCustom = new UICostSimulationViewCustom1(this);
                }
                return this.mUICostSimulationViewCustom;
            }
        }
        
        public UIApprovalViewCustom UIApprovalViewCustom
        {
            get
            {
                if ((this.mUIApprovalViewCustom == null))
                {
                    this.mUIApprovalViewCustom = new UIApprovalViewCustom(this);
                }
                return this.mUIApprovalViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICostSimulationViewCustom1 mUICostSimulationViewCustom;
        
        private UIApprovalViewCustom mUIApprovalViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICostSimulationViewCustom1 : DXTestControl
    {
        
        public UICostSimulationViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CostSimulationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CostSimulationView";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl2 UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl2(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl2 mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsSplitContainerContSplitContainerControl2 : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient4 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient4(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient4 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient4 : DXTestControl
    {
        
        public UISplitGroupPanelClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1SplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsNavBarControl1NavBar2 UIGsNavBarControl1NavBar
        {
            get
            {
                if ((this.mUIGsNavBarControl1NavBar == null))
                {
                    this.mUIGsNavBarControl1NavBar = new UIGsNavBarControl1NavBar2(this);
                }
                return this.mUIGsNavBarControl1NavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsNavBarControl1NavBar2 mUIGsNavBarControl1NavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsNavBarControl1NavBar2 : DXNavBar
    {
        
        public UIGsNavBarControl1NavBar2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsNavBarControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIAnsatteNavBarGroup2 UIAnsatteNavBarGroup
        {
            get
            {
                if ((this.mUIAnsatteNavBarGroup == null))
                {
                    this.mUIAnsatteNavBarGroup = new UIAnsatteNavBarGroup2(this);
                }
                return this.mUIAnsatteNavBarGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIAnsatteNavBarGroup2 mUIAnsatteNavBarGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAnsatteNavBarGroup2 : DXNavBarGroup
    {
        
        public UIAnsatteNavBarGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXNavBarGroupButton UIAnsatteNavBarGroupButton
        {
            get
            {
                if ((this.mUIAnsatteNavBarGroupButton == null))
                {
                    this.mUIAnsatteNavBarGroupButton = new DXNavBarGroupButton(this);
                    #region Search Criteria
                    this.mUIAnsatteNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
                    this.mUIAnsatteNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupButton";
                    this.mUIAnsatteNavBarGroupButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteNavBarGroupButton;
            }
        }
        #endregion
        
        #region Fields
        private DXNavBarGroupButton mUIAnsatteNavBarGroupButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIApprovalViewCustom : DXTestControl
    {
        
        public UIApprovalViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ApprovalView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ApprovalView";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainCustom UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new UILcMainCustom(this);
                }
                return this.mUILcMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainCustom mUILcMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainCustom : DXTestControl
    {
        
        public UILcMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIVelgalleButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        
        public DXButton UIGodkjennButton
        {
            get
            {
                if ((this.mUIGodkjennButton == null))
                {
                    this.mUIGodkjennButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGodkjennButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnApprove";
                    this.mUIGodkjennButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGodkjennButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGodkjennButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGodkjennButton;
            }
        }
        
        public DXButton UIOpphevegneButton
        {
            get
            {
                if ((this.mUIOpphevegneButton == null))
                {
                    this.mUIOpphevegneButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOpphevegneButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDeleteOwnApprovals";
                    this.mUIOpphevegneButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOpphevegneButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIOpphevegneButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOpphevegneButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgalleButton;
        
        private DXButton mUIGodkjennButton;
        
        private DXButton mUIOpphevegneButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient1 : DXTestControl
    {
        
        public UIViewTabPageClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabsViewTabPage[8]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIApprovalViewCustom1 UIApprovalViewCustom
        {
            get
            {
                if ((this.mUIApprovalViewCustom == null))
                {
                    this.mUIApprovalViewCustom = new UIApprovalViewCustom1(this);
                }
                return this.mUIApprovalViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIApprovalViewCustom1 mUIApprovalViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIApprovalViewCustom1 : DXTestControl
    {
        
        public UIApprovalViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ApprovalView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ApprovalView";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainCustom1 UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new UILcMainCustom1(this);
                }
                return this.mUILcMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainCustom1 mUILcMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainCustom1 : DXTestControl
    {
        
        public UILcMainCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIGodkjennButton
        {
            get
            {
                if ((this.mUIGodkjennButton == null))
                {
                    this.mUIGodkjennButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGodkjennButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnApprove";
                    this.mUIGodkjennButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGodkjennButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGodkjennButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGodkjennButton;
            }
        }
        
        public DXButton UIVisloggButton
        {
            get
            {
                if ((this.mUIVisloggButton == null))
                {
                    this.mUIVisloggButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVisloggButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnShowLog";
                    this.mUIVisloggButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVisloggButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIVisloggButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVisloggButton;
            }
        }
        
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIVelgalleButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        
        public DXButton UIOpphevegneButton
        {
            get
            {
                if ((this.mUIOpphevegneButton == null))
                {
                    this.mUIOpphevegneButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOpphevegneButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDeleteOwnApprovals";
                    this.mUIOpphevegneButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOpphevegneButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIOpphevegneButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOpphevegneButton;
            }
        }
        
        public DXButton UIOpphevButton
        {
            get
            {
                if ((this.mUIOpphevButton == null))
                {
                    this.mUIOpphevButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOpphevButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDeleteApprovals";
                    this.mUIOpphevButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOpphevButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIOpphevButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOpphevButton;
            }
        }
        
        public DXButton UIAvvisButton
        {
            get
            {
                if ((this.mUIAvvisButton == null))
                {
                    this.mUIAvvisButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvvisButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnReject";
                    this.mUIAvvisButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvvisButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIAvvisButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAvvisButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGodkjennButton;
        
        private DXButton mUIVisloggButton;
        
        private DXButton mUIVelgalleButton;
        
        private DXButton mUIOpphevegneButton;
        
        private DXButton mUIOpphevButton;
        
        private DXButton mUIAvvisButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient2 : DXTestControl
    {
        
        public UIViewTabPageClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabsViewTabPage[5]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIApprovalViewCustom2 UIApprovalViewCustom
        {
            get
            {
                if ((this.mUIApprovalViewCustom == null))
                {
                    this.mUIApprovalViewCustom = new UIApprovalViewCustom2(this);
                }
                return this.mUIApprovalViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIApprovalViewCustom2 mUIApprovalViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIApprovalViewCustom2 : DXTestControl
    {
        
        public UIApprovalViewCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ApprovalView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ApprovalView";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainCustom2 UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new UILcMainCustom2(this);
                }
                return this.mUILcMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainCustom2 mUILcMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainCustom2 : DXTestControl
    {
        
        public UILcMainCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIVelgalleButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        
        public DXButton UIGodkjennButton
        {
            get
            {
                if ((this.mUIGodkjennButton == null))
                {
                    this.mUIGodkjennButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGodkjennButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnApprove";
                    this.mUIGodkjennButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGodkjennButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGodkjennButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGodkjennButton;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup mUILayoutControlGroup1LayoutGroup;
        
        private DXButton mUIVelgalleButton;
        
        private DXButton mUIGodkjennButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroup1LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcApprovalTable UIGcApprovalTable
        {
            get
            {
                if ((this.mUIGcApprovalTable == null))
                {
                    this.mUIGcApprovalTable = new UIGcApprovalTable(this);
                }
                return this.mUIGcApprovalTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcApprovalTable mUIGcApprovalTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcApprovalTable : DXGrid
    {
        
        public UIGcApprovalTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcApproval";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem5Cell
        {
            get
            {
                if ((this.mUIItem5Cell == null))
                {
                    this.mUIItem5Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcApprovalGridControlCell[View]gvApproval[Row]4[Column]colPersonNumber";
                    this.mUIItem5Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem5Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem5Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient3 : DXTestControl
    {
        
        public UIViewTabPageClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcSubtabsViewTabPage[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentViewCustom UIFixedPaymentViewCustom
        {
            get
            {
                if ((this.mUIFixedPaymentViewCustom == null))
                {
                    this.mUIFixedPaymentViewCustom = new UIFixedPaymentViewCustom(this);
                }
                return this.mUIFixedPaymentViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentViewCustom mUIFixedPaymentViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentViewCustom : DXTestControl
    {
        
        public UIFixedPaymentViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedPaymentView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedPaymentView";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom2 UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom2(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom2 mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentControlCustom2 : DXTestControl
    {
        
        public UIFixedPaymentControlCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "fixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControllerToViewModelWrapper";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom1 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom1(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom1 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom1 : DXTestControl
    {
        
        public UIViewHost1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIFixedPaymentControlCustom3 UIFixedPaymentControlCustom
        {
            get
            {
                if ((this.mUIFixedPaymentControlCustom == null))
                {
                    this.mUIFixedPaymentControlCustom = new UIFixedPaymentControlCustom3(this);
                }
                return this.mUIFixedPaymentControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFixedPaymentControlCustom3 mUIFixedPaymentControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFixedPaymentControlCustom3 : DXTestControl
    {
        
        public UIFixedPaymentControlCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FixedPaymentControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FixedPaymentControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIKalkulerButton
        {
            get
            {
                if ((this.mUIKalkulerButton == null))
                {
                    this.mUIKalkulerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIKalkulerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCalculate";
                    this.mUIKalkulerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIKalkulerButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIKalkulerButton;
            }
        }
        
        public DXButton UIOverførButton
        {
            get
            {
                if ((this.mUIOverførButton == null))
                {
                    this.mUIOverførButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExport";
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOverførButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOverførButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIKalkulerButton;
        
        private DXButton mUIOverførButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlVisualizationDockPanel1 : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTestControl UITopSeparator
        {
            get
            {
                if ((this.mUITopSeparator == null))
                {
                    this.mUITopSeparator = new DXTestControl(this);
                    #region Search Criteria
                    this.mUITopSeparator.SearchProperties[DXTestControl.PropertyNames.Name] = "Top";
                    this.mUITopSeparator.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelResizeZone";
                    this.mUITopSeparator.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUITopSeparator;
            }
        }
        
        public UIDockPanel3_ContainerCustom1 UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom1(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUITopSeparator;
        
        private UIDockPanel3_ContainerCustom1 mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel3_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITcVisualizationTabList1 UITcVisualizationTabList
        {
            get
            {
                if ((this.mUITcVisualizationTabList == null))
                {
                    this.mUITcVisualizationTabList = new UITcVisualizationTabList1(this);
                }
                return this.mUITcVisualizationTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcVisualizationTabList1 mUITcVisualizationTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcVisualizationTabList1 : DXTestControl
    {
        
        public UITcVisualizationTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITpApprovalClient1 UITpApprovalClient
        {
            get
            {
                if ((this.mUITpApprovalClient == null))
                {
                    this.mUITpApprovalClient = new UITpApprovalClient1(this);
                }
                return this.mUITpApprovalClient;
            }
        }
        
        public UITpAbsenceClient UITpAbsenceClient
        {
            get
            {
                if ((this.mUITpAbsenceClient == null))
                {
                    this.mUITpAbsenceClient = new UITpAbsenceClient(this);
                }
                return this.mUITpAbsenceClient;
            }
        }
        
        public UITpValidationMessagesClient1 UITpValidationMessagesClient
        {
            get
            {
                if ((this.mUITpValidationMessagesClient == null))
                {
                    this.mUITpValidationMessagesClient = new UITpValidationMessagesClient1(this);
                }
                return this.mUITpValidationMessagesClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpApprovalClient1 mUITpApprovalClient;
        
        private UITpAbsenceClient mUITpAbsenceClient;
        
        private UITpValidationMessagesClient1 mUITpValidationMessagesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpApprovalClient1 : DXTestControl
    {
        
        public UITpApprovalClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpApproval";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILcMainCustom.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
                    this.mUILcMainCustom.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
                    this.mUILcMainCustom.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILcMainCustom.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILcMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILcMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpAbsenceClient : DXTestControl
    {
        
        public UITpAbsenceClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            #endregion
        }
        
        #region Properties
        public UIGcAbsenceListTable UIGcAbsenceListTable
        {
            get
            {
                if ((this.mUIGcAbsenceListTable == null))
                {
                    this.mUIGcAbsenceListTable = new UIGcAbsenceListTable(this);
                }
                return this.mUIGcAbsenceListTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAbsenceListTable mUIGcAbsenceListTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAbsenceListTable : DXGrid
    {
        
        public UIGcAbsenceListTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIOlsenBrorCell
        {
            get
            {
                if ((this.mUIOlsenBrorCell == null))
                {
                    this.mUIOlsenBrorCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIOlsenBrorCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceListGridControlCell[View]gvAbsenceList[Row]0[Column]gcName";
                    this.mUIOlsenBrorCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIOlsenBrorCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOlsenBrorCell;
            }
        }
        
        public DXCell UIItem45Ferie5dgrukeCell
        {
            get
            {
                if ((this.mUIItem45Ferie5dgrukeCell == null))
                {
                    this.mUIItem45Ferie5dgrukeCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem45Ferie5dgrukeCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceListGridControlCell[View]gvAbsenceList[Row]0[Column]gcAbsenceCode";
                    this.mUIItem45Ferie5dgrukeCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem45Ferie5dgrukeCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem45Ferie5dgrukeCell;
            }
        }
        
        public DXCell UIItem06052024Cell
        {
            get
            {
                if ((this.mUIItem06052024Cell == null))
                {
                    this.mUIItem06052024Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem06052024Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceListGridControlCell[View]gvAbsenceList[Row]0[Column]gcPlannedPeriodFrom";
                    this.mUIItem06052024Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem06052024Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem06052024Cell;
            }
        }
        
        public DXCell UIItem12052024Cell
        {
            get
            {
                if ((this.mUIItem12052024Cell == null))
                {
                    this.mUIItem12052024Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem12052024Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceListGridControlCell[View]gvAbsenceList[Row]0[Column]gcPlannedPeriodTo";
                    this.mUIItem12052024Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem12052024Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem12052024Cell;
            }
        }
        
        public DXCell UIItem4Cell
        {
            get
            {
                if ((this.mUIItem4Cell == null))
                {
                    this.mUIItem4Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceListGridControlCell[View]gvAbsenceList[Row]0[Column]gcPlannedAbsenceBank" +
                        "Value";
                    this.mUIItem4Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIOlsenBrorCell;
        
        private DXCell mUIItem45Ferie5dgrukeCell;
        
        private DXCell mUIItem06052024Cell;
        
        private DXCell mUIItem12052024Cell;
        
        private DXCell mUIItem4Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpValidationMessagesClient1 : DXTestControl
    {
        
        public UITpValidationMessagesClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpValidationMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkFilterValidationMCheckBox
        {
            get
            {
                if ((this.mUIChkFilterValidationMCheckBox == null))
                {
                    this.mUIChkFilterValidationMCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkFilterValidationMCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkFilterValidationMessagesOnSelectedDate";
                    this.mUIChkFilterValidationMCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkFilterValidationMCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIChkFilterValidationMCheckBox.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIChkFilterValidationMCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkFilterValidationMCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient1 : DXTestControl
    {
        
        public UIPnlRosterPlanClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlanTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcRosterPlanTable.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon1 : DXRibbon
    {
        
        public UIRcMenuRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage1 UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage1(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        
        public UIRpRosterPlanRibbonPage1 UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage1(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage1 mUIRpFilterRibbonPage;
        
        private UIRpRosterPlanRibbonPage1 mUIRpRosterPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpFilterRibbonPage1 : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgDisplayPeriodRibbonPageGroup UIRpgDisplayPeriodRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgDisplayPeriodRibbonPageGroup == null))
                {
                    this.mUIRpgDisplayPeriodRibbonPageGroup = new UIRpgDisplayPeriodRibbonPageGroup(this);
                }
                return this.mUIRpgDisplayPeriodRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgDisplayPeriodRibbonPageGroup mUIRpgDisplayPeriodRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgDisplayPeriodRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgDisplayPeriodRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgDisplayPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UITilbakeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUITilbakeRibbonBaseButtonItem == null))
                {
                    this.mUITilbakeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUITilbakeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnBackwards";
                    this.mUITilbakeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUITilbakeRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUITilbakeRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIFremRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIFremRibbonBaseButtonItem == null))
                {
                    this.mUIFremRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIFremRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnForwards";
                    this.mUIFremRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIFremRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIFremRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUITilbakeRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIFremRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpRosterPlanRibbonPage1 : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpFunctionsRibbonPageGroup UIGrpFunctionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpFunctionsRibbonPageGroup == null))
                {
                    this.mUIGrpFunctionsRibbonPageGroup = new UIGrpFunctionsRibbonPageGroup(this);
                }
                return this.mUIGrpFunctionsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpFunctionsRibbonPageGroup mUIGrpFunctionsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpFunctionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpFunctionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpFunctions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILeggtilutjevningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILeggtilutjevningRibbonBaseButtonItem == null))
                {
                    this.mUILeggtilutjevningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILeggtilutjevningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEqualizingShiftAdd";
                    this.mUILeggtilutjevningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILeggtilutjevningRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILeggtilutjevningRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIFjernutjevningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIFjernutjevningRibbonBaseButtonItem == null))
                {
                    this.mUIFjernutjevningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIFjernutjevningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEqualizingShiftRemove";
                    this.mUIFjernutjevningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIFjernutjevningRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIFjernutjevningRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIRotermotvenstreRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRotermotvenstreRibbonBaseButtonItem == null))
                {
                    this.mUIRotermotvenstreRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRotermotvenstreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRotateForward";
                    this.mUIRotermotvenstreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRotermotvenstreRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRotermotvenstreRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIRotermothøyreRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRotermothøyreRibbonBaseButtonItem == null))
                {
                    this.mUIRotermothøyreRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRotermothøyreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRotateBackward";
                    this.mUIRotermothøyreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRotermothøyreRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRotermothøyreRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILeggtilutjevningRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIFjernutjevningRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIRotermotvenstreRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIRotermothøyreRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGridMenu1Custom : DXTestControl
    {
        
        public UIRosterPlanGridMenu1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGridMenu1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGridMenu";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon2 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon2(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon2 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon2 : DXRibbon
    {
        
        public UIRcMenuRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage2 UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage2(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        
        public UIRpRosterPlanRibbonPage2 UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new UIRpRosterPlanRibbonPage2(this);
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        
        public UIGridLookUpEditLookUpEdit UIGridLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGridLookUpEditLookUpEdit == null))
                {
                    this.mUIGridLookUpEditLookUpEdit = new UIGridLookUpEditLookUpEdit(this);
                }
                return this.mUIGridLookUpEditLookUpEdit;
            }
        }
        
        public UIRpPlanRibbonPage1 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage1(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage2 mUIRpFilterRibbonPage;
        
        private UIRpRosterPlanRibbonPage2 mUIRpRosterPlanRibbonPage;
        
        private UIGridLookUpEditLookUpEdit mUIGridLookUpEditLookUpEdit;
        
        private UIRpPlanRibbonPage1 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpFilterRibbonPage2 : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgFilterRibbonPageGroup1 UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup1(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        
        public UIRpgEmployeeFilterFilRibbonPageGroup UIRpgEmployeeFilterFilRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgEmployeeFilterFilRibbonPageGroup == null))
                {
                    this.mUIRpgEmployeeFilterFilRibbonPageGroup = new UIRpgEmployeeFilterFilRibbonPageGroup(this);
                }
                return this.mUIRpgEmployeeFilterFilRibbonPageGroup;
            }
        }
        
        public UIGrpFilterAndVisualRibbonPageGroup1 UIGrpFilterAndVisualRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpFilterAndVisualRibbonPageGroup == null))
                {
                    this.mUIGrpFilterAndVisualRibbonPageGroup = new UIGrpFilterAndVisualRibbonPageGroup1(this);
                }
                return this.mUIGrpFilterAndVisualRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFilterRibbonPageGroup1 mUIRpgFilterRibbonPageGroup;
        
        private UIRpgEmployeeFilterFilRibbonPageGroup mUIRpgEmployeeFilterFilRibbonPageGroup;
        
        private UIGrpFilterAndVisualRibbonPageGroup1 mUIGrpFilterAndVisualRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgFilterRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIBeiRosterPlanColumnSRibbonEditItem
        {
            get
            {
                if ((this.mUIBeiRosterPlanColumnSRibbonEditItem == null))
                {
                    this.mUIBeiRosterPlanColumnSRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIBeiRosterPlanColumnSRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "beiRosterPlanColumnSetup";
                    this.mUIBeiRosterPlanColumnSRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIBeiRosterPlanColumnSRibbonEditItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBeiRosterPlanColumnSRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIBeiRosterPlanColumnSRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgEmployeeFilterFilRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgEmployeeFilterFilRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgEmployeeFilterFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRibbonGalleryBarItemRibbonGallery UIRibbonGalleryBarItemRibbonGallery
        {
            get
            {
                if ((this.mUIRibbonGalleryBarItemRibbonGallery == null))
                {
                    this.mUIRibbonGalleryBarItemRibbonGallery = new UIRibbonGalleryBarItemRibbonGallery(this);
                }
                return this.mUIRibbonGalleryBarItemRibbonGallery;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonGalleryBarItemRibbonGallery mUIRibbonGalleryBarItemRibbonGallery;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonGalleryBarItemRibbonGallery : DXTestControl
    {
        
        public UIRibbonGalleryBarItemRibbonGallery(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryBarItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIRibbonGalleryDropDowButton
        {
            get
            {
                if ((this.mUIRibbonGalleryDropDowButton == null))
                {
                    this.mUIRibbonGalleryDropDowButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDropDownButton";
                    this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDropDownButton";
                    this.mUIRibbonGalleryDropDowButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRibbonGalleryDropDowButton;
            }
        }
        
        public DXButton UIRibbonGalleryUpButtoButton
        {
            get
            {
                if ((this.mUIRibbonGalleryUpButtoButton == null))
                {
                    this.mUIRibbonGalleryUpButtoButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRibbonGalleryUpButtoButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryUpButton";
                    this.mUIRibbonGalleryUpButtoButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryUpButton";
                    this.mUIRibbonGalleryUpButtoButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRibbonGalleryUpButtoButton;
            }
        }
        
        public DXButton UIRibbonGalleryDownButButton
        {
            get
            {
                if ((this.mUIRibbonGalleryDownButButton == null))
                {
                    this.mUIRibbonGalleryDownButButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRibbonGalleryDownButButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDownButton";
                    this.mUIRibbonGalleryDownButButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDownButton";
                    this.mUIRibbonGalleryDownButButton.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRibbonGalleryDownButButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIRibbonGalleryDropDowButton;
        
        private DXButton mUIRibbonGalleryUpButtoButton;
        
        private DXButton mUIRibbonGalleryDownButButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpFilterAndVisualRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpFilterAndVisualRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpFilterAndVisual";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UICbShowNightShiftPlacRibbonEditItem
        {
            get
            {
                if ((this.mUICbShowNightShiftPlacRibbonEditItem == null))
                {
                    this.mUICbShowNightShiftPlacRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUICbShowNightShiftPlacRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShowNightShiftPlacement";
                    this.mUICbShowNightShiftPlacRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUICbShowNightShiftPlacRibbonEditItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUICbShowNightShiftPlacRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUICbShowNightShiftPlacRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpRosterPlanRibbonPage2 : DXRibbonPage
    {
        
        public UIRpRosterPlanRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEditRibbonPageGroup UIGrpEditRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEditRibbonPageGroup == null))
                {
                    this.mUIGrpEditRibbonPageGroup = new UIGrpEditRibbonPageGroup(this);
                }
                return this.mUIGrpEditRibbonPageGroup;
            }
        }
        
        public UIGrpCloseRibbonPageGroup1 UIGrpCloseRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpCloseRibbonPageGroup == null))
                {
                    this.mUIGrpCloseRibbonPageGroup = new UIGrpCloseRibbonPageGroup1(this);
                }
                return this.mUIGrpCloseRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEditRibbonPageGroup mUIGrpEditRibbonPageGroup;
        
        private UIGrpCloseRibbonPageGroup1 mUIGrpCloseRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpEditRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEditRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigerRibbonBaseButtonItem == null))
                {
                    this.mUIRedigerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRedigerRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigerRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpCloseRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpCloseRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpClose";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILukkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILukkRibbonBaseButtonItem == null))
                {
                    this.mUILukkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILukkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUILukkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILukkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILukkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILukkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridLookUpEditLookUpEdit : DXLookUpEdit
    {
        
        public UIGridLookUpEditLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuGridLookUpEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridLookUpEdit";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPopupGridLookUpEditFWindow UIPopupGridLookUpEditFWindow
        {
            get
            {
                if ((this.mUIPopupGridLookUpEditFWindow == null))
                {
                    this.mUIPopupGridLookUpEditFWindow = new UIPopupGridLookUpEditFWindow(this);
                }
                return this.mUIPopupGridLookUpEditFWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupGridLookUpEditFWindow mUIPopupGridLookUpEditFWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupGridLookUpEditFWindow : DXWindow
    {
        
        public UIPopupGridLookUpEditFWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuGridLookUpEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupGridLookUpEditForm";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable : DXGrid
    {
        
        public UIGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuGridLookUpEdit[0]PopupFormGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIDelvisstillingsinforCell
        {
            get
            {
                if ((this.mUIDelvisstillingsinforCell == null))
                {
                    this.mUIDelvisstillingsinforCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDelvisstillingsinforCell.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuGridLookUpEdit[0]PopupFormGridControl[0]GridControlCell[View]repositoryItem" +
                        "GridLookUpEdit1View[Row]1[Column]colName";
                    this.mUIDelvisstillingsinforCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDelvisstillingsinforCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDelvisstillingsinforCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDelvisstillingsinforCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpPlanRibbonPage1 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageGroup17RibbonPageGroup UIRibbonPageGroup17RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup17RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup17RibbonPageGroup = new UIRibbonPageGroup17RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup17RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageGroup17RibbonPageGroup mUIRibbonPageGroup17RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonPageGroup17RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup17RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup17";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILukkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILukkRibbonBaseButtonItem == null))
                {
                    this.mUILukkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILukkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUILukkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILukkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILukkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILukkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIByttansattWindow : DXWindow
    {
        
        public UIByttansattWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytt ansatt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public UIDbFooterCustom UIDbFooterCustom
        {
            get
            {
                if ((this.mUIDbFooterCustom == null))
                {
                    this.mUIDbFooterCustom = new UIDbFooterCustom(this);
                }
                return this.mUIDbFooterCustom;
            }
        }
        
        public DXPopupEdit UILnkDetailPopupEdit
        {
            get
            {
                if ((this.mUILnkDetailPopupEdit == null))
                {
                    this.mUILnkDetailPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail";
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUILnkDetailPopupEdit.WindowTitles.Add("Bytt ansatt");
                    #endregion
                }
                return this.mUILnkDetailPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIDbFooterCustom mUIDbFooterCustom;
        
        private DXPopupEdit mUILnkDetailPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDbFooterCustom : DXTestControl
    {
        
        public UIDbFooterCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Bytt ansatt");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITilpassetvisningWindow : DXWindow
    {
        
        public UITilpassetvisningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Tilpasset visning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tilpasset visning");
            #endregion
        }
        
        #region Properties
        public UIPnlToppButtonClient UIPnlToppButtonClient
        {
            get
            {
                if ((this.mUIPnlToppButtonClient == null))
                {
                    this.mUIPnlToppButtonClient = new UIPnlToppButtonClient(this);
                }
                return this.mUIPnlToppButtonClient;
            }
        }
        
        public UIPnlButtonsClient UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        
        public UIGcSelectionClient UIGcSelectionClient
        {
            get
            {
                if ((this.mUIGcSelectionClient == null))
                {
                    this.mUIGcSelectionClient = new UIGcSelectionClient(this);
                }
                return this.mUIGcSelectionClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlToppButtonClient mUIPnlToppButtonClient;
        
        private UIPnlButtonsClient mUIPnlButtonsClient;
        
        private UIGcSelectionClient mUIGcSelectionClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlToppButtonClient : DXTestControl
    {
        
        public UIPnlToppButtonClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlToppButton";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Tilpasset visning");
            #endregion
        }
        
        #region Properties
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNew";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINYButton.WindowTitles.Add("Tilpasset visning");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        
        public DXButton UISlettButton
        {
            get
            {
                if ((this.mUISlettButton == null))
                {
                    this.mUISlettButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISlettButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUISlettButton.WindowTitles.Add("Tilpasset visning");
                    #endregion
                }
                return this.mUISlettButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINYButton;
        
        private DXButton mUISlettButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlButtonsClient : DXTestControl
    {
        
        public UIPnlButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Tilpasset visning");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Tilpasset visning");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSelectionClient : DXTestControl
    {
        
        public UIGcSelectionClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSelection";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Tilpasset visning");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtName";
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtNameEdit.WindowTitles.Add("Tilpasset visning");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        
        public DXCheckedListBox UIChkListColumnsCheckedListBox
        {
            get
            {
                if ((this.mUIChkListColumnsCheckedListBox == null))
                {
                    this.mUIChkListColumnsCheckedListBox = new DXCheckedListBox(this);
                    #region Search Criteria
                    this.mUIChkListColumnsCheckedListBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkListColumns";
                    this.mUIChkListColumnsCheckedListBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckedListBoxControl";
                    #endregion
                }
                return this.mUIChkListColumnsCheckedListBox;
            }
        }
        
        public DXComboBox UICbeSumFilterComboBox
        {
            get
            {
                if ((this.mUICbeSumFilterComboBox == null))
                {
                    this.mUICbeSumFilterComboBox = new DXComboBox(this);
                    #region Search Criteria
                    this.mUICbeSumFilterComboBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbeSumFilter";
                    this.mUICbeSumFilterComboBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSComboBoxEdit";
                    #endregion
                }
                return this.mUICbeSumFilterComboBox;
            }
        }
        
        public DXCheckBox UIChkDisplaySummaryLinCheckBox
        {
            get
            {
                if ((this.mUIChkDisplaySummaryLinCheckBox == null))
                {
                    this.mUIChkDisplaySummaryLinCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkDisplaySummaryLinCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkDisplaySummaryLine";
                    this.mUIChkDisplaySummaryLinCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkDisplaySummaryLinCheckBox.WindowTitles.Add("Tilpasset visning");
                    #endregion
                }
                return this.mUIChkDisplaySummaryLinCheckBox;
            }
        }
        
        public DXCheckBox UIChkShowExtendedWeeksCheckBox
        {
            get
            {
                if ((this.mUIChkShowExtendedWeeksCheckBox == null))
                {
                    this.mUIChkShowExtendedWeeksCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkShowExtendedWeeksCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkShowExtendedWeeks";
                    this.mUIChkShowExtendedWeeksCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkShowExtendedWeeksCheckBox.WindowTitles.Add("Tilpasset visning");
                    #endregion
                }
                return this.mUIChkShowExtendedWeeksCheckBox;
            }
        }
        
        public DXCheckBox UIChkHighlightWeekendsCheckBox
        {
            get
            {
                if ((this.mUIChkHighlightWeekendsCheckBox == null))
                {
                    this.mUIChkHighlightWeekendsCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkHighlightWeekendsCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkHighlightWeekends";
                    this.mUIChkHighlightWeekendsCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkHighlightWeekendsCheckBox.WindowTitles.Add("Tilpasset visning");
                    #endregion
                }
                return this.mUIChkHighlightWeekendsCheckBox;
            }
        }
        
        public DXRadioGroup UIRgHighlightModeRadioGroup
        {
            get
            {
                if ((this.mUIRgHighlightModeRadioGroup == null))
                {
                    this.mUIRgHighlightModeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgHighlightModeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgHighlightMode";
                    this.mUIRgHighlightModeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    #endregion
                }
                return this.mUIRgHighlightModeRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtNameEdit;
        
        private DXCheckedListBox mUIChkListColumnsCheckedListBox;
        
        private DXComboBox mUICbeSumFilterComboBox;
        
        private DXCheckBox mUIChkDisplaySummaryLinCheckBox;
        
        private DXCheckBox mUIChkShowExtendedWeeksCheckBox;
        
        private DXCheckBox mUIChkHighlightWeekendsCheckBox;
        
        private DXRadioGroup mUIRgHighlightModeRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStartsidenMinGatv201Window : BrowserWindow
    {
        
        public UIStartsidenMinGatv201Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(UITestControl.PropertyNames.Name, "Startsiden - MinGat v.", PropertyExpressionOperator.Contains));
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Startsiden - MinGat v.");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIStartsidenMinGatv201Document UIStartsidenMinGatv201Document
        {
            get
            {
                if ((this.mUIStartsidenMinGatv201Document == null))
                {
                    this.mUIStartsidenMinGatv201Document = new UIStartsidenMinGatv201Document(this);
                }
                return this.mUIStartsidenMinGatv201Document;
            }
        }
        #endregion
        
        #region Fields
        private UIStartsidenMinGatv201Document mUIStartsidenMinGatv201Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStartsidenMinGatv201Document : HtmlDocument
    {
        
        public UIStartsidenMinGatv201Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Startsiden - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".internal.visma.com/MinGat/Employee/Home", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Startsiden - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UICookieDisclaimerCustom UICookieDisclaimerCustom
        {
            get
            {
                if ((this.mUICookieDisclaimerCustom == null))
                {
                    this.mUICookieDisclaimerCustom = new UICookieDisclaimerCustom(this);
                }
                return this.mUICookieDisclaimerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICookieDisclaimerCustom mUICookieDisclaimerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICookieDisclaimerCustom : HtmlCustom
    {
        
        public UICookieDisclaimerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "vwfm-cookie-disclaimer";
            this.SearchProperties["Id"] = "cookieDisclaimer";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "cookie-disclaimer";
            this.FilterProperties["ControlDefinition"] = "class=\"cookie-disclaimer\" id=\"cookieDisc";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Startsiden - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIOKPane
        {
            get
            {
                if ((this.mUIOKPane == null))
                {
                    this.mUIOKPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIOKPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIOKPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOKPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "OK";
                    this.mUIOKPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOKPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-caption no-select";
                    this.mUIOKPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-caption no-select\"";
                    this.mUIOKPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIOKPane.WindowTitles.Add("Startsiden - MinGat v.");
                    #endregion
                }
                return this.mUIOKPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIOKPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINewProgressBarFormWindow : DXWindow
    {
        
        public UINewProgressBarFormWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "NewProgressBarForm";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("NewProgressBarForm");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIPaBorderClient
        {
            get
            {
                if ((this.mUIPaBorderClient == null))
                {
                    this.mUIPaBorderClient = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIPaBorderClient.SearchProperties[DXTestControl.PropertyNames.Name] = "paBorder";
                    this.mUIPaBorderClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
                    this.mUIPaBorderClient.WindowTitles.Add("NewProgressBarForm");
                    #endregion
                }
                return this.mUIPaBorderClient;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIPaBorderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanoppsettfoWindow : DXWindow
    {
        
        public UIArbeidsplanoppsettfoWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplanoppsett", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public UIPnlFilterClient UIPnlFilterClient
        {
            get
            {
                if ((this.mUIPnlFilterClient == null))
                {
                    this.mUIPnlFilterClient = new UIPnlFilterClient(this);
                }
                return this.mUIPnlFilterClient;
            }
        }
        
        public UIPnlButtonsClient1 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient1(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        
        public UINbcRosterSetupNavBar UINbcRosterSetupNavBar
        {
            get
            {
                if ((this.mUINbcRosterSetupNavBar == null))
                {
                    this.mUINbcRosterSetupNavBar = new UINbcRosterSetupNavBar(this);
                }
                return this.mUINbcRosterSetupNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlFilterClient mUIPnlFilterClient;
        
        private UIPnlButtonsClient1 mUIPnlButtonsClient;
        
        private UINbcRosterSetupNavBar mUINbcRosterSetupNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlFilterClient : DXTestControl
    {
        
        public UIPnlFilterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public UIGrpRuleTypeClient UIGrpRuleTypeClient
        {
            get
            {
                if ((this.mUIGrpRuleTypeClient == null))
                {
                    this.mUIGrpRuleTypeClient = new UIGrpRuleTypeClient(this);
                }
                return this.mUIGrpRuleTypeClient;
            }
        }
        
        public UIGrpFilterClient UIGrpFilterClient
        {
            get
            {
                if ((this.mUIGrpFilterClient == null))
                {
                    this.mUIGrpFilterClient = new UIGrpFilterClient(this);
                }
                return this.mUIGrpFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpRuleTypeClient mUIGrpRuleTypeClient;
        
        private UIGrpFilterClient mUIGrpFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpRuleTypeClient : DXTestControl
    {
        
        public UIGrpRuleTypeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpRuleType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            #endregion
        }
        
        #region Properties
        public UILePositionLookUpEdit UILePositionLookUpEdit
        {
            get
            {
                if ((this.mUILePositionLookUpEdit == null))
                {
                    this.mUILePositionLookUpEdit = new UILePositionLookUpEdit(this);
                }
                return this.mUILePositionLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILePositionLookUpEdit mUILePositionLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILePositionLookUpEdit : DXLookUpEdit
    {
        
        public UILePositionLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lePosition";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "lePositionPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Arbeidsplanoppsett for avdeling 5110 - Diverse");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpFilterClient : DXTestControl
    {
        
        public UIGrpFilterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtFilterEdit
        {
            get
            {
                if ((this.mUITxtFilterEdit == null))
                {
                    this.mUITxtFilterEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtFilterEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtFilter";
                    this.mUITxtFilterEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtFilterEdit.WindowTitles.Add("Arbeidsplanoppsett");
                    #endregion
                }
                return this.mUITxtFilterEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtFilterEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlButtonsClient1 : DXTestControl
    {
        
        public UIPnlButtonsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public DXButton UILagreButton
        {
            get
            {
                if ((this.mUILagreButton == null))
                {
                    this.mUILagreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILagreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUILagreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILagreButton.WindowTitles.Add("Arbeidsplanoppsett");
                    #endregion
                }
                return this.mUILagreButton;
            }
        }
        
        public DXButton UILagreLukkButton
        {
            get
            {
                if ((this.mUILagreLukkButton == null))
                {
                    this.mUILagreLukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILagreLukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSaveClose";
                    this.mUILagreLukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILagreLukkButton.WindowTitles.Add("Arbeidsplanoppsett");
                    #endregion
                }
                return this.mUILagreLukkButton;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Arbeidsplanoppsett");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILagreButton;
        
        private DXButton mUILagreLukkButton;
        
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbcRosterSetupNavBar : DXNavBar
    {
        
        public UINbcRosterSetupNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcRosterSetup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public UIMaksplanlagttidperdaNavBarGroup UIMaksplanlagttidperdaNavBarGroup
        {
            get
            {
                if ((this.mUIMaksplanlagttidperdaNavBarGroup == null))
                {
                    this.mUIMaksplanlagttidperdaNavBarGroup = new UIMaksplanlagttidperdaNavBarGroup(this);
                }
                return this.mUIMaksplanlagttidperdaNavBarGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIMaksplanlagttidperdaNavBarGroup mUIMaksplanlagttidperdaNavBarGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMaksplanlagttidperdaNavBarGroup : DXNavBarGroup
    {
        
        public UIMaksplanlagttidperdaNavBarGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public DXNavBarGroupButton UIMaksplanlagttidperdaNavBarGroupButton
        {
            get
            {
                if ((this.mUIMaksplanlagttidperdaNavBarGroupButton == null))
                {
                    this.mUIMaksplanlagttidperdaNavBarGroupButton = new DXNavBarGroupButton(this);
                    #region Search Criteria
                    this.mUIMaksplanlagttidperdaNavBarGroupButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupButton";
                    this.mUIMaksplanlagttidperdaNavBarGroupButton.WindowTitles.Add("Arbeidsplanoppsett");
                    #endregion
                }
                return this.mUIMaksplanlagttidperdaNavBarGroupButton;
            }
        }
        #endregion
        
        #region Fields
        private DXNavBarGroupButton mUIMaksplanlagttidperdaNavBarGroupButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanInnstilliWindow : DXWindow
    {
        
        public UIArbeidsplanInnstilliWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan - Innstillinger";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITcDataTabList UITcDataTabList
        {
            get
            {
                if ((this.mUITcDataTabList == null))
                {
                    this.mUITcDataTabList = new UITcDataTabList(this);
                }
                return this.mUITcDataTabList;
            }
        }
        
        public UIPaBottomClient UIPaBottomClient
        {
            get
            {
                if ((this.mUIPaBottomClient == null))
                {
                    this.mUIPaBottomClient = new UIPaBottomClient(this);
                }
                return this.mUIPaBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UITcDataTabList mUITcDataTabList;
        
        private UIPaBottomClient mUIPaBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcDataTabList : DXTestControl
    {
        
        public UITcDataTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcData";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITpConfigurationClient UITpConfigurationClient
        {
            get
            {
                if ((this.mUITpConfigurationClient == null))
                {
                    this.mUITpConfigurationClient = new UITpConfigurationClient(this);
                }
                return this.mUITpConfigurationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpConfigurationClient mUITpConfigurationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpConfigurationClient : DXTestControl
    {
        
        public UITpConfigurationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpConfiguration";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UIPaCenterClient UIPaCenterClient
        {
            get
            {
                if ((this.mUIPaCenterClient == null))
                {
                    this.mUIPaCenterClient = new UIPaCenterClient(this);
                }
                return this.mUIPaCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaCenterClient mUIPaCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaCenterClient : DXTestControl
    {
        
        public UIPaCenterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIENumber1Edit
        {
            get
            {
                if ((this.mUIENumber1Edit == null))
                {
                    this.mUIENumber1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[1]";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber1Edit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIENumber1Edit;
            }
        }
        
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber0Edit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        
        public DXCheckBox UIChkDraftCheckBox
        {
            get
            {
                if ((this.mUIChkDraftCheckBox == null))
                {
                    this.mUIChkDraftCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkDraftCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkDraft";
                    this.mUIChkDraftCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkDraftCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkDraftCheckBox;
            }
        }
        
        public DXCheckBox UIChkIsReadyForApprovaCheckBox
        {
            get
            {
                if ((this.mUIChkIsReadyForApprovaCheckBox == null))
                {
                    this.mUIChkIsReadyForApprovaCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkIsReadyForApprovaCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkIsReadyForApproval";
                    this.mUIChkIsReadyForApprovaCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkIsReadyForApprovaCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkIsReadyForApprovaCheckBox;
            }
        }
        
        public DXCheckBox UIChkPublishInMyGatCheckBox
        {
            get
            {
                if ((this.mUIChkPublishInMyGatCheckBox == null))
                {
                    this.mUIChkPublishInMyGatCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkPublishInMyGatCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkPublishInMyGat";
                    this.mUIChkPublishInMyGatCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkPublishInMyGatCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkPublishInMyGatCheckBox;
            }
        }
        
        public DXCheckBox UIChkDoCalculateDisplaCheckBox
        {
            get
            {
                if ((this.mUIChkDoCalculateDisplaCheckBox == null))
                {
                    this.mUIChkDoCalculateDisplaCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkDoCalculateDisplaCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkDoCalculateDisplayAutomatically";
                    this.mUIChkDoCalculateDisplaCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkDoCalculateDisplaCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkDoCalculateDisplaCheckBox;
            }
        }
        
        public DXCheckBox UIChkNighShiftOnStartDCheckBox
        {
            get
            {
                if ((this.mUIChkNighShiftOnStartDCheckBox == null))
                {
                    this.mUIChkNighShiftOnStartDCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkNighShiftOnStartDCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkNighShiftOnStartDay";
                    this.mUIChkNighShiftOnStartDCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkNighShiftOnStartDCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkNighShiftOnStartDCheckBox;
            }
        }
        
        public DXTextEdit UIENameEdit
        {
            get
            {
                if ((this.mUIENameEdit == null))
                {
                    this.mUIENameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eName";
                    this.mUIENameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENameEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIENameEdit;
            }
        }
        
        public UILeRosterplanTypeLookUpEdit UILeRosterplanTypeLookUpEdit
        {
            get
            {
                if ((this.mUILeRosterplanTypeLookUpEdit == null))
                {
                    this.mUILeRosterplanTypeLookUpEdit = new UILeRosterplanTypeLookUpEdit(this);
                }
                return this.mUILeRosterplanTypeLookUpEdit;
            }
        }
        
        public UIEStartDateCustom UIEStartDateCustom
        {
            get
            {
                if ((this.mUIEStartDateCustom == null))
                {
                    this.mUIEStartDateCustom = new UIEStartDateCustom(this);
                }
                return this.mUIEStartDateCustom;
            }
        }
        
        public DXCheckBox UIChkDoUseWeek0AndNPluCheckBox
        {
            get
            {
                if ((this.mUIChkDoUseWeek0AndNPluCheckBox == null))
                {
                    this.mUIChkDoUseWeek0AndNPluCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkDoUseWeek0AndNPluCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkDoUseWeek0AndNPlus1";
                    this.mUIChkDoUseWeek0AndNPluCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkDoUseWeek0AndNPluCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkDoUseWeek0AndNPluCheckBox;
            }
        }
        
        public DXCheckBox UIChkDoLoadWorkSchedulCheckBox
        {
            get
            {
                if ((this.mUIChkDoLoadWorkSchedulCheckBox == null))
                {
                    this.mUIChkDoLoadWorkSchedulCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkDoLoadWorkSchedulCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkDoLoadWorkScheduleData";
                    this.mUIChkDoLoadWorkSchedulCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkDoLoadWorkSchedulCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkDoLoadWorkSchedulCheckBox;
            }
        }
        
        public DXCheckBox UIChkDoLoadOtherRosterCheckBox
        {
            get
            {
                if ((this.mUIChkDoLoadOtherRosterCheckBox == null))
                {
                    this.mUIChkDoLoadOtherRosterCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkDoLoadOtherRosterCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkDoLoadOtherRosterplanData";
                    this.mUIChkDoLoadOtherRosterCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkDoLoadOtherRosterCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkDoLoadOtherRosterCheckBox;
            }
        }
        
        public DXCheckBox UIChkUseLimitedScopeCheckBox
        {
            get
            {
                if ((this.mUIChkUseLimitedScopeCheckBox == null))
                {
                    this.mUIChkUseLimitedScopeCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkUseLimitedScopeCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkUseLimitedScope";
                    this.mUIChkUseLimitedScopeCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkUseLimitedScopeCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkUseLimitedScopeCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIENumber1Edit;
        
        private DXTextEdit mUIENumber0Edit;
        
        private DXCheckBox mUIChkDraftCheckBox;
        
        private DXCheckBox mUIChkIsReadyForApprovaCheckBox;
        
        private DXCheckBox mUIChkPublishInMyGatCheckBox;
        
        private DXCheckBox mUIChkDoCalculateDisplaCheckBox;
        
        private DXCheckBox mUIChkNighShiftOnStartDCheckBox;
        
        private DXTextEdit mUIENameEdit;
        
        private UILeRosterplanTypeLookUpEdit mUILeRosterplanTypeLookUpEdit;
        
        private UIEStartDateCustom mUIEStartDateCustom;
        
        private DXCheckBox mUIChkDoUseWeek0AndNPluCheckBox;
        
        private DXCheckBox mUIChkDoLoadWorkSchedulCheckBox;
        
        private DXCheckBox mUIChkDoLoadOtherRosterCheckBox;
        
        private DXCheckBox mUIChkUseLimitedScopeCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeRosterplanTypeLookUpEdit : DXLookUpEdit
    {
        
        public UILeRosterplanTypeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leRosterplanType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "leRosterplanTypePopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEStartDateCustom : DXTestControl
    {
        
        public UIEStartDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaBottomClient : DXTestControl
    {
        
        public UIPaBottomClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanoppsettWindow : DXWindow
    {
        
        public UIArbeidsplanoppsettWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplanoppsett";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public UIGsTabControlTabList UIGsTabControlTabList
        {
            get
            {
                if ((this.mUIGsTabControlTabList == null))
                {
                    this.mUIGsTabControlTabList = new UIGsTabControlTabList(this);
                }
                return this.mUIGsTabControlTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGsTabControlTabList mUIGsTabControlTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsTabControlTabList : DXTestControl
    {
        
        public UIGsTabControlTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public UITabPersonGroupRosterClient UITabPersonGroupRosterClient
        {
            get
            {
                if ((this.mUITabPersonGroupRosterClient == null))
                {
                    this.mUITabPersonGroupRosterClient = new UITabPersonGroupRosterClient(this);
                }
                return this.mUITabPersonGroupRosterClient;
            }
        }
        #endregion
        
        #region Fields
        private UITabPersonGroupRosterClient mUITabPersonGroupRosterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabPersonGroupRosterClient : DXTestControl
    {
        
        public UITabPersonGroupRosterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabPersonGroupRoster";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public UIPnlFilterClient1 UIPnlFilterClient
        {
            get
            {
                if ((this.mUIPnlFilterClient == null))
                {
                    this.mUIPnlFilterClient = new UIPnlFilterClient1(this);
                }
                return this.mUIPnlFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlFilterClient1 mUIPnlFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlFilterClient1 : DXTestControl
    {
        
        public UIPnlFilterClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public UIGrpRuleTypeClient1 UIGrpRuleTypeClient
        {
            get
            {
                if ((this.mUIGrpRuleTypeClient == null))
                {
                    this.mUIGrpRuleTypeClient = new UIGrpRuleTypeClient1(this);
                }
                return this.mUIGrpRuleTypeClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpRuleTypeClient1 mUIGrpRuleTypeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpRuleTypeClient1 : DXTestControl
    {
        
        public UIGrpRuleTypeClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpRuleType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public UIPcEditEmployeePopupEdit UIPcEditEmployeePopupEdit
        {
            get
            {
                if ((this.mUIPcEditEmployeePopupEdit == null))
                {
                    this.mUIPcEditEmployeePopupEdit = new UIPcEditEmployeePopupEdit(this);
                }
                return this.mUIPcEditEmployeePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIPcEditEmployeePopupEdit mUIPcEditEmployeePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcEditEmployeePopupEdit : DXPopupEdit
    {
        
        public UIPcEditEmployeePopupEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcEditEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButton0Button
        {
            get
            {
                if ((this.mUIEditorButton0Button == null))
                {
                    this.mUIEditorButton0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "pcEditEmployeeButton[0]";
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton0Button.WindowTitles.Add("Arbeidsplanoppsett");
                    #endregion
                }
                return this.mUIEditorButton0Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButton0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : DXWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansattinnstillinger for ansattlinje 3";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansattinnstillinger for ansattlinje 3");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSPanelControlClient : DXTestControl
    {
        
        public UIGSPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ansattinnstillinger for ansattlinje 3");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ansattinnstillinger for ansattlinje 3");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGlobaltarbeidsplanopWindow : DXWindow
    {
        
        public UIGlobaltarbeidsplanopWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Globalt arbeidsplanoppsett";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Globalt arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public UIPnlButtonsClient2 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient2(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlButtonsClient2 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlButtonsClient2 : DXTestControl
    {
        
        public UIPnlButtonsClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Globalt arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public DXButton UILagreLukkButton
        {
            get
            {
                if ((this.mUILagreLukkButton == null))
                {
                    this.mUILagreLukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILagreLukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSaveClose";
                    this.mUILagreLukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILagreLukkButton.WindowTitles.Add("Globalt arbeidsplanoppsett");
                    #endregion
                }
                return this.mUILagreLukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILagreLukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAnsatteiarbeidsplanWindow : DXWindow
    {
        
        public UIAnsatteiarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte i arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlOuterClient UIPanelControlOuterClient
        {
            get
            {
                if ((this.mUIPanelControlOuterClient == null))
                {
                    this.mUIPanelControlOuterClient = new UIPanelControlOuterClient(this);
                }
                return this.mUIPanelControlOuterClient;
            }
        }
        
        public UIPanelControlOuterClient1 UIPanelControlOuterClient1
        {
            get
            {
                if ((this.mUIPanelControlOuterClient1 == null))
                {
                    this.mUIPanelControlOuterClient1 = new UIPanelControlOuterClient1(this);
                }
                return this.mUIPanelControlOuterClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlOuterClient mUIPanelControlOuterClient;
        
        private UIPanelControlOuterClient1 mUIPanelControlOuterClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlOuterClient : DXTestControl
    {
        
        public UIPanelControlOuterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlLeftClient UIPanelControlLeftClient
        {
            get
            {
                if ((this.mUIPanelControlLeftClient == null))
                {
                    this.mUIPanelControlLeftClient = new UIPanelControlLeftClient(this);
                }
                return this.mUIPanelControlLeftClient;
            }
        }
        
        public UIPanelControlRightClient UIPanelControlRightClient
        {
            get
            {
                if ((this.mUIPanelControlRightClient == null))
                {
                    this.mUIPanelControlRightClient = new UIPanelControlRightClient(this);
                }
                return this.mUIPanelControlRightClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlLeftClient mUIPanelControlLeftClient;
        
        private UIPanelControlRightClient mUIPanelControlRightClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlLeftClient : DXTestControl
    {
        
        public UIPanelControlLeftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIVakantButton
        {
            get
            {
                if ((this.mUIVakantButton == null))
                {
                    this.mUIVakantButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVakantButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonAddVacant";
                    this.mUIVakantButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUIVakantButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIVakantButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVakantButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlRightClient : DXTestControl
    {
        
        public UIPanelControlRightClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient3 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient3(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient3 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient3 : DXTestControl
    {
        
        public UIPcViewClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeEditorsViewCustom UIEmployeeEditorsViewCustom
        {
            get
            {
                if ((this.mUIEmployeeEditorsViewCustom == null))
                {
                    this.mUIEmployeeEditorsViewCustom = new UIEmployeeEditorsViewCustom(this);
                }
                return this.mUIEmployeeEditorsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeEditorsViewCustom mUIEmployeeEditorsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeEditorsViewCustom : DXTestControl
    {
        
        public UIEmployeeEditorsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeEditorsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeEditorsView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIXscContentScrollableControl UIXscContentScrollableControl
        {
            get
            {
                if ((this.mUIXscContentScrollableControl == null))
                {
                    this.mUIXscContentScrollableControl = new UIXscContentScrollableControl(this);
                }
                return this.mUIXscContentScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscContentScrollableControl mUIXscContentScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXscContentScrollableControl : DXScrollableControl
    {
        
        public UIXscContentScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlViewHostCustom UIGroupControlViewHostCustom
        {
            get
            {
                if ((this.mUIGroupControlViewHostCustom == null))
                {
                    this.mUIGroupControlViewHostCustom = new UIGroupControlViewHostCustom(this);
                }
                return this.mUIGroupControlViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlViewHostCustom mUIGroupControlViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControlViewHostCustom : DXTestControl
    {
        
        public UIGroupControlViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient mUIGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControlClient : DXTestControl
    {
        
        public UIGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[3]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerAvailCustom UIEmployeeManagerAvailCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerAvailCustom == null))
                {
                    this.mUIEmployeeManagerAvailCustom = new UIEmployeeManagerAvailCustom(this);
                }
                return this.mUIEmployeeManagerAvailCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerAvailCustom mUIEmployeeManagerAvailCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeManagerAvailCustom : DXTestControl
    {
        
        public UIEmployeeManagerAvailCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerAvailabilityPeriodsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerAvailabilityPeriodsView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "dropDownButtonNew";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
                    this.mUINYButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINYButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlOuterClient1 : DXTestControl
    {
        
        public UIPanelControlOuterClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlRightClient1 UIPanelControlRightClient
        {
            get
            {
                if ((this.mUIPanelControlRightClient == null))
                {
                    this.mUIPanelControlRightClient = new UIPanelControlRightClient1(this);
                }
                return this.mUIPanelControlRightClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlRightClient1 mUIPanelControlRightClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlRightClient1 : DXTestControl
    {
        
        public UIPanelControlRightClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom1 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom1(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom1 mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom1 : DXTestControl
    {
        
        public UIViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient4 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient4(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient4 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient4 : DXTestControl
    {
        
        public UIPcViewClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeEditorsViewCustom1 UIEmployeeEditorsViewCustom
        {
            get
            {
                if ((this.mUIEmployeeEditorsViewCustom == null))
                {
                    this.mUIEmployeeEditorsViewCustom = new UIEmployeeEditorsViewCustom1(this);
                }
                return this.mUIEmployeeEditorsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeEditorsViewCustom1 mUIEmployeeEditorsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeEditorsViewCustom1 : DXTestControl
    {
        
        public UIEmployeeEditorsViewCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeEditorsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeEditorsView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient1 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient1(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient1 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient1 : DXTestControl
    {
        
        public UIPcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIXscContentScrollableControl1 UIXscContentScrollableControl
        {
            get
            {
                if ((this.mUIXscContentScrollableControl == null))
                {
                    this.mUIXscContentScrollableControl = new UIXscContentScrollableControl1(this);
                }
                return this.mUIXscContentScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscContentScrollableControl1 mUIXscContentScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXscContentScrollableControl1 : DXScrollableControl
    {
        
        public UIXscContentScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlViewHostCustom1 UIGroupControlViewHostCustom
        {
            get
            {
                if ((this.mUIGroupControlViewHostCustom == null))
                {
                    this.mUIGroupControlViewHostCustom = new UIGroupControlViewHostCustom1(this);
                }
                return this.mUIGroupControlViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlViewHostCustom1 mUIGroupControlViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControlViewHostCustom1 : DXTestControl
    {
        
        public UIGroupControlViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient1 UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient1(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient1 mUIGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControlClient1 : DXTestControl
    {
        
        public UIGroupControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[3]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerRevolCustom UIEmployeeManagerRevolCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerRevolCustom == null))
                {
                    this.mUIEmployeeManagerRevolCustom = new UIEmployeeManagerRevolCustom(this);
                }
                return this.mUIEmployeeManagerRevolCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerRevolCustom mUIEmployeeManagerRevolCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeManagerRevolCustom : DXTestControl
    {
        
        public UIEmployeeManagerRevolCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerRevolvingDatesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerRevolvingDatesView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIERevolveFromDateTimeEdit
        {
            get
            {
                if ((this.mUIERevolveFromDateTimeEdit == null))
                {
                    this.mUIERevolveFromDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIERevolveFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eRevolveFrom";
                    this.mUIERevolveFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIERevolveFromDateTimeEdit.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIERevolveFromDateTimeEdit;
            }
        }
        
        public DXDateTimePicker UIERevolveToDateTimeEdit
        {
            get
            {
                if ((this.mUIERevolveToDateTimeEdit == null))
                {
                    this.mUIERevolveToDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIERevolveToDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eRevolveTo";
                    this.mUIERevolveToDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIERevolveToDateTimeEdit.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIERevolveToDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIERevolveFromDateTimeEdit;
        
        private DXDateTimePicker mUIERevolveToDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUtskriftavarbeidsplaWindow : DXWindow
    {
        
        public UIUtskriftavarbeidsplaWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utskrift av arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utskrift av arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl2Client UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        
        public UIGsTabControl1TabList UIGsTabControl1TabList
        {
            get
            {
                if ((this.mUIGsTabControl1TabList == null))
                {
                    this.mUIGsTabControl1TabList = new UIGsTabControl1TabList(this);
                }
                return this.mUIGsTabControl1TabList;
            }
        }
        
        public UIPnlButtonsClient3 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient3(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl2Client mUIGsPanelControl2Client;
        
        private UIGsTabControl1TabList mUIGsTabControl1TabList;
        
        private UIPnlButtonsClient3 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl2Client : DXTestControl
    {
        
        public UIGsPanelControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utskrift av arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpShiftCellTypeClient UIGrpShiftCellTypeClient
        {
            get
            {
                if ((this.mUIGrpShiftCellTypeClient == null))
                {
                    this.mUIGrpShiftCellTypeClient = new UIGrpShiftCellTypeClient(this);
                }
                return this.mUIGrpShiftCellTypeClient;
            }
        }
        
        public UIGrpPageSizeClient UIGrpPageSizeClient
        {
            get
            {
                if ((this.mUIGrpPageSizeClient == null))
                {
                    this.mUIGrpPageSizeClient = new UIGrpPageSizeClient(this);
                }
                return this.mUIGrpPageSizeClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpShiftCellTypeClient mUIGrpShiftCellTypeClient;
        
        private UIGrpPageSizeClient mUIGrpPageSizeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpShiftCellTypeClient : DXTestControl
    {
        
        public UIGrpShiftCellTypeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpShiftCellType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Utskrift av arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UICbUseColorsCheckBox
        {
            get
            {
                if ((this.mUICbUseColorsCheckBox == null))
                {
                    this.mUICbUseColorsCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICbUseColorsCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbUseColors";
                    this.mUICbUseColorsCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICbUseColorsCheckBox.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUICbUseColorsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUICbUseColorsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpPageSizeClient : DXTestControl
    {
        
        public UIGrpPageSizeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpPageSize";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Utskrift av arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgrpPageSizeRadioGroup
        {
            get
            {
                if ((this.mUIRgrpPageSizeRadioGroup == null))
                {
                    this.mUIRgrpPageSizeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgrpPageSizeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgrpPageSize";
                    this.mUIRgrpPageSizeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgrpPageSizeRadioGroup.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUIRgrpPageSizeRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgrpPageSizeRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsTabControl1TabList : DXTestControl
    {
        
        public UIGsTabControl1TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsTabControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Utskrift av arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIXtraTabPage1Client UIXtraTabPage1Client
        {
            get
            {
                if ((this.mUIXtraTabPage1Client == null))
                {
                    this.mUIXtraTabPage1Client = new UIXtraTabPage1Client(this);
                }
                return this.mUIXtraTabPage1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraTabPage1Client mUIXtraTabPage1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtraTabPage1Client : DXTestControl
    {
        
        public UIXtraTabPage1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPage1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Utskrift av arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpPropertiesClient UIGrpPropertiesClient
        {
            get
            {
                if ((this.mUIGrpPropertiesClient == null))
                {
                    this.mUIGrpPropertiesClient = new UIGrpPropertiesClient(this);
                }
                return this.mUIGrpPropertiesClient;
            }
        }
        
        public UIGrpAdditionalInfoClient UIGrpAdditionalInfoClient
        {
            get
            {
                if ((this.mUIGrpAdditionalInfoClient == null))
                {
                    this.mUIGrpAdditionalInfoClient = new UIGrpAdditionalInfoClient(this);
                }
                return this.mUIGrpAdditionalInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpPropertiesClient mUIGrpPropertiesClient;
        
        private UIGrpAdditionalInfoClient mUIGrpAdditionalInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpPropertiesClient : DXTestControl
    {
        
        public UIGrpPropertiesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpProperties";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Utskrift av arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UICbOptimizedForExportCheckBox
        {
            get
            {
                if ((this.mUICbOptimizedForExportCheckBox == null))
                {
                    this.mUICbOptimizedForExportCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICbOptimizedForExportCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbOptimizedForExport";
                    this.mUICbOptimizedForExportCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICbOptimizedForExportCheckBox.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUICbOptimizedForExportCheckBox;
            }
        }
        
        public DXCheckBox UICbSumDemandCheckBox
        {
            get
            {
                if ((this.mUICbSumDemandCheckBox == null))
                {
                    this.mUICbSumDemandCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICbSumDemandCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbSumDemand";
                    this.mUICbSumDemandCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICbSumDemandCheckBox.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUICbSumDemandCheckBox;
            }
        }
        
        public DXCheckBox UICbSignLinesCheckBox
        {
            get
            {
                if ((this.mUICbSignLinesCheckBox == null))
                {
                    this.mUICbSignLinesCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICbSignLinesCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbSignLines";
                    this.mUICbSignLinesCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICbSignLinesCheckBox.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUICbSignLinesCheckBox;
            }
        }
        
        public DXCheckBox UICbExtraLineCheckBox
        {
            get
            {
                if ((this.mUICbExtraLineCheckBox == null))
                {
                    this.mUICbExtraLineCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICbExtraLineCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbExtraLine";
                    this.mUICbExtraLineCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICbExtraLineCheckBox.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUICbExtraLineCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUICbOptimizedForExportCheckBox;
        
        private DXCheckBox mUICbSumDemandCheckBox;
        
        private DXCheckBox mUICbSignLinesCheckBox;
        
        private DXCheckBox mUICbExtraLineCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpAdditionalInfoClient : DXTestControl
    {
        
        public UIGrpAdditionalInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpAdditionalInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Utskrift av arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UICbShiftCodesCheckBox
        {
            get
            {
                if ((this.mUICbShiftCodesCheckBox == null))
                {
                    this.mUICbShiftCodesCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICbShiftCodesCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCodes";
                    this.mUICbShiftCodesCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICbShiftCodesCheckBox.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUICbShiftCodesCheckBox;
            }
        }
        
        public DXCheckBox UICbRulesCheckBox
        {
            get
            {
                if ((this.mUICbRulesCheckBox == null))
                {
                    this.mUICbRulesCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICbRulesCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbRules";
                    this.mUICbRulesCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICbRulesCheckBox.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUICbRulesCheckBox;
            }
        }
        
        public DXCheckBox UICbMessagesCheckBox
        {
            get
            {
                if ((this.mUICbMessagesCheckBox == null))
                {
                    this.mUICbMessagesCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICbMessagesCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbMessages";
                    this.mUICbMessagesCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICbMessagesCheckBox.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUICbMessagesCheckBox;
            }
        }
        
        public DXCheckBox UICbShiftDetailsCheckBox
        {
            get
            {
                if ((this.mUICbShiftDetailsCheckBox == null))
                {
                    this.mUICbShiftDetailsCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICbShiftDetailsCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftDetails";
                    this.mUICbShiftDetailsCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUICbShiftDetailsCheckBox.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUICbShiftDetailsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUICbShiftCodesCheckBox;
        
        private DXCheckBox mUICbRulesCheckBox;
        
        private DXCheckBox mUICbMessagesCheckBox;
        
        private DXCheckBox mUICbShiftDetailsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlButtonsClient3 : DXTestControl
    {
        
        public UIPnlButtonsClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utskrift av arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIForhåndsvisButton
        {
            get
            {
                if ((this.mUIForhåndsvisButton == null))
                {
                    this.mUIForhåndsvisButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIForhåndsvisButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPreview";
                    this.mUIForhåndsvisButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIForhåndsvisButton.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUIForhåndsvisButton;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Utskrift av arbeidsplan");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIForhåndsvisButton;
        
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIDetailsPanePane UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsPanePane mUIDetailsPanePane;
        
        private UIItemWindow2 mUIItemWindow;
        
        private UISaveWindow mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDetailsPanePane : WinPane
    {
        
        public UIDetailsPanePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIEksportWindow UIEksportWindow
        {
            get
            {
                if ((this.mUIEksportWindow == null))
                {
                    this.mUIEksportWindow = new UIEksportWindow(this);
                }
                return this.mUIEksportWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIEksportWindow mUIEksportWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEksportWindow : DXWindow
    {
        
        public UIEksportWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Eksport";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
            #endregion
        }
        
        #region Properties
        public DXButton UINeiButton
        {
            get
            {
                if ((this.mUINeiButton == null))
                {
                    this.mUINeiButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINeiButton.SearchProperties[DXTestControl.PropertyNames.Name] = "EksportSimpleButton[1]";
                    this.mUINeiButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUINeiButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINeiButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ComboLBox";
            #endregion
        }
        
        #region Properties
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemList : WinList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinListItem UIItem5000ARBEIDSPLANKListItem
        {
            get
            {
                if ((this.mUIItem5000ARBEIDSPLANKListItem == null))
                {
                    this.mUIItem5000ARBEIDSPLANKListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem5000ARBEIDSPLANKListItem.SearchProperties[WinListItem.PropertyNames.Name] = "5000 - ARBEIDSPLANKLINIKKEN";
                    #endregion
                }
                return this.mUIItem5000ARBEIDSPLANKListItem;
            }
        }
        
        public WinListItem UIItem01VikarpoolListItem
        {
            get
            {
                if ((this.mUIItem01VikarpoolListItem == null))
                {
                    this.mUIItem01VikarpoolListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItem01VikarpoolListItem.SearchProperties[WinListItem.PropertyNames.Name] = "01 - Vikarpool";
                    #endregion
                }
                return this.mUIItem01VikarpoolListItem;
            }
        }
        
        public WinListItem UILederListItem
        {
            get
            {
                if ((this.mUILederListItem == null))
                {
                    this.mUILederListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUILederListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Leder";
                    #endregion
                }
                return this.mUILederListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItem5000ARBEIDSPLANKListItem;
        
        private WinListItem mUIItem01VikarpoolListItem;
        
        private WinListItem mUILederListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom2 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom2(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        
        public UIItemWindow3 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow3(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIViewHostCustom11 UIViewHostCustom1
        {
            get
            {
                if ((this.mUIViewHostCustom1 == null))
                {
                    this.mUIViewHostCustom1 = new UIViewHostCustom11(this);
                }
                return this.mUIViewHostCustom1;
            }
        }
        
        public UIItemWindow13 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow31 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow31(this);
                }
                return this.mUIItemWindow3;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom2 mUIViewHostCustom;
        
        private UIItemWindow3 mUIItemWindow;
        
        private UIViewHostCustom11 mUIViewHostCustom1;
        
        private UIItemWindow13 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        
        private UIItemWindow31 mUIItemWindow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom2 : DXTestControl
    {
        
        public UIViewHostCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient5 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient5(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient5 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient5 : DXTestControl
    {
        
        public UIPcViewClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIEmploymentListControCustom UIEmploymentListControCustom
        {
            get
            {
                if ((this.mUIEmploymentListControCustom == null))
                {
                    this.mUIEmploymentListControCustom = new UIEmploymentListControCustom(this);
                }
                return this.mUIEmploymentListControCustom;
            }
        }
        
        public UIRoleSharingViewCustom UIRoleSharingViewCustom
        {
            get
            {
                if ((this.mUIRoleSharingViewCustom == null))
                {
                    this.mUIRoleSharingViewCustom = new UIRoleSharingViewCustom(this);
                }
                return this.mUIRoleSharingViewCustom;
            }
        }
        
        public UIAutoHideContainerClient UIAutoHideContainerClient
        {
            get
            {
                if ((this.mUIAutoHideContainerClient == null))
                {
                    this.mUIAutoHideContainerClient = new UIAutoHideContainerClient(this);
                }
                return this.mUIAutoHideContainerClient;
            }
        }
        
        public UIAutoHideControlClient UIAutoHideControlClient
        {
            get
            {
                if ((this.mUIAutoHideControlClient == null))
                {
                    this.mUIAutoHideControlClient = new UIAutoHideControlClient(this);
                }
                return this.mUIAutoHideControlClient;
            }
        }
        
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        
        public UIRibbonControlRibbon1 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon1(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UILeftPanelDockPanel1 UILeftPanelDockPanel
        {
            get
            {
                if ((this.mUILeftPanelDockPanel == null))
                {
                    this.mUILeftPanelDockPanel = new UILeftPanelDockPanel1(this);
                }
                return this.mUILeftPanelDockPanel;
            }
        }
        
        public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        
        public UICenterPanelPeriodDockPanel UICenterPanelPeriodDockPanel
        {
            get
            {
                if ((this.mUICenterPanelPeriodDockPanel == null))
                {
                    this.mUICenterPanelPeriodDockPanel = new UICenterPanelPeriodDockPanel(this);
                }
                return this.mUICenterPanelPeriodDockPanel;
            }
        }
        
        public UIPcMainPanelClient UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        
        public UIGcDayrhythmPlansTable UIGcDayrhythmPlansTable
        {
            get
            {
                if ((this.mUIGcDayrhythmPlansTable == null))
                {
                    this.mUIGcDayrhythmPlansTable = new UIGcDayrhythmPlansTable(this);
                }
                return this.mUIGcDayrhythmPlansTable;
            }
        }
        
        public DXButton UIEndreButton
        {
            get
            {
                if ((this.mUIEndreButton == null))
                {
                    this.mUIEndreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "bEdit";
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
                    this.mUIEndreButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEndreButton;
            }
        }
        
        public UIRoleCodePatternListCCustom UIRoleCodePatternListCCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternListCCustom == null))
                {
                    this.mUIRoleCodePatternListCCustom = new UIRoleCodePatternListCCustom(this);
                }
                return this.mUIRoleCodePatternListCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmploymentListControCustom mUIEmploymentListControCustom;
        
        private UIRoleSharingViewCustom mUIRoleSharingViewCustom;
        
        private UIAutoHideContainerClient mUIAutoHideContainerClient;
        
        private UIAutoHideControlClient mUIAutoHideControlClient;
        
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        
        private UIRibbonControlRibbon1 mUIRibbonControlRibbon;
        
        private UILeftPanelDockPanel1 mUILeftPanelDockPanel;
        
        private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
        
        private UICenterPanelPeriodDockPanel mUICenterPanelPeriodDockPanel;
        
        private UIPcMainPanelClient mUIPcMainPanelClient;
        
        private UIGcDayrhythmPlansTable mUIGcDayrhythmPlansTable;
        
        private DXButton mUIEndreButton;
        
        private UIRoleCodePatternListCCustom mUIRoleCodePatternListCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmploymentListControCustom : DXTestControl
    {
        
        public UIEmploymentListControCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmploymentListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmploymentListControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNew";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINYButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINYButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleSharingViewCustom : DXTestControl
    {
        
        public UIRoleSharingViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleSharingView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleSharingView";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRoleShaRibbon UIRibbonControlRoleShaRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRoleShaRibbon == null))
                {
                    this.mUIRibbonControlRoleShaRibbon = new UIRibbonControlRoleShaRibbon(this);
                }
                return this.mUIRibbonControlRoleShaRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRoleShaRibbon mUIRibbonControlRoleShaRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControlRoleShaRibbon : DXRibbon
    {
        
        public UIRibbonControlRoleShaRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControlRoleSharing";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageRoleSharinRibbonPage UIRibbonPageRoleSharinRibbonPage
        {
            get
            {
                if ((this.mUIRibbonPageRoleSharinRibbonPage == null))
                {
                    this.mUIRibbonPageRoleSharinRibbonPage = new UIRibbonPageRoleSharinRibbonPage(this);
                }
                return this.mUIRibbonPageRoleSharinRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageRoleSharinRibbonPage mUIRibbonPageRoleSharinRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonPageRoleSharinRibbonPage : DXRibbonPage
    {
        
        public UIRibbonPageRoleSharinRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageRoleSharing";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpgActionsRibbonPageGroup UIRpgActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgActionsRibbonPageGroup == null))
                {
                    this.mUIRpgActionsRibbonPageGroup = new UIRpgActionsRibbonPageGroup(this);
                }
                return this.mUIRpgActionsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgActionsRibbonPageGroup mUIRpgActionsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgActionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINYRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINYRibbonBaseButtonItem == null))
                {
                    this.mUINYRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINYRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "barButtonItemNew";
                    this.mUINYRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINYRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINYRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINYRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAutoHideContainerClient : DXTestControl
    {
        
        public UIAutoHideContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LeftAutoHideContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UIOppgavetildelingButton
        {
            get
            {
                if ((this.mUIOppgavetildelingButton == null))
                {
                    this.mUIOppgavetildelingButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOppgavetildelingButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
                    this.mUIOppgavetildelingButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainerButton";
                    this.mUIOppgavetildelingButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOppgavetildelingButton;
            }
        }
        
        public DXButton UIDashboardButton
        {
            get
            {
                if ((this.mUIDashboardButton == null))
                {
                    this.mUIDashboardButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIDashboardButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Dashboard";
                    this.mUIDashboardButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideContainerButton";
                    this.mUIDashboardButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDashboardButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOppgavetildelingButton;
        
        private DXButton mUIDashboardButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAutoHideControlClient : DXTestControl
    {
        
        public UIAutoHideControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LeftAutoHideControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AutoHideControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILeftPanelDockPanel UILeftPanelDockPanel
        {
            get
            {
                if ((this.mUILeftPanelDockPanel == null))
                {
                    this.mUILeftPanelDockPanel = new UILeftPanelDockPanel(this);
                }
                return this.mUILeftPanelDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UILeftPanelDockPanel mUILeftPanelDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeftPanelDockPanel : DXDockPanel
    {
        
        public UILeftPanelDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LeftPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UIPinButtonButton
        {
            get
            {
                if ((this.mUIPinButtonButton == null))
                {
                    this.mUIPinButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
                    this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
                    this.mUIPinButtonButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPinButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIPinButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIDag00167770770FalseDockPanel UIDag00167770770FalseDockPanel
        {
            get
            {
                if ((this.mUIDag00167770770FalseDockPanel == null))
                {
                    this.mUIDag00167770770FalseDockPanel = new UIDag00167770770FalseDockPanel(this);
                }
                return this.mUIDag00167770770FalseDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDag00167770770FalseDockPanel mUIDag00167770770FalseDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDag00167770770FalseDockPanel : DXDockPanel
    {
        
        public UIDag00167770770FalseDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Dag;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable : DXGrid
    {
        
        public UIGcDayColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIBruskBennyCell
        {
            get
            {
                if ((this.mUIBruskBennyCell == null))
                {
                    this.mUIBruskBennyCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBruskBennyCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]3[Column]colEmployeeName";
                    this.mUIBruskBennyCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBruskBennyCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBruskBennyCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIBruskBennyCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControlRibbon1 : DXRibbon
    {
        
        public UIRibbonControlRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpMainMenuRibbonPage : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGrpDevianceRibbonPageGroup UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        
        public UIGrpViewModeRibbonPageGroup UIGrpViewModeRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpViewModeRibbonPageGroup == null))
                {
                    this.mUIGrpViewModeRibbonPageGroup = new UIGrpViewModeRibbonPageGroup(this);
                }
                return this.mUIGrpViewModeRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDevianceRibbonPageGroup mUIGrpDevianceRibbonPageGroup;
        
        private UIGrpViewModeRibbonPageGroup mUIGrpViewModeRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpDevianceRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIFraværRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIFraværRibbonBaseButtonItem == null))
                {
                    this.mUIFraværRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAbsence";
                    this.mUIFraværRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIFraværRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFraværRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIFraværRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpViewModeRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpViewModeRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpViewMode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIUkeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIUkeRibbonBaseButtonItem == null))
                {
                    this.mUIUkeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIUkeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRangeWeek";
                    this.mUIUkeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIUkeRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIUkeRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIDagRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIDagRibbonBaseButtonItem == null))
                {
                    this.mUIDagRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIDagRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRangeDay";
                    this.mUIDagRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIDagRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDagRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIOppgaveRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppgaveRibbonBaseButtonItem == null))
                {
                    this.mUIOppgaveRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppgaveRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRoleView";
                    this.mUIOppgaveRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppgaveRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOppgaveRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIPlanleggerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIPlanleggerRibbonBaseButtonItem == null))
                {
                    this.mUIPlanleggerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIPlanleggerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRoleScheduler";
                    this.mUIPlanleggerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIPlanleggerRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPlanleggerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIUkeRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIDagRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIOppgaveRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIPlanleggerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeftPanelDockPanel1 : DXDockPanel
    {
        
        public UILeftPanelDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LeftPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIOppgavetildelingDockPanel UIOppgavetildelingDockPanel
        {
            get
            {
                if ((this.mUIOppgavetildelingDockPanel == null))
                {
                    this.mUIOppgavetildelingDockPanel = new UIOppgavetildelingDockPanel(this);
                }
                return this.mUIOppgavetildelingDockPanel;
            }
        }
        
        public DXButton UIPinButtonButton
        {
            get
            {
                if ((this.mUIPinButtonButton == null))
                {
                    this.mUIPinButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "PinButton";
                    this.mUIPinButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
                    this.mUIPinButtonButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPinButtonButton;
            }
        }
        
        public DXButton UIOppgavetildelingButton
        {
            get
            {
                if ((this.mUIOppgavetildelingButton == null))
                {
                    this.mUIOppgavetildelingButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOppgavetildelingButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
                    this.mUIOppgavetildelingButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIOppgavetildelingButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOppgavetildelingButton;
            }
        }
        
        public DXButton UICustomHeaderButtonButton
        {
            get
            {
                if ((this.mUICustomHeaderButtonButton == null))
                {
                    this.mUICustomHeaderButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICustomHeaderButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "CustomHeaderButton";
                    this.mUICustomHeaderButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
                    this.mUICustomHeaderButtonButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUICustomHeaderButtonButton;
            }
        }
        
        public UIDashboardDockPanel UIDashboardDockPanel
        {
            get
            {
                if ((this.mUIDashboardDockPanel == null))
                {
                    this.mUIDashboardDockPanel = new UIDashboardDockPanel(this);
                }
                return this.mUIDashboardDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIOppgavetildelingDockPanel mUIOppgavetildelingDockPanel;
        
        private DXButton mUIPinButtonButton;
        
        private DXButton mUIOppgavetildelingButton;
        
        private DXButton mUICustomHeaderButtonButton;
        
        private UIDashboardDockPanel mUIDashboardDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingDockPanel : DXDockPanel
    {
        
        public UIOppgavetildelingDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom2 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom2 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom2 : DXTestControl
    {
        
        public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "OppgavetildelingControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client1 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client1(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client1 mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl1Client1 : DXTestControl
    {
        
        public UIGsPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkDetailedCheckBox
        {
            get
            {
                if ((this.mUIChkDetailedCheckBox == null))
                {
                    this.mUIChkDetailedCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkDetailedCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkDetailed";
                    this.mUIChkDetailedCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkDetailedCheckBox.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIChkDetailedCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkDetailedCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDashboardDockPanel : DXDockPanel
    {
        
        public UIDashboardDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Dashboard";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom3 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom3 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom3 : DXTestControl
    {
        
        public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DashboardControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIDashboardControlCustom UIDashboardControlCustom
        {
            get
            {
                if ((this.mUIDashboardControlCustom == null))
                {
                    this.mUIDashboardControlCustom = new UIDashboardControlCustom(this);
                }
                return this.mUIDashboardControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDashboardControlCustom mUIDashboardControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDashboardControlCustom : DXTestControl
    {
        
        public UIDashboardControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DashboardControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DashboardControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UINavBarControlNavBar UINavBarControlNavBar
        {
            get
            {
                if ((this.mUINavBarControlNavBar == null))
                {
                    this.mUINavBarControlNavBar = new UINavBarControlNavBar(this);
                }
                return this.mUINavBarControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarControlNavBar mUINavBarControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINavBarControlNavBar : DXNavBar
    {
        
        public UINavBarControlNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXNavBarGroup UIFravær1NavBarGroup
        {
            get
            {
                if ((this.mUIFravær1NavBarGroup == null))
                {
                    this.mUIFravær1NavBarGroup = new DXNavBarGroup(this);
                    #region Search Criteria
                    this.mUIFravær1NavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Fravær (1)";
                    this.mUIFravær1NavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
                    this.mUIFravær1NavBarGroup.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFravær1NavBarGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXNavBarGroup mUIFravær1NavBarGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStandaloneBarDockConCustom : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar1 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar1(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar1 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainmenuMenuBar1 : DXMenu
    {
        
        public UIMainmenuMenuBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UISkrivutBarItem UISkrivutBarItem
        {
            get
            {
                if ((this.mUISkrivutBarItem == null))
                {
                    this.mUISkrivutBarItem = new UISkrivutBarItem(this);
                }
                return this.mUISkrivutBarItem;
            }
        }
        
        public DXMenuBaseButtonItem UINextBarBaseButtonItem
        {
            get
            {
                if ((this.mUINextBarBaseButtonItem == null))
                {
                    this.mUINextBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUINextBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNext";
                    this.mUINextBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUINextBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINextBarBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIPreviousBarBaseButtonItem
        {
            get
            {
                if ((this.mUIPreviousBarBaseButtonItem == null))
                {
                    this.mUIPreviousBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIPreviousBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPrev";
                    this.mUIPreviousBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIPreviousBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPreviousBarBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UITodayBarBaseButtonItem
        {
            get
            {
                if ((this.mUITodayBarBaseButtonItem == null))
                {
                    this.mUITodayBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUITodayBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnToday";
                    this.mUITodayBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUITodayBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITodayBarBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnRefreshAllBarBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnRefreshAllBarBaseButtonItem == null))
                {
                    this.mUIBtnRefreshAllBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnRefreshAllBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRefreshAll";
                    this.mUIBtnRefreshAllBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIBtnRefreshAllBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBtnRefreshAllBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private UISkrivutBarItem mUISkrivutBarItem;
        
        private DXMenuBaseButtonItem mUINextBarBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIPreviousBarBaseButtonItem;
        
        private DXMenuBaseButtonItem mUITodayBarBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnRefreshAllBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISkrivutBarItem : DXMenuItem
    {
        
        public UISkrivutBarItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPrint";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBtnExportDetailReporMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnExportDetailReporMenuBaseButtonItem == null))
                {
                    this.mUIBtnExportDetailReporMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnExportDetailReporMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExportDetailReport1";
                    this.mUIBtnExportDetailReporMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    this.mUIBtnExportDetailReporMenuBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBtnExportDetailReporMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBtnExportDetailReporMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelPeriodDockPanel : DXDockPanel
    {
        
        public UICenterPanelPeriodDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UIBrukdetaljertoppgaveButton
        {
            get
            {
                if ((this.mUIBrukdetaljertoppgaveButton == null))
                {
                    this.mUIBrukdetaljertoppgaveButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBrukdetaljertoppgaveButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Bruk detaljert oppgavetildeling";
                    this.mUIBrukdetaljertoppgaveButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelButton";
                    this.mUIBrukdetaljertoppgaveButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBrukdetaljertoppgaveButton;
            }
        }
        
        public UIControlContainerCustom4 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom4(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBrukdetaljertoppgaveButton;
        
        private UIControlContainerCustom4 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom4 : DXTestControl
    {
        
        public UIControlContainerCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriodControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleControCustom UIPeriodScheduleControCustom
        {
            get
            {
                if ((this.mUIPeriodScheduleControCustom == null))
                {
                    this.mUIPeriodScheduleControCustom = new UIPeriodScheduleControCustom(this);
                }
                return this.mUIPeriodScheduleControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleControCustom mUIPeriodScheduleControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleControCustom : DXTestControl
    {
        
        public UIPeriodScheduleControCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PeriodScheduleControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILayoutPanelSplitContainerControl UILayoutPanelSplitContainerControl
        {
            get
            {
                if ((this.mUILayoutPanelSplitContainerControl == null))
                {
                    this.mUILayoutPanelSplitContainerControl = new UILayoutPanelSplitContainerControl(this);
                }
                return this.mUILayoutPanelSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutPanelSplitContainerControl mUILayoutPanelSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutPanelSplitContainerControl : DXSplitContainerControl
    {
        
        public UILayoutPanelSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitLayoutPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITopPanelClient UITopPanelClient
        {
            get
            {
                if ((this.mUITopPanelClient == null))
                {
                    this.mUITopPanelClient = new UITopPanelClient(this);
                }
                return this.mUITopPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UITopPanelClient mUITopPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITopPanelClient : DXTestControl
    {
        
        public UITopPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomSplitGroupPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIXtraPanelScrollableControl UIXtraPanelScrollableControl
        {
            get
            {
                if ((this.mUIXtraPanelScrollableControl == null))
                {
                    this.mUIXtraPanelScrollableControl = new UIXtraPanelScrollableControl(this);
                }
                return this.mUIXtraPanelScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraPanelScrollableControl mUIXtraPanelScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtraPanelScrollableControl : DXScrollableControl
    {
        
        public UIXtraPanelScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSDropDownButtonButton
        {
            get
            {
                if ((this.mUIGSDropDownButtonButton == null))
                {
                    this.mUIGSDropDownButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSDropDownButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraPanel[0]GSDropDownButton[0]";
                    this.mUIGSDropDownButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIGSDropDownButtonButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGSDropDownButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSDropDownButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcMainPanelClient : DXTestControl
    {
        
        public UIPcMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcPanListsTabList : DXTestControl
    {
        
        public UITcPanListsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpRosterPlanListClient : DXTestControl
    {
        
        public UITpRosterPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanListCustom : DXTestControl
    {
        
        public UIRosterPlanListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGridClient : DXTestControl
    {
        
        public UIPnlGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon2 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon2(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public UIGcRosterPlansTable UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new UIGcRosterPlansTable(this);
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon2 mUIRibbonControlRibbon;
        
        private UIGcRosterPlansTable mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControlRibbon2 : DXRibbon
    {
        
        public UIRibbonControlRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgPlanRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIInnstillingerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIInnstillingerRibbonBaseButtonItem == null))
                {
                    this.mUIInnstillingerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiOpenConfiguration";
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIInnstillingerRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIInnstillingerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIInnstillingerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlansTable : DXGrid
    {
        
        public UIGcRosterPlansTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem4710Januar2024Cell
        {
            get
            {
                if ((this.mUIItem4710Januar2024Cell == null))
                {
                    this.mUIItem4710Januar2024Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4710Januar2024Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlansGridControlCell[View]gvRosterPlans[Row]0[Column]gcolPlan";
                    this.mUIItem4710Januar2024Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4710Januar2024Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem4710Januar2024Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem4710Januar2024Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayrhythmPlansTable : DXGrid
    {
        
        public UIGcDayrhythmPlansTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayrhythmPlans";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem2024Cell
        {
            get
            {
                if ((this.mUIItem2024Cell == null))
                {
                    this.mUIItem2024Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2024Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayrhythmPlansGridControlCell[View]gvDayrhythmPlans[Row]0[Column]gcolPlan";
                    this.mUIItem2024Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2024Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem2024Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem2024Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternListCCustom : DXTestControl
    {
        
        public UIRoleCodePatternListCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternListControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "bNew";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUINYButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINYButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAvdelingClient
        {
            get
            {
                if ((this.mUIAvdelingClient == null))
                {
                    this.mUIAvdelingClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAvdelingClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAvdelingClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAvdelingClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom11 : DXTestControl
    {
        
        public UIViewHostCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient6 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient6(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient6 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient6 : DXTestControl
    {
        
        public UIPcViewClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIAdministrationViewCustom UIAdministrationViewCustom
        {
            get
            {
                if ((this.mUIAdministrationViewCustom == null))
                {
                    this.mUIAdministrationViewCustom = new UIAdministrationViewCustom(this);
                }
                return this.mUIAdministrationViewCustom;
            }
        }
        
        public UIRibbonControlRibbon3 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon3(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIAdministrationViewCustom mUIAdministrationViewCustom;
        
        private UIRibbonControlRibbon3 mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAdministrationViewCustom : DXTestControl
    {
        
        public UIAdministrationViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AdministrationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AdministrationView";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client : DXTestControl
    {
        
        public UIPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIScOptionsMRUEdit UIScOptionsMRUEdit
        {
            get
            {
                if ((this.mUIScOptionsMRUEdit == null))
                {
                    this.mUIScOptionsMRUEdit = new UIScOptionsMRUEdit(this);
                }
                return this.mUIScOptionsMRUEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIScOptionsMRUEdit mUIScOptionsMRUEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIScOptionsMRUEdit : DXMRUEdit
    {
        
        public UIScOptionsMRUEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "scOptions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UIEditorButton0Button
        {
            get
            {
                if ((this.mUIEditorButton0Button == null))
                {
                    this.mUIEditorButton0Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.Name] = "scOptionsButton[0]";
                    this.mUIEditorButton0Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton0Button.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEditorButton0Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEditorButton0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControlRibbon3 : DXRibbon
    {
        
        public UIRibbonControlRibbon3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage1 UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage1(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage1 mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpMainMenuRibbonPage1 : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGrpDevianceRibbonPageGroup1 UIGrpDevianceRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpDevianceRibbonPageGroup == null))
                {
                    this.mUIGrpDevianceRibbonPageGroup = new UIGrpDevianceRibbonPageGroup1(this);
                }
                return this.mUIGrpDevianceRibbonPageGroup;
            }
        }
        
        public UIGrpViewModeRibbonPageGroup1 UIGrpViewModeRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpViewModeRibbonPageGroup == null))
                {
                    this.mUIGrpViewModeRibbonPageGroup = new UIGrpViewModeRibbonPageGroup1(this);
                }
                return this.mUIGrpViewModeRibbonPageGroup;
            }
        }
        
        public UIGrpMiscRibbonPageGroup UIGrpMiscRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpMiscRibbonPageGroup == null))
                {
                    this.mUIGrpMiscRibbonPageGroup = new UIGrpMiscRibbonPageGroup(this);
                }
                return this.mUIGrpMiscRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDevianceRibbonPageGroup1 mUIGrpDevianceRibbonPageGroup;
        
        private UIGrpViewModeRibbonPageGroup1 mUIGrpViewModeRibbonPageGroup;
        
        private UIGrpMiscRibbonPageGroup mUIGrpMiscRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpDevianceRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpDevianceRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDeviance";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIEkstraRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIEkstraRibbonBaseButtonItem == null))
                {
                    this.mUIEkstraRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExtra";
                    this.mUIEkstraRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIEkstraRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIEkstraRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIEkstraRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpViewModeRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIGrpViewModeRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpViewMode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIOppgaveRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppgaveRibbonBaseButtonItem == null))
                {
                    this.mUIOppgaveRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppgaveRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRoleView";
                    this.mUIOppgaveRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppgaveRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOppgaveRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIOppgaveRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpMiscRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpMiscRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpMisc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIOppgaverRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppgaverRibbonBaseButtonItem == null))
                {
                    this.mUIOppgaverRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppgaverRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRole";
                    this.mUIOppgaverRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppgaverRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOppgaverRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIOppgaverRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITimelisteClient UITimelisteClient
        {
            get
            {
                if ((this.mUITimelisteClient == null))
                {
                    this.mUITimelisteClient = new UITimelisteClient(this);
                }
                return this.mUITimelisteClient;
            }
        }
        
        public WinClient UITimelisteClient1
        {
            get
            {
                if ((this.mUITimelisteClient1 == null))
                {
                    this.mUITimelisteClient1 = new WinClient(this);
                    #region Search Criteria
                    this.mUITimelisteClient1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITimelisteClient1;
            }
        }
        #endregion
        
        #region Fields
        private UITimelisteClient mUITimelisteClient;
        
        private WinClient mUITimelisteClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITimelisteClient : WinClient
    {
        
        public UITimelisteClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIBrukkalkulerteAMLbruCheckBox
        {
            get
            {
                if ((this.mUIBrukkalkulerteAMLbruCheckBox == null))
                {
                    this.mUIBrukkalkulerteAMLbruCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIBrukkalkulerteAMLbruCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Bruk kalkulerte AML brudd  OBS! Utdatert!";
                    this.mUIBrukkalkulerteAMLbruCheckBox.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBrukkalkulerteAMLbruCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIBrukkalkulerteAMLbruCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow31 : WinWindow
    {
        
        public UIItemWindow31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAvdelingClient
        {
            get
            {
                if ((this.mUIAvdelingClient == null))
                {
                    this.mUIAvdelingClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAvdelingClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAvdelingClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAvdelingClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStillingsforholdWindow : DXWindow
    {
        
        public UIStillingsforholdWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Stillingsforhold";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient2 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient2(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIDbFooterCustom1 UIDbFooterCustom
        {
            get
            {
                if ((this.mUIDbFooterCustom == null))
                {
                    this.mUIDbFooterCustom = new UIDbFooterCustom1(this);
                }
                return this.mUIDbFooterCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient2 mUIPcContentClient;
        
        private UIDbFooterCustom1 mUIDbFooterCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient2 : DXTestControl
    {
        
        public UIPcContentClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISePositionPercentEdit
        {
            get
            {
                if ((this.mUISePositionPercentEdit == null))
                {
                    this.mUISePositionPercentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISePositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sePositionPercent";
                    this.mUISePositionPercentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSpinEdit";
                    this.mUISePositionPercentEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUISePositionPercentEdit;
            }
        }
        
        public UIGSPanelControlClient1 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient1(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public DXLookUpEdit UITlleDepartment1LookUpEdit
        {
            get
            {
                if ((this.mUITlleDepartment1LookUpEdit == null))
                {
                    this.mUITlleDepartment1LookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUITlleDepartment1LookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "tlleDepartment[1]";
                    this.mUITlleDepartment1LookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListLookUpEdit";
                    this.mUITlleDepartment1LookUpEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUITlleDepartment1LookUpEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUITlleDepartment1LookUpEdit;
            }
        }
        
        public DXLookUpEdit UITlleDepartment0LookUpEdit
        {
            get
            {
                if ((this.mUITlleDepartment0LookUpEdit == null))
                {
                    this.mUITlleDepartment0LookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUITlleDepartment0LookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "tlleDepartment[0]";
                    this.mUITlleDepartment0LookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListLookUpEdit";
                    this.mUITlleDepartment0LookUpEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUITlleDepartment0LookUpEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUITlleDepartment0LookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISePositionPercentEdit;
        
        private UIGSPanelControlClient1 mUIGSPanelControlClient;
        
        private DXLookUpEdit mUITlleDepartment1LookUpEdit;
        
        private DXLookUpEdit mUITlleDepartment0LookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSPanelControlClient1 : DXTestControl
    {
        
        public UIGSPanelControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIGSSearchLookUpEditLookUpEdit UIGSSearchLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit = new UIGSSearchLookUpEditLookUpEdit(this);
                }
                return this.mUIGSSearchLookUpEditLookUpEdit;
            }
        }
        
        public UIGSSearchLookUpEditLookUpEdit1 UIGSSearchLookUpEditLookUpEdit1
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit1 == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit1 = new UIGSSearchLookUpEditLookUpEdit1(this);
                }
                return this.mUIGSSearchLookUpEditLookUpEdit1;
            }
        }
        
        public DXLookUpEdit UIGSSearchLookUpEditLookUpEdit2
        {
            get
            {
                if ((this.mUIGSSearchLookUpEditLookUpEdit2 == null))
                {
                    this.mUIGSSearchLookUpEditLookUpEdit2 = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSSearchLookUpEditLookUpEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "slueWeaAgreement";
                    this.mUIGSSearchLookUpEditLookUpEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUIGSSearchLookUpEditLookUpEdit2;
            }
        }
        
        public DXTextEdit UITeInternalPositionNuEdit
        {
            get
            {
                if ((this.mUITeInternalPositionNuEdit == null))
                {
                    this.mUITeInternalPositionNuEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeInternalPositionNuEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teInternalPositionNumber";
                    this.mUITeInternalPositionNuEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITeInternalPositionNuEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUITeInternalPositionNuEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIGSSearchLookUpEditLookUpEdit mUIGSSearchLookUpEditLookUpEdit;
        
        private UIGSSearchLookUpEditLookUpEdit1 mUIGSSearchLookUpEditLookUpEdit1;
        
        private DXLookUpEdit mUIGSSearchLookUpEditLookUpEdit2;
        
        private DXTextEdit mUITeInternalPositionNuEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSSearchLookUpEditLookUpEdit : DXLookUpEdit
    {
        
        public UIGSSearchLookUpEditLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "slueRuleSet";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow1 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow1(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow1 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow1 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "slueRuleSetPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom1 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom1(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom1 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom1 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UILCCustom1 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom1(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom1 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom1 : DXTestControl
    {
        
        public UILCCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup1 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup1(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup1 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup1 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup1(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup1 mUILcgFindLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgFindLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem1 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem1(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem1 mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciLabelFindLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSSearchLookUpEditLookUpEdit1 : DXLookUpEdit
    {
        
        public UIGSSearchLookUpEditLookUpEdit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sluePositionCategory";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow2 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow2(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow2 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow2 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sluePositionCategoryPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom2 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom2(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom2 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom2 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UILCCustom2 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom2(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom2 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom2 : DXTestControl
    {
        
        public UILCCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup2 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup2(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup2 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup2 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup2(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup2 mUILcgFindLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgFindLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem2 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem2(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem2 mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciLabelFindLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDbFooterCustom1 : DXTestControl
    {
        
        public UIDbFooterCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINyarbeidsplanWindow : DXWindow
    {
        
        public UINyarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        
        public UIPnlButtonsClient4 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient4(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        
        private UIPnlButtonsClient4 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        
        public UILayoutControlItem4LayoutControlItem UILayoutControlItem4LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem4LayoutControlItem == null))
                {
                    this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem(this);
                }
                return this.mUILayoutControlItem4LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem mUILcMainInfoLayoutControlItem;
        
        private UILayoutControlItem4LayoutControlItem mUILayoutControlItem4LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainInfoLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainInfoClient : DXTestControl
    {
        
        public UIPnlMainInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber0Edit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        
        public DXTextEdit UIENumber1Edit
        {
            get
            {
                if ((this.mUIENumber1Edit == null))
                {
                    this.mUIENumber1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[1]";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber1Edit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIENumber1Edit;
            }
        }
        
        public UIGcIncludeClient UIGcIncludeClient
        {
            get
            {
                if ((this.mUIGcIncludeClient == null))
                {
                    this.mUIGcIncludeClient = new UIGcIncludeClient(this);
                }
                return this.mUIGcIncludeClient;
            }
        }
        
        public DXCheckBox UIChkKladdCheckBox
        {
            get
            {
                if ((this.mUIChkKladdCheckBox == null))
                {
                    this.mUIChkKladdCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkKladd";
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkKladdCheckBox.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIChkKladdCheckBox;
            }
        }
        
        public DXTextEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtName";
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtNameEdit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIENumber0Edit;
        
        private DXTextEdit mUIENumber1Edit;
        
        private UIGcIncludeClient mUIGcIncludeClient;
        
        private DXCheckBox mUIChkKladdCheckBox;
        
        private DXTextEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcIncludeClient : DXTestControl
    {
        
        public UIGcIncludeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcInclude";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkTasksCheckBox
        {
            get
            {
                if ((this.mUIChkTasksCheckBox == null))
                {
                    this.mUIChkTasksCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkTasksCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkTasks";
                    this.mUIChkTasksCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkTasksCheckBox.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIChkTasksCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkTasksCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem4LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem4LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRuleButtonsClient UIPnlRuleButtonsClient
        {
            get
            {
                if ((this.mUIPnlRuleButtonsClient == null))
                {
                    this.mUIPnlRuleButtonsClient = new UIPnlRuleButtonsClient(this);
                }
                return this.mUIPnlRuleButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRuleButtonsClient mUIPnlRuleButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRuleButtonsClient : DXTestControl
    {
        
        public UIPnlRuleButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRuleButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgingenButton
        {
            get
            {
                if ((this.mUIVelgingenButton == null))
                {
                    this.mUIVelgingenButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNone";
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgingenButton.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIVelgingenButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgingenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlButtonsClient4 : DXTestControl
    {
        
        public UIPnlButtonsClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT3999InformasjonWindow : DXWindow
    {
        
        public UIGT3999InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-3999 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-3999 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("GT-3999 - Informasjon");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow : DXWindow
    {
        
        public UIOppgavetildelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainCustom3 UILcMainCustom
        {
            get
            {
                if ((this.mUILcMainCustom == null))
                {
                    this.mUILcMainCustom = new UILcMainCustom3(this);
                }
                return this.mUILcMainCustom;
            }
        }
        
        public UILcMainCustom11 UILcMainCustom1
        {
            get
            {
                if ((this.mUILcMainCustom1 == null))
                {
                    this.mUILcMainCustom1 = new UILcMainCustom11(this);
                }
                return this.mUILcMainCustom1;
            }
        }
        
        public UIRcMenuRibbon4 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon4(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        
        public UIGcContentClient UIGcContentClient
        {
            get
            {
                if ((this.mUIGcContentClient == null))
                {
                    this.mUIGcContentClient = new UIGcContentClient(this);
                }
                return this.mUIGcContentClient;
            }
        }
        
        public UIVhContentCustom UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainCustom3 mUILcMainCustom;
        
        private UILcMainCustom11 mUILcMainCustom1;
        
        private UIRcMenuRibbon4 mUIRcMenuRibbon;
        
        private DXButton mUIAvbrytButton;
        
        private DXButton mUISimpleButtonButton;
        
        private UIGcContentClient mUIGcContentClient;
        
        private UIVhContentCustom mUIVhContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainCustom3 : DXTestControl
    {
        
        public UILcMainCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup2 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup2(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup2 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciCenterLayoutControlItem UILciCenterLayoutControlItem
        {
            get
            {
                if ((this.mUILciCenterLayoutControlItem == null))
                {
                    this.mUILciCenterLayoutControlItem = new UILciCenterLayoutControlItem(this);
                }
                return this.mUILciCenterLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciCenterLayoutControlItem mUILciCenterLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciCenterLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciCenterLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcCenterClient UIPcCenterClient
        {
            get
            {
                if ((this.mUIPcCenterClient == null))
                {
                    this.mUIPcCenterClient = new UIPcCenterClient(this);
                }
                return this.mUIPcCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcCenterClient mUIPcCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcCenterClient : DXTestControl
    {
        
        public UIPcCenterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcInnerCustom UILcInnerCustom
        {
            get
            {
                if ((this.mUILcInnerCustom == null))
                {
                    this.mUILcInnerCustom = new UILcInnerCustom(this);
                }
                return this.mUILcInnerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcInnerCustom mUILcInnerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcInnerCustom : DXTestControl
    {
        
        public UILcInnerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcInner";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgInnerLayoutGroup UILcgInnerLayoutGroup
        {
            get
            {
                if ((this.mUILcgInnerLayoutGroup == null))
                {
                    this.mUILcgInnerLayoutGroup = new UILcgInnerLayoutGroup(this);
                }
                return this.mUILcgInnerLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgInnerLayoutGroup mUILcgInnerLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgInnerLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgInnerLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgInner";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciInnerTopLayoutControlItem UILciInnerTopLayoutControlItem
        {
            get
            {
                if ((this.mUILciInnerTopLayoutControlItem == null))
                {
                    this.mUILciInnerTopLayoutControlItem = new UILciInnerTopLayoutControlItem(this);
                }
                return this.mUILciInnerTopLayoutControlItem;
            }
        }
        
        public UILciInnerBottomLayoutControlItem UILciInnerBottomLayoutControlItem
        {
            get
            {
                if ((this.mUILciInnerBottomLayoutControlItem == null))
                {
                    this.mUILciInnerBottomLayoutControlItem = new UILciInnerBottomLayoutControlItem(this);
                }
                return this.mUILciInnerBottomLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciInnerTopLayoutControlItem mUILciInnerTopLayoutControlItem;
        
        private UILciInnerBottomLayoutControlItem mUILciInnerBottomLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciInnerTopLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciInnerTopLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciInnerTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcInnerTopClient UIPcInnerTopClient
        {
            get
            {
                if ((this.mUIPcInnerTopClient == null))
                {
                    this.mUIPcInnerTopClient = new UIPcInnerTopClient(this);
                }
                return this.mUIPcInnerTopClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcInnerTopClient mUIPcInnerTopClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcInnerTopClient : DXTestControl
    {
        
        public UIPcInnerTopClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcInnerTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcContentCustom UILcContentCustom
        {
            get
            {
                if ((this.mUILcContentCustom == null))
                {
                    this.mUILcContentCustom = new UILcContentCustom(this);
                }
                return this.mUILcContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcContentCustom mUILcContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcContentCustom : DXTestControl
    {
        
        public UILcContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgContentLayoutGroup UILcgContentLayoutGroup
        {
            get
            {
                if ((this.mUILcgContentLayoutGroup == null))
                {
                    this.mUILcgContentLayoutGroup = new UILcgContentLayoutGroup(this);
                }
                return this.mUILcgContentLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgContentLayoutGroup mUILcgContentLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgContentLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgContentLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciInfoLayoutControlItem UILciInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILciInfoLayoutControlItem == null))
                {
                    this.mUILciInfoLayoutControlItem = new UILciInfoLayoutControlItem(this);
                }
                return this.mUILciInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciInfoLayoutControlItem mUILciInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciInfoLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciInfoLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UINbcInfoNavBar UINbcInfoNavBar
        {
            get
            {
                if ((this.mUINbcInfoNavBar == null))
                {
                    this.mUINbcInfoNavBar = new UINbcInfoNavBar(this);
                }
                return this.mUINbcInfoNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcInfoNavBar mUINbcInfoNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbcInfoNavBar : DXNavBar
    {
        
        public UINbcInfoNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UINbgccAdvancedRoleInfScrollableControl UINbgccAdvancedRoleInfScrollableControl
        {
            get
            {
                if ((this.mUINbgccAdvancedRoleInfScrollableControl == null))
                {
                    this.mUINbgccAdvancedRoleInfScrollableControl = new UINbgccAdvancedRoleInfScrollableControl(this);
                }
                return this.mUINbgccAdvancedRoleInfScrollableControl;
            }
        }
        
        public UINbgccEmployeeInfoScrollableControl UINbgccEmployeeInfoScrollableControl
        {
            get
            {
                if ((this.mUINbgccEmployeeInfoScrollableControl == null))
                {
                    this.mUINbgccEmployeeInfoScrollableControl = new UINbgccEmployeeInfoScrollableControl(this);
                }
                return this.mUINbgccEmployeeInfoScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccAdvancedRoleInfScrollableControl mUINbgccAdvancedRoleInfScrollableControl;
        
        private UINbgccEmployeeInfoScrollableControl mUINbgccEmployeeInfoScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgccAdvancedRoleInfScrollableControl : DXScrollableControl
    {
        
        public UINbgccAdvancedRoleInfScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccAdvancedRoleInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcAdvancedRoleInfoClient UIPcAdvancedRoleInfoClient
        {
            get
            {
                if ((this.mUIPcAdvancedRoleInfoClient == null))
                {
                    this.mUIPcAdvancedRoleInfoClient = new UIPcAdvancedRoleInfoClient(this);
                }
                return this.mUIPcAdvancedRoleInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcAdvancedRoleInfoClient mUIPcAdvancedRoleInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcAdvancedRoleInfoClient : DXTestControl
    {
        
        public UIPcAdvancedRoleInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcAdvancedRoleInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblAdvancedRoleNameCLabel
        {
            get
            {
                if ((this.mUILblAdvancedRoleNameCLabel == null))
                {
                    this.mUILblAdvancedRoleNameCLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblAdvancedRoleNameCLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblAdvancedRoleNameCodeValue";
                    this.mUILblAdvancedRoleNameCLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLabelControl";
                    this.mUILblAdvancedRoleNameCLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILblAdvancedRoleNameCLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblAdvancedRoleNameCLabel;
            }
        }
        
        public DXTestControl UILblAdvancedRoleFromTLabel
        {
            get
            {
                if ((this.mUILblAdvancedRoleFromTLabel == null))
                {
                    this.mUILblAdvancedRoleFromTLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblAdvancedRoleFromTLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblAdvancedRoleFromToValue";
                    this.mUILblAdvancedRoleFromTLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLabelControl";
                    this.mUILblAdvancedRoleFromTLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILblAdvancedRoleFromTLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblAdvancedRoleFromTLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblAdvancedRoleNameCLabel;
        
        private DXTestControl mUILblAdvancedRoleFromTLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgccEmployeeInfoScrollableControl : DXScrollableControl
    {
        
        public UINbgccEmployeeInfoScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccEmployeeInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcEmployeeInfoClient UIPcEmployeeInfoClient
        {
            get
            {
                if ((this.mUIPcEmployeeInfoClient == null))
                {
                    this.mUIPcEmployeeInfoClient = new UIPcEmployeeInfoClient(this);
                }
                return this.mUIPcEmployeeInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcEmployeeInfoClient mUIPcEmployeeInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcEmployeeInfoClient : DXTestControl
    {
        
        public UIPcEmployeeInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcEmployeeInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UILblEmployeeNameValueLabel
        {
            get
            {
                if ((this.mUILblEmployeeNameValueLabel == null))
                {
                    this.mUILblEmployeeNameValueLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblEmployeeNameValueLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblEmployeeNameValue";
                    this.mUILblEmployeeNameValueLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLabelControl";
                    this.mUILblEmployeeNameValueLabel.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILblEmployeeNameValueLabel.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILblEmployeeNameValueLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUILblEmployeeNameValueLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciInnerBottomLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciInnerBottomLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciInnerBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcInnerBottomClient UIPcInnerBottomClient
        {
            get
            {
                if ((this.mUIPcInnerBottomClient == null))
                {
                    this.mUIPcInnerBottomClient = new UIPcInnerBottomClient(this);
                }
                return this.mUIPcInnerBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcInnerBottomClient mUIPcInnerBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcInnerBottomClient : DXTestControl
    {
        
        public UIPcInnerBottomClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcInnerBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOkDone";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvbrytButton;
        
        private DXButton mUIGSSimpleButtonButton;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainCustom11 : DXTestControl
    {
        
        public UILcMainCustom11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup3 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup3(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup3 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciCenterLayoutControlItem1 UILciCenterLayoutControlItem
        {
            get
            {
                if ((this.mUILciCenterLayoutControlItem == null))
                {
                    this.mUILciCenterLayoutControlItem = new UILciCenterLayoutControlItem1(this);
                }
                return this.mUILciCenterLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciCenterLayoutControlItem1 mUILciCenterLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciCenterLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciCenterLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcCenterClient1 UIPcCenterClient
        {
            get
            {
                if ((this.mUIPcCenterClient == null))
                {
                    this.mUIPcCenterClient = new UIPcCenterClient1(this);
                }
                return this.mUIPcCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcCenterClient1 mUIPcCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcCenterClient1 : DXTestControl
    {
        
        public UIPcCenterClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcInnerCustom1 UILcInnerCustom
        {
            get
            {
                if ((this.mUILcInnerCustom == null))
                {
                    this.mUILcInnerCustom = new UILcInnerCustom1(this);
                }
                return this.mUILcInnerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcInnerCustom1 mUILcInnerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcInnerCustom1 : DXTestControl
    {
        
        public UILcInnerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcInner";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgInnerLayoutGroup1 UILcgInnerLayoutGroup
        {
            get
            {
                if ((this.mUILcgInnerLayoutGroup == null))
                {
                    this.mUILcgInnerLayoutGroup = new UILcgInnerLayoutGroup1(this);
                }
                return this.mUILcgInnerLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgInnerLayoutGroup1 mUILcgInnerLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgInnerLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcgInnerLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgInner";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciInnerTopLayoutControlItem1 UILciInnerTopLayoutControlItem
        {
            get
            {
                if ((this.mUILciInnerTopLayoutControlItem == null))
                {
                    this.mUILciInnerTopLayoutControlItem = new UILciInnerTopLayoutControlItem1(this);
                }
                return this.mUILciInnerTopLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciInnerTopLayoutControlItem1 mUILciInnerTopLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciInnerTopLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciInnerTopLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciInnerTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcInnerTopClient1 UIPcInnerTopClient
        {
            get
            {
                if ((this.mUIPcInnerTopClient == null))
                {
                    this.mUIPcInnerTopClient = new UIPcInnerTopClient1(this);
                }
                return this.mUIPcInnerTopClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcInnerTopClient1 mUIPcInnerTopClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcInnerTopClient1 : DXTestControl
    {
        
        public UIPcInnerTopClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcInnerTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainContentCustom UILcMainContentCustom
        {
            get
            {
                if ((this.mUILcMainContentCustom == null))
                {
                    this.mUILcMainContentCustom = new UILcMainContentCustom(this);
                }
                return this.mUILcMainContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainContentCustom mUILcMainContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainContentCustom : DXTestControl
    {
        
        public UILcMainContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgMainContentLayoutGroup UILcgMainContentLayoutGroup
        {
            get
            {
                if ((this.mUILcgMainContentLayoutGroup == null))
                {
                    this.mUILcgMainContentLayoutGroup = new UILcgMainContentLayoutGroup(this);
                }
                return this.mUILcgMainContentLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgMainContentLayoutGroup mUILcgMainContentLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgMainContentLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgMainContentLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgMainContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciMainContentLayoutControlItem UILciMainContentLayoutControlItem
        {
            get
            {
                if ((this.mUILciMainContentLayoutControlItem == null))
                {
                    this.mUILciMainContentLayoutControlItem = new UILciMainContentLayoutControlItem(this);
                }
                return this.mUILciMainContentLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMainContentLayoutControlItem mUILciMainContentLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciMainContentLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciMainContentLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMainContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIAdvancedRoleAssignmeCustom UIAdvancedRoleAssignmeCustom
        {
            get
            {
                if ((this.mUIAdvancedRoleAssignmeCustom == null))
                {
                    this.mUIAdvancedRoleAssignmeCustom = new UIAdvancedRoleAssignmeCustom(this);
                }
                return this.mUIAdvancedRoleAssignmeCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIAdvancedRoleAssignmeCustom mUIAdvancedRoleAssignmeCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAdvancedRoleAssignmeCustom : DXTestControl
    {
        
        public UIAdvancedRoleAssignmeCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "advancedRoleAssignmentMainUserControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AdvancedRoleAssignmentMainUserControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcMainClient UIPcMainClient
        {
            get
            {
                if ((this.mUIPcMainClient == null))
                {
                    this.mUIPcMainClient = new UIPcMainClient(this);
                }
                return this.mUIPcMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainClient mUIPcMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcMainClient : DXTestControl
    {
        
        public UIPcMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon3 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon3(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon3 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon3 : DXRibbon
    {
        
        public UIRcMenuRibbon3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpMainRibbonPage UIRpMainRibbonPage
        {
            get
            {
                if ((this.mUIRpMainRibbonPage == null))
                {
                    this.mUIRpMainRibbonPage = new UIRpMainRibbonPage(this);
                }
                return this.mUIRpMainRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainRibbonPage mUIRpMainRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpMainRibbonPage : DXRibbonPage
    {
        
        public UIRpMainRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgDisplayPeriodRibbonPageGroup1 UIRpgDisplayPeriodRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgDisplayPeriodRibbonPageGroup == null))
                {
                    this.mUIRpgDisplayPeriodRibbonPageGroup = new UIRpgDisplayPeriodRibbonPageGroup1(this);
                }
                return this.mUIRpgDisplayPeriodRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgDisplayPeriodRibbonPageGroup1 mUIRpgDisplayPeriodRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgDisplayPeriodRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgDisplayPeriodRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgDisplayPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIFremRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIFremRibbonBaseButtonItem == null))
                {
                    this.mUIFremRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIFremRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiForwards";
                    this.mUIFremRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIFremRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIFremRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UITilbakeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUITilbakeRibbonBaseButtonItem == null))
                {
                    this.mUITilbakeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUITilbakeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiBackwards";
                    this.mUITilbakeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUITilbakeRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITilbakeRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIFremRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUITilbakeRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon4 : DXRibbon
    {
        
        public UIRcMenuRibbon4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgHomeRibbonPage UIRpgHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpgHomeRibbonPage == null))
                {
                    this.mUIRpgHomeRibbonPage = new UIRpgHomeRibbonPage(this);
                }
                return this.mUIRpgHomeRibbonPage;
            }
        }
        
        public DXPopupEdit UIGSWeekEditEditorPopupEdit
        {
            get
            {
                if ((this.mUIGSWeekEditEditorPopupEdit == null))
                {
                    this.mUIGSWeekEditEditorPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIGSWeekEditEditorPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuGSWeekEditEditor[0]";
                    this.mUIGSWeekEditEditorPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekEditEditor";
                    this.mUIGSWeekEditEditorPopupEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGSWeekEditEditorPopupEdit;
            }
        }
        
        public DXPopupEdit UIUnknownPopupEdit
        {
            get
            {
                if ((this.mUIUnknownPopupEdit == null))
                {
                    this.mUIUnknownPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIUnknownPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Unknown";
                    this.mUIUnknownPopupEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIUnknownPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgHomeRibbonPage mUIRpgHomeRibbonPage;
        
        private DXPopupEdit mUIGSWeekEditEditorPopupEdit;
        
        private DXPopupEdit mUIUnknownPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpgHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgViewRibbonPageGroup UIRpgViewRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgViewRibbonPageGroup == null))
                {
                    this.mUIRpgViewRibbonPageGroup = new UIRpgViewRibbonPageGroup(this);
                }
                return this.mUIRpgViewRibbonPageGroup;
            }
        }
        
        public UIRpgWindowRibbonPageGroup UIRpgWindowRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgWindowRibbonPageGroup == null))
                {
                    this.mUIRpgWindowRibbonPageGroup = new UIRpgWindowRibbonPageGroup(this);
                }
                return this.mUIRpgWindowRibbonPageGroup;
            }
        }
        
        public UIRpgActionsRibbonPageGroup1 UIRpgActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgActionsRibbonPageGroup == null))
                {
                    this.mUIRpgActionsRibbonPageGroup = new UIRpgActionsRibbonPageGroup1(this);
                }
                return this.mUIRpgActionsRibbonPageGroup;
            }
        }
        
        public UIRpNavigationRibbonPageGroup UIRpNavigationRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpNavigationRibbonPageGroup == null))
                {
                    this.mUIRpNavigationRibbonPageGroup = new UIRpNavigationRibbonPageGroup(this);
                }
                return this.mUIRpNavigationRibbonPageGroup;
            }
        }
        
        public UIRpgRoleCodeFilterRibbonPageGroup UIRpgRoleCodeFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgRoleCodeFilterRibbonPageGroup == null))
                {
                    this.mUIRpgRoleCodeFilterRibbonPageGroup = new UIRpgRoleCodeFilterRibbonPageGroup(this);
                }
                return this.mUIRpgRoleCodeFilterRibbonPageGroup;
            }
        }
        
        public UIRpgEmployeeFilterRibbonPageGroup UIRpgEmployeeFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgEmployeeFilterRibbonPageGroup == null))
                {
                    this.mUIRpgEmployeeFilterRibbonPageGroup = new UIRpgEmployeeFilterRibbonPageGroup(this);
                }
                return this.mUIRpgEmployeeFilterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgViewRibbonPageGroup mUIRpgViewRibbonPageGroup;
        
        private UIRpgWindowRibbonPageGroup mUIRpgWindowRibbonPageGroup;
        
        private UIRpgActionsRibbonPageGroup1 mUIRpgActionsRibbonPageGroup;
        
        private UIRpNavigationRibbonPageGroup mUIRpNavigationRibbonPageGroup;
        
        private UIRpgRoleCodeFilterRibbonPageGroup mUIRpgRoleCodeFilterRibbonPageGroup;
        
        private UIRpgEmployeeFilterRibbonPageGroup mUIRpgEmployeeFilterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgViewRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgViewRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIOppgavevisningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppgavevisningRibbonBaseButtonItem == null))
                {
                    this.mUIOppgavevisningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppgavevisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciRoleView";
                    this.mUIOppgavevisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppgavevisningRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgavevisningRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIAnsattvisningRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsattvisningRibbonBaseButtonItem == null))
                {
                    this.mUIAnsattvisningRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsattvisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciEmployeeView";
                    this.mUIAnsattvisningRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsattvisningRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsattvisningRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIOppgavevisningRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIAnsattvisningRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgWindowRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgWindowRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgWindow";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBbiCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBbiCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBbiCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBbiCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiClose";
                    this.mUIBbiCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBbiCloseRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIBbiCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBbiCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgActionsRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgActionsRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILagreRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILagreRibbonBaseButtonItem == null))
                {
                    this.mUILagreRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiSave";
                    this.mUILagreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILagreRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILagreRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILagreRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpNavigationRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpNavigationRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpNavigation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIOppdaterRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppdaterRibbonBaseButtonItem == null))
                {
                    this.mUIOppdaterRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppdaterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiNavigate";
                    this.mUIOppdaterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppdaterRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppdaterRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonEditItem UIBeToWeekRibbonEditItem
        {
            get
            {
                if ((this.mUIBeToWeekRibbonEditItem == null))
                {
                    this.mUIBeToWeekRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIBeToWeekRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "beToWeek";
                    this.mUIBeToWeekRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIBeToWeekRibbonEditItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIBeToWeekRibbonEditItem;
            }
        }
        
        public DXRibbonEditItem UIBeFromWeekRibbonEditItem
        {
            get
            {
                if ((this.mUIBeFromWeekRibbonEditItem == null))
                {
                    this.mUIBeFromWeekRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIBeFromWeekRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "beFromWeek";
                    this.mUIBeFromWeekRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIBeFromWeekRibbonEditItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIBeFromWeekRibbonEditItem;
            }
        }
        
        public DXRibbonButtonItem UINesteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINesteRibbonBaseButtonItem == null))
                {
                    this.mUINesteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINesteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiNextPeriod";
                    this.mUINesteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINesteRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUINesteRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIForrigeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIForrigeRibbonBaseButtonItem == null))
                {
                    this.mUIForrigeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIForrigeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiPreviousPeriod";
                    this.mUIForrigeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIForrigeRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIForrigeRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIOppdaterRibbonBaseButtonItem;
        
        private DXRibbonEditItem mUIBeToWeekRibbonEditItem;
        
        private DXRibbonEditItem mUIBeFromWeekRibbonEditItem;
        
        private DXRibbonButtonItem mUINesteRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIForrigeRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgRoleCodeFilterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgRoleCodeFilterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgRoleCodeFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIPåAvRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIPåAvRibbonBaseButtonItem == null))
                {
                    this.mUIPåAvRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIPåAvRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[0]";
                    this.mUIPåAvRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIPåAvRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIPåAvRibbonBaseButtonItem;
            }
        }
        
        public UIRibbonGalleryBarItemRibbonGallery1 UIRibbonGalleryBarItemRibbonGallery
        {
            get
            {
                if ((this.mUIRibbonGalleryBarItemRibbonGallery == null))
                {
                    this.mUIRibbonGalleryBarItemRibbonGallery = new UIRibbonGalleryBarItemRibbonGallery1(this);
                }
                return this.mUIRibbonGalleryBarItemRibbonGallery;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIPåAvRibbonBaseButtonItem;
        
        private UIRibbonGalleryBarItemRibbonGallery1 mUIRibbonGalleryBarItemRibbonGallery;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonGalleryBarItemRibbonGallery1 : DXTestControl
    {
        
        public UIRibbonGalleryBarItemRibbonGallery1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryBarItemLink[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGallery";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIRibbonGalleryDropDowButton
        {
            get
            {
                if ((this.mUIRibbonGalleryDropDowButton == null))
                {
                    this.mUIRibbonGalleryDropDowButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "RibbonGalleryDropDownButton";
                    this.mUIRibbonGalleryDropDowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonGalleryDropDownButton";
                    this.mUIRibbonGalleryDropDowButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIRibbonGalleryDropDowButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIRibbonGalleryDropDowButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgEmployeeFilterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgEmployeeFilterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgEmployeeFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIPåAvRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIPåAvRibbonBaseButtonItem == null))
                {
                    this.mUIPåAvRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIPåAvRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarCheckItemLink[0]";
                    this.mUIPåAvRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIPåAvRibbonBaseButtonItem.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIPåAvRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIPåAvRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcContentClient : DXTestControl
    {
        
        public UIGcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddRole";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILeggtilButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        
        public DXButton UIFjernButton
        {
            get
            {
                if ((this.mUIFjernButton == null))
                {
                    this.mUIFjernButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIFjernButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRemoveSelected";
                    this.mUIFjernButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIFjernButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIFjernButton;
            }
        }
        
        public UIGcDetailsClient UIGcDetailsClient
        {
            get
            {
                if ((this.mUIGcDetailsClient == null))
                {
                    this.mUIGcDetailsClient = new UIGcDetailsClient(this);
                }
                return this.mUIGcDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILeggtilButton;
        
        private DXButton mUIFjernButton;
        
        private UIGcDetailsClient mUIGcDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDetailsClient : DXTestControl
    {
        
        public UIGcDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhDetailsCustom UIVhDetailsCustom
        {
            get
            {
                if ((this.mUIVhDetailsCustom == null))
                {
                    this.mUIVhDetailsCustom = new UIVhDetailsCustom(this);
                }
                return this.mUIVhDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDetailsCustom mUIVhDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhDetailsCustom : DXTestControl
    {
        
        public UIVhDetailsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient7 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient7(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient7 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient7 : DXTestControl
    {
        
        public UIPcViewClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleDetailsViewCustom UIRoleDetailsViewCustom
        {
            get
            {
                if ((this.mUIRoleDetailsViewCustom == null))
                {
                    this.mUIRoleDetailsViewCustom = new UIRoleDetailsViewCustom(this);
                }
                return this.mUIRoleDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleDetailsViewCustom mUIRoleDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleDetailsViewCustom : DXTestControl
    {
        
        public UIRoleDetailsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleDetailsView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client1 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client1(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client1 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client1 : DXTestControl
    {
        
        public UIPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UISteFromTimeEdit
        {
            get
            {
                if ((this.mUISteFromTimeEdit == null))
                {
                    this.mUISteFromTimeEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISteFromTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "steFromTime";
                    this.mUISteFromTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartTimeEdit";
                    this.mUISteFromTimeEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISteFromTimeEdit;
            }
        }
        
        public DXTextEdit UISteToTimeEdit
        {
            get
            {
                if ((this.mUISteToTimeEdit == null))
                {
                    this.mUISteToTimeEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUISteToTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "steToTime";
                    this.mUISteToTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartTimeEdit";
                    this.mUISteToTimeEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISteToTimeEdit;
            }
        }
        
        public UITabControlViewHost1TabList UITabControlViewHost1TabList
        {
            get
            {
                if ((this.mUITabControlViewHost1TabList == null))
                {
                    this.mUITabControlViewHost1TabList = new UITabControlViewHost1TabList(this);
                }
                return this.mUITabControlViewHost1TabList;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUISteFromTimeEdit;
        
        private DXTextEdit mUISteToTimeEdit;
        
        private UITabControlViewHost1TabList mUITabControlViewHost1TabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITabControlViewHost1TabList : DXTestControl
    {
        
        public UITabControlViewHost1TabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TabControlViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader1";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage1
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage1 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage1 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1PageHeader0";
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage1.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage1;
            }
        }
        
        public UIViewTabPageClient4 UIViewTabPageClient
        {
            get
            {
                if ((this.mUIViewTabPageClient == null))
                {
                    this.mUIViewTabPageClient = new UIViewTabPageClient4(this);
                }
                return this.mUIViewTabPageClient;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage1;
        
        private UIViewTabPageClient4 mUIViewTabPageClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewTabPageClient4 : DXTestControl
    {
        
        public UIViewTabPageClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tabControlViewHost1ViewTabPage[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewTabPage";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAccountingViewCustom UIRoleAccountingViewCustom
        {
            get
            {
                if ((this.mUIRoleAccountingViewCustom == null))
                {
                    this.mUIRoleAccountingViewCustom = new UIRoleAccountingViewCustom(this);
                }
                return this.mUIRoleAccountingViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAccountingViewCustom mUIRoleAccountingViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAccountingViewCustom : DXTestControl
    {
        
        public UIRoleAccountingViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAccountingView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAccountingView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILeCostPlaceLookUpEdit UILeCostPlaceLookUpEdit
        {
            get
            {
                if ((this.mUILeCostPlaceLookUpEdit == null))
                {
                    this.mUILeCostPlaceLookUpEdit = new UILeCostPlaceLookUpEdit(this);
                }
                return this.mUILeCostPlaceLookUpEdit;
            }
        }
        
        public UILeProjectLookUpEdit UILeProjectLookUpEdit
        {
            get
            {
                if ((this.mUILeProjectLookUpEdit == null))
                {
                    this.mUILeProjectLookUpEdit = new UILeProjectLookUpEdit(this);
                }
                return this.mUILeProjectLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILeCostPlaceLookUpEdit mUILeCostPlaceLookUpEdit;
        
        private UILeProjectLookUpEdit mUILeProjectLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeCostPlaceLookUpEdit : DXLookUpEdit
    {
        
        public UILeCostPlaceLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leCostPlace";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow3 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow3(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow3 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow3 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leCostPlacePopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom3 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom3(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom3 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom3 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILCCustom3 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom3(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom3 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom3 : DXTestControl
    {
        
        public UILCCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup3 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup3(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup3 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup3 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup3(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        
        public UILciGridLayoutControlItem UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup3 mUILcgFindLayoutGroup;
        
        private UILciGridLayoutControlItem mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgFindLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem3 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem3(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem3 mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciLabelFindLayoutControlItem3 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciGridLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable1 UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable1(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable1 mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable1 : DXGrid
    {
        
        public UIGridControlTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem5000ARBEIDSPLANKCell
        {
            get
            {
                if ((this.mUIItem5000ARBEIDSPLANKCell == null))
                {
                    this.mUIItem5000ARBEIDSPLANKCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5000ARBEIDSPLANKCell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]searchLookUpEdit1View[Row]0[Column]colD" +
                        "isplayName";
                    this.mUIItem5000ARBEIDSPLANKCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5000ARBEIDSPLANKCell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIItem5000ARBEIDSPLANKCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem5000ARBEIDSPLANKCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeProjectLookUpEdit : DXLookUpEdit
    {
        
        public UILeProjectLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leProject";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchLookUpEdit";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPopupSearchLookUpEdiWindow4 UIPopupSearchLookUpEdiWindow
        {
            get
            {
                if ((this.mUIPopupSearchLookUpEdiWindow == null))
                {
                    this.mUIPopupSearchLookUpEdiWindow = new UIPopupSearchLookUpEdiWindow4(this);
                }
                return this.mUIPopupSearchLookUpEdiWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupSearchLookUpEdiWindow4 mUIPopupSearchLookUpEdiWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupSearchLookUpEdiWindow4 : DXWindow
    {
        
        public UIPopupSearchLookUpEdiWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "leProjectPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupSearchLookUpEditForm";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISearchEditLookUpPopuCustom4 UISearchEditLookUpPopuCustom
        {
            get
            {
                if ((this.mUISearchEditLookUpPopuCustom == null))
                {
                    this.mUISearchEditLookUpPopuCustom = new UISearchEditLookUpPopuCustom4(this);
                }
                return this.mUISearchEditLookUpPopuCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISearchEditLookUpPopuCustom4 mUISearchEditLookUpPopuCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchEditLookUpPopuCustom4 : DXTestControl
    {
        
        public UISearchEditLookUpPopuCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SearchEditLookUpPopup";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchEditLookUpPopup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILCCustom4 UILCCustom
        {
            get
            {
                if ((this.mUILCCustom == null))
                {
                    this.mUILCCustom = new UILCCustom4(this);
                }
                return this.mUILCCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILCCustom4 mUILCCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILCCustom4 : DXTestControl
    {
        
        public UILCCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lc";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcMainLayoutGroup4 UILcMainLayoutGroup
        {
            get
            {
                if ((this.mUILcMainLayoutGroup == null))
                {
                    this.mUILcMainLayoutGroup = new UILcMainLayoutGroup4(this);
                }
                return this.mUILcMainLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainLayoutGroup4 mUILcMainLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainLayoutGroup4 : DXBaseLayoutItem
    {
        
        public UILcMainLayoutGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILcgFindLayoutGroup4 UILcgFindLayoutGroup
        {
            get
            {
                if ((this.mUILcgFindLayoutGroup == null))
                {
                    this.mUILcgFindLayoutGroup = new UILcgFindLayoutGroup4(this);
                }
                return this.mUILcgFindLayoutGroup;
            }
        }
        
        public UILciGridLayoutControlItem1 UILciGridLayoutControlItem
        {
            get
            {
                if ((this.mUILciGridLayoutControlItem == null))
                {
                    this.mUILciGridLayoutControlItem = new UILciGridLayoutControlItem1(this);
                }
                return this.mUILciGridLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcgFindLayoutGroup4 mUILcgFindLayoutGroup;
        
        private UILciGridLayoutControlItem1 mUILciGridLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgFindLayoutGroup4 : DXBaseLayoutItem
    {
        
        public UILcgFindLayoutGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UILciLabelFindLayoutControlItem4 UILciLabelFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciLabelFindLayoutControlItem == null))
                {
                    this.mUILciLabelFindLayoutControlItem = new UILciLabelFindLayoutControlItem4(this);
                }
                return this.mUILciLabelFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciLabelFindLayoutControlItem4 mUILciLabelFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciLabelFindLayoutControlItem4 : DXBaseLayoutItem
    {
        
        public UILciLabelFindLayoutControlItem4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciLabelFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITeFindEdit
        {
            get
            {
                if ((this.mUITeFindEdit == null))
                {
                    this.mUITeFindEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUITeFindEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITeFindEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITeFindEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciGridLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciGridLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGridControlTable2 UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new UIGridControlTable2(this);
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGridControlTable2 mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridControlTable2 : DXGrid
    {
        
        public UIGridControlTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIP1Prosjekt1Cell
        {
            get
            {
                if ((this.mUIP1Prosjekt1Cell == null))
                {
                    this.mUIP1Prosjekt1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIP1Prosjekt1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "lciGridGridControl[0]GridControlCell[View]gridView1[Row]0[Column]colDisplayName1";
                    this.mUIP1Prosjekt1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIP1Prosjekt1Cell.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIP1Prosjekt1Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIP1Prosjekt1Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom : DXTestControl
    {
        
        public UIVhContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient8 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient8(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient8 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient8 : DXTestControl
    {
        
        public UIPcViewClient8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer2DockPanel UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        
        public UIDpSummaryDockPanel UIDpSummaryDockPanel
        {
            get
            {
                if ((this.mUIDpSummaryDockPanel == null))
                {
                    this.mUIDpSummaryDockPanel = new UIDpSummaryDockPanel(this);
                }
                return this.mUIDpSummaryDockPanel;
            }
        }
        
        public UIDockPanelDockPanel UIDockPanelDockPanel
        {
            get
            {
                if ((this.mUIDockPanelDockPanel == null))
                {
                    this.mUIDockPanelDockPanel = new UIDockPanelDockPanel(this);
                }
                return this.mUIDockPanelDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer2DockPanel mUIPanelContainer2DockPanel;
        
        private UIDpSummaryDockPanel mUIDpSummaryDockPanel;
        
        private UIDockPanelDockPanel mUIDockPanelDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer1DockPanel UIPanelContainer1DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer1DockPanel == null))
                {
                    this.mUIPanelContainer1DockPanel = new UIPanelContainer1DockPanel(this);
                }
                return this.mUIPanelContainer1DockPanel;
            }
        }
        
        public UIPanelContainer3DockPanel UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer1DockPanel mUIPanelContainer1DockPanel;
        
        private UIPanelContainer3DockPanel mUIPanelContainer3DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer1DockPanel : DXDockPanel
    {
        
        public UIPanelContainer1DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIOppgaverButton
        {
            get
            {
                if ((this.mUIOppgaverButton == null))
                {
                    this.mUIOppgaverButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOppgaverButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgaver";
                    this.mUIOppgaverButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIOppgaverButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgaverButton;
            }
        }
        
        public DXButton UIOppgavemønsterButton
        {
            get
            {
                if ((this.mUIOppgavemønsterButton == null))
                {
                    this.mUIOppgavemønsterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOppgavemønsterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavemønster";
                    this.mUIOppgavemønsterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIOppgavemønsterButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgavemønsterButton;
            }
        }
        
        public DXButton UIAnsatteButton
        {
            get
            {
                if ((this.mUIAnsatteButton == null))
                {
                    this.mUIAnsatteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIAnsatteButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsatteButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOppgaverButton;
        
        private DXButton mUIOppgavemønsterButton;
        
        private DXButton mUIAnsatteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UISpesifikasjonButton
        {
            get
            {
                if ((this.mUISpesifikasjonButton == null))
                {
                    this.mUISpesifikasjonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Spesifikasjon";
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUISpesifikasjonButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISpesifikasjonButton;
            }
        }
        
        public DXButton UITildelingButton
        {
            get
            {
                if ((this.mUITildelingButton == null))
                {
                    this.mUITildelingButton = new DXButton(this);
                    #region Search Criteria
                    this.mUITildelingButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Tildeling";
                    this.mUITildelingButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUITildelingButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUITildelingButton;
            }
        }
        
        public DXButton UISøkerstattButton
        {
            get
            {
                if ((this.mUISøkerstattButton == null))
                {
                    this.mUISøkerstattButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkerstattButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Søk & erstatt";
                    this.mUISøkerstattButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUISøkerstattButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUISøkerstattButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISpesifikasjonButton;
        
        private DXButton mUITildelingButton;
        
        private DXButton mUISøkerstattButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpSummaryDockPanel : DXDockPanel
    {
        
        public UIDpSummaryDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpSummary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom1 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom1(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom1 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UISumDemandHostViewCustom UISumDemandHostViewCustom
        {
            get
            {
                if ((this.mUISumDemandHostViewCustom == null))
                {
                    this.mUISumDemandHostViewCustom = new UISumDemandHostViewCustom(this);
                }
                return this.mUISumDemandHostViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISumDemandHostViewCustom mUISumDemandHostViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISumDemandHostViewCustom : DXTestControl
    {
        
        public UISumDemandHostViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SumDemandHostView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SumDemandHostView";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom2 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom2(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom2 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom2 : DXTestControl
    {
        
        public UIViewHost1Custom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient9 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient9(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient9 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient9 : DXTestControl
    {
        
        public UIPcViewClient9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcSumDemandTable
        {
            get
            {
                if ((this.mUIGcSumDemandTable == null))
                {
                    this.mUIGcSumDemandTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcSumDemandTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSumDemand";
                    this.mUIGcSumDemandTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcSumDemandTable.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIGcSumDemandTable.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcSumDemandTable;
            }
        }
        
        public UIPanFilterClient UIPanFilterClient
        {
            get
            {
                if ((this.mUIPanFilterClient == null))
                {
                    this.mUIPanFilterClient = new UIPanFilterClient(this);
                }
                return this.mUIPanFilterClient;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcSumDemandTable;
        
        private UIPanFilterClient mUIPanFilterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanFilterClient : DXTestControl
    {
        
        public UIPanFilterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILeSumDemandDataSourcLookUpEdit
        {
            get
            {
                if ((this.mUILeSumDemandDataSourcLookUpEdit == null))
                {
                    this.mUILeSumDemandDataSourcLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeSumDemandDataSourcLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leSumDemandDataSource";
                    this.mUILeSumDemandDataSourcLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUILeSumDemandDataSourcLookUpEdit.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUILeSumDemandDataSourcLookUpEdit;
            }
        }
        
        public DXCheckBox UIChkShowCoverageBreakCheckBox
        {
            get
            {
                if ((this.mUIChkShowCoverageBreakCheckBox == null))
                {
                    this.mUIChkShowCoverageBreakCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkShowCoverageBreakCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkShowCoverageBreaks";
                    this.mUIChkShowCoverageBreakCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkShowCoverageBreakCheckBox.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIChkShowCoverageBreakCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILeSumDemandDataSourcLookUpEdit;
        
        private DXCheckBox mUIChkShowCoverageBreakCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanelDockPanel : DXDockPanel
    {
        
        public UIDockPanelDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewViewDockPanel[2]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDockPanelDockPanel1 UIDockPanelDockPanel1
        {
            get
            {
                if ((this.mUIDockPanelDockPanel1 == null))
                {
                    this.mUIDockPanelDockPanel1 = new UIDockPanelDockPanel1(this);
                }
                return this.mUIDockPanelDockPanel1;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanelDockPanel1 mUIDockPanelDockPanel1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanelDockPanel1 : DXDockPanel
    {
        
        public UIDockPanelDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewViewDockPanel[2]DockPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIAnsatteButton
        {
            get
            {
                if ((this.mUIAnsatteButton == null))
                {
                    this.mUIAnsatteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIAnsatteButton.WindowTitles.Add("Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsatteButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAnsatteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIverksetteWindow : DXWindow
    {
        
        public UIIverksetteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Iverksette";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIPnlTopClient UIPnlTopClient
        {
            get
            {
                if ((this.mUIPnlTopClient == null))
                {
                    this.mUIPnlTopClient = new UIPnlTopClient(this);
                }
                return this.mUIPnlTopClient;
            }
        }
        
        public UIPnlButtonsClient5 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient5(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlTopClient mUIPnlTopClient;
        
        private UIPnlButtonsClient5 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlTopClient : DXTestControl
    {
        
        public UIPnlTopClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UILnkDetailPopupEdit
        {
            get
            {
                if ((this.mUILnkDetailPopupEdit == null))
                {
                    this.mUILnkDetailPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail";
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "5";
                    this.mUILnkDetailPopupEdit.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUILnkDetailPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUILnkDetailPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlButtonsClient5 : DXTestControl
    {
        
        public UIPnlButtonsClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXButton UIIverksett28linjerButton
        {
            get
            {
                if ((this.mUIIverksett28linjerButton == null))
                {
                    this.mUIIverksett28linjerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIIverksett28linjerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuate";
                    this.mUIIverksett28linjerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIIverksett28linjerButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIverksett28linjerButton;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIIverksett28linjerButton;
        
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRegistreringsstatusWindow : DXWindow
    {
        
        public UIRegistreringsstatusWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Registreringsstatus";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILcMessagesCustom UILcMessagesCustom
        {
            get
            {
                if ((this.mUILcMessagesCustom == null))
                {
                    this.mUILcMessagesCustom = new UILcMessagesCustom(this);
                }
                return this.mUILcMessagesCustom;
            }
        }
        
        public UILcMessagesCustom1 UILcMessagesCustom1
        {
            get
            {
                if ((this.mUILcMessagesCustom1 == null))
                {
                    this.mUILcMessagesCustom1 = new UILcMessagesCustom1(this);
                }
                return this.mUILcMessagesCustom1;
            }
        }
        #endregion
        
        #region Fields
        private UILcMessagesCustom mUILcMessagesCustom;
        
        private UILcMessagesCustom1 mUILcMessagesCustom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMessagesCustom : DXTestControl
    {
        
        public UILcMessagesCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILcgMessagesLayoutGroup UILcgMessagesLayoutGroup
        {
            get
            {
                if ((this.mUILcgMessagesLayoutGroup == null))
                {
                    this.mUILcgMessagesLayoutGroup = new UILcgMessagesLayoutGroup(this);
                }
                return this.mUILcgMessagesLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgMessagesLayoutGroup mUILcgMessagesLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgMessagesLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgMessagesLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILciOkLayoutControlItem UILciOkLayoutControlItem
        {
            get
            {
                if ((this.mUILciOkLayoutControlItem == null))
                {
                    this.mUILciOkLayoutControlItem = new UILciOkLayoutControlItem(this);
                }
                return this.mUILciOkLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciOkLayoutControlItem mUILciOkLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciOkLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciOkLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciOk";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Registreringsstatus");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMessagesCustom1 : DXTestControl
    {
        
        public UILcMessagesCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILcgMessagesLayoutGroup1 UILcgMessagesLayoutGroup
        {
            get
            {
                if ((this.mUILcgMessagesLayoutGroup == null))
                {
                    this.mUILcgMessagesLayoutGroup = new UILcgMessagesLayoutGroup1(this);
                }
                return this.mUILcgMessagesLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgMessagesLayoutGroup1 mUILcgMessagesLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgMessagesLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILcgMessagesLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILciOkLayoutControlItem1 UILciOkLayoutControlItem
        {
            get
            {
                if ((this.mUILciOkLayoutControlItem == null))
                {
                    this.mUILciOkLayoutControlItem = new UILciOkLayoutControlItem1(this);
                }
                return this.mUILciOkLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciOkLayoutControlItem1 mUILciOkLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciOkLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciOkLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciOk";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Registreringsstatus");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINyhjelpeplanWindow : DXWindow
    {
        
        public UINyhjelpeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny hjelpeplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient1 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient1(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient1 mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient1 : DXTestControl
    {
        
        public UIPnlMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom1 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom1(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom1 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom1 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup1 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup1 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup1 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup1 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem1 UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem1(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem1 mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainInfoLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient1 UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient1(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient1 mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainInfoClient1 : DXTestControl
    {
        
        public UIPnlMainInfoClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGcIncludeClient1 UIGcIncludeClient
        {
            get
            {
                if ((this.mUIGcIncludeClient == null))
                {
                    this.mUIGcIncludeClient = new UIGcIncludeClient1(this);
                }
                return this.mUIGcIncludeClient;
            }
        }
        
        public DXCheckBox UIChkKladdCheckBox
        {
            get
            {
                if ((this.mUIChkKladdCheckBox == null))
                {
                    this.mUIChkKladdCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkKladd";
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkKladdCheckBox.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIChkKladdCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private UIGcIncludeClient1 mUIGcIncludeClient;
        
        private DXCheckBox mUIChkKladdCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcIncludeClient1 : DXTestControl
    {
        
        public UIGcIncludeClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcInclude";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkTasksCheckBox
        {
            get
            {
                if ((this.mUIChkTasksCheckBox == null))
                {
                    this.mUIChkTasksCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkTasksCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkTasks";
                    this.mUIChkTasksCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkTasksCheckBox.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIChkTasksCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkTasksCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow22 : DXWindow
    {
        
        public UIItemWindow22()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny kalenderplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient2 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient2(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UIPnlMainClient2 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient2(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient2 mUIGSPanelControlClient;
        
        private UIPnlMainClient2 mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSPanelControlClient2 : DXTestControl
    {
        
        public UIGSPanelControlClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient2 : DXTestControl
    {
        
        public UIPnlMainClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom2 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom2(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom2 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom2 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup2 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup2(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup2 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup2 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup2(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup2 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem2 UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem2(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem2 mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainInfoLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient2 UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient2(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient2 mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainInfoClient2 : DXTestControl
    {
        
        public UIPnlMainInfoClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public UIGcIncludeClient2 UIGcIncludeClient
        {
            get
            {
                if ((this.mUIGcIncludeClient == null))
                {
                    this.mUIGcIncludeClient = new UIGcIncludeClient2(this);
                }
                return this.mUIGcIncludeClient;
            }
        }
        
        public DXTextEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtName";
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtNameEdit.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        
        public UIDeStartDateCustom UIDeStartDateCustom
        {
            get
            {
                if ((this.mUIDeStartDateCustom == null))
                {
                    this.mUIDeStartDateCustom = new UIDeStartDateCustom(this);
                }
                return this.mUIDeStartDateCustom;
            }
        }
        
        public DXCheckBox UIChkKladdCheckBox
        {
            get
            {
                if ((this.mUIChkKladdCheckBox == null))
                {
                    this.mUIChkKladdCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkKladd";
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkKladdCheckBox.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIChkKladdCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private UIGcIncludeClient2 mUIGcIncludeClient;
        
        private DXTextEdit mUITxtNameEdit;
        
        private UIDeStartDateCustom mUIDeStartDateCustom;
        
        private DXCheckBox mUIChkKladdCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcIncludeClient2 : DXTestControl
    {
        
        public UIGcIncludeClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcInclude";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkTasksCheckBox
        {
            get
            {
                if ((this.mUIChkTasksCheckBox == null))
                {
                    this.mUIChkTasksCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkTasksCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkTasks";
                    this.mUIChkTasksCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkTasksCheckBox.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIChkTasksCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkTasksCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeStartDateCustom : DXTestControl
    {
        
        public UIDeStartDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Ny kalenderplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Ny kalenderplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINybaseplanWindow : DXWindow
    {
        
        public UINybaseplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny baseplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient3 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient3(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        
        public UIPnlButtonsClient6 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient6(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient3 mUIPnlMainClient;
        
        private UIPnlButtonsClient6 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainClient3 : DXTestControl
    {
        
        public UIPnlMainClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom3 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom3(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom3 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControlMainCustom3 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup3 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup3(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup3 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNaLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup3 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup3(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup3 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroupNeLayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem3 UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem3(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        
        public UILayoutControlItem2LayoutControlItem1 UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem3 mUILcMainInfoLayoutControlItem;
        
        private UILayoutControlItem2LayoutControlItem1 mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMainInfoLayoutControlItem3 : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient3 UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient3(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient3 mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlMainInfoClient3 : DXTestControl
    {
        
        public UIPnlMainInfoClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtName";
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtNameEdit.WindowTitles.Add("Ny baseplan");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        
        public DXTextEdit UIENumber1Edit
        {
            get
            {
                if ((this.mUIENumber1Edit == null))
                {
                    this.mUIENumber1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[1]";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber1Edit.WindowTitles.Add("Ny baseplan");
                    #endregion
                }
                return this.mUIENumber1Edit;
            }
        }
        
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber0Edit.WindowTitles.Add("Ny baseplan");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        
        public DXCheckBox UIChkKladdCheckBox
        {
            get
            {
                if ((this.mUIChkKladdCheckBox == null))
                {
                    this.mUIChkKladdCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkKladd";
                    this.mUIChkKladdCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkKladdCheckBox.WindowTitles.Add("Ny baseplan");
                    #endregion
                }
                return this.mUIChkKladdCheckBox;
            }
        }
        
        public UIDeStartDateCustom1 UIDeStartDateCustom
        {
            get
            {
                if ((this.mUIDeStartDateCustom == null))
                {
                    this.mUIDeStartDateCustom = new UIDeStartDateCustom1(this);
                }
                return this.mUIDeStartDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtNameEdit;
        
        private DXTextEdit mUIENumber1Edit;
        
        private DXTextEdit mUIENumber0Edit;
        
        private DXCheckBox mUIChkKladdCheckBox;
        
        private UIDeStartDateCustom1 mUIDeStartDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeStartDateCustom1 : DXTestControl
    {
        
        public UIDeStartDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Ny baseplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public UIPnlGridSumClient UIPnlGridSumClient
        {
            get
            {
                if ((this.mUIPnlGridSumClient == null))
                {
                    this.mUIPnlGridSumClient = new UIPnlGridSumClient(this);
                }
                return this.mUIPnlGridSumClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridSumClient mUIPnlGridSumClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGridSumClient : DXTestControl
    {
        
        public UIPnlGridSumClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGridSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGsGridControlTable
        {
            get
            {
                if ((this.mUIGsGridControlTable == null))
                {
                    this.mUIGsGridControlTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGsGridControlTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControl";
                    this.mUIGsGridControlTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGsGridControlTable.WindowTitles.Add("Ny baseplan");
                    #endregion
                }
                return this.mUIGsGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGsGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlButtonsClient6 : DXTestControl
    {
        
        public UIPnlButtonsClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny baseplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ny baseplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow32 : DXWindow
    {
        
        public UIItemWindow32()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny masterliste";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny masterliste");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient3 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient3(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient3 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSPanelControlClient3 : DXTestControl
    {
        
        public UIGSPanelControlClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny masterliste");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ny masterliste");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINivåWindow : DXWindow
    {
        
        public UINivåWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Nivå";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControl1Custom : DXTestControl
    {
        
        public UIGsLayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup1 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup1(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup1 mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroup1LayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem1LayoutControlItem UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem1LayoutControlItem mUILayoutControlItem1LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem1LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client2 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client2(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client2 mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl1Client2 : DXTestControl
    {
        
        public UIGsPanelControl1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtFilterEdit
        {
            get
            {
                if ((this.mUITxtFilterEdit == null))
                {
                    this.mUITxtFilterEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtFilterEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtFilter";
                    this.mUITxtFilterEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtFilterEdit.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUITxtFilterEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtFilterEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGodkjenningskravarbeWindow : WinWindow
    {
        
        public UIGodkjenningskravarbeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Godkjenningskrav - arbeidsplan";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmRegEdit";
            this.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGodkjenningskravarbeClient UIGodkjenningskravarbeClient
        {
            get
            {
                if ((this.mUIGodkjenningskravarbeClient == null))
                {
                    this.mUIGodkjenningskravarbeClient = new UIGodkjenningskravarbeClient(this);
                }
                return this.mUIGodkjenningskravarbeClient;
            }
        }
        
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow14 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow14(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow23 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow23(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemClient1 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient1(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIItemClient11 UIItemClient1
        {
            get
            {
                if ((this.mUIItemClient1 == null))
                {
                    this.mUIItemClient1 = new UIItemClient11(this);
                }
                return this.mUIItemClient1;
            }
        }
        
        public UIGodkjenningskravarbeTitleBar UIGodkjenningskravarbeTitleBar
        {
            get
            {
                if ((this.mUIGodkjenningskravarbeTitleBar == null))
                {
                    this.mUIGodkjenningskravarbeTitleBar = new UIGodkjenningskravarbeTitleBar(this);
                }
                return this.mUIGodkjenningskravarbeTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGodkjenningskravarbeClient mUIGodkjenningskravarbeClient;
        
        private UIItemWindow4 mUIItemWindow;
        
        private UIItemWindow14 mUIItemWindow1;
        
        private UIItemWindow23 mUIItemWindow2;
        
        private UIItemClient1 mUIItemClient;
        
        private UIItemClient11 mUIItemClient1;
        
        private UIGodkjenningskravarbeTitleBar mUIGodkjenningskravarbeTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGodkjenningskravarbeClient : WinClient
    {
        
        public UIGodkjenningskravarbeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Godkjenningskrav - arbeidsplan";
            this.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSComboBox";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow14 : WinWindow
    {
        
        public UIItemWindow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSComboBox";
            this.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow23 : WinWindow
    {
        
        public UIItemWindow23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TScrollBox";
            this.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UITillativerksettingutCheckBox
        {
            get
            {
                if ((this.mUITillativerksettingutCheckBox == null))
                {
                    this.mUITillativerksettingutCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUITillativerksettingutCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Tillat iverksetting uten godkjenning";
                    this.mUITillativerksettingutCheckBox.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUITillativerksettingutCheckBox;
            }
        }
        
        public WinCheckBox UITillatoverføringavfaCheckBox
        {
            get
            {
                if ((this.mUITillatoverføringavfaCheckBox == null))
                {
                    this.mUITillatoverføringavfaCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUITillatoverføringavfaCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Tillat overføring av faste tillegg uten godkjenning";
                    this.mUITillatoverføringavfaCheckBox.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUITillatoverføringavfaCheckBox;
            }
        }
        
        public WinCheckBox UITillatpubliseringavaCheckBox
        {
            get
            {
                if ((this.mUITillatpubliseringavaCheckBox == null))
                {
                    this.mUITillatpubliseringavaCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUITillatpubliseringavaCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Tillat publisering av arbeidsplan i MinGat uten godkjenning";
                    this.mUITillatpubliseringavaCheckBox.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUITillatpubliseringavaCheckBox;
            }
        }
        
        public WinCheckBox UIInaktivCheckBox
        {
            get
            {
                if ((this.mUIInaktivCheckBox == null))
                {
                    this.mUIInaktivCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIInaktivCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Inaktiv";
                    this.mUIInaktivCheckBox.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUIInaktivCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUITillativerksettingutCheckBox;
        
        private WinCheckBox mUITillatoverføringavfaCheckBox;
        
        private WinCheckBox mUITillatpubliseringavaCheckBox;
        
        private WinCheckBox mUIInaktivCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient1 : WinClient
    {
        
        public UIItemClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public WinButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[WinButton.PropertyNames.Name] = "Avbryt";
                    this.mUIAvbrytButton.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public WinButton UIOKNyButton
        {
            get
            {
                if ((this.mUIOKNyButton == null))
                {
                    this.mUIOKNyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKNyButton.SearchProperties[WinButton.PropertyNames.Name] = "OK - Ny";
                    this.mUIOKNyButton.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUIOKNyButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        
        private WinButton mUIAvbrytButton;
        
        private WinButton mUIOKNyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemClient11 : WinClient
    {
        
        public UIItemClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = " ";
            this.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.SearchProperties[WinControl.PropertyNames.Name] = " ";
                    this.mUIItemClient.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemClient.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGodkjenningskravarbeTitleBar : WinTitleBar
    {
        
        public UIGodkjenningskravarbeTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Godkjenningskrav - arbeidsplan");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBekreftWindow : WinWindow
    {
        
        public UIBekreftWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Bekreft";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMessageForm";
            this.WindowTitles.Add("Bekreft");
            #endregion
        }
        
        #region Properties
        public UIBekreftClient UIBekreftClient
        {
            get
            {
                if ((this.mUIBekreftClient == null))
                {
                    this.mUIBekreftClient = new UIBekreftClient(this);
                }
                return this.mUIBekreftClient;
            }
        }
        #endregion
        
        #region Fields
        private UIBekreftClient mUIBekreftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBekreftClient : WinClient
    {
        
        public UIBekreftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Bekreft";
            this.WindowTitles.Add("Bekreft");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("Bekreft");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRepresentasjonerWindow : DXWindow
    {
        
        public UIRepresentasjonerWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Representasjoner";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom1 UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom1(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom1 mUIGsLayoutControl1Custom;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControl1Custom1 : DXTestControl
    {
        
        public UIGsLayoutControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public DXButton UINYButton
        {
            get
            {
                if ((this.mUINYButton == null))
                {
                    this.mUINYButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnNew";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINYButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUINYButton.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUINYButton;
            }
        }
        
        public UIRootLayoutGroup4 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup4(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIOKButton.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIAvbrytButton.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public DXButton UIEndreButton
        {
            get
            {
                if ((this.mUIEndreButton == null))
                {
                    this.mUIEndreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEdit";
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndreButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIEndreButton.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUIEndreButton;
            }
        }
        
        public DXButton UISlettButton
        {
            get
            {
                if ((this.mUISlettButton == null))
                {
                    this.mUISlettButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISlettButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUISlettButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUISlettButton.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUISlettButton;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILukkButton.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINYButton;
        
        private UIRootLayoutGroup4 mUIRootLayoutGroup;
        
        private DXButton mUIOKButton;
        
        private DXButton mUIAvbrytButton;
        
        private DXButton mUIEndreButton;
        
        private DXButton mUISlettButton;
        
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup4 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem3LayoutControlItem UILayoutControlItem3LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem3LayoutControlItem == null))
                {
                    this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem(this);
                }
                return this.mUILayoutControlItem3LayoutControlItem;
            }
        }
        
        public UILayoutControlItem1LayoutControlItem1 UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem3LayoutControlItem mUILayoutControlItem3LayoutControlItem;
        
        private UILayoutControlItem1LayoutControlItem1 mUILayoutControlItem1LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem3LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem3LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGrpRepresentationClient UIGrpRepresentationClient
        {
            get
            {
                if ((this.mUIGrpRepresentationClient == null))
                {
                    this.mUIGrpRepresentationClient = new UIGrpRepresentationClient(this);
                }
                return this.mUIGrpRepresentationClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpRepresentationClient mUIGrpRepresentationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpRepresentationClient : DXTestControl
    {
        
        public UIGrpRepresentationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpRepresentation";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl2Custom UIGsLayoutControl2Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl2Custom == null))
                {
                    this.mUIGsLayoutControl2Custom = new UIGsLayoutControl2Custom(this);
                }
                return this.mUIGsLayoutControl2Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl2Custom mUIGsLayoutControl2Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControl2Custom : DXTestControl
    {
        
        public UIGsLayoutControl2Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup5 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup5(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup5 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup5 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem5LayoutControlItem UILayoutControlItem5LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem5LayoutControlItem == null))
                {
                    this.mUILayoutControlItem5LayoutControlItem = new UILayoutControlItem5LayoutControlItem(this);
                }
                return this.mUILayoutControlItem5LayoutControlItem;
            }
        }
        
        public UILayoutControlItem6LayoutControlItem UILayoutControlItem6LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem6LayoutControlItem == null))
                {
                    this.mUILayoutControlItem6LayoutControlItem = new UILayoutControlItem6LayoutControlItem(this);
                }
                return this.mUILayoutControlItem6LayoutControlItem;
            }
        }
        
        public UILayoutControlItem13LayoutControlItem UILayoutControlItem13LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem13LayoutControlItem == null))
                {
                    this.mUILayoutControlItem13LayoutControlItem = new UILayoutControlItem13LayoutControlItem(this);
                }
                return this.mUILayoutControlItem13LayoutControlItem;
            }
        }
        
        public UILayoutControlItem7LayoutControlItem UILayoutControlItem7LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem7LayoutControlItem == null))
                {
                    this.mUILayoutControlItem7LayoutControlItem = new UILayoutControlItem7LayoutControlItem(this);
                }
                return this.mUILayoutControlItem7LayoutControlItem;
            }
        }
        
        public UILayoutControlItem8LayoutControlItem UILayoutControlItem8LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem8LayoutControlItem == null))
                {
                    this.mUILayoutControlItem8LayoutControlItem = new UILayoutControlItem8LayoutControlItem(this);
                }
                return this.mUILayoutControlItem8LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem5LayoutControlItem mUILayoutControlItem5LayoutControlItem;
        
        private UILayoutControlItem6LayoutControlItem mUILayoutControlItem6LayoutControlItem;
        
        private UILayoutControlItem13LayoutControlItem mUILayoutControlItem13LayoutControlItem;
        
        private UILayoutControlItem7LayoutControlItem mUILayoutControlItem7LayoutControlItem;
        
        private UILayoutControlItem8LayoutControlItem mUILayoutControlItem8LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem5LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem5LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGrpRoleClient UIGrpRoleClient
        {
            get
            {
                if ((this.mUIGrpRoleClient == null))
                {
                    this.mUIGrpRoleClient = new UIGrpRoleClient(this);
                }
                return this.mUIGrpRoleClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpRoleClient mUIGrpRoleClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpRoleClient : DXTestControl
    {
        
        public UIGrpRoleClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpRole";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtNameEdit
        {
            get
            {
                if ((this.mUITxtNameEdit == null))
                {
                    this.mUITxtNameEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtName";
                    this.mUITxtNameEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtNameEdit.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUITxtNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem6LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem6LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGrpDepartmentClient UIGrpDepartmentClient
        {
            get
            {
                if ((this.mUIGrpDepartmentClient == null))
                {
                    this.mUIGrpDepartmentClient = new UIGrpDepartmentClient(this);
                }
                return this.mUIGrpDepartmentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpDepartmentClient mUIGrpDepartmentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpDepartmentClient : DXTestControl
    {
        
        public UIGrpDepartmentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpDepartment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIPceDepartmentPopupEdit UIPceDepartmentPopupEdit
        {
            get
            {
                if ((this.mUIPceDepartmentPopupEdit == null))
                {
                    this.mUIPceDepartmentPopupEdit = new UIPceDepartmentPopupEdit(this);
                }
                return this.mUIPceDepartmentPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIPceDepartmentPopupEdit mUIPceDepartmentPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPceDepartmentPopupEdit : DXPopupEdit
    {
        
        public UIPceDepartmentPopupEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDepartment";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerFormWindow1 UIPopupContainerFormWindow
        {
            get
            {
                if ((this.mUIPopupContainerFormWindow == null))
                {
                    this.mUIPopupContainerFormWindow = new UIPopupContainerFormWindow1(this);
                }
                return this.mUIPopupContainerFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerFormWindow1 mUIPopupContainerFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupContainerFormWindow1 : DXWindow
    {
        
        public UIPopupContainerFormWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDepartmentPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerForm";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIPccDepartmentsClient UIPccDepartmentsClient
        {
            get
            {
                if ((this.mUIPccDepartmentsClient == null))
                {
                    this.mUIPccDepartmentsClient = new UIPccDepartmentsClient(this);
                }
                return this.mUIPccDepartmentsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPccDepartmentsClient mUIPccDepartmentsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPccDepartmentsClient : DXTestControl
    {
        
        public UIPccDepartmentsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pccDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public DXTreeList UITlDepartmentsTreeList
        {
            get
            {
                if ((this.mUITlDepartmentsTreeList == null))
                {
                    this.mUITlDepartmentsTreeList = new DXTreeList(this);
                    #region Search Criteria
                    this.mUITlDepartmentsTreeList.SearchProperties[DXTestControl.PropertyNames.Name] = "tlDepartments";
                    this.mUITlDepartmentsTreeList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTreeList";
                    this.mUITlDepartmentsTreeList.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUITlDepartmentsTreeList;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeList mUITlDepartmentsTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem13LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem13LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem13";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGrpRepresentationTypClient UIGrpRepresentationTypClient
        {
            get
            {
                if ((this.mUIGrpRepresentationTypClient == null))
                {
                    this.mUIGrpRepresentationTypClient = new UIGrpRepresentationTypClient(this);
                }
                return this.mUIGrpRepresentationTypClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpRepresentationTypClient mUIGrpRepresentationTypClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpRepresentationTypClient : DXTestControl
    {
        
        public UIGrpRepresentationTypClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpRepresentationType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILueTypeLookUpEdit
        {
            get
            {
                if ((this.mUILueTypeLookUpEdit == null))
                {
                    this.mUILueTypeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILueTypeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lueType";
                    this.mUILueTypeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUILueTypeLookUpEdit.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUILueTypeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILueTypeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem7LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem7LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem7";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGsGroupControl1Client UIGsGroupControl1Client
        {
            get
            {
                if ((this.mUIGsGroupControl1Client == null))
                {
                    this.mUIGsGroupControl1Client = new UIGsGroupControl1Client(this);
                }
                return this.mUIGsGroupControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGroupControl1Client mUIGsGroupControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsGroupControl1Client : DXTestControl
    {
        
        public UIGsGroupControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGroupControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl3Custom UIGsLayoutControl3Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl3Custom == null))
                {
                    this.mUIGsLayoutControl3Custom = new UIGsLayoutControl3Custom(this);
                }
                return this.mUIGsLayoutControl3Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl3Custom mUIGsLayoutControl3Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControl3Custom : DXTestControl
    {
        
        public UIGsLayoutControl3Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public DXButton UILeggtilendreButton
        {
            get
            {
                if ((this.mUILeggtilendreButton == null))
                {
                    this.mUILeggtilendreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilendreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnUnionEdit";
                    this.mUILeggtilendreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILeggtilendreButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILeggtilendreButton.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUILeggtilendreButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILeggtilendreButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem8LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem8LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem8";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGsGroupControl2Client UIGsGroupControl2Client
        {
            get
            {
                if ((this.mUIGsGroupControl2Client == null))
                {
                    this.mUIGsGroupControl2Client = new UIGsGroupControl2Client(this);
                }
                return this.mUIGsGroupControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGroupControl2Client mUIGsGroupControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsGroupControl2Client : DXTestControl
    {
        
        public UIGsGroupControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGroupControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl4Custom UIGsLayoutControl4Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl4Custom == null))
                {
                    this.mUIGsLayoutControl4Custom = new UIGsLayoutControl4Custom(this);
                }
                return this.mUIGsLayoutControl4Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl4Custom mUIGsLayoutControl4Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControl4Custom : DXTestControl
    {
        
        public UIGsLayoutControl4Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public DXButton UILeggtilendreButton
        {
            get
            {
                if ((this.mUILeggtilendreButton == null))
                {
                    this.mUILeggtilendreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilendreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployeeEdit";
                    this.mUILeggtilendreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILeggtilendreButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILeggtilendreButton.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUILeggtilendreButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILeggtilendreButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem1LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGrpRepresentationsClient UIGrpRepresentationsClient
        {
            get
            {
                if ((this.mUIGrpRepresentationsClient == null))
                {
                    this.mUIGrpRepresentationsClient = new UIGrpRepresentationsClient(this);
                }
                return this.mUIGrpRepresentationsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpRepresentationsClient mUIGrpRepresentationsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpRepresentationsClient : DXTestControl
    {
        
        public UIGrpRepresentationsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpRepresentations";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public UIGcRepresentationsTable UIGcRepresentationsTable
        {
            get
            {
                if ((this.mUIGcRepresentationsTable == null))
                {
                    this.mUIGcRepresentationsTable = new UIGcRepresentationsTable(this);
                }
                return this.mUIGcRepresentationsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRepresentationsTable mUIGcRepresentationsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRepresentationsTable : DXGrid
    {
        
        public UIGcRepresentationsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRepresentations";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Representasjoner");
            #endregion
        }
        
        #region Properties
        public DXCell UITillitsvalgtFAGKFO50Cell
        {
            get
            {
                if ((this.mUITillitsvalgtFAGKFO50Cell == null))
                {
                    this.mUITillitsvalgtFAGKFO50Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUITillitsvalgtFAGKFO50Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRepresentationsGridControlCell[View]gvRepresentations[Row]0[Column]colName";
                    this.mUITillitsvalgtFAGKFO50Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITillitsvalgtFAGKFO50Cell.WindowTitles.Add("Representasjoner");
                    #endregion
                }
                return this.mUITillitsvalgtFAGKFO50Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUITillitsvalgtFAGKFO50Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT4001InformasjonWindow : DXWindow
    {
        
        public UIGT4001InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4001 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4001 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgfagforeningerWindow : DXWindow
    {
        
        public UIVelgfagforeningerWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg fagforening(er)";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg fagforening(er)");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom2 UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom2(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom2 mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControl1Custom2 : DXTestControl
    {
        
        public UIGsLayoutControl1Custom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Velg fagforening(er)");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup2 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup2(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIOKButton.WindowTitles.Add("Velg fagforening(er)");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup2 mUILayoutControlGroup1LayoutGroup;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroup1LayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Velg fagforening(er)");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem2 UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem2(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        
        public UILayoutControlGroup5LayoutGroup UILayoutControlGroup5LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup5LayoutGroup == null))
                {
                    this.mUILayoutControlGroup5LayoutGroup = new UILayoutControlGroup5LayoutGroup(this);
                }
                return this.mUILayoutControlGroup5LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem2 mUILayoutControlItem2LayoutControlItem;
        
        private UILayoutControlGroup5LayoutGroup mUILayoutControlGroup5LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg fagforening(er)");
            #endregion
        }
        
        #region Properties
        public UIGsGroupControl2Client1 UIGsGroupControl2Client
        {
            get
            {
                if ((this.mUIGsGroupControl2Client == null))
                {
                    this.mUIGsGroupControl2Client = new UIGsGroupControl2Client1(this);
                }
                return this.mUIGsGroupControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGroupControl2Client1 mUIGsGroupControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsGroupControl2Client1 : DXTestControl
    {
        
        public UIGsGroupControl2Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGroupControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Velg fagforening(er)");
            #endregion
        }
        
        #region Properties
        public UIGcAvailableUnionsTable UIGcAvailableUnionsTable
        {
            get
            {
                if ((this.mUIGcAvailableUnionsTable == null))
                {
                    this.mUIGcAvailableUnionsTable = new UIGcAvailableUnionsTable(this);
                }
                return this.mUIGcAvailableUnionsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAvailableUnionsTable mUIGcAvailableUnionsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAvailableUnionsTable : DXGrid
    {
        
        public UIGcAvailableUnionsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAvailableUnions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Velg fagforening(er)");
            #endregion
        }
        
        #region Properties
        public DXCell UIDELTADeltaCell
        {
            get
            {
                if ((this.mUIDELTADeltaCell == null))
                {
                    this.mUIDELTADeltaCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDELTADeltaCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAvailableUnionsGridControlCell[View]gvAvailableunions[Row]1[Column]gridColumn1";
                    this.mUIDELTADeltaCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDELTADeltaCell.WindowTitles.Add("Velg fagforening(er)");
                    #endregion
                }
                return this.mUIDELTADeltaCell;
            }
        }
        
        public DXCell UIFAGFagforbundetCell
        {
            get
            {
                if ((this.mUIFAGFagforbundetCell == null))
                {
                    this.mUIFAGFagforbundetCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIFAGFagforbundetCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAvailableUnionsGridControlCell[View]gvAvailableunions[Row]2[Column]gridColumn1";
                    this.mUIFAGFagforbundetCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIFAGFagforbundetCell.WindowTitles.Add("Velg fagforening(er)");
                    #endregion
                }
                return this.mUIFAGFagforbundetCell;
            }
        }
        
        public DXCell UINSFUNSFUorganisertCell
        {
            get
            {
                if ((this.mUINSFUNSFUorganisertCell == null))
                {
                    this.mUINSFUNSFUorganisertCell = new DXCell(this);
                    #region Search Criteria
                    this.mUINSFUNSFUorganisertCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAvailableUnionsGridControlCell[View]gvAvailableunions[Row]7[Column]gridColumn1";
                    this.mUINSFUNSFUorganisertCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINSFUNSFUorganisertCell.WindowTitles.Add("Velg fagforening(er)");
                    #endregion
                }
                return this.mUINSFUNSFUorganisertCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIDELTADeltaCell;
        
        private DXCell mUIFAGFagforbundetCell;
        
        private DXCell mUINSFUNSFUorganisertCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroup5LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup5LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Velg fagforening(er)");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem4LayoutControlItem1 UILayoutControlItem4LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem4LayoutControlItem == null))
                {
                    this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem4LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem4LayoutControlItem1 mUILayoutControlItem4LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem4LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem4LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg fagforening(er)");
            #endregion
        }
        
        #region Properties
        public DXButton UIBtnAddButton
        {
            get
            {
                if ((this.mUIBtnAddButton == null))
                {
                    this.mUIBtnAddButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnAddButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAdd";
                    this.mUIBtnAddButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnAddButton.WindowTitles.Add("Velg fagforening(er)");
                    #endregion
                }
                return this.mUIBtnAddButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBtnAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgrepresentanterWindow : DXWindow
    {
        
        public UIVelgrepresentanterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg representant(er)";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg representant(er)");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom3 UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom3(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom3 mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControl1Custom3 : DXTestControl
    {
        
        public UIGsLayoutControl1Custom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Velg representant(er)");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup3 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup3(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIOKButton.WindowTitles.Add("Velg representant(er)");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup3 mUILayoutControlGroup1LayoutGroup;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroup1LayoutGroup3 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Velg representant(er)");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem3 UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem3(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        
        public UILayoutControlGroup2LayoutGroup UILayoutControlGroup2LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup2LayoutGroup == null))
                {
                    this.mUILayoutControlGroup2LayoutGroup = new UILayoutControlGroup2LayoutGroup(this);
                }
                return this.mUILayoutControlGroup2LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem3 mUILayoutControlItem2LayoutControlItem;
        
        private UILayoutControlGroup2LayoutGroup mUILayoutControlGroup2LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem3 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg representant(er)");
            #endregion
        }
        
        #region Properties
        public UIGrpAvailableEmployeeClient UIGrpAvailableEmployeeClient
        {
            get
            {
                if ((this.mUIGrpAvailableEmployeeClient == null))
                {
                    this.mUIGrpAvailableEmployeeClient = new UIGrpAvailableEmployeeClient(this);
                }
                return this.mUIGrpAvailableEmployeeClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpAvailableEmployeeClient mUIGrpAvailableEmployeeClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpAvailableEmployeeClient : DXTestControl
    {
        
        public UIGrpAvailableEmployeeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpAvailableEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Velg representant(er)");
            #endregion
        }
        
        #region Properties
        public UIGcAvailableEmployeesTable UIGcAvailableEmployeesTable
        {
            get
            {
                if ((this.mUIGcAvailableEmployeesTable == null))
                {
                    this.mUIGcAvailableEmployeesTable = new UIGcAvailableEmployeesTable(this);
                }
                return this.mUIGcAvailableEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAvailableEmployeesTable mUIGcAvailableEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAvailableEmployeesTable : DXGrid
    {
        
        public UIGcAvailableEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAvailableEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Velg representant(er)");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem1321Cell
        {
            get
            {
                if ((this.mUIItem1321Cell == null))
                {
                    this.mUIItem1321Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1321Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAvailableEmployeesGridControlCell[View]gvAvailableEmployees[Row]2[Column]colEmp" +
                        "loyeeCode";
                    this.mUIItem1321Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1321Cell.WindowTitles.Add("Velg representant(er)");
                    #endregion
                }
                return this.mUIItem1321Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem1321Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroup2LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup2LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Velg representant(er)");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem5LayoutControlItem1 UILayoutControlItem5LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem5LayoutControlItem == null))
                {
                    this.mUILayoutControlItem5LayoutControlItem = new UILayoutControlItem5LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem5LayoutControlItem;
            }
        }
        
        public UILayoutControlItem8LayoutControlItem1 UILayoutControlItem8LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem8LayoutControlItem == null))
                {
                    this.mUILayoutControlItem8LayoutControlItem = new UILayoutControlItem8LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem8LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem5LayoutControlItem1 mUILayoutControlItem5LayoutControlItem;
        
        private UILayoutControlItem8LayoutControlItem1 mUILayoutControlItem8LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem5LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem5LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg representant(er)");
            #endregion
        }
        
        #region Properties
        public DXButton UIBtnAddButton
        {
            get
            {
                if ((this.mUIBtnAddButton == null))
                {
                    this.mUIBtnAddButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnAddButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAdd";
                    this.mUIBtnAddButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnAddButton.WindowTitles.Add("Velg representant(er)");
                    #endregion
                }
                return this.mUIBtnAddButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBtnAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem8LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem8LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem8";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg representant(er)");
            #endregion
        }
        
        #region Properties
        public DXButton UIBtnRemoveAllButton
        {
            get
            {
                if ((this.mUIBtnRemoveAllButton == null))
                {
                    this.mUIBtnRemoveAllButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBtnRemoveAllButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRemoveAll";
                    this.mUIBtnRemoveAllButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBtnRemoveAllButton.WindowTitles.Add("Velg representant(er)");
                    #endregion
                }
                return this.mUIBtnRemoveAllButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBtnRemoveAllButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgperiodeWindow : DXWindow
    {
        
        public UIVelgperiodeWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg periode";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg periode");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client3 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client3(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Velg periode");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client3 mUIGsPanelControl1Client;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl1Client3 : DXTestControl
    {
        
        public UIGsPanelControl1Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Velg periode");
            #endregion
        }
        
        #region Properties
        public UIDeFromDateCustom UIDeFromDateCustom
        {
            get
            {
                if ((this.mUIDeFromDateCustom == null))
                {
                    this.mUIDeFromDateCustom = new UIDeFromDateCustom(this);
                }
                return this.mUIDeFromDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDeFromDateCustom mUIDeFromDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeFromDateCustom : DXTestControl
    {
        
        public UIDeFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Velg periode");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Velg periode");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOverførtilleggWindow : DXWindow
    {
        
        public UIOverførtilleggWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Overfør tillegg";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Overfør tillegg");
            #endregion
        }
        
        #region Properties
        public DXButton UIOverførButton
        {
            get
            {
                if ((this.mUIOverførButton == null))
                {
                    this.mUIOverførButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnExport";
                    this.mUIOverførButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOverførButton.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIOverførButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public UIGcExportsTable UIGcExportsTable
        {
            get
            {
                if ((this.mUIGcExportsTable == null))
                {
                    this.mUIGcExportsTable = new UIGcExportsTable(this);
                }
                return this.mUIGcExportsTable;
            }
        }
        
        public DXDateTimePicker UIDeExportFromDateTimeEdit
        {
            get
            {
                if ((this.mUIDeExportFromDateTimeEdit == null))
                {
                    this.mUIDeExportFromDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDeExportFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "deExportFrom";
                    this.mUIDeExportFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIDeExportFromDateTimeEdit.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIDeExportFromDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOverførButton;
        
        private DXButton mUIAvbrytButton;
        
        private UIGcExportsTable mUIGcExportsTable;
        
        private DXDateTimePicker mUIDeExportFromDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcExportsTable : DXGrid
    {
        
        public UIGcExportsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExports";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Overfør tillegg");
            #endregion
        }
        
        #region Properties
        public DXCell UIFjongFrøydisCell
        {
            get
            {
                if ((this.mUIFjongFrøydisCell == null))
                {
                    this.mUIFjongFrøydisCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIFjongFrøydisCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExportsGridControlCell[View]gvExports[Row]0[Column]colEmployee";
                    this.mUIFjongFrøydisCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIFjongFrøydisCell.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIFjongFrøydisCell;
            }
        }
        
        public DXCell UIVrienVigdisCell
        {
            get
            {
                if ((this.mUIVrienVigdisCell == null))
                {
                    this.mUIVrienVigdisCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVrienVigdisCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExportsGridControlCell[View]gvExports[Row]8[Column]colEmployee";
                    this.mUIVrienVigdisCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVrienVigdisCell.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIVrienVigdisCell;
            }
        }
        
        public DXColumnHeader UIDXCheckboxSelectorCoColumnHeader
        {
            get
            {
                if ((this.mUIDXCheckboxSelectorCoColumnHeader == null))
                {
                    this.mUIDXCheckboxSelectorCoColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUIDXCheckboxSelectorCoColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExportsGridControlColumnHeader[View]gvExports[Column]DX$CheckboxSelectorColumn";
                    this.mUIDXCheckboxSelectorCoColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUIDXCheckboxSelectorCoColumnHeader.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIDXCheckboxSelectorCoColumnHeader;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIFjongFrøydisCell;
        
        private DXCell mUIVrienVigdisCell;
        
        private DXColumnHeader mUIDXCheckboxSelectorCoColumnHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT4006InformasjonWindow : DXWindow
    {
        
        public UIGT4006InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4006 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4006 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4006 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        
        public DXButton UIJAButton1
        {
            get
            {
                if ((this.mUIJAButton1 == null))
                {
                    this.mUIJAButton1 = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton1.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton1.WindowTitles.Add("GT-4006 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton1;
            }
        }
        
        public DXButton UINeiButton
        {
            get
            {
                if ((this.mUINeiButton == null))
                {
                    this.mUINeiButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINeiButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btNo";
                    this.mUINeiButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINeiButton.WindowTitles.Add("GT-4006 - Informasjon");
                    #endregion
                }
                return this.mUINeiButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        
        private DXButton mUIJAButton1;
        
        private DXButton mUINeiButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISkrivenkommentartilaWindow : DXWindow
    {
        
        public UISkrivenkommentartilaWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Skriv en kommentar til avvisningen(e)...";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Skriv en kommentar til avvisningen(e)...");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIMeCommentEdit
        {
            get
            {
                if ((this.mUIMeCommentEdit == null))
                {
                    this.mUIMeCommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIMeCommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "meComment";
                    this.mUIMeCommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSMemoEdit";
                    this.mUIMeCommentEdit.WindowTitles.Add("Skriv en kommentar til avvisningen(e)...");
                    #endregion
                }
                return this.mUIMeCommentEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Skriv en kommentar til avvisningen(e)...");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIMeCommentEdit;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISkrivenkommentartilaWindow1 : DXWindow
    {
        
        public UISkrivenkommentartilaWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Skriv en kommentar til avvisningen...";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Skriv en kommentar til avvisningen...");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Skriv en kommentar til avvisningen...");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow41 : DXWindow
    {
        
        public UIItemWindow41()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansattinnstillinger for ansattlinje 2";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansattinnstillinger for ansattlinje");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient4 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient4(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient4 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSPanelControlClient4 : DXTestControl
    {
        
        public UIGSPanelControlClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ansattinnstillinger for ansattlinje");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Ansattinnstillinger for ansattlinje");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ansattinnstillinger for ansattlinje");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow5 : DXWindow
    {
        
        public UIItemWindow5()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Linjeinnstillinger", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient5 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient5(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient5 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSPanelControlClient5 : DXTestControl
    {
        
        public UIGSPanelControlClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISøkingidatabaseloggWindow : DXWindow
    {
        
        public UISøkingidatabaseloggWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Søking i database-logg";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Søking i database-logg");
            #endregion
        }
        
        #region Properties
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btClose";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Søking i database-logg");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow6 : DXWindow
    {
        
        public UIItemWindow6()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Exportlogg";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Exportlogg");
            #endregion
        }
        
        #region Properties
        public UIGSLayoutControlCustom UIGSLayoutControlCustom
        {
            get
            {
                if ((this.mUIGSLayoutControlCustom == null))
                {
                    this.mUIGSLayoutControlCustom = new UIGSLayoutControlCustom(this);
                }
                return this.mUIGSLayoutControlCustom;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Exportlogg");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIGSLayoutControlCustom mUIGSLayoutControlCustom;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSLayoutControlCustom : DXTestControl
    {
        
        public UIGSLayoutControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Exportlogg");
            #endregion
        }
        
        #region Properties
        public UI_LayoutGroup_RootLayoutGroup UI_LayoutGroup_RootLayoutGroup
        {
            get
            {
                if ((this.mUI_LayoutGroup_RootLayoutGroup == null))
                {
                    this.mUI_LayoutGroup_RootLayoutGroup = new UI_LayoutGroup_RootLayoutGroup(this);
                }
                return this.mUI_LayoutGroup_RootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UI_LayoutGroup_RootLayoutGroup mUI_LayoutGroup_RootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_LayoutGroup_RootLayoutGroup : DXBaseLayoutItem
    {
        
        public UI_LayoutGroup_RootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_LayoutGroup_Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Exportlogg");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem4 UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem4(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem4 mUILayoutControlItem2LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem2LayoutControlItem4 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Exportlogg");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient6 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient6(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient6 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSPanelControlClient6 : DXTestControl
    {
        
        public UIGSPanelControlClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Exportlogg");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_CloseButton";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Exportlogg");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow7 : DXWindow
    {
        
        public UIItemWindow7()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Lønnsberegning ved iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public UIGSPanelControlClient7 UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient7(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGSPanelControlClient7 mUIGSPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGSPanelControlClient7 : DXTestControl
    {
        
        public UIGSPanelControlClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcButtonPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDeleteEffectuation";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISletteiverksettingWindow : DXWindow
    {
        
        public UISletteiverksettingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Slette iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public UIPnlToppInfoClient UIPnlToppInfoClient
        {
            get
            {
                if ((this.mUIPnlToppInfoClient == null))
                {
                    this.mUIPnlToppInfoClient = new UIPnlToppInfoClient(this);
                }
                return this.mUIPnlToppInfoClient;
            }
        }
        
        public UIPnlBottomClient UIPnlBottomClient
        {
            get
            {
                if ((this.mUIPnlBottomClient == null))
                {
                    this.mUIPnlBottomClient = new UIPnlBottomClient(this);
                }
                return this.mUIPnlBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlToppInfoClient mUIPnlToppInfoClient;
        
        private UIPnlBottomClient mUIPnlBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlToppInfoClient : DXTestControl
    {
        
        public UIPnlToppInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlToppInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgalleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlBottomClient : DXTestControl
    {
        
        public UIPnlBottomClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UISlettiverksettingpå5Button
        {
            get
            {
                if ((this.mUISlettiverksettingpå5Button == null))
                {
                    this.mUISlettiverksettingpå5Button = new DXButton(this);
                    #region Search Criteria
                    this.mUISlettiverksettingpå5Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettiverksettingpå5Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUISlettiverksettingpå5Button.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUISlettiverksettingpå5Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISlettiverksettingpå5Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEXC_4004InformasjonWindow : DXWindow
    {
        
        public UIEXC_4004InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EXC_4004 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("EXC_4004 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("EXC_4004 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRPL24003InformasjonWindow : DXWindow
    {
        
        public UIRPL24003InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL2-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("RPL2-4003 - Informasjon");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISøkilisteWindow : DXWindow
    {
        
        public UISøkilisteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Søk i liste";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Søk i liste");
            #endregion
        }
        
        #region Properties
        public UIPnlSearchClient UIPnlSearchClient
        {
            get
            {
                if ((this.mUIPnlSearchClient == null))
                {
                    this.mUIPnlSearchClient = new UIPnlSearchClient(this);
                }
                return this.mUIPnlSearchClient;
            }
        }
        
        public UIPnlButtonsClient7 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient7(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlSearchClient mUIPnlSearchClient;
        
        private UIPnlButtonsClient7 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlSearchClient : DXTestControl
    {
        
        public UIPnlSearchClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlSearch";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Søk i liste");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtSearchEdit
        {
            get
            {
                if ((this.mUITxtSearchEdit == null))
                {
                    this.mUITxtSearchEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtSearchEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtSearch";
                    this.mUITxtSearchEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtSearchEdit.WindowTitles.Add("Søk i liste");
                    #endregion
                }
                return this.mUITxtSearchEdit;
            }
        }
        
        public DXRadioGroup UIRgMultiTermLogicRadioGroup
        {
            get
            {
                if ((this.mUIRgMultiTermLogicRadioGroup == null))
                {
                    this.mUIRgMultiTermLogicRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgMultiTermLogicRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgMultiTermLogic";
                    this.mUIRgMultiTermLogicRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgMultiTermLogicRadioGroup.WindowTitles.Add("Søk i liste");
                    #endregion
                }
                return this.mUIRgMultiTermLogicRadioGroup;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtSearchEdit;
        
        private DXRadioGroup mUIRgMultiTermLogicRadioGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlButtonsClient7 : DXTestControl
    {
        
        public UIPnlButtonsClient7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Søk i liste");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgButton
        {
            get
            {
                if ((this.mUIVelgButton == null))
                {
                    this.mUIVelgButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelect";
                    this.mUIVelgButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgButton.WindowTitles.Add("Søk i liste");
                    #endregion
                }
                return this.mUIVelgButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Søk i liste");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgButton;
        
        private DXButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMerarbeidovertidWindow : DXWindow
    {
        
        public UIMerarbeidovertidWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Merarbeid / overtid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client4 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client4(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public UIPanClientClient UIPanClientClient
        {
            get
            {
                if ((this.mUIPanClientClient == null))
                {
                    this.mUIPanClientClient = new UIPanClientClient(this);
                }
                return this.mUIPanClientClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client4 mUIGsPanelControl1Client;
        
        private UIPanClientClient mUIPanClientClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl1Client4 : DXTestControl
    {
        
        public UIGsPanelControl1Client4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public DXButton UIOkNyButton
        {
            get
            {
                if ((this.mUIOkNyButton == null))
                {
                    this.mUIOkNyButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOkNyButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOkNew";
                    this.mUIOkNyButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOkNyButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIOkNyButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvbrytButton;
        
        private DXButton mUIOKButton;
        
        private DXButton mUIOkNyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanClientClient : DXTestControl
    {
        
        public UIPanClientClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList(this);
                }
                return this.mUITcClientTabList;
            }
        }
        
        public UINbMenuNavBar UINbMenuNavBar
        {
            get
            {
                if ((this.mUINbMenuNavBar == null))
                {
                    this.mUINbMenuNavBar = new UINbMenuNavBar(this);
                }
                return this.mUINbMenuNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList mUITcClientTabList;
        
        private UINbMenuNavBar mUINbMenuNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcClientTabList : DXTestControl
    {
        
        public UITcClientTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpMainClient UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpMainClient : DXTestControl
    {
        
        public UITpMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsClient UIGcShiftDetailsClient
        {
            get
            {
                if ((this.mUIGcShiftDetailsClient == null))
                {
                    this.mUIGcShiftDetailsClient = new UIGcShiftDetailsClient(this);
                }
                return this.mUIGcShiftDetailsClient;
            }
        }
        
        public UITcExtraDetailTabList UITcExtraDetailTabList
        {
            get
            {
                if ((this.mUITcExtraDetailTabList == null))
                {
                    this.mUITcExtraDetailTabList = new UITcExtraDetailTabList(this);
                }
                return this.mUITcExtraDetailTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsClient mUIGcShiftDetailsClient;
        
        private UITcExtraDetailTabList mUITcExtraDetailTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcShiftDetailsClient : DXTestControl
    {
        
        public UIGcShiftDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcRegistrationTypeTabList UITcRegistrationTypeTabList
        {
            get
            {
                if ((this.mUITcRegistrationTypeTabList == null))
                {
                    this.mUITcRegistrationTypeTabList = new UITcRegistrationTypeTabList(this);
                }
                return this.mUITcRegistrationTypeTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcRegistrationTypeTabList mUITcRegistrationTypeTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcRegistrationTypeTabList : DXTestControl
    {
        
        public UITcRegistrationTypeTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcRegistrationType";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpNewShiftClient UITpNewShiftClient
        {
            get
            {
                if ((this.mUITpNewShiftClient == null))
                {
                    this.mUITpNewShiftClient = new UITpNewShiftClient(this);
                }
                return this.mUITpNewShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpNewShiftClient mUITpNewShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpNewShiftClient : DXTestControl
    {
        
        public UITpNewShiftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbShiftCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbShiftCodeLookUpEdit == null))
                {
                    this.mUICbShiftCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCode";
                    this.mUICbShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUICbShiftCodeLookUpEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUICbShiftCodeLookUpEdit;
            }
        }
        
        public DXTextEdit UIETime3Edit
        {
            get
            {
                if ((this.mUIETime3Edit == null))
                {
                    this.mUIETime3Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime3Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[3]";
                    this.mUIETime3Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime3Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime3Edit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime3Edit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        
        public DXLookUpEdit UICbCrewColumnLookUpEdit
        {
            get
            {
                if ((this.mUICbCrewColumnLookUpEdit == null))
                {
                    this.mUICbCrewColumnLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbCrewColumn";
                    this.mUICbCrewColumnLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUICbCrewColumnLookUpEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUICbCrewColumnLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbShiftCodeLookUpEdit;
        
        private DXTextEdit mUIETime3Edit;
        
        private DXTextEdit mUIETime1Edit;
        
        private DXLookUpEdit mUICbCrewColumnLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcExtraDetailTabList : DXTestControl
    {
        
        public UITcExtraDetailTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcExtraDetail";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIXtraTabControlHeaderTabPage
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage == null))
                {
                    this.mUIXtraTabControlHeaderTabPage = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.Name] = "tcExtraDetailPageHeader1";
                    this.mUIXtraTabControlHeaderTabPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage;
            }
        }
        
        public DXTestControl UIXtraTabControlHeaderTabPage1
        {
            get
            {
                if ((this.mUIXtraTabControlHeaderTabPage1 == null))
                {
                    this.mUIXtraTabControlHeaderTabPage1 = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.Name] = "tcExtraDetailPageHeader2";
                    this.mUIXtraTabControlHeaderTabPage1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControlHeader";
                    this.mUIXtraTabControlHeaderTabPage1.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIXtraTabControlHeaderTabPage1;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIXtraTabControlHeaderTabPage;
        
        private DXTestControl mUIXtraTabControlHeaderTabPage1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbMenuNavBar : DXNavBar
    {
        
        public UINbMenuNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl mUINavBarGroupControlCoScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINavBarGroupControlCoScrollableControl : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UICbOvertimeCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbOvertimeCodeLookUpEdit == null))
                {
                    this.mUICbOvertimeCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbOvertimeCode";
                    this.mUICbOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSearchLookUpEdit";
                    #endregion
                }
                return this.mUICbOvertimeCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUICbOvertimeCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISkrivenkommentartiloWindow : DXWindow
    {
        
        public UISkrivenkommentartiloWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Skriv en kommentar til opphevingen...";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Skriv en kommentar til opphevingen...");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIMeCommentEdit
        {
            get
            {
                if ((this.mUIMeCommentEdit == null))
                {
                    this.mUIMeCommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIMeCommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "meComment";
                    this.mUIMeCommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSMemoEdit";
                    this.mUIMeCommentEdit.WindowTitles.Add("Skriv en kommentar til opphevingen...");
                    #endregion
                }
                return this.mUIMeCommentEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Skriv en kommentar til opphevingen...");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIMeCommentEdit;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUtjevningsvaktWindow : DXWindow
    {
        
        public UIUtjevningsvaktWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utjevningsvakt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utjevningsvakt");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UILnkDetailPopupEdit
        {
            get
            {
                if ((this.mUILnkDetailPopupEdit == null))
                {
                    this.mUILnkDetailPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lnkDetail";
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUILnkDetailPopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "4";
                    this.mUILnkDetailPopupEdit.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUILnkDetailPopupEdit;
            }
        }
        
        public UIPnlButtonsClient8 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient8(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUILnkDetailPopupEdit;
        
        private UIPnlButtonsClient8 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlButtonsClient8 : DXTestControl
    {
        
        public UIPnlButtonsClient8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utjevningsvakt");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        
        private DXButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT4003InformasjonWindow : DXWindow
    {
        
        public UIGT4003InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("GT-4003 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRPL4047InformasjonWindow : DXWindow
    {
        
        public UIRPL4047InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4047 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4047 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("RPL-4047 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRPL4046InformasjonWindow : DXWindow
    {
        
        public UIRPL4046InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4046 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4046 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("RPL-4046 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinClient UIDesktop1Client
        {
            get
            {
                if ((this.mUIDesktop1Client == null))
                {
                    this.mUIDesktop1Client = new WinClient(this);
                }
                return this.mUIDesktop1Client;
            }
        }
        
        public DXMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new DXMenu(this);
                    #region Search Criteria
                    this.mUIPopupMenuBarControlMenu.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
                    this.mUIPopupMenuBarControlMenu.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
                    #endregion
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UIOppgavetildelingWindow1 UIOppgavetildelingWindow
        {
            get
            {
                if ((this.mUIOppgavetildelingWindow == null))
                {
                    this.mUIOppgavetildelingWindow = new UIOppgavetildelingWindow1(this);
                }
                return this.mUIOppgavetildelingWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDesktop1Client;
        
        private DXMenu mUIPopupMenuBarControlMenu;
        
        private UIOppgavetildelingWindow1 mUIOppgavetildelingWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow1 : DXWindow
    {
        
        public UIOppgavetildelingWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavetildeling";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "OppgavetildelingSimpleButton[0]";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavetildelingWindow11 : DXWindow
    {
        
        public UIOppgavetildelingWindow11()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "*Oppgavetildeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom1 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom1(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIRcMenuRibbon5 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon5(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom1 mUIVhContentCustom;
        
        private UIRcMenuRibbon5 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom1 : DXTestControl
    {
        
        public UIVhContentCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient10 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient10(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient10 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient10 : DXTestControl
    {
        
        public UIPcViewClient10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRoleAssignmentOverviCustom1 UIRoleAssignmentOverviCustom
        {
            get
            {
                if ((this.mUIRoleAssignmentOverviCustom == null))
                {
                    this.mUIRoleAssignmentOverviCustom = new UIRoleAssignmentOverviCustom1(this);
                }
                return this.mUIRoleAssignmentOverviCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleAssignmentOverviCustom1 mUIRoleAssignmentOverviCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleAssignmentOverviCustom1 : DXTestControl
    {
        
        public UIRoleAssignmentOverviCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleAssignmentOverviewView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleAssignmentOverviewView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIVhContentCustom2 UIVhContentCustom
        {
            get
            {
                if ((this.mUIVhContentCustom == null))
                {
                    this.mUIVhContentCustom = new UIVhContentCustom2(this);
                }
                return this.mUIVhContentCustom;
            }
        }
        
        public UIPanelContainer2DockPanel1 UIPanelContainer2DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer2DockPanel == null))
                {
                    this.mUIPanelContainer2DockPanel = new UIPanelContainer2DockPanel1(this);
                }
                return this.mUIPanelContainer2DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIVhContentCustom2 mUIVhContentCustom;
        
        private UIPanelContainer2DockPanel1 mUIPanelContainer2DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVhContentCustom2 : DXTestControl
    {
        
        public UIVhContentCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonViewHost";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient11 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient11(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient11 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient11 : DXTestControl
    {
        
        public UIPcViewClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIEmployeeFocusedManagCustom UIEmployeeFocusedManagCustom
        {
            get
            {
                if ((this.mUIEmployeeFocusedManagCustom == null))
                {
                    this.mUIEmployeeFocusedManagCustom = new UIEmployeeFocusedManagCustom(this);
                }
                return this.mUIEmployeeFocusedManagCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeFocusedManagCustom mUIEmployeeFocusedManagCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFocusedManagCustom : DXTestControl
    {
        
        public UIEmployeeFocusedManagCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFocusedManageView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFocusedManageView";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIItemGridControl1Custom UIItemGridControl1Custom
        {
            get
            {
                if ((this.mUIItemGridControl1Custom == null))
                {
                    this.mUIItemGridControl1Custom = new UIItemGridControl1Custom(this);
                }
                return this.mUIItemGridControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGridControl1Custom mUIItemGridControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemGridControl1Custom : DXTestControl
    {
        
        public UIItemGridControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "itemGridControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ItemGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIDdGridControlCustom UIDdGridControlCustom
        {
            get
            {
                if ((this.mUIDdGridControlCustom == null))
                {
                    this.mUIDdGridControlCustom = new UIDdGridControlCustom(this);
                }
                return this.mUIDdGridControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDdGridControlCustom mUIDdGridControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDdGridControlCustom : DXTestControl
    {
        
        public UIDdGridControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DragDropGridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIGcDragDropGridTable UIGcDragDropGridTable
        {
            get
            {
                if ((this.mUIGcDragDropGridTable == null))
                {
                    this.mUIGcDragDropGridTable = new UIGcDragDropGridTable(this);
                }
                return this.mUIGcDragDropGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDragDropGridTable mUIGcDragDropGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDragDropGridTable : DXGrid
    {
        
        public UIGcDragDropGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXCell UIGcDragDropGridGridCoCell
        {
            get
            {
                if ((this.mUIGcDragDropGridGridCoCell == null))
                {
                    this.mUIGcDragDropGridGridCoCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDragDropGridGridControlCell[View]bgvMainView[Row]0[Column]ColumnHandle-1";
                    this.mUIGcDragDropGridGridCoCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGcDragDropGridGridCoCell.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIGcDragDropGridGridCoCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIGcDragDropGridGridCoCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer2DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer2DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIPanelContainer3DockPanel1 UIPanelContainer3DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer3DockPanel == null))
                {
                    this.mUIPanelContainer3DockPanel = new UIPanelContainer3DockPanel1(this);
                }
                return this.mUIPanelContainer3DockPanel;
            }
        }
        
        public UIPanelContainer1DockPanel1 UIPanelContainer1DockPanel
        {
            get
            {
                if ((this.mUIPanelContainer1DockPanel == null))
                {
                    this.mUIPanelContainer1DockPanel = new UIPanelContainer1DockPanel1(this);
                }
                return this.mUIPanelContainer1DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContainer3DockPanel1 mUIPanelContainer3DockPanel;
        
        private UIPanelContainer1DockPanel1 mUIPanelContainer1DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer3DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer3DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UISpesifikasjonButton
        {
            get
            {
                if ((this.mUISpesifikasjonButton == null))
                {
                    this.mUISpesifikasjonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Spesifikasjon";
                    this.mUISpesifikasjonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUISpesifikasjonButton.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISpesifikasjonButton;
            }
        }
        
        public DXButton UISøkButton
        {
            get
            {
                if ((this.mUISøkButton == null))
                {
                    this.mUISøkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Søk";
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUISøkButton.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISøkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISpesifikasjonButton;
        
        private DXButton mUISøkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContainer1DockPanel1 : DXDockPanel
    {
        
        public UIPanelContainer1DockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXButton UIAnsatteButton
        {
            get
            {
                if ((this.mUIAnsatteButton == null))
                {
                    this.mUIAnsatteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte";
                    this.mUIAnsatteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanelTabButton";
                    this.mUIAnsatteButton.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsatteButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAnsatteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon5 : DXRibbon
    {
        
        public UIRcMenuRibbon5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgHomeRibbonPage1 UIRpgHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpgHomeRibbonPage == null))
                {
                    this.mUIRpgHomeRibbonPage = new UIRpgHomeRibbonPage1(this);
                }
                return this.mUIRpgHomeRibbonPage;
            }
        }
        
        public UIRpViewRibbonPage UIRpViewRibbonPage
        {
            get
            {
                if ((this.mUIRpViewRibbonPage == null))
                {
                    this.mUIRpViewRibbonPage = new UIRpViewRibbonPage(this);
                }
                return this.mUIRpViewRibbonPage;
            }
        }
        
        public DXRibbonPage UIRpFilteringRibbonPage
        {
            get
            {
                if ((this.mUIRpFilteringRibbonPage == null))
                {
                    this.mUIRpFilteringRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpFilteringRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFiltering";
                    this.mUIRpFilteringRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpFilteringRibbonPage.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIRpFilteringRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgHomeRibbonPage1 mUIRpgHomeRibbonPage;
        
        private UIRpViewRibbonPage mUIRpViewRibbonPage;
        
        private DXRibbonPage mUIRpFilteringRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgHomeRibbonPage1 : DXRibbonPage
    {
        
        public UIRpgHomeRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgWindowRibbonPageGroup1 UIRpgWindowRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgWindowRibbonPageGroup == null))
                {
                    this.mUIRpgWindowRibbonPageGroup = new UIRpgWindowRibbonPageGroup1(this);
                }
                return this.mUIRpgWindowRibbonPageGroup;
            }
        }
        
        public UIRpgActionsRibbonPageGroup2 UIRpgActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgActionsRibbonPageGroup == null))
                {
                    this.mUIRpgActionsRibbonPageGroup = new UIRpgActionsRibbonPageGroup2(this);
                }
                return this.mUIRpgActionsRibbonPageGroup;
            }
        }
        
        public UIRpgViewRibbonPageGroup1 UIRpgViewRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgViewRibbonPageGroup == null))
                {
                    this.mUIRpgViewRibbonPageGroup = new UIRpgViewRibbonPageGroup1(this);
                }
                return this.mUIRpgViewRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgWindowRibbonPageGroup1 mUIRpgWindowRibbonPageGroup;
        
        private UIRpgActionsRibbonPageGroup2 mUIRpgActionsRibbonPageGroup;
        
        private UIRpgViewRibbonPageGroup1 mUIRpgViewRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgWindowRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgWindowRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgWindow";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILukkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILukkRibbonBaseButtonItem == null))
                {
                    this.mUILukkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILukkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiClose";
                    this.mUILukkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILukkRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUILukkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILukkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgActionsRibbonPageGroup2 : DXRibbonPageGroup
    {
        
        public UIRpgActionsRibbonPageGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UISlettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISlettRibbonBaseButtonItem == null))
                {
                    this.mUISlettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiDeleteAssignment";
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISlettRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIAngreRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAngreRibbonBaseButtonItem == null))
                {
                    this.mUIAngreRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAngreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiUndoChange";
                    this.mUIAngreRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAngreRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIAngreRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIGjøromRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIGjøromRibbonBaseButtonItem == null))
                {
                    this.mUIGjøromRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIGjøromRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiRedoChange";
                    this.mUIGjøromRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIGjøromRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIGjøromRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIDetaljerttildelingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIDetaljerttildelingRibbonBaseButtonItem == null))
                {
                    this.mUIDetaljerttildelingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIDetaljerttildelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciDetailedAssignment";
                    this.mUIDetaljerttildelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIDetaljerttildelingRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDetaljerttildelingRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIErstattRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIErstattRibbonBaseButtonItem == null))
                {
                    this.mUIErstattRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIErstattRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiReplaceAssignments";
                    this.mUIErstattRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIErstattRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIErstattRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUISlettRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIAngreRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIGjøromRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIDetaljerttildelingRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIErstattRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgViewRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgViewRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIVistidsperioderRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIVistidsperioderRibbonBaseButtonItem == null))
                {
                    this.mUIVistidsperioderRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIVistidsperioderRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowTimePeriods";
                    this.mUIVistidsperioderRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIVistidsperioderRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIVistidsperioderRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIVisvakterRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIVisvakterRibbonBaseButtonItem == null))
                {
                    this.mUIVisvakterRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIVisvakterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowShifts";
                    this.mUIVisvakterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIVisvakterRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIVisvakterRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIVistidsperioderRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIVisvakterRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpViewRibbonPage : DXRibbonPage
    {
        
        public UIRpViewRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public UIRpgViewActionsRibbonPageGroup UIRpgViewActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgViewActionsRibbonPageGroup == null))
                {
                    this.mUIRpgViewActionsRibbonPageGroup = new UIRpgViewActionsRibbonPageGroup(this);
                }
                return this.mUIRpgViewActionsRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgViewActionsRibbonPageGroup mUIRpgViewActionsRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgViewActionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgViewActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgViewActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("*Oppgavetildeling");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsatteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsatteRibbonBaseButtonItem == null))
                {
                    this.mUIAnsatteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiShowEmployeeList";
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsatteRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIAnsatteRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIOppgaverRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppgaverRibbonBaseButtonItem == null))
                {
                    this.mUIOppgaverRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppgaverRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiShowRoleCodeList";
                    this.mUIOppgaverRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppgaverRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgaverRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIOppgavemønsterRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppgavemønsterRibbonBaseButtonItem == null))
                {
                    this.mUIOppgavemønsterRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppgavemønsterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiShowRoleCodePatternList";
                    this.mUIOppgavemønsterRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppgavemønsterRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIOppgavemønsterRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UISummeringRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISummeringRibbonBaseButtonItem == null))
                {
                    this.mUISummeringRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISummeringRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiShowSumDemand";
                    this.mUISummeringRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISummeringRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISummeringRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UISøkogerstattRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISøkogerstattRibbonBaseButtonItem == null))
                {
                    this.mUISøkogerstattRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISøkogerstattRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiShowSearchAndReplace";
                    this.mUISøkogerstattRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISøkogerstattRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISøkogerstattRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UISpesifikasjonRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISpesifikasjonRibbonBaseButtonItem == null))
                {
                    this.mUISpesifikasjonRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISpesifikasjonRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiShowSpecifications";
                    this.mUISpesifikasjonRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISpesifikasjonRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUISpesifikasjonRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UITildelingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUITildelingRibbonBaseButtonItem == null))
                {
                    this.mUITildelingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUITildelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiAssignmentProperties";
                    this.mUITildelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUITildelingRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUITildelingRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIDisponibleRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIDisponibleRibbonBaseButtonItem == null))
                {
                    this.mUIDisponibleRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIDisponibleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiDisponible";
                    this.mUIDisponibleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIDisponibleRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUIDisponibleRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UINullstillRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINullstillRibbonBaseButtonItem == null))
                {
                    this.mUINullstillRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINullstillRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiResetLayout";
                    this.mUINullstillRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINullstillRibbonBaseButtonItem.WindowTitles.Add("*Oppgavetildeling");
                    #endregion
                }
                return this.mUINullstillRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsatteRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIOppgaverRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIOppgavemønsterRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUISummeringRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUISøkogerstattRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUISpesifikasjonRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUITildelingRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIDisponibleRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUINullstillRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindowNine : WinWindow
    {
        
        public UIItemWindowNine()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIEndringenekanikkelagWindow UIEndringenekanikkelagWindow
        {
            get
            {
                if ((this.mUIEndringenekanikkelagWindow == null))
                {
                    this.mUIEndringenekanikkelagWindow = new UIEndringenekanikkelagWindow(this);
                }
                return this.mUIEndringenekanikkelagWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIEndringenekanikkelagWindow mUIEndringenekanikkelagWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEndringenekanikkelagWindow : DXWindow
    {
        
        public UIEndringenekanikkelagWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Endringene kan ikke lagres";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraMessageBoxForm";
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Endringene kan ikke lagresSimpleButton[0]";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITildeloppgavemønsterWindow : DXWindow
    {
        
        public UITildeloppgavemønsterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Tildel oppgavemønster OVER 4510";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client2 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client2(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client2 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client2 : DXTestControl
    {
        
        public UIPanelControl1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom3 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom3(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom3 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom3 : DXTestControl
    {
        
        public UIViewHost1Custom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient12 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient12(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient12 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient12 : DXTestControl
    {
        
        public UIPcViewClient12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIRoleCodePatternAssigCustom UIRoleCodePatternAssigCustom
        {
            get
            {
                if ((this.mUIRoleCodePatternAssigCustom == null))
                {
                    this.mUIRoleCodePatternAssigCustom = new UIRoleCodePatternAssigCustom(this);
                }
                return this.mUIRoleCodePatternAssigCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRoleCodePatternAssigCustom mUIRoleCodePatternAssigCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRoleCodePatternAssigCustom : DXTestControl
    {
        
        public UIRoleCodePatternAssigCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RoleCodePatternAssignmentView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RoleCodePatternAssignmentView";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIPnlTopClient1 UIPnlTopClient
        {
            get
            {
                if ((this.mUIPnlTopClient == null))
                {
                    this.mUIPnlTopClient = new UIPnlTopClient1(this);
                }
                return this.mUIPnlTopClient;
            }
        }
        
        public UIPnlBottomClient1 UIPnlBottomClient
        {
            get
            {
                if ((this.mUIPnlBottomClient == null))
                {
                    this.mUIPnlBottomClient = new UIPnlBottomClient1(this);
                }
                return this.mUIPnlBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlTopClient1 mUIPnlTopClient;
        
        private UIPnlBottomClient1 mUIPnlBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlTopClient1 : DXTestControl
    {
        
        public UIPnlTopClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTop";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIPnlTimePeriodClient UIPnlTimePeriodClient
        {
            get
            {
                if ((this.mUIPnlTimePeriodClient == null))
                {
                    this.mUIPnlTimePeriodClient = new UIPnlTimePeriodClient(this);
                }
                return this.mUIPnlTimePeriodClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlTimePeriodClient mUIPnlTimePeriodClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlTimePeriodClient : DXTestControl
    {
        
        public UIPnlTimePeriodClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlTimePeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom4 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom4(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom4 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom4 : DXTestControl
    {
        
        public UIViewHost1Custom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient13 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient13(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient13 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient13 : DXTestControl
    {
        
        public UIPcViewClient13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIDatePeriodSelectorViCustom UIDatePeriodSelectorViCustom
        {
            get
            {
                if ((this.mUIDatePeriodSelectorViCustom == null))
                {
                    this.mUIDatePeriodSelectorViCustom = new UIDatePeriodSelectorViCustom(this);
                }
                return this.mUIDatePeriodSelectorViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDatePeriodSelectorViCustom mUIDatePeriodSelectorViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDatePeriodSelectorViCustom : DXTestControl
    {
        
        public UIDatePeriodSelectorViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DatePeriodSelectorView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DatePeriodSelectorView";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client3 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client3(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client3 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client3 : DXTestControl
    {
        
        public UIPanelControl1Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIDeFromDateDateTimeEdit
        {
            get
            {
                if ((this.mUIDeFromDateDateTimeEdit == null))
                {
                    this.mUIDeFromDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDeFromDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "deFromDate";
                    this.mUIDeFromDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIDeFromDateDateTimeEdit.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
                    #endregion
                }
                return this.mUIDeFromDateDateTimeEdit;
            }
        }
        
        public DXDateTimePicker UIDeToDateDateTimeEdit
        {
            get
            {
                if ((this.mUIDeToDateDateTimeEdit == null))
                {
                    this.mUIDeToDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDeToDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "deToDate";
                    this.mUIDeToDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIDeToDateDateTimeEdit.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
                    #endregion
                }
                return this.mUIDeToDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIDeFromDateDateTimeEdit;
        
        private DXDateTimePicker mUIDeToDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlBottomClient1 : DXTestControl
    {
        
        public UIPnlBottomClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Tildel oppgavemønster OVER 4510");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvbrytButton;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDefinisjonavfilterfoWindow : DXWindow
    {
        
        public UIDefinisjonavfilterfoWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Definisjon av filter for oppgave";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public UIPcBottomClient UIPcBottomClient
        {
            get
            {
                if ((this.mUIPcBottomClient == null))
                {
                    this.mUIPcBottomClient = new UIPcBottomClient(this);
                }
                return this.mUIPcBottomClient;
            }
        }
        
        public UIGcSavedViewsClient UIGcSavedViewsClient
        {
            get
            {
                if ((this.mUIGcSavedViewsClient == null))
                {
                    this.mUIGcSavedViewsClient = new UIGcSavedViewsClient(this);
                }
                return this.mUIGcSavedViewsClient;
            }
        }
        
        public UIPcRowSelectionClient UIPcRowSelectionClient
        {
            get
            {
                if ((this.mUIPcRowSelectionClient == null))
                {
                    this.mUIPcRowSelectionClient = new UIPcRowSelectionClient(this);
                }
                return this.mUIPcRowSelectionClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcBottomClient mUIPcBottomClient;
        
        private UIGcSavedViewsClient mUIGcSavedViewsClient;
        
        private UIPcRowSelectionClient mUIPcRowSelectionClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcBottomClient : DXTestControl
    {
        
        public UIPcBottomClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public DXButton UIBrukButton
        {
            get
            {
                if ((this.mUIBrukButton == null))
                {
                    this.mUIBrukButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnApplyCurrentView";
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBrukButton.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIBrukButton;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBrukButton;
        
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcSavedViewsClient : DXTestControl
    {
        
        public UIGcSavedViewsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcSavedViews";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public DXButton UILagresomButton
        {
            get
            {
                if ((this.mUILagresomButton == null))
                {
                    this.mUILagresomButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILagresomButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbSaveViewAs";
                    this.mUILagresomButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUILagresomButton.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUILagresomButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILagresomButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcRowSelectionClient : DXTestControl
    {
        
        public UIPcRowSelectionClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcRowSelection";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public UIGcRowSelectorClient UIGcRowSelectorClient
        {
            get
            {
                if ((this.mUIGcRowSelectorClient == null))
                {
                    this.mUIGcRowSelectorClient = new UIGcRowSelectorClient(this);
                }
                return this.mUIGcRowSelectorClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRowSelectorClient mUIGcRowSelectorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRowSelectorClient : DXTestControl
    {
        
        public UIGcRowSelectorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRowSelector";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Definisjon av filter for oppgave");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSelectAllRoleCodes";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIVelgalleButton.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        
        public DXButton UIVelgingenButton
        {
            get
            {
                if ((this.mUIVelgingenButton == null))
                {
                    this.mUIVelgingenButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnUnselectAllRoleCodes";
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIVelgingenButton.WindowTitles.Add("Definisjon av filter for oppgave");
                    #endregion
                }
                return this.mUIVelgingenButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgalleButton;
        
        private DXButton mUIVelgingenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAnsattfilterWindow : DXWindow
    {
        
        public UIAnsattfilterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansattfilter";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public DXButton UIBrukButton
        {
            get
            {
                if ((this.mUIBrukButton == null))
                {
                    this.mUIBrukButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIBrukButton.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUIBrukButton;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        
        public UIGleSavedFiltersLookUpEdit UIGleSavedFiltersLookUpEdit
        {
            get
            {
                if ((this.mUIGleSavedFiltersLookUpEdit == null))
                {
                    this.mUIGleSavedFiltersLookUpEdit = new UIGleSavedFiltersLookUpEdit(this);
                }
                return this.mUIGleSavedFiltersLookUpEdit;
            }
        }
        
        public UIPanelControl1Client4 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client4(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBrukButton;
        
        private DXButton mUILukkButton;
        
        private UIGleSavedFiltersLookUpEdit mUIGleSavedFiltersLookUpEdit;
        
        private UIPanelControl1Client4 mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGleSavedFiltersLookUpEdit : DXLookUpEdit
    {
        
        public UIGleSavedFiltersLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gleSavedFilters";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridLookUpEdit";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIPopupGridLookUpEditFWindow1 UIPopupGridLookUpEditFWindow
        {
            get
            {
                if ((this.mUIPopupGridLookUpEditFWindow == null))
                {
                    this.mUIPopupGridLookUpEditFWindow = new UIPopupGridLookUpEditFWindow1(this);
                }
                return this.mUIPopupGridLookUpEditFWindow;
            }
        }
        
        public DXButton UIEditorButton2Button
        {
            get
            {
                if ((this.mUIEditorButton2Button == null))
                {
                    this.mUIEditorButton2Button = new DXButton(this);
                    #region Search Criteria
                    this.mUIEditorButton2Button.SearchProperties[DXTestControl.PropertyNames.Name] = "gleSavedFiltersButton[2]";
                    this.mUIEditorButton2Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EditorButton";
                    this.mUIEditorButton2Button.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUIEditorButton2Button;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupGridLookUpEditFWindow1 mUIPopupGridLookUpEditFWindow;
        
        private DXButton mUIEditorButton2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupGridLookUpEditFWindow1 : DXWindow
    {
        
        public UIPopupGridLookUpEditFWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gleSavedFiltersPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupGridLookUpEditForm";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGridControlTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gleSavedFiltersPopupFormGridControl[0]";
                    this.mUIGridControlTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
                    this.mUIGridControlTable.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client4 : DXTestControl
    {
        
        public UIPanelControl1Client4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIViewHost1Custom5 UIViewHost1Custom
        {
            get
            {
                if ((this.mUIViewHost1Custom == null))
                {
                    this.mUIViewHost1Custom = new UIViewHost1Custom5(this);
                }
                return this.mUIViewHost1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHost1Custom5 mUIViewHost1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHost1Custom5 : DXTestControl
    {
        
        public UIViewHost1Custom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient14 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient14(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient14 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient14 : DXTestControl
    {
        
        public UIPcViewClient14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public UIEmployeeFilterEditViCustom UIEmployeeFilterEditViCustom
        {
            get
            {
                if ((this.mUIEmployeeFilterEditViCustom == null))
                {
                    this.mUIEmployeeFilterEditViCustom = new UIEmployeeFilterEditViCustom(this);
                }
                return this.mUIEmployeeFilterEditViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeFilterEditViCustom mUIEmployeeFilterEditViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeFilterEditViCustom : DXTestControl
    {
        
        public UIEmployeeFilterEditViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeFilterEditView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeFilterEditView";
            this.WindowTitles.Add("Ansattfilter");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGcEmployeesTable
        {
            get
            {
                if ((this.mUIGcEmployeesTable == null))
                {
                    this.mUIGcEmployeesTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcEmployeesTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcEmployees";
                    this.mUIGcEmployeesTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
                    this.mUIGcEmployeesTable.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUIGcEmployeesTable;
            }
        }
        
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAdd";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUILeggtilButton.WindowTitles.Add("Ansattfilter");
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGcEmployeesTable;
        
        private DXButton mUILeggtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu1(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu1 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIOKMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIOKMenuBaseButtonItem == null))
                {
                    this.mUIOKMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIOKMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biOk";
                    this.mUIOKMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIOKMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIOKMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow10 : DXWindow
    {
        
        public UIItemWindow10()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AML Brudd - Egen kommentar";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UIGSLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGSLookUpEditLookUpEdit == null))
                {
                    this.mUIGSLookUpEditLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gsBreakType";
                    this.mUIGSLookUpEditLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUIGSLookUpEditLookUpEdit;
            }
        }
        
        public DXTextEdit UIECommentEdit
        {
            get
            {
                if ((this.mUIECommentEdit == null))
                {
                    this.mUIECommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIECommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eComment";
                    this.mUIECommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSMemoEdit";
                    this.mUIECommentEdit.WindowTitles.Add("AML Brudd - Egen kommentar");
                    #endregion
                }
                return this.mUIECommentEdit;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("AML Brudd - Egen kommentar");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUIGSLookUpEditLookUpEdit;
        
        private DXTextEdit mUIECommentEdit;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRekalkuleringWindow : DXWindow
    {
        
        public UIRekalkuleringWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Rekalkulering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public UIDbFooterCustom2 UIDbFooterCustom
        {
            get
            {
                if ((this.mUIDbFooterCustom == null))
                {
                    this.mUIDbFooterCustom = new UIDbFooterCustom2(this);
                }
                return this.mUIDbFooterCustom;
            }
        }
        
        public UIPcContentClient3 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient3(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIDbFooterCustom2 mUIDbFooterCustom;
        
        private UIPcContentClient3 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDbFooterCustom2 : DXTestControl
    {
        
        public UIDbFooterCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        
        private DXButton mUIAvbrytButton;
        
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient3 : DXTestControl
    {
        
        public UIPcContentClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public DXButton UIRekalkulerButton
        {
            get
            {
                if ((this.mUIRekalkulerButton == null))
                {
                    this.mUIRekalkulerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRekalkulerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRecalculate";
                    this.mUIRekalkulerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIRekalkulerButton.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIRekalkulerButton;
            }
        }
        
        public UIWeFromWeekCustom UIWeFromWeekCustom
        {
            get
            {
                if ((this.mUIWeFromWeekCustom == null))
                {
                    this.mUIWeFromWeekCustom = new UIWeFromWeekCustom(this);
                }
                return this.mUIWeFromWeekCustom;
            }
        }
        
        public UIWeToWeekCustom UIWeToWeekCustom
        {
            get
            {
                if ((this.mUIWeToWeekCustom == null))
                {
                    this.mUIWeToWeekCustom = new UIWeToWeekCustom(this);
                }
                return this.mUIWeToWeekCustom;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIRekalkulerButton;
        
        private UIWeFromWeekCustom mUIWeFromWeekCustom;
        
        private UIWeToWeekCustom mUIWeToWeekCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeFromWeekCustom : DXTestControl
    {
        
        public UIWeFromWeekCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "weFromWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekEdit";
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWeToWeekCustom : DXTestControl
    {
        
        public UIWeToWeekCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "weToWeek";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSWeekEdit";
            this.WindowTitles.Add("Rekalkulering");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Rekalkulering");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIForskyvningWindow : DXWindow
    {
        
        public UIForskyvningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Forskyvning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIPanClientPanelClient UIPanClientPanelClient
        {
            get
            {
                if ((this.mUIPanClientPanelClient == null))
                {
                    this.mUIPanClientPanelClient = new UIPanClientPanelClient(this);
                }
                return this.mUIPanClientPanelClient;
            }
        }
        
        public UIPanBottomPanelClient UIPanBottomPanelClient
        {
            get
            {
                if ((this.mUIPanBottomPanelClient == null))
                {
                    this.mUIPanBottomPanelClient = new UIPanBottomPanelClient(this);
                }
                return this.mUIPanBottomPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientPanelClient mUIPanClientPanelClient;
        
        private UIPanBottomPanelClient mUIPanBottomPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanClientPanelClient : DXTestControl
    {
        
        public UIPanClientPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClientPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGpcMainClient UIGpcMainClient
        {
            get
            {
                if ((this.mUIGpcMainClient == null))
                {
                    this.mUIGpcMainClient = new UIGpcMainClient(this);
                }
                return this.mUIGpcMainClient;
            }
        }
        
        public UIBnMenuNavBar UIBnMenuNavBar
        {
            get
            {
                if ((this.mUIBnMenuNavBar == null))
                {
                    this.mUIBnMenuNavBar = new UIBnMenuNavBar(this);
                }
                return this.mUIBnMenuNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGpcMainClient mUIGpcMainClient;
        
        private UIBnMenuNavBar mUIBnMenuNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGpcMainClient : DXTestControl
    {
        
        public UIGpcMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList1 UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList1(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList1 mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcClientTabList1 : DXTestControl
    {
        
        public UITcClientTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpMainClient1 UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient1(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient1 mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpMainClient1 : DXTestControl
    {
        
        public UITpMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGpcShiftsClient UIGpcShiftsClient
        {
            get
            {
                if ((this.mUIGpcShiftsClient == null))
                {
                    this.mUIGpcShiftsClient = new UIGpcShiftsClient(this);
                }
                return this.mUIGpcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGpcShiftsClient mUIGpcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGpcShiftsClient : DXTestControl
    {
        
        public UIGpcShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGcNewShiftsClient UIGcNewShiftsClient
        {
            get
            {
                if ((this.mUIGcNewShiftsClient == null))
                {
                    this.mUIGcNewShiftsClient = new UIGcNewShiftsClient(this);
                }
                return this.mUIGcNewShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcNewShiftsClient mUIGcNewShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcNewShiftsClient : DXTestControl
    {
        
        public UIGcNewShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNewShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXButton UINyendrevakterButton
        {
            get
            {
                if ((this.mUINyendrevakterButton == null))
                {
                    this.mUINyendrevakterButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINyendrevakterButton.SearchProperties[DXTestControl.PropertyNames.Name] = "bNewShifts";
                    this.mUINyendrevakterButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUINyendrevakterButton.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUINyendrevakterButton;
            }
        }
        
        public UITcNewShiftTabList UITcNewShiftTabList
        {
            get
            {
                if ((this.mUITcNewShiftTabList == null))
                {
                    this.mUITcNewShiftTabList = new UITcNewShiftTabList(this);
                }
                return this.mUITcNewShiftTabList;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINyendrevakterButton;
        
        private UITcNewShiftTabList mUITcNewShiftTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcNewShiftTabList : DXTestControl
    {
        
        public UITcNewShiftTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpNewshiftGridClient UITpNewshiftGridClient
        {
            get
            {
                if ((this.mUITpNewshiftGridClient == null))
                {
                    this.mUITpNewshiftGridClient = new UITpNewshiftGridClient(this);
                }
                return this.mUITpNewshiftGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpNewshiftGridClient mUITpNewshiftGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpNewshiftGridClient : DXTestControl
    {
        
        public UITpNewshiftGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpNewshiftGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGNewShiftsTable UIGNewShiftsTable
        {
            get
            {
                if ((this.mUIGNewShiftsTable == null))
                {
                    this.mUIGNewShiftsTable = new UIGNewShiftsTable(this);
                }
                return this.mUIGNewShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGNewShiftsTable mUIGNewShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGNewShiftsTable : DXGrid
    {
        
        public UIGNewShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gNewShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gNewShiftsGridControlCell[View]gvNewShiftView[Row]0[Column]gcNewShiftHasShortNoti" +
                        "ce";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBnMenuNavBar : DXNavBar
    {
        
        public UIBnMenuNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "bnMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            #endregion
        }
        
        #region Properties
        public UINbgcOvertimeCodeScrollableControl UINbgcOvertimeCodeScrollableControl
        {
            get
            {
                if ((this.mUINbgcOvertimeCodeScrollableControl == null))
                {
                    this.mUINbgcOvertimeCodeScrollableControl = new UINbgcOvertimeCodeScrollableControl(this);
                }
                return this.mUINbgcOvertimeCodeScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgcOvertimeCodeScrollableControl mUINbgcOvertimeCodeScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgcOvertimeCodeScrollableControl : DXScrollableControl
    {
        
        public UINbgcOvertimeCodeScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgcOvertimeCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILeOvertimeCodeLookUpEdit
        {
            get
            {
                if ((this.mUILeOvertimeCodeLookUpEdit == null))
                {
                    this.mUILeOvertimeCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILeOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "leOvertimeCode";
                    this.mUILeOvertimeCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUILeOvertimeCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILeOvertimeCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanBottomPanelClient : DXTestControl
    {
        
        public UIPanBottomPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panBottomPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public DXButton UILønnButton
        {
            get
            {
                if ((this.mUILønnButton == null))
                {
                    this.mUILønnButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILønnButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btPaymentRecalculate";
                    this.mUILønnButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILønnButton.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUILønnButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        
        private DXButton mUILønnButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRemanageCreateNewShiWindow : DXWindow
    {
        
        public UIRemanageCreateNewShiWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties["ControlName"] = "RemanageCreateNewShiftForm";
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client5 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client5(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        
        public UIGsPanelControl2Client1 UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client1(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client5 mUIGsPanelControl1Client;
        
        private UIGsPanelControl2Client1 mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl1Client5 : DXTestControl
    {
        
        public UIGsPanelControl1Client5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIMainPanelClient UIMainPanelClient
        {
            get
            {
                if ((this.mUIMainPanelClient == null))
                {
                    this.mUIMainPanelClient = new UIMainPanelClient(this);
                }
                return this.mUIMainPanelClient;
            }
        }
        
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btAdd";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        #endregion
        
        #region Fields
        private UIMainPanelClient mUIMainPanelClient;
        
        private DXButton mUILeggtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainPanelClient : DXTestControl
    {
        
        public UIMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "MainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            #endregion
        }
        
        #region Properties
        public UIDeDateCustom UIDeDateCustom
        {
            get
            {
                if ((this.mUIDeDateCustom == null))
                {
                    this.mUIDeDateCustom = new UIDeDateCustom(this);
                }
                return this.mUIDeDateCustom;
            }
        }
        
        public DXLookUpEdit UICbShiftCodeLookUpEdit
        {
            get
            {
                if ((this.mUICbShiftCodeLookUpEdit == null))
                {
                    this.mUICbShiftCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUICbShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "cbShiftCode";
                    this.mUICbShiftCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    #endregion
                }
                return this.mUICbShiftCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIDeDateCustom mUIDeDateCustom;
        
        private DXLookUpEdit mUICbShiftCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeDateCustom : DXTestControl
    {
        
        public UIDeDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl2Client1 : DXTestControl
    {
        
        public UIGsPanelControl2Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISlettWindow : DXWindow
    {
        
        public UISlettWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Slett";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public UIDbFooterCustom3 UIDbFooterCustom
        {
            get
            {
                if ((this.mUIDbFooterCustom == null))
                {
                    this.mUIDbFooterCustom = new UIDbFooterCustom3(this);
                }
                return this.mUIDbFooterCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDbFooterCustom3 mUIDbFooterCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDbFooterCustom3 : DXTestControl
    {
        
        public UIDbFooterCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Slett");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Slett");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanoppsettWindow1 : DXWindow
    {
        
        public UIArbeidsplanoppsettWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplanoppsett";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplanoppsett");
            #endregion
        }
        
        #region Properties
        public DXButton UIMaximizeButton
        {
            get
            {
                if ((this.mUIMaximizeButton == null))
                {
                    this.mUIMaximizeButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIMaximizeButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Maximize";
                    this.mUIMaximizeButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUIMaximizeButton.WindowTitles.Add("Arbeidsplanoppsett");
                    #endregion
                }
                return this.mUIMaximizeButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIMaximizeButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow121 : WinWindow
    {
        
        public UIItemWindow121()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu2 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu2(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UIGalleryDropDownBarCoMenu1 UIGalleryDropDownBarCoMenu
        {
            get
            {
                if ((this.mUIGalleryDropDownBarCoMenu == null))
                {
                    this.mUIGalleryDropDownBarCoMenu = new UIGalleryDropDownBarCoMenu1(this);
                }
                return this.mUIGalleryDropDownBarCoMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu2 mUIPopupMenuBarControlMenu;
        
        private UIGalleryDropDownBarCoMenu1 mUIGalleryDropDownBarCoMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu2 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink3MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink3MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink3MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
                    this.mUIBarButtonItemLink3MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink3MenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIMerkalleMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIMerkalleMenuBaseButtonItem == null))
                {
                    this.mUIMerkalleMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIMerkalleMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[8]";
                    this.mUIMerkalleMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIMerkalleMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIOKMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIOKMenuBaseButtonItem == null))
                {
                    this.mUIOKMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIOKMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "biOk";
                    this.mUIOKMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIOKMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UITilbakestillvaktbokMenuBaseButtonItem
        {
            get
            {
                if ((this.mUITilbakestillvaktbokMenuBaseButtonItem == null))
                {
                    this.mUITilbakestillvaktbokMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUITilbakestillvaktbokMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUITilbakestillvaktbokMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUITilbakestillvaktbokMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIFullExpandMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIFullExpandMenuBaseButtonItem == null))
                {
                    this.mUIFullExpandMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIFullExpandMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUIFullExpandMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIFullExpandMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink3MenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIMerkalleMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIOKMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUITilbakestillvaktbokMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIFullExpandMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGalleryDropDownBarCoMenu1 : DXMenu
    {
        
        public UIGalleryDropDownBarCoMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink0MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink0MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink0MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIBarButtonItemLink0MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink0MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink0MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUtrykningWindow : DXWindow
    {
        
        public UIUtrykningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utrykning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_layoutControlCustom UI_layoutControlCustom
        {
            get
            {
                if ((this.mUI_layoutControlCustom == null))
                {
                    this.mUI_layoutControlCustom = new UI_layoutControlCustom(this);
                }
                return this.mUI_layoutControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UI_layoutControlCustom mUI_layoutControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_layoutControlCustom : DXTestControl
    {
        
        public UI_layoutControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_layoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup6 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup6(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup6 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup6 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem3LayoutControlItem1 UILayoutControlItem3LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem3LayoutControlItem == null))
                {
                    this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem3LayoutControlItem;
            }
        }
        
        public UILayoutControlItem5LayoutControlItem2 UILayoutControlItem5LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem5LayoutControlItem == null))
                {
                    this.mUILayoutControlItem5LayoutControlItem = new UILayoutControlItem5LayoutControlItem2(this);
                }
                return this.mUILayoutControlItem5LayoutControlItem;
            }
        }
        
        public UI_liOKLayoutControlItem UI_liOKLayoutControlItem
        {
            get
            {
                if ((this.mUI_liOKLayoutControlItem == null))
                {
                    this.mUI_liOKLayoutControlItem = new UI_liOKLayoutControlItem(this);
                }
                return this.mUI_liOKLayoutControlItem;
            }
        }
        
        public UI_liOk_NewLayoutControlItem UI_liOk_NewLayoutControlItem
        {
            get
            {
                if ((this.mUI_liOk_NewLayoutControlItem == null))
                {
                    this.mUI_liOk_NewLayoutControlItem = new UI_liOk_NewLayoutControlItem(this);
                }
                return this.mUI_liOk_NewLayoutControlItem;
            }
        }
        
        public UI_liCancelLayoutControlItem UI_liCancelLayoutControlItem
        {
            get
            {
                if ((this.mUI_liCancelLayoutControlItem == null))
                {
                    this.mUI_liCancelLayoutControlItem = new UI_liCancelLayoutControlItem(this);
                }
                return this.mUI_liCancelLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem3LayoutControlItem1 mUILayoutControlItem3LayoutControlItem;
        
        private UILayoutControlItem5LayoutControlItem2 mUILayoutControlItem5LayoutControlItem;
        
        private UI_liOKLayoutControlItem mUI_liOKLayoutControlItem;
        
        private UI_liOk_NewLayoutControlItem mUI_liOk_NewLayoutControlItem;
        
        private UI_liCancelLayoutControlItem mUI_liCancelLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem3LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem3LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            #endregion
        }
        
        #region Properties
        public UI_navBarNavBar UI_navBarNavBar
        {
            get
            {
                if ((this.mUI_navBarNavBar == null))
                {
                    this.mUI_navBarNavBar = new UI_navBarNavBar(this);
                }
                return this.mUI_navBarNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UI_navBarNavBar mUI_navBarNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_navBarNavBar : DXNavBar
    {
        
        public UI_navBarNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_navBar";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl1 UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl1(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl1 mUINavBarGroupControlCoScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINavBarGroupControlCoScrollableControl1 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UI_cbCauseCodeLookUpEdit
        {
            get
            {
                if ((this.mUI_cbCauseCodeLookUpEdit == null))
                {
                    this.mUI_cbCauseCodeLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUI_cbCauseCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "_cbCauseCode";
                    this.mUI_cbCauseCodeLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
                    this.mUI_cbCauseCodeLookUpEdit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUI_cbCauseCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUI_cbCauseCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem5LayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem5LayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tcRightTabList UI_tcRightTabList
        {
            get
            {
                if ((this.mUI_tcRightTabList == null))
                {
                    this.mUI_tcRightTabList = new UI_tcRightTabList(this);
                }
                return this.mUI_tcRightTabList;
            }
        }
        #endregion
        
        #region Fields
        private UI_tcRightTabList mUI_tcRightTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_tcRightTabList : DXTestControl
    {
        
        public UI_tcRightTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tcRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tpCalloutDetailsClient UI_tpCalloutDetailsClient
        {
            get
            {
                if ((this.mUI_tpCalloutDetailsClient == null))
                {
                    this.mUI_tpCalloutDetailsClient = new UI_tpCalloutDetailsClient(this);
                }
                return this.mUI_tpCalloutDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_tpCalloutDetailsClient mUI_tpCalloutDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_tpCalloutDetailsClient : DXTestControl
    {
        
        public UI_tpCalloutDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tpCalloutDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_periodCreatorCustom UI_periodCreatorCustom
        {
            get
            {
                if ((this.mUI_periodCreatorCustom == null))
                {
                    this.mUI_periodCreatorCustom = new UI_periodCreatorCustom(this);
                }
                return this.mUI_periodCreatorCustom;
            }
        }
        
        public DXTextEdit UIENumberEdit
        {
            get
            {
                if ((this.mUIENumberEdit == null))
                {
                    this.mUIENumberEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumberEdit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIENumberEdit;
            }
        }
        
        public UI_tcMainTabList UI_tcMainTabList
        {
            get
            {
                if ((this.mUI_tcMainTabList == null))
                {
                    this.mUI_tcMainTabList = new UI_tcMainTabList(this);
                }
                return this.mUI_tcMainTabList;
            }
        }
        #endregion
        
        #region Fields
        private UI_periodCreatorCustom mUI_periodCreatorCustom;
        
        private DXTextEdit mUIENumberEdit;
        
        private UI_tcMainTabList mUI_tcMainTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_periodCreatorCustom : DXTestControl
    {
        
        public UI_periodCreatorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_periodCreator";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TwoStepPeriodCreator";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIETime0Edit
        {
            get
            {
                if ((this.mUIETime0Edit == null))
                {
                    this.mUIETime0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[0]";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime0Edit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIETime0Edit;
            }
        }
        
        public DXTextEdit UIETime1Edit
        {
            get
            {
                if ((this.mUIETime1Edit == null))
                {
                    this.mUIETime1Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eTime[1]";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIETime1Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIETime1Edit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIETime1Edit;
            }
        }
        
        public DXCheckBox UIItem27augusttirCheckBox
        {
            get
            {
                if ((this.mUIItem27augusttirCheckBox == null))
                {
                    this.mUIItem27augusttirCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIItem27augusttirCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "_periodCreatorCheckEdit[0]";
                    this.mUIItem27augusttirCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIItem27augusttirCheckBox.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem27augusttirCheckBox;
            }
        }
        
        public DXCheckBox UIItem28augustonsCheckBox
        {
            get
            {
                if ((this.mUIItem28augustonsCheckBox == null))
                {
                    this.mUIItem28augustonsCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIItem28augustonsCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "_periodCreatorCheckEdit[1]";
                    this.mUIItem28augustonsCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUIItem28augustonsCheckBox.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIItem28augustonsCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIETime0Edit;
        
        private DXTextEdit mUIETime1Edit;
        
        private DXCheckBox mUIItem27augusttirCheckBox;
        
        private DXCheckBox mUIItem28augustonsCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_tcMainTabList : DXTestControl
    {
        
        public UI_tcMainTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_tpSalaryClient UI_tpSalaryClient
        {
            get
            {
                if ((this.mUI_tpSalaryClient == null))
                {
                    this.mUI_tpSalaryClient = new UI_tpSalaryClient(this);
                }
                return this.mUI_tpSalaryClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_tpSalaryClient mUI_tpSalaryClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_tpSalaryClient : DXTestControl
    {
        
        public UI_tpSalaryClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_tpSalary";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXButton UIRekalkulerButton
        {
            get
            {
                if ((this.mUIRekalkulerButton == null))
                {
                    this.mUIRekalkulerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIRekalkulerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_bRecalc";
                    this.mUIRekalkulerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIRekalkulerButton.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIRekalkulerButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIRekalkulerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_liOKLayoutControlItem : DXBaseLayoutItem
    {
        
        public UI_liOKLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_liOK";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_bOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_liOk_NewLayoutControlItem : DXBaseLayoutItem
    {
        
        public UI_liOk_NewLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_liOk_New";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXButton UIOkNyButton
        {
            get
            {
                if ((this.mUIOkNyButton == null))
                {
                    this.mUIOkNyButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOkNyButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_bOkNew";
                    this.mUIOkNyButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOkNyButton.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIOkNyButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOkNyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_liCancelLayoutControlItem : DXBaseLayoutItem
    {
        
        public UI_liCancelLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_liCancel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "_bCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavedelingWindow : DXWindow
    {
        
        public UIOppgavedelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavedeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavedeling");
            #endregion
        }
        
        #region Properties
        public DXTestControl UITitleBarClient
        {
            get
            {
                if ((this.mUITitleBarClient == null))
                {
                    this.mUITitleBarClient = new DXTestControl(this);
                    #region Search Criteria
                    this.mUITitleBarClient.SearchProperties[DXTestControl.PropertyNames.Name] = "titleBar";
                    this.mUITitleBarClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TitleBar";
                    this.mUITitleBarClient.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUITitleBarClient;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public UIGroupControl1Client UIGroupControl1Client
        {
            get
            {
                if ((this.mUIGroupControl1Client == null))
                {
                    this.mUIGroupControl1Client = new UIGroupControl1Client(this);
                }
                return this.mUIGroupControl1Client;
            }
        }
        
        public UIGroupControl2Client UIGroupControl2Client
        {
            get
            {
                if ((this.mUIGroupControl2Client == null))
                {
                    this.mUIGroupControl2Client = new UIGroupControl2Client(this);
                }
                return this.mUIGroupControl2Client;
            }
        }
        
        public UIPanelControl1Client5 UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client5(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        
        public DXTestControl UIClcRecordInfoLabel
        {
            get
            {
                if ((this.mUIClcRecordInfoLabel == null))
                {
                    this.mUIClcRecordInfoLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIClcRecordInfoLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "clcRecordInfo";
                    this.mUIClcRecordInfoLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ContextLabelControl";
                    this.mUIClcRecordInfoLabel.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIClcRecordInfoLabel;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUITitleBarClient;
        
        private DXButton mUIOKButton;
        
        private DXButton mUIAvbrytButton;
        
        private UIGroupControl1Client mUIGroupControl1Client;
        
        private UIGroupControl2Client mUIGroupControl2Client;
        
        private UIPanelControl1Client5 mUIPanelControl1Client;
        
        private DXTestControl mUIClcRecordInfoLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControl1Client : DXTestControl
    {
        
        public UIGroupControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavedeling");
            #endregion
        }
        
        #region Properties
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddRoles";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILeggtilButton.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        
        public DXButton UIFjernButton
        {
            get
            {
                if ((this.mUIFjernButton == null))
                {
                    this.mUIFjernButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIFjernButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRemoveRoles";
                    this.mUIFjernButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIFjernButton.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIFjernButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILeggtilButton;
        
        private DXButton mUIFjernButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControl2Client : DXTestControl
    {
        
        public UIGroupControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Oppgavedeling");
            #endregion
        }
        
        #region Properties
        public DXButton UILeggtilButton
        {
            get
            {
                if ((this.mUILeggtilButton == null))
                {
                    this.mUILeggtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAddDepartments";
                    this.mUILeggtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILeggtilButton.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUILeggtilButton;
            }
        }
        
        public DXButton UIFjernButton
        {
            get
            {
                if ((this.mUIFjernButton == null))
                {
                    this.mUIFjernButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIFjernButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRemoveDepartments";
                    this.mUIFjernButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIFjernButton.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIFjernButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILeggtilButton;
        
        private DXButton mUIFjernButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client5 : DXTestControl
    {
        
        public UIPanelControl1Client5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Oppgavedeling");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UISdeFromDateDateTimeEdit
        {
            get
            {
                if ((this.mUISdeFromDateDateTimeEdit == null))
                {
                    this.mUISdeFromDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUISdeFromDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeFromDate";
                    this.mUISdeFromDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUISdeFromDateDateTimeEdit.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUISdeFromDateDateTimeEdit;
            }
        }
        
        public DXDateTimePicker UISdeToDateDateTimeEdit
        {
            get
            {
                if ((this.mUISdeToDateDateTimeEdit == null))
                {
                    this.mUISdeToDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUISdeToDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeToDate";
                    this.mUISdeToDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUISdeToDateDateTimeEdit.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUISdeToDateDateTimeEdit;
            }
        }
        
        public DXRadioGroup UIRadioGroupRadioGroup
        {
            get
            {
                if ((this.mUIRadioGroupRadioGroup == null))
                {
                    this.mUIRadioGroupRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRadioGroupRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgAccessType";
                    this.mUIRadioGroupRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RadioGroup";
                    #endregion
                }
                return this.mUIRadioGroupRadioGroup;
            }
        }
        
        public DXTextEdit UIMeCommentEdit
        {
            get
            {
                if ((this.mUIMeCommentEdit == null))
                {
                    this.mUIMeCommentEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIMeCommentEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "meComment";
                    this.mUIMeCommentEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MemoEdit";
                    this.mUIMeCommentEdit.WindowTitles.Add("Oppgavedeling");
                    #endregion
                }
                return this.mUIMeCommentEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUISdeFromDateDateTimeEdit;
        
        private DXDateTimePicker mUISdeToDateDateTimeEdit;
        
        private DXRadioGroup mUIRadioGroupRadioGroup;
        
        private DXTextEdit mUIMeCommentEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgoppgaverWindow : DXWindow
    {
        
        public UIVelgoppgaverWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg oppgaver";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public UITlueDepartmentsLookUpEdit UITlueDepartmentsLookUpEdit
        {
            get
            {
                if ((this.mUITlueDepartmentsLookUpEdit == null))
                {
                    this.mUITlueDepartmentsLookUpEdit = new UITlueDepartmentsLookUpEdit(this);
                }
                return this.mUITlueDepartmentsLookUpEdit;
            }
        }
        
        public UIGcRolesTable UIGcRolesTable
        {
            get
            {
                if ((this.mUIGcRolesTable == null))
                {
                    this.mUIGcRolesTable = new UIGcRolesTable(this);
                }
                return this.mUIGcRolesTable;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        
        private DXButton mUIAvbrytButton;
        
        private UITlueDepartmentsLookUpEdit mUITlueDepartmentsLookUpEdit;
        
        private UIGcRolesTable mUIGcRolesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITlueDepartmentsLookUpEdit : DXLookUpEdit
    {
        
        public UITlueDepartmentsLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlueDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListLookUpEdit";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UITreeListLookUpEditPoWindow UITreeListLookUpEditPoWindow
        {
            get
            {
                if ((this.mUITreeListLookUpEditPoWindow == null))
                {
                    this.mUITreeListLookUpEditPoWindow = new UITreeListLookUpEditPoWindow(this);
                }
                return this.mUITreeListLookUpEditPoWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITreeListLookUpEditPoWindow mUITreeListLookUpEditPoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITreeListLookUpEditPoWindow : DXWindow
    {
        
        public UITreeListLookUpEditPoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlueDepartmentsPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListLookUpEditPopupForm";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UITreeListLookUpEdit1TTreeList UITreeListLookUpEdit1TTreeList
        {
            get
            {
                if ((this.mUITreeListLookUpEdit1TTreeList == null))
                {
                    this.mUITreeListLookUpEdit1TTreeList = new UITreeListLookUpEdit1TTreeList(this);
                }
                return this.mUITreeListLookUpEdit1TTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UITreeListLookUpEdit1TTreeList mUITreeListLookUpEdit1TTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITreeListLookUpEdit1TTreeList : DXTreeList
    {
        
        public UITreeListLookUpEdit1TTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "treeListLookUpEdit1TreeList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIFindControlCoreCustom UIFindControlCoreCustom
        {
            get
            {
                if ((this.mUIFindControlCoreCustom == null))
                {
                    this.mUIFindControlCoreCustom = new UIFindControlCoreCustom(this);
                }
                return this.mUIFindControlCoreCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIFindControlCoreCustom mUIFindControlCoreCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFindControlCoreCustom : DXTestControl
    {
        
        public UIFindControlCoreCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindControlCore";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UILayoutControl1Custom2 UILayoutControl1Custom
        {
            get
            {
                if ((this.mUILayoutControl1Custom == null))
                {
                    this.mUILayoutControl1Custom = new UILayoutControl1Custom2(this);
                }
                return this.mUILayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControl1Custom2 mUILayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControl1Custom2 : DXTestControl
    {
        
        public UILayoutControl1Custom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindLayoutControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup7 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup7(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup7 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup7 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UILciFindLayoutControlItem1 UILciFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciFindLayoutControlItem == null))
                {
                    this.mUILciFindLayoutControlItem = new UILciFindLayoutControlItem1(this);
                }
                return this.mUILciFindLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciFindLayoutControlItem1 mUILciFindLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciFindLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciFindLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXMRUEdit UITeFindMRUEdit
        {
            get
            {
                if ((this.mUITeFindMRUEdit == null))
                {
                    this.mUITeFindMRUEdit = new DXMRUEdit(this);
                    #region Search Criteria
                    this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindEditWLabel";
                    this.mUITeFindMRUEdit.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUITeFindMRUEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXMRUEdit mUITeFindMRUEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRolesTable : DXGrid
    {
        
        public UIGcRolesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRoles";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIFindControlCoreCustom1 UIFindControlCoreCustom
        {
            get
            {
                if ((this.mUIFindControlCoreCustom == null))
                {
                    this.mUIFindControlCoreCustom = new UIFindControlCoreCustom1(this);
                }
                return this.mUIFindControlCoreCustom;
            }
        }
        
        public DXCell UIDeltmed47204810TirsdCell
        {
            get
            {
                if ((this.mUIDeltmed47204810TirsdCell == null))
                {
                    this.mUIDeltmed47204810TirsdCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDeltmed47204810TirsdCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRolesGridControlCell[View]gvRoles[Row]0[Column]colName";
                    this.mUIDeltmed47204810TirsdCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDeltmed47204810TirsdCell.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUIDeltmed47204810TirsdCell;
            }
        }
        #endregion
        
        #region Fields
        private UIFindControlCoreCustom1 mUIFindControlCoreCustom;
        
        private DXCell mUIDeltmed47204810TirsdCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFindControlCoreCustom1 : DXTestControl
    {
        
        public UIFindControlCoreCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindControlCore";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UILayoutControl1Custom3 UILayoutControl1Custom
        {
            get
            {
                if ((this.mUILayoutControl1Custom == null))
                {
                    this.mUILayoutControl1Custom = new UILayoutControl1Custom3(this);
                }
                return this.mUILayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControl1Custom3 mUILayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControl1Custom3 : DXTestControl
    {
        
        public UILayoutControl1Custom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindLayoutControl";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup8 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup8(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup8 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup8 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public UILciFindLayoutControlItem2 UILciFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciFindLayoutControlItem == null))
                {
                    this.mUILciFindLayoutControlItem = new UILciFindLayoutControlItem2(this);
                }
                return this.mUILciFindLayoutControlItem;
            }
        }
        
        public UILciFindButtonLayoutControlItem1 UILciFindButtonLayoutControlItem
        {
            get
            {
                if ((this.mUILciFindButtonLayoutControlItem == null))
                {
                    this.mUILciFindButtonLayoutControlItem = new UILciFindButtonLayoutControlItem1(this);
                }
                return this.mUILciFindButtonLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciFindLayoutControlItem2 mUILciFindLayoutControlItem;
        
        private UILciFindButtonLayoutControlItem1 mUILciFindButtonLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciFindLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILciFindLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXMRUEdit UITeFindMRUEdit
        {
            get
            {
                if ((this.mUITeFindMRUEdit == null))
                {
                    this.mUITeFindMRUEdit = new DXMRUEdit(this);
                    #region Search Criteria
                    this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindEditWLabel";
                    this.mUITeFindMRUEdit.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUITeFindMRUEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXMRUEdit mUITeFindMRUEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciFindButtonLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILciFindButtonLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFindButton";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg oppgaver");
            #endregion
        }
        
        #region Properties
        public DXButton UISøkButton
        {
            get
            {
                if ((this.mUISøkButton == null))
                {
                    this.mUISøkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btFind";
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomConstraintsSimpleButton";
                    this.mUISøkButton.WindowTitles.Add("Velg oppgaver");
                    #endregion
                }
                return this.mUISøkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISøkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEndrekonteringWindow : WinWindow
    {
        
        public UIEndrekonteringWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Endre kontering";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmPosting";
            this.WindowTitles.Add("Endre kontering");
            #endregion
        }
        
        #region Properties
        public UIItemWindow15 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow15(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow15 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow15 : WinWindow
    {
        
        public UIItemWindow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Endre kontering");
            #endregion
        }
        
        #region Properties
        public UIEndrekonteringClient UIEndrekonteringClient
        {
            get
            {
                if ((this.mUIEndrekonteringClient == null))
                {
                    this.mUIEndrekonteringClient = new UIEndrekonteringClient(this);
                }
                return this.mUIEndrekonteringClient;
            }
        }
        #endregion
        
        #region Fields
        private UIEndrekonteringClient mUIEndrekonteringClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEndrekonteringClient : WinClient
    {
        
        public UIEndrekonteringClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Endre kontering");
            #endregion
        }
        
        #region Properties
        public WinButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[WinButton.PropertyNames.Name] = "Lukk";
                    this.mUILukkButton.WindowTitles.Add("Endre kontering");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWindowsFormsParkingWWindow : WinWindow
    {
        
        public UIWindowsFormsParkingWWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "WindowsFormsParkingWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("WindowsFormsParkingWindow");
            #endregion
        }
        
        #region Properties
        public UIGridLookUpEditLookUpEdit1 UIGridLookUpEditLookUpEdit
        {
            get
            {
                if ((this.mUIGridLookUpEditLookUpEdit == null))
                {
                    this.mUIGridLookUpEditLookUpEdit = new UIGridLookUpEditLookUpEdit1(this);
                }
                return this.mUIGridLookUpEditLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIGridLookUpEditLookUpEdit1 mUIGridLookUpEditLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGridLookUpEditLookUpEdit1 : DXLookUpEdit
    {
        
        public UIGridLookUpEditLookUpEdit1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownGridLookUpEdit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridLookUpEdit";
            this.WindowTitles.Add("WindowsFormsParkingWindow");
            #endregion
        }
        
        #region Properties
        public UIPopupGridLookUpEditFWindow2 UIPopupGridLookUpEditFWindow
        {
            get
            {
                if ((this.mUIPopupGridLookUpEditFWindow == null))
                {
                    this.mUIPopupGridLookUpEditFWindow = new UIPopupGridLookUpEditFWindow2(this);
                }
                return this.mUIPopupGridLookUpEditFWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupGridLookUpEditFWindow2 mUIPopupGridLookUpEditFWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupGridLookUpEditFWindow2 : DXWindow
    {
        
        public UIPopupGridLookUpEditFWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownGridLookUpEditPopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupGridLookUpEditForm";
            this.WindowTitles.Add("WindowsFormsParkingWindow");
            #endregion
        }
        
        #region Properties
        public DXGrid UIGridControlTable
        {
            get
            {
                if ((this.mUIGridControlTable == null))
                {
                    this.mUIGridControlTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGridControlTable.SearchProperties[DXTestControl.PropertyNames.Name] = "UnknownGridLookUpEditPopupFormGridControl[0]";
                    this.mUIGridControlTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
                    this.mUIGridControlTable.WindowTitles.Add("WindowsFormsParkingWindow");
                    #endregion
                }
                return this.mUIGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private DXGrid mUIGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow131 : DXWindow
    {
        
        public UIItemWindow131()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatt");
            #endregion
        }
        
        #region Properties
        public UIPanelControlClient UIPanelControlClient
        {
            get
            {
                if ((this.mUIPanelControlClient == null))
                {
                    this.mUIPanelControlClient = new UIPanelControlClient(this);
                }
                return this.mUIPanelControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlClient mUIPanelControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlClient : DXTestControl
    {
        
        public UIPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlContents";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatt");
            #endregion
        }
        
        #region Properties
        public UIPanelControlClient1 UIPanelControlClient1
        {
            get
            {
                if ((this.mUIPanelControlClient1 == null))
                {
                    this.mUIPanelControlClient1 = new UIPanelControlClient1(this);
                }
                return this.mUIPanelControlClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlClient1 mUIPanelControlClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlClient1 : DXTestControl
    {
        
        public UIPanelControlClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatt");
            #endregion
        }
        
        #region Properties
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("Legg til ansatt");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Legg til ansatt");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISimpleButtonButton;
        
        private DXButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBytteWindow : DXWindow
    {
        
        public UIBytteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "ddbtnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDropDownButton";
                    this.mUIOKButton.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgansattsomskaldekWindow : DXWindow
    {
        
        public UIVelgansattsomskaldekWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg ansatt som skal dekke vakten D (08:00-16:00) man 02.09.2024, 4520 - Operasjo" +
                "n, L";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg ansatt som skal dekke vakten D (08:00-16:00) man 02.09.2024, 4520 - Operasjo" +
                    "n, L");
            #endregion
        }
        
        #region Properties
        public DXButton UIFullførButton
        {
            get
            {
                if ((this.mUIFullførButton == null))
                {
                    this.mUIFullførButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIFullførButton.SearchProperties[DXTestControl.PropertyNames.Name] = "WizardButton[2]";
                    this.mUIFullførButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WizardButton";
                    this.mUIFullførButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIFullførButton.WindowTitles.Add("Velg ansatt som skal dekke vakten D (08:00-16:00) man 02.09.2024, 4520 - Operasjo" +
                            "n, L");
                    #endregion
                }
                return this.mUIFullførButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIFullførButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavevaktbokvisninWindow : DXWindow
    {
        
        public UIOppgavevaktbokvisninWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavevaktbokvisning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavevaktbokvisning");
            #endregion
        }
        
        #region Properties
        public UIPcBottomClient1 UIPcBottomClient
        {
            get
            {
                if ((this.mUIPcBottomClient == null))
                {
                    this.mUIPcBottomClient = new UIPcBottomClient1(this);
                }
                return this.mUIPcBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcBottomClient1 mUIPcBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcBottomClient1 : DXTestControl
    {
        
        public UIPcBottomClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Oppgavevaktbokvisning");
            #endregion
        }
        
        #region Properties
        public DXButton UIBrukButton
        {
            get
            {
                if ((this.mUIBrukButton == null))
                {
                    this.mUIBrukButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnApplyCurrentView";
                    this.mUIBrukButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBrukButton.WindowTitles.Add("Oppgavevaktbokvisning");
                    #endregion
                }
                return this.mUIBrukButton;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Oppgavevaktbokvisning");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBrukButton;
        
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVacantShiftsFormWindow : DXWindow
    {
        
        public UIVacantShiftsFormWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression("ControlName", "VacantShiftsForm", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.FriendlyName, "VacantShiftsForm", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom4 UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom4(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom4 mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControl1Custom4 : DXTestControl
    {
        
        public UIGsLayoutControl1Custom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup4 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup4(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup4 mUILayoutControlGroup1LayoutGroup;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlGroup1LayoutGroup4 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem1LayoutControlItem2 UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem2(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem1LayoutControlItem2 mUILayoutControlItem1LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControlItem1LayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            #endregion
        }
        
        #region Properties
        public UIGUnoccupiedShiftsTable UIGUnoccupiedShiftsTable
        {
            get
            {
                if ((this.mUIGUnoccupiedShiftsTable == null))
                {
                    this.mUIGUnoccupiedShiftsTable = new UIGUnoccupiedShiftsTable(this);
                }
                return this.mUIGUnoccupiedShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGUnoccupiedShiftsTable mUIGUnoccupiedShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGUnoccupiedShiftsTable : DXGrid
    {
        
        public UIGUnoccupiedShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            #endregion
        }
        
        #region Properties
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsGridControlCell[View]gvUnoccupieedShifts[Row]0[Column]gcIsSelect" +
                        "ed";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCheckBox UICheckEditCheckBox
        {
            get
            {
                if ((this.mUICheckEditCheckBox == null))
                {
                    this.mUICheckEditCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gUnoccupiedShiftsCheckEdit[View]gvUnoccupieedShifts[Row]0[Column]gcIsSelected";
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    #endregion
                }
                return this.mUICheckEditCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIkkevalgtCell;
        
        private DXCheckBox mUICheckEditCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRPL23006InformasjonWindow : DXWindow
    {
        
        public UIRPL23006InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL2-3006 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-3006 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("RPL2-3006 - Informasjon");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAbonnementpådashboarWindow : DXWindow
    {
        
        public UIAbonnementpådashboarWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Abonnement på dashboardvarsler";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Abonnement på dashboardvarsler");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIPcContentClient.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
                    this.mUIPcContentClient.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
                    this.mUIPcContentClient.WindowTitles.Add("Abonnement på dashboardvarsler");
                    #endregion
                }
                return this.mUIPcContentClient;
            }
        }
        
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Abonnement på dashboardvarsler");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIPcContentClient;
        
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDøgnrytmelagWindow : DXWindow
    {
        
        public UIDøgnrytmelagWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Døgnrytme lag";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UIGsMainControlNavBar UIGsMainControlNavBar
        {
            get
            {
                if ((this.mUIGsMainControlNavBar == null))
                {
                    this.mUIGsMainControlNavBar = new UIGsMainControlNavBar(this);
                }
                return this.mUIGsMainControlNavBar;
            }
        }
        
        public UIPaBottomClient1 UIPaBottomClient
        {
            get
            {
                if ((this.mUIPaBottomClient == null))
                {
                    this.mUIPaBottomClient = new UIPaBottomClient1(this);
                }
                return this.mUIPaBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGsMainControlNavBar mUIGsMainControlNavBar;
        
        private UIPaBottomClient1 mUIPaBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsMainControlNavBar : DXNavBar
    {
        
        public UIGsMainControlNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsMainControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UINbgccLayersScrollableControl UINbgccLayersScrollableControl
        {
            get
            {
                if ((this.mUINbgccLayersScrollableControl == null))
                {
                    this.mUINbgccLayersScrollableControl = new UINbgccLayersScrollableControl(this);
                }
                return this.mUINbgccLayersScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccLayersScrollableControl mUINbgccLayersScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgccLayersScrollableControl : DXScrollableControl
    {
        
        public UINbgccLayersScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccLayers";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UIGcItemsTable UIGcItemsTable
        {
            get
            {
                if ((this.mUIGcItemsTable == null))
                {
                    this.mUIGcItemsTable = new UIGcItemsTable(this);
                }
                return this.mUIGcItemsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcItemsTable mUIGcItemsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcItemsTable : DXGrid
    {
        
        public UIGcItemsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItems";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public DXCell UIMorgenmøteCell
        {
            get
            {
                if ((this.mUIMorgenmøteCell == null))
                {
                    this.mUIMorgenmøteCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIMorgenmøteCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItemsGridControlCell[View]gvItems[Row]-2147483647[Column]cItemNameDayR";
                    this.mUIMorgenmøteCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIMorgenmøteCell.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIMorgenmøteCell;
            }
        }
        
        public DXLookUpEdit UIRow0ColumncItemNameDLookUpEdit
        {
            get
            {
                if ((this.mUIRow0ColumncItemNameDLookUpEdit == null))
                {
                    this.mUIRow0ColumncItemNameDLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUIRow0ColumncItemNameDLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItemsLookUpEdit[View]gvItems[Row]0[Column]cItemNameDayR";
                    this.mUIRow0ColumncItemNameDLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
                    #endregion
                }
                return this.mUIRow0ColumncItemNameDLookUpEdit;
            }
        }
        
        public UIRow2147483647ColumncLookUpEdit UIRow2147483647ColumncLookUpEdit
        {
            get
            {
                if ((this.mUIRow2147483647ColumncLookUpEdit == null))
                {
                    this.mUIRow2147483647ColumncLookUpEdit = new UIRow2147483647ColumncLookUpEdit(this);
                }
                return this.mUIRow2147483647ColumncLookUpEdit;
            }
        }
        
        public UIRow6ColumncItemNameDLookUpEdit UIRow6ColumncItemNameDLookUpEdit
        {
            get
            {
                if ((this.mUIRow6ColumncItemNameDLookUpEdit == null))
                {
                    this.mUIRow6ColumncItemNameDLookUpEdit = new UIRow6ColumncItemNameDLookUpEdit(this);
                }
                return this.mUIRow6ColumncItemNameDLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIMorgenmøteCell;
        
        private DXLookUpEdit mUIRow0ColumncItemNameDLookUpEdit;
        
        private UIRow2147483647ColumncLookUpEdit mUIRow2147483647ColumncLookUpEdit;
        
        private UIRow6ColumncItemNameDLookUpEdit mUIRow6ColumncItemNameDLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRow2147483647ColumncLookUpEdit : DXLookUpEdit
    {
        
        public UIRow2147483647ColumncLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItemsLookUpEdit[View]gvItems[Row]-2147483647[Column]cItemNameDayR";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItemsLookUpEdit[View]gvItems[Row]-2147483647[Column]cItemNameDayRPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRow6ColumncItemNameDLookUpEdit : DXLookUpEdit
    {
        
        public UIRow6ColumncItemNameDLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItemsLookUpEdit[View]gvItems[Row]6[Column]cItemNameDayR";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "gcItemsLookUpEdit[View]gvItems[Row]6[Column]cItemNameDayRPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaBottomClient1 : DXTestControl
    {
        
        public UIPaBottomClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISettekravtilpersonerWindow : DXWindow
    {
        
        public UISettekravtilpersonerWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Sette krav til personer på MED1 - Medisinutdeling morgen (08:30 - 09:00) på sønda" +
                "g";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Sette krav til personer på MED1 - Medisinutdeling morgen (08:30 - 09:00) på sønda" +
                    "g");
            #endregion
        }
        
        #region Properties
        public UIGrpRequirementsClient UIGrpRequirementsClient
        {
            get
            {
                if ((this.mUIGrpRequirementsClient == null))
                {
                    this.mUIGrpRequirementsClient = new UIGrpRequirementsClient(this);
                }
                return this.mUIGrpRequirementsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpRequirementsClient mUIGrpRequirementsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpRequirementsClient : DXTestControl
    {
        
        public UIGrpRequirementsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpRequirements";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Sette krav til personer på MED1 - Medisinutdeling morgen (08:30 - 09:00) på sønda" +
                    "g");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIGsseAmountEdit
        {
            get
            {
                if ((this.mUIGsseAmountEdit == null))
                {
                    this.mUIGsseAmountEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIGsseAmountEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gsseAmount";
                    this.mUIGsseAmountEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSpinEdit";
                    this.mUIGsseAmountEdit.WindowTitles.Add("Sette krav til personer på MED1 - Medisinutdeling morgen (08:30 - 09:00) på sønda" +
                            "g");
                    #endregion
                }
                return this.mUIGsseAmountEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIGsseAmountEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISettekravtilpersonerWindow1 : DXWindow
    {
        
        public UISettekravtilpersonerWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Sette krav til personer på VISITT - Legevisitt (09:00 - 11:00) ";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Sette krav");
            #endregion
        }
        
        #region Properties
        public UIGrpRequirementsClient1 UIGrpRequirementsClient
        {
            get
            {
                if ((this.mUIGrpRequirementsClient == null))
                {
                    this.mUIGrpRequirementsClient = new UIGrpRequirementsClient1(this);
                }
                return this.mUIGrpRequirementsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpRequirementsClient1 mUIGrpRequirementsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpRequirementsClient1 : DXTestControl
    {
        
        public UIGrpRequirementsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpRequirements";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Sette krav");
            #endregion
        }
        
        #region Properties
        public UIGcRequirementTable UIGcRequirementTable
        {
            get
            {
                if ((this.mUIGcRequirementTable == null))
                {
                    this.mUIGcRequirementTable = new UIGcRequirementTable(this);
                }
                return this.mUIGcRequirementTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRequirementTable mUIGcRequirementTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRequirementTable : DXGrid
    {
        
        public UIGcRequirementTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRequirement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Sette krav");
            #endregion
        }
        
        #region Properties
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRequirementGridControlCell[View]gvRequirement[Row]0[Column]gcolReserved";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add("Sette krav");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCheckBox UICheckCheckBox
        {
            get
            {
                if ((this.mUICheckCheckBox == null))
                {
                    this.mUICheckCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICheckCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRequirementCheckEdit[View]gvRequirement[Row]0[Column]gcolReserved";
                    this.mUICheckCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUICheckCheckBox.WindowTitles.Add("Sette krav");
                    #endregion
                }
                return this.mUICheckCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIkkevalgtCell;
        
        private DXCheckBox mUICheckCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDataLinkPropertiesWindow : WinWindow
    {
        
        public UIDataLinkPropertiesWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Data Link Properties";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public UIItemWindow16 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow16(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UISelectthedatayouwantList UISelectthedatayouwantList
        {
            get
            {
                if ((this.mUISelectthedatayouwantList == null))
                {
                    this.mUISelectthedatayouwantList = new UISelectthedatayouwantList(this);
                }
                return this.mUISelectthedatayouwantList;
            }
        }
        
        public UIItemWindow17 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow17(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow111 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow111(this);
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIItemWindow122 UIItemWindow12
        {
            get
            {
                if ((this.mUIItemWindow12 == null))
                {
                    this.mUIItemWindow12 = new UIItemWindow122(this);
                }
                return this.mUIItemWindow12;
            }
        }
        
        public UIItemWindow24 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow24(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIAllowsavingpasswordWindow UIAllowsavingpasswordWindow
        {
            get
            {
                if ((this.mUIAllowsavingpasswordWindow == null))
                {
                    this.mUIAllowsavingpasswordWindow = new UIAllowsavingpasswordWindow(this);
                }
                return this.mUIAllowsavingpasswordWindow;
            }
        }
        
        public UIItemWindow33 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow33(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow42 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow42(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow16 mUIItemWindow;
        
        private UISelectthedatayouwantList mUISelectthedatayouwantList;
        
        private UIItemWindow17 mUIItemWindow1;
        
        private UIItemWindow111 mUIItemWindow11;
        
        private UIItemWindow122 mUIItemWindow12;
        
        private UIItemWindow24 mUIItemWindow2;
        
        private UIAllowsavingpasswordWindow mUIAllowsavingpasswordWindow;
        
        private UIItemWindow33 mUIItemWindow3;
        
        private UIItemWindow42 mUIItemWindow4;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow16 : WinWindow
    {
        
        public UIItemWindow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItem1SelectorenterasEdit
        {
            get
            {
                if ((this.mUIItem1SelectorenterasEdit == null))
                {
                    this.mUIItem1SelectorenterasEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItem1SelectorenterasEdit.SearchProperties[WinEdit.PropertyNames.Name] = "1. Select or enter a server name:";
                    this.mUIItem1SelectorenterasEdit.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIItem1SelectorenterasEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItem1SelectorenterasEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISelectthedatayouwantList : WinList
    {
        
        public UISelectthedatayouwantList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Select the data you want to connect to:";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinListItem UIMicrosoftOLEDBProvidListItem
        {
            get
            {
                if ((this.mUIMicrosoftOLEDBProvidListItem == null))
                {
                    this.mUIMicrosoftOLEDBProvidListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIMicrosoftOLEDBProvidListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Microsoft OLE DB Provider for SQL Server";
                    this.mUIMicrosoftOLEDBProvidListItem.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIMicrosoftOLEDBProvidListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIMicrosoftOLEDBProvidListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow17 : WinWindow
    {
        
        public UIItemWindow17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1023";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItem1SelectorenterasComboBox
        {
            get
            {
                if ((this.mUIItem1SelectorenterasComboBox == null))
                {
                    this.mUIItem1SelectorenterasComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItem1SelectorenterasComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "1. Select or enter a server name:";
                    this.mUIItem1SelectorenterasComboBox.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIItem1SelectorenterasComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItem1SelectorenterasComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow111 : WinWindow
    {
        
        public UIItemWindow111(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1027";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "User name:";
                    this.mUIUsernameEdit.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUsernameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow122 : WinWindow
    {
        
        public UIItemWindow122(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1027";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "User name:";
                    this.mUIUsernameEdit.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUsernameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow24 : WinWindow
    {
        
        public UIItemWindow24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1029";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Password:";
                    this.mUIPasswordEdit.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAllowsavingpasswordWindow : WinWindow
    {
        
        public UIAllowsavingpasswordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "236";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIAllowsavingpasswordCheckBox
        {
            get
            {
                if ((this.mUIAllowsavingpasswordCheckBox == null))
                {
                    this.mUIAllowsavingpasswordCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIAllowsavingpasswordCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Allow saving password";
                    this.mUIAllowsavingpasswordCheckBox.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIAllowsavingpasswordCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIAllowsavingpasswordCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow33 : WinWindow
    {
        
        public UIItemWindow33(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "251";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow42 : WinWindow
    {
        
        public UIItemWindow42(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Data Link Properties");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Data Link Properties");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDetharoppståttenfeilWindow : DXWindow
    {
        
        public UIDetharoppståttenfeilWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Det har oppstått en feil";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Det har oppstått en feil");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIDetharoppståttenfeilWindowTitleBar
        {
            get
            {
                if ((this.mUIDetharoppståttenfeilWindowTitleBar == null))
                {
                    this.mUIDetharoppståttenfeilWindowTitleBar = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIDetharoppståttenfeilWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.Name] = "WindowTitleBar";
                    this.mUIDetharoppståttenfeilWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleBar";
                    this.mUIDetharoppståttenfeilWindowTitleBar.WindowTitles.Add("Det har oppstått en feil");
                    #endregion
                }
                return this.mUIDetharoppståttenfeilWindowTitleBar;
            }
        }
        
        public UITcWizardPagesTabList UITcWizardPagesTabList
        {
            get
            {
                if ((this.mUITcWizardPagesTabList == null))
                {
                    this.mUITcWizardPagesTabList = new UITcWizardPagesTabList(this);
                }
                return this.mUITcWizardPagesTabList;
            }
        }
        
        public DXButton UIUtførButton
        {
            get
            {
                if ((this.mUIUtførButton == null))
                {
                    this.mUIUtførButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIUtførButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btExecute";
                    this.mUIUtførButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIUtførButton.WindowTitles.Add("Det har oppstått en feil");
                    #endregion
                }
                return this.mUIUtførButton;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIDetharoppståttenfeilWindowTitleBar;
        
        private UITcWizardPagesTabList mUITcWizardPagesTabList;
        
        private DXButton mUIUtførButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcWizardPagesTabList : DXTestControl
    {
        
        public UITcWizardPagesTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcWizardPages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Det har oppstått en feil");
            #endregion
        }
        
        #region Properties
        public UITpCompleteClient UITpCompleteClient
        {
            get
            {
                if ((this.mUITpCompleteClient == null))
                {
                    this.mUITpCompleteClient = new UITpCompleteClient(this);
                }
                return this.mUITpCompleteClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpCompleteClient mUITpCompleteClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITpCompleteClient : DXTestControl
    {
        
        public UITpCompleteClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpComplete";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Det har oppstått en feil");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIRbExitApplicationCheckBox
        {
            get
            {
                if ((this.mUIRbExitApplicationCheckBox == null))
                {
                    this.mUIRbExitApplicationCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIRbExitApplicationCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "rbExitApplication";
                    this.mUIRbExitApplicationCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIRbExitApplicationCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIRbExitApplicationCheckBox.WindowTitles.Add("Det har oppstått en feil");
                    #endregion
                }
                return this.mUIRbExitApplicationCheckBox;
            }
        }
        
        public DXCheckBox UIRbReturnToApplicatioCheckBox
        {
            get
            {
                if ((this.mUIRbReturnToApplicatioCheckBox == null))
                {
                    this.mUIRbReturnToApplicatioCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIRbReturnToApplicatioCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "rbReturnToApplication";
                    this.mUIRbReturnToApplicatioCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIRbReturnToApplicatioCheckBox.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIRbReturnToApplicatioCheckBox.WindowTitles.Add("Det har oppstått en feil");
                    #endregion
                }
                return this.mUIRbReturnToApplicatioCheckBox;
            }
        }
        
        public UIPbTextInformationWindow UIPbTextInformationWindow
        {
            get
            {
                if ((this.mUIPbTextInformationWindow == null))
                {
                    this.mUIPbTextInformationWindow = new UIPbTextInformationWindow(this);
                }
                return this.mUIPbTextInformationWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIRbExitApplicationCheckBox;
        
        private DXCheckBox mUIRbReturnToApplicatioCheckBox;
        
        private UIPbTextInformationWindow mUIPbTextInformationWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPbTextInformationWindow : WinWindow
    {
        
        public UIPbTextInformationWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "pbTextInformation";
            this.WindowTitles.Add("Det har oppstått en feil");
            #endregion
        }
        
        #region Properties
        public WinClient UIPbTextInformationClient
        {
            get
            {
                if ((this.mUIPbTextInformationClient == null))
                {
                    this.mUIPbTextInformationClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIPbTextInformationClient.WindowTitles.Add("Det har oppstått en feil");
                    #endregion
                }
                return this.mUIPbTextInformationClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPbTextInformationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITekstinformasjonforsWindow : WinWindow
    {
        
        public UITekstinformasjonforsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Tekst-informasjon for support";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tekst-informasjon for support");
            #endregion
        }
        
        #region Properties
        public WinEdit UIETextEdit
        {
            get
            {
                if ((this.mUIETextEdit == null))
                {
                    this.mUIETextEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIETextEdit.WindowTitles.Add("Tekst-informasjon for support");
                    #endregion
                }
                return this.mUIETextEdit;
            }
        }
        
        public UIPaButtonsClient UIPaButtonsClient
        {
            get
            {
                if ((this.mUIPaButtonsClient == null))
                {
                    this.mUIPaButtonsClient = new UIPaButtonsClient(this);
                }
                return this.mUIPaButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIETextEdit;
        
        private UIPaButtonsClient mUIPaButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaButtonsClient : DXTestControl
    {
        
        public UIPaButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Tekst-informasjon for support");
            #endregion
        }
        
        #region Properties
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btExecute";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Tekst-informasjon for support");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        
        public DXButton UIKopierButton
        {
            get
            {
                if ((this.mUIKopierButton == null))
                {
                    this.mUIKopierButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIKopierButton.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSimpleButton1";
                    this.mUIKopierButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIKopierButton.WindowTitles.Add("Tekst-informasjon for support");
                    #endregion
                }
                return this.mUIKopierButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILukkButton;
        
        private DXButton mUIKopierButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHandlingutførtWindow : WinWindow
    {
        
        public UIHandlingutførtWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Handling utført";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Handling utført");
            #endregion
        }
        
        #region Properties
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Handling utført");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Handling utført");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow141 : WinWindow
    {
        
        public UIItemWindow141()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIItemMenuItem
        {
            get
            {
                if ((this.mUIItemMenuItem == null))
                {
                    this.mUIItemMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIItemMenuItem.SearchProperties[WinMenuItem.PropertyNames.Instance] = "2";
                    #endregion
                }
                return this.mUIItemMenuItem;
            }
        }
        
        public WinMenuItem UIVisloggMenuItem
        {
            get
            {
                if ((this.mUIVisloggMenuItem == null))
                {
                    this.mUIVisloggMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIVisloggMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Vis logg...";
                    #endregion
                }
                return this.mUIVisloggMenuItem;
            }
        }
        
        public WinMenuItem UICopyMenuItem
        {
            get
            {
                if ((this.mUICopyMenuItem == null))
                {
                    this.mUICopyMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUICopyMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Copy";
                    #endregion
                }
                return this.mUICopyMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIItemMenuItem;
        
        private WinMenuItem mUIVisloggMenuItem;
        
        private WinMenuItem mUICopyMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIExcelWindow : WinWindow
    {
        
        public UIExcelWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Excel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public UIDetailsPanePane1 UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane1(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UIItemWindow18 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow18(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UISaveWindow1 UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow1(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsPanePane1 mUIDetailsPanePane;
        
        private UIItemWindow18 mUIItemWindow;
        
        private UISaveWindow1 mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDetailsPanePane1 : WinPane
    {
        
        public UIDetailsPanePane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Excel");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow18 : WinWindow
    {
        
        public UIItemWindow18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Excel");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISaveWindow1 : WinWindow
    {
        
        public UISaveWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Excel");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBrukeradministrasjonWindow : WinWindow
    {
        
        public UIBrukeradministrasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Bruker administrasjon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmFullAdm";
            this.WindowTitles.Add("Bruker administrasjon");
            #endregion
        }
        
        #region Properties
        public UIItemWindow19 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow19(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow19 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow19 : WinWindow
    {
        
        public UIItemWindow19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicRecordInfo";
            this.WindowTitles.Add("Bruker administrasjon");
            #endregion
        }
        
        #region Properties
        public WinClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIItemClient.WindowTitles.Add("Bruker administrasjon");
                    #endregion
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILoggWindow : WinWindow
    {
        
        public UILoggWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Logg";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmLogSeekView";
            this.WindowTitles.Add("Logg");
            #endregion
        }
        
        #region Properties
        public UILoggTitleBar UILoggTitleBar
        {
            get
            {
                if ((this.mUILoggTitleBar == null))
                {
                    this.mUILoggTitleBar = new UILoggTitleBar(this);
                }
                return this.mUILoggTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UILoggTitleBar mUILoggTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILoggTitleBar : WinTitleBar
    {
        
        public UILoggTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Logg");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Logg");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIREC3001InformasjonWindow : DXWindow
    {
        
        public UIREC3001InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "REC-3001 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("REC-3001 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("REC-3001 - Informasjon");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDøgnrytmeplanWindow : DXWindow
    {
        
        public UIDøgnrytmeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Døgnrytmeplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UIPaNavbarPanelClient UIPaNavbarPanelClient
        {
            get
            {
                if ((this.mUIPaNavbarPanelClient == null))
                {
                    this.mUIPaNavbarPanelClient = new UIPaNavbarPanelClient(this);
                }
                return this.mUIPaNavbarPanelClient;
            }
        }
        
        public UIPaBottomPanelClient UIPaBottomPanelClient
        {
            get
            {
                if ((this.mUIPaBottomPanelClient == null))
                {
                    this.mUIPaBottomPanelClient = new UIPaBottomPanelClient(this);
                }
                return this.mUIPaBottomPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaNavbarPanelClient mUIPaNavbarPanelClient;
        
        private UIPaBottomPanelClient mUIPaBottomPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaNavbarPanelClient : DXTestControl
    {
        
        public UIPaNavbarPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paNavbarPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UIGsMainControlNavBar1 UIGsMainControlNavBar
        {
            get
            {
                if ((this.mUIGsMainControlNavBar == null))
                {
                    this.mUIGsMainControlNavBar = new UIGsMainControlNavBar1(this);
                }
                return this.mUIGsMainControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsMainControlNavBar1 mUIGsMainControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsMainControlNavBar1 : DXNavBar
    {
        
        public UIGsMainControlNavBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsMainControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UINbgccLayerScrollableControl UINbgccLayerScrollableControl
        {
            get
            {
                if ((this.mUINbgccLayerScrollableControl == null))
                {
                    this.mUINbgccLayerScrollableControl = new UINbgccLayerScrollableControl(this);
                }
                return this.mUINbgccLayerScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccLayerScrollableControl mUINbgccLayerScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbgccLayerScrollableControl : DXScrollableControl
    {
        
        public UINbgccLayerScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccLayer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UIPaMainPanelClient UIPaMainPanelClient
        {
            get
            {
                if ((this.mUIPaMainPanelClient == null))
                {
                    this.mUIPaMainPanelClient = new UIPaMainPanelClient(this);
                }
                return this.mUIPaMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaMainPanelClient mUIPaMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaMainPanelClient : DXTestControl
    {
        
        public UIPaMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UIGsSplitContainerContSplitContainerControl3 UIGsSplitContainerContSplitContainerControl
        {
            get
            {
                if ((this.mUIGsSplitContainerContSplitContainerControl == null))
                {
                    this.mUIGsSplitContainerContSplitContainerControl = new UIGsSplitContainerContSplitContainerControl3(this);
                }
                return this.mUIGsSplitContainerContSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIGsSplitContainerContSplitContainerControl3 mUIGsSplitContainerContSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsSplitContainerContSplitContainerControl3 : DXSplitContainerControl
    {
        
        public UIGsSplitContainerContSplitContainerControl3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient5 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient5(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient5 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient5 : DXTestControl
    {
        
        public UISplitGroupPanelClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsSplitContainerControl1SplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UIPaTopPanelClient UIPaTopPanelClient
        {
            get
            {
                if ((this.mUIPaTopPanelClient == null))
                {
                    this.mUIPaTopPanelClient = new UIPaTopPanelClient(this);
                }
                return this.mUIPaTopPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaTopPanelClient mUIPaTopPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaTopPanelClient : DXTestControl
    {
        
        public UIPaTopPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paTopPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIEndrelagButton
        {
            get
            {
                if ((this.mUIEndrelagButton == null))
                {
                    this.mUIEndrelagButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndrelagButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditLayer";
                    this.mUIEndrelagButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndrelagButton.WindowTitles.Add("Døgnrytmeplan");
                    #endregion
                }
                return this.mUIEndrelagButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIEndrelagButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaBottomPanelClient : DXTestControl
    {
        
        public UIPaBottomPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paBottomPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Døgnrytmeplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgavdelingerWindow : DXWindow
    {
        
        public UIVelgavdelingerWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg avdelinger";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public UITlDepartmentsTreeList UITlDepartmentsTreeList
        {
            get
            {
                if ((this.mUITlDepartmentsTreeList == null))
                {
                    this.mUITlDepartmentsTreeList = new UITlDepartmentsTreeList(this);
                }
                return this.mUITlDepartmentsTreeList;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Velg avdelinger");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Velg avdelinger");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private UITlDepartmentsTreeList mUITlDepartmentsTreeList;
        
        private DXButton mUIOKButton;
        
        private DXButton mUIAvbrytButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITlDepartmentsTreeList : DXTreeList
    {
        
        public UITlDepartmentsTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tlDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public UIFindControlCoreCustom2 UIFindControlCoreCustom
        {
            get
            {
                if ((this.mUIFindControlCoreCustom == null))
                {
                    this.mUIFindControlCoreCustom = new UIFindControlCoreCustom2(this);
                }
                return this.mUIFindControlCoreCustom;
            }
        }
        
        public UINode0TreeListNode UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UIFindControlCoreCustom2 mUIFindControlCoreCustom;
        
        private UINode0TreeListNode mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFindControlCoreCustom2 : DXTestControl
    {
        
        public UIFindControlCoreCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FindControlCore";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindControl";
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public UILayoutControl1Custom4 UILayoutControl1Custom
        {
            get
            {
                if ((this.mUILayoutControl1Custom == null))
                {
                    this.mUILayoutControl1Custom = new UILayoutControl1Custom4(this);
                }
                return this.mUILayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControl1Custom4 mUILayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutControl1Custom4 : DXTestControl
    {
        
        public UILayoutControl1Custom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindLayoutControl";
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup9 UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup9(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup9 mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup9 : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public UILciFindLayoutControlItem3 UILciFindLayoutControlItem
        {
            get
            {
                if ((this.mUILciFindLayoutControlItem == null))
                {
                    this.mUILciFindLayoutControlItem = new UILciFindLayoutControlItem3(this);
                }
                return this.mUILciFindLayoutControlItem;
            }
        }
        
        public UILciFindButtonLayoutControlItem2 UILciFindButtonLayoutControlItem
        {
            get
            {
                if ((this.mUILciFindButtonLayoutControlItem == null))
                {
                    this.mUILciFindButtonLayoutControlItem = new UILciFindButtonLayoutControlItem2(this);
                }
                return this.mUILciFindButtonLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciFindLayoutControlItem3 mUILciFindLayoutControlItem;
        
        private UILciFindButtonLayoutControlItem2 mUILciFindButtonLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciFindLayoutControlItem3 : DXBaseLayoutItem
    {
        
        public UILciFindLayoutControlItem3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFind";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public DXMRUEdit UITeFindMRUEdit
        {
            get
            {
                if ((this.mUITeFindMRUEdit == null))
                {
                    this.mUITeFindMRUEdit = new DXMRUEdit(this);
                    #region Search Criteria
                    this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "teFind";
                    this.mUITeFindMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "FindEditWLabel";
                    this.mUITeFindMRUEdit.WindowTitles.Add("Velg avdelinger");
                    #endregion
                }
                return this.mUITeFindMRUEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXMRUEdit mUITeFindMRUEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciFindButtonLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILciFindButtonLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciFindButton";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public DXButton UISøkButton
        {
            get
            {
                if ((this.mUISøkButton == null))
                {
                    this.mUISøkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btFind";
                    this.mUISøkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomConstraintsSimpleButton";
                    this.mUISøkButton.WindowTitles.Add("Velg avdelinger");
                    #endregion
                }
                return this.mUISøkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISøkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode0TreeListNode : DXTreeListNode
    {
        
        public UINode0TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public UINode9TreeListNode UINode9TreeListNode
        {
            get
            {
                if ((this.mUINode9TreeListNode == null))
                {
                    this.mUINode9TreeListNode = new UINode9TreeListNode(this);
                }
                return this.mUINode9TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode9TreeListNode mUINode9TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode9TreeListNode : DXTreeListNode
    {
        
        public UINode9TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public UINode0TreeListNode1 UINode0TreeListNode
        {
            get
            {
                if ((this.mUINode0TreeListNode == null))
                {
                    this.mUINode0TreeListNode = new UINode0TreeListNode1(this);
                }
                return this.mUINode0TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeListNode1 mUINode0TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode0TreeListNode1 : DXTreeListNode
    {
        
        public UINode0TreeListNode1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node0";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Velg avdelinger");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem4610OrtopediTreeListCell
        {
            get
            {
                if ((this.mUIItem4610OrtopediTreeListCell == null))
                {
                    this.mUIItem4610OrtopediTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem4610OrtopediTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colCodeName";
                    this.mUIItem4610OrtopediTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem4610OrtopediTreeListCell.WindowTitles.Add("Velg avdelinger");
                    #endregion
                }
                return this.mUIItem4610OrtopediTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem4610OrtopediTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow151 : WinWindow
    {
        
        public UIItemWindow151()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            #endregion
        }
        
        #region Properties
        public UIGalleryDropDownBarCoMenu2 UIGalleryDropDownBarCoMenu
        {
            get
            {
                if ((this.mUIGalleryDropDownBarCoMenu == null))
                {
                    this.mUIGalleryDropDownBarCoMenu = new UIGalleryDropDownBarCoMenu2(this);
                }
                return this.mUIGalleryDropDownBarCoMenu;
            }
        }
        
        public UIPopupContainerBarConMenu1 UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu1(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIGalleryDropDownBarCoMenu2 mUIGalleryDropDownBarCoMenu;
        
        private UIPopupContainerBarConMenu1 mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGalleryDropDownBarCoMenu2 : DXMenu
    {
        
        public UIGalleryDropDownBarCoMenu2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GalleryDropDownBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GalleryDropDownBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIEndrefilterMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIEndrefilterMenuBaseButtonItem == null))
                {
                    this.mUIEndrefilterMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIEndrefilterMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[0]";
                    this.mUIEndrefilterMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIEndrefilterMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIEndrefilterMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupContainerBarConMenu1 : DXMenu
    {
        
        public UIPopupContainerBarConMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            #endregion
        }
        
        #region Properties
        public UIPccFilterNameClient UIPccFilterNameClient
        {
            get
            {
                if ((this.mUIPccFilterNameClient == null))
                {
                    this.mUIPccFilterNameClient = new UIPccFilterNameClient(this);
                }
                return this.mUIPccFilterNameClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPccFilterNameClient mUIPccFilterNameClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPccFilterNameClient : DXTestControl
    {
        
        public UIPccFilterNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pccFilterName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            #endregion
        }
        
        #region Properties
        public UIPnlFilterNameClient UIPnlFilterNameClient
        {
            get
            {
                if ((this.mUIPnlFilterNameClient == null))
                {
                    this.mUIPnlFilterNameClient = new UIPnlFilterNameClient(this);
                }
                return this.mUIPnlFilterNameClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlFilterNameClient mUIPnlFilterNameClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlFilterNameClient : DXTestControl
    {
        
        public UIPnlFilterNameClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlFilterName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public DXButton UIOKLagreButton
        {
            get
            {
                if ((this.mUIOKLagreButton == null))
                {
                    this.mUIOKLagreButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKLagreButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSaveFilterName";
                    this.mUIOKLagreButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    #endregion
                }
                return this.mUIOKLagreButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKLagreButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavemønsterWindow : DXWindow
    {
        
        public UIOppgavemønsterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppgavemønster";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public UIDbFooterCustom4 UIDbFooterCustom
        {
            get
            {
                if ((this.mUIDbFooterCustom == null))
                {
                    this.mUIDbFooterCustom = new UIDbFooterCustom4(this);
                }
                return this.mUIDbFooterCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDbFooterCustom4 mUIDbFooterCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDbFooterCustom4 : DXTestControl
    {
        
        public UIDbFooterCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dbFooter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSDialogFooterBar";
            this.WindowTitles.Add("Oppgavemønster");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Oppgavemønster");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDatabaseLoginWindow : WinWindow
    {
        
        public UIDatabaseLoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Database Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmADOLogin";
            this.WindowTitles.Add("Database Login");
            #endregion
        }
        
        #region Properties
        public UIStandardClient UIStandardClient
        {
            get
            {
                if ((this.mUIStandardClient == null))
                {
                    this.mUIStandardClient = new UIStandardClient(this);
                }
                return this.mUIStandardClient;
            }
        }
        #endregion
        
        #region Fields
        private UIStandardClient mUIStandardClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStandardClient : WinClient
    {
        
        public UIStandardClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Standard";
            this.WindowTitles.Add("Database Login");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Database Login");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Database Login");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIConnectionparametersWindow : WinWindow
    {
        
        public UIConnectionparametersWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Connection parameters";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmEditADOConnectionString";
            this.WindowTitles.Add("Connection parameters");
            #endregion
        }
        
        #region Properties
        public UIItemWindow20 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow20(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow110 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow110(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIConnectionparametersClient UIConnectionparametersClient
        {
            get
            {
                if ((this.mUIConnectionparametersClient == null))
                {
                    this.mUIConnectionparametersClient = new UIConnectionparametersClient(this);
                }
                return this.mUIConnectionparametersClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow20 mUIItemWindow;
        
        private UIItemWindow110 mUIItemWindow1;
        
        private UIConnectionparametersClient mUIConnectionparametersClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow20 : WinWindow
    {
        
        public UIItemWindow20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TBitBtn";
            this.WindowTitles.Add("Connection parameters");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.WindowTitles.Add("Connection parameters");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow110 : WinWindow
    {
        
        public UIItemWindow110(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Connection parameters");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Connection parameters");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIConnectionparametersClient : WinClient
    {
        
        public UIConnectionparametersClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Connection parameters";
            this.WindowTitles.Add("Connection parameters");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Connection parameters");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT2004AdvarselWindow : WinWindow
    {
        
        public UIGT2004AdvarselWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GT-2004 - Advarsel";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public UIItemWindow25 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow25(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow25 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow25 : WinWindow
    {
        
        public UIItemWindow25(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public UIGT2004AdvarselClient UIGT2004AdvarselClient
        {
            get
            {
                if ((this.mUIGT2004AdvarselClient == null))
                {
                    this.mUIGT2004AdvarselClient = new UIGT2004AdvarselClient(this);
                }
                return this.mUIGT2004AdvarselClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGT2004AdvarselClient mUIGT2004AdvarselClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGT2004AdvarselClient : WinClient
    {
        
        public UIGT2004AdvarselClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("GT-2004 - Advarsel");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("GT-2004 - Advarsel");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMinGatMinGatv2020120Window : BrowserWindow
    {
        
        public UIMinGatMinGatv2020120Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMinGatMinGatv2020120Document UIMinGatMinGatv2020120Document
        {
            get
            {
                if ((this.mUIMinGatMinGatv2020120Document == null))
                {
                    this.mUIMinGatMinGatv2020120Document = new UIMinGatMinGatv2020120Document(this);
                }
                return this.mUIMinGatMinGatv2020120Document;
            }
        }
        #endregion
        
        #region Fields
        private UIMinGatMinGatv2020120Document mUIMinGatMinGatv2020120Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMinGatMinGatv2020120Document : HtmlDocument
    {
        
        public UIMinGatMinGatv2020120Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "MinGat - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/mingat";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "internal.visma.com/mingat", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MinGat - MinGat v");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIBrukernavnEdit
        {
            get
            {
                if ((this.mUIBrukernavnEdit == null))
                {
                    this.mUIBrukernavnEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIBrukernavnEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "username";
                    this.mUIBrukernavnEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "username";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Brukernavn*";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"username\" id=\"username\" type=\"text";
                    this.mUIBrukernavnEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIBrukernavnEdit.WindowTitles.Add("MinGat - MinGat v.");
                    #endregion
                }
                return this.mUIBrukernavnEdit;
            }
        }
        
        public HtmlEdit UIPassordEdit
        {
            get
            {
                if ((this.mUIPassordEdit == null))
                {
                    this.mUIPassordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPassordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "password";
                    this.mUIPassordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "password";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Passord*";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"password\" id=\"password\" type=\"pass";
                    this.mUIPassordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIPassordEdit.WindowTitles.Add("MinGat - MinGat v.");
                    #endregion
                }
                return this.mUIPassordEdit;
            }
        }
        
        public UILogginnButton UILogginnButton
        {
            get
            {
                if ((this.mUILogginnButton == null))
                {
                    this.mUILogginnButton = new UILogginnButton(this);
                }
                return this.mUILogginnButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIBrukernavnEdit;
        
        private HtmlEdit mUIPassordEdit;
        
        private UILogginnButton mUILogginnButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILogginnButton : HtmlButton
    {
        
        public UILogginnButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlButton.PropertyNames.Id] = "btnLoginPage1";
            this.SearchProperties[HtmlButton.PropertyNames.Name] = null;
            this.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "\r\n\r\n\r\nLogg inn";
            this.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
            this.FilterProperties[HtmlButton.PropertyNames.Title] = null;
            this.FilterProperties[HtmlButton.PropertyNames.Class] = "gs-button kind-normal-green type-button ui-icon-size-normal";
            this.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"gs-button kind-normal-green type-";
            this.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
            this.WindowTitles.Add("MinGat - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UILogginnPane
        {
            get
            {
                if ((this.mUILogginnPane == null))
                {
                    this.mUILogginnPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUILogginnPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUILogginnPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Logg inn";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ui-caption no-select";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ui-caption no-select\"";
                    this.mUILogginnPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "28";
                    this.mUILogginnPane.WindowTitles.Add("MinGat - MinGat v.");
                    #endregion
                }
                return this.mUILogginnPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUILogginnPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStartsidenMinGatv202Window : BrowserWindow
    {
        
        public UIStartsidenMinGatv202Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Startsiden - MinGat v.";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Startsiden - MinGat v.");
            this.WindowTitles.Add("Påminnelser - MinGat v.");
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            this.WindowTitles.Add("Mine banker - MinGat v.");
            this.WindowTitles.Add("Ukevisning - MinGat v.");
            this.WindowTitles.Add("Oppgaver-tid - MinGat v.");
            this.WindowTitles.Add("Min kalender - MinGat v.");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIStartsidenMinGatv202Document UIStartsidenMinGatv202Document
        {
            get
            {
                if ((this.mUIStartsidenMinGatv202Document == null))
                {
                    this.mUIStartsidenMinGatv202Document = new UIStartsidenMinGatv202Document(this);
                }
                return this.mUIStartsidenMinGatv202Document;
            }
        }
        
        public UIPåminnelserMinGatv20Document UIPåminnelserMinGatv20Document
        {
            get
            {
                if ((this.mUIPåminnelserMinGatv20Document == null))
                {
                    this.mUIPåminnelserMinGatv20Document = new UIPåminnelserMinGatv20Document(this);
                }
                return this.mUIPåminnelserMinGatv20Document;
            }
        }
        
        public UIForespørslerMinGatv2Document UIForespørslerMinGatv2Document
        {
            get
            {
                if ((this.mUIForespørslerMinGatv2Document == null))
                {
                    this.mUIForespørslerMinGatv2Document = new UIForespørslerMinGatv2Document(this);
                }
                return this.mUIForespørslerMinGatv2Document;
            }
        }
        
        public UIMinebankerMinGatv202Document UIMinebankerMinGatv202Document
        {
            get
            {
                if ((this.mUIMinebankerMinGatv202Document == null))
                {
                    this.mUIMinebankerMinGatv202Document = new UIMinebankerMinGatv202Document(this);
                }
                return this.mUIMinebankerMinGatv202Document;
            }
        }
        
        public UIUkevisningMinGatv202Document UIUkevisningMinGatv202Document
        {
            get
            {
                if ((this.mUIUkevisningMinGatv202Document == null))
                {
                    this.mUIUkevisningMinGatv202Document = new UIUkevisningMinGatv202Document(this);
                }
                return this.mUIUkevisningMinGatv202Document;
            }
        }
        
        public UIOppgavertidMinGatv20Document UIOppgavertidMinGatv20Document
        {
            get
            {
                if ((this.mUIOppgavertidMinGatv20Document == null))
                {
                    this.mUIOppgavertidMinGatv20Document = new UIOppgavertidMinGatv20Document(this);
                }
                return this.mUIOppgavertidMinGatv20Document;
            }
        }
        
        public UIMinkalenderMinGatv20Document UIMinkalenderMinGatv20Document
        {
            get
            {
                if ((this.mUIMinkalenderMinGatv20Document == null))
                {
                    this.mUIMinkalenderMinGatv20Document = new UIMinkalenderMinGatv20Document(this);
                }
                return this.mUIMinkalenderMinGatv20Document;
            }
        }
        #endregion
        
        #region Fields
        private UIStartsidenMinGatv202Document mUIStartsidenMinGatv202Document;
        
        private UIPåminnelserMinGatv20Document mUIPåminnelserMinGatv20Document;
        
        private UIForespørslerMinGatv2Document mUIForespørslerMinGatv2Document;
        
        private UIMinebankerMinGatv202Document mUIMinebankerMinGatv202Document;
        
        private UIUkevisningMinGatv202Document mUIUkevisningMinGatv202Document;
        
        private UIOppgavertidMinGatv20Document mUIOppgavertidMinGatv20Document;
        
        private UIMinkalenderMinGatv20Document mUIMinkalenderMinGatv20Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStartsidenMinGatv202Document : HtmlDocument
    {
        
        public UIStartsidenMinGatv202Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Startsiden - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".internal.visma.com/MinGat/Employee/Home#!/start/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Startsiden - MinGat v.");
            this.WindowTitles.Add("Påminnelser - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        
        public UIMinGatPane UIMinGatPane
        {
            get
            {
                if ((this.mUIMinGatPane == null))
                {
                    this.mUIMinGatPane = new UIMinGatPane(this);
                }
                return this.mUIMinGatPane;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom mUIRootQuickNavCustom;
        
        private UIMinGatPane mUIMinGatPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootQuickNavCustom : HtmlCustom
    {
        
        public UIRootQuickNavCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Startsiden - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItem2Hyperlink
        {
            get
            {
                if ((this.mUIItem2Hyperlink == null))
                {
                    this.mUIItem2Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItem2Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItem2Hyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/MinGat/Employee/Home#!/reminders/", PropertyExpressionOperator.Contains));
                    this.mUIItem2Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/reminders/\"";
                    this.mUIItem2Hyperlink.WindowTitles.Add("Startsiden - MinGat v.");
                    #endregion
                }
                return this.mUIItem2Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItem2Hyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMinGatPane : HtmlDiv
    {
        
        public UIMinGatPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "mingat_employee";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "MinGat\r\n \r\n ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "mg-main-menu-button";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"mg-main-menu-button\" id=\"mingat_employee\" data-bind=\"click: toggleMainMenu" +
                ".bind($data), css: { \'menu-open\': ShowMainMenu }\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Startsiden - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIMinGatPane1
        {
            get
            {
                if ((this.mUIMinGatPane1 == null))
                {
                    this.mUIMinGatPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMinGatPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "MinGat";
                    this.mUIMinGatPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "caption";
                    this.mUIMinGatPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"caption\" data-bind=\"text: MenuTitle\"";
                    this.mUIMinGatPane1.WindowTitles.Add("Startsiden - MinGat v.");
                    #endregion
                }
                return this.mUIMinGatPane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIMinGatPane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPåminnelserMinGatv20Document : HtmlDocument
    {
        
        public UIPåminnelserMinGatv20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Påminnelser - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".internal.visma.com/MinGat/Employee/Home#!/reminders/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Påminnelser - MinGat v.");
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom1 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom1(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom1 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootQuickNavCustom1 : HtmlCustom
    {
        
        public UIRootQuickNavCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Påminnelser - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItem0Hyperlink
        {
            get
            {
                if ((this.mUIItem0Hyperlink == null))
                {
                    this.mUIItem0Hyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItem0Hyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/MinGat/Employee/Home#!/selfservicelist/", PropertyExpressionOperator.Contains));
                    this.mUIItem0Hyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/selfservicelist/\"";
                    this.mUIItem0Hyperlink.WindowTitles.Add("Påminnelser - MinGat v.");
                    #endregion
                }
                return this.mUIItem0Hyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItem0Hyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIForespørslerMinGatv2Document : HtmlDocument
    {
        
        public UIForespørslerMinGatv2Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Forespørsler - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".internal.visma.com/MinGat/Employee/Home#!/selfservicelist/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            this.WindowTitles.Add("Mine banker - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom2 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom2(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        
        public UIMgmenufooterwrapperPane UIMgmenufooterwrapperPane
        {
            get
            {
                if ((this.mUIMgmenufooterwrapperPane == null))
                {
                    this.mUIMgmenufooterwrapperPane = new UIMgmenufooterwrapperPane(this);
                }
                return this.mUIMgmenufooterwrapperPane;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom2 mUIRootQuickNavCustom;
        
        private UIMgmenufooterwrapperPane mUIMgmenufooterwrapperPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootQuickNavCustom2 : HtmlCustom
    {
        
        public UIRootQuickNavCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "\\ ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/MinGat/Employee/Home#!/employee/mybanks/", PropertyExpressionOperator.Contains));
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/employee/mybanks/\"";
                    this.mUIItemHyperlink.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMgmenufooterwrapperPane : HtmlDiv
    {
        
        public UIMgmenufooterwrapperPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "mg-menu-footer-wrapper";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties.Add(new PropertyExpression(HtmlDiv.PropertyNames.InnerText, "Tidssone: Euro", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = "";
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"mg-menu-footer-wrapper\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "91";
            this.WindowTitles.Add("Forespørsler - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UILoggutPane
        {
            get
            {
                if ((this.mUILoggutPane == null))
                {
                    this.mUILoggutPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUILoggutPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUILoggutPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILoggutPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Logg ut";
                    this.mUILoggutPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILoggutPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "logout";
                    this.mUILoggutPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"logout\"";
                    this.mUILoggutPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "15";
                    this.mUILoggutPane.WindowTitles.Add("Forespørsler - MinGat v.");
                    #endregion
                }
                return this.mUILoggutPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUILoggutPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMinebankerMinGatv202Document : HtmlDocument
    {
        
        public UIMinebankerMinGatv202Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Mine banker - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".internal.visma.com/MinGat/Employee/Home#!/employee/mybanks/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Mine banker - MinGat v.");
            this.WindowTitles.Add("Ukevisning - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom3 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom3(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom3 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootQuickNavCustom3 : HtmlCustom
    {
        
        public UIRootQuickNavCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Mine banker - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "\\ ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/MinGat/Employee/Home#!/department/weeklist/", PropertyExpressionOperator.Contains));
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/weeklist/\"";
                    this.mUIItemHyperlink.WindowTitles.Add("Mine banker - MinGat v.");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUkevisningMinGatv202Document : HtmlDocument
    {
        
        public UIUkevisningMinGatv202Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Ukevisning - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".internal.visma.com/MinGat/Employee/Home#!/department/weeklist/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ukevisning - MinGat v.");
            this.WindowTitles.Add("Oppgaver-tid - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom4 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom4(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom4 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootQuickNavCustom4 : HtmlCustom
    {
        
        public UIRootQuickNavCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Ukevisning - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "\\ ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/MinGat/Employee/Home#!/department/taskoverview/", PropertyExpressionOperator.Contains));
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/taskoverview/\"";
                    this.mUIItemHyperlink.WindowTitles.Add("Ukevisning - MinGat v.");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppgavertidMinGatv20Document : HtmlDocument
    {
        
        public UIOppgavertidMinGatv20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Oppgaver-tid - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "internal.visma.com/MinGat/Employee/Home#!/department/taskoverview/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppgaver-tid - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom5 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom5(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom5 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootQuickNavCustom5 : HtmlCustom
    {
        
        public UIRootQuickNavCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Oppgaver-tid - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "\\ ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/MinGat/Employee/Home#!/department/shiftbook/", PropertyExpressionOperator.Contains));
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/department/shiftbook/\"";
                    this.mUIItemHyperlink.WindowTitles.Add("Oppgaver-tid - MinGat v.");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMinkalenderMinGatv20Document : HtmlDocument
    {
        
        public UIMinkalenderMinGatv20Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Min kalender - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, "internal.visma.com/MinGat/Employee/Home#!/employee/mycalendar?view=mcViewMonth&cu" +
                        "rrentDate=2020-09-01&empGuid=", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Min kalender - MinGat v.");
            this.WindowTitles.Add("Startsiden - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom6 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom6(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom6 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootQuickNavCustom6 : HtmlCustom
    {
        
        public UIRootQuickNavCustom6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Min kalender - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "\\ ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/MinGat/Employee/Home#!/start/", PropertyExpressionOperator.Contains));
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/start/\"";
                    this.mUIItemHyperlink.WindowTitles.Add("Min kalender - MinGat v.");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVaktbokMinGatv202012Window : BrowserWindow
    {
        
        public UIVaktbokMinGatv202012Window()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Vaktbok - MinGat v.";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Vaktbok - MinGat v.");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIVaktbokMinGatv202012Document UIVaktbokMinGatv202012Document
        {
            get
            {
                if ((this.mUIVaktbokMinGatv202012Document == null))
                {
                    this.mUIVaktbokMinGatv202012Document = new UIVaktbokMinGatv202012Document(this);
                }
                return this.mUIVaktbokMinGatv202012Document;
            }
        }
        #endregion
        
        #region Fields
        private UIVaktbokMinGatv202012Document mUIVaktbokMinGatv202012Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVaktbokMinGatv202012Document : HtmlDocument
    {
        
        public UIVaktbokMinGatv202012Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.Title, "Vaktbok - MinGat v.", PropertyExpressionOperator.Contains));
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
            this.FilterProperties.Add(new PropertyExpression(HtmlDocument.PropertyNames.PageUrl, ".internal.visma.com/MinGat/Employee/Home#!/department/shiftbook/", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Vaktbok - MinGat v.");
            #endregion
        }
        
        #region Properties
        public UIRootQuickNavCustom7 UIRootQuickNavCustom
        {
            get
            {
                if ((this.mUIRootQuickNavCustom == null))
                {
                    this.mUIRootQuickNavCustom = new UIRootQuickNavCustom7(this);
                }
                return this.mUIRootQuickNavCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRootQuickNavCustom7 mUIRootQuickNavCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootQuickNavCustom7 : HtmlCustom
    {
        
        public UIRootQuickNavCustom7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "rootQuickNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"rootQuickNav\" data-bind=\"with: Frame";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Vaktbok - MinGat v.");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIItemHyperlink
        {
            get
            {
                if ((this.mUIItemHyperlink == null))
                {
                    this.mUIItemHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIItemHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "\\ ";
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/MinGat/Employee/Home";
                    this.mUIItemHyperlink.FilterProperties.Add(new PropertyExpression(HtmlHyperlink.PropertyNames.Href, "/MinGat/Employee/Home#!/employee/mycalendar/", PropertyExpressionOperator.Contains));
                    this.mUIItemHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#!/employee/mycalendar/\"";
                    this.mUIItemHyperlink.WindowTitles.Add("Vaktbok - MinGat v.");
                    #endregion
                }
                return this.mUIItemHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIItemHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIInternetInformationSWindow : WinWindow
    {
        
        public UIInternetInformationSWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Internet Information Services (IIS) Manager";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UI_treeViewWindow UI_treeViewWindow
        {
            get
            {
                if ((this.mUI_treeViewWindow == null))
                {
                    this.mUI_treeViewWindow = new UI_treeViewWindow(this);
                }
                return this.mUI_treeViewWindow;
            }
        }
        
        public UI_listViewWindow UI_listViewWindow
        {
            get
            {
                if ((this.mUI_listViewWindow == null))
                {
                    this.mUI_listViewWindow = new UI_listViewWindow(this);
                }
                return this.mUI_listViewWindow;
            }
        }
        
        public UIInternetInformationSTitleBar UIInternetInformationSTitleBar
        {
            get
            {
                if ((this.mUIInternetInformationSTitleBar == null))
                {
                    this.mUIInternetInformationSTitleBar = new UIInternetInformationSTitleBar(this);
                }
                return this.mUIInternetInformationSTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UI_treeViewWindow mUI_treeViewWindow;
        
        private UI_listViewWindow mUI_listViewWindow;
        
        private UIInternetInformationSTitleBar mUIInternetInformationSTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_treeViewWindow : WinWindow
    {
        
        public UI_treeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_treeView";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UINOLABWS0018INTERNALgTreeItem UINOLABWS0018INTERNALgTreeItem
        {
            get
            {
                if ((this.mUINOLABWS0018INTERNALgTreeItem == null))
                {
                    this.mUINOLABWS0018INTERNALgTreeItem = new UINOLABWS0018INTERNALgTreeItem(this);
                }
                return this.mUINOLABWS0018INTERNALgTreeItem;
            }
        }
        
        public UINOLABWS0018INTERNALgTreeItem1 UINOLABWS0018INTERNALgTreeItem1
        {
            get
            {
                if ((this.mUINOLABWS0018INTERNALgTreeItem1 == null))
                {
                    this.mUINOLABWS0018INTERNALgTreeItem1 = new UINOLABWS0018INTERNALgTreeItem1(this);
                }
                return this.mUINOLABWS0018INTERNALgTreeItem1;
            }
        }
        
        public UINOLABWS0018INTERNALgTreeItem2 UINOLABWS0018INTERNALgTreeItem2
        {
            get
            {
                if ((this.mUINOLABWS0018INTERNALgTreeItem2 == null))
                {
                    this.mUINOLABWS0018INTERNALgTreeItem2 = new UINOLABWS0018INTERNALgTreeItem2(this);
                }
                return this.mUINOLABWS0018INTERNALgTreeItem2;
            }
        }
        #endregion
        
        #region Fields
        private UINOLABWS0018INTERNALgTreeItem mUINOLABWS0018INTERNALgTreeItem;
        
        private UINOLABWS0018INTERNALgTreeItem1 mUINOLABWS0018INTERNALgTreeItem1;
        
        private UINOLABWS0018INTERNALgTreeItem2 mUINOLABWS0018INTERNALgTreeItem2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINOLABWS0018INTERNALgTreeItem : WinTreeItem
    {
        
        public UINOLABWS0018INTERNALgTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL\\", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UISitesTreeItem UISitesTreeItem
        {
            get
            {
                if ((this.mUISitesTreeItem == null))
                {
                    this.mUISitesTreeItem = new UISitesTreeItem(this);
                }
                return this.mUISitesTreeItem;
            }
        }
        
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UISitesTreeItem mUISitesTreeItem;
        
        private WinTreeItem mUIApplicationPoolsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISitesTreeItem : WinTreeItem
    {
        
        public UISitesTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Sites";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIDefaultWebSiteTreeItem UIDefaultWebSiteTreeItem
        {
            get
            {
                if ((this.mUIDefaultWebSiteTreeItem == null))
                {
                    this.mUIDefaultWebSiteTreeItem = new UIDefaultWebSiteTreeItem(this);
                }
                return this.mUIDefaultWebSiteTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultWebSiteTreeItem mUIDefaultWebSiteTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDefaultWebSiteTreeItem : WinTreeItem
    {
        
        public UIDefaultWebSiteTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Default Web Site";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIMinGatTreeItem
        {
            get
            {
                if ((this.mUIMinGatTreeItem == null))
                {
                    this.mUIMinGatTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIMinGatTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "MinGat";
                    this.mUIMinGatTreeItem.SearchProperties["Value"] = "3";
                    this.mUIMinGatTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIMinGatTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIMinGatTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIMinGatTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIMinGatTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINOLABWS0018INTERNALgTreeItem1 : WinTreeItem
    {
        
        public UINOLABWS0018INTERNALgTreeItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL\\", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIApplicationPoolsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINOLABWS0018INTERNALgTreeItem2 : WinTreeItem
    {
        
        public UINOLABWS0018INTERNALgTreeItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL\\", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIApplicationPoolsTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_listViewWindow : WinWindow
    {
        
        public UI_listViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_listView";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UI_listViewList UI_listViewList
        {
            get
            {
                if ((this.mUI_listViewList == null))
                {
                    this.mUI_listViewList = new UI_listViewList(this);
                }
                return this.mUI_listViewList;
            }
        }
        #endregion
        
        #region Fields
        private UI_listViewList mUI_listViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UI_listViewList : WinList
    {
        
        public UI_listViewList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Application Pools";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinListItem UIMinGatListItem
        {
            get
            {
                if ((this.mUIMinGatListItem == null))
                {
                    this.mUIMinGatListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIMinGatListItem.SearchProperties[WinListItem.PropertyNames.Name] = "MinGat";
                    this.mUIMinGatListItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIMinGatListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIMinGatListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIInternetInformationSTitleBar : WinTitleBar
    {
        
        public UIInternetInformationSTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow161 : WinWindow
    {
        
        public UIItemWindow161()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDropDownMenu UIDropDownMenu
        {
            get
            {
                if ((this.mUIDropDownMenu == null))
                {
                    this.mUIDropDownMenu = new UIDropDownMenu(this);
                }
                return this.mUIDropDownMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIDropDownMenu mUIDropDownMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDropDownMenu : WinMenu
    {
        
        public UIDropDownMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "DropDown";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIRemoveMenuItem
        {
            get
            {
                if ((this.mUIRemoveMenuItem == null))
                {
                    this.mUIRemoveMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIRemoveMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Remove";
                    #endregion
                }
                return this.mUIRemoveMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIRemoveMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIConfirmRemoveWindow : WinWindow
    {
        
        public UIConfirmRemoveWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Confirm Remove";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Confirm Remove");
            #endregion
        }
        
        #region Properties
        public UIYesWindow1 UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow1(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow1 mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIYesWindow1 : WinWindow
    {
        
        public UIYesWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Confirm Remove");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Confirm Remove");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
}
