// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CommonUIFunctions
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CancelSaveRosterplanTasks
        /// </summary>
        public void CancelSaveRosterplanTasks()
        {
            #region Variable Declarations
            DXButton uIAvbrytButton = this.UIRPL4055InformasjonWindow.UIAvbrytButton;
            #endregion

            // Click '&Avbryt' button
            Mouse.Click(uIAvbrytButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CheckDayRythmplanFromdate - Use 'CheckDayRythmplanFromdateExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckDayRythmplanFromdate()
        {
            #region Variable Declarations
            DXDateTimePicker uIPceDateDateTimeEdit = this.UIDøgnrytmelagWindow.UIGsMainControlNavBar.UINbgccDetailsScrollableControl.UIDtFromDateCustom.UIPceDateDateTimeEdit;
            #endregion

            // Verify that the 'Name' property of 'pceDate' DateTimeEdit equals 'pceDate'
            Assert.AreEqual(this.CheckDayRythmplanFromdateExpectedValues.UIPceDateDateTimeEditName, uIPceDateDateTimeEdit.Name);
        }
        
        /// <summary>
        /// CheckEndDateForRosterplanFirstRotation - Use 'CheckEndDateForRosterplanFirstRotationExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEndDateForRosterplanFirstRotation()
        {
            #region Variable Declarations
            DXDateTimePicker uIPceDateDateTimeEdit = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIEStopDateCustom.UIPceDateDateTimeEdit;
            #endregion

            // Verify that the 'ValueAsString' property of 'pceDate' DateTimeEdit equals '2016-01-24'
            Assert.AreEqual(this.CheckEndDateForRosterplanFirstRotationExpectedValues.UIPceDateDateTimeEditValueAsString, uIPceDateDateTimeEdit.ValueAsString, "Feil sluttdato for første rullering(arbeidsplan)");
        }
        
        /// <summary>
        /// CheckLayerRotateToDays - Use 'CheckLayerRotateToDaysExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckLayerRotateToDays()
        {
            #region Variable Declarations
            DXTestControl uILblToDateCommentLabel = this.UIDøgnrytmelagWindow.UIGsMainControlNavBar.UINbgccDetailsScrollableControl.UILblToDateCommentLabel;
            #endregion

            // Verify that the 'Text' property of 'lblToDateComment' label equals 'Antall dager: 112'
            Assert.AreEqual(this.CheckLayerRotateToDaysExpectedValues.UILblToDateCommentLabelText, uILblToDateCommentLabel.Text, "Feil antall dager");
        }
        public bool CheckStatusNightShiftsOnStartDay()
        {
            #region Variable Declarations
            DXCheckBox uIChkNighShiftOnStartDCheckBox = this.UIArbeidsplanInnstilliWindow.UITcDataTabList1.UITpConfigurationClient.UIPaCenterClient.UIChkNighShiftOnStartDCheckBox;
            #endregion

           return uIChkNighShiftOnStartDCheckBox.Checked;
        }
        /// <summary>
        /// CheckNightShiftsOnStartDay - Use 'CheckNightShiftsOnStartDayParams' to pass parameters into this method.
        /// </summary>
        public void CheckNightShiftsOnStartDay()
        {
            #region Variable Declarations
            DXCheckBox uIChkNighShiftOnStartDCheckBox = this.UIArbeidsplanInnstilliWindow.UITcDataTabList1.UITpConfigurationClient.UIPaCenterClient.UIChkNighShiftOnStartDCheckBox;
            #endregion

            // Select 'chkNighShiftOnStartDay' check box
            uIChkNighShiftOnStartDCheckBox.Checked = this.CheckNightShiftsOnStartDayParams.UIChkNighShiftOnStartDCheckBoxChecked;
        }
        
        /// <summary>
        /// UnCheckNightShiftsOnStartDay - Use 'UnCheckNightShiftsOnStartDayParams' to pass parameters into this method.
        /// </summary>
        public void UnCheckNightShiftsOnStartDay()
        {
            #region Variable Declarations
            DXCheckBox uIChkNighShiftOnStartDCheckBox = this.UIArbeidsplanInnstilliWindow.UITcDataTabList1.UITpConfigurationClient.UIPaCenterClient.UIChkNighShiftOnStartDCheckBox;
            #endregion

            // Clear 'chkNighShiftOnStartDay' check box
            uIChkNighShiftOnStartDCheckBox.Checked = this.UnCheckNightShiftsOnStartDayParams.UIChkNighShiftOnStartDCheckBoxChecked;
        }

        /// <summary>
        /// ClearOtherDepartments
        /// </summary>
        public void ClearOtherDepartments()
        {
            #region Variable Declarations
            DXButton uIVelgingenButton = this.UINivåWindow.UIGsLayoutControl1Custom1.UILayoutControlGroup1LayoutGroup.UILayOtherDepartmentsLayoutControlItem.UIGbOtherDepartmentsClient.UIPanOtherDepsButtonsClient.UIVelgingenButton;
            #endregion

            // Click 'Velg ingen' button
            Mouse.Click(uIVelgingenButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickAddEmployeesFromBaseplanButtonInEmployeeWindow
        /// </summary>
        public void ClickAddEmployeesFromBaseplanButtonInEmployeeWindow()
        {
            #region Variable Declarations
            DXButton uIDropDownButtonArrowBButton = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UIAnsatteButton.UIDropDownButtonArrowBButton;
            DXMenuBaseButtonItem uIBbiAddFromHelpPlanMenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu1.UIBbiAddFromHelpPlanMenuBaseButtonItem;
            #endregion

            // Click 'DropDownButtonArrowButton' button
            Mouse.Click(uIDropDownButtonArrowBButton, new Point(5, 8));

            // Click 'bbiAddFromHelpPlan' MenuBaseButtonItem
            Mouse.Click(uIBbiAddFromHelpPlanMenuBaseButtonItem, new Point(95, 10));
        }
        
        /// <summary>
        /// ClickCancelEditDoNotSaveRosterPlan
        /// </summary>
        public void ClickDiscardChangesToRosterplan()
        {
            #region Variable Declarations
            DXButton uISimpleButtonButton = this.UIItemWindow6.UISimpleButtonButton;
            #endregion

            // Click 'SimpleButton' button
            Mouse.Click(uISimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickCancelEditRosterPlanFromPlantab
        /// </summary>
        public void ClickCancelEditRosterPlanFromPlantab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIAvbrytRibbonBaseButtonItem = this.UIArbeidsplanYTELSEKalWindow1.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRibbonPageGroup9RibbonPageGroup.UIAvbrytRibbonBaseButtonItem;
            #endregion

            // Click 'Avbryt' RibbonBaseButtonItem
            Mouse.Click(uIAvbrytRibbonBaseButtonItem, new Point(38, 8));
        }
        
        /// <summary>
        /// ClickChangeDepartmentButton
        /// </summary>
        public void ClickChangeDepartmentButton()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uINivåBarBaseButtonItem = this.GatMain.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UINivåBarBaseButtonItem;
            #endregion
            
            // Click 'Nivå' BarBaseButtonItem
            Mouse.Click(uINivåBarBaseButtonItem, new Point(36, 11));
        }
        
        /// <summary>
        /// ClickChangeDepartmentFromRosterplanButton
        /// </summary>
        public void ClickChangeDepartmentFromRosterplanButton()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINivåRibbonBaseButtonItem = this.GatMain_09.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIRosterPlanListCustom.UIPnlGridClient.UIRibbonControlRibbon.UIRpHomeRibbonPage.UIRpgLevelRibbonPageGroup.UINivåRibbonBaseButtonItem;
            #endregion

            // Click 'Nivå' RibbonBaseButtonItem
            Mouse.Click(uINivåRibbonBaseButtonItem, new Point(21, 40));
        }

        /// <summary>
        /// ClickChangePeriodForActualLinesButton
        /// </summary>
        public void ClickChangePeriodForActualLinesButton()
        {
            #region Variable Declarations
            DXButton uIEndreperiodeforavkryButton = this.UIIverksetteWindow.UIPnlButtonsClient.UIEndreperiodeforavkryButton;
            //UIIverksetteWindow.DrawHighlight();
            #endregion

            //if (UIMapVS2017.CheckProgressbarActive(true))
                Mouse.Click(uIEndreperiodeforavkryButton);
        }

   

        /// <summary>
        /// ClickDeleteRosterplanButton
        /// </summary>
        public void ClickDeleteRosterplanButton()
        {
            #region Variable Declarations
            DXRibbonButtonItem uISlettRibbonBaseButtonItem = this.GatMain_09.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIRosterPlanListCustom.UIPnlGridClient.UIRibbonControlRibbon.UIRpHomeRibbonPage.UIRpgPlanRibbonPageGroup.UISlettRibbonBaseButtonItem;
            DXButton uIGSSimpleButtonButton = this.GT_4001_Informasjon.UIGSSimpleButtonButton;
            #endregion

            // Click 'Slett' RibbonBaseButtonItem
            Mouse.Click(uISlettRibbonBaseButtonItem, new Point(24, 25));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }

        public void DeleteRosterplans(List<string> plans)
        {
            foreach (var plan in plans)
            {
                SelectRosterPlan(plan, false);
                ClickDeleteRosterplanButton();
            }
        }

        /// <summary>
        /// ClickEmployeesButtonInEmployeeWindow
        /// </summary>
        public void ClickEmployeesButtonInEmployeeWindow()
        {
            #region Variable Declarations
            DXButton uIAnsatteButton = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UIAnsatteButton;
            #endregion

            // Click 'Ansatte...' button
            Mouse.Click(uIAnsatteButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickEmployeesButtonRosterplan
        /// </summary>
        public void ClickEmployeesButtonRosterplan()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIAnsatteRibbonBaseButtonItem = this.UIArbeidsplanYTELSEKalWindow.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRpgPlanRibbonPageGroup.UIAnsatteRibbonBaseButtonItem;
            #endregion

            // Click 'Ansatte' RibbonBaseButtonItem
            Mouse.Click(uIAnsatteRibbonBaseButtonItem, new Point(21, 25));
        }
        /// <summary>
        /// ClickNewBasePlanCopy
        /// </summary>
        public void ClickNewBasePlanCopy()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINybaseplanRibbonBaseButtonItem = this.UIArbeidsplanWindow9.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRpgPlanCopyRosterRibbonPageGroup.UINybaseplanRibbonBaseButtonItem;
            #endregion

            // Click 'Ny baseplan...' RibbonBaseButtonItem
            Mouse.Click(uINybaseplanRibbonBaseButtonItem, new Point(58, 11));
        }
        
        /// <summary>
        /// ClickNewEmployeeFromEmployeeTab
        /// </summary>
        public void ClickNewEmployeeFromEmployeeTab()
        {
            #region Variable Declarations
            WinClient uIAnsattClient = this.UIGatver66043545ASCLAvWindow.UIItemWindow.UIAnsattClient;
            #endregion

            // Click 'Ansatt' client
            Mouse.Click(uIAnsattClient, new Point(19, 16));
        }

        /// <summary>
        /// ClickNewRosterplanButton
        /// </summary>
        public void ClickNewRosterplanButton()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINYRibbonBaseButtonItem = this.GatMain_09.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIRosterPlanListCustom.UIPnlGridClient.UIRibbonControlRibbon.UIRpHomeRibbonPage.UIRpgPlanRibbonPageGroup.UINYRibbonBaseButtonItem;
            #endregion

            // Click 'Ny' RibbonBaseButtonItem
            Mouse.Click(uINYRibbonBaseButtonItem, new Point(19, 26));
        }
        
        /// <summary>
        /// ClickNewRosterPlanCopy
        /// </summary>
        public void ClickNewRosterPlanCopy()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINyarbeidsplanRibbonBaseButtonItem = this.UIArbeidsplanWindow9.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRpgPlanCopyRosterRibbonPageGroup.UINyarbeidsplanRibbonBaseButtonItem;
            #endregion

            // Click 'Ny arbeidsplan...' RibbonBaseButtonItem
            Mouse.Click(uINyarbeidsplanRibbonBaseButtonItem, new Point(47, 10));
        }
        
        /// <summary>
        /// ClickOkAddEmployeesFromBaseplanWindow
        /// </summary>
        public void ClickOkAddEmployeesFromBaseplanWindow()
        {
            #region Variable Declarations
            DXButton uISimpleButtonButton = this.UILeggtilansatteWindow.UISimpleButtonButton;
            #endregion

            // Click 'SimpleButton' button
            Mouse.Click(uISimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkAddEmployeesWindow
        /// </summary>
        public void ClickOkAddEmployeesWindow()
        {
            #region Variable Declarations
            DXButton uISimpleButtonButton = this.UILeggtilansatteWindow.UISimpleButtonButton;
            #endregion

            // Click 'SimpleButton' button
            Mouse.Click(uISimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkChangePeriodForActualLinesButton
        /// </summary>
        public void ClickOkChangePeriodForActualLinesButton()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIEndreiverksettingspeWindow.UIPnlButtonsClient1.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkCreateHelpPlan
        /// </summary>
        public void ClickOkCreateHelpPlan()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UINyhjelpeplanWindow.UIPnlButtonsClient.UIOKButton;
            DXButton uIOKButton1 = this.UIGT3999InformasjonWindow.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));

            // Click '&OK' button
            Mouse.Click(uIOKButton1, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOKEditRosterPlanFromPlantab
        /// </summary>
        public void ClickOKEditRosterPlanFromPlantab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnOkRibbonBaseButtonItem = this.UIArbeidsplanYTELSEKalWindow1.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRibbonPageGroup9RibbonPageGroup.UIBtnOkRibbonBaseButtonItem;
            #endregion

            // Click 'btnOk' RibbonBaseButtonItem
            Mouse.Click(uIBtnOkRibbonBaseButtonItem, new Point(30, 13));
        }
        
        /// <summary>
        /// ClickOkEFOnoBudgetDialog
        /// </summary>
        public void ClickOkEFOnoBudgetDialog()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIEFO3000GatWindow.UIItemWindow.UIEFO3000GatClient.UIOKButton;
            #endregion

            // Click '&OK' button
            Mouse.Click(uIOKButton, new Point(37, 13));
        }
        
        /// <summary>
        /// ClickOkEmployeesWindow
        /// </summary>
        public void ClickOkEmployeesWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UIAnsatteiarbeidsplanWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOkGatRun
        /// </summary>
        public void ClickOkGatRun()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIDatabaseLoginWindow.UIStandardClient.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(26, 22));
        }
        
        /// <summary>
        /// ClickOkRosterplanSettings
        /// </summary>
        public void ClickOkRosterplanSettings()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIArbeidsplanInnstilliWindow.UIGSPanelControlClient.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// ClickOpenRosterplanButton
        /// </summary>
        public void ClickOpenRosterplanButton()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIÅpneRibbonBaseButtonItem = this.GatMain.UIViewHostCustom.UIPcViewClient.UIPcMainPanelClient.UITcPanListsTabList.UITpRosterPlanListClient.UIRosterPlanListCustom.UIPnlGridClient.UIRibbonControlRibbon.UIRpHomeRibbonPage.UIRpgPlanRibbonPageGroup.UIÅpneRibbonBaseButtonItem;
            #endregion

            // Click 'Åpne' RibbonBaseButtonItem
            Mouse.Click(uIÅpneRibbonBaseButtonItem, new Point(18, 20));
        }
        
        /// <summary>
        /// ClickRosterplanFilterTab
        /// </summary>
        public void ClickRosterplanFilterTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpFilterRibbonPage = this.UIArbeidsplanWindow3.UIRcMenuRibbon.UIRpFilterRibbonPage;
            #endregion

            // Click 'rpFilter' RibbonPage
            Mouse.Click(uIRpFilterRibbonPage, new Point(47, 8));
        }
        
        /// <summary>
        /// ClickRosterplanHomeTab
        /// </summary>
        public void ClickRosterplanHomeTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpRosterPlanRibbonPage = this.UIArbeidsplanWindow2.UIRcMenuRibbon.UIRpRosterPlanRibbonPage;
            #endregion

            // Click 'rpRosterPlan' RibbonPage
            Mouse.Click(uIRpRosterPlanRibbonPage, new Point(26, 11));
        }
        
        /// <summary>
        /// ClickRosterplanLayout
        /// </summary>
        public void ClickRosterplanLayout()
        {
            #region Variable Declarations
            Playback.Wait(3000);
            DXRibbonButtonItem uIOppsettRibbonBaseButtonItem = this.UIArbeidsplanYTELSEKalWindow.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRpgPlanRibbonPageGroup.UIOppsettRibbonBaseButtonItem;
            #endregion
            
            // Click 'Oppsett' RibbonBaseButtonItem
            Mouse.Click(uIOppsettRibbonBaseButtonItem, new Point(28, 24));
        }
        
        /// <summary>
        /// ClickRosterplanPlanTab
        /// </summary>
        public void ClickRosterplanPlanTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpPlanRibbonPage = this.UIArbeidsplanWindow1.UIRcMenuRibbon.UIRpPlanRibbonPage;
            #endregion

            // Click 'rpPlan' RibbonPage
            Mouse.Click(uIRpPlanRibbonPage, new Point(23, 9));
        }
        
        /// <summary>
        /// ClickRosterplanPrintTab
        /// </summary>
        public void ClickRosterplanPrintTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpPrintRibbonPage = this.UIArbeidsplanWindow4.UIRcMenuRibbon.UIRpPrintRibbonPage;
            #endregion

            // Click 'rpPrint' RibbonPage
            Mouse.Click(uIRpPrintRibbonPage, new Point(32, 10));
        }

        /// <summary>
        /// ClickRosterplanSupportToolTab
        /// </summary>
        public void ClickRosterplanSupportToolTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpSupportToolsRibbonPage = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpSupportToolsRibbonPage;
            #endregion

            // Click 'rpSupportTools' RibbonPage
            Mouse.Click(uIRpSupportToolsRibbonPage, new Point(47, 10));
        }
        
        /// <summary>
        /// ClickRosterplanTaskAssignment
        /// </summary>
        public void ClickRosterplanRoleAssignment()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIOppgavetildelingRibbonBaseButtonItem = this.UIArbeidsplanYTELSEKalWindow.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRpgPlanRibbonPageGroup.UIOppgavetildelingRibbonBaseButtonItem;
            #endregion

            // Click 'Oppgavetildeling' RibbonBaseButtonItem
            Mouse.Click(uIOppgavetildelingRibbonBaseButtonItem, new Point(38, 25));
        }
        
        /// <summary>
        /// CloseAboutGatWindow
        /// </summary>
        public void CloseAboutGatWindow()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIOMWindow1.UIOMTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 12));
        }
        
        /// <summary>
        /// CloseDeleteEffectuationOkWindow
        /// </summary>
        public void CloseDeleteEffectuationOkWindow()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIItemWindow5.UIGSSimpleButtonButton;
            #endregion

            UIItemWindow5.WaitForControlExist(600000);

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton);
        }
        
        /// <summary>
        /// CloseGat
        /// </summary>
        public void CloseGat()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIGatWindow.UIGatTitleBar.UICloseButton;
            WinButton uIJAButton = this.UIGT4000BekreftWindow.UIItemWindow.UIGT4000BekreftClient.UIJAButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 8));

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(36, 11));
        }
        
        /// <summary>
        /// CloseRosterplanFromPlanTab
        /// </summary>
        public void CloseRosterplanFromPlanTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnCloseRibbonBaseButtonItem = this.UIArbeidsplanYTELSEKalWindow.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRibbonPageGroup17RibbonPageGroup.UIBtnCloseRibbonBaseButtonItem;
            #endregion

            // Click 'btnClose' RibbonBaseButtonItem
            Mouse.Click(uIBtnCloseRibbonBaseButtonItem, new Point(28, 32));
        }
        /// </summary>
        public void CloseRosterplanFromHomeTab()
        {
            UIMapVS2017.CloseRosterplanFromHomeTab();
        }        

        /// <summary>
        /// CloseRosterplanFromSupportToolsTab
        /// </summary>
        public void CloseRosterplanFromSupportToolsTab()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIBtnCloseRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpSupportToolsRibbonPage.UIRibbonPageGroup20RibbonPageGroup.UIBtnCloseRibbonBaseButtonItem;
            #endregion

            // Click 'btnClose' RibbonBaseButtonItem
            Mouse.Click(uIBtnCloseRibbonBaseButtonItem, new Point(30, 28));
        }
        
        /// <summary>
        /// CloseSalaryCalculationsWindow
        /// </summary>
        public void CloseSalaryCalculationsWindow()
        {
            #region Variable Declarations
            DXButton uIOKButton = this.UILønnsberegningvediveWindow.UIPcButtonPanelClient.UIOKButton;
            #endregion

            // Click 'Ok' button
            Mouse.Click(uIOKButton, new Point(1, 1));
        }
        
        /// <summary>
        /// CloseShiftbookReportWindow
        /// </summary>
        public void CloseShiftbookReportWindow()
        {
            #region Variable Declarations
            WinClient uISkrivrapportClient = this.UISkrivrapportWindow.UIItemWindow2.UISkrivrapportClient;
            #endregion

            // Click 'Skriv rapport' client
            Mouse.Click(uISkrivrapportClient, new Point(28, 19));
        }
        
        /// <summary>
        /// DeleteEffectuatedLines
        /// </summary>
        public void DeleteEffectuatedLines()
        {
            #region Variable Declarations
            DXButton uISlettiverksettingpå8Button = this.UISletteiverksettingWindow.UIPnlBottomClient.UISlettiverksettingpå8Button;
            DXButton uIGSSimpleButtonButton = this.UIItemWindow4.UIGSSimpleButtonButton;
            #endregion

            // Click 'Slett iverksetting på 83 linjer' button
            UISletteiverksettingWindow.WaitForControlExist(300000);
            Mouse.Click(uISlettiverksettingpå8Button);

            // Click 'GSSimpleButton' button
            UIItemWindow4.WaitForControlExist(300000);
            Mouse.Click(uIGSSimpleButtonButton);
        }
        
        /// <summary>
        /// DeleteEffectuationRosterplan
        /// </summary>
        public void DeleteEffectuationRosterplan()
        {
            #region Variable Declarations
            DXRibbonPage uIRpPlanRibbonPage = this.UIArbeidsplanWindow11.UIRcMenuRibbon.UIRpPlanRibbonPage;
            DXRibbonItem uISlettiverksettingRibbonItem = this.UIArbeidsplanWindow6.UIRcMenuRibbon.UIRpPlanRibbonPage.UIGrpEffectuateRevolviRibbonPageGroup.UISlettiverksettingRibbonItem;
            DXMenuBaseButtonItem uIBtnDeleteMenuBaseButtonItem = this.UIItemWindow2.UISubMenuBarControlMenu.UIBtnDeleteMenuBaseButtonItem;
            #endregion

            // Click 'rpPlan' RibbonPage
            Mouse.Click(uIRpPlanRibbonPage, new Point(22, 11));

            // Click 'Slett iverksetting' RibbonItem
            Mouse.Click(uISlettiverksettingRibbonItem, new Point(61, 11));

            // Click 'btnDelete' MenuBaseButtonItem
            Mouse.Click(uIBtnDeleteMenuBaseButtonItem, new Point(63, 11));
        }
        
        /// <summary>
        /// DeleteSelectedShiftsInRosterplan
        /// </summary>
        public void DeleteSelectedShiftsInRosterplan()
        {
            #region Variable Declarations
            DXMenuBaseButtonItem uISlettMenuBaseButtonItem = this.UIItemWindow2.UIPopupMenuBarControlMenu.UISlettMenuBaseButtonItem;
            #endregion

            // Wait for 1 seconds for user delay between actions; Click 'Slett' MenuBaseButtonItem
            Playback.Wait(500);
            Mouse.Click(uISlettMenuBaseButtonItem, new Point(50, 10));
        }
        
        /// <summary>
        /// DoNotSaveRosterplanTasks
        /// </summary>
        public void DoNotSaveRosterplanTasks()
        {
            #region Variable Declarations
            DXButton uIGSSimpleButtonButton = this.UIRPL4055InformasjonWindow.UIGSSimpleButtonButton;
            #endregion

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }
        
        /// <summary>
        /// EditAbsenceDocFromEmpTab
        /// </summary>
        public void EditAbsenceDocFromEmpTab()
        {
            #region Variable Declarations
            WinClient uIDokClient = this.UIGatver66043783ASCLAvWindow.UIItemWindow.UIDokClient;
            WinClient uIDokClient1 = this.UIGatver66043783ASCLAvWindow.UIItemWindow1.UIDokClient;
            #endregion

            // Click 'Dok&.' client
            Mouse.Click(uIDokClient, new Point(128, 20));

            // Click 'Dok&.' client
            Mouse.Click(uIDokClient1, new Point(241, 13));
        }
        
        /// <summary>
        /// EffectuateRoasterplanNextPeriod
        /// </summary>
        public void EffectuateRoasterplanNextPeriod()
        {
            #region Variable Declarations
            DXRibbonItem uIIverksettingRibbonItem = this.UIArbeidsplanWindow6.UIRcMenuRibbon.UIRpPlanRibbonPage.UIGrpEffectuateRevolviRibbonPageGroup.UIIverksettingRibbonItem;
            DXMenuBaseButtonItem uIBtnEffectuateNextPerMenuBaseButtonItem = this.UIItemWindow2.UISubMenuBarControlMenu.UIBtnEffectuateNextPerMenuBaseButtonItem;
            #endregion

            // Click 'Iverksetting' RibbonItem
            Mouse.Click(uIIverksettingRibbonItem, new Point(64, 11));

            // Click 'btnEffectuateNextPeriod' MenuBaseButtonItem
            Mouse.Click(uIBtnEffectuateNextPerMenuBaseButtonItem, new Point(93, 14));
        }
        
        /// <summary>
        /// IgnoreLockedRosterplan
        /// </summary>
        public void IgnoreLockedRosterplan()
        {
            #region Variable Declarations
            DXButton uIIgnorerButton = this.RPL2_4007_Informasjon.UIIgnorerButton;
            #endregion

            // Click '&Ignorer' button
            Mouse.Click(uIIgnorerButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OpenAboutGatWindow
        /// </summary>
        public void OpenAboutGatWindow()
        {
            #region Variable Declarations
            DXButton uIBarItemOpenArrowButton = this.GatMain.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIHjelpBarItem.UIBarItemOpenArrowButton;
            DXMenuBaseButtonItem uIBtnAboutGatMenuBaseButtonItem = this.GatMain.UIViewHostCustom.UIPcViewClient.UIStandaloneBarDockConCustom.UIMainmenuMenuBar.UIHjelpBarItem.UIBtnAboutGatMenuBaseButtonItem;
            WinClient uIPanel1Client = this.UIOMWindow1.UIItemWindow.UIPanel1Client;
            #endregion

            // Click 'BarItemOpenArrow' button
            Mouse.Click(uIBarItemOpenArrowButton, new Point(13, 10));

            // Click 'btnAboutGat' MenuBaseButtonItem
            Mouse.Click(uIBtnAboutGatMenuBaseButtonItem, new Point(54, 9));

            // Click 'Panel1' client
            Mouse.Click(uIPanel1Client, new Point(63, 10));
        }
        
        /// <summary>
        /// OpenAbsenceDocFromEmpTab
        /// </summary>
        public void OpenAbsenceDocFromEmpTab()
        {
            #region Variable Declarations
            WinClient uIDokClient = this.UIGatver66043783ASCLAvWindow.UIItemWindow.UIDokClient;
            WinClient uIDokClient1 = this.UIGatWindow4.UIItemWindow1.UIDokClient;
            #endregion

            // Click 'Dok&.' client
            Mouse.Click(uIDokClient, new Point(118, 20));

            // Click 'Dok&.' client
            Mouse.Click(uIDokClient1, new Point(145, 15));
        }

        /// <summary>
        /// OpenRosterplanSettings
        /// </summary>
        public void OpenRosterplanSettings(bool selectPlanTab = true)
        {
            #region Variable Declarations
            DXRibbonButtonItem uIInnstillingerRibbonBaseButtonItem = this.UIArbeidsplanYTELSEKalWindow.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRpgPlanRibbonPageGroup.UIInnstillingerRibbonBaseButtonItem;
            #endregion

            // Click 'rpPlan' RibbonPage
            if (selectPlanTab)
                ClickRosterplanPlanTab();

            // Click 'Innstillinger' RibbonBaseButtonItem
            Mouse.Click(uIInnstillingerRibbonBaseButtonItem, new Point(30, 22));
        }
        
        /// <summary>
        /// SaveRosterplanTasks
        /// </summary>
        public void SaveRosterplanTasks()
        {
            #region Variable Declarations
            DXButton uIJAButton = this.UIRPL4055InformasjonWindow.UIJAButton;
            #endregion

            // Click '&Ja' button
            Mouse.Click(uIJAButton, new Point(1, 1));
        }
        
        /// <summary>
        /// SaveShiftbookWeekReport
        /// </summary>
        public void SaveShiftbookWeekReport()
        {
            #region Variable Declarations
            WinClient uISkrivrapportClient = this.UISkrivrapportWindow.UIItemWindow3.UISkrivrapportClient;
            #endregion

            // Click 'Skriv rapport' client
            Mouse.Click(uISkrivrapportClient, new Point(51, 32));
        }
        
        /// <summary>
        /// SelectAllEmployeesAddEmployeesWindow - Use 'SelectAllEmployeesAddEmployeesWindowParams' to pass parameters into this method.
        /// </summary>
        public void SelectAllEmployeesAddEmployeesWindow()
        {
            #region Variable Declarations
            DXCell uILundTomCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UILundTomCell;
            DXGrid uIGcDepartmentEmployeeTable = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable;
            #endregion

            // Click 'Lund, Tom' cell
            Mouse.Click(uILundTomCell, new Point(39, 9));

            // Type 'Control + a' in 'gcDepartmentEmployees' table
            Keyboard.SendKeys(uIGcDepartmentEmployeeTable, this.SelectAllEmployeesAddEmployeesWindowParams.UIGcDepartmentEmployeeTableSendKeys, ModifierKeys.Control);
        }
        
        /// <summary>
        /// SelectAllEmployeesInAddEmployeesFromBaseplanWindow - Use 'SelectAllEmployeesInAddEmployeesFromBaseplanWindowParams' to pass parameters into this method.
        /// </summary>
        public void SelectAllEmployeesInAddEmployeesFromBaseplanWindow()
        {
            #region Variable Declarations
            DXCell uIIbrahimovicZlatanCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectPlanEmployeesVCustom.UIPcContentContainerClient.UIPcContentClient.UIGcPlanEmployeesTable.UIIbrahimovicZlatanCell;
            DXGrid uIGcPlanEmployeesTable = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectPlanEmployeesVCustom.UIPcContentContainerClient.UIPcContentClient.UIGcPlanEmployeesTable;
            #endregion

            // Click 'Ibrahimovic, Zlatan' cell
            Mouse.Click(uIIbrahimovicZlatanCell, new Point(38, 9));

            // Type 'Control + a' in 'gcPlanEmployees' table
            Keyboard.SendKeys(uIGcPlanEmployeesTable, this.SelectAllEmployeesInAddEmployeesFromBaseplanWindowParams.UIGcPlanEmployeesTableSendKeys, ModifierKeys.Control);
        }
        /// <summary>
        /// SelectAtlBrakesEmployeeTabSweLineOne
        /// </summary>
        public void SelectAtlBrakesEmployeeTabSweLineOne()
        {
            #region Variable Declarations
            WinClient uIAnsattClient = this.UIGatWindow2.UIItemWindow.UIAnsattClient;
            #endregion

            // Click 'Ansatt' client
            Mouse.Click(uIAnsattClient, new Point(1650, 640));
        }
        /// <summary>
        /// SelectEmpBanksWithTransactions - Use 'SelectEmpBanksWithTransactionsParams' to pass parameters into this method.
        /// </summary>
        public void SelectEmpBanksWithTransactions()
        {
            #region Variable Declarations
            DXLookUpEdit uILueFiltersLookUpEdit = this.UIGatver654ASCLAvd5140Window.UIBankBalanceListContrCustom.UILueFiltersLookUpEdit;
            DXWindow uIPopupLookUpEditFormWindow = this.UIGatver654ASCLAvd5140Window.UIBankBalanceListContrCustom.UILueFiltersLookUpEdit.UIPopupLookUpEditFormWindow;
            #endregion

            // Type 'Gatsoft.Gat.BusinessLogic.EmployeeBankBalance.Controller.BankBalanceListController+BankBalanceFilterDisplay' in 'lueFilters' LookUpEdit
            //ValueAsString
            uILueFiltersLookUpEdit.ValueAsString = this.SelectEmpBanksWithTransactionsParams.UILueFiltersLookUpEditValueAsString;

            // Click 'PopupLookUpEditForm' window
            Mouse.Click(uIPopupLookUpEditFormWindow, new Point(43, 24));
        }                
        /// <summary>
        /// SelectNewHelpplan
        /// </summary>
        public void SelectNewHelpplan()
        {
            #region Variable Declarations
            DXRibbonButtonItem uINyhjelpeplanRibbonBaseButtonItem = this.UIArbeidsplanWindow9.UIRcMenuRibbon.UIRpPlanRibbonPage.UIRpgPlanCopyRosterRibbonPageGroup.UINyhjelpeplanRibbonBaseButtonItem;
            #endregion

            // Click 'Ny hjelpeplan...' RibbonBaseButtonItem
            Mouse.Click(uINyhjelpeplanRibbonBaseButtonItem, new Point(43, 9));
        }
        
        /// <summary>
        /// SelectRosterplanPlanTab
        /// </summary>
        public void SelectRosterplanPlanTab()
        {
            #region Variable Declarations
            DXRibbonPage uIRpPlanRibbonPage = this.UIArbeidsplanWindow13.UIRcMenuRibbon.UIRpPlanRibbonPage;
            #endregion

            // Click 'rpPlan' RibbonPage
            Mouse.Click(uIRpPlanRibbonPage, new Point(21, 12));
        }
        
        /// <summary>
        /// SelectWeekShiftbookReport - Use 'SelectWeekShiftbookReportParams' to pass parameters into this method.
        /// </summary>
        public void SelectWeekShiftbookReport()
        {
            #region Variable Declarations
            WinRadioButton uIUkeRadioButton = this.UISkrivrapportWindow.UIItemWindow.UIItem50Client.UIUkeRadioButton;
            #endregion

            // Select 'Uke' radio button
            uIUkeRadioButton.Selected = this.SelectWeekShiftbookReportParams.UIUkeRadioButtonSelected;
        }
        
        /// <summary>
        /// SetRevolvingFromDate - Use 'SetRevolvingFromDateParams' to pass parameters into this method.
        /// </summary>
        public void SetRevolvingFromDate()
        {
            #region Variable Declarations
            DXDateTimePicker uIERevolveFromDateTimeEdit = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerRevolCustom.UIERevolveFromDateTimeEdit;
            #endregion

            // Type '27.06.2022 [SelectionStart]0' in 'eRevolveFrom' DateTimeEdit
            //ValueAsString
            uIERevolveFromDateTimeEdit.ValueAsString = this.SetRevolvingFromDateParams.UIERevolveFromDateTimeEditValueAsString;
        }
        
        /// <summary>
        /// SetRevolvingToDate - Use 'SetRevolvingToDateParams' to pass parameters into this method.
        /// </summary>
        public void SetRevolvingToDate()
        {
            #region Variable Declarations
            DXDateTimePicker uIERevolveToDateTimeEdit = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerRevolCustom.UIERevolveToDateTimeEdit;
            #endregion

            // Type '21.08.2022 [SelectionStart]0' in 'eRevolveTo' DateTimeEdit
            //ValueAsString
            uIERevolveToDateTimeEdit.ValueAsString = this.SetRevolvingToDateParams.UIERevolveToDateTimeEditValueAsString;

            // Type '{Tab}' in 'eRevolveTo' DateTimeEdit
            Keyboard.SendKeys(uIERevolveToDateTimeEdit, this.SetRevolvingToDateParams.UIERevolveToDateTimeEditSendKeys, ModifierKeys.None);
        }
                
        /// <summary>
        /// UnlockPlan
        /// </summary>
        public void UnlockPlan()
        {
            #region Variable Declarations
            DXRibbonButtonItem uILåsoppplanRibbonBaseButtonItem = this.UIArbeidsplanWindow.UIRcMenuRibbon.UIRpSupportToolsRibbonPage.UIRpgTestCaseRibbonPageGroup.UILåsoppplanRibbonBaseButtonItem;
            DXButton uIGSSimpleButtonButton = this.UIItemWindow7.UIGSSimpleButtonButton;
            #endregion

            // Click 'Lås opp plan' RibbonBaseButtonItem
            Mouse.Click(uILåsoppplanRibbonBaseButtonItem, new Point(21, 37));

            // Click 'GSSimpleButton' button
            Mouse.Click(uIGSSimpleButtonButton, new Point(1, 1));
        }

        /// <summary>
        /// XcloseRosterplan
        /// </summary>
        public void XcloseRosterplan()
        {
            #region Variable Declarations
            DXButton uICloseButton = this.UIArbeidsplanYTELSEKalWindow.UICloseButton;
            #endregion

            try
            {
                Mouse.Click(uICloseButton);
            }
            catch (Exception)
            {
                Keyboard.SendKeys(UIArbeidsplanYTELSEKalWindow, "{F4}", ModifierKeys.Alt);
            }
        }
        
        /// <summary>
        /// XcloseShiftbookReportWindow
        /// </summary>
        public void XcloseShiftbookReportWindow()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UISkrivrapportWindow.UISkrivrapportTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(16, 11));
        }
        
        #region Properties
        public virtual CheckDayRythmplanFromdateExpectedValues CheckDayRythmplanFromdateExpectedValues
        {
            get
            {
                if ((this.mCheckDayRythmplanFromdateExpectedValues == null))
                {
                    this.mCheckDayRythmplanFromdateExpectedValues = new CheckDayRythmplanFromdateExpectedValues();
                }
                return this.mCheckDayRythmplanFromdateExpectedValues;
            }
        }
        
        public virtual CheckEndDateForRosterplanFirstRotationExpectedValues CheckEndDateForRosterplanFirstRotationExpectedValues
        {
            get
            {
                if ((this.mCheckEndDateForRosterplanFirstRotationExpectedValues == null))
                {
                    this.mCheckEndDateForRosterplanFirstRotationExpectedValues = new CheckEndDateForRosterplanFirstRotationExpectedValues();
                }
                return this.mCheckEndDateForRosterplanFirstRotationExpectedValues;
            }
        }
        
        public virtual CheckLayerRotateToDaysExpectedValues CheckLayerRotateToDaysExpectedValues
        {
            get
            {
                if ((this.mCheckLayerRotateToDaysExpectedValues == null))
                {
                    this.mCheckLayerRotateToDaysExpectedValues = new CheckLayerRotateToDaysExpectedValues();
                }
                return this.mCheckLayerRotateToDaysExpectedValues;
            }
        }
        
        public virtual CheckNightShiftsOnStartDayParams CheckNightShiftsOnStartDayParams
        {
            get
            {
                if ((this.mCheckNightShiftsOnStartDayParams == null))
                {
                    this.mCheckNightShiftsOnStartDayParams = new CheckNightShiftsOnStartDayParams();
                }
                return this.mCheckNightShiftsOnStartDayParams;
            }
        }
        
        public virtual SelectAllEmployeesAddEmployeesWindowParams SelectAllEmployeesAddEmployeesWindowParams
        {
            get
            {
                if ((this.mSelectAllEmployeesAddEmployeesWindowParams == null))
                {
                    this.mSelectAllEmployeesAddEmployeesWindowParams = new SelectAllEmployeesAddEmployeesWindowParams();
                }
                return this.mSelectAllEmployeesAddEmployeesWindowParams;
            }
        }
        
        public virtual SelectAllEmployeesInAddEmployeesFromBaseplanWindowParams SelectAllEmployeesInAddEmployeesFromBaseplanWindowParams
        {
            get
            {
                if ((this.mSelectAllEmployeesInAddEmployeesFromBaseplanWindowParams == null))
                {
                    this.mSelectAllEmployeesInAddEmployeesFromBaseplanWindowParams = new SelectAllEmployeesInAddEmployeesFromBaseplanWindowParams();
                }
                return this.mSelectAllEmployeesInAddEmployeesFromBaseplanWindowParams;
            }
        }
        
        public virtual SelectEmpBanksWithTransactionsParams SelectEmpBanksWithTransactionsParams
        {
            get
            {
                if ((this.mSelectEmpBanksWithTransactionsParams == null))
                {
                    this.mSelectEmpBanksWithTransactionsParams = new SelectEmpBanksWithTransactionsParams();
                }
                return this.mSelectEmpBanksWithTransactionsParams;
            }
        }
        
        public virtual SelectWeekShiftbookReportParams SelectWeekShiftbookReportParams
        {
            get
            {
                if ((this.mSelectWeekShiftbookReportParams == null))
                {
                    this.mSelectWeekShiftbookReportParams = new SelectWeekShiftbookReportParams();
                }
                return this.mSelectWeekShiftbookReportParams;
            }
        }
        
        public virtual SetRevolvingFromDateParams SetRevolvingFromDateParams
        {
            get
            {
                if ((this.mSetRevolvingFromDateParams == null))
                {
                    this.mSetRevolvingFromDateParams = new SetRevolvingFromDateParams();
                }
                return this.mSetRevolvingFromDateParams;
            }
        }
        
        public virtual SetRevolvingToDateParams SetRevolvingToDateParams
        {
            get
            {
                if ((this.mSetRevolvingToDateParams == null))
                {
                    this.mSetRevolvingToDateParams = new SetRevolvingToDateParams();
                }
                return this.mSetRevolvingToDateParams;
            }
        }
        
        public virtual UnCheckNightShiftsOnStartDayParams UnCheckNightShiftsOnStartDayParams
        {
            get
            {
                if ((this.mUnCheckNightShiftsOnStartDayParams == null))
                {
                    this.mUnCheckNightShiftsOnStartDayParams = new UnCheckNightShiftsOnStartDayParams();
                }
                return this.mUnCheckNightShiftsOnStartDayParams;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UIResultaterfrasystemsWindow UIResultaterfrasystemsWindow
        {
            get
            {
                if ((this.mUIResultaterfrasystemsWindow == null))
                {
                    this.mUIResultaterfrasystemsWindow = new UIResultaterfrasystemsWindow();
                }
                return this.mUIResultaterfrasystemsWindow;
            }
        }
        
        public UISystemmelding1Window UISystemmelding1Window
        {
            get
            {
                if ((this.mUISystemmelding1Window == null))
                {
                    this.mUISystemmelding1Window = new UISystemmelding1Window();
                }
                return this.mUISystemmelding1Window;
            }
        }
        
        public GatMain_01_Delete GatMain_01_Delete
        {
            get
            {
                if ((this.mGatMain_01_Delete == null))
                {
                    this.mGatMain_01_Delete = new GatMain_01_Delete();
                }
                return this.mGatMain_01_Delete;
            }
        }
        
        public UINivåWindow UINivåWindow
        {
            get
            {
                if ((this.mUINivåWindow == null))
                {
                    this.mUINivåWindow = new UINivåWindow();
                }
                return this.mUINivåWindow;
            }
        }
        
        public UIDatabaseLoginWindow UIDatabaseLoginWindow
        {
            get
            {
                if ((this.mUIDatabaseLoginWindow == null))
                {
                    this.mUIDatabaseLoginWindow = new UIDatabaseLoginWindow();
                }
                return this.mUIDatabaseLoginWindow;
            }
        }
        
        public GatMain_02 GatMain_02
        {
            get
            {
                if ((this.mGatMain_02 == null))
                {
                    this.mGatMain_02 = new GatMain_02();
                }
                return this.mGatMain_02;
            }
        }
        
        public GatMain_03 GatMain_03
        {
            get
            {
                if ((this.mGatMain_03 == null))
                {
                    this.mGatMain_03 = new GatMain_03();
                }
                return this.mGatMain_03;
            }
        }
        
        public UIVelgradWindow UIVelgradWindow
        {
            get
            {
                if ((this.mUIVelgradWindow == null))
                {
                    this.mUIVelgradWindow = new UIVelgradWindow();
                }
                return this.mUIVelgradWindow;
            }
        }
        
        public UIEFO3000GatWindow UIEFO3000GatWindow
        {
            get
            {
                if ((this.mUIEFO3000GatWindow == null))
                {
                    this.mUIEFO3000GatWindow = new UIEFO3000GatWindow();
                }
                return this.mUIEFO3000GatWindow;
            }
        }
        
        public GatMain_04 GatMain_04
        {
            get
            {
                if ((this.mGatMain_04 == null))
                {
                    this.mGatMain_04 = new GatMain_04();
                }
                return this.mGatMain_04;
            }
        }
        
        public GatMain_06 GatMain_06
        {
            get
            {
                if ((this.mGatMain_06 == null))
                {
                    this.mGatMain_06 = new GatMain_06();
                }
                return this.mGatMain_06;
            }
        }
        
        public UIInternetInformationSWindow UIInternetInformationSWindow
        {
            get
            {
                if ((this.mUIInternetInformationSWindow == null))
                {
                    this.mUIInternetInformationSWindow = new UIInternetInformationSWindow();
                }
                return this.mUIInternetInformationSWindow;
            }
        }
        
        public UIItemWindow9 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow9();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIAddApplicationPoolWindow UIAddApplicationPoolWindow
        {
            get
            {
                if ((this.mUIAddApplicationPoolWindow == null))
                {
                    this.mUIAddApplicationPoolWindow = new UIAddApplicationPoolWindow();
                }
                return this.mUIAddApplicationPoolWindow;
            }
        }
        
        public UIAddApplicationWindow UIAddApplicationWindow
        {
            get
            {
                if ((this.mUIAddApplicationWindow == null))
                {
                    this.mUIAddApplicationWindow = new UIAddApplicationWindow();
                }
                return this.mUIAddApplicationWindow;
            }
        }
        
        public UISelectApplicationPooWindow UISelectApplicationPooWindow
        {
            get
            {
                if ((this.mUISelectApplicationPooWindow == null))
                {
                    this.mUISelectApplicationPooWindow = new UISelectApplicationPooWindow();
                }
                return this.mUISelectApplicationPooWindow;
            }
        }
        
        public UIGT4000BekreftWindow UIGT4000BekreftWindow
        {
            get
            {
                if ((this.mUIGT4000BekreftWindow == null))
                {
                    this.mUIGT4000BekreftWindow = new UIGT4000BekreftWindow();
                }
                return this.mUIGT4000BekreftWindow;
            }
        }
        
        public UIConfirmRemoveWindow UIConfirmRemoveWindow
        {
            get
            {
                if ((this.mUIConfirmRemoveWindow == null))
                {
                    this.mUIConfirmRemoveWindow = new UIConfirmRemoveWindow();
                }
                return this.mUIConfirmRemoveWindow;
            }
        }
        
        public GatMain_08 GatMain_08
        {
            get
            {
                if ((this.mGatMain_08 == null))
                {
                    this.mGatMain_08 = new GatMain_08();
                }
                return this.mGatMain_08;
            }
        }
        
        public GatMain_09 GatMain_09
        {
            get
            {
                if ((this.mGatMain_09 == null))
                {
                    this.mGatMain_09 = new GatMain_09();
                }
                return this.mGatMain_09;
            }
        }
        
        public GT_4001_Informasjon GT_4001_Informasjon
        {
            get
            {
                if ((this.mGT_4001_Informasjon == null))
                {
                    this.mGT_4001_Informasjon = new GT_4001_Informasjon();
                }
                return this.mGT_4001_Informasjon;
            }
        }
        
        public RPL2_4007_Informasjon RPL2_4007_Informasjon
        {
            get
            {
                if ((this.mRPL2_4007_Informasjon == null))
                {
                    this.mRPL2_4007_Informasjon = new RPL2_4007_Informasjon();
                }
                return this.mRPL2_4007_Informasjon;
            }
        }
        
        public GatMain_10 GatMain_10
        {
            get
            {
                if ((this.mGatMain_10 == null))
                {
                    this.mGatMain_10 = new GatMain_10();
                }
                return this.mGatMain_10;
            }
        }
        
        public UIMerarbeidovertidWindow UIMerarbeidovertidWindow
        {
            get
            {
                if ((this.mUIMerarbeidovertidWindow == null))
                {
                    this.mUIMerarbeidovertidWindow = new UIMerarbeidovertidWindow();
                }
                return this.mUIMerarbeidovertidWindow;
            }
        }
        
        public UINyarbeidsplanWindow UINyarbeidsplanWindow
        {
            get
            {
                if ((this.mUINyarbeidsplanWindow == null))
                {
                    this.mUINyarbeidsplanWindow = new UINyarbeidsplanWindow();
                }
                return this.mUINyarbeidsplanWindow;
            }
        }
        
        public UIArbeidsplanInnstilliWindow UIArbeidsplanInnstilliWindow
        {
            get
            {
                if ((this.mUIArbeidsplanInnstilliWindow == null))
                {
                    this.mUIArbeidsplanInnstilliWindow = new UIArbeidsplanInnstilliWindow();
                }
                return this.mUIArbeidsplanInnstilliWindow;
            }
        }
        
        public UIEndreiverksettingspeWindow UIEndreiverksettingspeWindow
        {
            get
            {
                if ((this.mUIEndreiverksettingspeWindow == null))
                {
                    this.mUIEndreiverksettingspeWindow = new UIEndreiverksettingspeWindow();
                }
                return this.mUIEndreiverksettingspeWindow;
            }
        }
        
        public UINyhjelpeplanWindow UINyhjelpeplanWindow
        {
            get
            {
                if ((this.mUINyhjelpeplanWindow == null))
                {
                    this.mUINyhjelpeplanWindow = new UINyhjelpeplanWindow();
                }
                return this.mUINyhjelpeplanWindow;
            }
        }
        
        public UIBemanningsplanWindow UIBemanningsplanWindow
        {
            get
            {
                if ((this.mUIBemanningsplanWindow == null))
                {
                    this.mUIBemanningsplanWindow = new UIBemanningsplanWindow();
                }
                return this.mUIBemanningsplanWindow;
            }
        }
        
        public UIBemanningsplanlagWindow UIBemanningsplanlagWindow
        {
            get
            {
                if ((this.mUIBemanningsplanlagWindow == null))
                {
                    this.mUIBemanningsplanlagWindow = new UIBemanningsplanlagWindow();
                }
                return this.mUIBemanningsplanlagWindow;
            }
        }
        
        public UIDøgnrytmeplanWindow UIDøgnrytmeplanWindow
        {
            get
            {
                if ((this.mUIDøgnrytmeplanWindow == null))
                {
                    this.mUIDøgnrytmeplanWindow = new UIDøgnrytmeplanWindow();
                }
                return this.mUIDøgnrytmeplanWindow;
            }
        }
        
        public UIDøgnrytmelagWindow UIDøgnrytmelagWindow
        {
            get
            {
                if ((this.mUIDøgnrytmelagWindow == null))
                {
                    this.mUIDøgnrytmelagWindow = new UIDøgnrytmelagWindow();
                }
                return this.mUIDøgnrytmelagWindow;
            }
        }
        
        public UIStillingsforholdWindow UIStillingsforholdWindow
        {
            get
            {
                if ((this.mUIStillingsforholdWindow == null))
                {
                    this.mUIStillingsforholdWindow = new UIStillingsforholdWindow();
                }
                return this.mUIStillingsforholdWindow;
            }
        }
        
        public UILinjeinnstillingerDaWindow UILinjeinnstillingerDaWindow
        {
            get
            {
                if ((this.mUILinjeinnstillingerDaWindow == null))
                {
                    this.mUILinjeinnstillingerDaWindow = new UILinjeinnstillingerDaWindow();
                }
                return this.mUILinjeinnstillingerDaWindow;
            }
        }
        
        public UIByttansattWindow UIByttansattWindow
        {
            get
            {
                if ((this.mUIByttansattWindow == null))
                {
                    this.mUIByttansattWindow = new UIByttansattWindow();
                }
                return this.mUIByttansattWindow;
            }
        }
        
        public UIFraværsregistreringWindow UIFraværsregistreringWindow
        {
            get
            {
                if ((this.mUIFraværsregistreringWindow == null))
                {
                    this.mUIFraværsregistreringWindow = new UIFraværsregistreringWindow();
                }
                return this.mUIFraværsregistreringWindow;
            }
        }
        
        public UIForskyvningWindow UIForskyvningWindow
        {
            get
            {
                if ((this.mUIForskyvningWindow == null))
                {
                    this.mUIForskyvningWindow = new UIForskyvningWindow();
                }
                return this.mUIForskyvningWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIBytteWindow UIBytteWindow
        {
            get
            {
                if ((this.mUIBytteWindow == null))
                {
                    this.mUIBytteWindow = new UIBytteWindow();
                }
                return this.mUIBytteWindow;
            }
        }
        
        public UIByttemedavdelingWindow UIByttemedavdelingWindow
        {
            get
            {
                if ((this.mUIByttemedavdelingWindow == null))
                {
                    this.mUIByttemedavdelingWindow = new UIByttemedavdelingWindow();
                }
                return this.mUIByttemedavdelingWindow;
            }
        }
        
        public UIUtrykningWindow UIUtrykningWindow
        {
            get
            {
                if ((this.mUIUtrykningWindow == null))
                {
                    this.mUIUtrykningWindow = new UIUtrykningWindow();
                }
                return this.mUIUtrykningWindow;
            }
        }
        
        public UINyAMLdispensasjonWindow UINyAMLdispensasjonWindow
        {
            get
            {
                if ((this.mUINyAMLdispensasjonWindow == null))
                {
                    this.mUINyAMLdispensasjonWindow = new UINyAMLdispensasjonWindow();
                }
                return this.mUINyAMLdispensasjonWindow;
            }
        }
        
        public UIAMLavtaleWindow UIAMLavtaleWindow
        {
            get
            {
                if ((this.mUIAMLavtaleWindow == null))
                {
                    this.mUIAMLavtaleWindow = new UIAMLavtaleWindow();
                }
                return this.mUIAMLavtaleWindow;
            }
        }
        
        public UIItemWindow111 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow111();
                }
                return this.mUIItemWindow11;
            }
        }
        
        public UIUtjevningsvaktWindow UIUtjevningsvaktWindow
        {
            get
            {
                if ((this.mUIUtjevningsvaktWindow == null))
                {
                    this.mUIUtjevningsvaktWindow = new UIUtjevningsvaktWindow();
                }
                return this.mUIUtjevningsvaktWindow;
            }
        }
        
        public UINyevaktklassesatserWindow UINyevaktklassesatserWindow
        {
            get
            {
                if ((this.mUINyevaktklassesatserWindow == null))
                {
                    this.mUINyevaktklassesatserWindow = new UINyevaktklassesatserWindow();
                }
                return this.mUINyevaktklassesatserWindow;
            }
        }
        
        public UIArbeidsplanSystemtesWindow UIArbeidsplanSystemtesWindow
        {
            get
            {
                if ((this.mUIArbeidsplanSystemtesWindow == null))
                {
                    this.mUIArbeidsplanSystemtesWindow = new UIArbeidsplanSystemtesWindow();
                }
                return this.mUIArbeidsplanSystemtesWindow;
            }
        }
        
        public UIGatver66043545ASCLAvWindow UIGatver66043545ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver66043545ASCLAvWindow == null))
                {
                    this.mUIGatver66043545ASCLAvWindow = new UIGatver66043545ASCLAvWindow();
                }
                return this.mUIGatver66043545ASCLAvWindow;
            }
        }
        
        public UIItemWindow22 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow22();
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UISkrivrapportWindow UISkrivrapportWindow
        {
            get
            {
                if ((this.mUISkrivrapportWindow == null))
                {
                    this.mUISkrivrapportWindow = new UISkrivrapportWindow();
                }
                return this.mUISkrivrapportWindow;
            }
        }
        
        public UIGatver66043783ASCLAvWindow UIGatver66043783ASCLAvWindow
        {
            get
            {
                if ((this.mUIGatver66043783ASCLAvWindow == null))
                {
                    this.mUIGatver66043783ASCLAvWindow = new UIGatver66043783ASCLAvWindow();
                }
                return this.mUIGatver66043783ASCLAvWindow;
            }
        }
        
        public GatMain_11 GatMain_11
        {
            get
            {
                if ((this.mGatMain_11 == null))
                {
                    this.mGatMain_11 = new GatMain_11();
                }
                return this.mGatMain_11;
            }
        }
        
        public UIGatver654ASCLAvd5140Window UIGatver654ASCLAvd5140Window
        {
            get
            {
                if ((this.mUIGatver654ASCLAvd5140Window == null))
                {
                    this.mUIGatver654ASCLAvd5140Window = new UIGatver654ASCLAvd5140Window();
                }
                return this.mUIGatver654ASCLAvd5140Window;
            }
        }
        
        public UIArbeidsplanYTELSEKalWindow UIArbeidsplanYTELSEKalWindow
        {
            get
            {
                if ((this.mUIArbeidsplanYTELSEKalWindow == null))
                {
                    this.mUIArbeidsplanYTELSEKalWindow = new UIArbeidsplanYTELSEKalWindow();
                }
                return this.mUIArbeidsplanYTELSEKalWindow;
            }
        }
        
        public UIIverksetteWindow UIIverksetteWindow
        {
            get
            {
                if ((this.mUIIverksetteWindow == null))
                {
                    this.mUIIverksetteWindow = new UIIverksetteWindow();
                }
                return this.mUIIverksetteWindow;
            }
        }
        
        public UIItemWindow32 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow32();
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIRPL4044InformasjonWindow UIRPL4044InformasjonWindow
        {
            get
            {
                if ((this.mUIRPL4044InformasjonWindow == null))
                {
                    this.mUIRPL4044InformasjonWindow = new UIRPL4044InformasjonWindow();
                }
                return this.mUIRPL4044InformasjonWindow;
            }
        }
        
        public UILønnsberegningvediveWindow UILønnsberegningvediveWindow
        {
            get
            {
                if ((this.mUILønnsberegningvediveWindow == null))
                {
                    this.mUILønnsberegningvediveWindow = new UILønnsberegningvediveWindow();
                }
                return this.mUILønnsberegningvediveWindow;
            }
        }
        
        public UISletteiverksettingWindow UISletteiverksettingWindow
        {
            get
            {
                if ((this.mUISletteiverksettingWindow == null))
                {
                    this.mUISletteiverksettingWindow = new UISletteiverksettingWindow();
                }
                return this.mUISletteiverksettingWindow;
            }
        }
        
        public UIItemWindow41 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow41();
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow51 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow51();
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIArbeidsplanYTELSEKalWindow1 UIArbeidsplanYTELSEKalWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanYTELSEKalWindow1 == null))
                {
                    this.mUIArbeidsplanYTELSEKalWindow1 = new UIArbeidsplanYTELSEKalWindow1();
                }
                return this.mUIArbeidsplanYTELSEKalWindow1;
            }
        }
        
        public UIItemWindow61 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow61();
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UIAnsatteiarbeidsplanWindow UIAnsatteiarbeidsplanWindow
        {
            get
            {
                if ((this.mUIAnsatteiarbeidsplanWindow == null))
                {
                    this.mUIAnsatteiarbeidsplanWindow = new UIAnsatteiarbeidsplanWindow();
                }
                return this.mUIAnsatteiarbeidsplanWindow;
            }
        }
        
        public UILeggtilansatteWindow UILeggtilansatteWindow
        {
            get
            {
                if ((this.mUILeggtilansatteWindow == null))
                {
                    this.mUILeggtilansatteWindow = new UILeggtilansatteWindow();
                }
                return this.mUILeggtilansatteWindow;
            }
        }
        
        public GatMain GatMain
        {
            get
            {
                if ((this.mGatMain == null))
                {
                    this.mGatMain = new GatMain();
                }
                return this.mGatMain;
            }
        }
        
        public UIOMWindow UIOMWindow
        {
            get
            {
                if ((this.mUIOMWindow == null))
                {
                    this.mUIOMWindow = new UIOMWindow();
                }
                return this.mUIOMWindow;
            }
        }
        
        public UIOMWindow1 UIOMWindow1
        {
            get
            {
                if ((this.mUIOMWindow1 == null))
                {
                    this.mUIOMWindow1 = new UIOMWindow1();
                }
                return this.mUIOMWindow1;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        
        public UIItemWindow71 UIItemWindow7
        {
            get
            {
                if ((this.mUIItemWindow7 == null))
                {
                    this.mUIItemWindow7 = new UIItemWindow71();
                }
                return this.mUIItemWindow7;
            }
        }
        
        public UIArbeidsplanWindow1 UIArbeidsplanWindow1
        {
            get
            {
                if ((this.mUIArbeidsplanWindow1 == null))
                {
                    this.mUIArbeidsplanWindow1 = new UIArbeidsplanWindow1();
                }
                return this.mUIArbeidsplanWindow1;
            }
        }
        
        public UIArbeidsplanWindow2 UIArbeidsplanWindow2
        {
            get
            {
                if ((this.mUIArbeidsplanWindow2 == null))
                {
                    this.mUIArbeidsplanWindow2 = new UIArbeidsplanWindow2();
                }
                return this.mUIArbeidsplanWindow2;
            }
        }
        
        public UIArbeidsplanWindow3 UIArbeidsplanWindow3
        {
            get
            {
                if ((this.mUIArbeidsplanWindow3 == null))
                {
                    this.mUIArbeidsplanWindow3 = new UIArbeidsplanWindow3();
                }
                return this.mUIArbeidsplanWindow3;
            }
        }
        
        public UIArbeidsplanWindow4 UIArbeidsplanWindow4
        {
            get
            {
                if ((this.mUIArbeidsplanWindow4 == null))
                {
                    this.mUIArbeidsplanWindow4 = new UIArbeidsplanWindow4();
                }
                return this.mUIArbeidsplanWindow4;
            }
        }
        
        public UIArbeidsplanWindow5 UIArbeidsplanWindow5
        {
            get
            {
                if ((this.mUIArbeidsplanWindow5 == null))
                {
                    this.mUIArbeidsplanWindow5 = new UIArbeidsplanWindow5();
                }
                return this.mUIArbeidsplanWindow5;
            }
        }
        
        public UIArbeidsplanWindow6 UIArbeidsplanWindow6
        {
            get
            {
                if ((this.mUIArbeidsplanWindow6 == null))
                {
                    this.mUIArbeidsplanWindow6 = new UIArbeidsplanWindow6();
                }
                return this.mUIArbeidsplanWindow6;
            }
        }
        
        public UIArbeidsplanWindow7 UIArbeidsplanWindow7
        {
            get
            {
                if ((this.mUIArbeidsplanWindow7 == null))
                {
                    this.mUIArbeidsplanWindow7 = new UIArbeidsplanWindow7();
                }
                return this.mUIArbeidsplanWindow7;
            }
        }
        
        public UIArbeidsplanWindow8 UIArbeidsplanWindow8
        {
            get
            {
                if ((this.mUIArbeidsplanWindow8 == null))
                {
                    this.mUIArbeidsplanWindow8 = new UIArbeidsplanWindow8();
                }
                return this.mUIArbeidsplanWindow8;
            }
        }
        
        public UIArbeidsplanWindow9 UIArbeidsplanWindow9
        {
            get
            {
                if ((this.mUIArbeidsplanWindow9 == null))
                {
                    this.mUIArbeidsplanWindow9 = new UIArbeidsplanWindow9();
                }
                return this.mUIArbeidsplanWindow9;
            }
        }
        
        public UIArbeidsplanWindow10 UIArbeidsplanWindow10
        {
            get
            {
                if ((this.mUIArbeidsplanWindow10 == null))
                {
                    this.mUIArbeidsplanWindow10 = new UIArbeidsplanWindow10();
                }
                return this.mUIArbeidsplanWindow10;
            }
        }
        
        public UIArbeidsplanWindow11 UIArbeidsplanWindow11
        {
            get
            {
                if ((this.mUIArbeidsplanWindow11 == null))
                {
                    this.mUIArbeidsplanWindow11 = new UIArbeidsplanWindow11();
                }
                return this.mUIArbeidsplanWindow11;
            }
        }
        
        public UIArbeidsplanWindow12 UIArbeidsplanWindow12
        {
            get
            {
                if ((this.mUIArbeidsplanWindow12 == null))
                {
                    this.mUIArbeidsplanWindow12 = new UIArbeidsplanWindow12();
                }
                return this.mUIArbeidsplanWindow12;
            }
        }
        
        public UIArbeidsplanWindow13 UIArbeidsplanWindow13
        {
            get
            {
                if ((this.mUIArbeidsplanWindow13 == null))
                {
                    this.mUIArbeidsplanWindow13 = new UIArbeidsplanWindow13();
                }
                return this.mUIArbeidsplanWindow13;
            }
        }
        
        public UIGT3999InformasjonWindow UIGT3999InformasjonWindow
        {
            get
            {
                if ((this.mUIGT3999InformasjonWindow == null))
                {
                    this.mUIGT3999InformasjonWindow = new UIGT3999InformasjonWindow();
                }
                return this.mUIGT3999InformasjonWindow;
            }
        }
        
        public UIItemWindow81 UIItemWindow8
        {
            get
            {
                if ((this.mUIItemWindow8 == null))
                {
                    this.mUIItemWindow8 = new UIItemWindow81();
                }
                return this.mUIItemWindow8;
            }
        }
        
        public UIFraværiarbeidsplanWindow UIFraværiarbeidsplanWindow
        {
            get
            {
                if ((this.mUIFraværiarbeidsplanWindow == null))
                {
                    this.mUIFraværiarbeidsplanWindow = new UIFraværiarbeidsplanWindow();
                }
                return this.mUIFraværiarbeidsplanWindow;
            }
        }
        
        public UIOverførtilleggWindow UIOverførtilleggWindow
        {
            get
            {
                if ((this.mUIOverførtilleggWindow == null))
                {
                    this.mUIOverførtilleggWindow = new UIOverførtilleggWindow();
                }
                return this.mUIOverførtilleggWindow;
            }
        }
        
        public UIRPL4055InformasjonWindow UIRPL4055InformasjonWindow
        {
            get
            {
                if ((this.mUIRPL4055InformasjonWindow == null))
                {
                    this.mUIRPL4055InformasjonWindow = new UIRPL4055InformasjonWindow();
                }
                return this.mUIRPL4055InformasjonWindow;
            }
        }
        
        public UIGatWindow1 UIGatWindow1
        {
            get
            {
                if ((this.mUIGatWindow1 == null))
                {
                    this.mUIGatWindow1 = new UIGatWindow1();
                }
                return this.mUIGatWindow1;
            }
        }
        
        public UIGatWindow2 UIGatWindow2
        {
            get
            {
                if ((this.mUIGatWindow2 == null))
                {
                    this.mUIGatWindow2 = new UIGatWindow2();
                }
                return this.mUIGatWindow2;
            }
        }
        
        public UIGatWindow3 UIGatWindow3
        {
            get
            {
                if ((this.mUIGatWindow3 == null))
                {
                    this.mUIGatWindow3 = new UIGatWindow3();
                }
                return this.mUIGatWindow3;
            }
        }
        
        public UIGatWindow4 UIGatWindow4
        {
            get
            {
                if ((this.mUIGatWindow4 == null))
                {
                    this.mUIGatWindow4 = new UIGatWindow4();
                }
                return this.mUIGatWindow4;
            }
        }
        
        public UITmp934FtmpExcelWindow UITmp934FtmpExcelWindow
        {
            get
            {
                if ((this.mUITmp934FtmpExcelWindow == null))
                {
                    this.mUITmp934FtmpExcelWindow = new UITmp934FtmpExcelWindow();
                }
                return this.mUITmp934FtmpExcelWindow;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckDayRythmplanFromdateExpectedValues mCheckDayRythmplanFromdateExpectedValues;
        
        private CheckEndDateForRosterplanFirstRotationExpectedValues mCheckEndDateForRosterplanFirstRotationExpectedValues;
        
        private CheckLayerRotateToDaysExpectedValues mCheckLayerRotateToDaysExpectedValues;
        
        private CheckNightShiftsOnStartDayParams mCheckNightShiftsOnStartDayParams;
        
        private SelectAllEmployeesAddEmployeesWindowParams mSelectAllEmployeesAddEmployeesWindowParams;
        
        private SelectAllEmployeesInAddEmployeesFromBaseplanWindowParams mSelectAllEmployeesInAddEmployeesFromBaseplanWindowParams;
        
        private SelectEmpBanksWithTransactionsParams mSelectEmpBanksWithTransactionsParams;
        
        private SelectWeekShiftbookReportParams mSelectWeekShiftbookReportParams;
        
        private SetRevolvingFromDateParams mSetRevolvingFromDateParams;
        
        private SetRevolvingToDateParams mSetRevolvingToDateParams;
        
        private UnCheckNightShiftsOnStartDayParams mUnCheckNightShiftsOnStartDayParams;
        
        private UILoginWindow mUILoginWindow;
        
        private UIResultaterfrasystemsWindow mUIResultaterfrasystemsWindow;
        
        private UISystemmelding1Window mUISystemmelding1Window;
        
        private GatMain_01_Delete mGatMain_01_Delete;
        
        private UINivåWindow mUINivåWindow;
        
        private UIDatabaseLoginWindow mUIDatabaseLoginWindow;
        
        private GatMain_02 mGatMain_02;
        
        private GatMain_03 mGatMain_03;
        
        private UIVelgradWindow mUIVelgradWindow;
        
        private UIEFO3000GatWindow mUIEFO3000GatWindow;
        
        private GatMain_04 mGatMain_04;
        
        private GatMain_06 mGatMain_06;
        
        private UIInternetInformationSWindow mUIInternetInformationSWindow;
        
        private UIItemWindow9 mUIItemWindow;
        
        private UIAddApplicationPoolWindow mUIAddApplicationPoolWindow;
        
        private UIAddApplicationWindow mUIAddApplicationWindow;
        
        private UISelectApplicationPooWindow mUISelectApplicationPooWindow;
        
        private UIGT4000BekreftWindow mUIGT4000BekreftWindow;
        
        private UIConfirmRemoveWindow mUIConfirmRemoveWindow;
        
        private GatMain_08 mGatMain_08;
        
        private GatMain_09 mGatMain_09;
        
        private GT_4001_Informasjon mGT_4001_Informasjon;
        
        private RPL2_4007_Informasjon mRPL2_4007_Informasjon;
        
        private GatMain_10 mGatMain_10;
        
        private UIMerarbeidovertidWindow mUIMerarbeidovertidWindow;
        
        private UINyarbeidsplanWindow mUINyarbeidsplanWindow;
        
        private UIArbeidsplanInnstilliWindow mUIArbeidsplanInnstilliWindow;
        
        private UIEndreiverksettingspeWindow mUIEndreiverksettingspeWindow;
        
        private UINyhjelpeplanWindow mUINyhjelpeplanWindow;
        
        private UIBemanningsplanWindow mUIBemanningsplanWindow;
        
        private UIBemanningsplanlagWindow mUIBemanningsplanlagWindow;
        
        private UIDøgnrytmeplanWindow mUIDøgnrytmeplanWindow;
        
        private UIDøgnrytmelagWindow mUIDøgnrytmelagWindow;
        
        private UIStillingsforholdWindow mUIStillingsforholdWindow;
        
        private UILinjeinnstillingerDaWindow mUILinjeinnstillingerDaWindow;
        
        private UIByttansattWindow mUIByttansattWindow;
        
        private UIFraværsregistreringWindow mUIFraværsregistreringWindow;
        
        private UIForskyvningWindow mUIForskyvningWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIBytteWindow mUIBytteWindow;
        
        private UIByttemedavdelingWindow mUIByttemedavdelingWindow;
        
        private UIUtrykningWindow mUIUtrykningWindow;
        
        private UINyAMLdispensasjonWindow mUINyAMLdispensasjonWindow;
        
        private UIAMLavtaleWindow mUIAMLavtaleWindow;
        
        private UIItemWindow111 mUIItemWindow11;
        
        private UIUtjevningsvaktWindow mUIUtjevningsvaktWindow;
        
        private UINyevaktklassesatserWindow mUINyevaktklassesatserWindow;
        
        private UIArbeidsplanSystemtesWindow mUIArbeidsplanSystemtesWindow;
        
        private UIGatver66043545ASCLAvWindow mUIGatver66043545ASCLAvWindow;
        
        private UIItemWindow22 mUIItemWindow2;
        
        private UISkrivrapportWindow mUISkrivrapportWindow;
        
        private UIGatver66043783ASCLAvWindow mUIGatver66043783ASCLAvWindow;
        
        private GatMain_11 mGatMain_11;
        
        private UIGatver654ASCLAvd5140Window mUIGatver654ASCLAvd5140Window;
        
        private UIArbeidsplanYTELSEKalWindow mUIArbeidsplanYTELSEKalWindow;
        
        private UIIverksetteWindow mUIIverksetteWindow;
        
        private UIItemWindow32 mUIItemWindow3;
        
        private UIRPL4044InformasjonWindow mUIRPL4044InformasjonWindow;
        
        private UILønnsberegningvediveWindow mUILønnsberegningvediveWindow;
        
        private UISletteiverksettingWindow mUISletteiverksettingWindow;
        
        private UIItemWindow41 mUIItemWindow4;
        
        private UIItemWindow51 mUIItemWindow5;
        
        private UIArbeidsplanYTELSEKalWindow1 mUIArbeidsplanYTELSEKalWindow1;
        
        private UIItemWindow61 mUIItemWindow6;
        
        private UIAnsatteiarbeidsplanWindow mUIAnsatteiarbeidsplanWindow;
        
        private UILeggtilansatteWindow mUILeggtilansatteWindow;
        
        private GatMain mGatMain;
        
        private UIOMWindow mUIOMWindow;
        
        private UIOMWindow1 mUIOMWindow1;
        
        private UIGatWindow mUIGatWindow;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        
        private UIItemWindow71 mUIItemWindow7;
        
        private UIArbeidsplanWindow1 mUIArbeidsplanWindow1;
        
        private UIArbeidsplanWindow2 mUIArbeidsplanWindow2;
        
        private UIArbeidsplanWindow3 mUIArbeidsplanWindow3;
        
        private UIArbeidsplanWindow4 mUIArbeidsplanWindow4;
        
        private UIArbeidsplanWindow5 mUIArbeidsplanWindow5;
        
        private UIArbeidsplanWindow6 mUIArbeidsplanWindow6;
        
        private UIArbeidsplanWindow7 mUIArbeidsplanWindow7;
        
        private UIArbeidsplanWindow8 mUIArbeidsplanWindow8;
        
        private UIArbeidsplanWindow9 mUIArbeidsplanWindow9;
        
        private UIArbeidsplanWindow10 mUIArbeidsplanWindow10;
        
        private UIArbeidsplanWindow11 mUIArbeidsplanWindow11;
        
        private UIArbeidsplanWindow12 mUIArbeidsplanWindow12;
        
        private UIArbeidsplanWindow13 mUIArbeidsplanWindow13;
        
        private UIGT3999InformasjonWindow mUIGT3999InformasjonWindow;
        
        private UIItemWindow81 mUIItemWindow8;
        
        private UIFraværiarbeidsplanWindow mUIFraværiarbeidsplanWindow;
        
        private UIOverførtilleggWindow mUIOverførtilleggWindow;
        
        private UIRPL4055InformasjonWindow mUIRPL4055InformasjonWindow;
        
        private UIGatWindow1 mUIGatWindow1;
        
        private UIGatWindow2 mUIGatWindow2;
        
        private UIGatWindow3 mUIGatWindow3;
        
        private UIGatWindow4 mUIGatWindow4;
        
        private UITmp934FtmpExcelWindow mUITmp934FtmpExcelWindow;
        
        private UISaveAsWindow mUISaveAsWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckDayRythmplanFromdate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckDayRythmplanFromdateExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'pceDate' DateTimeEdit equals 'pceDate'
        /// </summary>
        public string UIPceDateDateTimeEditName = "pceDate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEndDateForRosterplanFirstRotation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckEndDateForRosterplanFirstRotationExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'pceDate' DateTimeEdit equals '2016-01-24'
        /// </summary>
        public string UIPceDateDateTimeEditValueAsString = "2016-01-24";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckLayerRotateToDays'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckLayerRotateToDaysExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'lblToDateComment' label equals 'Antall dager: 112'
        /// </summary>
        public string UILblToDateCommentLabelText = "Antall dager: 112";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckNightShiftsOnStartDay'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckNightShiftsOnStartDayParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'chkNighShiftOnStartDay' check box
        /// </summary>
        public bool UIChkNighShiftOnStartDCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectAllEmployeesAddEmployeesWindow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectAllEmployeesAddEmployeesWindowParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + a' in 'gcDepartmentEmployees' table
        /// </summary>
        public string UIGcDepartmentEmployeeTableSendKeys = "a";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectAllEmployeesInAddEmployeesFromBaseplanWindow'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectAllEmployeesInAddEmployeesFromBaseplanWindowParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + a' in 'gcPlanEmployees' table
        /// </summary>
        public string UIGcPlanEmployeesTableSendKeys = "a";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectEmpBanksWithTransactions'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectEmpBanksWithTransactionsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.BusinessLogic.EmployeeBankBalance.Controller.BankBalanceListController+BankBalanceFilterDisplay' in 'lueFilters' LookUpEdit
        /// </summary>
        public string UILueFiltersLookUpEditValueAsString = "Gatsoft.Gat.BusinessLogic.EmployeeBankBalance.Controller.BankBalanceListControlle" +
            "r+BankBalanceFilterDisplay";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectWeekShiftbookReport'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectWeekShiftbookReportParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Uke' radio button
        /// </summary>
        public bool UIUkeRadioButtonSelected = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetRevolvingFromDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetRevolvingFromDateParams
    {
        
        #region Fields
        /// <summary>
        /// Type '27.06.2022 [SelectionStart]0' in 'eRevolveFrom' DateTimeEdit
        /// </summary>
        public string UIERevolveFromDateTimeEditValueAsString = "27.06.2022 [SelectionStart]0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SetRevolvingToDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SetRevolvingToDateParams
    {
        
        #region Fields
        /// <summary>
        /// Type '21.08.2022 [SelectionStart]0' in 'eRevolveTo' DateTimeEdit
        /// </summary>
        public string UIERevolveToDateTimeEditValueAsString = "21.08.2022 [SelectionStart]0";
        
        /// <summary>
        /// Type '{Tab}' in 'eRevolveTo' DateTimeEdit
        /// </summary>
        public string UIERevolveToDateTimeEditSendKeys = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'UnCheckNightShiftsOnStartDay'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UnCheckNightShiftsOnStartDayParams
    {
        
        #region Fields
        /// <summary>
        /// Clear 'chkNighShiftOnStartDay' check box
        /// </summary>
        public bool UIChkNighShiftOnStartDCheckBoxChecked = false;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmLogin";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UIASCLWindow UIASCLWindow
        {
            get
            {
                if ((this.mUIASCLWindow == null))
                {
                    this.mUIASCLWindow = new UIASCLWindow(this);
                }
                return this.mUIASCLWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UILoginWindow1 UILoginWindow1
        {
            get
            {
                if ((this.mUILoginWindow1 == null))
                {
                    this.mUILoginWindow1 = new UILoginWindow1(this);
                }
                return this.mUILoginWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIASCLWindow mUIASCLWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UILoginWindow1 mUILoginWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIASCLWindow : WinWindow
    {
        
        public UIASCLWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILoginWindow1 : WinWindow
    {
        
        public UILoginWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TTabSheet";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UILoginClient UILoginClient
        {
            get
            {
                if ((this.mUILoginClient == null))
                {
                    this.mUILoginClient = new UILoginClient(this);
                }
                return this.mUILoginClient;
            }
        }
        #endregion
        
        #region Fields
        private UILoginClient mUILoginClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILoginClient : WinClient
    {
        
        public UILoginClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Login";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIResultaterfrasystemsWindow : WinWindow
    {
        
        public UIResultaterfrasystemsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmSQLViewResult";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
            #endregion
        }
        
        #region Properties
        public WinClient UIResultaterfrasystemsClient
        {
            get
            {
                if ((this.mUIResultaterfrasystemsClient == null))
                {
                    this.mUIResultaterfrasystemsClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIResultaterfrasystemsClient.WindowTitles.Add("Resultater fra systemsjekk / faste SQL scripts");
                    #endregion
                }
                return this.mUIResultaterfrasystemsClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIResultaterfrasystemsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISystemmelding1Window : WinWindow
    {
        
        public UISystemmelding1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmSystemMessage";
            this.WindowTitles.Add("Systemmelding (1)");
            this.WindowTitles.Add("Systemmelding");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UISystemmelding1TitleBar UISystemmelding1TitleBar
        {
            get
            {
                if ((this.mUISystemmelding1TitleBar == null))
                {
                    this.mUISystemmelding1TitleBar = new UISystemmelding1TitleBar(this);
                }
                return this.mUISystemmelding1TitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        
        private UISystemmelding1TitleBar mUISystemmelding1TitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("Systemmelding (1)");
            this.WindowTitles.Add("Systemmelding");
            #endregion
        }
        
        #region Properties
        public UISystemmelding1Client UISystemmelding1Client
        {
            get
            {
                if ((this.mUISystemmelding1Client == null))
                {
                    this.mUISystemmelding1Client = new UISystemmelding1Client(this);
                }
                return this.mUISystemmelding1Client;
            }
        }
        #endregion
        
        #region Fields
        private UISystemmelding1Client mUISystemmelding1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISystemmelding1Client : WinClient
    {
        
        public UISystemmelding1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Systemmelding (1)");
            this.WindowTitles.Add("Systemmelding");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Systemmelding (1)");
                    this.mUIOKButton.WindowTitles.Add("Systemmelding");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISystemmelding1TitleBar : WinTitleBar
    {
        
        public UISystemmelding1TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Systemmelding (1)");
            this.WindowTitles.Add("Systemmelding");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Systemmelding (1)");
                    this.mUICloseButton.WindowTitles.Add("Systemmelding");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain_01_Delete : WinWindow
    {
        
        public GatMain_01_Delete()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStandaloneBarDockConCustom : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: TOP-TESTHOSPITALET HF) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainmenuMenuBar : DXMenu
    {
        
        public UIMainmenuMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: TOP-TESTHOSPITALET HF) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBtnDepartmentBarBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnDepartmentBarBaseButtonItem == null))
                {
                    this.mUIBtnDepartmentBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnDepartmentBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDepartment";
                    this.mUIBtnDepartmentBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIBtnDepartmentBarBaseButtonItem.WindowTitles.Add("Gat ver. 6.4.3.39251 - (ASCL - Avd: TOP-TESTHOSPITALET HF) - Vaktbok");
                    this.mUIBtnDepartmentBarBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIBtnDepartmentBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBtnDepartmentBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINivåWindow : DXWindow
    {
        
        public UINivåWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Nivå";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        
        public UIGsPanelControl2Client UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        
        public UIGsLayoutControl1Custom1 UIGsLayoutControl1Custom1
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom1 == null))
                {
                    this.mUIGsLayoutControl1Custom1 = new UIGsLayoutControl1Custom1(this);
                }
                return this.mUIGsLayoutControl1Custom1;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom mUIGsLayoutControl1Custom;
        
        private UIGsPanelControl2Client mUIGsPanelControl2Client;
        
        private UIGsLayoutControl1Custom1 mUIGsLayoutControl1Custom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControl1Custom : DXTestControl
    {
        
        public UIGsLayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroup1LayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem1LayoutControlItem UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        
        public UILayDepartmentsLayoutControlItem UILayDepartmentsLayoutControlItem
        {
            get
            {
                if ((this.mUILayDepartmentsLayoutControlItem == null))
                {
                    this.mUILayDepartmentsLayoutControlItem = new UILayDepartmentsLayoutControlItem(this);
                }
                return this.mUILayDepartmentsLayoutControlItem;
            }
        }
        
        public UILayOtherDepartmentsLayoutControlItem UILayOtherDepartmentsLayoutControlItem
        {
            get
            {
                if ((this.mUILayOtherDepartmentsLayoutControlItem == null))
                {
                    this.mUILayOtherDepartmentsLayoutControlItem = new UILayOtherDepartmentsLayoutControlItem(this);
                }
                return this.mUILayOtherDepartmentsLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem1LayoutControlItem mUILayoutControlItem1LayoutControlItem;
        
        private UILayDepartmentsLayoutControlItem mUILayDepartmentsLayoutControlItem;
        
        private UILayOtherDepartmentsLayoutControlItem mUILayOtherDepartmentsLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem1LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UITxtFilterEdit
        {
            get
            {
                if ((this.mUITxtFilterEdit == null))
                {
                    this.mUITxtFilterEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUITxtFilterEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "txtFilter";
                    this.mUITxtFilterEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUITxtFilterEdit.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUITxtFilterEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUITxtFilterEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayDepartmentsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayDepartmentsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LayDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGbDepartmentsClient UIGbDepartmentsClient
        {
            get
            {
                if ((this.mUIGbDepartmentsClient == null))
                {
                    this.mUIGbDepartmentsClient = new UIGbDepartmentsClient(this);
                }
                return this.mUIGbDepartmentsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGbDepartmentsClient mUIGbDepartmentsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGbDepartmentsClient : DXTestControl
    {
        
        public UIGbDepartmentsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gbDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGDepartmentsTable UIGDepartmentsTable
        {
            get
            {
                if ((this.mUIGDepartmentsTable == null))
                {
                    this.mUIGDepartmentsTable = new UIGDepartmentsTable(this);
                }
                return this.mUIGDepartmentsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGDepartmentsTable mUIGDepartmentsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGDepartmentsTable : DXGrid
    {
        
        public UIGDepartmentsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem5140OmregnettidCell
        {
            get
            {
                if ((this.mUIItem5140OmregnettidCell == null))
                {
                    this.mUIItem5140OmregnettidCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5140OmregnettidCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gDepartmentsGridControlCell[View]gvDepartments[Row]44[Column]cDepName";
                    this.mUIItem5140OmregnettidCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5140OmregnettidCell.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIItem5140OmregnettidCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem5140OmregnettidCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayOtherDepartmentsLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayOtherDepartmentsLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LayOtherDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGbOtherDepartmentsClient UIGbOtherDepartmentsClient
        {
            get
            {
                if ((this.mUIGbOtherDepartmentsClient == null))
                {
                    this.mUIGbOtherDepartmentsClient = new UIGbOtherDepartmentsClient(this);
                }
                return this.mUIGbOtherDepartmentsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGbOtherDepartmentsClient mUIGbOtherDepartmentsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGbOtherDepartmentsClient : DXTestControl
    {
        
        public UIGbOtherDepartmentsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gbOtherDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGOtherDepartmensTable UIGOtherDepartmensTable
        {
            get
            {
                if ((this.mUIGOtherDepartmensTable == null))
                {
                    this.mUIGOtherDepartmensTable = new UIGOtherDepartmensTable(this);
                }
                return this.mUIGOtherDepartmensTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGOtherDepartmensTable mUIGOtherDepartmensTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGOtherDepartmensTable : DXGrid
    {
        
        public UIGOtherDepartmensTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gOtherDepartmens";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXCell UIIkkevalgtCell
        {
            get
            {
                if ((this.mUIIkkevalgtCell == null))
                {
                    this.mUIIkkevalgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gOtherDepartmensGridControlCell[View]gvOtherDepartments[Row]15[Column]cOdChecked";
                    this.mUIIkkevalgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIIkkevalgtCell;
            }
        }
        
        public DXCheckBox UICheckEditCheckBox
        {
            get
            {
                if ((this.mUICheckEditCheckBox == null))
                {
                    this.mUICheckEditCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "gOtherDepartmensCheckEdit[View]gvOtherDepartments[Row]15[Column]cOdChecked";
                    this.mUICheckEditCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CheckEdit";
                    this.mUICheckEditCheckBox.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUICheckEditCheckBox;
            }
        }
        
        public DXCell UIIkkevalgtCell1
        {
            get
            {
                if ((this.mUIIkkevalgtCell1 == null))
                {
                    this.mUIIkkevalgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIIkkevalgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gOtherDepartmensGridControlCell[View]gvOtherDepartments[Row]16[Column]cOdChecked";
                    this.mUIIkkevalgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIkkevalgtCell1.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIIkkevalgtCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIkkevalgtCell;
        
        private DXCheckBox mUICheckEditCheckBox;
        
        private DXCell mUIIkkevalgtCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl2Client : DXTestControl
    {
        
        public UIGsPanelControl2Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControl1Custom1 : DXTestControl
    {
        
        public UIGsLayoutControl1Custom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup1 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup1(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup1 mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroup1LayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UILayOtherDepartmentsLayoutControlItem1 UILayOtherDepartmentsLayoutControlItem
        {
            get
            {
                if ((this.mUILayOtherDepartmentsLayoutControlItem == null))
                {
                    this.mUILayOtherDepartmentsLayoutControlItem = new UILayOtherDepartmentsLayoutControlItem1(this);
                }
                return this.mUILayOtherDepartmentsLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayOtherDepartmentsLayoutControlItem1 mUILayOtherDepartmentsLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayOtherDepartmentsLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayOtherDepartmentsLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LayOtherDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIGbOtherDepartmentsClient1 UIGbOtherDepartmentsClient
        {
            get
            {
                if ((this.mUIGbOtherDepartmentsClient == null))
                {
                    this.mUIGbOtherDepartmentsClient = new UIGbOtherDepartmentsClient1(this);
                }
                return this.mUIGbOtherDepartmentsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGbOtherDepartmentsClient1 mUIGbOtherDepartmentsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGbOtherDepartmentsClient1 : DXTestControl
    {
        
        public UIGbOtherDepartmentsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gbOtherDepartments";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public UIPanOtherDepsButtonsClient UIPanOtherDepsButtonsClient
        {
            get
            {
                if ((this.mUIPanOtherDepsButtonsClient == null))
                {
                    this.mUIPanOtherDepsButtonsClient = new UIPanOtherDepsButtonsClient(this);
                }
                return this.mUIPanOtherDepsButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanOtherDepsButtonsClient mUIPanOtherDepsButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanOtherDepsButtonsClient : DXTestControl
    {
        
        public UIPanOtherDepsButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panOtherDepsButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Nivå");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgingenButton
        {
            get
            {
                if ((this.mUIVelgingenButton == null))
                {
                    this.mUIVelgingenButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.Name] = "bUnselectAllOtherDeps";
                    this.mUIVelgingenButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgingenButton.WindowTitles.Add("Nivå");
                    #endregion
                }
                return this.mUIVelgingenButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgingenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDatabaseLoginWindow : WinWindow
    {
        
        public UIDatabaseLoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Database Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmADOLogin";
            this.WindowTitles.Add("Database Login");
            #endregion
        }
        
        #region Properties
        public UIStandardClient UIStandardClient
        {
            get
            {
                if ((this.mUIStandardClient == null))
                {
                    this.mUIStandardClient = new UIStandardClient(this);
                }
                return this.mUIStandardClient;
            }
        }
        #endregion
        
        #region Fields
        private UIStandardClient mUIStandardClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStandardClient : WinClient
    {
        
        public UIStandardClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Standard";
            this.WindowTitles.Add("Database Login");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Database Login");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain_02 : WinWindow
    {
        
        public GatMain_02()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow3 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow3(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIStandaloneBarDockConCustom1 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom1(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow3 mUIItemWindow;
        
        private UIStandaloneBarDockConCustom1 mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIGatver64339794ASCLAvClient
        {
            get
            {
                if ((this.mUIGatver64339794ASCLAvClient == null))
                {
                    this.mUIGatver64339794ASCLAvClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIGatver64339794ASCLAvClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIGatver64339794ASCLAvClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGatver64339794ASCLAvClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIGatver64339794ASCLAvClient;
        #endregion
    }

    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStandaloneBarDockConCustom1 : DXTestControl
    {

        public UIStandaloneBarDockConCustom1(UITestControl searchLimitContainer) :
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }

        //#region Properties
        //public UIMainmenuMenuBar1 UIMainmenuMenuBar
        //{
        //    get
        //    {
        //        if ((this.mUIMainmenuMenuBar == null))
        //        {
        //            this.mUIMainmenuMenuBar = new UIMainmenuMenuBar1(this);
        //        }
        //        return this.mUIMainmenuMenuBar;
        //    }
        //}
        //#endregion

        //#region Fields
        //private UIMainmenuMenuBar1 mUIMainmenuMenuBar;
        //#endregion
    }

    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerBarConMenu : DXMenu
    {
        
        public UIPopupContainerBarConMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIPpcDatePickerClient UIPpcDatePickerClient
        {
            get
            {
                if ((this.mUIPpcDatePickerClient == null))
                {
                    this.mUIPpcDatePickerClient = new UIPpcDatePickerClient(this);
                }
                return this.mUIPpcDatePickerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcDatePickerClient mUIPpcDatePickerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPpcDatePickerClient : DXTestControl
    {
        
        public UIPpcDatePickerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXPopupEdit UIPceDatePopupEdit
        {
            get
            {
                if ((this.mUIPceDatePopupEdit == null))
                {
                    this.mUIPceDatePopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPopupContainerEdit";
                    this.mUIPceDatePopupEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIPceDatePopupEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPceDatePopupEdit;
            }
        }
        
        public DXButton UIGåtilButton
        {
            get
            {
                if ((this.mUIGåtilButton == null))
                {
                    this.mUIGåtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGoToDate";
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGåtilButton.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Vaktbok");
                    this.mUIGåtilButton.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIGåtilButton;
            }
        }
        #endregion
        
        #region Fields
        private DXPopupEdit mUIPceDatePopupEdit;
        
        private DXButton mUIGåtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain_03 : WinWindow
    {
        
        public GatMain_03()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow4 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow4(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow4 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxGridSite";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Administrasjon");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIAdministrasjonClient
        {
            get
            {
                if ((this.mUIAdministrasjonClient == null))
                {
                    this.mUIAdministrasjonClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAdministrasjonClient.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Administrasjon");
                    this.mUIAdministrasjonClient.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIAdministrasjonClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAdministrasjonClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVelgradWindow : WinWindow
    {
        
        public UIVelgradWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Velg rad";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmGridSearch";
            this.WindowTitles.Add("Velg rad");
            this.WindowTitles.Add("Välj rad");
            #endregion
        }
        
        #region Properties
        public UIItemWindow5 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow5(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow5 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TEdit";
            this.WindowTitles.Add("Velg rad");
            this.WindowTitles.Add("Välj rad");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Velg rad");
                    this.mUIItemEdit.WindowTitles.Add("Välj rad");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEFO3000GatWindow : WinWindow
    {
        
        public UIEFO3000GatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "EFO-3000 - Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("EFO-3000 - Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow6 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow6(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow6 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("EFO-3000 - Gat");
            #endregion
        }
        
        #region Properties
        public UIEFO3000GatClient UIEFO3000GatClient
        {
            get
            {
                if ((this.mUIEFO3000GatClient == null))
                {
                    this.mUIEFO3000GatClient = new UIEFO3000GatClient(this);
                }
                return this.mUIEFO3000GatClient;
            }
        }
        #endregion
        
        #region Fields
        private UIEFO3000GatClient mUIEFO3000GatClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEFO3000GatClient : WinClient
    {
        
        public UIEFO3000GatClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("EFO-3000 - Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("EFO-3000 - Gat");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain_04 : WinWindow
    {
        
        public GatMain_04()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow7 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow7(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow7 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIPanel1Client.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIItemEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicDateEdit";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2060-AML avdeling 1) - Rapportsenter ");
                    this.mUIItemEdit.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain_06 : WinWindow
    {
        
        public GatMain_06()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow8 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow8(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow8 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UIItem7Client UIItem7Client
        {
            get
            {
                if ((this.mUIItem7Client == null))
                {
                    this.mUIItem7Client = new UIItem7Client(this);
                }
                return this.mUIItem7Client;
            }
        }
        #endregion
        
        #region Fields
        private UIItem7Client mUIItem7Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItem7Client : WinClient
    {
        
        public UIItem7Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat ver. 6.4.3.39794 - (ASCL - Avd: 2065-AML avdeling 2) - Rapportsenter ");
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIBrukkalkulerteAMLbruCheckBox
        {
            get
            {
                if ((this.mUIBrukkalkulerteAMLbruCheckBox == null))
                {
                    this.mUIBrukkalkulerteAMLbruCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIBrukkalkulerteAMLbruCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Bruk kalkulerte AML brudd  OBS! Utdatert!";
                    #endregion
                }
                return this.mUIBrukkalkulerteAMLbruCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIBrukkalkulerteAMLbruCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIInternetInformationSWindow : WinWindow
    {
        
        public UIInternetInformationSWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Internet Information Services (IIS) Manager";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UI_treeViewWindow UI_treeViewWindow
        {
            get
            {
                if ((this.mUI_treeViewWindow == null))
                {
                    this.mUI_treeViewWindow = new UI_treeViewWindow(this);
                }
                return this.mUI_treeViewWindow;
            }
        }
        
        public UI_menuStripMenuBar UI_menuStripMenuBar
        {
            get
            {
                if ((this.mUI_menuStripMenuBar == null))
                {
                    this.mUI_menuStripMenuBar = new UI_menuStripMenuBar(this);
                }
                return this.mUI_menuStripMenuBar;
            }
        }
        
        public UIInternetInformationSTitleBar UIInternetInformationSTitleBar
        {
            get
            {
                if ((this.mUIInternetInformationSTitleBar == null))
                {
                    this.mUIInternetInformationSTitleBar = new UIInternetInformationSTitleBar(this);
                }
                return this.mUIInternetInformationSTitleBar;
            }
        }
        
        public UI_listViewWindow UI_listViewWindow
        {
            get
            {
                if ((this.mUI_listViewWindow == null))
                {
                    this.mUI_listViewWindow = new UI_listViewWindow(this);
                }
                return this.mUI_listViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_treeViewWindow mUI_treeViewWindow;
        
        private UI_menuStripMenuBar mUI_menuStripMenuBar;
        
        private UIInternetInformationSTitleBar mUIInternetInformationSTitleBar;
        
        private UI_listViewWindow mUI_listViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_treeViewWindow : WinWindow
    {
        
        public UI_treeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_treeView";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIATMANGATSOFTgeigTreeItem UIATMANGATSOFTgeigTreeItem
        {
            get
            {
                if ((this.mUIATMANGATSOFTgeigTreeItem == null))
                {
                    this.mUIATMANGATSOFTgeigTreeItem = new UIATMANGATSOFTgeigTreeItem(this);
                }
                return this.mUIATMANGATSOFTgeigTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIATMANGATSOFTgeigTreeItem mUIATMANGATSOFTgeigTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIATMANGATSOFTgeigTreeItem : WinTreeItem
    {
        
        public UIATMANGATSOFTgeigTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinTreeItem.PropertyNames.Name, "(INTERNAL\\", PropertyExpressionOperator.Contains));
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIApplicationPoolsTreeItem
        {
            get
            {
                if ((this.mUIApplicationPoolsTreeItem == null))
                {
                    this.mUIApplicationPoolsTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIApplicationPoolsTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Application Pools";
                    this.mUIApplicationPoolsTreeItem.SearchProperties["Value"] = "1";
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIApplicationPoolsTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIApplicationPoolsTreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIApplicationPoolsTreeItem;
            }
        }
        
        public UISitesTreeItem UISitesTreeItem
        {
            get
            {
                if ((this.mUISitesTreeItem == null))
                {
                    this.mUISitesTreeItem = new UISitesTreeItem(this);
                }
                return this.mUISitesTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIApplicationPoolsTreeItem;
        
        private UISitesTreeItem mUISitesTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISitesTreeItem : WinTreeItem
    {
        
        public UISitesTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Sites";
            this.SearchProperties["Value"] = "1";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIDefaultWebSiteTreeItem UIDefaultWebSiteTreeItem
        {
            get
            {
                if ((this.mUIDefaultWebSiteTreeItem == null))
                {
                    this.mUIDefaultWebSiteTreeItem = new UIDefaultWebSiteTreeItem(this);
                }
                return this.mUIDefaultWebSiteTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultWebSiteTreeItem mUIDefaultWebSiteTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDefaultWebSiteTreeItem : WinTreeItem
    {
        
        public UIDefaultWebSiteTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Default Web Site";
            this.SearchProperties["Value"] = "2";
            this.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
            this.SearchConfigurations.Add(SearchConfiguration.NextSibling);
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIGatWs1TreeItem
        {
            get
            {
                if ((this.mUIGatWs1TreeItem == null))
                {
                    this.mUIGatWs1TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIGatWs1TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "GatWs1";
                    this.mUIGatWs1TreeItem.SearchProperties["Value"] = "3";
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIGatWs1TreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGatWs1TreeItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs1TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIGatWs1TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_menuStripMenuBar : WinMenuBar
    {
        
        public UI_menuStripMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UIFileMenuItem UIFileMenuItem
        {
            get
            {
                if ((this.mUIFileMenuItem == null))
                {
                    this.mUIFileMenuItem = new UIFileMenuItem(this);
                }
                return this.mUIFileMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFileMenuItem mUIFileMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFileMenuItem : WinMenuItem
    {
        
        public UIFileMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "File";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIExitMenuItem
        {
            get
            {
                if ((this.mUIExitMenuItem == null))
                {
                    this.mUIExitMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIExitMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Exit";
                    this.mUIExitMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIExitMenuItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIExitMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIExitMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIInternetInformationSTitleBar : WinTitleBar
    {
        
        public UIInternetInformationSTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_listViewWindow : WinWindow
    {
        
        public UI_listViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_listView";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public UI_listViewList UI_listViewList
        {
            get
            {
                if ((this.mUI_listViewList == null))
                {
                    this.mUI_listViewList = new UI_listViewList(this);
                }
                return this.mUI_listViewList;
            }
        }
        #endregion
        
        #region Fields
        private UI_listViewList mUI_listViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_listViewList : WinList
    {
        
        public UI_listViewList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Application Pools";
            this.WindowTitles.Add("Internet Information Services (IIS) Manager");
            #endregion
        }
        
        #region Properties
        public WinListItem UIGatWs1ListItem
        {
            get
            {
                if ((this.mUIGatWs1ListItem == null))
                {
                    this.mUIGatWs1ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIGatWs1ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "GatWs1";
                    this.mUIGatWs1ListItem.WindowTitles.Add("Internet Information Services (IIS) Manager");
                    #endregion
                }
                return this.mUIGatWs1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIGatWs1ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIDropDownMenu UIDropDownMenu
        {
            get
            {
                if ((this.mUIDropDownMenu == null))
                {
                    this.mUIDropDownMenu = new UIDropDownMenu(this);
                }
                return this.mUIDropDownMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIDropDownMenu mUIDropDownMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDropDownMenu : WinMenu
    {
        
        public UIDropDownMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "DropDown";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIAddApplicationPoolMenuItem
        {
            get
            {
                if ((this.mUIAddApplicationPoolMenuItem == null))
                {
                    this.mUIAddApplicationPoolMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIAddApplicationPoolMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Add Application Pool...";
                    #endregion
                }
                return this.mUIAddApplicationPoolMenuItem;
            }
        }
        
        public WinMenuItem UIConverttoApplicationMenuItem
        {
            get
            {
                if ((this.mUIConverttoApplicationMenuItem == null))
                {
                    this.mUIConverttoApplicationMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIConverttoApplicationMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Convert to Application";
                    #endregion
                }
                return this.mUIConverttoApplicationMenuItem;
            }
        }
        
        public WinMenuItem UIRemoveMenuItem
        {
            get
            {
                if ((this.mUIRemoveMenuItem == null))
                {
                    this.mUIRemoveMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIRemoveMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Remove";
                    #endregion
                }
                return this.mUIRemoveMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIAddApplicationPoolMenuItem;
        
        private WinMenuItem mUIConverttoApplicationMenuItem;
        
        private WinMenuItem mUIRemoveMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAddApplicationPoolWindow : WinWindow
    {
        
        public UIAddApplicationPoolWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Add Application Pool";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add Application Pool");
            #endregion
        }
        
        #region Properties
        public UI_applicationPoolNameWindow UI_applicationPoolNameWindow
        {
            get
            {
                if ((this.mUI_applicationPoolNameWindow == null))
                {
                    this.mUI_applicationPoolNameWindow = new UI_applicationPoolNameWindow(this);
                }
                return this.mUI_applicationPoolNameWindow;
            }
        }
        
        public UI_applicationPoolVersWindow UI_applicationPoolVersWindow
        {
            get
            {
                if ((this.mUI_applicationPoolVersWindow == null))
                {
                    this.mUI_applicationPoolVersWindow = new UI_applicationPoolVersWindow(this);
                }
                return this.mUI_applicationPoolVersWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_applicationPoolNameWindow mUI_applicationPoolNameWindow;
        
        private UI_applicationPoolVersWindow mUI_applicationPoolVersWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_applicationPoolNameWindow : WinWindow
    {
        
        public UI_applicationPoolNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_applicationPoolNameTextBox";
            this.WindowTitles.Add("Add Application Pool");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_applicationPoolNameEdit
        {
            get
            {
                if ((this.mUI_applicationPoolNameEdit == null))
                {
                    this.mUI_applicationPoolNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_applicationPoolNameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name:";
                    this.mUI_applicationPoolNameEdit.WindowTitles.Add("Add Application Pool");
                    #endregion
                }
                return this.mUI_applicationPoolNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_applicationPoolNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_applicationPoolVersWindow : WinWindow
    {
        
        public UI_applicationPoolVersWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_applicationPoolVersionComboBox";
            this.WindowTitles.Add("Add Application Pool");
            #endregion
        }
        
        #region Properties
        public WinComboBox UINETCLRversionComboBox
        {
            get
            {
                if ((this.mUINETCLRversionComboBox == null))
                {
                    this.mUINETCLRversionComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUINETCLRversionComboBox.SearchProperties.Add(new PropertyExpression(WinComboBox.PropertyNames.Name, ".NET", PropertyExpressionOperator.Contains));
                    this.mUINETCLRversionComboBox.WindowTitles.Add("Add Application Pool");
                    #endregion
                }
                return this.mUINETCLRversionComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUINETCLRversionComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_okButton";
            this.WindowTitles.Add("Add Application Pool");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Add Application Pool");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAddApplicationWindow : WinWindow
    {
        
        public UIAddApplicationWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Add Application";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add Application");
            #endregion
        }
        
        #region Properties
        public UISelectWindow UISelectWindow
        {
            get
            {
                if ((this.mUISelectWindow == null))
                {
                    this.mUISelectWindow = new UISelectWindow(this);
                }
                return this.mUISelectWindow;
            }
        }
        
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISelectWindow mUISelectWindow;
        
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISelectWindow : WinWindow
    {
        
        public UISelectWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_selectApplicationPoolButton";
            this.WindowTitles.Add("Add Application");
            #endregion
        }
        
        #region Properties
        public WinButton UISelectButton
        {
            get
            {
                if ((this.mUISelectButton == null))
                {
                    this.mUISelectButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISelectButton.SearchProperties[WinButton.PropertyNames.Name] = "Select...";
                    this.mUISelectButton.WindowTitles.Add("Add Application");
                    #endregion
                }
                return this.mUISelectButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISelectButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_okButton";
            this.WindowTitles.Add("Add Application");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Add Application");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISelectApplicationPooWindow : WinWindow
    {
        
        public UISelectApplicationPooWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Select Application Pool";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Select Application Pool");
            #endregion
        }
        
        #region Properties
        public UI_applicationPoolNameWindow1 UI_applicationPoolNameWindow
        {
            get
            {
                if ((this.mUI_applicationPoolNameWindow == null))
                {
                    this.mUI_applicationPoolNameWindow = new UI_applicationPoolNameWindow1(this);
                }
                return this.mUI_applicationPoolNameWindow;
            }
        }
        
        public UIOKWindow2 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow2(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_applicationPoolNameWindow1 mUI_applicationPoolNameWindow;
        
        private UIOKWindow2 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_applicationPoolNameWindow1 : WinWindow
    {
        
        public UI_applicationPoolNameWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_applicationPoolNameComboBox";
            this.WindowTitles.Add("Select Application Pool");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIApplicationpoolComboBox
        {
            get
            {
                if ((this.mUIApplicationpoolComboBox == null))
                {
                    this.mUIApplicationpoolComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIApplicationpoolComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Application pool:";
                    this.mUIApplicationpoolComboBox.WindowTitles.Add("Select Application Pool");
                    #endregion
                }
                return this.mUIApplicationpoolComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIApplicationpoolComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow2 : WinWindow
    {
        
        public UIOKWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_okButton";
            this.WindowTitles.Add("Select Application Pool");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Select Application Pool");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGT4000BekreftWindow : WinWindow
    {
        
        public UIGT4000BekreftWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GT-4000 - Bekreft";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfmMessage";
            this.WindowTitles.Add("GT-4000 - Bekreft");
            this.WindowTitles.Add("GT-4000 - Bekräfta");
            #endregion
        }
        
        #region Properties
        public UIItemWindow10 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow10(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow10 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow10 : WinWindow
    {
        
        public UIItemWindow10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.WindowTitles.Add("GT-4000 - Bekreft");
            this.WindowTitles.Add("GT-4000 - Bekräfta");
            #endregion
        }
        
        #region Properties
        public UIGT4000BekreftClient UIGT4000BekreftClient
        {
            get
            {
                if ((this.mUIGT4000BekreftClient == null))
                {
                    this.mUIGT4000BekreftClient = new UIGT4000BekreftClient(this);
                }
                return this.mUIGT4000BekreftClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGT4000BekreftClient mUIGT4000BekreftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGT4000BekreftClient : WinClient
    {
        
        public UIGT4000BekreftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("GT-4000 - Bekreft");
            this.WindowTitles.Add("GT-4000 - Bekräfta");
            #endregion
        }
        
        #region Properties
        public WinButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[WinButton.PropertyNames.Name] = "Ja";
                    this.mUIJAButton.WindowTitles.Add("GT-4000 - Bekreft");
                    this.mUIJAButton.WindowTitles.Add("GT-4000 - Bekräfta");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIConfirmRemoveWindow : WinWindow
    {
        
        public UIConfirmRemoveWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Confirm Remove";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Confirm Remove");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Confirm Remove");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Confirm Remove");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain_08 : WinWindow
    {
        
        public GatMain_08()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcMainPanelClient : DXTestControl
    {
        
        public UIPcMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver.");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcPanListsTabList : DXTestControl
    {
        
        public UITcPanListsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41253 - (ASCL - Avd: 5090-Lønnsberegninger) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpRosterPlanListClient : DXTestControl
    {
        
        public UITpRosterPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 6.5.0.41253 - (ASCL - Avd: 5090-Lønnsberegninger) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRosterPlanListCustom : DXTestControl
    {
        
        public UIRosterPlanListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat ver.");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlGridClient : DXTestControl
    {
        
        public UIPnlGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41253 - (ASCL - Avd: 5090-Lønnsberegninger) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41253 - (ASCL - Avd: 5090-Lønnsberegninger) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat ver. 6.5.0.41253 - (ASCL - Avd: 5090-Lønnsberegninger) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRpgFiltersRibbonPageGroup UIRpgFiltersRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFiltersRibbonPageGroup == null))
                {
                    this.mUIRpgFiltersRibbonPageGroup = new UIRpgFiltersRibbonPageGroup(this);
                }
                return this.mUIRpgFiltersRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFiltersRibbonPageGroup mUIRpgFiltersRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgFiltersRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgFiltersRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilters";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.5.0.41253 - (ASCL - Avd: 5090-Lønnsberegninger) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINyeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINyeRibbonBaseButtonItem == null))
                {
                    this.mUINyeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINyeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowNewPlans";
                    this.mUINyeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINyeRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41253 - (ASCL - Avd: 5090-Lønnsberegninger) - Vaktbok");
                    #endregion
                }
                return this.mUINyeRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIGamleRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIGamleRibbonBaseButtonItem == null))
                {
                    this.mUIGamleRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowOldPlans";
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIGamleRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41253 - (ASCL - Avd: 5090-Lønnsberegninger) - Vaktbok");
                    #endregion
                }
                return this.mUIGamleRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINyeRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIGamleRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain_09 : WinWindow
    {
        
        public GatMain_09()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient1 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient1(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient1 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcMainPanelClient1 : DXTestControl
    {
        
        public UIPcMainPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                    "jon");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList1 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList1(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList1 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcPanListsTabList1 : DXTestControl
    {
        
        public UITcPanListsTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                    "jon");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient1 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient1(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient1 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpRosterPlanListClient1 : DXTestControl
    {
        
        public UITpRosterPlanListClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                    "jon");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom1 UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom1(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom1 mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRosterPlanListCustom1 : DXTestControl
    {
        
        public UIRosterPlanListCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                    "jon");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient1 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient1(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient1 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlGridClient1 : DXTestControl
    {
        
        public UIPnlGridClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                    "jon");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon1 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon1(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon1 mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonControlRibbon1 : DXRibbon
    {
        
        public UIRibbonControlRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                    "jon");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage1 UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage1(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage1 mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpHomeRibbonPage1 : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                    "jon");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        
        public UIRpgLevelRibbonPageGroup UIRpgLevelRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgLevelRibbonPageGroup == null))
                {
                    this.mUIRpgLevelRibbonPageGroup = new UIRpgLevelRibbonPageGroup(this);
                }
                return this.mUIRpgLevelRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup mUIRpgPlanRibbonPageGroup;
        
        private UIRpgLevelRibbonPageGroup mUIRpgLevelRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgPlanRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                    "jon");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINYRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINYRibbonBaseButtonItem == null))
                {
                    this.mUINYRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINYRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiNewPlan";
                    this.mUINYRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINYRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                            "jon");
                    this.mUINYRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUINYRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIÅpneRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIÅpneRibbonBaseButtonItem == null))
                {
                    this.mUIÅpneRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIÅpneRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiOpenPlan";
                    this.mUIÅpneRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIÅpneRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                            "jon");
                    this.mUIÅpneRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIÅpneRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UISlettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUISlettRibbonBaseButtonItem == null))
                {
                    this.mUISlettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiDeletePlan";
                    this.mUISlettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                            "jon");
                    this.mUISlettRibbonBaseButtonItem.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUISlettRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINYRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIÅpneRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUISlettRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgLevelRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgLevelRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgLevel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.5.0.41425 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Administras" +
                    "jon");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINivåRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINivåRibbonBaseButtonItem == null))
                {
                    this.mUINivåRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINivåRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiChangeLevel";
                    this.mUINivåRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINivåRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINivåRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINivåRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GT_4001_Informasjon : DXWindow
    {
        
        public GT_4001_Informasjon()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-4001 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-4001 - Informasjon");
            this.WindowTitles.Add("Informasjon");
            this.WindowTitles.Add("GT-4001 - Information");
            this.WindowTitles.Add("Information");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("GT-4001 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class RPL2_4007_Informasjon : DXWindow
    {
        
        public RPL2_4007_Informasjon()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "RPL2-4007 - Info", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-4007 - Informasjon");
            this.WindowTitles.Add("Informasjon");
            this.WindowTitles.Add("RPL2-4007 - Information");
            this.WindowTitles.Add("Information");
            #endregion
        }
        
        #region Properties
        public DXButton UIIgnorerButton
        {
            get
            {
                if ((this.mUIIgnorerButton == null))
                {
                    this.mUIIgnorerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIIgnorerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btIgnore";
                    this.mUIIgnorerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIIgnorerButton.WindowTitles.Add("RPL2-4007 - Informasjon");
                    this.mUIIgnorerButton.WindowTitles.Add("RPL2-4007 - Information");
                    #endregion
                }
                return this.mUIIgnorerButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIIgnorerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain_10 : WinWindow
    {
        
        public GatMain_10()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIStandaloneBarDockConCustom2 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom2(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIStandaloneBarDockConCustom2 mUIStandaloneBarDockConCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStandaloneBarDockConCustom2 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar2 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar2(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar2 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainmenuMenuBar2 : DXMenu
    {
        
        public UIMainmenuMenuBar2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIVelgdatoBarBaseButtonItem
        {
            get
            {
                if ((this.mUIVelgdatoBarBaseButtonItem == null))
                {
                    this.mUIVelgdatoBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
                    this.mUIVelgdatoBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUIVelgdatoBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIVelgdatoBarBaseButtonItem;
            }
        }
        
        public UIVelgdatoBarItem1 UIVelgdatoBarItem
        {
            get
            {
                if ((this.mUIVelgdatoBarItem == null))
                {
                    this.mUIVelgdatoBarItem = new UIVelgdatoBarItem1(this);
                }
                return this.mUIVelgdatoBarItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIVelgdatoBarBaseButtonItem;
        
        private UIVelgdatoBarItem1 mUIVelgdatoBarItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVelgdatoBarItem1 : DXMenuItem
    {
        
        public UIVelgdatoBarItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPopupContainerBarConMenu1 UIPopupContainerBarConMenu
        {
            get
            {
                if ((this.mUIPopupContainerBarConMenu == null))
                {
                    this.mUIPopupContainerBarConMenu = new UIPopupContainerBarConMenu1(this);
                }
                return this.mUIPopupContainerBarConMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupContainerBarConMenu1 mUIPopupContainerBarConMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupContainerBarConMenu1 : DXMenu
    {
        
        public UIPopupContainerBarConMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupContainerBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupContainerBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPpcDatePickerClient1 UIPpcDatePickerClient
        {
            get
            {
                if ((this.mUIPpcDatePickerClient == null))
                {
                    this.mUIPpcDatePickerClient = new UIPpcDatePickerClient1(this);
                }
                return this.mUIPpcDatePickerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPpcDatePickerClient1 mUIPpcDatePickerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPpcDatePickerClient1 : DXTestControl
    {
        
        public UIPpcDatePickerClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ppcDatePicker";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UISdeDateCustom UISdeDateCustom
        {
            get
            {
                if ((this.mUISdeDateCustom == null))
                {
                    this.mUISdeDateCustom = new UISdeDateCustom(this);
                }
                return this.mUISdeDateCustom;
            }
        }
        
        public DXButton UIGåtilButton
        {
            get
            {
                if ((this.mUIGåtilButton == null))
                {
                    this.mUIGåtilButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnGoToDate";
                    this.mUIGåtilButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGåtilButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGåtilButton;
            }
        }
        #endregion
        
        #region Fields
        private UISdeDateCustom mUISdeDateCustom;
        
        private DXButton mUIGåtilButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISdeDateCustom : DXTestControl
    {
        
        public UISdeDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMerarbeidovertidWindow : DXWindow
    {
        
        public UIMerarbeidovertidWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Merarbeid / overtid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Merarbeid / overtid");
            this.WindowTitles.Add("Mertid");
            #endregion
        }
        
        #region Properties
        public UIPanClientClient UIPanClientClient
        {
            get
            {
                if ((this.mUIPanClientClient == null))
                {
                    this.mUIPanClientClient = new UIPanClientClient(this);
                }
                return this.mUIPanClientClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientClient mUIPanClientClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanClientClient : DXTestControl
    {
        
        public UIPanClientClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcClientTabList : DXTestControl
    {
        
        public UITcClientTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UITpMainClient UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpMainClient : DXTestControl
    {
        
        public UITpMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGcShiftDetailsClient UIGcShiftDetailsClient
        {
            get
            {
                if ((this.mUIGcShiftDetailsClient == null))
                {
                    this.mUIGcShiftDetailsClient = new UIGcShiftDetailsClient(this);
                }
                return this.mUIGcShiftDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftDetailsClient mUIGcShiftDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcShiftDetailsClient : DXTestControl
    {
        
        public UIGcShiftDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIDeDateCustom UIDeDateCustom
        {
            get
            {
                if ((this.mUIDeDateCustom == null))
                {
                    this.mUIDeDateCustom = new UIDeDateCustom(this);
                }
                return this.mUIDeDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDeDateCustom mUIDeDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeDateCustom : DXTestControl
    {
        
        public UIDeDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINyarbeidsplanWindow : DXWindow
    {
        
        public UINyarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControlMainCustom : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNaLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNeLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcMainInfoLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlMainInfoClient : DXTestControl
    {
        
        public UIPnlMainInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDeStartDateCustom UIDeStartDateCustom
        {
            get
            {
                if ((this.mUIDeStartDateCustom == null))
                {
                    this.mUIDeStartDateCustom = new UIDeStartDateCustom(this);
                }
                return this.mUIDeStartDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDeStartDateCustom mUIDeStartDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeStartDateCustom : DXTestControl
    {
        
        public UIDeStartDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Ny arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Ny arbeidsplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanInnstilliWindow : DXWindow
    {
        
        public UIArbeidsplanInnstilliWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan - Innstillinger";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITcDataTabList UITcDataTabList
        {
            get
            {
                if ((this.mUITcDataTabList == null))
                {
                    this.mUITcDataTabList = new UITcDataTabList(this);
                }
                return this.mUITcDataTabList;
            }
        }
        
        public UIGSPanelControlClient UIGSPanelControlClient
        {
            get
            {
                if ((this.mUIGSPanelControlClient == null))
                {
                    this.mUIGSPanelControlClient = new UIGSPanelControlClient(this);
                }
                return this.mUIGSPanelControlClient;
            }
        }
        
        public UITcDataTabList1 UITcDataTabList1
        {
            get
            {
                if ((this.mUITcDataTabList1 == null))
                {
                    this.mUITcDataTabList1 = new UITcDataTabList1(this);
                }
                return this.mUITcDataTabList1;
            }
        }
        #endregion
        
        #region Fields
        private UITcDataTabList mUITcDataTabList;
        
        private UIGSPanelControlClient mUIGSPanelControlClient;
        
        private UITcDataTabList1 mUITcDataTabList1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcDataTabList : DXTestControl
    {
        
        public UITcDataTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcData";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITpConfigurationClient UITpConfigurationClient
        {
            get
            {
                if ((this.mUITpConfigurationClient == null))
                {
                    this.mUITpConfigurationClient = new UITpConfigurationClient(this);
                }
                return this.mUITpConfigurationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpConfigurationClient mUITpConfigurationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpConfigurationClient : DXTestControl
    {
        
        public UITpConfigurationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpConfiguration";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UIPaCenterClient UIPaCenterClient
        {
            get
            {
                if ((this.mUIPaCenterClient == null))
                {
                    this.mUIPaCenterClient = new UIPaCenterClient(this);
                }
                return this.mUIPaCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaCenterClient mUIPaCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPaCenterClient : DXTestControl
    {
        
        public UIPaCenterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UIEValidToDateCustom UIEValidToDateCustom
        {
            get
            {
                if ((this.mUIEValidToDateCustom == null))
                {
                    this.mUIEValidToDateCustom = new UIEValidToDateCustom(this);
                }
                return this.mUIEValidToDateCustom;
            }
        }
        
        public UIEStopDateCustom UIEStopDateCustom
        {
            get
            {
                if ((this.mUIEStopDateCustom == null))
                {
                    this.mUIEStopDateCustom = new UIEStopDateCustom(this);
                }
                return this.mUIEStopDateCustom;
            }
        }
        
        public UIEStartDateCustom UIEStartDateCustom
        {
            get
            {
                if ((this.mUIEStartDateCustom == null))
                {
                    this.mUIEStartDateCustom = new UIEStartDateCustom(this);
                }
                return this.mUIEStartDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEValidToDateCustom mUIEValidToDateCustom;
        
        private UIEStopDateCustom mUIEStopDateCustom;
        
        private UIEStartDateCustom mUIEStartDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEValidToDateCustom : DXTestControl
    {
        
        public UIEValidToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eValidToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEStopDateCustom : DXTestControl
    {
        
        public UIEStopDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eStopDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEStartDateCustom : DXTestControl
    {
        
        public UIEStartDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGSPanelControlClient : DXTestControl
    {
        
        public UIGSPanelControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcDataTabList1 : DXTestControl
    {
        
        public UITcDataTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcData";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UITpConfigurationClient1 UITpConfigurationClient
        {
            get
            {
                if ((this.mUITpConfigurationClient == null))
                {
                    this.mUITpConfigurationClient = new UITpConfigurationClient1(this);
                }
                return this.mUITpConfigurationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpConfigurationClient1 mUITpConfigurationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpConfigurationClient1 : DXTestControl
    {
        
        public UITpConfigurationClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpConfiguration";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public UIPaCenterClient1 UIPaCenterClient
        {
            get
            {
                if ((this.mUIPaCenterClient == null))
                {
                    this.mUIPaCenterClient = new UIPaCenterClient1(this);
                }
                return this.mUIPaCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaCenterClient1 mUIPaCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPaCenterClient1 : DXTestControl
    {
        
        public UIPaCenterClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkNighShiftOnStartDCheckBox
        {
            get
            {
                if ((this.mUIChkNighShiftOnStartDCheckBox == null))
                {
                    this.mUIChkNighShiftOnStartDCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkNighShiftOnStartDCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkNighShiftOnStartDay";
                    this.mUIChkNighShiftOnStartDCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkNighShiftOnStartDCheckBox.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIChkNighShiftOnStartDCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkNighShiftOnStartDCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEndreiverksettingspeWindow : DXWindow
    {
        
        public UIEndreiverksettingspeWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Endre iverksettingsperiode";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Endre iverksettingsperiode");
            this.WindowTitles.Add("Ändra verkställande period");
            #endregion
        }
        
        #region Properties
        public UIEFromDateCustom UIEFromDateCustom
        {
            get
            {
                if ((this.mUIEFromDateCustom == null))
                {
                    this.mUIEFromDateCustom = new UIEFromDateCustom(this);
                }
                return this.mUIEFromDateCustom;
            }
        }
        
        public UIEToDateCustom UIEToDateCustom
        {
            get
            {
                if ((this.mUIEToDateCustom == null))
                {
                    this.mUIEToDateCustom = new UIEToDateCustom(this);
                }
                return this.mUIEToDateCustom;
            }
        }
        
        public UIPnlButtonsClient UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        
        public UIPnlButtonsClient1 UIPnlButtonsClient1
        {
            get
            {
                if ((this.mUIPnlButtonsClient1 == null))
                {
                    this.mUIPnlButtonsClient1 = new UIPnlButtonsClient1(this);
                }
                return this.mUIPnlButtonsClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIEFromDateCustom mUIEFromDateCustom;
        
        private UIEToDateCustom mUIEToDateCustom;
        
        private UIPnlButtonsClient mUIPnlButtonsClient;
        
        private UIPnlButtonsClient1 mUIPnlButtonsClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEFromDateCustom : DXTestControl
    {
        
        public UIEFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEToDateCustom : DXTestControl
    {
        
        public UIEToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlButtonsClient : DXTestControl
    {
        
        public UIPnlButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlButtonsClient1 : DXTestControl
    {
        
        public UIPnlButtonsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Endre iverksettingsperiode");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Endre iverksettingsperiode");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINyhjelpeplanWindow : DXWindow
    {
        
        public UINyhjelpeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny hjelpeplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient1 UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient1(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        
        public UIPnlMainClient11 UIPnlMainClient1
        {
            get
            {
                if ((this.mUIPnlMainClient1 == null))
                {
                    this.mUIPnlMainClient1 = new UIPnlMainClient11(this);
                }
                return this.mUIPnlMainClient1;
            }
        }
        
        public UIPnlButtonsClient2 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient2(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient1 mUIPnlMainClient;
        
        private UIPnlMainClient11 mUIPnlMainClient1;
        
        private UIPnlButtonsClient2 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlMainClient1 : DXTestControl
    {
        
        public UIPnlMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom1 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom1(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom1 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControlMainCustom1 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup1 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup1 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNaLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup1 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup1(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup1 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNeLayoutGroup1 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem1 UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem1(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem1 mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcMainInfoLayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient1 UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient1(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient1 mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlMainInfoClient1 : DXTestControl
    {
        
        public UIPnlMainInfoClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIDeStartDateCustom1 UIDeStartDateCustom
        {
            get
            {
                if ((this.mUIDeStartDateCustom == null))
                {
                    this.mUIDeStartDateCustom = new UIDeStartDateCustom1(this);
                }
                return this.mUIDeStartDateCustom;
            }
        }
        
        public UIGcF3CalcualtionPerioClient UIGcF3CalcualtionPerioClient
        {
            get
            {
                if ((this.mUIGcF3CalcualtionPerioClient == null))
                {
                    this.mUIGcF3CalcualtionPerioClient = new UIGcF3CalcualtionPerioClient(this);
                }
                return this.mUIGcF3CalcualtionPerioClient;
            }
        }
        #endregion
        
        #region Fields
        private UIDeStartDateCustom1 mUIDeStartDateCustom;
        
        private UIGcF3CalcualtionPerioClient mUIGcF3CalcualtionPerioClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeStartDateCustom1 : DXTestControl
    {
        
        public UIDeStartDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcF3CalcualtionPerioClient : DXTestControl
    {
        
        public UIGcF3CalcualtionPerioClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcF3CalcualtionPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIEF3FromDateCustom UIEF3FromDateCustom
        {
            get
            {
                if ((this.mUIEF3FromDateCustom == null))
                {
                    this.mUIEF3FromDateCustom = new UIEF3FromDateCustom(this);
                }
                return this.mUIEF3FromDateCustom;
            }
        }
        
        public UIEF3ToDateCustom UIEF3ToDateCustom
        {
            get
            {
                if ((this.mUIEF3ToDateCustom == null))
                {
                    this.mUIEF3ToDateCustom = new UIEF3ToDateCustom(this);
                }
                return this.mUIEF3ToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEF3FromDateCustom mUIEF3FromDateCustom;
        
        private UIEF3ToDateCustom mUIEF3ToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEF3FromDateCustom : DXTestControl
    {
        
        public UIEF3FromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eF3FromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEF3ToDateCustom : DXTestControl
    {
        
        public UIEF3ToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eF3ToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlMainClient11 : DXTestControl
    {
        
        public UIPnlMainClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom2 UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom2(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom2 mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControlMainCustom2 : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup2 UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup2(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup2 mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNaLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup2 UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup2(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup2 mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNeLayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILcMainInfoLayoutControlItem2 UILcMainInfoLayoutControlItem
        {
            get
            {
                if ((this.mUILcMainInfoLayoutControlItem == null))
                {
                    this.mUILcMainInfoLayoutControlItem = new UILcMainInfoLayoutControlItem2(this);
                }
                return this.mUILcMainInfoLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILcMainInfoLayoutControlItem2 mUILcMainInfoLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcMainInfoLayoutControlItem2 : DXBaseLayoutItem
    {
        
        public UILcMainInfoLayoutControlItem2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainInfoClient2 UIPnlMainInfoClient
        {
            get
            {
                if ((this.mUIPnlMainInfoClient == null))
                {
                    this.mUIPnlMainInfoClient = new UIPnlMainInfoClient2(this);
                }
                return this.mUIPnlMainInfoClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainInfoClient2 mUIPnlMainInfoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlMainInfoClient2 : DXTestControl
    {
        
        public UIPnlMainInfoClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMainInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXTextEdit UIENumber0Edit
        {
            get
            {
                if ((this.mUIENumber0Edit == null))
                {
                    this.mUIENumber0Edit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber[0]";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumber0Edit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumber0Edit.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIENumber0Edit;
            }
        }
        #endregion
        
        #region Fields
        private DXTextEdit mUIENumber0Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlButtonsClient2 : DXTestControl
    {
        
        public UIPnlButtonsClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBemanningsplanWindow : DXWindow
    {
        
        public UIBemanningsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bemanningsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UIPaNavbarsPanelClient UIPaNavbarsPanelClient
        {
            get
            {
                if ((this.mUIPaNavbarsPanelClient == null))
                {
                    this.mUIPaNavbarsPanelClient = new UIPaNavbarsPanelClient(this);
                }
                return this.mUIPaNavbarsPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaNavbarsPanelClient mUIPaNavbarsPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPaNavbarsPanelClient : DXTestControl
    {
        
        public UIPaNavbarsPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paNavbarsPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UIGsMainControlNavBar UIGsMainControlNavBar
        {
            get
            {
                if ((this.mUIGsMainControlNavBar == null))
                {
                    this.mUIGsMainControlNavBar = new UIGsMainControlNavBar(this);
                }
                return this.mUIGsMainControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsMainControlNavBar mUIGsMainControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsMainControlNavBar : DXNavBar
    {
        
        public UIGsMainControlNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsMainControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UINbgccDetailsScrollableControl UINbgccDetailsScrollableControl
        {
            get
            {
                if ((this.mUINbgccDetailsScrollableControl == null))
                {
                    this.mUINbgccDetailsScrollableControl = new UINbgccDetailsScrollableControl(this);
                }
                return this.mUINbgccDetailsScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccDetailsScrollableControl mUINbgccDetailsScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgccDetailsScrollableControl : DXScrollableControl
    {
        
        public UINbgccDetailsScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public UIDtFromDateCustom UIDtFromDateCustom
        {
            get
            {
                if ((this.mUIDtFromDateCustom == null))
                {
                    this.mUIDtFromDateCustom = new UIDtFromDateCustom(this);
                }
                return this.mUIDtFromDateCustom;
            }
        }
        
        public UIDtToDateCustom UIDtToDateCustom
        {
            get
            {
                if ((this.mUIDtToDateCustom == null))
                {
                    this.mUIDtToDateCustom = new UIDtToDateCustom(this);
                }
                return this.mUIDtToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDtFromDateCustom mUIDtFromDateCustom;
        
        private UIDtToDateCustom mUIDtToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDtFromDateCustom : DXTestControl
    {
        
        public UIDtFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dtFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDtToDateCustom : DXTestControl
    {
        
        public UIDtToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dtToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Bemanningsplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Bemanningsplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBemanningsplanlagWindow : DXWindow
    {
        
        public UIBemanningsplanlagWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bemanningsplan lag";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bemanningsplan lag");
            #endregion
        }
        
        #region Properties
        public UIPaNavbarsPanelClient1 UIPaNavbarsPanelClient
        {
            get
            {
                if ((this.mUIPaNavbarsPanelClient == null))
                {
                    this.mUIPaNavbarsPanelClient = new UIPaNavbarsPanelClient1(this);
                }
                return this.mUIPaNavbarsPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaNavbarsPanelClient1 mUIPaNavbarsPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPaNavbarsPanelClient1 : DXTestControl
    {
        
        public UIPaNavbarsPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paNavbarsPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bemanningsplan lag");
            #endregion
        }
        
        #region Properties
        public UIGsMainControlNavBar1 UIGsMainControlNavBar
        {
            get
            {
                if ((this.mUIGsMainControlNavBar == null))
                {
                    this.mUIGsMainControlNavBar = new UIGsMainControlNavBar1(this);
                }
                return this.mUIGsMainControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsMainControlNavBar1 mUIGsMainControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsMainControlNavBar1 : DXNavBar
    {
        
        public UIGsMainControlNavBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsMainControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Bemanningsplan lag");
            #endregion
        }
        
        #region Properties
        public UINbgccDetailsScrollableControl1 UINbgccDetailsScrollableControl
        {
            get
            {
                if ((this.mUINbgccDetailsScrollableControl == null))
                {
                    this.mUINbgccDetailsScrollableControl = new UINbgccDetailsScrollableControl1(this);
                }
                return this.mUINbgccDetailsScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccDetailsScrollableControl1 mUINbgccDetailsScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgccDetailsScrollableControl1 : DXScrollableControl
    {
        
        public UINbgccDetailsScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bemanningsplan lag");
            #endregion
        }
        
        #region Properties
        public UIDtFromDateCustom1 UIDtFromDateCustom
        {
            get
            {
                if ((this.mUIDtFromDateCustom == null))
                {
                    this.mUIDtFromDateCustom = new UIDtFromDateCustom1(this);
                }
                return this.mUIDtFromDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDtFromDateCustom1 mUIDtFromDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDtFromDateCustom1 : DXTestControl
    {
        
        public UIDtFromDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dtFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Bemanningsplan lag");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Bemanningsplan lag");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDøgnrytmeplanWindow : DXWindow
    {
        
        public UIDøgnrytmeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Døgnrytmeplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UIPaNavbarPanelClient UIPaNavbarPanelClient
        {
            get
            {
                if ((this.mUIPaNavbarPanelClient == null))
                {
                    this.mUIPaNavbarPanelClient = new UIPaNavbarPanelClient(this);
                }
                return this.mUIPaNavbarPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaNavbarPanelClient mUIPaNavbarPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPaNavbarPanelClient : DXTestControl
    {
        
        public UIPaNavbarPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paNavbarPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UIGsMainControlNavBar2 UIGsMainControlNavBar
        {
            get
            {
                if ((this.mUIGsMainControlNavBar == null))
                {
                    this.mUIGsMainControlNavBar = new UIGsMainControlNavBar2(this);
                }
                return this.mUIGsMainControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsMainControlNavBar2 mUIGsMainControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsMainControlNavBar2 : DXNavBar
    {
        
        public UIGsMainControlNavBar2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsMainControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UINbgccDetailsScrollableControl2 UINbgccDetailsScrollableControl
        {
            get
            {
                if ((this.mUINbgccDetailsScrollableControl == null))
                {
                    this.mUINbgccDetailsScrollableControl = new UINbgccDetailsScrollableControl2(this);
                }
                return this.mUINbgccDetailsScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccDetailsScrollableControl2 mUINbgccDetailsScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgccDetailsScrollableControl2 : DXScrollableControl
    {
        
        public UINbgccDetailsScrollableControl2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public UIDtFromDateCustom2 UIDtFromDateCustom
        {
            get
            {
                if ((this.mUIDtFromDateCustom == null))
                {
                    this.mUIDtFromDateCustom = new UIDtFromDateCustom2(this);
                }
                return this.mUIDtFromDateCustom;
            }
        }
        
        public UIDtToDateCustom1 UIDtToDateCustom
        {
            get
            {
                if ((this.mUIDtToDateCustom == null))
                {
                    this.mUIDtToDateCustom = new UIDtToDateCustom1(this);
                }
                return this.mUIDtToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDtFromDateCustom2 mUIDtFromDateCustom;
        
        private UIDtToDateCustom1 mUIDtToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDtFromDateCustom2 : DXTestControl
    {
        
        public UIDtFromDateCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dtFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Døgnrytmeplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDtToDateCustom1 : DXTestControl
    {
        
        public UIDtToDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dtToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Døgnrytmeplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Døgnrytmeplan");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDøgnrytmelagWindow : DXWindow
    {
        
        public UIDøgnrytmelagWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Døgnrytme lag";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UIPaNavbarsPanelClient2 UIPaNavbarsPanelClient
        {
            get
            {
                if ((this.mUIPaNavbarsPanelClient == null))
                {
                    this.mUIPaNavbarsPanelClient = new UIPaNavbarsPanelClient2(this);
                }
                return this.mUIPaNavbarsPanelClient;
            }
        }
        
        public UIGsMainControlNavBar4 UIGsMainControlNavBar
        {
            get
            {
                if ((this.mUIGsMainControlNavBar == null))
                {
                    this.mUIGsMainControlNavBar = new UIGsMainControlNavBar4(this);
                }
                return this.mUIGsMainControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIPaNavbarsPanelClient2 mUIPaNavbarsPanelClient;
        
        private UIGsMainControlNavBar4 mUIGsMainControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPaNavbarsPanelClient2 : DXTestControl
    {
        
        public UIPaNavbarsPanelClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paNavbarsPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UIGsMainControlNavBar3 UIGsMainControlNavBar
        {
            get
            {
                if ((this.mUIGsMainControlNavBar == null))
                {
                    this.mUIGsMainControlNavBar = new UIGsMainControlNavBar3(this);
                }
                return this.mUIGsMainControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGsMainControlNavBar3 mUIGsMainControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsMainControlNavBar3 : DXNavBar
    {
        
        public UIGsMainControlNavBar3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsMainControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UINbgccDetailsScrollableControl3 UINbgccDetailsScrollableControl
        {
            get
            {
                if ((this.mUINbgccDetailsScrollableControl == null))
                {
                    this.mUINbgccDetailsScrollableControl = new UINbgccDetailsScrollableControl3(this);
                }
                return this.mUINbgccDetailsScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccDetailsScrollableControl3 mUINbgccDetailsScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgccDetailsScrollableControl3 : DXScrollableControl
    {
        
        public UINbgccDetailsScrollableControl3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UIDtFromDateCustom3 UIDtFromDateCustom
        {
            get
            {
                if ((this.mUIDtFromDateCustom == null))
                {
                    this.mUIDtFromDateCustom = new UIDtFromDateCustom3(this);
                }
                return this.mUIDtFromDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDtFromDateCustom3 mUIDtFromDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDtFromDateCustom3 : DXTestControl
    {
        
        public UIDtFromDateCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dtFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsMainControlNavBar4 : DXNavBar
    {
        
        public UIGsMainControlNavBar4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsMainControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UINbgccDetailsScrollableControl4 UINbgccDetailsScrollableControl
        {
            get
            {
                if ((this.mUINbgccDetailsScrollableControl == null))
                {
                    this.mUINbgccDetailsScrollableControl = new UINbgccDetailsScrollableControl4(this);
                }
                return this.mUINbgccDetailsScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINbgccDetailsScrollableControl4 mUINbgccDetailsScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbgccDetailsScrollableControl4 : DXScrollableControl
    {
        
        public UINbgccDetailsScrollableControl4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbgccDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public UIDtFromDateCustom4 UIDtFromDateCustom
        {
            get
            {
                if ((this.mUIDtFromDateCustom == null))
                {
                    this.mUIDtFromDateCustom = new UIDtFromDateCustom4(this);
                }
                return this.mUIDtFromDateCustom;
            }
        }
        
        public DXRadioGroup UIGsRotationRadioGroup
        {
            get
            {
                if ((this.mUIGsRotationRadioGroup == null))
                {
                    this.mUIGsRotationRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIGsRotationRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "gsRotation";
                    this.mUIGsRotationRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIGsRotationRadioGroup.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIGsRotationRadioGroup;
            }
        }
        
        public UIDtToDateCustom2 UIDtToDateCustom
        {
            get
            {
                if ((this.mUIDtToDateCustom == null))
                {
                    this.mUIDtToDateCustom = new UIDtToDateCustom2(this);
                }
                return this.mUIDtToDateCustom;
            }
        }
        
        public DXTestControl UILblToDateCommentLabel
        {
            get
            {
                if ((this.mUILblToDateCommentLabel == null))
                {
                    this.mUILblToDateCommentLabel = new DXTestControl(this);
                    #region Search Criteria
                    this.mUILblToDateCommentLabel.SearchProperties[DXTestControl.PropertyNames.Name] = "lblToDateComment";
                    this.mUILblToDateCommentLabel.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLabelControl";
                    this.mUILblToDateCommentLabel.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUILblToDateCommentLabel;
            }
        }
        #endregion
        
        #region Fields
        private UIDtFromDateCustom4 mUIDtFromDateCustom;
        
        private DXRadioGroup mUIGsRotationRadioGroup;
        
        private UIDtToDateCustom2 mUIDtToDateCustom;
        
        private DXTestControl mUILblToDateCommentLabel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDtFromDateCustom4 : DXTestControl
    {
        
        public UIDtFromDateCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dtFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDtToDateCustom2 : DXTestControl
    {
        
        public UIDtToDateCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dtToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Døgnrytme lag");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Døgnrytme lag");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStillingsforholdWindow : DXWindow
    {
        
        public UIStillingsforholdWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Stillingsforhold";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public UISdeFromDateCustom UISdeFromDateCustom
        {
            get
            {
                if ((this.mUISdeFromDateCustom == null))
                {
                    this.mUISdeFromDateCustom = new UISdeFromDateCustom(this);
                }
                return this.mUISdeFromDateCustom;
            }
        }
        
        public UISdeToDateCustom UISdeToDateCustom
        {
            get
            {
                if ((this.mUISdeToDateCustom == null))
                {
                    this.mUISdeToDateCustom = new UISdeToDateCustom(this);
                }
                return this.mUISdeToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISdeFromDateCustom mUISdeFromDateCustom;
        
        private UISdeToDateCustom mUISdeToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISdeFromDateCustom : DXTestControl
    {
        
        public UISdeFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISdeToDateCustom : DXTestControl
    {
        
        public UISdeToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Stillingsforhold");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Stillingsforhold");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILinjeinnstillingerDaWindow : DXWindow
    {
        
        public UILinjeinnstillingerDaWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Linjeinnstillinger", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Linjeinnstillinger - [Dalene, Dolly]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl3Client UIGsPanelControl3Client
        {
            get
            {
                if ((this.mUIGsPanelControl3Client == null))
                {
                    this.mUIGsPanelControl3Client = new UIGsPanelControl3Client(this);
                }
                return this.mUIGsPanelControl3Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl3Client mUIGsPanelControl3Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl3Client : DXTestControl
    {
        
        public UIGsPanelControl3Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Linjeinnstillinger - [Dalene, Dolly]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public UIERevolveFromCustom UIERevolveFromCustom
        {
            get
            {
                if ((this.mUIERevolveFromCustom == null))
                {
                    this.mUIERevolveFromCustom = new UIERevolveFromCustom(this);
                }
                return this.mUIERevolveFromCustom;
            }
        }
        
        public UIERevolveToCustom UIERevolveToCustom
        {
            get
            {
                if ((this.mUIERevolveToCustom == null))
                {
                    this.mUIERevolveToCustom = new UIERevolveToCustom(this);
                }
                return this.mUIERevolveToCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIERevolveFromCustom mUIERevolveFromCustom;
        
        private UIERevolveToCustom mUIERevolveToCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIERevolveFromCustom : DXTestControl
    {
        
        public UIERevolveFromCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eRevolveFrom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Linjeinnstillinger - [Dalene, Dolly]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Linjeinnstillinger - [Dalene, Dolly]");
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIERevolveToCustom : DXTestControl
    {
        
        public UIERevolveToCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eRevolveTo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Linjeinnstillinger - [Dalene, Dolly]");
            this.WindowTitles.Add("Linjeinnstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Linjeinnstillinger - [Dalene, Dolly]");
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Linjeinnstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIByttansattWindow : DXWindow
    {
        
        public UIByttansattWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytt ansatt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient1 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient1(this);
                }
                return this.mUIPcContentClient;
            }
        }
        
        public UIPcContentClient11 UIPcContentClient1
        {
            get
            {
                if ((this.mUIPcContentClient1 == null))
                {
                    this.mUIPcContentClient1 = new UIPcContentClient11(this);
                }
                return this.mUIPcContentClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient1 mUIPcContentClient;
        
        private UIPcContentClient11 mUIPcContentClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient1 : DXTestControl
    {
        
        public UIPcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl3Client1 UIGsPanelControl3Client
        {
            get
            {
                if ((this.mUIGsPanelControl3Client == null))
                {
                    this.mUIGsPanelControl3Client = new UIGsPanelControl3Client1(this);
                }
                return this.mUIGsPanelControl3Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl3Client1 mUIGsPanelControl3Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl3Client1 : DXTestControl
    {
        
        public UIGsPanelControl3Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl4Client UIGsPanelControl4Client
        {
            get
            {
                if ((this.mUIGsPanelControl4Client == null))
                {
                    this.mUIGsPanelControl4Client = new UIGsPanelControl4Client(this);
                }
                return this.mUIGsPanelControl4Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl4Client mUIGsPanelControl4Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl4Client : DXTestControl
    {
        
        public UIGsPanelControl4Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public UIEFromDateCustom1 UIEFromDateCustom
        {
            get
            {
                if ((this.mUIEFromDateCustom == null))
                {
                    this.mUIEFromDateCustom = new UIEFromDateCustom1(this);
                }
                return this.mUIEFromDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEFromDateCustom1 mUIEFromDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEFromDateCustom1 : DXTestControl
    {
        
        public UIEFromDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Bytt ansatt");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient11 : DXTestControl
    {
        
        public UIPcContentClient11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client1 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client1(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client1 mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client1 : DXTestControl
    {
        
        public UIGsPanelControl1Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public UIGcOriginalLineClient UIGcOriginalLineClient
        {
            get
            {
                if ((this.mUIGcOriginalLineClient == null))
                {
                    this.mUIGcOriginalLineClient = new UIGcOriginalLineClient(this);
                }
                return this.mUIGcOriginalLineClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcOriginalLineClient mUIGcOriginalLineClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcOriginalLineClient : DXTestControl
    {
        
        public UIGcOriginalLineClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcOriginalLine";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Bytt ansatt");
            #endregion
        }
        
        #region Properties
        public DXCheckBox UIChkDoSetInactiveCheckBox
        {
            get
            {
                if ((this.mUIChkDoSetInactiveCheckBox == null))
                {
                    this.mUIChkDoSetInactiveCheckBox = new DXCheckBox(this);
                    #region Search Criteria
                    this.mUIChkDoSetInactiveCheckBox.SearchProperties[DXTestControl.PropertyNames.Name] = "chkDoSetInactive";
                    this.mUIChkDoSetInactiveCheckBox.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSCheckEdit";
                    this.mUIChkDoSetInactiveCheckBox.WindowTitles.Add("Bytt ansatt");
                    #endregion
                }
                return this.mUIChkDoSetInactiveCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private DXCheckBox mUIChkDoSetInactiveCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFraværsregistreringWindow : DXWindow
    {
        
        public UIFraværsregistreringWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsregistrering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINbcLeftNavBar UINbcLeftNavBar
        {
            get
            {
                if ((this.mUINbcLeftNavBar == null))
                {
                    this.mUINbcLeftNavBar = new UINbcLeftNavBar(this);
                }
                return this.mUINbcLeftNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINbcLeftNavBar mUINbcLeftNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbcLeftNavBar : DXNavBar
    {
        
        public UINbcLeftNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UINgbcPeriodScrollableControl UINgbcPeriodScrollableControl
        {
            get
            {
                if ((this.mUINgbcPeriodScrollableControl == null))
                {
                    this.mUINgbcPeriodScrollableControl = new UINgbcPeriodScrollableControl(this);
                }
                return this.mUINgbcPeriodScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINgbcPeriodScrollableControl mUINgbcPeriodScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINgbcPeriodScrollableControl : DXScrollableControl
    {
        
        public UINgbcPeriodScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ngbcPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlPeriodClient UIPnlPeriodClient
        {
            get
            {
                if ((this.mUIPnlPeriodClient == null))
                {
                    this.mUIPnlPeriodClient = new UIPnlPeriodClient(this);
                }
                return this.mUIPnlPeriodClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlPeriodClient mUIPnlPeriodClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlPeriodClient : DXTestControl
    {
        
        public UIPnlPeriodClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcPeriodCustom UILcPeriodCustom
        {
            get
            {
                if ((this.mUILcPeriodCustom == null))
                {
                    this.mUILcPeriodCustom = new UILcPeriodCustom(this);
                }
                return this.mUILcPeriodCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcPeriodCustom mUILcPeriodCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcPeriodCustom : DXTestControl
    {
        
        public UILcPeriodCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILcgPeriodLayoutGroup UILcgPeriodLayoutGroup
        {
            get
            {
                if ((this.mUILcgPeriodLayoutGroup == null))
                {
                    this.mUILcgPeriodLayoutGroup = new UILcgPeriodLayoutGroup(this);
                }
                return this.mUILcgPeriodLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgPeriodLayoutGroup mUILcgPeriodLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILcgPeriodLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgPeriodLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UILciPeriodFromDateValLayoutControlItem UILciPeriodFromDateValLayoutControlItem
        {
            get
            {
                if ((this.mUILciPeriodFromDateValLayoutControlItem == null))
                {
                    this.mUILciPeriodFromDateValLayoutControlItem = new UILciPeriodFromDateValLayoutControlItem(this);
                }
                return this.mUILciPeriodFromDateValLayoutControlItem;
            }
        }
        
        public UILciPeriodToDateValueLayoutControlItem UILciPeriodToDateValueLayoutControlItem
        {
            get
            {
                if ((this.mUILciPeriodToDateValueLayoutControlItem == null))
                {
                    this.mUILciPeriodToDateValueLayoutControlItem = new UILciPeriodToDateValueLayoutControlItem(this);
                }
                return this.mUILciPeriodToDateValueLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciPeriodFromDateValLayoutControlItem mUILciPeriodFromDateValLayoutControlItem;
        
        private UILciPeriodToDateValueLayoutControlItem mUILciPeriodToDateValueLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciPeriodFromDateValLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciPeriodFromDateValLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciPeriodFromDateValue";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISdePeriodFromDateCustom UISdePeriodFromDateCustom
        {
            get
            {
                if ((this.mUISdePeriodFromDateCustom == null))
                {
                    this.mUISdePeriodFromDateCustom = new UISdePeriodFromDateCustom(this);
                }
                return this.mUISdePeriodFromDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISdePeriodFromDateCustom mUISdePeriodFromDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISdePeriodFromDateCustom : DXTestControl
    {
        
        public UISdePeriodFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdePeriodFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILciPeriodToDateValueLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciPeriodToDateValueLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciPeriodToDateValue";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISdePeriodToDateCustom UISdePeriodToDateCustom
        {
            get
            {
                if ((this.mUISdePeriodToDateCustom == null))
                {
                    this.mUISdePeriodToDateCustom = new UISdePeriodToDateCustom(this);
                }
                return this.mUISdePeriodToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISdePeriodToDateCustom mUISdePeriodToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISdePeriodToDateCustom : DXTestControl
    {
        
        public UISdePeriodToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdePeriodToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIForskyvningWindow : DXWindow
    {
        
        public UIForskyvningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Forskyvning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIPanClientPanelClient UIPanClientPanelClient
        {
            get
            {
                if ((this.mUIPanClientPanelClient == null))
                {
                    this.mUIPanClientPanelClient = new UIPanClientPanelClient(this);
                }
                return this.mUIPanClientPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanClientPanelClient mUIPanClientPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanClientPanelClient : DXTestControl
    {
        
        public UIPanClientPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panClientPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGpcMainClient UIGpcMainClient
        {
            get
            {
                if ((this.mUIGpcMainClient == null))
                {
                    this.mUIGpcMainClient = new UIGpcMainClient(this);
                }
                return this.mUIGpcMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGpcMainClient mUIGpcMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGpcMainClient : DXTestControl
    {
        
        public UIGpcMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITcClientTabList1 UITcClientTabList
        {
            get
            {
                if ((this.mUITcClientTabList == null))
                {
                    this.mUITcClientTabList = new UITcClientTabList1(this);
                }
                return this.mUITcClientTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcClientTabList1 mUITcClientTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcClientTabList1 : DXTestControl
    {
        
        public UITcClientTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcClient";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpMainClient1 UITpMainClient
        {
            get
            {
                if ((this.mUITpMainClient == null))
                {
                    this.mUITpMainClient = new UITpMainClient1(this);
                }
                return this.mUITpMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpMainClient1 mUITpMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpMainClient1 : DXTestControl
    {
        
        public UITpMainClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGpcShiftsClient UIGpcShiftsClient
        {
            get
            {
                if ((this.mUIGpcShiftsClient == null))
                {
                    this.mUIGpcShiftsClient = new UIGpcShiftsClient(this);
                }
                return this.mUIGpcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGpcShiftsClient mUIGpcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGpcShiftsClient : DXTestControl
    {
        
        public UIGpcShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gpcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIGcNewShiftsClient UIGcNewShiftsClient
        {
            get
            {
                if ((this.mUIGcNewShiftsClient == null))
                {
                    this.mUIGcNewShiftsClient = new UIGcNewShiftsClient(this);
                }
                return this.mUIGcNewShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGcNewShiftsClient mUIGcNewShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcNewShiftsClient : DXTestControl
    {
        
        public UIGcNewShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcNewShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITcNewShiftTabList UITcNewShiftTabList
        {
            get
            {
                if ((this.mUITcNewShiftTabList == null))
                {
                    this.mUITcNewShiftTabList = new UITcNewShiftTabList(this);
                }
                return this.mUITcNewShiftTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcNewShiftTabList mUITcNewShiftTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcNewShiftTabList : DXTestControl
    {
        
        public UITcNewShiftTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcNewShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UITpSimpleShiftCtrlClient UITpSimpleShiftCtrlClient
        {
            get
            {
                if ((this.mUITpSimpleShiftCtrlClient == null))
                {
                    this.mUITpSimpleShiftCtrlClient = new UITpSimpleShiftCtrlClient(this);
                }
                return this.mUITpSimpleShiftCtrlClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpSimpleShiftCtrlClient mUITpSimpleShiftCtrlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpSimpleShiftCtrlClient : DXTestControl
    {
        
        public UITpSimpleShiftCtrlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpSimpleShiftCtrl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIMainPanelClient UIMainPanelClient
        {
            get
            {
                if ((this.mUIMainPanelClient == null))
                {
                    this.mUIMainPanelClient = new UIMainPanelClient(this);
                }
                return this.mUIMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIMainPanelClient mUIMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainPanelClient : DXTestControl
    {
        
        public UIMainPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "MainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public UIDeDateCustom1 UIDeDateCustom
        {
            get
            {
                if ((this.mUIDeDateCustom == null))
                {
                    this.mUIDeDateCustom = new UIDeDateCustom1(this);
                }
                return this.mUIDeDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDeDateCustom1 mUIDeDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeDateCustom1 : DXTestControl
    {
        
        public UIDeDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Forskyvning");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Forskyvning");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow12 : DXWindow
    {
        
        public UIItemWindow12()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = " ";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom2 UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom2(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom2 mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControl1Custom2 : DXTestControl
    {
        
        public UIGsLayoutControl1Custom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroup1LayoutGroup2 UILayoutControlGroup1LayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroup1LayoutGroup == null))
                {
                    this.mUILayoutControlGroup1LayoutGroup = new UILayoutControlGroup1LayoutGroup2(this);
                }
                return this.mUILayoutControlGroup1LayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroup1LayoutGroup2 mUILayoutControlGroup1LayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroup1LayoutGroup2 : DXBaseLayoutItem
    {
        
        public UILayoutControlGroup1LayoutGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroup1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem1LayoutControlItem1 UILayoutControlItem1LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem1LayoutControlItem == null))
                {
                    this.mUILayoutControlItem1LayoutControlItem = new UILayoutControlItem1LayoutControlItem1(this);
                }
                return this.mUILayoutControlItem1LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem1LayoutControlItem1 mUILayoutControlItem1LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem1LayoutControlItem1 : DXBaseLayoutItem
    {
        
        public UILayoutControlItem1LayoutControlItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl2Client1 UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client1(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl2Client1 mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl2Client1 : DXTestControl
    {
        
        public UIGsPanelControl2Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public UISdeUnoccupiedShiftsFCustom UISdeUnoccupiedShiftsFCustom
        {
            get
            {
                if ((this.mUISdeUnoccupiedShiftsFCustom == null))
                {
                    this.mUISdeUnoccupiedShiftsFCustom = new UISdeUnoccupiedShiftsFCustom(this);
                }
                return this.mUISdeUnoccupiedShiftsFCustom;
            }
        }
        
        public UISdeUnoccupiedShiftsTCustom UISdeUnoccupiedShiftsTCustom
        {
            get
            {
                if ((this.mUISdeUnoccupiedShiftsTCustom == null))
                {
                    this.mUISdeUnoccupiedShiftsTCustom = new UISdeUnoccupiedShiftsTCustom(this);
                }
                return this.mUISdeUnoccupiedShiftsTCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISdeUnoccupiedShiftsFCustom mUISdeUnoccupiedShiftsFCustom;
        
        private UISdeUnoccupiedShiftsTCustom mUISdeUnoccupiedShiftsTCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISdeUnoccupiedShiftsFCustom : DXTestControl
    {
        
        public UISdeUnoccupiedShiftsFCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeUnoccupiedShiftsFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISdeUnoccupiedShiftsTCustom : DXTestControl
    {
        
        public UISdeUnoccupiedShiftsTCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeUnoccupiedShiftsToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add(" ");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add(" ");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBytteWindow : DXWindow
    {
        
        public UIBytteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client2 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client2(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client2 mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client2 : DXTestControl
    {
        
        public UIGsPanelControl1Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIGrpPeriodClient UIGrpPeriodClient
        {
            get
            {
                if ((this.mUIGrpPeriodClient == null))
                {
                    this.mUIGrpPeriodClient = new UIGrpPeriodClient(this);
                }
                return this.mUIGrpPeriodClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpPeriodClient mUIGrpPeriodClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpPeriodClient : DXTestControl
    {
        
        public UIGrpPeriodClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public UIDeFromDateCustom UIDeFromDateCustom
        {
            get
            {
                if ((this.mUIDeFromDateCustom == null))
                {
                    this.mUIDeFromDateCustom = new UIDeFromDateCustom(this);
                }
                return this.mUIDeFromDateCustom;
            }
        }
        
        public UIDeToDateCustom UIDeToDateCustom
        {
            get
            {
                if ((this.mUIDeToDateCustom == null))
                {
                    this.mUIDeToDateCustom = new UIDeToDateCustom(this);
                }
                return this.mUIDeToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDeFromDateCustom mUIDeFromDateCustom;
        
        private UIDeToDateCustom mUIDeToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeFromDateCustom : DXTestControl
    {
        
        public UIDeFromDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeToDateCustom : DXTestControl
    {
        
        public UIDeToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Bytte");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Bytte");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIByttemedavdelingWindow : DXWindow
    {
        
        public UIByttemedavdelingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Bytte med avdeling";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client3 UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client3(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client3 mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl1Client3 : DXTestControl
    {
        
        public UIGsPanelControl1Client3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIGrpPeriodClient1 UIGrpPeriodClient
        {
            get
            {
                if ((this.mUIGrpPeriodClient == null))
                {
                    this.mUIGrpPeriodClient = new UIGrpPeriodClient1(this);
                }
                return this.mUIGrpPeriodClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpPeriodClient1 mUIGrpPeriodClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpPeriodClient1 : DXTestControl
    {
        
        public UIGrpPeriodClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public UIDeFromDateCustom1 UIDeFromDateCustom
        {
            get
            {
                if ((this.mUIDeFromDateCustom == null))
                {
                    this.mUIDeFromDateCustom = new UIDeFromDateCustom1(this);
                }
                return this.mUIDeFromDateCustom;
            }
        }
        
        public UIDeToDateCustom1 UIDeToDateCustom
        {
            get
            {
                if ((this.mUIDeToDateCustom == null))
                {
                    this.mUIDeToDateCustom = new UIDeToDateCustom1(this);
                }
                return this.mUIDeToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDeFromDateCustom1 mUIDeFromDateCustom;
        
        private UIDeToDateCustom1 mUIDeToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeFromDateCustom1 : DXTestControl
    {
        
        public UIDeFromDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deFromDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeToDateCustom1 : DXTestControl
    {
        
        public UIDeToDateCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "deToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Bytte med avdeling");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Bytte med avdeling");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUtrykningWindow : DXWindow
    {
        
        public UIUtrykningWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utrykning";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_layoutControlCustom UI_layoutControlCustom
        {
            get
            {
                if ((this.mUI_layoutControlCustom == null))
                {
                    this.mUI_layoutControlCustom = new UI_layoutControlCustom(this);
                }
                return this.mUI_layoutControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UI_layoutControlCustom mUI_layoutControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_layoutControlCustom : DXTestControl
    {
        
        public UI_layoutControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_layoutControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRootLayoutGroup : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem3LayoutControlItem UILayoutControlItem3LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem3LayoutControlItem == null))
                {
                    this.mUILayoutControlItem3LayoutControlItem = new UILayoutControlItem3LayoutControlItem(this);
                }
                return this.mUILayoutControlItem3LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem3LayoutControlItem mUILayoutControlItem3LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem3LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem3LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_navBarNavBar UI_navBarNavBar
        {
            get
            {
                if ((this.mUI_navBarNavBar == null))
                {
                    this.mUI_navBarNavBar = new UI_navBarNavBar(this);
                }
                return this.mUI_navBarNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UI_navBarNavBar mUI_navBarNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_navBarNavBar : DXNavBar
    {
        
        public UI_navBarNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_navBar";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl mUINavBarGroupControlCoScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer3";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_panShiftClient UI_panShiftClient
        {
            get
            {
                if ((this.mUI_panShiftClient == null))
                {
                    this.mUI_panShiftClient = new UI_panShiftClient(this);
                }
                return this.mUI_panShiftClient;
            }
        }
        #endregion
        
        #region Fields
        private UI_panShiftClient mUI_panShiftClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_panShiftClient : DXTestControl
    {
        
        public UI_panShiftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_panShift";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public UI_dtShiftDateCustom UI_dtShiftDateCustom
        {
            get
            {
                if ((this.mUI_dtShiftDateCustom == null))
                {
                    this.mUI_dtShiftDateCustom = new UI_dtShiftDateCustom(this);
                }
                return this.mUI_dtShiftDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UI_dtShiftDateCustom mUI_dtShiftDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UI_dtShiftDateCustom : DXTestControl
    {
        
        public UI_dtShiftDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "_dtShiftDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Utrykning");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Utrykning");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINyAMLdispensasjonWindow : DXWindow
    {
        
        public UINyAMLdispensasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny AML dispensasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIViewHostDispensationCustom UIViewHostDispensationCustom
        {
            get
            {
                if ((this.mUIViewHostDispensationCustom == null))
                {
                    this.mUIViewHostDispensationCustom = new UIViewHostDispensationCustom(this);
                }
                return this.mUIViewHostDispensationCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostDispensationCustom mUIViewHostDispensationCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostDispensationCustom : DXTestControl
    {
        
        public UIViewHostDispensationCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHostDispensationDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIDispensationDetailsVCustom UIDispensationDetailsVCustom
        {
            get
            {
                if ((this.mUIDispensationDetailsVCustom == null))
                {
                    this.mUIDispensationDetailsVCustom = new UIDispensationDetailsVCustom(this);
                }
                return this.mUIDispensationDetailsVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDispensationDetailsVCustom mUIDispensationDetailsVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDispensationDetailsVCustom : DXTestControl
    {
        
        public UIDispensationDetailsVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DispensationDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DispensationDetailsView";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIVhDispInnerDetailsCustom UIVhDispInnerDetailsCustom
        {
            get
            {
                if ((this.mUIVhDispInnerDetailsCustom == null))
                {
                    this.mUIVhDispInnerDetailsCustom = new UIVhDispInnerDetailsCustom(this);
                }
                return this.mUIVhDispInnerDetailsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIVhDispInnerDetailsCustom mUIVhDispInnerDetailsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIVhDispInnerDetailsCustom : DXTestControl
    {
        
        public UIVhDispInnerDetailsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "vhDispInnerDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public UIDefaultDispDetailsViCustom UIDefaultDispDetailsViCustom
        {
            get
            {
                if ((this.mUIDefaultDispDetailsViCustom == null))
                {
                    this.mUIDefaultDispDetailsViCustom = new UIDefaultDispDetailsViCustom(this);
                }
                return this.mUIDefaultDispDetailsViCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDefaultDispDetailsViCustom mUIDefaultDispDetailsViCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDefaultDispDetailsViCustom : DXTestControl
    {
        
        public UIDefaultDispDetailsViCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DefaultDispDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DefaultDispDetailsView";
            this.WindowTitles.Add("Ny AML dispensasjon");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UISdeStartDateTimeEdit
        {
            get
            {
                if ((this.mUISdeStartDateTimeEdit == null))
                {
                    this.mUISdeStartDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUISdeStartDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeStart";
                    this.mUISdeStartDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUISdeStartDateTimeEdit.WindowTitles.Add("Ny AML dispensasjon");
                    #endregion
                }
                return this.mUISdeStartDateTimeEdit;
            }
        }
        
        public DXDateTimePicker UISdeEndDateTimeEdit
        {
            get
            {
                if ((this.mUISdeEndDateTimeEdit == null))
                {
                    this.mUISdeEndDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUISdeEndDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeEnd";
                    this.mUISdeEndDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUISdeEndDateTimeEdit.WindowTitles.Add("Ny AML dispensasjon");
                    #endregion
                }
                return this.mUISdeEndDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUISdeStartDateTimeEdit;
        
        private DXDateTimePicker mUISdeEndDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAMLavtaleWindow : DXWindow
    {
        
        public UIAMLavtaleWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AML avtale";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIViewHostDispensationCustom1 UIViewHostDispensationCustom
        {
            get
            {
                if ((this.mUIViewHostDispensationCustom == null))
                {
                    this.mUIViewHostDispensationCustom = new UIViewHostDispensationCustom1(this);
                }
                return this.mUIViewHostDispensationCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostDispensationCustom1 mUIViewHostDispensationCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostDispensationCustom1 : DXTestControl
    {
        
        public UIViewHostDispensationCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHostDispensationDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient2 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient2(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient2 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient2 : DXTestControl
    {
        
        public UIPcViewClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UILimitContainerViewCustom UILimitContainerViewCustom
        {
            get
            {
                if ((this.mUILimitContainerViewCustom == null))
                {
                    this.mUILimitContainerViewCustom = new UILimitContainerViewCustom(this);
                }
                return this.mUILimitContainerViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILimitContainerViewCustom mUILimitContainerViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILimitContainerViewCustom : DXTestControl
    {
        
        public UILimitContainerViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LimitContainerView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LimitContainerView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIXtraTabControlLimitDTabList UIXtraTabControlLimitDTabList
        {
            get
            {
                if ((this.mUIXtraTabControlLimitDTabList == null))
                {
                    this.mUIXtraTabControlLimitDTabList = new UIXtraTabControlLimitDTabList(this);
                }
                return this.mUIXtraTabControlLimitDTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraTabControlLimitDTabList mUIXtraTabControlLimitDTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtraTabControlLimitDTabList : DXTestControl
    {
        
        public UIXtraTabControlLimitDTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabControlLimitDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIXtraTabPageDetailsClient UIXtraTabPageDetailsClient
        {
            get
            {
                if ((this.mUIXtraTabPageDetailsClient == null))
                {
                    this.mUIXtraTabPageDetailsClient = new UIXtraTabPageDetailsClient(this);
                }
                return this.mUIXtraTabPageDetailsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraTabPageDetailsClient mUIXtraTabPageDetailsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXtraTabPageDetailsClient : DXTestControl
    {
        
        public UIXtraTabPageDetailsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtraTabPageDetails";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcLimitClient UIPcLimitClient
        {
            get
            {
                if ((this.mUIPcLimitClient == null))
                {
                    this.mUIPcLimitClient = new UIPcLimitClient(this);
                }
                return this.mUIPcLimitClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcLimitClient mUIPcLimitClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcLimitClient : DXTestControl
    {
        
        public UIPcLimitClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcLimit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIViewHostLimitCustom UIViewHostLimitCustom
        {
            get
            {
                if ((this.mUIViewHostLimitCustom == null))
                {
                    this.mUIViewHostLimitCustom = new UIViewHostLimitCustom(this);
                }
                return this.mUIViewHostLimitCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostLimitCustom mUIViewHostLimitCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostLimitCustom : DXTestControl
    {
        
        public UIViewHostLimitCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHostLimit";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient3 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient3(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient3 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient3 : DXTestControl
    {
        
        public UIPcViewClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public UILimitDetailsViewCustom UILimitDetailsViewCustom
        {
            get
            {
                if ((this.mUILimitDetailsViewCustom == null))
                {
                    this.mUILimitDetailsViewCustom = new UILimitDetailsViewCustom(this);
                }
                return this.mUILimitDetailsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILimitDetailsViewCustom mUILimitDetailsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILimitDetailsViewCustom : DXTestControl
    {
        
        public UILimitDetailsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LimitDetailsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LimitDetailsView";
            this.WindowTitles.Add("AML avtale");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UISdeFromDateDateTimeEdit
        {
            get
            {
                if ((this.mUISdeFromDateDateTimeEdit == null))
                {
                    this.mUISdeFromDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUISdeFromDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "sdeFromDate";
                    this.mUISdeFromDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUISdeFromDateDateTimeEdit.WindowTitles.Add("AML avtale");
                    #endregion
                }
                return this.mUISdeFromDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUISdeFromDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow111 : WinWindow
    {
        
        public UIItemWindow111()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UIFunksjonerMenuItem UIFunksjonerMenuItem
        {
            get
            {
                if ((this.mUIFunksjonerMenuItem == null))
                {
                    this.mUIFunksjonerMenuItem = new UIFunksjonerMenuItem(this);
                }
                return this.mUIFunksjonerMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFunksjonerMenuItem mUIFunksjonerMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFunksjonerMenuItem : DXMenuItem
    {
        
        public UIFunksjonerMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[12]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIUtjevningsvaktMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIUtjevningsvaktMenuBaseButtonItem == null))
                {
                    this.mUIUtjevningsvaktMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIUtjevningsvaktMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[2]";
                    this.mUIUtjevningsvaktMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIUtjevningsvaktMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIUtjevningsvaktMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIUtjevningsvaktWindow : DXWindow
    {
        
        public UIUtjevningsvaktWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Utjevningsvakt";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Utjevningsvakt");
            #endregion
        }
        
        #region Properties
        public UIGrpEqualizingClient UIGrpEqualizingClient
        {
            get
            {
                if ((this.mUIGrpEqualizingClient == null))
                {
                    this.mUIGrpEqualizingClient = new UIGrpEqualizingClient(this);
                }
                return this.mUIGrpEqualizingClient;
            }
        }
        
        public UIPnlButtonsClient3 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient3(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEqualizingClient mUIGrpEqualizingClient;
        
        private UIPnlButtonsClient3 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEqualizingClient : DXTestControl
    {
        
        public UIGrpEqualizingClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEqualizing";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Utjevningsvakt");
            #endregion
        }
        
        #region Properties
        public DXRadioGroup UIRgrpEqualizationModeRadioGroup
        {
            get
            {
                if ((this.mUIRgrpEqualizationModeRadioGroup == null))
                {
                    this.mUIRgrpEqualizationModeRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgrpEqualizationModeRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgrpEqualizationMode";
                    this.mUIRgrpEqualizationModeRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    this.mUIRgrpEqualizationModeRadioGroup.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUIRgrpEqualizationModeRadioGroup;
            }
        }
        
        public DXRadioGroup UIRgrpEqualizationPlacRadioGroup
        {
            get
            {
                if ((this.mUIRgrpEqualizationPlacRadioGroup == null))
                {
                    this.mUIRgrpEqualizationPlacRadioGroup = new DXRadioGroup(this);
                    #region Search Criteria
                    this.mUIRgrpEqualizationPlacRadioGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "rgrpEqualizationPlacement";
                    this.mUIRgrpEqualizationPlacRadioGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSRadioGroup";
                    #endregion
                }
                return this.mUIRgrpEqualizationPlacRadioGroup;
            }
        }
        
        public DXTextEdit UIENumberEdit
        {
            get
            {
                if ((this.mUIENumberEdit == null))
                {
                    this.mUIENumberEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eNumber";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTextEdit";
                    this.mUIENumberEdit.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIENumberEdit.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUIENumberEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXRadioGroup mUIRgrpEqualizationModeRadioGroup;
        
        private DXRadioGroup mUIRgrpEqualizationPlacRadioGroup;
        
        private DXTextEdit mUIENumberEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlButtonsClient3 : DXTestControl
    {
        
        public UIPnlButtonsClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Utjevningsvakt");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Utjevningsvakt");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINyevaktklassesatserWindow : DXWindow
    {
        
        public UINyevaktklassesatserWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Nye vaktklassesatser";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nye vaktklassesatser");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIDeEffectiveFromDateTimeEdit
        {
            get
            {
                if ((this.mUIDeEffectiveFromDateTimeEdit == null))
                {
                    this.mUIDeEffectiveFromDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDeEffectiveFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "deEffectiveFrom";
                    this.mUIDeEffectiveFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIDeEffectiveFromDateTimeEdit.WindowTitles.Add("Nye vaktklassesatser");
                    #endregion
                }
                return this.mUIDeEffectiveFromDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIDeEffectiveFromDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanSystemtesWindow : DXWindow
    {
        
        public UIArbeidsplanSystemtesWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDpnlVisualizationDockPanel UIDpnlVisualizationDockPanel
        {
            get
            {
                if ((this.mUIDpnlVisualizationDockPanel == null))
                {
                    this.mUIDpnlVisualizationDockPanel = new UIDpnlVisualizationDockPanel(this);
                }
                return this.mUIDpnlVisualizationDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlVisualizationDockPanel mUIDpnlVisualizationDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlVisualizationDockPanel : DXDockPanel
    {
        
        public UIDpnlVisualizationDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlVisualization";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan: Systemtest (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIDockPanel3_ContainerCustom UIDockPanel3_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel3_ContainerCustom == null))
                {
                    this.mUIDockPanel3_ContainerCustom = new UIDockPanel3_ContainerCustom(this);
                }
                return this.mUIDockPanel3_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel3_ContainerCustom mUIDockPanel3_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel3_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel3_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel3_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Systemtest (Planen er låst av deg)");
            #endregion
        }
                
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcVisualizationTabList : DXTestControl
    {
        
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver66043545ASCLAvWindow : WinWindow
    {
        
        public UIGatver66043545ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow13 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow13(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow13 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "11";
            this.WindowTitles.Add("Gat ver. 6.6.0.43545 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Ansatt: And" +
                    "ers Andersen  (Vaktbokdato: 22.02.2017)");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat ver. 6.6.0.43545 - (ASCL - Avd: 5010-Arbeidsplan og hjelpeplan) - Ansatt: And" +
                            "ers Andersen  (Vaktbokdato: 22.02.2017)");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow22 : WinWindow
    {
        
        public UIItemWindow22()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu1 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu1(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        
        public UISubMenuBarControlMenu UISubMenuBarControlMenu
        {
            get
            {
                if ((this.mUISubMenuBarControlMenu == null))
                {
                    this.mUISubMenuBarControlMenu = new UISubMenuBarControlMenu(this);
                }
                return this.mUISubMenuBarControlMenu;
            }
        }
        
        public UIPopupMenuBarControlMenu11 UIPopupMenuBarControlMenu1
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu1 == null))
                {
                    this.mUIPopupMenuBarControlMenu1 = new UIPopupMenuBarControlMenu11(this);
                }
                return this.mUIPopupMenuBarControlMenu1;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu1 mUIPopupMenuBarControlMenu;
        
        private UISubMenuBarControlMenu mUISubMenuBarControlMenu;
        
        private UIPopupMenuBarControlMenu11 mUIPopupMenuBarControlMenu1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu1 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UISlettMenuBaseButtonItem
        {
            get
            {
                if ((this.mUISlettMenuBaseButtonItem == null))
                {
                    this.mUISlettMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUISlettMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
                    this.mUISlettMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUISlettMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUISlettMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISubMenuBarControlMenu : DXMenu
    {
        
        public UISubMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SubMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SubMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBtnNoRevolveWholePerMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnNoRevolveWholePerMenuBaseButtonItem == null))
                {
                    this.mUIBtnNoRevolveWholePerMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnNoRevolveWholePerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRotateWhole";
                    this.mUIBtnNoRevolveWholePerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnNoRevolveWholePerMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnDeleteNoRevMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnDeleteNoRevMenuBaseButtonItem == null))
                {
                    this.mUIBtnDeleteNoRevMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnDeleteNoRevMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUIBtnDeleteNoRevMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnDeleteNoRevMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIIverksetthelegyldighMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIIverksetthelegyldighMenuBaseButtonItem == null))
                {
                    this.mUIIverksetthelegyldighMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIIverksetthelegyldighMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRotateWhole";
                    this.mUIIverksetthelegyldighMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIIverksetthelegyldighMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnDeleteMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnDeleteMenuBaseButtonItem == null))
                {
                    this.mUIBtnDeleteMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnDeleteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUIBtnDeleteMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnDeleteMenuBaseButtonItem;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnEffectuateNextPerMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnEffectuateNextPerMenuBaseButtonItem == null))
                {
                    this.mUIBtnEffectuateNextPerMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnEffectuateNextPerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuateNextPeriod";
                    this.mUIBtnEffectuateNextPerMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBtnEffectuateNextPerMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBtnNoRevolveWholePerMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnDeleteNoRevMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIIverksetthelegyldighMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnDeleteMenuBaseButtonItem;
        
        private DXMenuBaseButtonItem mUIBtnEffectuateNextPerMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu11 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBbiAddFromHelpPlanMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBbiAddFromHelpPlanMenuBaseButtonItem == null))
                {
                    this.mUIBbiAddFromHelpPlanMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBbiAddFromHelpPlanMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiAddFromHelpPlan";
                    this.mUIBbiAddFromHelpPlanMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBbiAddFromHelpPlanMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBbiAddFromHelpPlanMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISkrivrapportWindow : WinWindow
    {
        
        public UISkrivrapportWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Skriv rapport";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmReport";
            this.WindowTitles.Add("Skriv rapport");
            #endregion
        }
        
        #region Properties
        public UIItemWindow14 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow14(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow15 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow15(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow23 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow23(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UISkrivrapportTitleBar UISkrivrapportTitleBar
        {
            get
            {
                if ((this.mUISkrivrapportTitleBar == null))
                {
                    this.mUISkrivrapportTitleBar = new UISkrivrapportTitleBar(this);
                }
                return this.mUISkrivrapportTitleBar;
            }
        }
        
        public UIItemWindow31 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow31(this);
                }
                return this.mUIItemWindow3;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow14 mUIItemWindow;
        
        private UIItemWindow15 mUIItemWindow1;
        
        private UIItemWindow23 mUIItemWindow2;
        
        private UISkrivrapportTitleBar mUISkrivrapportTitleBar;
        
        private UIItemWindow31 mUIItemWindow3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow14 : WinWindow
    {
        
        public UIItemWindow14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TMSRadioGroup";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Skriv rapport");
            #endregion
        }
        
        #region Properties
        public UIItem50Client UIItem50Client
        {
            get
            {
                if ((this.mUIItem50Client == null))
                {
                    this.mUIItem50Client = new UIItem50Client(this);
                }
                return this.mUIItem50Client;
            }
        }
        #endregion
        
        #region Fields
        private UIItem50Client mUIItem50Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItem50Client : WinClient
    {
        
        public UIItem50Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Skriv rapport");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIUkeRadioButton
        {
            get
            {
                if ((this.mUIUkeRadioButton == null))
                {
                    this.mUIUkeRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIUkeRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Uke";
                    this.mUIUkeRadioButton.WindowTitles.Add("Skriv rapport");
                    #endregion
                }
                return this.mUIUkeRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIUkeRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow15 : WinWindow
    {
        
        public UIItemWindow15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "15";
            this.WindowTitles.Add("Skriv rapport");
            #endregion
        }
        
        #region Properties
        public WinClient UISkrivrapportClient
        {
            get
            {
                if ((this.mUISkrivrapportClient == null))
                {
                    this.mUISkrivrapportClient = new WinClient(this);
                    #region Search Criteria
                    this.mUISkrivrapportClient.WindowTitles.Add("Skriv rapport");
                    #endregion
                }
                return this.mUISkrivrapportClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISkrivrapportClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow23 : WinWindow
    {
        
        public UIItemWindow23(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "18";
            this.WindowTitles.Add("Skriv rapport");
            #endregion
        }
        
        #region Properties
        public WinClient UISkrivrapportClient
        {
            get
            {
                if ((this.mUISkrivrapportClient == null))
                {
                    this.mUISkrivrapportClient = new WinClient(this);
                    #region Search Criteria
                    this.mUISkrivrapportClient.WindowTitles.Add("Skriv rapport");
                    #endregion
                }
                return this.mUISkrivrapportClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISkrivrapportClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISkrivrapportTitleBar : WinTitleBar
    {
        
        public UISkrivrapportTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Skriv rapport");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Skriv rapport");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow31 : WinWindow
    {
        
        public UIItemWindow31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TicMenuButton";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Skriv rapport");
            #endregion
        }
        
        #region Properties
        public WinClient UISkrivrapportClient
        {
            get
            {
                if ((this.mUISkrivrapportClient == null))
                {
                    this.mUISkrivrapportClient = new WinClient(this);
                    #region Search Criteria
                    this.mUISkrivrapportClient.WindowTitles.Add("Skriv rapport");
                    #endregion
                }
                return this.mUISkrivrapportClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISkrivrapportClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver66043783ASCLAvWindow : WinWindow
    {
        
        public UIGatver66043783ASCLAvWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow16 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow16(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow17 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow17(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow16 mUIItemWindow;
        
        private UIItemWindow17 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow16 : WinWindow
    {
        
        public UIItemWindow16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TgatGrid";
            this.WindowTitles.Add("Gat ver. 6.6.0.43783 - (ASCL - Avd: 3002-Fleksavdeling 2) - Ansatt: Rico Tubbs  (" +
                    "Vaktbokdato: 09.05.2016)");
            #endregion
        }
        
        #region Properties
        public WinClient UIDokClient
        {
            get
            {
                if ((this.mUIDokClient == null))
                {
                    this.mUIDokClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDokClient.WindowTitles.Add("Gat ver. 6.6.0.43783 - (ASCL - Avd: 3002-Fleksavdeling 2) - Ansatt: Rico Tubbs  (" +
                            "Vaktbokdato: 09.05.2016)");
                    #endregion
                }
                return this.mUIDokClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDokClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow17 : WinWindow
    {
        
        public UIItemWindow17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat ver. 6.6.0.43783 - (ASCL - Avd: 3002-Fleksavdeling 2) - Ansatt: Rico Tubbs  (" +
                    "Vaktbokdato: 09.05.2016)");
            #endregion
        }
        
        #region Properties
        public WinClient UIDokClient
        {
            get
            {
                if ((this.mUIDokClient == null))
                {
                    this.mUIDokClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDokClient.WindowTitles.Add("Gat ver. 6.6.0.43783 - (ASCL - Avd: 3002-Fleksavdeling 2) - Ansatt: Rico Tubbs  (" +
                            "Vaktbokdato: 09.05.2016)");
                    #endregion
                }
                return this.mUIDokClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDokClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain_11 : WinWindow
    {
        
        public GatMain_11()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient2 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient2(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient2 mUIPcMainPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcMainPanelClient2 : DXTestControl
    {
        
        public UIPcMainPanelClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.5.3 - (ASCL - Avd: 5150-Faste tillegg) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList2 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList2(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList2 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcPanListsTabList2 : DXTestControl
    {
        
        public UITcPanListsTabList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat ver. 6.5.3 - (ASCL - Avd: 5150-Faste tillegg) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UITpWishPlanListClient UITpWishPlanListClient
        {
            get
            {
                if ((this.mUITpWishPlanListClient == null))
                {
                    this.mUITpWishPlanListClient = new UITpWishPlanListClient(this);
                }
                return this.mUITpWishPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpWishPlanListClient mUITpWishPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpWishPlanListClient : DXTestControl
    {
        
        public UITpWishPlanListClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpWishPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 6.5.3 - (ASCL - Avd: 5150-Faste tillegg) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIWishPlanListCustom UIWishPlanListCustom
        {
            get
            {
                if ((this.mUIWishPlanListCustom == null))
                {
                    this.mUIWishPlanListCustom = new UIWishPlanListCustom(this);
                }
                return this.mUIWishPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIWishPlanListCustom mUIWishPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIWishPlanListCustom : DXTestControl
    {
        
        public UIWishPlanListCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "wishPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WishPlanList";
            this.WindowTitles.Add("Gat ver. 6.5.3 - (ASCL - Avd: 5150-Faste tillegg) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl2Client2 UIGsPanelControl2Client
        {
            get
            {
                if ((this.mUIGsPanelControl2Client == null))
                {
                    this.mUIGsPanelControl2Client = new UIGsPanelControl2Client2(this);
                }
                return this.mUIGsPanelControl2Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl2Client2 mUIGsPanelControl2Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsPanelControl2Client2 : DXTestControl
    {
        
        public UIGsPanelControl2Client2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 6.5.3 - (ASCL - Avd: 5150-Faste tillegg) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRibbonControl1Ribbon UIRibbonControl1Ribbon
        {
            get
            {
                if ((this.mUIRibbonControl1Ribbon == null))
                {
                    this.mUIRibbonControl1Ribbon = new UIRibbonControl1Ribbon(this);
                }
                return this.mUIRibbonControl1Ribbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControl1Ribbon mUIRibbonControl1Ribbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonControl1Ribbon : DXRibbon
    {
        
        public UIRibbonControl1Ribbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat ver. 6.5.3 - (ASCL - Avd: 5150-Faste tillegg) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage2 UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage2(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage2 mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpHomeRibbonPage2 : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat ver. 6.5.3 - (ASCL - Avd: 5150-Faste tillegg) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public UIRpgFilterRibbonPageGroup UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFilterRibbonPageGroup mUIRpgFilterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgFilterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 6.5.3 - (ASCL - Avd: 5150-Faste tillegg) - Vaktbok");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIGamleRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIGamleRibbonBaseButtonItem == null))
                {
                    this.mUIGamleRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowOldPeriods";
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIGamleRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 6.5.3 - (ASCL - Avd: 5150-Faste tillegg) - Vaktbok");
                    #endregion
                }
                return this.mUIGamleRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIGamleRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatver654ASCLAvd5140Window : WinWindow
    {
        
        public UIGatver654ASCLAvd5140Window()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Gat", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIBankBalanceListContrCustom UIBankBalanceListContrCustom
        {
            get
            {
                if ((this.mUIBankBalanceListContrCustom == null))
                {
                    this.mUIBankBalanceListContrCustom = new UIBankBalanceListContrCustom(this);
                }
                return this.mUIBankBalanceListContrCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIBankBalanceListContrCustom mUIBankBalanceListContrCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIBankBalanceListContrCustom : DXTestControl
    {
        
        public UIBankBalanceListContrCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BankBalanceListControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BankBalanceListControl";
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public UILueFiltersLookUpEdit UILueFiltersLookUpEdit
        {
            get
            {
                if ((this.mUILueFiltersLookUpEdit == null))
                {
                    this.mUILueFiltersLookUpEdit = new UILueFiltersLookUpEdit(this);
                }
                return this.mUILueFiltersLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UILueFiltersLookUpEdit mUILueFiltersLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILueFiltersLookUpEdit : DXLookUpEdit
    {
        
        public UILueFiltersLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lueFilters";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Gat ver.");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "lueFiltersPopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Gat ver.");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanYTELSEKalWindow : DXWindow
    {
        
        public UIArbeidsplanYTELSEKalWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public DXButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new DXButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.Name] = "Close";
                    this.mUICloseButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleButton";
                    this.mUICloseButton.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Planen er låst av deg)");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private DXButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpPlanRibbonPage : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEffectuateNoneRevRibbonPageGroup UIGrpEffectuateNoneRevRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateNoneRevRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateNoneRevRibbonPageGroup = new UIGrpEffectuateNoneRevRibbonPageGroup(this);
                }
                return this.mUIGrpEffectuateNoneRevRibbonPageGroup;
            }
        }
        
        public UIRibbonPageGroup9RibbonPageGroup UIRibbonPageGroup9RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup9RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup9RibbonPageGroup = new UIRibbonPageGroup9RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup9RibbonPageGroup;
            }
        }
        
        public UIRibbonPageGroup17RibbonPageGroup UIRibbonPageGroup17RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup17RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup17RibbonPageGroup = new UIRibbonPageGroup17RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup17RibbonPageGroup;
            }
        }
        
        public UIRpgPlanRibbonPageGroup1 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup1(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEffectuateNoneRevRibbonPageGroup mUIGrpEffectuateNoneRevRibbonPageGroup;
        
        private UIRibbonPageGroup9RibbonPageGroup mUIRibbonPageGroup9RibbonPageGroup;
        
        private UIRibbonPageGroup17RibbonPageGroup mUIRibbonPageGroup17RibbonPageGroup;
        
        private UIRpgPlanRibbonPageGroup1 mUIRpgPlanRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEffectuateNoneRevRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateNoneRevRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        
        public DXRibbonItem UISlettiverksettingRibbonItem
        {
            get
            {
                if ((this.mUISlettiverksettingRibbonItem == null))
                {
                    this.mUISlettiverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuDeleteEff";
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUISlettiverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISlettiverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        
        private DXRibbonItem mUISlettiverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPageGroup9RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup9RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIRedigerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIRedigerRibbonBaseButtonItem == null))
                {
                    this.mUIRedigerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEditMode";
                    this.mUIRedigerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIRedigerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRedigerRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIRedigerRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPageGroup17RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup17RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup17";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBtnCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBtnCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgPlanRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIAnsatteRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAnsatteRibbonBaseButtonItem == null))
                {
                    this.mUIAnsatteRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEmployees";
                    this.mUIAnsatteRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAnsatteRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIAnsatteRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIInnstillingerRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIInnstillingerRibbonBaseButtonItem == null))
                {
                    this.mUIInnstillingerRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSettings";
                    this.mUIInnstillingerRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIInnstillingerRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIInnstillingerRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIOppsettRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppsettRibbonBaseButtonItem == null))
                {
                    this.mUIOppsettRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppsettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnRosterSetup";
                    this.mUIOppsettRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppsettRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOppsettRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIOppgavetildelingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppgavetildelingRibbonBaseButtonItem == null))
                {
                    this.mUIOppgavetildelingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppgavetildelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiRoleAssignment";
                    this.mUIOppgavetildelingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppgavetildelingRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIOppgavetildelingRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIAnsatteRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIInnstillingerRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIOppsettRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIOppgavetildelingRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIIverksetteWindow : DXWindow
    {
        
        public UIIverksetteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Iverksette";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public UIPnlButtonsClient4 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient4(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlButtonsClient4 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlButtonsClient4 : DXTestControl
    {
        
        public UIPnlButtonsClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Iverksette");
            #endregion
        }
        
        #region Properties
        public DXButton UIIverksett83linjerButton
        {
            get
            {
                if ((this.mUIIverksett83linjerButton == null))
                {
                    this.mUIIverksett83linjerButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIIverksett83linjerButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEffectuate";
                    this.mUIIverksett83linjerButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIIverksett83linjerButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIIverksett83linjerButton;
            }
        }
        
        public DXButton UIEndreperiodeforavkryButton
        {
            get
            {
                if ((this.mUIEndreperiodeforavkryButton == null))
                {
                    this.mUIEndreperiodeforavkryButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIEndreperiodeforavkryButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPeriod";
                    this.mUIEndreperiodeforavkryButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIEndreperiodeforavkryButton.WindowTitles.Add("Iverksette");
                    #endregion
                }
                return this.mUIEndreperiodeforavkryButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIIverksett83linjerButton;
        
        private DXButton mUIEndreperiodeforavkryButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow32 : DXWindow
    {
        
        public UIItemWindow32()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4017 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4017 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL-4017 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRPL4044InformasjonWindow : DXWindow
    {
        
        public UIRPL4044InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4044 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4044 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("RPL-4044 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILønnsberegningvediveWindow : DXWindow
    {
        
        public UILønnsberegningvediveWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Lønnsberegning ved iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public UIPcButtonPanelClient UIPcButtonPanelClient
        {
            get
            {
                if ((this.mUIPcButtonPanelClient == null))
                {
                    this.mUIPcButtonPanelClient = new UIPcButtonPanelClient(this);
                }
                return this.mUIPcButtonPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcButtonPanelClient mUIPcButtonPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcButtonPanelClient : DXTestControl
    {
        
        public UIPcButtonPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcButtonPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISletteiverksettingWindow : DXWindow
    {
        
        public UISletteiverksettingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Slette iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public UIPnlToppInfoClient UIPnlToppInfoClient
        {
            get
            {
                if ((this.mUIPnlToppInfoClient == null))
                {
                    this.mUIPnlToppInfoClient = new UIPnlToppInfoClient(this);
                }
                return this.mUIPnlToppInfoClient;
            }
        }
        
        public UIPnlBottomClient UIPnlBottomClient
        {
            get
            {
                if ((this.mUIPnlBottomClient == null))
                {
                    this.mUIPnlBottomClient = new UIPnlBottomClient(this);
                }
                return this.mUIPnlBottomClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlToppInfoClient mUIPnlToppInfoClient;
        
        private UIPnlBottomClient mUIPnlBottomClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlToppInfoClient : DXTestControl
    {
        
        public UIPnlToppInfoClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlToppInfo";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UIVelgalleButton
        {
            get
            {
                if ((this.mUIVelgalleButton == null))
                {
                    this.mUIVelgalleButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAll";
                    this.mUIVelgalleButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIVelgalleButton.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUIVelgalleButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIVelgalleButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlBottomClient : DXTestControl
    {
        
        public UIPnlBottomClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlBottom";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Slette iverksetting");
            #endregion
        }
        
        #region Properties
        public DXButton UISlettiverksettingpå8Button
        {
            get
            {
                if ((this.mUISlettiverksettingpå8Button == null))
                {
                    this.mUISlettiverksettingpå8Button = new DXButton(this);
                    #region Search Criteria
                    this.mUISlettiverksettingpå8Button.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDelete";
                    this.mUISlettiverksettingpå8Button.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUISlettiverksettingpå8Button.WindowTitles.Add("Slette iverksetting");
                    #endregion
                }
                return this.mUISlettiverksettingpå8Button;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISlettiverksettingpå8Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow41 : DXWindow
    {
        
        public UIItemWindow41()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EXC_4004 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("EXC_4004 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("EXC_4004 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow51 : DXWindow
    {
        
        public UIItemWindow51()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL2-4003 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-4003 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL2-4003 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanYTELSEKalWindow1 : DXWindow
    {
        
        public UIArbeidsplanYTELSEKalWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon1 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon1(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon1 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon1 : DXRibbon
    {
        
        public UIRcMenuRibbon1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage1 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage1(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage1 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpPlanRibbonPage1 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public UIRibbonPageGroup9RibbonPageGroup1 UIRibbonPageGroup9RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup9RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup9RibbonPageGroup = new UIRibbonPageGroup9RibbonPageGroup1(this);
                }
                return this.mUIRibbonPageGroup9RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPageGroup9RibbonPageGroup1 mUIRibbonPageGroup9RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPageGroup9RibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup9RibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup9";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnOkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnOkRibbonBaseButtonItem == null))
                {
                    this.mUIBtnOkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUIBtnOkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnOkRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIBtnOkRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIAvbrytRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAvbrytRibbonBaseButtonItem == null))
                {
                    this.mUIAvbrytRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAvbrytRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancelEditMode";
                    this.mUIAvbrytRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAvbrytRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan: YTELSE Kalenderplan (Redigeringsmodus [Planen er låst av deg])");
                    #endregion
                }
                return this.mUIAvbrytRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnOkRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIAvbrytRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow61 : DXWindow
    {
        
        public UIItemWindow61()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL2-4009";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-4009");
            #endregion
        }
        
        #region Properties
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDiscardChange";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUISimpleButtonButton.WindowTitles.Add("RPL2-4009");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnsatteiarbeidsplanWindow : DXWindow
    {
        
        public UIAnsatteiarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte i arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlOuterClient UIPanelControlOuterClient
        {
            get
            {
                if ((this.mUIPanelControlOuterClient == null))
                {
                    this.mUIPanelControlOuterClient = new UIPanelControlOuterClient(this);
                }
                return this.mUIPanelControlOuterClient;
            }
        }
        
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlOuterClient mUIPanelControlOuterClient;
        
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControlOuterClient : DXTestControl
    {
        
        public UIPanelControlOuterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlLeftClient UIPanelControlLeftClient
        {
            get
            {
                if ((this.mUIPanelControlLeftClient == null))
                {
                    this.mUIPanelControlLeftClient = new UIPanelControlLeftClient(this);
                }
                return this.mUIPanelControlLeftClient;
            }
        }
        
        public UIPanelControlRightClient UIPanelControlRightClient
        {
            get
            {
                if ((this.mUIPanelControlRightClient == null))
                {
                    this.mUIPanelControlRightClient = new UIPanelControlRightClient(this);
                }
                return this.mUIPanelControlRightClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlLeftClient mUIPanelControlLeftClient;
        
        private UIPanelControlRightClient mUIPanelControlRightClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControlLeftClient : DXTestControl
    {
        
        public UIPanelControlLeftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIAnsatteButton UIAnsatteButton
        {
            get
            {
                if ((this.mUIAnsatteButton == null))
                {
                    this.mUIAnsatteButton = new UIAnsatteButton(this);
                }
                return this.mUIAnsatteButton;
            }
        }
        #endregion
        
        #region Fields
        private UIAnsatteButton mUIAnsatteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAnsatteButton : DXButton
    {
        
        public UIAnsatteButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonAdd";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButton";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIDropDownButtonArrowBButton
        {
            get
            {
                if ((this.mUIDropDownButtonArrowBButton == null))
                {
                    this.mUIDropDownButtonArrowBButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonAddArrowButton";
                    this.mUIDropDownButtonArrowBButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DropDownButtonArrowButton";
                    this.mUIDropDownButtonArrowBButton.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIDropDownButtonArrowBButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIDropDownButtonArrowBButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControlRightClient : DXTestControl
    {
        
        public UIPanelControlRightClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient4 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient4(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient4 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient4 : DXTestControl
    {
        
        public UIPcViewClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeEditorsViewCustom UIEmployeeEditorsViewCustom
        {
            get
            {
                if ((this.mUIEmployeeEditorsViewCustom == null))
                {
                    this.mUIEmployeeEditorsViewCustom = new UIEmployeeEditorsViewCustom(this);
                }
                return this.mUIEmployeeEditorsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeEditorsViewCustom mUIEmployeeEditorsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeEditorsViewCustom : DXTestControl
    {
        
        public UIEmployeeEditorsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeEditorsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeEditorsView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient2 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient2(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient2 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient2 : DXTestControl
    {
        
        public UIPcContentClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIXscContentScrollableControl UIXscContentScrollableControl
        {
            get
            {
                if ((this.mUIXscContentScrollableControl == null))
                {
                    this.mUIXscContentScrollableControl = new UIXscContentScrollableControl(this);
                }
                return this.mUIXscContentScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscContentScrollableControl mUIXscContentScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIXscContentScrollableControl : DXScrollableControl
    {
        
        public UIXscContentScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlViewHostCustom UIGroupControlViewHostCustom
        {
            get
            {
                if ((this.mUIGroupControlViewHostCustom == null))
                {
                    this.mUIGroupControlViewHostCustom = new UIGroupControlViewHostCustom(this);
                }
                return this.mUIGroupControlViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlViewHostCustom mUIGroupControlViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlViewHostCustom : DXTestControl
    {
        
        public UIGroupControlViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient mUIGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGroupControlClient : DXTestControl
    {
        
        public UIGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[3]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerRevolCustom UIEmployeeManagerRevolCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerRevolCustom == null))
                {
                    this.mUIEmployeeManagerRevolCustom = new UIEmployeeManagerRevolCustom(this);
                }
                return this.mUIEmployeeManagerRevolCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerRevolCustom mUIEmployeeManagerRevolCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeManagerRevolCustom : DXTestControl
    {
        
        public UIEmployeeManagerRevolCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerRevolvingDatesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerRevolvingDatesView";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIERevolveFromDateTimeEdit
        {
            get
            {
                if ((this.mUIERevolveFromDateTimeEdit == null))
                {
                    this.mUIERevolveFromDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIERevolveFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eRevolveFrom";
                    this.mUIERevolveFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIERevolveFromDateTimeEdit.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIERevolveFromDateTimeEdit;
            }
        }
        
        public DXDateTimePicker UIERevolveToDateTimeEdit
        {
            get
            {
                if ((this.mUIERevolveToDateTimeEdit == null))
                {
                    this.mUIERevolveToDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIERevolveToDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "eRevolveTo";
                    this.mUIERevolveToDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIERevolveToDateTimeEdit.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIERevolveToDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIERevolveFromDateTimeEdit;
        
        private DXDateTimePicker mUIERevolveToDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILeggtilansatteWindow : DXWindow
    {
        
        public UILeggtilansatteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom1 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom1(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        
        public DXButton UISimpleButtonButton
        {
            get
            {
                if ((this.mUISimpleButtonButton == null))
                {
                    this.mUISimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "buttonOk";
                    this.mUISimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUISimpleButtonButton.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUISimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom1 mUIViewHostCustom;
        
        private DXButton mUISimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostCustom1 : DXTestControl
    {
        
        public UIViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient5 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient5(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient5 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient5 : DXTestControl
    {
        
        public UIPcViewClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UISelectDepartmentEmplCustom UISelectDepartmentEmplCustom
        {
            get
            {
                if ((this.mUISelectDepartmentEmplCustom == null))
                {
                    this.mUISelectDepartmentEmplCustom = new UISelectDepartmentEmplCustom(this);
                }
                return this.mUISelectDepartmentEmplCustom;
            }
        }
        
        public UISelectPlanEmployeesVCustom UISelectPlanEmployeesVCustom
        {
            get
            {
                if ((this.mUISelectPlanEmployeesVCustom == null))
                {
                    this.mUISelectPlanEmployeesVCustom = new UISelectPlanEmployeesVCustom(this);
                }
                return this.mUISelectPlanEmployeesVCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISelectDepartmentEmplCustom mUISelectDepartmentEmplCustom;
        
        private UISelectPlanEmployeesVCustom mUISelectPlanEmployeesVCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISelectDepartmentEmplCustom : DXTestControl
    {
        
        public UISelectDepartmentEmplCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectDepartmentEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectDepartmentEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentContainerClient : DXTestControl
    {
        
        public UIPcContentContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient3 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient3(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient3 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient3 : DXTestControl
    {
        
        public UIPcContentClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentEmployeeTable UIGcDepartmentEmployeeTable
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeTable == null))
                {
                    this.mUIGcDepartmentEmployeeTable = new UIGcDepartmentEmployeeTable(this);
                }
                return this.mUIGcDepartmentEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentEmployeeTable mUIGcDepartmentEmployeeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcDepartmentEmployeeTable : DXGrid
    {
        
        public UIGcDepartmentEmployeeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UILundTomCell
        {
            get
            {
                if ((this.mUILundTomCell == null))
                {
                    this.mUILundTomCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILundTomCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]0[Column]colE" +
                        "mployee";
                    this.mUILundTomCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILundTomCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUILundTomCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUILundTomCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISelectPlanEmployeesVCustom : DXTestControl
    {
        
        public UISelectPlanEmployeesVCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectPlanEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectPlanEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient1 UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient1(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient1 mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentContainerClient1 : DXTestControl
    {
        
        public UIPcContentContainerClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient4 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient4(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient4 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcContentClient4 : DXTestControl
    {
        
        public UIPcContentClient4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcPlanEmployeesTable UIGcPlanEmployeesTable
        {
            get
            {
                if ((this.mUIGcPlanEmployeesTable == null))
                {
                    this.mUIGcPlanEmployeesTable = new UIGcPlanEmployeesTable(this);
                }
                return this.mUIGcPlanEmployeesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcPlanEmployeesTable mUIGcPlanEmployeesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcPlanEmployeesTable : DXGrid
    {
        
        public UIGcPlanEmployeesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlanEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UIIbrahimovicZlatanCell
        {
            get
            {
                if ((this.mUIIbrahimovicZlatanCell == null))
                {
                    this.mUIIbrahimovicZlatanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcPlanEmployeesGridControlCell[View]gvPlanEmployees[Row]0[Column]colEmployee";
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIbrahimovicZlatanCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUIIbrahimovicZlatanCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIIbrahimovicZlatanCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class GatMain : WinWindow
    {
        
        public GatMain()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom2 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom2(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom2 mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIViewHostCustom2 : DXTestControl
    {
        
        public UIViewHostCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient6 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient6(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient6 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcViewClient6 : DXTestControl
    {
        
        public UIPcViewClient6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcMainPanelClient3 UIPcMainPanelClient
        {
            get
            {
                if ((this.mUIPcMainPanelClient == null))
                {
                    this.mUIPcMainPanelClient = new UIPcMainPanelClient3(this);
                }
                return this.mUIPcMainPanelClient;
            }
        }
        
        public UIStandaloneBarDockConCustom3 UIStandaloneBarDockConCustom
        {
            get
            {
                if ((this.mUIStandaloneBarDockConCustom == null))
                {
                    this.mUIStandaloneBarDockConCustom = new UIStandaloneBarDockConCustom3(this);
                }
                return this.mUIStandaloneBarDockConCustom;
            }
        }
        
        public UIAdministrationViewCustom UIAdministrationViewCustom
        {
            get
            {
                if ((this.mUIAdministrationViewCustom == null))
                {
                    this.mUIAdministrationViewCustom = new UIAdministrationViewCustom(this);
                }
                return this.mUIAdministrationViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPcMainPanelClient3 mUIPcMainPanelClient;
        
        private UIStandaloneBarDockConCustom3 mUIStandaloneBarDockConCustom;
        
        private UIAdministrationViewCustom mUIAdministrationViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPcMainPanelClient3 : DXTestControl
    {
        
        public UIPcMainPanelClient3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcMainPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITcPanListsTabList3 UITcPanListsTabList
        {
            get
            {
                if ((this.mUITcPanListsTabList == null))
                {
                    this.mUITcPanListsTabList = new UITcPanListsTabList3(this);
                }
                return this.mUITcPanListsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcPanListsTabList3 mUITcPanListsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcPanListsTabList3 : DXTestControl
    {
        
        public UITcPanListsTabList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcPanLists";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITpRosterPlanListClient2 UITpRosterPlanListClient
        {
            get
            {
                if ((this.mUITpRosterPlanListClient == null))
                {
                    this.mUITpRosterPlanListClient = new UITpRosterPlanListClient2(this);
                }
                return this.mUITpRosterPlanListClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpRosterPlanListClient2 mUITpRosterPlanListClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpRosterPlanListClient2 : DXTestControl
    {
        
        public UITpRosterPlanListClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpRosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanListCustom2 UIRosterPlanListCustom
        {
            get
            {
                if ((this.mUIRosterPlanListCustom == null))
                {
                    this.mUIRosterPlanListCustom = new UIRosterPlanListCustom2(this);
                }
                return this.mUIRosterPlanListCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanListCustom2 mUIRosterPlanListCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRosterPlanListCustom2 : DXTestControl
    {
        
        public UIRosterPlanListCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanList";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanList";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGridClient2 UIPnlGridClient
        {
            get
            {
                if ((this.mUIPnlGridClient == null))
                {
                    this.mUIPnlGridClient = new UIPnlGridClient2(this);
                }
                return this.mUIPnlGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridClient2 mUIPnlGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlGridClient2 : DXTestControl
    {
        
        public UIPnlGridClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRibbonControlRibbon2 UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon2(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        
        public DXGrid UIGcRosterPlansTable
        {
            get
            {
                if ((this.mUIGcRosterPlansTable == null))
                {
                    this.mUIGcRosterPlansTable = new DXGrid(this);
                    #region Search Criteria
                    this.mUIGcRosterPlansTable.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlans";
                    this.mUIGcRosterPlansTable.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
                    this.mUIGcRosterPlansTable.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIGcRosterPlansTable;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonControlRibbon2 mUIRibbonControlRibbon;
        
        private DXGrid mUIGcRosterPlansTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonControlRibbon2 : DXRibbon
    {
        
        public UIRibbonControlRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage3 UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage3(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage3 mUIRpHomeRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpHomeRibbonPage3 : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanRibbonPageGroup2 UIRpgPlanRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanRibbonPageGroup == null))
                {
                    this.mUIRpgPlanRibbonPageGroup = new UIRpgPlanRibbonPageGroup2(this);
                }
                return this.mUIRpgPlanRibbonPageGroup;
            }
        }
        
        public UIRpgFiltersRibbonPageGroup1 UIRpgFiltersRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFiltersRibbonPageGroup == null))
                {
                    this.mUIRpgFiltersRibbonPageGroup = new UIRpgFiltersRibbonPageGroup1(this);
                }
                return this.mUIRpgFiltersRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanRibbonPageGroup2 mUIRpgPlanRibbonPageGroup;
        
        private UIRpgFiltersRibbonPageGroup1 mUIRpgFiltersRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgPlanRibbonPageGroup2 : DXRibbonPageGroup
    {
        
        public UIRpgPlanRibbonPageGroup2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIÅpneRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIÅpneRibbonBaseButtonItem == null))
                {
                    this.mUIÅpneRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIÅpneRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiOpenPlan";
                    this.mUIÅpneRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIÅpneRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
                    #endregion
                }
                return this.mUIÅpneRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIÅpneRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgFiltersRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgFiltersRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilters";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINyeRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINyeRibbonBaseButtonItem == null))
                {
                    this.mUINyeRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINyeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowNewPlans";
                    this.mUINyeRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINyeRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
                    #endregion
                }
                return this.mUINyeRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIGamleRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIGamleRibbonBaseButtonItem == null))
                {
                    this.mUIGamleRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bciShowOldPlans";
                    this.mUIGamleRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIGamleRibbonBaseButtonItem.WindowTitles.Add("Gat ver. 2017.2.0.0 - (ASCL - Avd: 5170-Ytelse) - Arbeidsplan");
                    #endregion
                }
                return this.mUIGamleRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINyeRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIGamleRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIStandaloneBarDockConCustom3 : DXTestControl
    {
        
        public UIStandaloneBarDockConCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "standaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "StandaloneBarDockControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIMainmenuMenuBar3 UIMainmenuMenuBar
        {
            get
            {
                if ((this.mUIMainmenuMenuBar == null))
                {
                    this.mUIMainmenuMenuBar = new UIMainmenuMenuBar3(this);
                }
                return this.mUIMainmenuMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainmenuMenuBar3 mUIMainmenuMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainmenuMenuBar3 : DXMenu
    {
        
        public UIMainmenuMenuBar3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Main menu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockedBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIHjelpBarItem UIHjelpBarItem
        {
            get
            {
                if ((this.mUIHjelpBarItem == null))
                {
                    this.mUIHjelpBarItem = new UIHjelpBarItem(this);
                }
                return this.mUIHjelpBarItem;
            }
        }
        
        public DXMenuBaseButtonItem UINivåBarBaseButtonItem
        {
            get
            {
                if ((this.mUINivåBarBaseButtonItem == null))
                {
                    this.mUINivåBarBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnDepartment";
                    this.mUINivåBarBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarBaseButtonItem";
                    this.mUINivåBarBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUINivåBarBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private UIHjelpBarItem mUIHjelpBarItem;
        
        private DXMenuBaseButtonItem mUINivåBarBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIHjelpBarItem : DXMenuItem
    {
        
        public UIHjelpBarItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "btnHelp";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItem";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXButton UIBarItemOpenArrowButton
        {
            get
            {
                if ((this.mUIBarItemOpenArrowButton == null))
                {
                    this.mUIBarItemOpenArrowButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBarItemOpenArrowButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnHelp";
                    this.mUIBarItemOpenArrowButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "BarItemOpenArrow";
                    this.mUIBarItemOpenArrowButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBarItemOpenArrowButton;
            }
        }
        
        public DXMenuBaseButtonItem UIBtnAboutGatMenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnAboutGatMenuBaseButtonItem == null))
                {
                    this.mUIBtnAboutGatMenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnAboutGatMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAboutGat";
                    this.mUIBtnAboutGatMenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    this.mUIBtnAboutGatMenuBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBtnAboutGatMenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBarItemOpenArrowButton;
        
        private DXMenuBaseButtonItem mUIBtnAboutGatMenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAdministrationViewCustom : DXTestControl
    {
        
        public UIAdministrationViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "AdministrationView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "AdministrationView";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPanelControl1Client UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControl1Client mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPanelControl1Client : DXTestControl
    {
        
        public UIPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXMRUEdit UIScOptionsMRUEdit
        {
            get
            {
                if ((this.mUIScOptionsMRUEdit == null))
                {
                    this.mUIScOptionsMRUEdit = new DXMRUEdit(this);
                    #region Search Criteria
                    this.mUIScOptionsMRUEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "scOptions";
                    this.mUIScOptionsMRUEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SearchControl";
                    this.mUIScOptionsMRUEdit.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIScOptionsMRUEdit;
            }
        }
        
        public DXTreeList UITlOptionsTreeList
        {
            get
            {
                if ((this.mUITlOptionsTreeList == null))
                {
                    this.mUITlOptionsTreeList = new DXTreeList(this);
                    #region Search Criteria
                    this.mUITlOptionsTreeList.SearchProperties[DXTestControl.PropertyNames.Name] = "tlOptions";
                    this.mUITlOptionsTreeList.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
                    this.mUITlOptionsTreeList.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITlOptionsTreeList;
            }
        }
        #endregion
        
        #region Fields
        private DXMRUEdit mUIScOptionsMRUEdit;
        
        private DXTreeList mUITlOptionsTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOMWindow : WinWindow
    {
        
        public UIOMWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Om";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfAbout";
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("Om");
            #endregion
        }
        
        #region Properties
        public UISystemClient UISystemClient
        {
            get
            {
                if ((this.mUISystemClient == null))
                {
                    this.mUISystemClient = new UISystemClient(this);
                }
                return this.mUISystemClient;
            }
        }
        #endregion
        
        #region Fields
        private UISystemClient mUISystemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISystemClient : WinClient
    {
        
        public UISystemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "System";
            this.WindowTitles.Add("Om");
            #endregion
        }
        
        #region Properties
        public WinClient UIApplikasjonGatVersjoClient
        {
            get
            {
                if ((this.mUIApplikasjonGatVersjoClient == null))
                {
                    this.mUIApplikasjonGatVersjoClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIApplikasjonGatVersjoClient.SearchProperties.Add(new PropertyExpression(WinControl.PropertyNames.Name, "GatVer", PropertyExpressionOperator.Contains));
                    this.mUIApplikasjonGatVersjoClient.WindowTitles.Add("Om");
                    #endregion
                }
                return this.mUIApplikasjonGatVersjoClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIApplikasjonGatVersjoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOMWindow1 : WinWindow
    {
        
        public UIOMWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Om";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfAbout";
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "3";
            this.WindowTitles.Add("Om");
            #endregion
        }
        
        #region Properties
        public UIItemWindow18 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow18(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOMTitleBar UIOMTitleBar
        {
            get
            {
                if ((this.mUIOMTitleBar == null))
                {
                    this.mUIOMTitleBar = new UIOMTitleBar(this);
                }
                return this.mUIOMTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow18 mUIItemWindow;
        
        private UIOMTitleBar mUIOMTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow18 : WinWindow
    {
        
        public UIItemWindow18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.WindowTitles.Add("Om");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanel1Client
        {
            get
            {
                if ((this.mUIPanel1Client == null))
                {
                    this.mUIPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanel1Client.WindowTitles.Add("Om");
                    #endregion
                }
                return this.mUIPanel1Client;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanel1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOMTitleBar : WinTitleBar
    {
        
        public UIOMTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Om");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Om");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGatTitleBar UIGatTitleBar
        {
            get
            {
                if ((this.mUIGatTitleBar == null))
                {
                    this.mUIGatTitleBar = new UIGatTitleBar(this);
                }
                return this.mUIGatTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGatTitleBar mUIGatTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatTitleBar : WinTitleBar
    {
        
        public UIGatTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon2 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon2(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon2 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon2 : DXRibbon
    {
        
        public UIRcMenuRibbon2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpSupportToolsRibbonPage UIRpSupportToolsRibbonPage
        {
            get
            {
                if ((this.mUIRpSupportToolsRibbonPage == null))
                {
                    this.mUIRpSupportToolsRibbonPage = new UIRpSupportToolsRibbonPage(this);
                }
                return this.mUIRpSupportToolsRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpSupportToolsRibbonPage mUIRpSupportToolsRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpSupportToolsRibbonPage : DXRibbonPage
    {
        
        public UIRpSupportToolsRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpSupportTools";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgTestCaseRibbonPageGroup UIRpgTestCaseRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgTestCaseRibbonPageGroup == null))
                {
                    this.mUIRpgTestCaseRibbonPageGroup = new UIRpgTestCaseRibbonPageGroup(this);
                }
                return this.mUIRpgTestCaseRibbonPageGroup;
            }
        }
        
        public UIRibbonPageGroup20RibbonPageGroup UIRibbonPageGroup20RibbonPageGroup
        {
            get
            {
                if ((this.mUIRibbonPageGroup20RibbonPageGroup == null))
                {
                    this.mUIRibbonPageGroup20RibbonPageGroup = new UIRibbonPageGroup20RibbonPageGroup(this);
                }
                return this.mUIRibbonPageGroup20RibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgTestCaseRibbonPageGroup mUIRpgTestCaseRibbonPageGroup;
        
        private UIRibbonPageGroup20RibbonPageGroup mUIRibbonPageGroup20RibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgTestCaseRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgTestCaseRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgTestCase";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILåsoppplanRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILåsoppplanRibbonBaseButtonItem == null))
                {
                    this.mUILåsoppplanRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILåsoppplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnUnlockRoster";
                    this.mUILåsoppplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILåsoppplanRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILåsoppplanRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILåsoppplanRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPageGroup20RibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRibbonPageGroup20RibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonPageGroup20";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBtnCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBtnCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBtnCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnClose";
                    this.mUIBtnCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBtnCloseRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIBtnCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBtnCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow71 : DXWindow
    {
        
        public UIItemWindow71()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL2-4005 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL2-4005 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL2-4005 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIGSSimpleButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow1 : DXWindow
    {
        
        public UIArbeidsplanWindow1()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon3 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon3(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon3 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon3 : DXRibbon
    {
        
        public UIRcMenuRibbon3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow2 : DXWindow
    {
        
        public UIArbeidsplanWindow2()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon4 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon4(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon4 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon4 : DXRibbon
    {
        
        public UIRcMenuRibbon4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpRosterPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpRosterPlanRibbonPage == null))
                {
                    this.mUIRpRosterPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpRosterPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpRosterPlan";
                    this.mUIRpRosterPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpRosterPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpRosterPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpRosterPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow3 : DXWindow
    {
        
        public UIArbeidsplanWindow3()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon5 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon5(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon5 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon5 : DXRibbon
    {
        
        public UIRcMenuRibbon5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage mUIRpFilterRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpFilterRibbonPage : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgFilterRibbonPageGroup1 UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup1(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFilterRibbonPageGroup1 mUIRpgFilterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgFilterRibbonPageGroup1 : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIDdlCustomizeColumnsRibbonEditItem
        {
            get
            {
                if ((this.mUIDdlCustomizeColumnsRibbonEditItem == null))
                {
                    this.mUIDdlCustomizeColumnsRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlCustomizeColumns";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIDdlCustomizeColumnsRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIDdlCustomizeColumnsRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow4 : DXWindow
    {
        
        public UIArbeidsplanWindow4()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon6 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon6(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon6 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon6 : DXRibbon
    {
        
        public UIRcMenuRibbon6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpPrintRibbonPage
        {
            get
            {
                if ((this.mUIRpPrintRibbonPage == null))
                {
                    this.mUIRpPrintRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpPrintRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPrint";
                    this.mUIRpPrintRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpPrintRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpPrintRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpPrintRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow5 : DXWindow
    {
        
        public UIArbeidsplanWindow5()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon7 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon7(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon7 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon7 : DXRibbon
    {
        
        public UIRcMenuRibbon7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow6 : DXWindow
    {
        
        public UIArbeidsplanWindow6()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon8 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon8(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon8 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon8 : DXRibbon
    {
        
        public UIRcMenuRibbon8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage2 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage2(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage2 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpPlanRibbonPage2 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGrpEffectuateRevolviRibbonPageGroup UIGrpEffectuateRevolviRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpEffectuateRevolviRibbonPageGroup == null))
                {
                    this.mUIGrpEffectuateRevolviRibbonPageGroup = new UIGrpEffectuateRevolviRibbonPageGroup(this);
                }
                return this.mUIGrpEffectuateRevolviRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpEffectuateRevolviRibbonPageGroup mUIGrpEffectuateRevolviRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGrpEffectuateRevolviRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpEffectuateRevolviRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpEffectuate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonItem UIIverksettingRibbonItem
        {
            get
            {
                if ((this.mUIIverksettingRibbonItem == null))
                {
                    this.mUIIverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuEffectuateRevolving";
                    this.mUIIverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUIIverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIIverksettingRibbonItem;
            }
        }
        
        public DXRibbonItem UISlettiverksettingRibbonItem
        {
            get
            {
                if ((this.mUISlettiverksettingRibbonItem == null))
                {
                    this.mUISlettiverksettingRibbonItem = new DXRibbonItem(this);
                    #region Search Criteria
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "mnuDeleteEff";
                    this.mUISlettiverksettingRibbonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonItem";
                    this.mUISlettiverksettingRibbonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUISlettiverksettingRibbonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonItem mUIIverksettingRibbonItem;
        
        private DXRibbonItem mUISlettiverksettingRibbonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow7 : DXWindow
    {
        
        public UIArbeidsplanWindow7()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon9 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon9(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon9 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon9 : DXRibbon
    {
        
        public UIRcMenuRibbon9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow8 : DXWindow
    {
        
        public UIArbeidsplanWindow8()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon10 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon10(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon10 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon10 : DXRibbon
    {
        
        public UIRcMenuRibbon10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIComboBoxEditComboBox UIComboBoxEditComboBox
        {
            get
            {
                if ((this.mUIComboBoxEditComboBox == null))
                {
                    this.mUIComboBoxEditComboBox = new UIComboBoxEditComboBox(this);
                }
                return this.mUIComboBoxEditComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxEditComboBox mUIComboBoxEditComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxEditComboBox : DXComboBox
    {
        
        public UIComboBoxEditComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxWindow UIComboBoxPopupListBoxWindow
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxWindow == null))
                {
                    this.mUIComboBoxPopupListBoxWindow = new UIComboBoxPopupListBoxWindow(this);
                }
                return this.mUIComboBoxPopupListBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxWindow mUIComboBoxPopupListBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxPopupListBoxWindow : DXWindow
    {
        
        public UIComboBoxPopupListBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxForm";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxList UIComboBoxPopupListBoxList
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxList == null))
                {
                    this.mUIComboBoxPopupListBoxList = new UIComboBoxPopupListBoxList(this);
                }
                return this.mUIComboBoxPopupListBoxList;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxList mUIComboBoxPopupListBoxList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxPopupListBoxList : DXListBox
    {
        
        public UIComboBoxPopupListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBox";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIVaktfordelingListItem
        {
            get
            {
                if ((this.mUIVaktfordelingListItem == null))
                {
                    this.mUIVaktfordelingListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIVaktfordelingListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]Item[5]";
                    this.mUIVaktfordelingListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxItem";
                    this.mUIVaktfordelingListItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIVaktfordelingListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIVaktfordelingListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow9 : DXWindow
    {
        
        public UIArbeidsplanWindow9()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon11 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon11(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon11 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon11 : DXRibbon
    {
        
        public UIRcMenuRibbon11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpPlanRibbonPage3 UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new UIRpPlanRibbonPage3(this);
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpPlanRibbonPage3 mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpPlanRibbonPage3 : DXRibbonPage
    {
        
        public UIRpPlanRibbonPage3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRpgPlanCopyRosterRibbonPageGroup UIRpgPlanCopyRosterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPlanCopyRosterRibbonPageGroup == null))
                {
                    this.mUIRpgPlanCopyRosterRibbonPageGroup = new UIRpgPlanCopyRosterRibbonPageGroup(this);
                }
                return this.mUIRpgPlanCopyRosterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPlanCopyRosterRibbonPageGroup mUIRpgPlanCopyRosterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgPlanCopyRosterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPlanCopyRosterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPlanCopyRoster";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UINyarbeidsplanRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINyarbeidsplanRibbonBaseButtonItem == null))
                {
                    this.mUINyarbeidsplanRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINyarbeidsplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCopyRosterPlan";
                    this.mUINyarbeidsplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINyarbeidsplanRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUINyarbeidsplanRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UINyhjelpeplanRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINyhjelpeplanRibbonBaseButtonItem == null))
                {
                    this.mUINyhjelpeplanRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINyhjelpeplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCopyHelpRoster";
                    this.mUINyhjelpeplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINyhjelpeplanRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUINyhjelpeplanRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UINybaseplanRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUINybaseplanRibbonBaseButtonItem == null))
                {
                    this.mUINybaseplanRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUINybaseplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCopyBase";
                    this.mUINybaseplanRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUINybaseplanRibbonBaseButtonItem.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUINybaseplanRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUINyarbeidsplanRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUINyhjelpeplanRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUINybaseplanRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow10 : DXWindow
    {
        
        public UIArbeidsplanWindow10()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon12 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon12(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon12 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon12 : DXRibbon
    {
        
        public UIRcMenuRibbon12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow11 : DXWindow
    {
        
        public UIArbeidsplanWindow11()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon13 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon13(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon13 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon13 : DXRibbon
    {
        
        public UIRcMenuRibbon13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow12 : DXWindow
    {
        
        public UIArbeidsplanWindow12()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon14 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon14(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon14 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon14 : DXRibbon
    {
        
        public UIRcMenuRibbon14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanWindow13 : DXWindow
    {
        
        public UIArbeidsplanWindow13()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon15 UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon15(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon15 mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon15 : DXRibbon
    {
        
        public UIRcMenuRibbon15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXRibbonPage UIRpPlanRibbonPage
        {
            get
            {
                if ((this.mUIRpPlanRibbonPage == null))
                {
                    this.mUIRpPlanRibbonPage = new DXRibbonPage(this);
                    #region Search Criteria
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.Name] = "rpPlan";
                    this.mUIRpPlanRibbonPage.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
                    this.mUIRpPlanRibbonPage.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRpPlanRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonPage mUIRpPlanRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGT3999InformasjonWindow : DXWindow
    {
        
        public UIGT3999InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "GT-3999 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GT-3999 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btOK";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("GT-3999 - Informasjon");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow81 : WinWindow
    {
        
        public UIItemWindow81()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu2 UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu2(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu2 mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPopupMenuBarControlMenu2 : DXMenu
    {
        
        public UIPopupMenuBarControlMenu2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public UIFunksjonerMenuItem1 UIFunksjonerMenuItem
        {
            get
            {
                if ((this.mUIFunksjonerMenuItem == null))
                {
                    this.mUIFunksjonerMenuItem = new UIFunksjonerMenuItem1(this);
                }
                return this.mUIFunksjonerMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFunksjonerMenuItem1 mUIFunksjonerMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFunksjonerMenuItem1 : DXMenuItem
    {
        
        public UIFunksjonerMenuItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BarSubItemLink[14]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuItem";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink1MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink1MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink1MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[1]";
                    this.mUIBarButtonItemLink1MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink1MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink1MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFraværiarbeidsplanWindow : DXWindow
    {
        
        public UIFraværiarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fravær i arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UINbcAbsenceNavBar UINbcAbsenceNavBar
        {
            get
            {
                if ((this.mUINbcAbsenceNavBar == null))
                {
                    this.mUINbcAbsenceNavBar = new UINbcAbsenceNavBar(this);
                }
                return this.mUINbcAbsenceNavBar;
            }
        }
        
        public UIPnlButtonsClient5 UIPnlButtonsClient
        {
            get
            {
                if ((this.mUIPnlButtonsClient == null))
                {
                    this.mUIPnlButtonsClient = new UIPnlButtonsClient5(this);
                }
                return this.mUIPnlButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UINbcAbsenceNavBar mUINbcAbsenceNavBar;
        
        private UIPnlButtonsClient5 mUIPnlButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINbcAbsenceNavBar : DXNavBar
    {
        
        public UINbcAbsenceNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UINavBarGroupControlCoScrollableControl1 UINavBarGroupControlCoScrollableControl
        {
            get
            {
                if ((this.mUINavBarGroupControlCoScrollableControl == null))
                {
                    this.mUINavBarGroupControlCoScrollableControl = new UINavBarGroupControlCoScrollableControl1(this);
                }
                return this.mUINavBarGroupControlCoScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarGroupControlCoScrollableControl1 mUINavBarGroupControlCoScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINavBarGroupControlCoScrollableControl1 : DXScrollableControl
    {
        
        public UINavBarGroupControlCoScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarGroupControlContainer2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            #endregion
        }
        
        #region Properties
        public UIDdlAbsCodeLookUpEdit UIDdlAbsCodeLookUpEdit
        {
            get
            {
                if ((this.mUIDdlAbsCodeLookUpEdit == null))
                {
                    this.mUIDdlAbsCodeLookUpEdit = new UIDdlAbsCodeLookUpEdit(this);
                }
                return this.mUIDdlAbsCodeLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIDdlAbsCodeLookUpEdit mUIDdlAbsCodeLookUpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDdlAbsCodeLookUpEdit : DXLookUpEdit
    {
        
        public UIDdlAbsCodeLookUpEdit(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAbsCode";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLookUpEdit";
            this.WindowTitles.Add("Fravær i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXWindow UIPopupLookUpEditFormWindow
        {
            get
            {
                if ((this.mUIPopupLookUpEditFormWindow == null))
                {
                    this.mUIPopupLookUpEditFormWindow = new DXWindow(this);
                    #region Search Criteria
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlAbsCodePopupForm";
                    this.mUIPopupLookUpEditFormWindow.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupLookUpEditForm";
                    this.mUIPopupLookUpEditFormWindow.WindowTitles.Add("Fravær i arbeidsplan");
                    #endregion
                }
                return this.mUIPopupLookUpEditFormWindow;
            }
        }
        #endregion
        
        #region Fields
        private DXWindow mUIPopupLookUpEditFormWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlButtonsClient5 : DXTestControl
    {
        
        public UIPnlButtonsClient5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fravær i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSave";
                    this.mUIOKButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIOKButton.WindowTitles.Add("Fravær i arbeidsplan");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOverførtilleggWindow : DXWindow
    {
        
        public UIOverførtilleggWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Overfør tillegg";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Overfør tillegg");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIDeExportFromDateTimeEdit
        {
            get
            {
                if ((this.mUIDeExportFromDateTimeEdit == null))
                {
                    this.mUIDeExportFromDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIDeExportFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "deExportFrom";
                    this.mUIDeExportFromDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIDeExportFromDateTimeEdit.WindowTitles.Add("Overfør tillegg");
                    #endregion
                }
                return this.mUIDeExportFromDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIDeExportFromDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRPL4055InformasjonWindow : DXWindow
    {
        
        public UIRPL4055InformasjonWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "RPL-4055 - Informasjon";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("RPL-4055 - Informasjon");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("RPL-4055 - Informasjon");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        
        public DXButton UIGSSimpleButtonButton
        {
            get
            {
                if ((this.mUIGSSimpleButtonButton == null))
                {
                    this.mUIGSSimpleButtonButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btNo";
                    this.mUIGSSimpleButtonButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGSSimpleButtonButton.WindowTitles.Add("RPL-4055 - Informasjon");
                    #endregion
                }
                return this.mUIGSSimpleButtonButton;
            }
        }
        
        public DXButton UIJAButton
        {
            get
            {
                if ((this.mUIJAButton == null))
                {
                    this.mUIJAButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btYes";
                    this.mUIJAButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIJAButton.WindowTitles.Add("RPL-4055 - Informasjon");
                    #endregion
                }
                return this.mUIJAButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvbrytButton;
        
        private DXButton mUIGSSimpleButtonButton;
        
        private DXButton mUIJAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatWindow1 : WinWindow
    {
        
        public UIGatWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow19 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow19(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow19 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow19 : WinWindow
    {
        
        public UIItemWindow19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatWindow2 : WinWindow
    {
        
        public UIGatWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow20 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow20(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow20 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow20 : WinWindow
    {
        
        public UIItemWindow20(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TcxPageControl";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIAnsattClient
        {
            get
            {
                if ((this.mUIAnsattClient == null))
                {
                    this.mUIAnsattClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAnsattClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIAnsattClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAnsattClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatWindow3 : WinWindow
    {
        
        public UIGatWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow110 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow110(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow110 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow110 : WinWindow
    {
        
        public UIItemWindow110(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIDokClient
        {
            get
            {
                if ((this.mUIDokClient == null))
                {
                    this.mUIDokClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDokClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDokClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDokClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGatWindow4 : WinWindow
    {
        
        public UIGatWindow4()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIItemWindow112 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow112(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow112 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow112 : WinWindow
    {
        
        public UIItemWindow112(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TPanel";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIDokClient
        {
            get
            {
                if ((this.mUIDokClient == null))
                {
                    this.mUIDokClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIDokClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIDokClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIDokClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITmp934FtmpExcelWindow : WinWindow
    {
        
        public UITmp934FtmpExcelWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.Name, "Excel", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "XLMAIN";
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public UIItemWindow24 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow24(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIFileMenuBar UIFileMenuBar
        {
            get
            {
                if ((this.mUIFileMenuBar == null))
                {
                    this.mUIFileMenuBar = new UIFileMenuBar(this);
                }
                return this.mUIFileMenuBar;
            }
        }
        
        public UIItemGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup(this);
                }
                return this.mUIItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow24 mUIItemWindow;
        
        private UIFileMenuBar mUIFileMenuBar;
        
        private UIItemGroup mUIItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow24 : WinWindow
    {
        
        public UIItemWindow24(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("tmp934F.tmp - Excel");
            this.WindowTitles.Add("TestSAve - Excel");
            #endregion
        }
        
        #region Properties
        public UIRibbonPropertyPage UIRibbonPropertyPage
        {
            get
            {
                if ((this.mUIRibbonPropertyPage == null))
                {
                    this.mUIRibbonPropertyPage = new UIRibbonPropertyPage(this);
                }
                return this.mUIRibbonPropertyPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPropertyPage mUIRibbonPropertyPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRibbonPropertyPage : WinControl
    {
        
        public UIRibbonPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Ribbon";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("tmp934F.tmp - Excel");
            this.WindowTitles.Add("TestSAve - Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UIFileTabButton
        {
            get
            {
                if ((this.mUIFileTabButton == null))
                {
                    this.mUIFileTabButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFileTabButton.SearchProperties[WinButton.PropertyNames.Name] = "File Tab";
                    this.mUIFileTabButton.WindowTitles.Add("tmp934F.tmp - Excel");
                    #endregion
                }
                return this.mUIFileTabButton;
            }
        }
        
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Excel");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFileTabButton;
        
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFileMenuBar : WinMenuBar
    {
        
        public UIFileMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "File";
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public WinTabPage UISaveAsTabPage
        {
            get
            {
                if ((this.mUISaveAsTabPage == null))
                {
                    this.mUISaveAsTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUISaveAsTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Save As";
                    this.mUISaveAsTabPage.WindowTitles.Add("Excel");
                    #endregion
                }
                return this.mUISaveAsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUISaveAsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemGroup : WinGroup
    {
        
        public UIItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Excel");
            #endregion
        }
        
        #region Properties
        public WinButton UIBrowseButton
        {
            get
            {
                if ((this.mUIBrowseButton == null))
                {
                    this.mUIBrowseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBrowseButton.SearchProperties[WinButton.PropertyNames.Name] = "Browse";
                    this.mUIBrowseButton.WindowTitles.Add("tmp934F.tmp - Excel");
                    #endregion
                }
                return this.mUIBrowseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBrowseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            #endregion
        }
        
        #region Properties
        public UIDetailsPanePane UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsPanePane mUIDetailsPanePane;
        
        private UISaveWindow mUISaveWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDetailsPanePane : WinPane
    {
        
        public UIDetailsPanePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
}
