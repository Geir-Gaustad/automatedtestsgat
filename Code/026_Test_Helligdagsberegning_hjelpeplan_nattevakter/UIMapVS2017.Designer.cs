// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _026_Test_Helligdagsberegning_hjelpeplan_nattevakter.UIMapVS2017Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMapVS2017
    {
        
        /// <summary>
        /// AddAbsenceToElmander
        /// </summary>
        public void AddAbsenceToElmander()
        {
            #region Variable Declarations
            DXCell uIItemCell9 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell9;
            DXCell uIItemCell12 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell12;
            #endregion

            // Move cell to cell
            uIItemCell12.EnsureClickable(new Point(20, 8));
            Mouse.StartDragging(uIItemCell9, new Point(18, 8));
            Mouse.StopDragging(uIItemCell12, new Point(20, 8));

            // Right-Click cell
            Mouse.Click(uIItemCell12, MouseButtons.Right, ModifierKeys.None, new Point(20, 8));
        }
        
        /// <summary>
        /// AddF3_Larsson_Nilsson - Use 'AddF3_Larsson_NilssonParams' to pass parameters into this method.
        /// </summary>
        public void AddF3_Larsson_Nilsson()
        {
            #region Variable Declarations
            DXTreeListCell uIItem6LarssonHenrikTreeListCell = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeeTreeList.UINode5TreeListNode.UIItem6LarssonHenrikTreeListCell;
            DXTreeListCell uIItem7NilssonRolandTreeListCell = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeeTreeList.UINode6TreeListNode.UIItem7NilssonRolandTreeListCell;
            DXLookUpEdit uILueF3CalculationOptiLookUpEdit = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerF3CalCustom.UILueF3CalculationOptiLookUpEdit;
            #endregion

            // Click '6. Larsson, Henrik' TreeListCell
            Mouse.Click(uIItem6LarssonHenrikTreeListCell, new Point(44, 7));

            // Click '7. Nilsson, Roland' TreeListCell while pressing Control
            Mouse.Click(uIItem7NilssonRolandTreeListCell, MouseButtons.Left, ModifierKeys.Control, new Point(34, 7));

            // Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionViewModel' in 'lueF3CalculationOption' LookUpEdit
            //ValueTypeName
            uILueF3CalculationOptiLookUpEdit.ValueTypeName = this.AddF3_Larsson_NilssonParams.UILueF3CalculationOptiLookUpEditValueTypeName;

            // Type 'Annenhver' in 'lueF3CalculationOption' LookUpEdit
            //ValueAsString
            uILueF3CalculationOptiLookUpEdit.ValueAsString = this.AddF3_Larsson_NilssonParams.UILueF3CalculationOptiLookUpEditValueAsString;
        }
        
        /// <summary>
        /// AddF3ShiftsLarson - Use 'AddF3ShiftsLarsonParams' to pass parameters into this method.
        /// </summary>
        public void AddF3ShiftsLarson()
        {
            #region Variable Declarations
            DXCell uIItemCell10 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell10;
            DXTextEdit uIRow11ColumnRosterCelEdit = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow11ColumnRosterCelEdit;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell10, new Point(15, 8));

            // Type 'f3{Tab}' in '[Row]11[Column]RosterCell_20' text box
            Keyboard.SendKeys(uIRow11ColumnRosterCelEdit, this.AddF3ShiftsLarsonParams.UIRow11ColumnRosterCelEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// ChangeElmanderF3Calc - Use 'ChangeElmanderF3CalcParams' to pass parameters into this method.
        /// </summary>
        public void ChangeElmanderF3Calc()
        {
            #region Variable Declarations
            DXTreeListCell uIItem3ElmanderJohanTreeListCell = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlLeftClient.UITreeListEmployeeTreeList.UINode2TreeListNode.UIItem3ElmanderJohanTreeListCell;
            DXLookUpEdit uILueF3CalculationOptiLookUpEdit = this.UIAnsatteiarbeidsplanWindow.UIPanelControlOuterClient.UIPanelControlRightClient.UIViewHostCustom.UIPcViewClient.UIEmployeeEditorsViewCustom.UIPcContentClient.UIXscContentScrollableControl.UIGroupControlViewHostCustom.UIGroupControlClient.UIEmployeeManagerF3CalCustom.UILueF3CalculationOptiLookUpEdit;
            #endregion

            // Click '3. Elmander, Johan' TreeListCell
            Mouse.Click(uIItem3ElmanderJohanTreeListCell, new Point(32, 6));

            // Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionViewModel' in 'lueF3CalculationOption' LookUpEdit
            //ValueTypeName
            uILueF3CalculationOptiLookUpEdit.ValueTypeName = this.ChangeElmanderF3CalcParams.UILueF3CalculationOptiLookUpEditValueTypeName;

            // Type 'Annenhver' in 'lueF3CalculationOption' LookUpEdit
            //ValueAsString
            uILueF3CalculationOptiLookUpEdit.ValueAsString = this.ChangeElmanderF3CalcParams.UILueF3CalculationOptiLookUpEditValueAsString;
        }
        
        /// <summary>
        /// CheckAnderssonCalculationsStep4 - Use 'CheckAnderssonCalculationsStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAnderssonCalculationsStep4()
        {
            #region Variable Declarations
            DXCell uIItem3av9Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av9Cell;
            DXCell uIItem0av1Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av1Cell2;
            DXCell uIItem0av0Cell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell4;
            #endregion

            // Verify that the 'Text' property of '3 av 9' cell equals '3 av 9'
            Assert.AreEqual(this.CheckAnderssonCalculationsStep4ExpectedValues.UIItem3av9CellText, uIItem3av9Cell.Text);

            // Verify that the 'Text' property of '0 av 1' cell equals '0 av 1'
            Assert.AreEqual(this.CheckAnderssonCalculationsStep4ExpectedValues.UIItem0av1Cell2Text, uIItem0av1Cell2.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckAnderssonCalculationsStep4ExpectedValues.UIItem0av0Cell4Text, uIItem0av0Cell4.Text);
        }
        
        /// <summary>
        /// CheckBrolinCalculationsStep4 - Use 'CheckBrolinCalculationsStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckBrolinCalculationsStep4()
        {
            #region Variable Declarations
            DXCell uIItem0av9Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av9Cell;
            DXCell uIItem0av0Cell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell5;
            DXCell uIItem0av0Cell6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell6;
            #endregion

            // Verify that the 'Text' property of '0 av 9' cell equals '0 av 9'
            Assert.AreEqual(this.CheckBrolinCalculationsStep4ExpectedValues.UIItem0av9CellText, uIItem0av9Cell.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckBrolinCalculationsStep4ExpectedValues.UIItem0av0Cell5Text, uIItem0av0Cell5.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckBrolinCalculationsStep4ExpectedValues.UIItem0av0Cell6Text, uIItem0av0Cell6.Text);
        }
        
        /// <summary>
        /// CheckElmanderCalculationsStep4 - Use 'CheckElmanderCalculationsStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckElmanderCalculationsStep4()
        {
            #region Variable Declarations
            DXCell uIItem9av9Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem9av9Cell2;
            DXCell uIItem0av5Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av5Cell;
            DXCell uIItem0av0Cell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell7;
            #endregion

            // Verify that the 'Text' property of '9 av 9' cell equals '9 av 9'
            Assert.AreEqual(this.CheckElmanderCalculationsStep4ExpectedValues.UIItem9av9Cell2Text, uIItem9av9Cell2.Text);

            // Verify that the 'Text' property of '0 av 5' cell equals '0 av 5'
            Assert.AreEqual(this.CheckElmanderCalculationsStep4ExpectedValues.UIItem0av5CellText, uIItem0av5Cell.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckElmanderCalculationsStep4ExpectedValues.UIItem0av0Cell7Text, uIItem0av0Cell7.Text);
        }
        
        /// <summary>
        /// CheckEmployeeF3bCalculations - Use 'CheckEmployeeF3bCalculationsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckEmployeeF3bCalculations()
        {
            #region Variable Declarations
            DXCell uIACell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell4;
            DXCell uIACell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell5;
            DXCell uIGCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell2;
            DXCell uIACell6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell6;
            DXCell uIACell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell7;
            #endregion

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckEmployeeF3bCalculationsExpectedValues.UIACell4Text, uIACell4.Text);

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckEmployeeF3bCalculationsExpectedValues.UIACell5Text, uIACell5.Text);

            // Verify that the 'Text' property of 'G' cell equals 'G'
            Assert.AreEqual(this.CheckEmployeeF3bCalculationsExpectedValues.UIGCell2Text, uIGCell2.Text);

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckEmployeeF3bCalculationsExpectedValues.UIACell6Text, uIACell6.Text);

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.CheckEmployeeF3bCalculationsExpectedValues.UIACell7Text, uIACell7.Text);
        }
        
        /// <summary>
        /// ChecksStep10 - Use 'ChecksStep10ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecksStep10()
        {
            #region Variable Declarations
            DXCell uIElmanderJohanCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIElmanderJohanCell;
            DXCell uIGCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell1;
            DXCell uIItem6av9Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6av9Cell1;
            DXCell uIItem0av2Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell3;
            DXCell uIItem0av0Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell3;
            #endregion

            // Verify that the 'Text' property of 'Elmander, Johan' cell equals 'Elmander, Johan'
            Assert.AreEqual(this.ChecksStep10ExpectedValues.UIElmanderJohanCellText, uIElmanderJohanCell.Text);

            // Verify that the 'Text' property of 'G' cell equals 'A'
            Assert.AreEqual(this.ChecksStep10ExpectedValues.UIGCell1Text, uIGCell1.Text);

            // Verify that the 'Text' property of '6 av 9' cell equals '6 av 9'
            Assert.AreEqual(this.ChecksStep10ExpectedValues.UIItem6av9Cell1Text, uIItem6av9Cell1.Text);

            // Verify that the 'Text' property of '0 av 2' cell equals '0 av 4'
            Assert.AreEqual(this.ChecksStep10ExpectedValues.UIItem0av2Cell3Text, uIItem0av2Cell3.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.ChecksStep10ExpectedValues.UIItem0av0Cell3Text, uIItem0av0Cell3.Text);
        }
        
        /// <summary>
        /// ChecksStep9 - Use 'ChecksStep9ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecksStep9()
        {
            #region Variable Declarations
            DXCell uIGCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIGCell1;
            DXCell uIItem6av9Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6av9Cell1;
            DXCell uIItem0av2Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell3;
            DXCell uIItem0av0Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell3;
            #endregion

            // Verify that the 'Text' property of 'G' cell equals 'G'
            Assert.AreEqual(this.ChecksStep9ExpectedValues.UIGCell1Text, uIGCell1.Text);

            // Verify that the 'Text' property of '6 av 9' cell equals '6 av 9'
            Assert.AreEqual(this.ChecksStep9ExpectedValues.UIItem6av9Cell1Text, uIItem6av9Cell1.Text);

            // Verify that the 'Text' property of '0 av 2' cell equals '0 av 5'
            Assert.AreEqual(this.ChecksStep9ExpectedValues.UIItem0av2Cell3Text, uIItem0av2Cell3.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.ChecksStep9ExpectedValues.UIItem0av0Cell3Text, uIItem0av0Cell3.Text);
        }
        
        /// <summary>
        /// InsertLarssonshifts - Use 'InsertLarssonshiftsParams' to pass parameters into this method.
        /// </summary>
        public void InsertLarssonshifts()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell;
            DXTextEdit uIRow5ColumnRosterCellEdit = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit;
            DXCell uIItemCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell1;
            DXTextEdit uIRow5ColumnRosterCellEdit1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit1;
            DXCell uIItemCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell2;
            DXTextEdit uIRow5ColumnRosterCellEdit2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit2;
            DXCell uIItemCell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell3;
            DXTextEdit uIRow5ColumnRosterCellEdit3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow5ColumnRosterCellEdit3;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell, new Point(16, 12));

            // Click cell
            Mouse.Click(uIItemCell, new Point(15, 9));

            // Type 'n5{Tab}' in '[Row]5[Column]RosterCell_5' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell1, new Point(17, 7));

            // Type 'a{Tab}' in '[Row]5[Column]RosterCell_6' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit1, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEdit1SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell2, new Point(19, 10));

            // Click cell
            Mouse.Click(uIItemCell2, new Point(19, 10));

            // Type 'd{Tab}' in '[Row]5[Column]RosterCell_20' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit2, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEdit2SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell3, new Point(22, 10));

            // Type 'n5{Tab}' in '[Row]5[Column]RosterCell_21' text box
            Keyboard.SendKeys(uIRow5ColumnRosterCellEdit3, this.InsertLarssonshiftsParams.UIRow5ColumnRosterCellEdit3SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// InsertNilssonshifts - Use 'InsertNilssonshiftsParams' to pass parameters into this method.
        /// </summary>
        public void InsertNilssonshifts()
        {
            #region Variable Declarations
            DXCell uIItemCell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell4;
            DXTextEdit uIRow6ColumnRosterCellEdit = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit;
            DXCell uIItemCell11 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell11;
            DXTextEdit uIRow6ColumnRosterCellEdit1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit1;
            DXCell uIItemCell21 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell21;
            DXTextEdit uIRow6ColumnRosterCellEdit2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit2;
            DXCell uIItemCell31 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell31;
            DXTextEdit uIRow6ColumnRosterCellEdit3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit3;
            DXCell uIItemCell41 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell41;
            DXTextEdit uIRow6ColumnRosterCellEdit4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit4;
            DXCell uIItemCell5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell5;
            DXTextEdit uIRow6ColumnRosterCellEdit5 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit5;
            DXCell uIItemCell6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell6;
            DXTextEdit uIRow6ColumnRosterCellEdit6 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit6;
            DXCell uIItemCell7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell7;
            DXTextEdit uIRow6ColumnRosterCellEdit7 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit7;
            DXCell uIItemCell8 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIItemCell8;
            DXTextEdit uIRow6ColumnRosterCellEdit8 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIGcRosterPlanTable.UIRow6ColumnRosterCellEdit8;
            #endregion

            // Click cell
            Mouse.Click(uIItemCell4, new Point(14, 11));

            // Click cell
            Mouse.Click(uIItemCell4, new Point(14, 11));

            // Type 'n5{Tab}' in '[Row]6[Column]RosterCell_5' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit, this.InsertNilssonshiftsParams.UIRow6ColumnRosterCellEditSendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell11, new Point(15, 9));

            // Type 'n5{Tab}' in '[Row]6[Column]RosterCell_6' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit1, this.InsertNilssonshiftsParams.UIRow6ColumnRosterCellEdit1SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell21, new Point(20, 10));

            // Click cell
            Mouse.Click(uIItemCell21, new Point(20, 10));

            // Type 'n5{Tab}' in '[Row]6[Column]RosterCell_13' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit2, this.InsertNilssonshiftsParams.UIRow6ColumnRosterCellEdit2SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell31, new Point(21, 10));

            // Click cell
            Mouse.Click(uIItemCell31, new Point(21, 10));

            // Type 'n5{Tab}' in '[Row]6[Column]RosterCell_17' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit3, this.InsertNilssonshiftsParams.UIRow6ColumnRosterCellEdit3SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell41, new Point(21, 10));

            // Click cell
            Mouse.Click(uIItemCell41, new Point(21, 10));

            // Type 'n5{Tab}' in '[Row]6[Column]RosterCell_20' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit4, this.InsertNilssonshiftsParams.UIRow6ColumnRosterCellEdit4SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell5, new Point(22, 8));

            // Type 'n5{Tab}' in '[Row]6[Column]RosterCell_21' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit5, this.InsertNilssonshiftsParams.UIRow6ColumnRosterCellEdit5SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell6, new Point(17, 10));

            // Click cell
            Mouse.Click(uIItemCell6, new Point(17, 10));

            // Type 'n5{Tab}' in '[Row]6[Column]RosterCell_27' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit6, this.InsertNilssonshiftsParams.UIRow6ColumnRosterCellEdit6SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell7, new Point(18, 9));

            // Type 'n5{Tab}' in '[Row]6[Column]RosterCell_28' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit7, this.InsertNilssonshiftsParams.UIRow6ColumnRosterCellEdit7SendKeys, ModifierKeys.None);

            // Click cell
            Mouse.Click(uIItemCell8, new Point(19, 13));

            // Click cell
            Mouse.Click(uIItemCell8, new Point(19, 13));

            // Type 'n5{Tab}' in '[Row]6[Column]RosterCell_34' text box
            Keyboard.SendKeys(uIRow6ColumnRosterCellEdit8, this.InsertNilssonshiftsParams.UIRow6ColumnRosterCellEdit8SendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// Select_Larsson_Nilsson
        /// </summary>
        public void Select_Larsson_Nilsson()
        {
            #region Variable Declarations
            DXCell uILarssonHenrikCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UILarssonHenrikCell;
            DXCell uINilssonRolandCell = this.UILeggtilansatteWindow.UIViewHostCustom.UIPcViewClient.UISelectDepartmentEmplCustom.UIPcContentContainerClient.UIPcContentClient.UIGcDepartmentEmployeeTable.UINilssonRolandCell;
            #endregion

            // Click 'Larsson, Henrik' cell
            Mouse.Click(uILarssonHenrikCell, new Point(35, 11));

            // Click 'Nilsson, Roland' cell while pressing Control
            Mouse.Click(uINilssonRolandCell, MouseButtons.Left, ModifierKeys.Control, new Point(46, 8));
        }
        
        /// <summary>
        /// CheckHellstromCalculationsStep4 - Use 'CheckHellstromCalculationsStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckHellstromCalculationsStep4()
        {
            #region Variable Declarations
            DXCell uIItem3av9Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem3av9Cell1;
            DXCell uIItem0av0Cell8 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell8;
            DXCell uIItem0av0Cell9 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell9;
            #endregion

            // Verify that the 'Text' property of '3 av 9' cell equals '3 av 9'
            Assert.AreEqual(this.CheckHellstromCalculationsStep4ExpectedValues.UIItem3av9Cell1Text, uIItem3av9Cell1.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckHellstromCalculationsStep4ExpectedValues.UIItem0av0Cell8Text, uIItem0av0Cell8.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckHellstromCalculationsStep4ExpectedValues.UIItem0av0Cell9Text, uIItem0av0Cell9.Text);
        }
        
        /// <summary>
        /// CheckIbrahimovicCalculationsStep4 - Use 'CheckIbrahimovicCalculationsStep4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckIbrahimovicCalculationsStep4()
        {
            #region Variable Declarations
            DXCell uIItem0av9Cell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av9Cell1;
            DXCell uIItem6Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem6Cell;
            DXCell uIItem0av0Cell10 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell10;
            DXCell uIItemCell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell2;
            #endregion

            // Verify that the 'Text' property of '0 av 9' cell equals '0 av 9'
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep4ExpectedValues.UIItem0av9Cell1Text, uIItem0av9Cell1.Text);

            // Verify that the 'Text' property of '6' cell equals '6'
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep4ExpectedValues.UIItem6CellText, uIItem6Cell.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep4ExpectedValues.UIItem0av0Cell10Text, uIItem0av0Cell10.Text);

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckIbrahimovicCalculationsStep4ExpectedValues.UIItemCell2Text, uIItemCell2.Text);
        }
        
        /// <summary>
        /// ChecksStep8 - Use 'ChecksStep8ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecksStep8()
        {
            #region Variable Declarations
            DXCell uIACell8 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell8;
            DXCell uIItem4av9Cell2 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem4av9Cell2;
            DXCell uIItem0av2Cell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell4;
            DXCell uIItem0av0Cell11 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av0Cell11;
            DXCell uIACell9 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIACell9;
            DXCell uIItem9av9Cell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem9av9Cell3;
            DXCell uIItem0av4Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av4Cell;
            DXCell uIItemCell3 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItemCell3;
            #endregion

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.ChecksStep8ExpectedValues.UIACell8Text, uIACell8.Text);

            // Verify that the 'Text' property of '4 av 9' cell equals '4 av 9'
            Assert.AreEqual(this.ChecksStep8ExpectedValues.UIItem4av9Cell2Text, uIItem4av9Cell2.Text);

            // Verify that the 'Text' property of '0 av 2' cell equals '0 av 2'
            Assert.AreEqual(this.ChecksStep8ExpectedValues.UIItem0av2Cell4Text, uIItem0av2Cell4.Text);

            // Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
            Assert.AreEqual(this.ChecksStep8ExpectedValues.UIItem0av0Cell11Text, uIItem0av0Cell11.Text);

            // Verify that the 'Text' property of 'A' cell equals 'A'
            Assert.AreEqual(this.ChecksStep8ExpectedValues.UIACell9Text, uIACell9.Text);

            // Verify that the 'Text' property of '9 av 9' cell equals '9 av 9'
            Assert.AreEqual(this.ChecksStep8ExpectedValues.UIItem9av9Cell3Text, uIItem9av9Cell3.Text);

            // Verify that the 'Text' property of '0 av 4' cell equals '0 av 4'
            Assert.AreEqual(this.ChecksStep8ExpectedValues.UIItem0av4CellText, uIItem0av4Cell.Text);

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.ChecksStep8ExpectedValues.UIItemCell3Text, uIItemCell3.Text);
        }
        
        /// <summary>
        /// ChecksStep11 - Use 'ChecksStep11ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ChecksStep11()
        {
            #region Variable Declarations
            DXCell uILarssonHenrikCell1 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UILarssonHenrikCell1;
            DXCell uIF3Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIF3Cell;
            DXCell uIItem0av2Cell4 = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIDpnlColumnsDockPanel.UIDockPanel1_ContainerCustom.UIGcExtraGridTable.UIItem0av2Cell4;
            #endregion

            // Verify that the 'Text' property of 'Larsson, Henrik' cell equals 'Larsson, Henrik'
            Assert.AreEqual(this.ChecksStep11ExpectedValues.UILarssonHenrikCell1Text, uILarssonHenrikCell1.Text);

            // Verify that the 'Text' property of 'F3' cell equals 'F3'
            Assert.AreEqual(this.ChecksStep11ExpectedValues.UIF3CellText, uIF3Cell.Text);

            // Verify that the 'Text' property of '0 av 2' cell equals '1 av 2'
            Assert.AreEqual(this.ChecksStep11ExpectedValues.UIItem0av2Cell4Text, uIItem0av2Cell4.Text);
        }
        
        #region Properties
        public virtual AddF3_Larsson_NilssonParams AddF3_Larsson_NilssonParams
        {
            get
            {
                if ((this.mAddF3_Larsson_NilssonParams == null))
                {
                    this.mAddF3_Larsson_NilssonParams = new AddF3_Larsson_NilssonParams();
                }
                return this.mAddF3_Larsson_NilssonParams;
            }
        }
        
        public virtual AddF3ShiftsLarsonParams AddF3ShiftsLarsonParams
        {
            get
            {
                if ((this.mAddF3ShiftsLarsonParams == null))
                {
                    this.mAddF3ShiftsLarsonParams = new AddF3ShiftsLarsonParams();
                }
                return this.mAddF3ShiftsLarsonParams;
            }
        }
        
        public virtual ChangeElmanderF3CalcParams ChangeElmanderF3CalcParams
        {
            get
            {
                if ((this.mChangeElmanderF3CalcParams == null))
                {
                    this.mChangeElmanderF3CalcParams = new ChangeElmanderF3CalcParams();
                }
                return this.mChangeElmanderF3CalcParams;
            }
        }
        
        public virtual CheckAnderssonCalculationsStep4ExpectedValues CheckAnderssonCalculationsStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckAnderssonCalculationsStep4ExpectedValues == null))
                {
                    this.mCheckAnderssonCalculationsStep4ExpectedValues = new CheckAnderssonCalculationsStep4ExpectedValues();
                }
                return this.mCheckAnderssonCalculationsStep4ExpectedValues;
            }
        }
        
        public virtual CheckBrolinCalculationsStep4ExpectedValues CheckBrolinCalculationsStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckBrolinCalculationsStep4ExpectedValues == null))
                {
                    this.mCheckBrolinCalculationsStep4ExpectedValues = new CheckBrolinCalculationsStep4ExpectedValues();
                }
                return this.mCheckBrolinCalculationsStep4ExpectedValues;
            }
        }
        
        public virtual CheckElmanderCalculationsStep4ExpectedValues CheckElmanderCalculationsStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckElmanderCalculationsStep4ExpectedValues == null))
                {
                    this.mCheckElmanderCalculationsStep4ExpectedValues = new CheckElmanderCalculationsStep4ExpectedValues();
                }
                return this.mCheckElmanderCalculationsStep4ExpectedValues;
            }
        }
        
        public virtual CheckEmployeeF3bCalculationsExpectedValues CheckEmployeeF3bCalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckEmployeeF3bCalculationsExpectedValues == null))
                {
                    this.mCheckEmployeeF3bCalculationsExpectedValues = new CheckEmployeeF3bCalculationsExpectedValues();
                }
                return this.mCheckEmployeeF3bCalculationsExpectedValues;
            }
        }
        
        public virtual ChecksStep10ExpectedValues ChecksStep10ExpectedValues
        {
            get
            {
                if ((this.mChecksStep10ExpectedValues == null))
                {
                    this.mChecksStep10ExpectedValues = new ChecksStep10ExpectedValues();
                }
                return this.mChecksStep10ExpectedValues;
            }
        }
        
        public virtual ChecksStep9ExpectedValues ChecksStep9ExpectedValues
        {
            get
            {
                if ((this.mChecksStep9ExpectedValues == null))
                {
                    this.mChecksStep9ExpectedValues = new ChecksStep9ExpectedValues();
                }
                return this.mChecksStep9ExpectedValues;
            }
        }
        
        public virtual InsertLarssonshiftsParams InsertLarssonshiftsParams
        {
            get
            {
                if ((this.mInsertLarssonshiftsParams == null))
                {
                    this.mInsertLarssonshiftsParams = new InsertLarssonshiftsParams();
                }
                return this.mInsertLarssonshiftsParams;
            }
        }
        
        public virtual InsertNilssonshiftsParams InsertNilssonshiftsParams
        {
            get
            {
                if ((this.mInsertNilssonshiftsParams == null))
                {
                    this.mInsertNilssonshiftsParams = new InsertNilssonshiftsParams();
                }
                return this.mInsertNilssonshiftsParams;
            }
        }
        
        public virtual CheckHellstromCalculationsStep4ExpectedValues CheckHellstromCalculationsStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckHellstromCalculationsStep4ExpectedValues == null))
                {
                    this.mCheckHellstromCalculationsStep4ExpectedValues = new CheckHellstromCalculationsStep4ExpectedValues();
                }
                return this.mCheckHellstromCalculationsStep4ExpectedValues;
            }
        }
        
        public virtual CheckIbrahimovicCalculationsStep4ExpectedValues CheckIbrahimovicCalculationsStep4ExpectedValues
        {
            get
            {
                if ((this.mCheckIbrahimovicCalculationsStep4ExpectedValues == null))
                {
                    this.mCheckIbrahimovicCalculationsStep4ExpectedValues = new CheckIbrahimovicCalculationsStep4ExpectedValues();
                }
                return this.mCheckIbrahimovicCalculationsStep4ExpectedValues;
            }
        }
        
        public virtual ChecksStep8ExpectedValues ChecksStep8ExpectedValues
        {
            get
            {
                if ((this.mChecksStep8ExpectedValues == null))
                {
                    this.mChecksStep8ExpectedValues = new ChecksStep8ExpectedValues();
                }
                return this.mChecksStep8ExpectedValues;
            }
        }
        
        public virtual ChecksStep11ExpectedValues ChecksStep11ExpectedValues
        {
            get
            {
                if ((this.mChecksStep11ExpectedValues == null))
                {
                    this.mChecksStep11ExpectedValues = new ChecksStep11ExpectedValues();
                }
                return this.mChecksStep11ExpectedValues;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        
        public UILeggtilansatteWindow UILeggtilansatteWindow
        {
            get
            {
                if ((this.mUILeggtilansatteWindow == null))
                {
                    this.mUILeggtilansatteWindow = new UILeggtilansatteWindow();
                }
                return this.mUILeggtilansatteWindow;
            }
        }
        
        public UIAnsatteiarbeidsplanWindow UIAnsatteiarbeidsplanWindow
        {
            get
            {
                if ((this.mUIAnsatteiarbeidsplanWindow == null))
                {
                    this.mUIAnsatteiarbeidsplanWindow = new UIAnsatteiarbeidsplanWindow();
                }
                return this.mUIAnsatteiarbeidsplanWindow;
            }
        }
        #endregion
        
        #region Fields
        private AddF3_Larsson_NilssonParams mAddF3_Larsson_NilssonParams;
        
        private AddF3ShiftsLarsonParams mAddF3ShiftsLarsonParams;
        
        private ChangeElmanderF3CalcParams mChangeElmanderF3CalcParams;
        
        private CheckAnderssonCalculationsStep4ExpectedValues mCheckAnderssonCalculationsStep4ExpectedValues;
        
        private CheckBrolinCalculationsStep4ExpectedValues mCheckBrolinCalculationsStep4ExpectedValues;
        
        private CheckElmanderCalculationsStep4ExpectedValues mCheckElmanderCalculationsStep4ExpectedValues;
        
        private CheckEmployeeF3bCalculationsExpectedValues mCheckEmployeeF3bCalculationsExpectedValues;
        
        private ChecksStep10ExpectedValues mChecksStep10ExpectedValues;
        
        private ChecksStep9ExpectedValues mChecksStep9ExpectedValues;
        
        private InsertLarssonshiftsParams mInsertLarssonshiftsParams;
        
        private InsertNilssonshiftsParams mInsertNilssonshiftsParams;
        
        private CheckHellstromCalculationsStep4ExpectedValues mCheckHellstromCalculationsStep4ExpectedValues;
        
        private CheckIbrahimovicCalculationsStep4ExpectedValues mCheckIbrahimovicCalculationsStep4ExpectedValues;
        
        private ChecksStep8ExpectedValues mChecksStep8ExpectedValues;
        
        private ChecksStep11ExpectedValues mChecksStep11ExpectedValues;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        
        private UILeggtilansatteWindow mUILeggtilansatteWindow;
        
        private UIAnsatteiarbeidsplanWindow mUIAnsatteiarbeidsplanWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddF3_Larsson_Nilsson'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddF3_Larsson_NilssonParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionViewModel' in 'lueF3CalculationOption' LookUpEdit
        /// </summary>
        public string UILueF3CalculationOptiLookUpEditValueTypeName = "Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionView" +
            "Model";
        
        /// <summary>
        /// Type 'Annenhver' in 'lueF3CalculationOption' LookUpEdit
        /// </summary>
        public string UILueF3CalculationOptiLookUpEditValueAsString = "Annenhver";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddF3ShiftsLarson'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddF3ShiftsLarsonParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'f3{Tab}' in '[Row]11[Column]RosterCell_20' text box
        /// </summary>
        public string UIRow11ColumnRosterCelEditSendKeys = "f3{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangeElmanderF3Calc'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChangeElmanderF3CalcParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionViewModel' in 'lueF3CalculationOption' LookUpEdit
        /// </summary>
        public string UILueF3CalculationOptiLookUpEditValueTypeName = "Gatsoft.Gat.RosterPlan.EmployeeManager.UI.ViewModels.Data.F3CalculationOptionView" +
            "Model";
        
        /// <summary>
        /// Type 'Annenhver' in 'lueF3CalculationOption' LookUpEdit
        /// </summary>
        public string UILueF3CalculationOptiLookUpEditValueAsString = "Annenhver";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAnderssonCalculationsStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAnderssonCalculationsStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '3 av 9' cell equals '3 av 9'
        /// </summary>
        public string UIItem3av9CellText = "3 av 9";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 1' cell equals '0 av 1'
        /// </summary>
        public string UIItem0av1Cell2Text = "0 av 1";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell4Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckBrolinCalculationsStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckBrolinCalculationsStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '0 av 9' cell equals '0 av 9'
        /// </summary>
        public string UIItem0av9CellText = "0 av 9";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell5Text = "0 av 0";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell6Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckElmanderCalculationsStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckElmanderCalculationsStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '9 av 9' cell equals '9 av 9'
        /// </summary>
        public string UIItem9av9Cell2Text = "9 av 9";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 5' cell equals '0 av 5'
        /// </summary>
        public string UIItem0av5CellText = "0 av 5";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell7Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEmployeeF3bCalculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckEmployeeF3bCalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell4Text = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell5Text = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell2Text = "G";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell6Text = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell7Text = "A";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecksStep10'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecksStep10ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Elmander, Johan' cell equals 'Elmander, Johan'
        /// </summary>
        public string UIElmanderJohanCellText = "Elmander, Johan";
        
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals 'A'
        /// </summary>
        public string UIGCell1Text = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of '6 av 9' cell equals '6 av 9'
        /// </summary>
        public string UIItem6av9Cell1Text = "6 av 9";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 2' cell equals '0 av 4'
        /// </summary>
        public string UIItem0av2Cell3Text = "0 av 4";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell3Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecksStep9'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecksStep9ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCell1Text = "G";
        
        /// <summary>
        /// Verify that the 'Text' property of '6 av 9' cell equals '6 av 9'
        /// </summary>
        public string UIItem6av9Cell1Text = "6 av 9";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 2' cell equals '0 av 5'
        /// </summary>
        public string UIItem0av2Cell3Text = "0 av 5";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell3Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertLarssonshifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class InsertLarssonshiftsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]5[Column]RosterCell_5' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEditSendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'a{Tab}' in '[Row]5[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit1SendKeys = "a{Tab}";
        
        /// <summary>
        /// Type 'd{Tab}' in '[Row]5[Column]RosterCell_20' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit2SendKeys = "d{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]5[Column]RosterCell_21' text box
        /// </summary>
        public string UIRow5ColumnRosterCellEdit3SendKeys = "n5{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InsertNilssonshifts'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class InsertNilssonshiftsParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]6[Column]RosterCell_5' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEditSendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]6[Column]RosterCell_6' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit1SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]6[Column]RosterCell_13' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit2SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]6[Column]RosterCell_17' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit3SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]6[Column]RosterCell_20' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit4SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]6[Column]RosterCell_21' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit5SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]6[Column]RosterCell_27' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit6SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]6[Column]RosterCell_28' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit7SendKeys = "n5{Tab}";
        
        /// <summary>
        /// Type 'n5{Tab}' in '[Row]6[Column]RosterCell_34' text box
        /// </summary>
        public string UIRow6ColumnRosterCellEdit8SendKeys = "n5{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckHellstromCalculationsStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckHellstromCalculationsStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '3 av 9' cell equals '3 av 9'
        /// </summary>
        public string UIItem3av9Cell1Text = "3 av 9";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell8Text = "0 av 0";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell9Text = "0 av 0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckIbrahimovicCalculationsStep4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckIbrahimovicCalculationsStep4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '0 av 9' cell equals '0 av 9'
        /// </summary>
        public string UIItem0av9Cell1Text = "0 av 9";
        
        /// <summary>
        /// Verify that the 'Text' property of '6' cell equals '6'
        /// </summary>
        public string UIItem6CellText = "6";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell10Text = "0 av 0";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCell2Text = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecksStep8'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecksStep8ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell8Text = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of '4 av 9' cell equals '4 av 9'
        /// </summary>
        public string UIItem4av9Cell2Text = "4 av 9";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 2' cell equals '0 av 2'
        /// </summary>
        public string UIItem0av2Cell4Text = "0 av 2";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 0' cell equals '0 av 0'
        /// </summary>
        public string UIItem0av0Cell11Text = "0 av 0";
        
        /// <summary>
        /// Verify that the 'Text' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell9Text = "A";
        
        /// <summary>
        /// Verify that the 'Text' property of '9 av 9' cell equals '9 av 9'
        /// </summary>
        public string UIItem9av9Cell3Text = "9 av 9";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 4' cell equals '0 av 4'
        /// </summary>
        public string UIItem0av4CellText = "0 av 4";
        
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCell3Text = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChecksStep11'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ChecksStep11ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Larsson, Henrik' cell equals 'Larsson, Henrik'
        /// </summary>
        public string UILarssonHenrikCell1Text = "Larsson, Henrik";
        
        /// <summary>
        /// Verify that the 'Text' property of 'F3' cell equals 'F3'
        /// </summary>
        public string UIF3CellText = "F3";
        
        /// <summary>
        /// Verify that the 'Text' property of '0 av 2' cell equals '1 av 2'
        /// </summary>
        public string UIItem0av2Cell4Text = "1 av 2";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        
        public UIRosterPlanGrid1Custom UIRosterPlanGrid1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGrid1Custom == null))
                {
                    this.mUIRosterPlanGrid1Custom = new UIRosterPlanGrid1Custom(this);
                }
                return this.mUIRosterPlanGrid1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel mUIDpnlColumnsDockPanel;
        
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        
        private UIRosterPlanGrid1Custom mUIRosterPlanGrid1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlColumnsDockPanel : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcExtraGridTable : DXGrid
    {
        
        public UIGcExtraGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem0av9Cell
        {
            get
            {
                if ((this.mUIItem0av9Cell == null))
                {
                    this.mUIItem0av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_SH";
                    this.mUIItem0av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av9Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av9Cell;
            }
        }
        
        public DXCell UIItem0av0Cell
        {
            get
            {
                if ((this.mUIItem0av0Cell == null))
                {
                    this.mUIItem0av0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_F3";
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]Col_F1F5";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIItem3av9Cell
        {
            get
            {
                if ((this.mUIItem3av9Cell == null))
                {
                    this.mUIItem3av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_SH";
                    this.mUIItem3av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av9Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av9Cell;
            }
        }
        
        public DXCell UIItem0av1Cell
        {
            get
            {
                if ((this.mUIItem0av1Cell == null))
                {
                    this.mUIItem0av1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_F3";
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell;
            }
        }
        
        public DXCell UIItem0av0Cell1
        {
            get
            {
                if ((this.mUIItem0av0Cell1 == null))
                {
                    this.mUIItem0av0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]Col_F1F5";
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell1;
            }
        }
        
        public DXCell UIItem0av9Cell1
        {
            get
            {
                if ((this.mUIItem0av9Cell1 == null))
                {
                    this.mUIItem0av9Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av9Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_SH";
                    this.mUIItem0av9Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av9Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av9Cell1;
            }
        }
        
        public DXCell UIItem0av0Cell2
        {
            get
            {
                if ((this.mUIItem0av0Cell2 == null))
                {
                    this.mUIItem0av0Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_F3";
                    this.mUIItem0av0Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell2;
            }
        }
        
        public DXCell UIItem0av0Cell3
        {
            get
            {
                if ((this.mUIItem0av0Cell3 == null))
                {
                    this.mUIItem0av0Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]Col_F1F5";
                    this.mUIItem0av0Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell3;
            }
        }
        
        public DXCell UIItem9av9Cell
        {
            get
            {
                if ((this.mUIItem9av9Cell == null))
                {
                    this.mUIItem9av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem9av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_SH";
                    this.mUIItem9av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem9av9Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem9av9Cell;
            }
        }
        
        public DXCell UIItem0av5Cell
        {
            get
            {
                if ((this.mUIItem0av5Cell == null))
                {
                    this.mUIItem0av5Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av5Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_F3";
                    this.mUIItem0av5Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av5Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av5Cell;
            }
        }
        
        public DXCell UIItem0av0Cell4
        {
            get
            {
                if ((this.mUIItem0av0Cell4 == null))
                {
                    this.mUIItem0av0Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_F1F5";
                    this.mUIItem0av0Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell4;
            }
        }
        
        public DXCell UIItem3av9Cell1
        {
            get
            {
                if ((this.mUIItem3av9Cell1 == null))
                {
                    this.mUIItem3av9Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av9Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]Col_SH";
                    this.mUIItem3av9Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av9Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av9Cell1;
            }
        }
        
        public DXCell UIItem0av0Cell5
        {
            get
            {
                if ((this.mUIItem0av0Cell5 == null))
                {
                    this.mUIItem0av0Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]Col_F3";
                    this.mUIItem0av0Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell5;
            }
        }
        
        public DXCell UIItem0av0Cell6
        {
            get
            {
                if ((this.mUIItem0av0Cell6 == null))
                {
                    this.mUIItem0av0Cell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]Col_F1F5";
                    this.mUIItem0av0Cell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell6;
            }
        }
        
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_F3Calc";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        
        public DXCell UIItem4av9Cell
        {
            get
            {
                if ((this.mUIItem4av9Cell == null))
                {
                    this.mUIItem4av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_SH";
                    this.mUIItem4av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4av9Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4av9Cell;
            }
        }
        
        public DXCell UIItem416Cell
        {
            get
            {
                if ((this.mUIItem416Cell == null))
                {
                    this.mUIItem416Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem416Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_ColumnA";
                    this.mUIItem416Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem416Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem416Cell;
            }
        }
        
        public DXCell UIItem0av1Cell1
        {
            get
            {
                if ((this.mUIItem0av1Cell1 == null))
                {
                    this.mUIItem0av1Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_F3";
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell1;
            }
        }
        
        public DXCell UIItem0av0Cell7
        {
            get
            {
                if ((this.mUIItem0av0Cell7 == null))
                {
                    this.mUIItem0av0Cell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]Col_F1F5";
                    this.mUIItem0av0Cell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell7;
            }
        }
        
        public DXCell UIACell1
        {
            get
            {
                if ((this.mUIACell1 == null))
                {
                    this.mUIACell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_F3Calc";
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell1;
            }
        }
        
        public DXCell UIItem3519Cell
        {
            get
            {
                if ((this.mUIItem3519Cell == null))
                {
                    this.mUIItem3519Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3519Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_ColumnB";
                    this.mUIItem3519Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3519Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3519Cell;
            }
        }
        
        public DXCell UIItem0av2Cell
        {
            get
            {
                if ((this.mUIItem0av2Cell == null))
                {
                    this.mUIItem0av2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_F3";
                    this.mUIItem0av2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av2Cell;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]Col_F1F5";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIGCell
        {
            get
            {
                if ((this.mUIGCell == null))
                {
                    this.mUIGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_F3Calc";
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell;
            }
        }
        
        public DXCell UIItem424Cell
        {
            get
            {
                if ((this.mUIItem424Cell == null))
                {
                    this.mUIItem424Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem424Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_ColumnA";
                    this.mUIItem424Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem424Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem424Cell;
            }
        }
        
        public DXCell UIItem5652Cell
        {
            get
            {
                if ((this.mUIItem5652Cell == null))
                {
                    this.mUIItem5652Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5652Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_ColumnB";
                    this.mUIItem5652Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5652Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem5652Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem0av9Cell;
        
        private DXCell mUIItem0av0Cell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIItem3av9Cell;
        
        private DXCell mUIItem0av1Cell;
        
        private DXCell mUIItem0av0Cell1;
        
        private DXCell mUIItem0av9Cell1;
        
        private DXCell mUIItem0av0Cell2;
        
        private DXCell mUIItem0av0Cell3;
        
        private DXCell mUIItem9av9Cell;
        
        private DXCell mUIItem0av5Cell;
        
        private DXCell mUIItem0av0Cell4;
        
        private DXCell mUIItem3av9Cell1;
        
        private DXCell mUIItem0av0Cell5;
        
        private DXCell mUIItem0av0Cell6;
        
        private DXCell mUIACell;
        
        private DXCell mUIItem4av9Cell;
        
        private DXCell mUIItem416Cell;
        
        private DXCell mUIItem0av1Cell1;
        
        private DXCell mUIItem0av0Cell7;
        
        private DXCell mUIACell1;
        
        private DXCell mUIItem3519Cell;
        
        private DXCell mUIItem0av2Cell;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIGCell;
        
        private DXCell mUIItem424Cell;
        
        private DXCell mUIItem5652Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_5";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit == null))
                {
                    this.mUIRow5ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_5";
                    this.mUIRow5ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_6";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_6";
                    this.mUIRow5ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_20";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_20";
                    this.mUIRow5ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_21";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        
        public DXTextEdit UIRow5ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow5ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow5ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow5ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]5[Column]RosterCell_21";
                    this.mUIRow5ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow5ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow5ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell4
        {
            get
            {
                if ((this.mUIItemCell4 == null))
                {
                    this.mUIItemCell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_5";
                    this.mUIItemCell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell4;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit == null))
                {
                    this.mUIRow6ColumnRosterCellEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_5";
                    this.mUIRow6ColumnRosterCellEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit;
            }
        }
        
        public DXCell UIItemCell11
        {
            get
            {
                if ((this.mUIItemCell11 == null))
                {
                    this.mUIItemCell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_6";
                    this.mUIItemCell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell11;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit1
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit1 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit1 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_6";
                    this.mUIRow6ColumnRosterCellEdit1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit1;
            }
        }
        
        public DXCell UIItemCell21
        {
            get
            {
                if ((this.mUIItemCell21 == null))
                {
                    this.mUIItemCell21 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_13";
                    this.mUIItemCell21.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell21.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell21;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit2
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit2 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit2 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_13";
                    this.mUIRow6ColumnRosterCellEdit2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit2;
            }
        }
        
        public DXCell UIItemCell31
        {
            get
            {
                if ((this.mUIItemCell31 == null))
                {
                    this.mUIItemCell31 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_17";
                    this.mUIItemCell31.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell31.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell31;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit3
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit3 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit3 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_17";
                    this.mUIRow6ColumnRosterCellEdit3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit3;
            }
        }
        
        public DXCell UIItemCell41
        {
            get
            {
                if ((this.mUIItemCell41 == null))
                {
                    this.mUIItemCell41 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell41.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_20";
                    this.mUIItemCell41.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell41.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell41;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit4
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit4 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit4 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_20";
                    this.mUIRow6ColumnRosterCellEdit4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit4;
            }
        }
        
        public DXCell UIItemCell5
        {
            get
            {
                if ((this.mUIItemCell5 == null))
                {
                    this.mUIItemCell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_21";
                    this.mUIItemCell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell5;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit5
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit5 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit5 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_21";
                    this.mUIRow6ColumnRosterCellEdit5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit5;
            }
        }
        
        public DXCell UIItemCell6
        {
            get
            {
                if ((this.mUIItemCell6 == null))
                {
                    this.mUIItemCell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_27";
                    this.mUIItemCell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell6;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit6
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit6 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit6 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_27";
                    this.mUIRow6ColumnRosterCellEdit6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit6;
            }
        }
        
        public DXCell UIItemCell7
        {
            get
            {
                if ((this.mUIItemCell7 == null))
                {
                    this.mUIItemCell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_28";
                    this.mUIItemCell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell7;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit7
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit7 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit7 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_28";
                    this.mUIRow6ColumnRosterCellEdit7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit7;
            }
        }
        
        public DXCell UIItemCell8
        {
            get
            {
                if ((this.mUIItemCell8 == null))
                {
                    this.mUIItemCell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]RosterCell_34";
                    this.mUIItemCell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell8;
            }
        }
        
        public DXTextEdit UIRow6ColumnRosterCellEdit8
        {
            get
            {
                if ((this.mUIRow6ColumnRosterCellEdit8 == null))
                {
                    this.mUIRow6ColumnRosterCellEdit8 = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow6ColumnRosterCellEdit8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]6[Column]RosterCell_34";
                    this.mUIRow6ColumnRosterCellEdit8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow6ColumnRosterCellEdit8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow6ColumnRosterCellEdit8;
            }
        }
        
        public DXCell UIItemCell9
        {
            get
            {
                if ((this.mUIItemCell9 == null))
                {
                    this.mUIItemCell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_0";
                    this.mUIItemCell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell9;
            }
        }
        
        public DXCell UIItemCell12
        {
            get
            {
                if ((this.mUIItemCell12 == null))
                {
                    this.mUIItemCell12 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]RosterCell_13";
                    this.mUIItemCell12.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell12.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell12;
            }
        }
        
        public DXCell UIItemCell10
        {
            get
            {
                if ((this.mUIItemCell10 == null))
                {
                    this.mUIItemCell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]11[Column]RosterCell_20";
                    this.mUIItemCell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell10;
            }
        }
        
        public DXTextEdit UIRow11ColumnRosterCelEdit
        {
            get
            {
                if ((this.mUIRow11ColumnRosterCelEdit == null))
                {
                    this.mUIRow11ColumnRosterCelEdit = new DXTextEdit(this);
                    #region Search Criteria
                    this.mUIRow11ColumnRosterCelEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanTextEdit[View]gvRosterPlan[Row]11[Column]RosterCell_20";
                    this.mUIRow11ColumnRosterCelEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TextEdit";
                    this.mUIRow11ColumnRosterCelEdit.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIRow11ColumnRosterCelEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit;
        
        private DXCell mUIItemCell1;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell2;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit2;
        
        private DXCell mUIItemCell3;
        
        private DXTextEdit mUIRow5ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell4;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit;
        
        private DXCell mUIItemCell11;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit1;
        
        private DXCell mUIItemCell21;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit2;
        
        private DXCell mUIItemCell31;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit3;
        
        private DXCell mUIItemCell41;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit4;
        
        private DXCell mUIItemCell5;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit5;
        
        private DXCell mUIItemCell6;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit6;
        
        private DXCell mUIItemCell7;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit7;
        
        private DXCell mUIItemCell8;
        
        private DXTextEdit mUIRow6ColumnRosterCellEdit8;
        
        private DXCell mUIItemCell9;
        
        private DXCell mUIItemCell12;
        
        private DXCell mUIItemCell10;
        
        private DXTextEdit mUIRow11ColumnRosterCelEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGrid1Custom : DXTestControl
    {
        
        public UIRosterPlanGrid1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGrid1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGrid";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel1 UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel1(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        
        public UIGcRosterPlanTable1 UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable1(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel1 mUIDpnlColumnsDockPanel;
        
        private UIGcRosterPlanTable1 mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDpnlColumnsDockPanel1 : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom1 UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom1(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom1 mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDockPanel1_ContainerCustom1 : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable1 UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable1(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable1 mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcExtraGridTable1 : DXGrid
    {
        
        public UIGcExtraGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle42";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        
        public DXCell UIItem4av9Cell
        {
            get
            {
                if ((this.mUIItem4av9Cell == null))
                {
                    this.mUIItem4av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle43";
                    this.mUIItem4av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4av9Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4av9Cell;
            }
        }
        
        public DXCell UIItem0av1Cell
        {
            get
            {
                if ((this.mUIItem0av1Cell == null))
                {
                    this.mUIItem0av1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle48";
                    this.mUIItem0av1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell;
            }
        }
        
        public DXCell UIItem0av0Cell
        {
            get
            {
                if ((this.mUIItem0av0Cell == null))
                {
                    this.mUIItem0av0Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle49";
                    this.mUIItem0av0Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell;
            }
        }
        
        public DXCell UIACell1
        {
            get
            {
                if ((this.mUIACell1 == null))
                {
                    this.mUIACell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]ColumnHandle42";
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell1;
            }
        }
        
        public DXCell UIItem9av9Cell
        {
            get
            {
                if ((this.mUIItem9av9Cell == null))
                {
                    this.mUIItem9av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem9av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]ColumnHandle43";
                    this.mUIItem9av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem9av9Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem9av9Cell;
            }
        }
        
        public DXCell UIItem0av2Cell
        {
            get
            {
                if ((this.mUIItem0av2Cell == null))
                {
                    this.mUIItem0av2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]ColumnHandle48";
                    this.mUIItem0av2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av2Cell;
            }
        }
        
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]ColumnHandle49";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXCell UIGCell
        {
            get
            {
                if ((this.mUIGCell == null))
                {
                    this.mUIGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle42";
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell;
            }
        }
        
        public DXCell UIItem6av9Cell
        {
            get
            {
                if ((this.mUIItem6av9Cell == null))
                {
                    this.mUIItem6av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle43";
                    this.mUIItem6av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6av9Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6av9Cell;
            }
        }
        
        public DXCell UIItem0av2Cell1
        {
            get
            {
                if ((this.mUIItem0av2Cell1 == null))
                {
                    this.mUIItem0av2Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle48";
                    this.mUIItem0av2Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av2Cell1;
            }
        }
        
        public DXCell UIItem0av0Cell1
        {
            get
            {
                if ((this.mUIItem0av0Cell1 == null))
                {
                    this.mUIItem0av0Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle49";
                    this.mUIItem0av0Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell1;
            }
        }
        
        public DXCell UIACell2
        {
            get
            {
                if ((this.mUIACell2 == null))
                {
                    this.mUIACell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]11[Column]ColumnHandle40";
                    this.mUIACell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell2;
            }
        }
        
        public DXCell UIItem4av9Cell1
        {
            get
            {
                if ((this.mUIItem4av9Cell1 == null))
                {
                    this.mUIItem4av9Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4av9Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle41";
                    this.mUIItem4av9Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4av9Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4av9Cell1;
            }
        }
        
        public DXCell UIItem0av1Cell1
        {
            get
            {
                if ((this.mUIItem0av1Cell1 == null))
                {
                    this.mUIItem0av1Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]11[Column]ColumnHandle46";
                    this.mUIItem0av1Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell1;
            }
        }
        
        public DXCell UIItem0av0Cell2
        {
            get
            {
                if ((this.mUIItem0av0Cell2 == null))
                {
                    this.mUIItem0av0Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle47";
                    this.mUIItem0av0Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell2;
            }
        }
        
        public DXCell UIACell3
        {
            get
            {
                if ((this.mUIACell3 == null))
                {
                    this.mUIACell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]ColumnHandle40";
                    this.mUIACell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell3;
            }
        }
        
        public DXCell UIItem9av9Cell1
        {
            get
            {
                if ((this.mUIItem9av9Cell1 == null))
                {
                    this.mUIItem9av9Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem9av9Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]ColumnHandle41";
                    this.mUIItem9av9Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem9av9Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem9av9Cell1;
            }
        }
        
        public DXCell UIItem0av2Cell2
        {
            get
            {
                if ((this.mUIItem0av2Cell2 == null))
                {
                    this.mUIItem0av2Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]ColumnHandle46";
                    this.mUIItem0av2Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av2Cell2;
            }
        }
        
        public DXCell UIItemCell1
        {
            get
            {
                if ((this.mUIItemCell1 == null))
                {
                    this.mUIItemCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]ColumnHandle47";
                    this.mUIItemCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell1;
            }
        }
        
        public DXCell UIGCell1
        {
            get
            {
                if ((this.mUIGCell1 == null))
                {
                    this.mUIGCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle40";
                    this.mUIGCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell1;
            }
        }
        
        public DXCell UIItem6av9Cell1
        {
            get
            {
                if ((this.mUIItem6av9Cell1 == null))
                {
                    this.mUIItem6av9Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6av9Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle41";
                    this.mUIItem6av9Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6av9Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6av9Cell1;
            }
        }
        
        public DXCell UIItem0av2Cell3
        {
            get
            {
                if ((this.mUIItem0av2Cell3 == null))
                {
                    this.mUIItem0av2Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle46";
                    this.mUIItem0av2Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av2Cell3;
            }
        }
        
        public DXCell UIItem0av0Cell3
        {
            get
            {
                if ((this.mUIItem0av0Cell3 == null))
                {
                    this.mUIItem0av0Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]ColumnHandle47";
                    this.mUIItem0av0Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell3;
            }
        }
        
        public DXCell UIItem1av1Cell
        {
            get
            {
                if ((this.mUIItem1av1Cell == null))
                {
                    this.mUIItem1av1Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1av1Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]ColumnHandle46";
                    this.mUIItem1av1Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1av1Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1av1Cell;
            }
        }
        
        public DXCell UIACell4
        {
            get
            {
                if ((this.mUIACell4 == null))
                {
                    this.mUIACell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]F3Calc";
                    this.mUIACell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell4;
            }
        }
        
        public DXCell UIACell5
        {
            get
            {
                if ((this.mUIACell5 == null))
                {
                    this.mUIACell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]F3Calc";
                    this.mUIACell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell5;
            }
        }
        
        public DXCell UIGCell2
        {
            get
            {
                if ((this.mUIGCell2 == null))
                {
                    this.mUIGCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]F3Calc";
                    this.mUIGCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIGCell2;
            }
        }
        
        public DXCell UIACell6
        {
            get
            {
                if ((this.mUIACell6 == null))
                {
                    this.mUIACell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]F3Calc";
                    this.mUIACell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell6;
            }
        }
        
        public DXCell UIACell7
        {
            get
            {
                if ((this.mUIACell7 == null))
                {
                    this.mUIACell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]F3Calc";
                    this.mUIACell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell7;
            }
        }
        
        public DXCell UIItem3av9Cell
        {
            get
            {
                if ((this.mUIItem3av9Cell == null))
                {
                    this.mUIItem3av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]SH";
                    this.mUIItem3av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av9Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av9Cell;
            }
        }
        
        public DXCell UIItem0av1Cell2
        {
            get
            {
                if ((this.mUIItem0av1Cell2 == null))
                {
                    this.mUIItem0av1Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av1Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]F3";
                    this.mUIItem0av1Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av1Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av1Cell2;
            }
        }
        
        public DXCell UIItem0av0Cell4
        {
            get
            {
                if ((this.mUIItem0av0Cell4 == null))
                {
                    this.mUIItem0av0Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]0[Column]F1F5";
                    this.mUIItem0av0Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell4;
            }
        }
        
        public DXCell UIItem0av9Cell
        {
            get
            {
                if ((this.mUIItem0av9Cell == null))
                {
                    this.mUIItem0av9Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av9Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]SH";
                    this.mUIItem0av9Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av9Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av9Cell;
            }
        }
        
        public DXCell UIItem0av0Cell5
        {
            get
            {
                if ((this.mUIItem0av0Cell5 == null))
                {
                    this.mUIItem0av0Cell5 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell5.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]F3";
                    this.mUIItem0av0Cell5.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell5.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell5;
            }
        }
        
        public DXCell UIItem0av0Cell6
        {
            get
            {
                if ((this.mUIItem0av0Cell6 == null))
                {
                    this.mUIItem0av0Cell6 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell6.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]2[Column]F1F5";
                    this.mUIItem0av0Cell6.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell6.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell6;
            }
        }
        
        public DXCell UIItem9av9Cell2
        {
            get
            {
                if ((this.mUIItem9av9Cell2 == null))
                {
                    this.mUIItem9av9Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem9av9Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]SH";
                    this.mUIItem9av9Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem9av9Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem9av9Cell2;
            }
        }
        
        public DXCell UIItem0av5Cell
        {
            get
            {
                if ((this.mUIItem0av5Cell == null))
                {
                    this.mUIItem0av5Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av5Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]F3";
                    this.mUIItem0av5Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av5Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av5Cell;
            }
        }
        
        public DXCell UIItem0av0Cell7
        {
            get
            {
                if ((this.mUIItem0av0Cell7 == null))
                {
                    this.mUIItem0av0Cell7 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell7.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]F1F5";
                    this.mUIItem0av0Cell7.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell7.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell7;
            }
        }
        
        public DXCell UIItem3av9Cell1
        {
            get
            {
                if ((this.mUIItem3av9Cell1 == null))
                {
                    this.mUIItem3av9Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3av9Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]SH";
                    this.mUIItem3av9Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3av9Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3av9Cell1;
            }
        }
        
        public DXCell UIItem0av0Cell8
        {
            get
            {
                if ((this.mUIItem0av0Cell8 == null))
                {
                    this.mUIItem0av0Cell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]F3";
                    this.mUIItem0av0Cell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell8;
            }
        }
        
        public DXCell UIItem0av0Cell9
        {
            get
            {
                if ((this.mUIItem0av0Cell9 == null))
                {
                    this.mUIItem0av0Cell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]F1F5";
                    this.mUIItem0av0Cell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell9;
            }
        }
        
        public DXCell UIItem0av9Cell1
        {
            get
            {
                if ((this.mUIItem0av9Cell1 == null))
                {
                    this.mUIItem0av9Cell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av9Cell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]SH";
                    this.mUIItem0av9Cell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av9Cell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av9Cell1;
            }
        }
        
        public DXCell UIItem6Cell
        {
            get
            {
                if ((this.mUIItem6Cell == null))
                {
                    this.mUIItem6Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]ColumnA";
                    this.mUIItem6Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6Cell;
            }
        }
        
        public DXCell UIItem0av0Cell10
        {
            get
            {
                if ((this.mUIItem0av0Cell10 == null))
                {
                    this.mUIItem0av0Cell10 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell10.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]F3";
                    this.mUIItem0av0Cell10.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell10.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell10;
            }
        }
        
        public DXCell UIItemCell2
        {
            get
            {
                if ((this.mUIItemCell2 == null))
                {
                    this.mUIItemCell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]8[Column]F1F5";
                    this.mUIItemCell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell2;
            }
        }
        
        public DXCell UIACell8
        {
            get
            {
                if ((this.mUIACell8 == null))
                {
                    this.mUIACell8 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell8.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]F3Calc";
                    this.mUIACell8.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell8.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell8;
            }
        }
        
        public DXCell UIItem4av9Cell2
        {
            get
            {
                if ((this.mUIItem4av9Cell2 == null))
                {
                    this.mUIItem4av9Cell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4av9Cell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]SH";
                    this.mUIItem4av9Cell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4av9Cell2.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4av9Cell2;
            }
        }
        
        public DXCell UIItem0av2Cell4
        {
            get
            {
                if ((this.mUIItem0av2Cell4 == null))
                {
                    this.mUIItem0av2Cell4 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av2Cell4.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]F3";
                    this.mUIItem0av2Cell4.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av2Cell4.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av2Cell4;
            }
        }
        
        public DXCell UIItem0av0Cell11
        {
            get
            {
                if ((this.mUIItem0av0Cell11 == null))
                {
                    this.mUIItem0av0Cell11 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av0Cell11.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]10[Column]F1F5";
                    this.mUIItem0av0Cell11.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av0Cell11.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av0Cell11;
            }
        }
        
        public DXCell UIACell9
        {
            get
            {
                if ((this.mUIACell9 == null))
                {
                    this.mUIACell9 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell9.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]F3Calc";
                    this.mUIACell9.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell9.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIACell9;
            }
        }
        
        public DXCell UIItem9av9Cell3
        {
            get
            {
                if ((this.mUIItem9av9Cell3 == null))
                {
                    this.mUIItem9av9Cell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem9av9Cell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]SH";
                    this.mUIItem9av9Cell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem9av9Cell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem9av9Cell3;
            }
        }
        
        public DXCell UIItem0av4Cell
        {
            get
            {
                if ((this.mUIItem0av4Cell == null))
                {
                    this.mUIItem0av4Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0av4Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]F3";
                    this.mUIItem0av4Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0av4Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem0av4Cell;
            }
        }
        
        public DXCell UIItemCell3
        {
            get
            {
                if ((this.mUIItemCell3 == null))
                {
                    this.mUIItemCell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]12[Column]F1F5";
                    this.mUIItemCell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell3.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItemCell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIACell;
        
        private DXCell mUIItem4av9Cell;
        
        private DXCell mUIItem0av1Cell;
        
        private DXCell mUIItem0av0Cell;
        
        private DXCell mUIACell1;
        
        private DXCell mUIItem9av9Cell;
        
        private DXCell mUIItem0av2Cell;
        
        private DXCell mUIItemCell;
        
        private DXCell mUIGCell;
        
        private DXCell mUIItem6av9Cell;
        
        private DXCell mUIItem0av2Cell1;
        
        private DXCell mUIItem0av0Cell1;
        
        private DXCell mUIACell2;
        
        private DXCell mUIItem4av9Cell1;
        
        private DXCell mUIItem0av1Cell1;
        
        private DXCell mUIItem0av0Cell2;
        
        private DXCell mUIACell3;
        
        private DXCell mUIItem9av9Cell1;
        
        private DXCell mUIItem0av2Cell2;
        
        private DXCell mUIItemCell1;
        
        private DXCell mUIGCell1;
        
        private DXCell mUIItem6av9Cell1;
        
        private DXCell mUIItem0av2Cell3;
        
        private DXCell mUIItem0av0Cell3;
        
        private DXCell mUIItem1av1Cell;
        
        private DXCell mUIACell4;
        
        private DXCell mUIACell5;
        
        private DXCell mUIGCell2;
        
        private DXCell mUIACell6;
        
        private DXCell mUIACell7;
        
        private DXCell mUIItem3av9Cell;
        
        private DXCell mUIItem0av1Cell2;
        
        private DXCell mUIItem0av0Cell4;
        
        private DXCell mUIItem0av9Cell;
        
        private DXCell mUIItem0av0Cell5;
        
        private DXCell mUIItem0av0Cell6;
        
        private DXCell mUIItem9av9Cell2;
        
        private DXCell mUIItem0av5Cell;
        
        private DXCell mUIItem0av0Cell7;
        
        private DXCell mUIItem3av9Cell1;
        
        private DXCell mUIItem0av0Cell8;
        
        private DXCell mUIItem0av0Cell9;
        
        private DXCell mUIItem0av9Cell1;
        
        private DXCell mUIItem6Cell;
        
        private DXCell mUIItem0av0Cell10;
        
        private DXCell mUIItemCell2;
        
        private DXCell mUIACell8;
        
        private DXCell mUIItem4av9Cell2;
        
        private DXCell mUIItem0av2Cell4;
        
        private DXCell mUIItem0av0Cell11;
        
        private DXCell mUIACell9;
        
        private DXCell mUIItem9av9Cell3;
        
        private DXCell mUIItem0av4Cell;
        
        private DXCell mUIItemCell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable1 : DXGrid
    {
        
        public UIGcRosterPlanTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIElmanderJohanCell
        {
            get
            {
                if ((this.mUIElmanderJohanCell == null))
                {
                    this.mUIElmanderJohanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIElmanderJohanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]ColumnHandle1";
                    this.mUIElmanderJohanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIElmanderJohanCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIElmanderJohanCell;
            }
        }
        
        public DXCell UILarssonHenrikCell
        {
            get
            {
                if ((this.mUILarssonHenrikCell == null))
                {
                    this.mUILarssonHenrikCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILarssonHenrikCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]ColumnHandle1";
                    this.mUILarssonHenrikCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILarssonHenrikCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILarssonHenrikCell;
            }
        }
        
        public DXCell UILarssonHenrikCell1
        {
            get
            {
                if ((this.mUILarssonHenrikCell1 == null))
                {
                    this.mUILarssonHenrikCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUILarssonHenrikCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]10[Column]EmployeeName";
                    this.mUILarssonHenrikCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILarssonHenrikCell1.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUILarssonHenrikCell1;
            }
        }
        
        public DXCell UIF3Cell
        {
            get
            {
                if ((this.mUIF3Cell == null))
                {
                    this.mUIF3Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIF3Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]11[Column]RosterCell_20";
                    this.mUIF3Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIF3Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIF3Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIElmanderJohanCell;
        
        private DXCell mUILarssonHenrikCell;
        
        private DXCell mUILarssonHenrikCell1;
        
        private DXCell mUIF3Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeggtilansatteWindow : DXWindow
    {
        
        public UILeggtilansatteWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Legg til ansatte";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "viewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UISelectDepartmentEmplCustom UISelectDepartmentEmplCustom
        {
            get
            {
                if ((this.mUISelectDepartmentEmplCustom == null))
                {
                    this.mUISelectDepartmentEmplCustom = new UISelectDepartmentEmplCustom(this);
                }
                return this.mUISelectDepartmentEmplCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISelectDepartmentEmplCustom mUISelectDepartmentEmplCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISelectDepartmentEmplCustom : DXTestControl
    {
        
        public UISelectDepartmentEmplCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "SelectDepartmentEmployeesView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SelectDepartmentEmployeesView";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentContainerClient UIPcContentContainerClient
        {
            get
            {
                if ((this.mUIPcContentContainerClient == null))
                {
                    this.mUIPcContentContainerClient = new UIPcContentContainerClient(this);
                }
                return this.mUIPcContentContainerClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentContainerClient mUIPcContentContainerClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentContainerClient : DXTestControl
    {
        
        public UIPcContentContainerClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContentContainer";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIPcContentClient UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient : DXTestControl
    {
        
        public UIPcContentClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public UIGcDepartmentEmployeeTable UIGcDepartmentEmployeeTable
        {
            get
            {
                if ((this.mUIGcDepartmentEmployeeTable == null))
                {
                    this.mUIGcDepartmentEmployeeTable = new UIGcDepartmentEmployeeTable(this);
                }
                return this.mUIGcDepartmentEmployeeTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDepartmentEmployeeTable mUIGcDepartmentEmployeeTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDepartmentEmployeeTable : DXGrid
    {
        
        public UIGcDepartmentEmployeeTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployees";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControl";
            this.WindowTitles.Add("Legg til ansatte");
            #endregion
        }
        
        #region Properties
        public DXCell UILarssonHenrikCell
        {
            get
            {
                if ((this.mUILarssonHenrikCell == null))
                {
                    this.mUILarssonHenrikCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILarssonHenrikCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]2[Column]colE" +
                        "mployee";
                    this.mUILarssonHenrikCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILarssonHenrikCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUILarssonHenrikCell;
            }
        }
        
        public DXCell UINilssonRolandCell
        {
            get
            {
                if ((this.mUINilssonRolandCell == null))
                {
                    this.mUINilssonRolandCell = new DXCell(this);
                    #region Search Criteria
                    this.mUINilssonRolandCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDepartmentEmployeesGridControlCell[View]gvDepartmentEmployees[Row]4[Column]colE" +
                        "mployee";
                    this.mUINilssonRolandCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUINilssonRolandCell.WindowTitles.Add("Legg til ansatte");
                    #endregion
                }
                return this.mUINilssonRolandCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUILarssonHenrikCell;
        
        private DXCell mUINilssonRolandCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAnsatteiarbeidsplanWindow : DXWindow
    {
        
        public UIAnsatteiarbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ansatte i arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlOuterClient UIPanelControlOuterClient
        {
            get
            {
                if ((this.mUIPanelControlOuterClient == null))
                {
                    this.mUIPanelControlOuterClient = new UIPanelControlOuterClient(this);
                }
                return this.mUIPanelControlOuterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlOuterClient mUIPanelControlOuterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlOuterClient : DXTestControl
    {
        
        public UIPanelControlOuterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlOuter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPanelControlLeftClient UIPanelControlLeftClient
        {
            get
            {
                if ((this.mUIPanelControlLeftClient == null))
                {
                    this.mUIPanelControlLeftClient = new UIPanelControlLeftClient(this);
                }
                return this.mUIPanelControlLeftClient;
            }
        }
        
        public UIPanelControlRightClient UIPanelControlRightClient
        {
            get
            {
                if ((this.mUIPanelControlRightClient == null))
                {
                    this.mUIPanelControlRightClient = new UIPanelControlRightClient(this);
                }
                return this.mUIPanelControlRightClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelControlLeftClient mUIPanelControlLeftClient;
        
        private UIPanelControlRightClient mUIPanelControlRightClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlLeftClient : DXTestControl
    {
        
        public UIPanelControlLeftClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlLeft";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UITreeListEmployeeTreeList UITreeListEmployeeTreeList
        {
            get
            {
                if ((this.mUITreeListEmployeeTreeList == null))
                {
                    this.mUITreeListEmployeeTreeList = new UITreeListEmployeeTreeList(this);
                }
                return this.mUITreeListEmployeeTreeList;
            }
        }
        #endregion
        
        #region Fields
        private UITreeListEmployeeTreeList mUITreeListEmployeeTreeList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITreeListEmployeeTreeList : DXTreeList
    {
        
        public UITreeListEmployeeTreeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "treeListEmployee";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeList";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UINode5TreeListNode UINode5TreeListNode
        {
            get
            {
                if ((this.mUINode5TreeListNode == null))
                {
                    this.mUINode5TreeListNode = new UINode5TreeListNode(this);
                }
                return this.mUINode5TreeListNode;
            }
        }
        
        public UINode6TreeListNode UINode6TreeListNode
        {
            get
            {
                if ((this.mUINode6TreeListNode == null))
                {
                    this.mUINode6TreeListNode = new UINode6TreeListNode(this);
                }
                return this.mUINode6TreeListNode;
            }
        }
        
        public UINode2TreeListNode UINode2TreeListNode
        {
            get
            {
                if ((this.mUINode2TreeListNode == null))
                {
                    this.mUINode2TreeListNode = new UINode2TreeListNode(this);
                }
                return this.mUINode2TreeListNode;
            }
        }
        #endregion
        
        #region Fields
        private UINode5TreeListNode mUINode5TreeListNode;
        
        private UINode6TreeListNode mUINode6TreeListNode;
        
        private UINode2TreeListNode mUINode2TreeListNode;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode5TreeListNode : DXTreeListNode
    {
        
        public UINode5TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node5";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem6LarssonHenrikTreeListCell
        {
            get
            {
                if ((this.mUIItem6LarssonHenrikTreeListCell == null))
                {
                    this.mUIItem6LarssonHenrikTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem6LarssonHenrikTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem6LarssonHenrikTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem6LarssonHenrikTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem6LarssonHenrikTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem6LarssonHenrikTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode6TreeListNode : DXTreeListNode
    {
        
        public UINode6TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node6";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem7NilssonRolandTreeListCell
        {
            get
            {
                if ((this.mUIItem7NilssonRolandTreeListCell == null))
                {
                    this.mUIItem7NilssonRolandTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem7NilssonRolandTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem7NilssonRolandTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem7NilssonRolandTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem7NilssonRolandTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem7NilssonRolandTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINode2TreeListNode : DXTreeListNode
    {
        
        public UINode2TreeListNode(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Node2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListNode";
            this.WindowTitles.Add("Ansatte i arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXTreeListCell UIItem3ElmanderJohanTreeListCell
        {
            get
            {
                if ((this.mUIItem3ElmanderJohanTreeListCell == null))
                {
                    this.mUIItem3ElmanderJohanTreeListCell = new DXTreeListCell(this);
                    #region Search Criteria
                    this.mUIItem3ElmanderJohanTreeListCell.SearchProperties[DXTestControl.PropertyNames.Name] = "colNameMain";
                    this.mUIItem3ElmanderJohanTreeListCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "TreeListCell";
                    this.mUIItem3ElmanderJohanTreeListCell.WindowTitles.Add("Ansatte i arbeidsplan");
                    #endregion
                }
                return this.mUIItem3ElmanderJohanTreeListCell;
            }
        }
        #endregion
        
        #region Fields
        private DXTreeListCell mUIItem3ElmanderJohanTreeListCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControlRightClient : DXTestControl
    {
        
        public UIPanelControlRightClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControlRight";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom1 UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom1(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom1 mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom1 : DXTestControl
    {
        
        public UIViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeEditorsViewCustom UIEmployeeEditorsViewCustom
        {
            get
            {
                if ((this.mUIEmployeeEditorsViewCustom == null))
                {
                    this.mUIEmployeeEditorsViewCustom = new UIEmployeeEditorsViewCustom(this);
                }
                return this.mUIEmployeeEditorsViewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeEditorsViewCustom mUIEmployeeEditorsViewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeEditorsViewCustom : DXTestControl
    {
        
        public UIEmployeeEditorsViewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeEditorsView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeEditorsView";
            #endregion
        }
        
        #region Properties
        public UIPcContentClient1 UIPcContentClient
        {
            get
            {
                if ((this.mUIPcContentClient == null))
                {
                    this.mUIPcContentClient = new UIPcContentClient1(this);
                }
                return this.mUIPcContentClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcContentClient1 mUIPcContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcContentClient1 : DXTestControl
    {
        
        public UIPcContentClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            #endregion
        }
        
        #region Properties
        public UIXscContentScrollableControl UIXscContentScrollableControl
        {
            get
            {
                if ((this.mUIXscContentScrollableControl == null))
                {
                    this.mUIXscContentScrollableControl = new UIXscContentScrollableControl(this);
                }
                return this.mUIXscContentScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXscContentScrollableControl mUIXscContentScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXscContentScrollableControl : DXScrollableControl
    {
        
        public UIXscContentScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xscContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            #endregion
        }
        
        #region Properties
        public UIGroupControlViewHostCustom UIGroupControlViewHostCustom
        {
            get
            {
                if ((this.mUIGroupControlViewHostCustom == null))
                {
                    this.mUIGroupControlViewHostCustom = new UIGroupControlViewHostCustom(this);
                }
                return this.mUIGroupControlViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlViewHostCustom mUIGroupControlViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControlViewHostCustom : DXTestControl
    {
        
        public UIGroupControlViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControlViewHost";
            #endregion
        }
        
        #region Properties
        public UIGroupControlClient UIGroupControlClient
        {
            get
            {
                if ((this.mUIGroupControlClient == null))
                {
                    this.mUIGroupControlClient = new UIGroupControlClient(this);
                }
                return this.mUIGroupControlClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGroupControlClient mUIGroupControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGroupControlClient : DXTestControl
    {
        
        public UIGroupControlClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "groupControlViewHostGroupControl[1]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GroupControl";
            #endregion
        }
        
        #region Properties
        public UIEmployeeManagerF3CalCustom UIEmployeeManagerF3CalCustom
        {
            get
            {
                if ((this.mUIEmployeeManagerF3CalCustom == null))
                {
                    this.mUIEmployeeManagerF3CalCustom = new UIEmployeeManagerF3CalCustom(this);
                }
                return this.mUIEmployeeManagerF3CalCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeManagerF3CalCustom mUIEmployeeManagerF3CalCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeManagerF3CalCustom : DXTestControl
    {
        
        public UIEmployeeManagerF3CalCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "EmployeeManagerF3CalculationOptionView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "EmployeeManagerF3CalculationOptionView";
            #endregion
        }
        
        #region Properties
        public DXLookUpEdit UILueF3CalculationOptiLookUpEdit
        {
            get
            {
                if ((this.mUILueF3CalculationOptiLookUpEdit == null))
                {
                    this.mUILueF3CalculationOptiLookUpEdit = new DXLookUpEdit(this);
                    #region Search Criteria
                    this.mUILueF3CalculationOptiLookUpEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "lueF3CalculationOption";
                    this.mUILueF3CalculationOptiLookUpEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LookUpEdit";
                    #endregion
                }
                return this.mUILueF3CalculationOptiLookUpEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXLookUpEdit mUILueF3CalculationOptiLookUpEdit;
        #endregion
    }
}
