// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _026_Test_Helligdagsberegning_hjelpeplan_nattevakter
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {             
        /// <summary>
        /// CheckHelpplanSettings - Use 'CheckHelpplanSettingsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckHelpplanSettings()
        {
            #region Variable Declarations
            DXDateTimePicker uIPceDateDateTimeEdit = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIEStartDateCustom.UIPceDateDateTimeEdit;
            DXDateTimePicker uIPceDateDateTimeEdit1 = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIEStopDateCustom.UIPceDateDateTimeEdit;
            DXDateTimePicker uIPceDateDateTimeEdit2 = this.UIArbeidsplanInnstilliWindow.UITcDataTabList.UITpConfigurationClient.UIPaCenterClient.UIEValidToDateCustom.UIPceDateDateTimeEdit;
            #endregion

            // Verify that the 'Text' property of 'pceDate' DateTimeEdit equals '26.04.2021'
            Assert.AreEqual(this.CheckHelpplanSettingsExpectedValues.UIPceDateDateTimeEditText, uIPceDateDateTimeEdit.Text, "Feil startdato");

            // Verify that the 'Text' property of 'pceDate' DateTimeEdit equals '30.05.2021'
            Assert.AreEqual(this.CheckHelpplanSettingsExpectedValues.UIPceDateDateTimeEditText1, uIPceDateDateTimeEdit1.Text, "Feil sluttdato");

            // Verify that the 'Text' property of 'pceDate' DateTimeEdit equals '30.05.2021'
            Assert.AreEqual(this.CheckHelpplanSettingsExpectedValues.UIPceDateDateTimeEditText2, uIPceDateDateTimeEdit2.Text, "Feil gyldig til dato");
        }

        /// <summary>
        /// SelectHelgeOgHoytidsbergeningFilter
        /// </summary>
        public void SelectHelgeOgHoytidsbergeningFilter(bool selectPlanTab = false)
        {
            UICommon.ClickRosterplanFilterTab();
            UICommon.UIMapVS2017.SelectViewFilter("Helge");

            if (selectPlanTab)
                UICommon.SelectPlanTabRosterplan();
        }
        
        /// <summary>
        /// SetEmployeeF3Calculations
        /// </summary>
        public void SetEmployeeF3Calculations()
        {
            #region Variable Declarations
            DXCell uIAnderssonKennethCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIAnderssonKennethCell;
            DXButton uIAnnenhverberegningavButton = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem4LayoutControlItem.UIPnlRuleButtonsClient.UIAnnenhverberegningavButton;
            DXGrid uIGsGridControlTable = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable;
            DXCell uIBrolinThomasCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIBrolinThomasCell;
            DXCell uIHellströmRonnieCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIHellströmRonnieCell;
            DXCell uIIbrahimovicZlatanCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIIbrahimovicZlatanCell;
            DXCell uIElmanderJohanCell = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem2LayoutControlItem.UIPnlGridSumClient.UIGsGridControlTable.UIElmanderJohanCell;
            DXButton uIGjennomsnittsberegniButton = this.UINyhjelpeplanWindow.UIPnlMainClient.UIGsLayoutControlMainCustom.UILayoutControlGroupNaLayoutGroup.UILayoutControlGroupNeLayoutGroup.UILayoutControlItem4LayoutControlItem.UIPnlRuleButtonsClient.UIGjennomsnittsberegniButton;
            #endregion

            // Click 'Andersson, Kenneth' cell
            Mouse.Click(uIAnderssonKennethCell, new Point(121, 6));

            // Click 'Annenhver beregning av F3' button
            Mouse.Click(uIAnnenhverberegningavButton, new Point(1, 1));

            // Click 'gsGridControl' table
            Mouse.Click(uIGsGridControlTable, new Point(353, 163));

            // Click 'Brolin, Thomas' cell
            Mouse.Click(uIBrolinThomasCell, new Point(54, 8));

            // Click 'Annenhver beregning av F3' button
            Mouse.Click(uIAnnenhverberegningavButton, new Point(1, 1));

            // Click 'Hellström, Ronnie' cell
            Mouse.Click(uIHellströmRonnieCell, new Point(65, 9));

            // Click 'Annenhver beregning av F3' button
            Mouse.Click(uIAnnenhverberegningavButton, new Point(1, 1));

            // Click 'Ibrahimovic, Zlatan' cell
            Mouse.Click(uIIbrahimovicZlatanCell, new Point(111, 9));

            // Click 'Annenhver beregning av F3' button
            Mouse.Click(uIAnnenhverberegningavButton, new Point(1, 1));

            // Click 'Elmander, Johan' cell
            Mouse.Click(uIElmanderJohanCell, new Point(105, 9));

            // Click 'Gjennomsnittsberegning av F3' button
            Mouse.Click(uIGjennomsnittsberegniButton, new Point(1, 1));
        }
        
        #region Properties
        public virtual CheckEmployeeF3CalculationsExpectedValues CheckEmployeeF3CalculationsExpectedValues
        {
            get
            {
                if ((this.mCheckEmployeeF3CalculationsExpectedValues == null))
                {
                    this.mCheckEmployeeF3CalculationsExpectedValues = new CheckEmployeeF3CalculationsExpectedValues();
                }
                return this.mCheckEmployeeF3CalculationsExpectedValues;
            }
        }
        
        public virtual CheckHelpplanSettingsExpectedValues CheckHelpplanSettingsExpectedValues
        {
            get
            {
                if ((this.mCheckHelpplanSettingsExpectedValues == null))
                {
                    this.mCheckHelpplanSettingsExpectedValues = new CheckHelpplanSettingsExpectedValues();
                }
                return this.mCheckHelpplanSettingsExpectedValues;
            }
        }
        
        public UINyhjelpeplanWindow UINyhjelpeplanWindow
        {
            get
            {
                if ((this.mUINyhjelpeplanWindow == null))
                {
                    this.mUINyhjelpeplanWindow = new UINyhjelpeplanWindow();
                }
                return this.mUINyhjelpeplanWindow;
            }
        }
        
        public UIArbeidsplanInnstilliWindow UIArbeidsplanInnstilliWindow
        {
            get
            {
                if ((this.mUIArbeidsplanInnstilliWindow == null))
                {
                    this.mUIArbeidsplanInnstilliWindow = new UIArbeidsplanInnstilliWindow();
                }
                return this.mUIArbeidsplanInnstilliWindow;
            }
        }
        
        public UIArbeidsplanHjelpeplaWindow UIArbeidsplanHjelpeplaWindow
        {
            get
            {
                if ((this.mUIArbeidsplanHjelpeplaWindow == null))
                {
                    this.mUIArbeidsplanHjelpeplaWindow = new UIArbeidsplanHjelpeplaWindow();
                }
                return this.mUIArbeidsplanHjelpeplaWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckEmployeeF3CalculationsExpectedValues mCheckEmployeeF3CalculationsExpectedValues;
        
        private CheckHelpplanSettingsExpectedValues mCheckHelpplanSettingsExpectedValues;
        
        private UINyhjelpeplanWindow mUINyhjelpeplanWindow;
        
        private UIArbeidsplanInnstilliWindow mUIArbeidsplanInnstilliWindow;
        
        private UIArbeidsplanHjelpeplaWindow mUIArbeidsplanHjelpeplaWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckEmployeeF3Calculations'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckEmployeeF3CalculationsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACellValueAsString = "A";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell1ValueAsString = "A";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'G' cell equals 'G'
        /// </summary>
        public string UIGCellValueAsString = "G";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell2ValueAsString = "A";
        
        /// <summary>
        /// Verify that the 'ValueAsString' property of 'A' cell equals 'A'
        /// </summary>
        public string UIACell3ValueAsString = "A";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckHelpplanSettings'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CheckHelpplanSettingsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'pceDate' DateTimeEdit equals '26.04.2021'
        /// </summary>
        public string UIPceDateDateTimeEditText = "26.04.2021";
        
        /// <summary>
        /// Verify that the 'Text' property of 'pceDate' DateTimeEdit equals '30.05.2021'
        /// </summary>
        public string UIPceDateDateTimeEditText1 = "30.05.2021";
        
        /// <summary>
        /// Verify that the 'Text' property of 'pceDate' DateTimeEdit equals '30.05.2021'
        /// </summary>
        public string UIPceDateDateTimeEditText2 = "30.05.2021";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UINyhjelpeplanWindow : DXWindow
    {
        
        public UINyhjelpeplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Ny hjelpeplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlMainClient UIPnlMainClient
        {
            get
            {
                if ((this.mUIPnlMainClient == null))
                {
                    this.mUIPnlMainClient = new UIPnlMainClient(this);
                }
                return this.mUIPnlMainClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlMainClient mUIPnlMainClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlMainClient : DXTestControl
    {
        
        public UIPnlMainClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControlMainCustom UIGsLayoutControlMainCustom
        {
            get
            {
                if ((this.mUIGsLayoutControlMainCustom == null))
                {
                    this.mUIGsLayoutControlMainCustom = new UIGsLayoutControlMainCustom(this);
                }
                return this.mUIGsLayoutControlMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControlMainCustom mUIGsLayoutControlMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsLayoutControlMainCustom : DXTestControl
    {
        
        public UIGsLayoutControlMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControlMain";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNaLayoutGroup UILayoutControlGroupNaLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNaLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNaLayoutGroup = new UILayoutControlGroupNaLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNaLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNaLayoutGroup mUILayoutControlGroupNaLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNaLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNaLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupName";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlGroupNeLayoutGroup UILayoutControlGroupNeLayoutGroup
        {
            get
            {
                if ((this.mUILayoutControlGroupNeLayoutGroup == null))
                {
                    this.mUILayoutControlGroupNeLayoutGroup = new UILayoutControlGroupNeLayoutGroup(this);
                }
                return this.mUILayoutControlGroupNeLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlGroupNeLayoutGroup mUILayoutControlGroupNeLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlGroupNeLayoutGroup : DXBaseLayoutItem
    {
        
        public UILayoutControlGroupNeLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlGroupNewValues";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UILayoutControlItem2LayoutControlItem UILayoutControlItem2LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem2LayoutControlItem == null))
                {
                    this.mUILayoutControlItem2LayoutControlItem = new UILayoutControlItem2LayoutControlItem(this);
                }
                return this.mUILayoutControlItem2LayoutControlItem;
            }
        }
        
        public UILayoutControlItem4LayoutControlItem UILayoutControlItem4LayoutControlItem
        {
            get
            {
                if ((this.mUILayoutControlItem4LayoutControlItem == null))
                {
                    this.mUILayoutControlItem4LayoutControlItem = new UILayoutControlItem4LayoutControlItem(this);
                }
                return this.mUILayoutControlItem4LayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutControlItem2LayoutControlItem mUILayoutControlItem2LayoutControlItem;
        
        private UILayoutControlItem4LayoutControlItem mUILayoutControlItem4LayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem2LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem2LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem2";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlGridSumClient UIPnlGridSumClient
        {
            get
            {
                if ((this.mUIPnlGridSumClient == null))
                {
                    this.mUIPnlGridSumClient = new UIPnlGridSumClient(this);
                }
                return this.mUIPnlGridSumClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGridSumClient mUIPnlGridSumClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlGridSumClient : DXTestControl
    {
        
        public UIPnlGridSumClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGridSum";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIGsGridControlTable UIGsGridControlTable
        {
            get
            {
                if ((this.mUIGsGridControlTable == null))
                {
                    this.mUIGsGridControlTable = new UIGsGridControlTable(this);
                }
                return this.mUIGsGridControlTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGsGridControlTable mUIGsGridControlTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGsGridControlTable : DXGrid
    {
        
        public UIGsGridControlTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIAnderssonKennethCell
        {
            get
            {
                if ((this.mUIAnderssonKennethCell == null))
                {
                    this.mUIAnderssonKennethCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIAnderssonKennethCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]0[Column]clmName";
                    this.mUIAnderssonKennethCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIAnderssonKennethCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIAnderssonKennethCell;
            }
        }
        
        public DXCell UIBrolinThomasCell
        {
            get
            {
                if ((this.mUIBrolinThomasCell == null))
                {
                    this.mUIBrolinThomasCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIBrolinThomasCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]1[Column]clmName";
                    this.mUIBrolinThomasCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIBrolinThomasCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIBrolinThomasCell;
            }
        }
        
        public DXCell UIHellströmRonnieCell
        {
            get
            {
                if ((this.mUIHellströmRonnieCell == null))
                {
                    this.mUIHellströmRonnieCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIHellströmRonnieCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]3[Column]clmName";
                    this.mUIHellströmRonnieCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIHellströmRonnieCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIHellströmRonnieCell;
            }
        }
        
        public DXCell UIIbrahimovicZlatanCell
        {
            get
            {
                if ((this.mUIIbrahimovicZlatanCell == null))
                {
                    this.mUIIbrahimovicZlatanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]4[Column]clmName";
                    this.mUIIbrahimovicZlatanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIIbrahimovicZlatanCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIIbrahimovicZlatanCell;
            }
        }
        
        public DXCell UIElmanderJohanCell
        {
            get
            {
                if ((this.mUIElmanderJohanCell == null))
                {
                    this.mUIElmanderJohanCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIElmanderJohanCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gsGridControlGridControlCell[View]gvRosterLines[Row]2[Column]clmName";
                    this.mUIElmanderJohanCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIElmanderJohanCell.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIElmanderJohanCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIAnderssonKennethCell;
        
        private DXCell mUIBrolinThomasCell;
        
        private DXCell mUIHellströmRonnieCell;
        
        private DXCell mUIIbrahimovicZlatanCell;
        
        private DXCell mUIElmanderJohanCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILayoutControlItem4LayoutControlItem : DXBaseLayoutItem
    {
        
        public UILayoutControlItem4LayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutControlItem4";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRuleButtonsClient UIPnlRuleButtonsClient
        {
            get
            {
                if ((this.mUIPnlRuleButtonsClient == null))
                {
                    this.mUIPnlRuleButtonsClient = new UIPnlRuleButtonsClient(this);
                }
                return this.mUIPnlRuleButtonsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRuleButtonsClient mUIPnlRuleButtonsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRuleButtonsClient : DXTestControl
    {
        
        public UIPnlRuleButtonsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRuleButtons";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Ny hjelpeplan");
            #endregion
        }
        
        #region Properties
        public DXButton UIAnnenhverberegningavButton
        {
            get
            {
                if ((this.mUIAnnenhverberegningavButton == null))
                {
                    this.mUIAnnenhverberegningavButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAnnenhverberegningavButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnEveryOther";
                    this.mUIAnnenhverberegningavButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAnnenhverberegningavButton.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIAnnenhverberegningavButton;
            }
        }
        
        public DXButton UIGjennomsnittsberegniButton
        {
            get
            {
                if ((this.mUIGjennomsnittsberegniButton == null))
                {
                    this.mUIGjennomsnittsberegniButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIGjennomsnittsberegniButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnAverage";
                    this.mUIGjennomsnittsberegniButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIGjennomsnittsberegniButton.WindowTitles.Add("Ny hjelpeplan");
                    #endregion
                }
                return this.mUIGjennomsnittsberegniButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAnnenhverberegningavButton;
        
        private DXButton mUIGjennomsnittsberegniButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanInnstilliWindow : DXWindow
    {
        
        public UIArbeidsplanInnstilliWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan - Innstillinger";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UITcDataTabList UITcDataTabList
        {
            get
            {
                if ((this.mUITcDataTabList == null))
                {
                    this.mUITcDataTabList = new UITcDataTabList(this);
                }
                return this.mUITcDataTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcDataTabList mUITcDataTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITcDataTabList : DXTestControl
    {
        
        public UITcDataTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcData";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            #endregion
        }
        
        #region Properties
        public UITpConfigurationClient UITpConfigurationClient
        {
            get
            {
                if ((this.mUITpConfigurationClient == null))
                {
                    this.mUITpConfigurationClient = new UITpConfigurationClient(this);
                }
                return this.mUITpConfigurationClient;
            }
        }
        #endregion
        
        #region Fields
        private UITpConfigurationClient mUITpConfigurationClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITpConfigurationClient : DXTestControl
    {
        
        public UITpConfigurationClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tpConfiguration";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            #endregion
        }
        
        #region Properties
        public UIPaCenterClient UIPaCenterClient
        {
            get
            {
                if ((this.mUIPaCenterClient == null))
                {
                    this.mUIPaCenterClient = new UIPaCenterClient(this);
                }
                return this.mUIPaCenterClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPaCenterClient mUIPaCenterClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPaCenterClient : DXTestControl
    {
        
        public UIPaCenterClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "paCenter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UIEStartDateCustom UIEStartDateCustom
        {
            get
            {
                if ((this.mUIEStartDateCustom == null))
                {
                    this.mUIEStartDateCustom = new UIEStartDateCustom(this);
                }
                return this.mUIEStartDateCustom;
            }
        }
        
        public UIEStopDateCustom UIEStopDateCustom
        {
            get
            {
                if ((this.mUIEStopDateCustom == null))
                {
                    this.mUIEStopDateCustom = new UIEStopDateCustom(this);
                }
                return this.mUIEStopDateCustom;
            }
        }
        
        public UIEValidToDateCustom UIEValidToDateCustom
        {
            get
            {
                if ((this.mUIEValidToDateCustom == null))
                {
                    this.mUIEValidToDateCustom = new UIEValidToDateCustom(this);
                }
                return this.mUIEValidToDateCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIEStartDateCustom mUIEStartDateCustom;
        
        private UIEStopDateCustom mUIEStopDateCustom;
        
        private UIEValidToDateCustom mUIEValidToDateCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEStartDateCustom : DXTestControl
    {
        
        public UIEStartDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eStartDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEStopDateCustom : DXTestControl
    {
        
        public UIEStopDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eStopDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEValidToDateCustom : DXTestControl
    {
        
        public UIEValidToDateCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "eValidToDate";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEdit";
            this.WindowTitles.Add("Arbeidsplan - Innstillinger");
            #endregion
        }
        
        #region Properties
        public DXDateTimePicker UIPceDateDateTimeEdit
        {
            get
            {
                if ((this.mUIPceDateDateTimeEdit == null))
                {
                    this.mUIPceDateDateTimeEdit = new DXDateTimePicker(this);
                    #region Search Criteria
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "pceDate";
                    this.mUIPceDateDateTimeEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SmartDateEdit";
                    this.mUIPceDateDateTimeEdit.WindowTitles.Add("Arbeidsplan - Innstillinger");
                    #endregion
                }
                return this.mUIPceDateDateTimeEdit;
            }
        }
        #endregion
        
        #region Fields
        private DXDateTimePicker mUIPceDateDateTimeEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIArbeidsplanHjelpeplaWindow : DXWindow
    {
        
        public UIArbeidsplanHjelpeplaWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.Name, "Arbeidsplan", PropertyExpressionOperator.Contains));
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        
        private UIRcMenuRibbon mUIRcMenuRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIDpnlColumnsDockPanel UIDpnlColumnsDockPanel
        {
            get
            {
                if ((this.mUIDpnlColumnsDockPanel == null))
                {
                    this.mUIDpnlColumnsDockPanel = new UIDpnlColumnsDockPanel(this);
                }
                return this.mUIDpnlColumnsDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDpnlColumnsDockPanel mUIDpnlColumnsDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDpnlColumnsDockPanel : DXDockPanel
    {
        
        public UIDpnlColumnsDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dpnlColumns";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIDockPanel1_ContainerCustom UIDockPanel1_ContainerCustom
        {
            get
            {
                if ((this.mUIDockPanel1_ContainerCustom == null))
                {
                    this.mUIDockPanel1_ContainerCustom = new UIDockPanel1_ContainerCustom(this);
                }
                return this.mUIDockPanel1_ContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDockPanel1_ContainerCustom mUIDockPanel1_ContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDockPanel1_ContainerCustom : DXTestControl
    {
        
        public UIDockPanel1_ContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "dockPanel1_Container";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIGcExtraGridTable UIGcExtraGridTable
        {
            get
            {
                if ((this.mUIGcExtraGridTable == null))
                {
                    this.mUIGcExtraGridTable = new UIGcExtraGridTable(this);
                }
                return this.mUIGcExtraGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcExtraGridTable mUIGcExtraGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIGcExtraGridTable : DXGrid
    {
        
        public UIGcExtraGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXCell UIACell
        {
            get
            {
                if ((this.mUIACell == null))
                {
                    this.mUIACell = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]1[Column]Col_F3Calc";
                    this.mUIACell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIACell;
            }
        }
        
        public DXCell UIACell1
        {
            get
            {
                if ((this.mUIACell1 == null))
                {
                    this.mUIACell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]3[Column]Col_F3Calc";
                    this.mUIACell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell1.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIACell1;
            }
        }
        
        public DXCell UIGCell
        {
            get
            {
                if ((this.mUIGCell == null))
                {
                    this.mUIGCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]4[Column]Col_F3Calc";
                    this.mUIGCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIGCell.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIGCell;
            }
        }
        
        public DXCell UIACell2
        {
            get
            {
                if ((this.mUIACell2 == null))
                {
                    this.mUIACell2 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell2.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]6[Column]Col_F3Calc";
                    this.mUIACell2.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell2.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIACell2;
            }
        }
        
        public DXCell UIACell3
        {
            get
            {
                if ((this.mUIACell3 == null))
                {
                    this.mUIACell3 = new DXCell(this);
                    #region Search Criteria
                    this.mUIACell3.SearchProperties[DXTestControl.PropertyNames.Name] = "gcExtraGridGridControlCell[View]gvExtraGrid[Row]9[Column]Col_F3Calc";
                    this.mUIACell3.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIACell3.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIACell3;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIACell;
        
        private DXCell mUIACell1;
        
        private DXCell mUIGCell;
        
        private DXCell mUIACell2;
        
        private DXCell mUIACell3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIRpFilterRibbonPage UIRpFilterRibbonPage
        {
            get
            {
                if ((this.mUIRpFilterRibbonPage == null))
                {
                    this.mUIRpFilterRibbonPage = new UIRpFilterRibbonPage(this);
                }
                return this.mUIRpFilterRibbonPage;
            }
        }
        
        public UIComboBoxEditComboBox UIComboBoxEditComboBox
        {
            get
            {
                if ((this.mUIComboBoxEditComboBox == null))
                {
                    this.mUIComboBoxEditComboBox = new UIComboBoxEditComboBox(this);
                }
                return this.mUIComboBoxEditComboBox;
            }
        }
        #endregion
        
        #region Fields
        private UIRpFilterRibbonPage mUIRpFilterRibbonPage;
        
        private UIComboBoxEditComboBox mUIComboBoxEditComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpFilterRibbonPage : DXRibbonPage
    {
        
        public UIRpFilterRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIRpgFilterRibbonPageGroup UIRpgFilterRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgFilterRibbonPageGroup == null))
                {
                    this.mUIRpgFilterRibbonPageGroup = new UIRpgFilterRibbonPageGroup(this);
                }
                return this.mUIRpgFilterRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgFilterRibbonPageGroup mUIRpgFilterRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIRpgFilterRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgFilterRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgFilter";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIDdlCustomizeColumnsRibbonEditItem
        {
            get
            {
                if ((this.mUIDdlCustomizeColumnsRibbonEditItem == null))
                {
                    this.mUIDdlCustomizeColumnsRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "ddlCustomizeColumns";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIDdlCustomizeColumnsRibbonEditItem.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIDdlCustomizeColumnsRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIDdlCustomizeColumnsRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxEditComboBox : DXComboBox
    {
        
        public UIComboBoxEditComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxEdit";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxWindow UIComboBoxPopupListBoxWindow
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxWindow == null))
                {
                    this.mUIComboBoxPopupListBoxWindow = new UIComboBoxPopupListBoxWindow(this);
                }
                return this.mUIComboBoxPopupListBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxWindow mUIComboBoxPopupListBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxPopupListBoxWindow : DXWindow
    {
        
        public UIComboBoxPopupListBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupForm";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxForm";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public UIComboBoxPopupListBoxList UIComboBoxPopupListBoxList
        {
            get
            {
                if ((this.mUIComboBoxPopupListBoxList == null))
                {
                    this.mUIComboBoxPopupListBoxList = new UIComboBoxPopupListBoxList(this);
                }
                return this.mUIComboBoxPopupListBoxList;
            }
        }
        #endregion
        
        #region Fields
        private UIComboBoxPopupListBoxList mUIComboBoxPopupListBoxList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComboBoxPopupListBoxList : DXListBox
    {
        
        public UIComboBoxPopupListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBox";
            this.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIHelgeoghøytidsberegnListItem
        {
            get
            {
                if ((this.mUIHelgeoghøytidsberegnListItem == null))
                {
                    this.mUIHelgeoghøytidsberegnListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIHelgeoghøytidsberegnListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuComboBoxEdit[0]PopupFormComboBoxPopupListBox[0]Item[5]";
                    this.mUIHelgeoghøytidsberegnListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ComboBoxPopupListBoxItem";
                    this.mUIHelgeoghøytidsberegnListItem.WindowTitles.Add("Arbeidsplan: Hjelpeplan for AP - NV PÅ STARTDAGEN. (Planen er låst av deg)");
                    #endregion
                }
                return this.mUIHelgeoghøytidsberegnListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIHelgeoghøytidsberegnListItem;
        #endregion
    }
}
