// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _025_Ytelsestest_Arbeidsplan.UIMapVS2017Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMapVS2017
    {
        
        /// <summary>
        /// CancelAndClose
        /// </summary>
        public void CancelAndClose()
        {
            #region Variable Declarations
            DXRibbonButtonItem uIAvbestillRibbonBaseButtonItem = this.UIFormidlingssenterWindow.UIRcMenuRibbon.UIRpHomeRibbonPage.UIRpgActionsRibbonPageGroup.UIAvbestillRibbonBaseButtonItem;
            DXRibbonButtonItem uIBbiCloseRibbonBaseButtonItem = this.UIFormidlingssenterWindow.UIRcMenuRibbon.UIRpHomeRibbonPage.UIPgWindowRibbonPageGroup.UIBbiCloseRibbonBaseButtonItem;
            #endregion

            // Click 'Avbestill' RibbonBaseButtonItem
            Mouse.Click(uIAvbestillRibbonBaseButtonItem, new Point(41, 9));

            // Click 'bbiClose' RibbonBaseButtonItem
            Mouse.Click(uIBbiCloseRibbonBaseButtonItem, new Point(23, 30));
        }
        
        #region Properties
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIOppdekkingssenterASCWindow UIOppdekkingssenterASCWindow
        {
            get
            {
                if ((this.mUIOppdekkingssenterASCWindow == null))
                {
                    this.mUIOppdekkingssenterASCWindow = new UIOppdekkingssenterASCWindow();
                }
                return this.mUIOppdekkingssenterASCWindow;
            }
        }
        
        public UISendbestillingWindow UISendbestillingWindow
        {
            get
            {
                if ((this.mUISendbestillingWindow == null))
                {
                    this.mUISendbestillingWindow = new UISendbestillingWindow();
                }
                return this.mUISendbestillingWindow;
            }
        }
        
        public UIFormidlingssenterWindow UIFormidlingssenterWindow
        {
            get
            {
                if ((this.mUIFormidlingssenterWindow == null))
                {
                    this.mUIFormidlingssenterWindow = new UIFormidlingssenterWindow();
                }
                return this.mUIFormidlingssenterWindow;
            }
        }
        
        public UIVelgansattsomskaldekWindow UIVelgansattsomskaldekWindow
        {
            get
            {
                if ((this.mUIVelgansattsomskaldekWindow == null))
                {
                    this.mUIVelgansattsomskaldekWindow = new UIVelgansattsomskaldekWindow();
                }
                return this.mUIVelgansattsomskaldekWindow;
            }
        }
        
        public UIMerarbeidovertidWindow UIMerarbeidovertidWindow
        {
            get
            {
                if ((this.mUIMerarbeidovertidWindow == null))
                {
                    this.mUIMerarbeidovertidWindow = new UIMerarbeidovertidWindow();
                }
                return this.mUIMerarbeidovertidWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIGatWindow mUIGatWindow;
        
        private UIOppdekkingssenterASCWindow mUIOppdekkingssenterASCWindow;
        
        private UISendbestillingWindow mUISendbestillingWindow;
        
        private UIFormidlingssenterWindow mUIFormidlingssenterWindow;
        
        private UIVelgansattsomskaldekWindow mUIVelgansattsomskaldekWindow;
        
        private UIMerarbeidovertidWindow mUIMerarbeidovertidWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayDockPanel UICenterPanelDayDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayDockPanel == null))
                {
                    this.mUICenterPanelDayDockPanel = new UICenterPanelDayDockPanel(this);
                }
                return this.mUICenterPanelDayDockPanel;
            }
        }
        
        public UIRibbonControlRibbon UIRibbonControlRibbon
        {
            get
            {
                if ((this.mUIRibbonControlRibbon == null))
                {
                    this.mUIRibbonControlRibbon = new UIRibbonControlRibbon(this);
                }
                return this.mUIRibbonControlRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayDockPanel mUICenterPanelDayDockPanel;
        
        private UIRibbonControlRibbon mUIRibbonControlRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDay";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UICenterPanelDayWrappeDockPanel UICenterPanelDayWrappeDockPanel
        {
            get
            {
                if ((this.mUICenterPanelDayWrappeDockPanel == null))
                {
                    this.mUICenterPanelDayWrappeDockPanel = new UICenterPanelDayWrappeDockPanel(this);
                }
                return this.mUICenterPanelDayWrappeDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UICenterPanelDayWrappeDockPanel mUICenterPanelDayWrappeDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelDayWrappeDockPanel : DXDockPanel
    {
        
        public UICenterPanelDayWrappeDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelDayWrapper";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIHjemmevakt0016777077DockPanel UIHjemmevakt0016777077DockPanel
        {
            get
            {
                if ((this.mUIHjemmevakt0016777077DockPanel == null))
                {
                    this.mUIHjemmevakt0016777077DockPanel = new UIHjemmevakt0016777077DockPanel(this);
                }
                return this.mUIHjemmevakt0016777077DockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIHjemmevakt0016777077DockPanel mUIHjemmevakt0016777077DockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHjemmevakt0016777077DockPanel : DXDockPanel
    {
        
        public UIHjemmevakt0016777077DockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Hjemmevakt;0;0;-16777077;0;False";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = ";Hjemmevakt;0;0;-16777077;0;FalseControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcDayColumnTable UIGcDayColumnTable
        {
            get
            {
                if ((this.mUIGcDayColumnTable == null))
                {
                    this.mUIGcDayColumnTable = new UIGcDayColumnTable(this);
                }
                return this.mUIGcDayColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcDayColumnTable mUIGcDayColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcDayColumnTable : DXGrid
    {
        
        public UIGcDayColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIVAKANTCell
        {
            get
            {
                if ((this.mUIVAKANTCell == null))
                {
                    this.mUIVAKANTCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcDayColumnGridControlCell[View]gvDayColumn[Row]0[Column]colEmployeeName";
                    this.mUIVAKANTCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIVAKANTCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIVAKANTCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIVAKANTCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRibbonControlRibbon : DXRibbon
    {
        
        public UIRibbonControlRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ribbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIRpMainMenuRibbonPage UIRpMainMenuRibbonPage
        {
            get
            {
                if ((this.mUIRpMainMenuRibbonPage == null))
                {
                    this.mUIRpMainMenuRibbonPage = new UIRpMainMenuRibbonPage(this);
                }
                return this.mUIRpMainMenuRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpMainMenuRibbonPage mUIRpMainMenuRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpMainMenuRibbonPage : DXRibbonPage
    {
        
        public UIRpMainMenuRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpMainMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGrpVacancyRibbonPageGroup UIGrpVacancyRibbonPageGroup
        {
            get
            {
                if ((this.mUIGrpVacancyRibbonPageGroup == null))
                {
                    this.mUIGrpVacancyRibbonPageGroup = new UIGrpVacancyRibbonPageGroup(this);
                }
                return this.mUIGrpVacancyRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIGrpVacancyRibbonPageGroup mUIGrpVacancyRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrpVacancyRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIGrpVacancyRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grpVacancy";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIOppdekkingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIOppdekkingRibbonBaseButtonItem == null))
                {
                    this.mUIOppdekkingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIOppdekkingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnVacancyOrder";
                    this.mUIOppdekkingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIOppdekkingRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIOppdekkingRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIFormidlingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIFormidlingRibbonBaseButtonItem == null))
                {
                    this.mUIFormidlingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIFormidlingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnVacancyOrderManage";
                    this.mUIFormidlingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIFormidlingRibbonBaseButtonItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFormidlingRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIOppdekkingRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIFormidlingRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOppdekkingssenterASCWindow : DXWindow
    {
        
        public UIOppdekkingssenterASCWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Oppdekkingssenter (ASCL/1030)";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/1030)");
            #endregion
        }
        
        #region Properties
        public UIRcOrderRibbon UIRcOrderRibbon
        {
            get
            {
                if ((this.mUIRcOrderRibbon == null))
                {
                    this.mUIRcOrderRibbon = new UIRcOrderRibbon(this);
                }
                return this.mUIRcOrderRibbon;
            }
        }
        #endregion
        
        #region Fields
        private UIRcOrderRibbon mUIRcOrderRibbon;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcOrderRibbon : DXRibbon
    {
        
        public UIRcOrderRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcOrder";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/1030)");
            #endregion
        }
        
        #region Properties
        public UIRpOrderRibbonPage UIRpOrderRibbonPage
        {
            get
            {
                if ((this.mUIRpOrderRibbonPage == null))
                {
                    this.mUIRpOrderRibbonPage = new UIRpOrderRibbonPage(this);
                }
                return this.mUIRpOrderRibbonPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRpOrderRibbonPage mUIRpOrderRibbonPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpOrderRibbonPage : DXRibbonPage
    {
        
        public UIRpOrderRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpOrder";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/1030)");
            #endregion
        }
        
        #region Properties
        public UIRpgOrderActionRibbonPageGroup UIRpgOrderActionRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgOrderActionRibbonPageGroup == null))
                {
                    this.mUIRpgOrderActionRibbonPageGroup = new UIRpgOrderActionRibbonPageGroup(this);
                }
                return this.mUIRpgOrderActionRibbonPageGroup;
            }
        }
        
        public UIRpgWindowRibbonPageGroup UIRpgWindowRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgWindowRibbonPageGroup == null))
                {
                    this.mUIRpgWindowRibbonPageGroup = new UIRpgWindowRibbonPageGroup(this);
                }
                return this.mUIRpgWindowRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgOrderActionRibbonPageGroup mUIRpgOrderActionRibbonPageGroup;
        
        private UIRpgWindowRibbonPageGroup mUIRpgWindowRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgOrderActionRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgOrderActionRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgOrderAction";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/1030)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBestillRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBestillRibbonBaseButtonItem == null))
                {
                    this.mUIBestillRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBestillRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnPlaceOrder";
                    this.mUIBestillRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBestillRibbonBaseButtonItem.WindowTitles.Add("Oppdekkingssenter (ASCL/1030)");
                    #endregion
                }
                return this.mUIBestillRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBestillRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgWindowRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgWindowRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgWindow";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Oppdekkingssenter (ASCL/1030)");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UILukkRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUILukkRibbonBaseButtonItem == null))
                {
                    this.mUILukkRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUILukkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCloseWindow";
                    this.mUILukkRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUILukkRibbonBaseButtonItem.WindowTitles.Add("Oppdekkingssenter (ASCL/1030)");
                    #endregion
                }
                return this.mUILukkRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUILukkRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISendbestillingWindow : DXWindow
    {
        
        public UISendbestillingWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Send bestilling...";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Send bestilling...");
            #endregion
        }
        
        #region Properties
        public UIGsLayoutControl1Custom UIGsLayoutControl1Custom
        {
            get
            {
                if ((this.mUIGsLayoutControl1Custom == null))
                {
                    this.mUIGsLayoutControl1Custom = new UIGsLayoutControl1Custom(this);
                }
                return this.mUIGsLayoutControl1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIGsLayoutControl1Custom mUIGsLayoutControl1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsLayoutControl1Custom : DXTestControl
    {
        
        public UIGsLayoutControl1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsLayoutControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Send bestilling...");
            #endregion
        }
        
        #region Properties
        public UIRootLayoutGroup UIRootLayoutGroup
        {
            get
            {
                if ((this.mUIRootLayoutGroup == null))
                {
                    this.mUIRootLayoutGroup = new UIRootLayoutGroup(this);
                }
                return this.mUIRootLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRootLayoutGroup mUIRootLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRootLayoutGroup : DXBaseLayoutItem
    {
        
        public UIRootLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Root";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Send bestilling...");
            #endregion
        }
        
        #region Properties
        public UILciSubmitOrderLayoutControlItem UILciSubmitOrderLayoutControlItem
        {
            get
            {
                if ((this.mUILciSubmitOrderLayoutControlItem == null))
                {
                    this.mUILciSubmitOrderLayoutControlItem = new UILciSubmitOrderLayoutControlItem(this);
                }
                return this.mUILciSubmitOrderLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciSubmitOrderLayoutControlItem mUILciSubmitOrderLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciSubmitOrderLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciSubmitOrderLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciSubmitOrder";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Send bestilling...");
            #endregion
        }
        
        #region Properties
        public DXButton UIBestillButton
        {
            get
            {
                if ((this.mUIBestillButton == null))
                {
                    this.mUIBestillButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIBestillButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnSubmitOrder";
                    this.mUIBestillButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIBestillButton.WindowTitles.Add("Send bestilling...");
                    #endregion
                }
                return this.mUIBestillButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIBestillButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFormidlingssenterWindow : DXWindow
    {
        
        public UIFormidlingssenterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Formidlingssenter";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Formidlingssenter");
            #endregion
        }
        
        #region Properties
        public UIRcMenuRibbon UIRcMenuRibbon
        {
            get
            {
                if ((this.mUIRcMenuRibbon == null))
                {
                    this.mUIRcMenuRibbon = new UIRcMenuRibbon(this);
                }
                return this.mUIRcMenuRibbon;
            }
        }
        
        public UIScccContentCustom UIScccContentCustom
        {
            get
            {
                if ((this.mUIScccContentCustom == null))
                {
                    this.mUIScccContentCustom = new UIScccContentCustom(this);
                }
                return this.mUIScccContentCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIRcMenuRibbon mUIRcMenuRibbon;
        
        private UIScccContentCustom mUIScccContentCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRcMenuRibbon : DXRibbon
    {
        
        public UIRcMenuRibbon(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenu";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonControl";
            this.WindowTitles.Add("Formidlingssenter");
            #endregion
        }
        
        #region Properties
        public UIRpHomeRibbonPage UIRpHomeRibbonPage
        {
            get
            {
                if ((this.mUIRpHomeRibbonPage == null))
                {
                    this.mUIRpHomeRibbonPage = new UIRpHomeRibbonPage(this);
                }
                return this.mUIRpHomeRibbonPage;
            }
        }
        
        public DXPopupEdit UIGSSmartDateEditEditoPopupEdit
        {
            get
            {
                if ((this.mUIGSSmartDateEditEditoPopupEdit == null))
                {
                    this.mUIGSSmartDateEditEditoPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIGSSmartDateEditEditoPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "rcMenuGSSmartDateEditEditor[0]";
                    this.mUIGSSmartDateEditEditoPopupEdit.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSmartDateEditEditor";
                    this.mUIGSSmartDateEditEditoPopupEdit.WindowTitles.Add("Formidlingssenter");
                    #endregion
                }
                return this.mUIGSSmartDateEditEditoPopupEdit;
            }
        }
        
        public DXPopupEdit UIUnknownPopupEdit
        {
            get
            {
                if ((this.mUIUnknownPopupEdit == null))
                {
                    this.mUIUnknownPopupEdit = new DXPopupEdit(this);
                    #region Search Criteria
                    this.mUIUnknownPopupEdit.SearchProperties[DXTestControl.PropertyNames.Name] = "Unknown";
                    this.mUIUnknownPopupEdit.WindowTitles.Add("Formidlingssenter");
                    #endregion
                }
                return this.mUIUnknownPopupEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIRpHomeRibbonPage mUIRpHomeRibbonPage;
        
        private DXPopupEdit mUIGSSmartDateEditEditoPopupEdit;
        
        private DXPopupEdit mUIUnknownPopupEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpHomeRibbonPage : DXRibbonPage
    {
        
        public UIRpHomeRibbonPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpHome";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPage";
            this.WindowTitles.Add("Formidlingssenter");
            #endregion
        }
        
        #region Properties
        public UIRpgPeriodRibbonPageGroup UIRpgPeriodRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgPeriodRibbonPageGroup == null))
                {
                    this.mUIRpgPeriodRibbonPageGroup = new UIRpgPeriodRibbonPageGroup(this);
                }
                return this.mUIRpgPeriodRibbonPageGroup;
            }
        }
        
        public UIRpgActionsRibbonPageGroup UIRpgActionsRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgActionsRibbonPageGroup == null))
                {
                    this.mUIRpgActionsRibbonPageGroup = new UIRpgActionsRibbonPageGroup(this);
                }
                return this.mUIRpgActionsRibbonPageGroup;
            }
        }
        
        public UIRpgCoverRibbonPageGroup UIRpgCoverRibbonPageGroup
        {
            get
            {
                if ((this.mUIRpgCoverRibbonPageGroup == null))
                {
                    this.mUIRpgCoverRibbonPageGroup = new UIRpgCoverRibbonPageGroup(this);
                }
                return this.mUIRpgCoverRibbonPageGroup;
            }
        }
        
        public UIPgWindowRibbonPageGroup UIPgWindowRibbonPageGroup
        {
            get
            {
                if ((this.mUIPgWindowRibbonPageGroup == null))
                {
                    this.mUIPgWindowRibbonPageGroup = new UIPgWindowRibbonPageGroup(this);
                }
                return this.mUIPgWindowRibbonPageGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIRpgPeriodRibbonPageGroup mUIRpgPeriodRibbonPageGroup;
        
        private UIRpgActionsRibbonPageGroup mUIRpgActionsRibbonPageGroup;
        
        private UIRpgCoverRibbonPageGroup mUIRpgCoverRibbonPageGroup;
        
        private UIPgWindowRibbonPageGroup mUIPgWindowRibbonPageGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgPeriodRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgPeriodRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Formidlingssenter");
            #endregion
        }
        
        #region Properties
        public DXRibbonEditItem UIBeiFromDateRibbonEditItem
        {
            get
            {
                if ((this.mUIBeiFromDateRibbonEditItem == null))
                {
                    this.mUIBeiFromDateRibbonEditItem = new DXRibbonEditItem(this);
                    #region Search Criteria
                    this.mUIBeiFromDateRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.Name] = "beiFromDate";
                    this.mUIBeiFromDateRibbonEditItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonEditItem";
                    this.mUIBeiFromDateRibbonEditItem.WindowTitles.Add("Formidlingssenter");
                    #endregion
                }
                return this.mUIBeiFromDateRibbonEditItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonEditItem mUIBeiFromDateRibbonEditItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgActionsRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgActionsRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgActions";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Formidlingssenter");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UITabestillingRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUITabestillingRibbonBaseButtonItem == null))
                {
                    this.mUITabestillingRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUITabestillingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiPickOrder";
                    this.mUITabestillingRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUITabestillingRibbonBaseButtonItem.WindowTitles.Add("Formidlingssenter");
                    #endregion
                }
                return this.mUITabestillingRibbonBaseButtonItem;
            }
        }
        
        public DXRibbonButtonItem UIAvbestillRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIAvbestillRibbonBaseButtonItem == null))
                {
                    this.mUIAvbestillRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIAvbestillRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiManageCanceled";
                    this.mUIAvbestillRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIAvbestillRibbonBaseButtonItem.WindowTitles.Add("Formidlingssenter");
                    #endregion
                }
                return this.mUIAvbestillRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUITabestillingRibbonBaseButtonItem;
        
        private DXRibbonButtonItem mUIAvbestillRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRpgCoverRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIRpgCoverRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rpgCover";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Formidlingssenter");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIDekkoppRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIDekkoppRibbonBaseButtonItem == null))
                {
                    this.mUIDekkoppRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIDekkoppRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiCoverWithWizard";
                    this.mUIDekkoppRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIDekkoppRibbonBaseButtonItem.WindowTitles.Add("Formidlingssenter");
                    #endregion
                }
                return this.mUIDekkoppRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIDekkoppRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPgWindowRibbonPageGroup : DXRibbonPageGroup
    {
        
        public UIPgWindowRibbonPageGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pgWindow";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonPageGroup";
            this.WindowTitles.Add("Formidlingssenter");
            #endregion
        }
        
        #region Properties
        public DXRibbonButtonItem UIBbiCloseRibbonBaseButtonItem
        {
            get
            {
                if ((this.mUIBbiCloseRibbonBaseButtonItem == null))
                {
                    this.mUIBbiCloseRibbonBaseButtonItem = new DXRibbonButtonItem(this);
                    #region Search Criteria
                    this.mUIBbiCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "bbiClose";
                    this.mUIBbiCloseRibbonBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RibbonBaseButtonItem";
                    this.mUIBbiCloseRibbonBaseButtonItem.WindowTitles.Add("Formidlingssenter");
                    #endregion
                }
                return this.mUIBbiCloseRibbonBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXRibbonButtonItem mUIBbiCloseRibbonBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIScccContentCustom : DXTestControl
    {
        
        public UIScccContentCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "scccContent";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ShiftCoverContentControl";
            this.WindowTitles.Add("Formidlingssenter");
            #endregion
        }
        
        #region Properties
        public UIGcShiftsTable UIGcShiftsTable
        {
            get
            {
                if ((this.mUIGcShiftsTable == null))
                {
                    this.mUIGcShiftsTable = new UIGcShiftsTable(this);
                }
                return this.mUIGcShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftsTable mUIGcShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcShiftsTable : DXGrid
    {
        
        public UIGcShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Formidlingssenter");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem02012016Cell
        {
            get
            {
                if ((this.mUIItem02012016Cell == null))
                {
                    this.mUIItem02012016Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem02012016Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]0[Column]colActiveDate";
                    this.mUIItem02012016Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem02012016Cell.WindowTitles.Add("Formidlingssenter");
                    #endregion
                }
                return this.mUIItem02012016Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem02012016Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVelgansattsomskaldekWindow : DXWindow
    {
        
        public UIVelgansattsomskaldekWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Velg ansatt som skal dekke vakten HJ1 (19:00-07:00) lør 02.01.2016, 1030 - Ortope" +
                "disk avdeling, H";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Velg ansatt som skal dekke vakten HJ1 (19:00-07:00) lør 02.01.2016, 1030 - Ortope" +
                    "disk avdeling, H");
            #endregion
        }
        
        #region Properties
        public DXButton UINesteButton
        {
            get
            {
                if ((this.mUINesteButton == null))
                {
                    this.mUINesteButton = new DXButton(this);
                    #region Search Criteria
                    this.mUINesteButton.SearchProperties[DXTestControl.PropertyNames.Name] = "WizardButton[1]";
                    this.mUINesteButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WizardButton";
                    this.mUINesteButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUINesteButton.WindowTitles.Add("Velg ansatt som skal dekke vakten HJ1 (19:00-07:00) lør 02.01.2016, 1030 - Ortope" +
                            "disk avdeling, H");
                    #endregion
                }
                return this.mUINesteButton;
            }
        }
        
        public DXButton UIFullførButton
        {
            get
            {
                if ((this.mUIFullførButton == null))
                {
                    this.mUIFullførButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIFullførButton.SearchProperties[DXTestControl.PropertyNames.Name] = "WizardButton[2]";
                    this.mUIFullførButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WizardButton";
                    this.mUIFullførButton.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
                    this.mUIFullførButton.WindowTitles.Add("Velg ansatt som skal dekke vakten HJ1 (19:00-07:00) lør 02.01.2016, 1030 - Ortope" +
                            "disk avdeling, H");
                    #endregion
                }
                return this.mUIFullførButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUINesteButton;
        
        private DXButton mUIFullførButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMerarbeidovertidWindow : DXWindow
    {
        
        public UIMerarbeidovertidWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Merarbeid / overtid";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public UIGsPanelControl1Client UIGsPanelControl1Client
        {
            get
            {
                if ((this.mUIGsPanelControl1Client == null))
                {
                    this.mUIGsPanelControl1Client = new UIGsPanelControl1Client(this);
                }
                return this.mUIGsPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private UIGsPanelControl1Client mUIGsPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGsPanelControl1Client : DXTestControl
    {
        
        public UIGsPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gsPanelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Merarbeid / overtid");
            #endregion
        }
        
        #region Properties
        public DXButton UIAvbrytButton
        {
            get
            {
                if ((this.mUIAvbrytButton == null))
                {
                    this.mUIAvbrytButton = new DXButton(this);
                    #region Search Criteria
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnCancel";
                    this.mUIAvbrytButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSimpleButton";
                    this.mUIAvbrytButton.WindowTitles.Add("Merarbeid / overtid");
                    #endregion
                }
                return this.mUIAvbrytButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUIAvbrytButton;
        #endregion
    }
}
