// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace _020_Test_Arbeidsplan_Iverksetting
{
    using System.CodeDom.Compiler;
    using System.Drawing;
    using System.Windows.Input;
    using DevExpress.CodedUIExtension.DXTestControls.v19_2;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CheckAbsenceStep44 - Use 'CheckAbsenceStep44ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAbsenceStep44()
        {
            #region Variable Declarations
            DXCell uIItem2Cell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIGcShiftsTable.UIItem2Cell;
            #endregion

            // Verify that the 'ErrorText' property of '2' cell equals 'Meldinger:
            // - Vakten blir en del av dette fraværet ved lagring'
            Assert.AreEqual(this.CheckAbsenceStep44ExpectedValues.UIItem2CellErrorText, uIItem2Cell.ErrorText);
        }
        
        /// <summary>
        /// CheckAbsInDashStep48 - Use 'CheckAbsInDashStep48ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAbsInDashStep48()
        {
            #region Variable Declarations
            DXNavBarGroup uITimeregistrering00NavBarGroup = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UITimeregistrering00NavBarGroup;
            DXNavBarGroup uIBank1NavBarGroup = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UIBank1NavBarGroup;
            DXNavBarGroup uIStillinger1NavBarGroup = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UIStillinger1NavBarGroup;
            WinClient uIChartControlUnitLeadClient = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UINbcTimeRegScrollableControl.UIScTimeRegSplitContainerControl.UISplitGroupPanelClient.UIPnlGraphUnitLeaderClient.UIChartControlUnitLeadClient;
            #endregion

            // Verify that the 'Text' property of 'Timeregistrering (0/0)' NavBarGroup equals 'Timeregistrering (0/0)'
            Assert.AreEqual(this.CheckAbsInDashStep48ExpectedValues.UITimeregistrering00NavBarGroupText, uITimeregistrering00NavBarGroup.Text);

            // Verify that the 'Text' property of 'Bank (1)' NavBarGroup equals 'Bank (1)'
            Assert.AreEqual(this.CheckAbsInDashStep48ExpectedValues.UIBank1NavBarGroupText, uIBank1NavBarGroup.Text);

            // Verify that the 'Text' property of 'Stillinger (1)' NavBarGroup equals 'Stillinger (1)'
            Assert.AreEqual(this.CheckAbsInDashStep48ExpectedValues.UIStillinger1NavBarGroupText, uIStillinger1NavBarGroup.Text);

            // Verify that the 'ControlName' property of 'chartControlUnitLeader' client equals 'chartControlUnitLeader'
            Assert.AreEqual(this.CheckAbsInDashStep48ExpectedValues.UIChartControlUnitLeadClientControlName, uIChartControlUnitLeadClient.ControlName);
        }
        
        /// <summary>
        /// CheckAbsInDashStep50 - Use 'CheckAbsInDashStep50ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAbsInDashStep50()
        {
            #region Variable Declarations
            DXCell uIItem2PersonCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UINgcAbsenceScrollableControl.UIGcAbsenceTable.UIItem2PersonCell;
            DXCell uIFerie5dgrukeheleukerCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UINgcAbsenceScrollableControl.UIGcAbsenceTable.UIFerie5dgrukeheleukerCell;
            DXCell uIItem0801Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UINgcAbsenceScrollableControl.UIGcAbsenceTable.UIItem0801Cell;
            #endregion

            // Verify that the 'Text' property of '2, Person' cell equals '2, Person'
            Assert.AreEqual(this.CheckAbsInDashStep50ExpectedValues.UIItem2PersonCellText, uIItem2PersonCell.Text);

            // Verify that the 'Text' property of 'Ferie 5 dgr/uke - hele uker' cell equals 'Ferie 5 dgr/uke - hele uker'
            Assert.AreEqual(this.CheckAbsInDashStep50ExpectedValues.UIFerie5dgrukeheleukerCellText, uIFerie5dgrukeheleukerCell.Text);

            // Verify that the 'Text' property of '08.01' cell equals '08.01'
            Assert.AreEqual(this.CheckAbsInDashStep50ExpectedValues.UIItem0801CellText, uIItem0801Cell.Text);
        }
        
        /// <summary>
        /// CheckAbsStep50 - Use 'CheckAbsStep50ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckAbsStep50()
        {
            #region Variable Declarations
            DXListBoxItem uIItem45B2PersonListItem = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList.UIItem45B2PersonListItem;
            DXListBoxItem uIItem45B2PersonListItem1 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList1.UIItem45B2PersonListItem;
            DXListBoxItem uIItem45B2PersonListItem2 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList2.UIItem45B2PersonListItem;
            DXListBoxItem uIItem45B2PersonListItem3 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList3.UIItem45B2PersonListItem;
            DXListBoxItem uIItem45B2PersonListItem4 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList4.UIItem45B2PersonListItem;
            DXListBoxItem uIItem45B2PersonListItem5 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList5.UIItem45B2PersonListItem;
            DXListBoxItem uIItem45B2PersonListItem6 = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UICenterPanelPeriodDockPanel.UIControlContainerCustom.UIPeriodScheduleControCustom.UILayoutPanelSplitContainerControl.UITopPanelClient.UIXtraScrollableControScrollableControl.UIPeriodScheduleListBoList6.UIItem45B2PersonListItem;
            #endregion

            // Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
            Assert.AreEqual(this.CheckAbsStep50ExpectedValues.UIItem45B2PersonListItemText, uIItem45B2PersonListItem.Text);

            // Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
            Assert.AreEqual(this.CheckAbsStep50ExpectedValues.UIItem45B2PersonListItemText1, uIItem45B2PersonListItem1.Text);

            // Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
            Assert.AreEqual(this.CheckAbsStep50ExpectedValues.UIItem45B2PersonListItemText2, uIItem45B2PersonListItem2.Text);

            // Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
            Assert.AreEqual(this.CheckAbsStep50ExpectedValues.UIItem45B2PersonListItemText3, uIItem45B2PersonListItem3.Text);

            // Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
            Assert.AreEqual(this.CheckAbsStep50ExpectedValues.UIItem45B2PersonListItemText4, uIItem45B2PersonListItem4.Text);

            // Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
            Assert.AreEqual(this.CheckAbsStep50ExpectedValues.UIItem45B2PersonListItemText5, uIItem45B2PersonListItem5.Text);

            // Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
            Assert.AreEqual(this.CheckAbsStep50ExpectedValues.UIItem45B2PersonListItemText6, uIItem45B2PersonListItem6.Text);
        }
        
        /// <summary>
        /// CheckMessageStep - Use 'CheckMessageStepExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckMessageStep()
        {
            #region Variable Declarations
            DXTestControl uIOverlappendevakterWindowTitleBar = this.UIOverlappendevakterWindow.UIOverlappendevakterWindowTitleBar;
            #endregion

            // Verify that the 'FriendlyName' property of 'Overlappende vakter' WindowTitleBar equals 'Overlappende vakter'
            Assert.AreEqual(this.CheckMessageStepExpectedValues.UIOverlappendevakterWindowTitleBarFriendlyName, uIOverlappendevakterWindowTitleBar.FriendlyName);
        }
        
        /// <summary>
        /// CheckNoAbsInDashStep48 - Use 'CheckNoAbsInDashStep48ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckNoAbsInDashStep48()
        {
            #region Variable Declarations
            DXNavBarGroup uIFravær1NavBarGroup = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UIFravær1NavBarGroup;
            #endregion

            // Verify that the 'Visible' property of 'Fravær (1)' NavBarGroup equals 'False'
            Assert.AreEqual(this.CheckNoAbsInDashStep48ExpectedValues.UIFravær1NavBarGroupVisible, uIFravær1NavBarGroup.Visible);

            // Verify that the 'Exists' property of 'Fravær (1)' NavBarGroup equals 'False'
            Assert.AreEqual(this.CheckNoAbsInDashStep48ExpectedValues.UIFravær1NavBarGroupExists, uIFravær1NavBarGroup.Exists);
        }
        
        /// <summary>
        /// CheckNoPaymentCalculation - Use 'CheckNoPaymentCalculationExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckNoPaymentCalculation()
        {
            #region Variable Declarations
            DXCell uIItemCell = this.UILønnsberegningvediveWindow.UIPcReceiptPanelClient.UIGcReceiptTable.UIItemCell;
            DXColumnHeader uIPaymentCell_NoneColumnHeader = this.UILønnsberegningvediveWindow.UIPcReceiptPanelClient.UIGcReceiptTable.UIPaymentCell_NoneColumnHeader;
            #endregion

            // Verify that the 'Text' property of cell equals ''
            Assert.AreEqual(this.CheckNoPaymentCalculationExpectedValues.UIItemCellText, uIItemCell.Text);

            // Verify that the 'Text' property of 'PaymentCell_None' column header equals '<Ingen lønnsberegning>'
            Assert.AreEqual(this.CheckNoPaymentCalculationExpectedValues.UIPaymentCell_NoneColumnHeaderText, uIPaymentCell_NoneColumnHeader.Text);
        }
        
        /// <summary>
        /// CheckPlanStep - Use 'CheckPlanStepExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckPlanStep()
        {
            #region Variable Declarations
            DXCell uIItem2Cell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem2Cell;
            #endregion

            // Verify that the 'ValueAsString' property of '2' cell equals 'PlanShift (2)'
            Assert.AreEqual(this.CheckPlanStepExpectedValues.UIItem2CellValueAsString, uIItem2Cell.ValueAsString);
        }
        
        /// <summary>
        /// CheckRegStatusStep46 - Use 'CheckRegStatusStep46ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckRegStatusStep46()
        {
            #region Variable Declarations
            DXCell uILinje212PersonFraværCell = this.UIRegistreringsstatusWindow.UILcMessagesCustom.UILcgMessagesLayoutGroup.UILciMessagesLayoutControlItem.UIGMessagesTable.UILinje212PersonFraværCell;
            DXCell uIDetfinnesfraværivaktCell = this.UIRegistreringsstatusWindow.UILcMessagesCustom.UILcgMessagesLayoutGroup.UILciMessagesLayoutControlItem.UIGMessagesTable.UIDetfinnesfraværivaktCell;
            #endregion

            // Verify that the 'Text' property of 'Linje 2 - 1 - 2, Person - Fravær må håndteres manuelt.' cell equals 'Linje 2 - 1 - 2, Person - Fravær må håndteres manuelt.'
            Assert.AreEqual(this.CheckRegStatusStep46ExpectedValues.UILinje212PersonFraværCellText, uILinje212PersonFraværCell.Text);

            // Verify that the 'Text' property of 'Det finnes fravær i vaktboken i perioden som iverksettes. Disse må manuelt oppdateres etter iverksetting for å få korrekte verdier.' cell equals 'Det finnes fravær i vaktboken i perioden som iverksettes. Disse må manuelt oppdateres etter iverksetting for å få korrekte verdier.'
            Assert.AreEqual(this.CheckRegStatusStep46ExpectedValues.UIDetfinnesfraværivaktCellText, uIDetfinnesfraværivaktCell.Text);
        }
        
        /// <summary>
        /// CloseOverlapWarningDialog
        /// </summary>
        public void CloseOverlapWarningDialog()
        {
            #region Variable Declarations
            DXButton uILukkButton = this.UIOverlappendevakterWindow.UIPanelControl1Client.UILukkButton;
            #endregion

            // Click 'Lukk' button
            Mouse.Click(uILukkButton, new Point(1, 1));
        }
        
        /// <summary>
        /// OpenAbsenceStep44
        /// </summary>
        public void OpenAbsenceStep44()
        {
            #region Variable Declarations
            DXCell uIItem0301202416Kl1200Cell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UIBottomPanelDockPanel.UIFraværDockPanel.UIControlContainerCustom.UIGcAbsenceColumnTable.UIItem0301202416Kl1200Cell;
            #endregion

            // Double-Click '03.01.2024  16 Kl: 12:00-15:00' cell
            Mouse.DoubleClick(uIItem0301202416Kl1200Cell, new Point(11, 6));
        }
        
        /// <summary>
        /// OpenEffLine1
        /// </summary>
        public void OpenEffLine1()
        {
            #region Variable Declarations
            DXCell uIItem1PersonCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem1PersonCell;
            DXMenuBaseButtonItem uIBarButtonItemLink4MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink4MenuBaseButtonItem;
            #endregion

            // Right-Click '1, Person' cell
            Mouse.Click(uIItem1PersonCell, MouseButtons.Right, ModifierKeys.None, new Point(70, 9));

            // Click 'BarButtonItemLink[4]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink4MenuBaseButtonItem, new Point(108, 9));
        }
        
        /// <summary>
        /// OpenEffLine2
        /// </summary>
        public void OpenEffLine2()
        {
            #region Variable Declarations
            DXCell uIItem2PersonCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem2PersonCell;
            DXMenuBaseButtonItem uIBarButtonItemLink4MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink4MenuBaseButtonItem;
            #endregion

            // Right-Click '2, Person' cell
            Mouse.Click(uIItem2PersonCell, MouseButtons.Right, ModifierKeys.None, new Point(85, 7));

            // Click 'BarButtonItemLink[4]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink4MenuBaseButtonItem, new Point(97, 10));
        }
        
        /// <summary>
        /// OpenEffLine3
        /// </summary>
        public void OpenEffLine3()
        {
            #region Variable Declarations
            DXCell uIItem3PersonCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem3PersonCell;
            DXMenuBaseButtonItem uIBarButtonItemLink4MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink4MenuBaseButtonItem;
            #endregion

            // Right-Click '3, Person' cell
            Mouse.Click(uIItem3PersonCell, MouseButtons.Right, ModifierKeys.None, new Point(80, 11));

            // Click 'BarButtonItemLink[4]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink4MenuBaseButtonItem, new Point(105, 10));
        }
        
        /// <summary>
        /// OpenEffLine4
        /// </summary>
        public void OpenEffLine4()
        {
            #region Variable Declarations
            DXCell uIItem4PersonCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem4PersonCell;
            DXMenuBaseButtonItem uIBarButtonItemLink4MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink4MenuBaseButtonItem;
            #endregion

            // Right-Click '4, Person' cell
            Mouse.Click(uIItem4PersonCell, MouseButtons.Right, ModifierKeys.None, new Point(86, 10));

            // Click 'BarButtonItemLink[4]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink4MenuBaseButtonItem, new Point(87, 9));
        }
        
        /// <summary>
        /// OpenEffLine5
        /// </summary>
        public void OpenEffLine5()
        {
            #region Variable Declarations
            DXCell uIItem5PersonCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem5PersonCell;
            DXMenuBaseButtonItem uIBarButtonItemLink4MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink4MenuBaseButtonItem;
            #endregion

            // Right-Click '5, Person' cell
            Mouse.Click(uIItem5PersonCell, MouseButtons.Right, ModifierKeys.None, new Point(85, 9));

            // Click 'BarButtonItemLink[4]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink4MenuBaseButtonItem, new Point(89, 11));
        }
        
        /// <summary>
        /// OpenEffLine6
        /// </summary>
        public void OpenEffLine6()
        {
            #region Variable Declarations
            DXCell uIItem6PersonCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem6PersonCell;
            DXMenuBaseButtonItem uIBarButtonItemLink4MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink4MenuBaseButtonItem;
            #endregion

            // Right-Click '6, Person' cell
            Mouse.Click(uIItem6PersonCell, MouseButtons.Right, ModifierKeys.None, new Point(79, 6));

            // Click 'BarButtonItemLink[4]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink4MenuBaseButtonItem, new Point(101, 12));
        }
        
        /// <summary>
        /// OpenEffLine7
        /// </summary>
        public void OpenEffLine7()
        {
            #region Variable Declarations
            DXCell uIItem7PersonCell = this.UIArbeidsplanWindow.UIPnlRosterPlanClient.UIRosterPlanGrid1Custom.UIGcRosterPlanTable.UIItem7PersonCell;
            DXMenuBaseButtonItem uIBarButtonItemLink4MenuBaseButtonItem = this.UIItemWindow.UIPopupMenuBarControlMenu.UIBarButtonItemLink4MenuBaseButtonItem;
            #endregion

            // Right-Click '7, Person' cell
            Mouse.Click(uIItem7PersonCell, MouseButtons.Right, ModifierKeys.None, new Point(77, 10));

            // Click 'BarButtonItemLink[4]' MenuBaseButtonItem
            Mouse.Click(uIBarButtonItemLink4MenuBaseButtonItem, new Point(104, 9));
        }
        
        /// <summary>
        /// OpenEmp2AbsenceStep48
        /// </summary>
        public void OpenEmp2AbsenceStep48()
        {
            #region Variable Declarations
            DXCell uIItem2PersonCell = this.UIGatWindow.UIViewHostCustom.UIPcViewClient.UILeftPanelDockPanel.UIDashboardDockPanel.UIControlContainerCustom.UIDashboardControlCustom.UINavBarControlNavBar.UINgcAbsenceScrollableControl.UIGcAbsenceTable.UIItem2PersonCell;
            #endregion

            // Double-Click '2, Person' cell
            Mouse.DoubleClick(uIItem2PersonCell, new Point(63, 6));
        }
        
        /// <summary>
        /// SelectAbsRadioButtonStep44
        /// </summary>
        public void SelectAbsRadioButtonStep44()
        {
            #region Variable Declarations
            DXCell uIValgtCell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIGcShiftsTable.UIValgtCell;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell, new Point(15, 8));
        }
        
        /// <summary>
        /// SelectTSCheckBoxStep44
        /// </summary>
        public void SelectTSCheckBoxStep44()
        {
            #region Variable Declarations
            DXCell uIValgtCell1 = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIGcShiftsTable.UIValgtCell1;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell1, new Point(15, 8));
        }
        
        /// <summary>
        /// SelectTSCheckBoxStep44New
        /// </summary>
        public void SelectTSCheckBoxStep44New()
        {
            #region Variable Declarations
            DXCell uIValgtCell = this.UIFraværsregistreringWindow.UIPnlShiftManagementClient1.UISccShiftManagementSplitContainerControl.UISplitGroupPanelClient.UIGrcShiftsClient.UITcShiftsTabList.UIXtpShiftsGridClient.UIGcShiftsTable.UIValgtCell;
            #endregion

            // Click 'Valgt' cell
            Mouse.Click(uIValgtCell, new Point(13, 8));
        }
        
        #region Properties
        public virtual CheckAbsenceStep44ExpectedValues CheckAbsenceStep44ExpectedValues
        {
            get
            {
                if ((this.mCheckAbsenceStep44ExpectedValues == null))
                {
                    this.mCheckAbsenceStep44ExpectedValues = new CheckAbsenceStep44ExpectedValues();
                }
                return this.mCheckAbsenceStep44ExpectedValues;
            }
        }
        
        public virtual CheckAbsInDashStep48ExpectedValues CheckAbsInDashStep48ExpectedValues
        {
            get
            {
                if ((this.mCheckAbsInDashStep48ExpectedValues == null))
                {
                    this.mCheckAbsInDashStep48ExpectedValues = new CheckAbsInDashStep48ExpectedValues();
                }
                return this.mCheckAbsInDashStep48ExpectedValues;
            }
        }
        
        public virtual CheckAbsInDashStep50ExpectedValues CheckAbsInDashStep50ExpectedValues
        {
            get
            {
                if ((this.mCheckAbsInDashStep50ExpectedValues == null))
                {
                    this.mCheckAbsInDashStep50ExpectedValues = new CheckAbsInDashStep50ExpectedValues();
                }
                return this.mCheckAbsInDashStep50ExpectedValues;
            }
        }
        
        public virtual CheckAbsStep50ExpectedValues CheckAbsStep50ExpectedValues
        {
            get
            {
                if ((this.mCheckAbsStep50ExpectedValues == null))
                {
                    this.mCheckAbsStep50ExpectedValues = new CheckAbsStep50ExpectedValues();
                }
                return this.mCheckAbsStep50ExpectedValues;
            }
        }
        
        public virtual CheckMessageStepExpectedValues CheckMessageStepExpectedValues
        {
            get
            {
                if ((this.mCheckMessageStepExpectedValues == null))
                {
                    this.mCheckMessageStepExpectedValues = new CheckMessageStepExpectedValues();
                }
                return this.mCheckMessageStepExpectedValues;
            }
        }
        
        public virtual CheckNoAbsInDashStep48ExpectedValues CheckNoAbsInDashStep48ExpectedValues
        {
            get
            {
                if ((this.mCheckNoAbsInDashStep48ExpectedValues == null))
                {
                    this.mCheckNoAbsInDashStep48ExpectedValues = new CheckNoAbsInDashStep48ExpectedValues();
                }
                return this.mCheckNoAbsInDashStep48ExpectedValues;
            }
        }
        
        public virtual CheckNoPaymentCalculationExpectedValues CheckNoPaymentCalculationExpectedValues
        {
            get
            {
                if ((this.mCheckNoPaymentCalculationExpectedValues == null))
                {
                    this.mCheckNoPaymentCalculationExpectedValues = new CheckNoPaymentCalculationExpectedValues();
                }
                return this.mCheckNoPaymentCalculationExpectedValues;
            }
        }
        
        public virtual CheckPlanStepExpectedValues CheckPlanStepExpectedValues
        {
            get
            {
                if ((this.mCheckPlanStepExpectedValues == null))
                {
                    this.mCheckPlanStepExpectedValues = new CheckPlanStepExpectedValues();
                }
                return this.mCheckPlanStepExpectedValues;
            }
        }
        
        public virtual CheckRegStatusStep46ExpectedValues CheckRegStatusStep46ExpectedValues
        {
            get
            {
                if ((this.mCheckRegStatusStep46ExpectedValues == null))
                {
                    this.mCheckRegStatusStep46ExpectedValues = new CheckRegStatusStep46ExpectedValues();
                }
                return this.mCheckRegStatusStep46ExpectedValues;
            }
        }
        
        public UIArbeidsplanWindow UIArbeidsplanWindow
        {
            get
            {
                if ((this.mUIArbeidsplanWindow == null))
                {
                    this.mUIArbeidsplanWindow = new UIArbeidsplanWindow();
                }
                return this.mUIArbeidsplanWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOverlappendevakterWindow UIOverlappendevakterWindow
        {
            get
            {
                if ((this.mUIOverlappendevakterWindow == null))
                {
                    this.mUIOverlappendevakterWindow = new UIOverlappendevakterWindow();
                }
                return this.mUIOverlappendevakterWindow;
            }
        }
        
        public UILønnsberegningvediveWindow UILønnsberegningvediveWindow
        {
            get
            {
                if ((this.mUILønnsberegningvediveWindow == null))
                {
                    this.mUILønnsberegningvediveWindow = new UILønnsberegningvediveWindow();
                }
                return this.mUILønnsberegningvediveWindow;
            }
        }
        
        public UIGatWindow UIGatWindow
        {
            get
            {
                if ((this.mUIGatWindow == null))
                {
                    this.mUIGatWindow = new UIGatWindow();
                }
                return this.mUIGatWindow;
            }
        }
        
        public UIFraværsregistreringWindow UIFraværsregistreringWindow
        {
            get
            {
                if ((this.mUIFraværsregistreringWindow == null))
                {
                    this.mUIFraværsregistreringWindow = new UIFraværsregistreringWindow();
                }
                return this.mUIFraværsregistreringWindow;
            }
        }
        
        public UIRegistreringsstatusWindow UIRegistreringsstatusWindow
        {
            get
            {
                if ((this.mUIRegistreringsstatusWindow == null))
                {
                    this.mUIRegistreringsstatusWindow = new UIRegistreringsstatusWindow();
                }
                return this.mUIRegistreringsstatusWindow;
            }
        }
        #endregion
        
        #region Fields
        private CheckAbsenceStep44ExpectedValues mCheckAbsenceStep44ExpectedValues;
        
        private CheckAbsInDashStep48ExpectedValues mCheckAbsInDashStep48ExpectedValues;
        
        private CheckAbsInDashStep50ExpectedValues mCheckAbsInDashStep50ExpectedValues;
        
        private CheckAbsStep50ExpectedValues mCheckAbsStep50ExpectedValues;
        
        private CheckMessageStepExpectedValues mCheckMessageStepExpectedValues;
        
        private CheckNoAbsInDashStep48ExpectedValues mCheckNoAbsInDashStep48ExpectedValues;
        
        private CheckNoPaymentCalculationExpectedValues mCheckNoPaymentCalculationExpectedValues;
        
        private CheckPlanStepExpectedValues mCheckPlanStepExpectedValues;
        
        private CheckRegStatusStep46ExpectedValues mCheckRegStatusStep46ExpectedValues;
        
        private UIArbeidsplanWindow mUIArbeidsplanWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIOverlappendevakterWindow mUIOverlappendevakterWindow;
        
        private UILønnsberegningvediveWindow mUILønnsberegningvediveWindow;
        
        private UIGatWindow mUIGatWindow;
        
        private UIFraværsregistreringWindow mUIFraværsregistreringWindow;
        
        private UIRegistreringsstatusWindow mUIRegistreringsstatusWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAbsenceStep44'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAbsenceStep44ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ErrorText' property of '2' cell equals 'Meldinger:
        /// - Vakten blir en del av dette fraværet ved lagring'
        /// </summary>
        public string UIItem2CellErrorText = "Meldinger:\r\n - Vakten blir en del av dette fraværet ved lagring";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAbsInDashStep48'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAbsInDashStep48ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Timeregistrering (0/0)' NavBarGroup equals 'Timeregistrering (0/0)'
        /// </summary>
        public string UITimeregistrering00NavBarGroupText = "Timeregistrering (0/0)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Bank (1)' NavBarGroup equals 'Bank (1)'
        /// </summary>
        public string UIBank1NavBarGroupText = "Bank (1)";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Stillinger (1)' NavBarGroup equals 'Stillinger (1)'
        /// </summary>
        public string UIStillinger1NavBarGroupText = "Stillinger (1)";
        
        /// <summary>
        /// Verify that the 'ControlName' property of 'chartControlUnitLeader' client equals 'chartControlUnitLeader'
        /// </summary>
        public string UIChartControlUnitLeadClientControlName = "chartControlUnitLeader";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAbsInDashStep50'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAbsInDashStep50ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '2, Person' cell equals '2, Person'
        /// </summary>
        public string UIItem2PersonCellText = "2, Person";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Ferie 5 dgr/uke - hele uker' cell equals 'Ferie 5 dgr/uke - hele uker'
        /// </summary>
        public string UIFerie5dgrukeheleukerCellText = "Ferie 5 dgr/uke - hele uker";
        
        /// <summary>
        /// Verify that the 'Text' property of '08.01' cell equals '08.01'
        /// </summary>
        public string UIItem0801CellText = "08.01";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckAbsStep50'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckAbsStep50ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
        /// </summary>
        public string UIItem45B2PersonListItemText = "45B - 2, Person";
        
        /// <summary>
        /// Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
        /// </summary>
        public string UIItem45B2PersonListItemText1 = "45B - 2, Person";
        
        /// <summary>
        /// Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
        /// </summary>
        public string UIItem45B2PersonListItemText2 = "45B - 2, Person";
        
        /// <summary>
        /// Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
        /// </summary>
        public string UIItem45B2PersonListItemText3 = "45B - 2, Person";
        
        /// <summary>
        /// Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
        /// </summary>
        public string UIItem45B2PersonListItemText4 = "45B - 2, Person";
        
        /// <summary>
        /// Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
        /// </summary>
        public string UIItem45B2PersonListItemText5 = "45B - 2, Person";
        
        /// <summary>
        /// Verify that the 'Text' property of '45B - 2, Person' list item equals '45B - 2, Person'
        /// </summary>
        public string UIItem45B2PersonListItemText6 = "45B - 2, Person";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckMessageStep'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckMessageStepExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Overlappende vakter' WindowTitleBar equals 'Overlappende vakter'
        /// </summary>
        public string UIOverlappendevakterWindowTitleBarFriendlyName = "Overlappende vakter";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckNoAbsInDashStep48'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckNoAbsInDashStep48ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Visible' property of 'Fravær (1)' NavBarGroup equals 'False'
        /// </summary>
        public bool UIFravær1NavBarGroupVisible = false;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'Fravær (1)' NavBarGroup equals 'False'
        /// </summary>
        public bool UIFravær1NavBarGroupExists = false;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckNoPaymentCalculation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckNoPaymentCalculationExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of cell equals ''
        /// </summary>
        public string UIItemCellText = "";
        
        /// <summary>
        /// Verify that the 'Text' property of 'PaymentCell_None' column header equals '<Ingen lønnsberegning>'
        /// </summary>
        public string UIPaymentCell_NoneColumnHeaderText = "<Ingen lønnsberegning>";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckPlanStep'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckPlanStepExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAsString' property of '2' cell equals 'PlanShift (2)'
        /// </summary>
        public string UIItem2CellValueAsString = "PlanShift (2)";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckRegStatusStep46'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckRegStatusStep46ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Linje 2 - 1 - 2, Person - Fravær må håndteres manuelt.' cell equals 'Linje 2 - 1 - 2, Person - Fravær må håndteres manuelt.'
        /// </summary>
        public string UILinje212PersonFraværCellText = "Linje 2 - 1 - 2, Person - Fravær må håndteres manuelt.";
        
        /// <summary>
        /// Verify that the 'Text' property of 'Det finnes fravær i vaktboken i perioden som iverksettes. Disse må manuelt oppdateres etter iverksetting for å få korrekte verdier.' cell equals 'Det finnes fravær i vaktboken i perioden som iverksettes. Disse må manuelt oppdateres etter iverksetting for å få korrekte verdier.'
        /// </summary>
        public string UIDetfinnesfraværivaktCellText = "Det finnes fravær i vaktboken i perioden som iverksettes. Disse må manuelt oppdat" +
            "eres etter iverksetting for å få korrekte verdier.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArbeidsplanWindow : DXWindow
    {
        
        public UIArbeidsplanWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Arbeidsplan";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIPnlRosterPlanClient UIPnlRosterPlanClient
        {
            get
            {
                if ((this.mUIPnlRosterPlanClient == null))
                {
                    this.mUIPnlRosterPlanClient = new UIPnlRosterPlanClient(this);
                }
                return this.mUIPnlRosterPlanClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlRosterPlanClient mUIPnlRosterPlanClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlRosterPlanClient : DXTestControl
    {
        
        public UIPnlRosterPlanClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIRosterPlanGrid1Custom UIRosterPlanGrid1Custom
        {
            get
            {
                if ((this.mUIRosterPlanGrid1Custom == null))
                {
                    this.mUIRosterPlanGrid1Custom = new UIRosterPlanGrid1Custom(this);
                }
                return this.mUIRosterPlanGrid1Custom;
            }
        }
        #endregion
        
        #region Fields
        private UIRosterPlanGrid1Custom mUIRosterPlanGrid1Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRosterPlanGrid1Custom : DXTestControl
    {
        
        public UIRosterPlanGrid1Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "rosterPlanGrid1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "RosterPlanGrid";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public UIGcRosterPlanTable UIGcRosterPlanTable
        {
            get
            {
                if ((this.mUIGcRosterPlanTable == null))
                {
                    this.mUIGcRosterPlanTable = new UIGcRosterPlanTable(this);
                }
                return this.mUIGcRosterPlanTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcRosterPlanTable mUIGcRosterPlanTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcRosterPlanTable : DXGrid
    {
        
        public UIGcRosterPlanTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlan";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Arbeidsplan");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem1PersonCell
        {
            get
            {
                if ((this.mUIItem1PersonCell == null))
                {
                    this.mUIItem1PersonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem1PersonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]EmployeeName";
                    this.mUIItem1PersonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem1PersonCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem1PersonCell;
            }
        }
        
        public DXCell UIItem3PersonCell
        {
            get
            {
                if ((this.mUIItem3PersonCell == null))
                {
                    this.mUIItem3PersonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem3PersonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]2[Column]EmployeeName";
                    this.mUIItem3PersonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem3PersonCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem3PersonCell;
            }
        }
        
        public DXCell UIItem2Cell
        {
            get
            {
                if ((this.mUIItem2Cell == null))
                {
                    this.mUIItem2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]0[Column]RosterCell_0";
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2Cell;
            }
        }
        
        public DXCell UIItem4PersonCell
        {
            get
            {
                if ((this.mUIItem4PersonCell == null))
                {
                    this.mUIItem4PersonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem4PersonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]3[Column]EmployeeName";
                    this.mUIItem4PersonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem4PersonCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem4PersonCell;
            }
        }
        
        public DXCell UIItem5PersonCell
        {
            get
            {
                if ((this.mUIItem5PersonCell == null))
                {
                    this.mUIItem5PersonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem5PersonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]4[Column]EmployeeName";
                    this.mUIItem5PersonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem5PersonCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem5PersonCell;
            }
        }
        
        public DXCell UIItem6PersonCell
        {
            get
            {
                if ((this.mUIItem6PersonCell == null))
                {
                    this.mUIItem6PersonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem6PersonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]5[Column]EmployeeName";
                    this.mUIItem6PersonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem6PersonCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem6PersonCell;
            }
        }
        
        public DXCell UIItem7PersonCell
        {
            get
            {
                if ((this.mUIItem7PersonCell == null))
                {
                    this.mUIItem7PersonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem7PersonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]6[Column]EmployeeName";
                    this.mUIItem7PersonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem7PersonCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem7PersonCell;
            }
        }
        
        public DXCell UIItem2PersonCell
        {
            get
            {
                if ((this.mUIItem2PersonCell == null))
                {
                    this.mUIItem2PersonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2PersonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcRosterPlanGridControlCell[View]gvRosterPlan[Row]1[Column]EmployeeName";
                    this.mUIItem2PersonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2PersonCell.WindowTitles.Add("Arbeidsplan");
                    #endregion
                }
                return this.mUIItem2PersonCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem1PersonCell;
        
        private DXCell mUIItem3PersonCell;
        
        private DXCell mUIItem2Cell;
        
        private DXCell mUIItem4PersonCell;
        
        private DXCell mUIItem5PersonCell;
        
        private DXCell mUIItem6PersonCell;
        
        private DXCell mUIItem7PersonCell;
        
        private DXCell mUIItem2PersonCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIPopupMenuBarControlMenu UIPopupMenuBarControlMenu
        {
            get
            {
                if ((this.mUIPopupMenuBarControlMenu == null))
                {
                    this.mUIPopupMenuBarControlMenu = new UIPopupMenuBarControlMenu(this);
                }
                return this.mUIPopupMenuBarControlMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIPopupMenuBarControlMenu mUIPopupMenuBarControlMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPopupMenuBarControlMenu : DXMenu
    {
        
        public UIPopupMenuBarControlMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PopupMenuBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PopupMenuBarControl";
            #endregion
        }
        
        #region Properties
        public DXMenuBaseButtonItem UIBarButtonItemLink4MenuBaseButtonItem
        {
            get
            {
                if ((this.mUIBarButtonItemLink4MenuBaseButtonItem == null))
                {
                    this.mUIBarButtonItemLink4MenuBaseButtonItem = new DXMenuBaseButtonItem(this);
                    #region Search Criteria
                    this.mUIBarButtonItemLink4MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.Name] = "BarButtonItemLink[3]";
                    this.mUIBarButtonItemLink4MenuBaseButtonItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "MenuBaseButtonItem";
                    #endregion
                }
                return this.mUIBarButtonItemLink4MenuBaseButtonItem;
            }
        }
        #endregion
        
        #region Fields
        private DXMenuBaseButtonItem mUIBarButtonItemLink4MenuBaseButtonItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOverlappendevakterWindow : DXWindow
    {
        
        public UIOverlappendevakterWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Overlappende vakter";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Overlappende vakter");
            #endregion
        }
        
        #region Properties
        public DXTestControl UIOverlappendevakterWindowTitleBar
        {
            get
            {
                if ((this.mUIOverlappendevakterWindowTitleBar == null))
                {
                    this.mUIOverlappendevakterWindowTitleBar = new DXTestControl(this);
                    #region Search Criteria
                    this.mUIOverlappendevakterWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.Name] = "WindowTitleBar";
                    this.mUIOverlappendevakterWindowTitleBar.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WindowTitleBar";
                    this.mUIOverlappendevakterWindowTitleBar.WindowTitles.Add("Overlappende vakter");
                    #endregion
                }
                return this.mUIOverlappendevakterWindowTitleBar;
            }
        }
        
        public UIPanelControl1Client UIPanelControl1Client
        {
            get
            {
                if ((this.mUIPanelControl1Client == null))
                {
                    this.mUIPanelControl1Client = new UIPanelControl1Client(this);
                }
                return this.mUIPanelControl1Client;
            }
        }
        #endregion
        
        #region Fields
        private DXTestControl mUIOverlappendevakterWindowTitleBar;
        
        private UIPanelControl1Client mUIPanelControl1Client;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelControl1Client : DXTestControl
    {
        
        public UIPanelControl1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "panelControl1";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Overlappende vakter");
            #endregion
        }
        
        #region Properties
        public DXButton UILukkButton
        {
            get
            {
                if ((this.mUILukkButton == null))
                {
                    this.mUILukkButton = new DXButton(this);
                    #region Search Criteria
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.Name] = "btnOk";
                    this.mUILukkButton.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SimpleButton";
                    this.mUILukkButton.WindowTitles.Add("Overlappende vakter");
                    #endregion
                }
                return this.mUILukkButton;
            }
        }
        #endregion
        
        #region Fields
        private DXButton mUILukkButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILønnsberegningvediveWindow : DXWindow
    {
        
        public UILønnsberegningvediveWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Lønnsberegning ved iverksetting";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public UIPcReceiptPanelClient UIPcReceiptPanelClient
        {
            get
            {
                if ((this.mUIPcReceiptPanelClient == null))
                {
                    this.mUIPcReceiptPanelClient = new UIPcReceiptPanelClient(this);
                }
                return this.mUIPcReceiptPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcReceiptPanelClient mUIPcReceiptPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcReceiptPanelClient : DXTestControl
    {
        
        public UIPcReceiptPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcReceiptPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public UIGcReceiptTable UIGcReceiptTable
        {
            get
            {
                if ((this.mUIGcReceiptTable == null))
                {
                    this.mUIGcReceiptTable = new UIGcReceiptTable(this);
                }
                return this.mUIGcReceiptTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcReceiptTable mUIGcReceiptTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcReceiptTable : DXGrid
    {
        
        public UIGcReceiptTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcReceipt";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Lønnsberegning ved iverksetting");
            #endregion
        }
        
        #region Properties
        public DXCell UIItemCell
        {
            get
            {
                if ((this.mUIItemCell == null))
                {
                    this.mUIItemCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcReceiptGridControlCell[View]gvReceipt[Row]0[Column]PaymentCell_None";
                    this.mUIItemCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItemCell.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    #endregion
                }
                return this.mUIItemCell;
            }
        }
        
        public DXColumnHeader UIPaymentCell_NoneColumnHeader
        {
            get
            {
                if ((this.mUIPaymentCell_NoneColumnHeader == null))
                {
                    this.mUIPaymentCell_NoneColumnHeader = new DXColumnHeader(this);
                    #region Search Criteria
                    this.mUIPaymentCell_NoneColumnHeader.SearchProperties[DXTestControl.PropertyNames.Name] = "gcReceiptGridControlColumnHeader[View]gvReceipt[Column]PaymentCell_None";
                    this.mUIPaymentCell_NoneColumnHeader.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlColumnHeader";
                    this.mUIPaymentCell_NoneColumnHeader.WindowTitles.Add("Lønnsberegning ved iverksetting");
                    #endregion
                }
                return this.mUIPaymentCell_NoneColumnHeader;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItemCell;
        
        private DXColumnHeader mUIPaymentCell_NoneColumnHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGatWindow : WinWindow
    {
        
        public UIGatWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Gat";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TfrmMain";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIViewHostCustom UIViewHostCustom
        {
            get
            {
                if ((this.mUIViewHostCustom == null))
                {
                    this.mUIViewHostCustom = new UIViewHostCustom(this);
                }
                return this.mUIViewHostCustom;
            }
        }
        
        public UIViewHostCustom1 UIViewHostCustom1
        {
            get
            {
                if ((this.mUIViewHostCustom1 == null))
                {
                    this.mUIViewHostCustom1 = new UIViewHostCustom1(this);
                }
                return this.mUIViewHostCustom1;
            }
        }
        #endregion
        
        #region Fields
        private UIViewHostCustom mUIViewHostCustom;
        
        private UIViewHostCustom1 mUIViewHostCustom1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom : DXTestControl
    {
        
        public UIViewHostCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient : DXTestControl
    {
        
        public UIPcViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIBottomPanelDockPanel UIBottomPanelDockPanel
        {
            get
            {
                if ((this.mUIBottomPanelDockPanel == null))
                {
                    this.mUIBottomPanelDockPanel = new UIBottomPanelDockPanel(this);
                }
                return this.mUIBottomPanelDockPanel;
            }
        }
        
        public UILeftPanelDockPanel UILeftPanelDockPanel
        {
            get
            {
                if ((this.mUILeftPanelDockPanel == null))
                {
                    this.mUILeftPanelDockPanel = new UILeftPanelDockPanel(this);
                }
                return this.mUILeftPanelDockPanel;
            }
        }
        
        public UICenterPanelPeriodDockPanel UICenterPanelPeriodDockPanel
        {
            get
            {
                if ((this.mUICenterPanelPeriodDockPanel == null))
                {
                    this.mUICenterPanelPeriodDockPanel = new UICenterPanelPeriodDockPanel(this);
                }
                return this.mUICenterPanelPeriodDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIBottomPanelDockPanel mUIBottomPanelDockPanel;
        
        private UILeftPanelDockPanel mUILeftPanelDockPanel;
        
        private UICenterPanelPeriodDockPanel mUICenterPanelPeriodDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBottomPanelDockPanel : DXDockPanel
    {
        
        public UIBottomPanelDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "BottomPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIFraværDockPanel UIFraværDockPanel
        {
            get
            {
                if ((this.mUIFraværDockPanel == null))
                {
                    this.mUIFraværDockPanel = new UIFraværDockPanel(this);
                }
                return this.mUIFraværDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIFraværDockPanel mUIFraværDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFraværDockPanel : DXDockPanel
    {
        
        public UIFraværDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fravær";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom : DXTestControl
    {
        
        public UIControlContainerCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "FraværControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcAbsenceColumnTable UIGcAbsenceColumnTable
        {
            get
            {
                if ((this.mUIGcAbsenceColumnTable == null))
                {
                    this.mUIGcAbsenceColumnTable = new UIGcAbsenceColumnTable(this);
                }
                return this.mUIGcAbsenceColumnTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAbsenceColumnTable mUIGcAbsenceColumnTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAbsenceColumnTable : DXGrid
    {
        
        public UIGcAbsenceColumnTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceColumn";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem0301202416Kl1200Cell
        {
            get
            {
                if ((this.mUIItem0301202416Kl1200Cell == null))
                {
                    this.mUIItem0301202416Kl1200Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0301202416Kl1200Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceColumnGridControlCell[View]gvAbsenceColumn[Row]0[Column]gccAbsencePeriod" +
                        "";
                    this.mUIItem0301202416Kl1200Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0301202416Kl1200Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem0301202416Kl1200Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem0301202416Kl1200Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeftPanelDockPanel : DXDockPanel
    {
        
        public UILeftPanelDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LeftPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIDashboardDockPanel UIDashboardDockPanel
        {
            get
            {
                if ((this.mUIDashboardDockPanel == null))
                {
                    this.mUIDashboardDockPanel = new UIDashboardDockPanel(this);
                }
                return this.mUIDashboardDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDashboardDockPanel mUIDashboardDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDashboardDockPanel : DXDockPanel
    {
        
        public UIDashboardDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Dashboard";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom1 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom1(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom1 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom1 : DXTestControl
    {
        
        public UIControlContainerCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DashboardControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIDashboardControlCustom UIDashboardControlCustom
        {
            get
            {
                if ((this.mUIDashboardControlCustom == null))
                {
                    this.mUIDashboardControlCustom = new UIDashboardControlCustom(this);
                }
                return this.mUIDashboardControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDashboardControlCustom mUIDashboardControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDashboardControlCustom : DXTestControl
    {
        
        public UIDashboardControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DashboardControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DashboardControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UINavBarControlNavBar UINavBarControlNavBar
        {
            get
            {
                if ((this.mUINavBarControlNavBar == null))
                {
                    this.mUINavBarControlNavBar = new UINavBarControlNavBar(this);
                }
                return this.mUINavBarControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarControlNavBar mUINavBarControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINavBarControlNavBar : DXNavBar
    {
        
        public UINavBarControlNavBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UINgcAbsenceScrollableControl UINgcAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINgcAbsenceScrollableControl == null))
                {
                    this.mUINgcAbsenceScrollableControl = new UINgcAbsenceScrollableControl(this);
                }
                return this.mUINgcAbsenceScrollableControl;
            }
        }
        
        public DXNavBarGroup UITimeregistrering00NavBarGroup
        {
            get
            {
                if ((this.mUITimeregistrering00NavBarGroup == null))
                {
                    this.mUITimeregistrering00NavBarGroup = new DXNavBarGroup(this);
                    #region Search Criteria
                    this.mUITimeregistrering00NavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Timeregistrering (0/0)";
                    this.mUITimeregistrering00NavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
                    this.mUITimeregistrering00NavBarGroup.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITimeregistrering00NavBarGroup;
            }
        }
        
        public DXNavBarGroup UIBank1NavBarGroup
        {
            get
            {
                if ((this.mUIBank1NavBarGroup == null))
                {
                    this.mUIBank1NavBarGroup = new DXNavBarGroup(this);
                    #region Search Criteria
                    this.mUIBank1NavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Bank (1)";
                    this.mUIBank1NavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
                    this.mUIBank1NavBarGroup.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIBank1NavBarGroup;
            }
        }
        
        public DXNavBarGroup UIStillinger1NavBarGroup
        {
            get
            {
                if ((this.mUIStillinger1NavBarGroup == null))
                {
                    this.mUIStillinger1NavBarGroup = new DXNavBarGroup(this);
                    #region Search Criteria
                    this.mUIStillinger1NavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Stillinger (1)";
                    this.mUIStillinger1NavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
                    this.mUIStillinger1NavBarGroup.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIStillinger1NavBarGroup;
            }
        }
        
        public UINbcTimeRegScrollableControl UINbcTimeRegScrollableControl
        {
            get
            {
                if ((this.mUINbcTimeRegScrollableControl == null))
                {
                    this.mUINbcTimeRegScrollableControl = new UINbcTimeRegScrollableControl(this);
                }
                return this.mUINbcTimeRegScrollableControl;
            }
        }
        
        public DXNavBarGroup UIFravær1NavBarGroup
        {
            get
            {
                if ((this.mUIFravær1NavBarGroup == null))
                {
                    this.mUIFravær1NavBarGroup = new DXNavBarGroup(this);
                    #region Search Criteria
                    this.mUIFravær1NavBarGroup.SearchProperties[DXTestControl.PropertyNames.Name] = "Fravær (1)";
                    this.mUIFravær1NavBarGroup.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroup";
                    this.mUIFravær1NavBarGroup.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFravær1NavBarGroup;
            }
        }
        #endregion
        
        #region Fields
        private UINgcAbsenceScrollableControl mUINgcAbsenceScrollableControl;
        
        private DXNavBarGroup mUITimeregistrering00NavBarGroup;
        
        private DXNavBarGroup mUIBank1NavBarGroup;
        
        private DXNavBarGroup mUIStillinger1NavBarGroup;
        
        private UINbcTimeRegScrollableControl mUINbcTimeRegScrollableControl;
        
        private DXNavBarGroup mUIFravær1NavBarGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINgcAbsenceScrollableControl : DXScrollableControl
    {
        
        public UINgcAbsenceScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ngcAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcAbsenceTable UIGcAbsenceTable
        {
            get
            {
                if ((this.mUIGcAbsenceTable == null))
                {
                    this.mUIGcAbsenceTable = new UIGcAbsenceTable(this);
                }
                return this.mUIGcAbsenceTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAbsenceTable mUIGcAbsenceTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAbsenceTable : DXGrid
    {
        
        public UIGcAbsenceTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem2PersonCell
        {
            get
            {
                if ((this.mUIItem2PersonCell == null))
                {
                    this.mUIItem2PersonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2PersonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceGridControlCell[View]gvAbsence[Row]0[Column]clmAbsenceName";
                    this.mUIItem2PersonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2PersonCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem2PersonCell;
            }
        }
        
        public DXCell UIFerie5dgrukeheleukerCell
        {
            get
            {
                if ((this.mUIFerie5dgrukeheleukerCell == null))
                {
                    this.mUIFerie5dgrukeheleukerCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIFerie5dgrukeheleukerCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceGridControlCell[View]gvAbsence[Row]0[Column]clmAbsenceInfoText";
                    this.mUIFerie5dgrukeheleukerCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIFerie5dgrukeheleukerCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFerie5dgrukeheleukerCell;
            }
        }
        
        public DXCell UIItem0801Cell
        {
            get
            {
                if ((this.mUIItem0801Cell == null))
                {
                    this.mUIItem0801Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0801Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceGridControlCell[View]gvAbsence[Row]0[Column]clmAbsenceDate";
                    this.mUIItem0801Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0801Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem0801Cell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem2PersonCell;
        
        private DXCell mUIFerie5dgrukeheleukerCell;
        
        private DXCell mUIItem0801Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINbcTimeRegScrollableControl : DXScrollableControl
    {
        
        public UINbcTimeRegScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "nbcTimeReg";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIScTimeRegSplitContainerControl UIScTimeRegSplitContainerControl
        {
            get
            {
                if ((this.mUIScTimeRegSplitContainerControl == null))
                {
                    this.mUIScTimeRegSplitContainerControl = new UIScTimeRegSplitContainerControl(this);
                }
                return this.mUIScTimeRegSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UIScTimeRegSplitContainerControl mUIScTimeRegSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIScTimeRegSplitContainerControl : DXSplitContainerControl
    {
        
        public UIScTimeRegSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "scTimeReg";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient : DXTestControl
    {
        
        public UISplitGroupPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "scTimeRegSplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPnlGraphUnitLeaderClient UIPnlGraphUnitLeaderClient
        {
            get
            {
                if ((this.mUIPnlGraphUnitLeaderClient == null))
                {
                    this.mUIPnlGraphUnitLeaderClient = new UIPnlGraphUnitLeaderClient(this);
                }
                return this.mUIPnlGraphUnitLeaderClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlGraphUnitLeaderClient mUIPnlGraphUnitLeaderClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlGraphUnitLeaderClient : DXTestControl
    {
        
        public UIPnlGraphUnitLeaderClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlGraphUnitLeader";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "3";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public WinClient UIChartControlUnitLeadClient
        {
            get
            {
                if ((this.mUIChartControlUnitLeadClient == null))
                {
                    this.mUIChartControlUnitLeadClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIChartControlUnitLeadClient.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIChartControlUnitLeadClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIChartControlUnitLeadClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICenterPanelPeriodDockPanel : DXDockPanel
    {
        
        public UICenterPanelPeriodDockPanel(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriod";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom2 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom2(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom2 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom2 : DXTestControl
    {
        
        public UIControlContainerCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "CenterPanelPeriodControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleControCustom UIPeriodScheduleControCustom
        {
            get
            {
                if ((this.mUIPeriodScheduleControCustom == null))
                {
                    this.mUIPeriodScheduleControCustom = new UIPeriodScheduleControCustom(this);
                }
                return this.mUIPeriodScheduleControCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleControCustom mUIPeriodScheduleControCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleControCustom : DXTestControl
    {
        
        public UIPeriodScheduleControCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "PeriodScheduleControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILayoutPanelSplitContainerControl UILayoutPanelSplitContainerControl
        {
            get
            {
                if ((this.mUILayoutPanelSplitContainerControl == null))
                {
                    this.mUILayoutPanelSplitContainerControl = new UILayoutPanelSplitContainerControl(this);
                }
                return this.mUILayoutPanelSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UILayoutPanelSplitContainerControl mUILayoutPanelSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILayoutPanelSplitContainerControl : DXSplitContainerControl
    {
        
        public UILayoutPanelSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "layoutPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitLayoutPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UITopPanelClient UITopPanelClient
        {
            get
            {
                if ((this.mUITopPanelClient == null))
                {
                    this.mUITopPanelClient = new UITopPanelClient(this);
                }
                return this.mUITopPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UITopPanelClient mUITopPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITopPanelClient : DXTestControl
    {
        
        public UITopPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "CustomSplitGroupPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIXtraScrollableControScrollableControl UIXtraScrollableControScrollableControl
        {
            get
            {
                if ((this.mUIXtraScrollableControScrollableControl == null))
                {
                    this.mUIXtraScrollableControScrollableControl = new UIXtraScrollableControScrollableControl(this);
                }
                return this.mUIXtraScrollableControScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UIXtraScrollableControScrollableControl mUIXtraScrollableControScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtraScrollableControScrollableControl : DXScrollableControl
    {
        
        public UIXtraScrollableControScrollableControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraScrollableControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPeriodScheduleListBoList UIPeriodScheduleListBoList
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList == null))
                {
                    this.mUIPeriodScheduleListBoList = new UIPeriodScheduleListBoList(this);
                }
                return this.mUIPeriodScheduleListBoList;
            }
        }
        
        public UIPeriodScheduleListBoList1 UIPeriodScheduleListBoList1
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList1 == null))
                {
                    this.mUIPeriodScheduleListBoList1 = new UIPeriodScheduleListBoList1(this);
                }
                return this.mUIPeriodScheduleListBoList1;
            }
        }
        
        public UIPeriodScheduleListBoList2 UIPeriodScheduleListBoList2
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList2 == null))
                {
                    this.mUIPeriodScheduleListBoList2 = new UIPeriodScheduleListBoList2(this);
                }
                return this.mUIPeriodScheduleListBoList2;
            }
        }
        
        public UIPeriodScheduleListBoList3 UIPeriodScheduleListBoList3
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList3 == null))
                {
                    this.mUIPeriodScheduleListBoList3 = new UIPeriodScheduleListBoList3(this);
                }
                return this.mUIPeriodScheduleListBoList3;
            }
        }
        
        public UIPeriodScheduleListBoList4 UIPeriodScheduleListBoList4
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList4 == null))
                {
                    this.mUIPeriodScheduleListBoList4 = new UIPeriodScheduleListBoList4(this);
                }
                return this.mUIPeriodScheduleListBoList4;
            }
        }
        
        public UIPeriodScheduleListBoList5 UIPeriodScheduleListBoList5
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList5 == null))
                {
                    this.mUIPeriodScheduleListBoList5 = new UIPeriodScheduleListBoList5(this);
                }
                return this.mUIPeriodScheduleListBoList5;
            }
        }
        
        public UIPeriodScheduleListBoList6 UIPeriodScheduleListBoList6
        {
            get
            {
                if ((this.mUIPeriodScheduleListBoList6 == null))
                {
                    this.mUIPeriodScheduleListBoList6 = new UIPeriodScheduleListBoList6(this);
                }
                return this.mUIPeriodScheduleListBoList6;
            }
        }
        #endregion
        
        #region Fields
        private UIPeriodScheduleListBoList mUIPeriodScheduleListBoList;
        
        private UIPeriodScheduleListBoList1 mUIPeriodScheduleListBoList1;
        
        private UIPeriodScheduleListBoList2 mUIPeriodScheduleListBoList2;
        
        private UIPeriodScheduleListBoList3 mUIPeriodScheduleListBoList3;
        
        private UIPeriodScheduleListBoList4 mUIPeriodScheduleListBoList4;
        
        private UIPeriodScheduleListBoList5 mUIPeriodScheduleListBoList5;
        
        private UIPeriodScheduleListBoList6 mUIPeriodScheduleListBoList6;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList : DXListBox
    {
        
        public UIPeriodScheduleListBoList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[42]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIItem45B2PersonListItem
        {
            get
            {
                if ((this.mUIItem45B2PersonListItem == null))
                {
                    this.mUIItem45B2PersonListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[42]Item[0]";
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIItem45B2PersonListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem45B2PersonListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIItem45B2PersonListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList1 : DXListBox
    {
        
        public UIPeriodScheduleListBoList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[43]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIItem45B2PersonListItem
        {
            get
            {
                if ((this.mUIItem45B2PersonListItem == null))
                {
                    this.mUIItem45B2PersonListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[43]Item[0]";
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIItem45B2PersonListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem45B2PersonListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIItem45B2PersonListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList2 : DXListBox
    {
        
        public UIPeriodScheduleListBoList2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[44]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIItem45B2PersonListItem
        {
            get
            {
                if ((this.mUIItem45B2PersonListItem == null))
                {
                    this.mUIItem45B2PersonListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[44]Item[0]";
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIItem45B2PersonListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem45B2PersonListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIItem45B2PersonListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList3 : DXListBox
    {
        
        public UIPeriodScheduleListBoList3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[45]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIItem45B2PersonListItem
        {
            get
            {
                if ((this.mUIItem45B2PersonListItem == null))
                {
                    this.mUIItem45B2PersonListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[45]Item[0]";
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIItem45B2PersonListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem45B2PersonListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIItem45B2PersonListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList4 : DXListBox
    {
        
        public UIPeriodScheduleListBoList4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[46]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIItem45B2PersonListItem
        {
            get
            {
                if ((this.mUIItem45B2PersonListItem == null))
                {
                    this.mUIItem45B2PersonListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[46]Item[0]";
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIItem45B2PersonListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem45B2PersonListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIItem45B2PersonListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList5 : DXListBox
    {
        
        public UIPeriodScheduleListBoList5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[47]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIItem45B2PersonListItem
        {
            get
            {
                if ((this.mUIItem45B2PersonListItem == null))
                {
                    this.mUIItem45B2PersonListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[47]Item[0]";
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIItem45B2PersonListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem45B2PersonListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIItem45B2PersonListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPeriodScheduleListBoList6 : DXListBox
    {
        
        public UIPeriodScheduleListBoList6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[48]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXListBoxItem UIItem45B2PersonListItem
        {
            get
            {
                if ((this.mUIItem45B2PersonListItem == null))
                {
                    this.mUIItem45B2PersonListItem = new DXListBoxItem(this);
                    #region Search Criteria
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.Name] = "topPanelXtraScrollableControl[0]PeriodScheduleListBoxControl`1[48]Item[0]";
                    this.mUIItem45B2PersonListItem.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PeriodScheduleListBoxControl`1Item";
                    this.mUIItem45B2PersonListItem.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem45B2PersonListItem;
            }
        }
        #endregion
        
        #region Fields
        private DXListBoxItem mUIItem45B2PersonListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIViewHostCustom1 : DXTestControl
    {
        
        public UIViewHostCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ViewHost";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ViewHost";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIPcViewClient1 UIPcViewClient
        {
            get
            {
                if ((this.mUIPcViewClient == null))
                {
                    this.mUIPcViewClient = new UIPcViewClient1(this);
                }
                return this.mUIPcViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIPcViewClient1 mUIPcViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPcViewClient1 : DXTestControl
    {
        
        public UIPcViewClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pcView";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "PanelControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UILeftPanelDockPanel1 UILeftPanelDockPanel
        {
            get
            {
                if ((this.mUILeftPanelDockPanel == null))
                {
                    this.mUILeftPanelDockPanel = new UILeftPanelDockPanel1(this);
                }
                return this.mUILeftPanelDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UILeftPanelDockPanel1 mUILeftPanelDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILeftPanelDockPanel1 : DXDockPanel
    {
        
        public UILeftPanelDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "LeftPanel";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIDashboardDockPanel1 UIDashboardDockPanel
        {
            get
            {
                if ((this.mUIDashboardDockPanel == null))
                {
                    this.mUIDashboardDockPanel = new UIDashboardDockPanel1(this);
                }
                return this.mUIDashboardDockPanel;
            }
        }
        #endregion
        
        #region Fields
        private UIDashboardDockPanel1 mUIDashboardDockPanel;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDashboardDockPanel1 : DXDockPanel
    {
        
        public UIDashboardDockPanel1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Dashboard";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "WorkScheduleDockPanel";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIControlContainerCustom3 UIControlContainerCustom
        {
            get
            {
                if ((this.mUIControlContainerCustom == null))
                {
                    this.mUIControlContainerCustom = new UIControlContainerCustom3(this);
                }
                return this.mUIControlContainerCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIControlContainerCustom3 mUIControlContainerCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIControlContainerCustom3 : DXTestControl
    {
        
        public UIControlContainerCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DashboardControlContainer[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "ControlContainer";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIDashboardControlCustom1 UIDashboardControlCustom
        {
            get
            {
                if ((this.mUIDashboardControlCustom == null))
                {
                    this.mUIDashboardControlCustom = new UIDashboardControlCustom1(this);
                }
                return this.mUIDashboardControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDashboardControlCustom1 mUIDashboardControlCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDashboardControlCustom1 : DXTestControl
    {
        
        public UIDashboardControlCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "DashboardControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "DashboardControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UINavBarControlNavBar1 UINavBarControlNavBar
        {
            get
            {
                if ((this.mUINavBarControlNavBar == null))
                {
                    this.mUINavBarControlNavBar = new UINavBarControlNavBar1(this);
                }
                return this.mUINavBarControlNavBar;
            }
        }
        #endregion
        
        #region Fields
        private UINavBarControlNavBar1 mUINavBarControlNavBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINavBarControlNavBar1 : DXNavBar
    {
        
        public UINavBarControlNavBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "navBarControl";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSNavBarControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UINgcAbsenceScrollableControl1 UINgcAbsenceScrollableControl
        {
            get
            {
                if ((this.mUINgcAbsenceScrollableControl == null))
                {
                    this.mUINgcAbsenceScrollableControl = new UINgcAbsenceScrollableControl1(this);
                }
                return this.mUINgcAbsenceScrollableControl;
            }
        }
        #endregion
        
        #region Fields
        private UINgcAbsenceScrollableControl1 mUINgcAbsenceScrollableControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINgcAbsenceScrollableControl1 : DXScrollableControl
    {
        
        public UINgcAbsenceScrollableControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "ngcAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "NavBarGroupControlContainer";
            this.SearchProperties[DXTestControl.PropertyNames.HierarchyLevel] = "2";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public UIGcAbsenceTable1 UIGcAbsenceTable
        {
            get
            {
                if ((this.mUIGcAbsenceTable == null))
                {
                    this.mUIGcAbsenceTable = new UIGcAbsenceTable1(this);
                }
                return this.mUIGcAbsenceTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcAbsenceTable1 mUIGcAbsenceTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcAbsenceTable1 : DXGrid
    {
        
        public UIGcAbsenceTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsence";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Gat");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem0401Cell
        {
            get
            {
                if ((this.mUIItem0401Cell == null))
                {
                    this.mUIItem0401Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0401Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceGridControlCell[View]gvAbsence[Row]0[Column]clmAbsenceDate";
                    this.mUIItem0401Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0401Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem0401Cell;
            }
        }
        
        public DXCell UIItem2PersonCell
        {
            get
            {
                if ((this.mUIItem2PersonCell == null))
                {
                    this.mUIItem2PersonCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2PersonCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceGridControlCell[View]gvAbsence[Row]0[Column]clmAbsenceName";
                    this.mUIItem2PersonCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2PersonCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem2PersonCell;
            }
        }
        
        public DXCell UITjenestefraværCell
        {
            get
            {
                if ((this.mUITjenestefraværCell == null))
                {
                    this.mUITjenestefraværCell = new DXCell(this);
                    #region Search Criteria
                    this.mUITjenestefraværCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceGridControlCell[View]gvAbsence[Row]0[Column]clmAbsenceInfoText";
                    this.mUITjenestefraværCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUITjenestefraværCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUITjenestefraværCell;
            }
        }
        
        public DXCell UIItem0801Cell
        {
            get
            {
                if ((this.mUIItem0801Cell == null))
                {
                    this.mUIItem0801Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem0801Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceGridControlCell[View]gvAbsence[Row]1[Column]clmAbsenceDate";
                    this.mUIItem0801Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem0801Cell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem0801Cell;
            }
        }
        
        public DXCell UIItem2PersonCell1
        {
            get
            {
                if ((this.mUIItem2PersonCell1 == null))
                {
                    this.mUIItem2PersonCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2PersonCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceGridControlCell[View]gvAbsence[Row]1[Column]clmAbsenceName";
                    this.mUIItem2PersonCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2PersonCell1.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIItem2PersonCell1;
            }
        }
        
        public DXCell UIFerie5dgrukeheleukerCell
        {
            get
            {
                if ((this.mUIFerie5dgrukeheleukerCell == null))
                {
                    this.mUIFerie5dgrukeheleukerCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIFerie5dgrukeheleukerCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcAbsenceGridControlCell[View]gvAbsence[Row]1[Column]clmAbsenceInfoText";
                    this.mUIFerie5dgrukeheleukerCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIFerie5dgrukeheleukerCell.WindowTitles.Add("Gat");
                    #endregion
                }
                return this.mUIFerie5dgrukeheleukerCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem0401Cell;
        
        private DXCell mUIItem2PersonCell;
        
        private DXCell mUITjenestefraværCell;
        
        private DXCell mUIItem0801Cell;
        
        private DXCell mUIItem2PersonCell1;
        
        private DXCell mUIFerie5dgrukeheleukerCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFraværsregistreringWindow : DXWindow
    {
        
        public UIFraværsregistreringWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Fraværsregistrering";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIPnlShiftManagementClient UIPnlShiftManagementClient
        {
            get
            {
                if ((this.mUIPnlShiftManagementClient == null))
                {
                    this.mUIPnlShiftManagementClient = new UIPnlShiftManagementClient(this);
                }
                return this.mUIPnlShiftManagementClient;
            }
        }
        
        public UIPnlShiftManagementClient1 UIPnlShiftManagementClient1
        {
            get
            {
                if ((this.mUIPnlShiftManagementClient1 == null))
                {
                    this.mUIPnlShiftManagementClient1 = new UIPnlShiftManagementClient1(this);
                }
                return this.mUIPnlShiftManagementClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIPnlShiftManagementClient mUIPnlShiftManagementClient;
        
        private UIPnlShiftManagementClient1 mUIPnlShiftManagementClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlShiftManagementClient : DXTestControl
    {
        
        public UIPnlShiftManagementClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISccShiftManagementSplitContainerControl UISccShiftManagementSplitContainerControl
        {
            get
            {
                if ((this.mUISccShiftManagementSplitContainerControl == null))
                {
                    this.mUISccShiftManagementSplitContainerControl = new UISccShiftManagementSplitContainerControl(this);
                }
                return this.mUISccShiftManagementSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UISccShiftManagementSplitContainerControl mUISccShiftManagementSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISccShiftManagementSplitContainerControl : DXSplitContainerControl
    {
        
        public UISccShiftManagementSplitContainerControl(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient1 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient1(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient1 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient1 : DXTestControl
    {
        
        public UISplitGroupPanelClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagementSplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGrcShiftsClient UIGrcShiftsClient
        {
            get
            {
                if ((this.mUIGrcShiftsClient == null))
                {
                    this.mUIGrcShiftsClient = new UIGrcShiftsClient(this);
                }
                return this.mUIGrcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcShiftsClient mUIGrcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrcShiftsClient : DXTestControl
    {
        
        public UIGrcShiftsClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UITcShiftsTabList UITcShiftsTabList
        {
            get
            {
                if ((this.mUITcShiftsTabList == null))
                {
                    this.mUITcShiftsTabList = new UITcShiftsTabList(this);
                }
                return this.mUITcShiftsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcShiftsTabList mUITcShiftsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcShiftsTabList : DXTestControl
    {
        
        public UITcShiftsTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIXtpShiftsGridClient UIXtpShiftsGridClient
        {
            get
            {
                if ((this.mUIXtpShiftsGridClient == null))
                {
                    this.mUIXtpShiftsGridClient = new UIXtpShiftsGridClient(this);
                }
                return this.mUIXtpShiftsGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtpShiftsGridClient mUIXtpShiftsGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtpShiftsGridClient : DXTestControl
    {
        
        public UIXtpShiftsGridClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpShiftsGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public UIGcShiftsTable UIGcShiftsTable
        {
            get
            {
                if ((this.mUIGcShiftsTable == null))
                {
                    this.mUIGcShiftsTable = new UIGcShiftsTable(this);
                }
                return this.mUIGcShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftsTable mUIGcShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcShiftsTable : DXGrid
    {
        
        public UIGcShiftsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCell UIItem2Cell
        {
            get
            {
                if ((this.mUIItem2Cell == null))
                {
                    this.mUIItem2Cell = new DXCell(this);
                    #region Search Criteria
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]1[Column]tlcShiftCodeName";
                    this.mUIItem2Cell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIItem2Cell.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIItem2Cell;
            }
        }
        
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]1[Column]tlcAbsent";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        
        public DXCell UIValgtCell1
        {
            get
            {
                if ((this.mUIValgtCell1 == null))
                {
                    this.mUIValgtCell1 = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]2[Column]tlcPresent";
                    this.mUIValgtCell1.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell1.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell1;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIItem2Cell;
        
        private DXCell mUIValgtCell;
        
        private DXCell mUIValgtCell1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPnlShiftManagementClient1 : DXTestControl
    {
        
        public UIPnlShiftManagementClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "pnlShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSPanelControl";
            #endregion
        }
        
        #region Properties
        public UISccShiftManagementSplitContainerControl1 UISccShiftManagementSplitContainerControl
        {
            get
            {
                if ((this.mUISccShiftManagementSplitContainerControl == null))
                {
                    this.mUISccShiftManagementSplitContainerControl = new UISccShiftManagementSplitContainerControl1(this);
                }
                return this.mUISccShiftManagementSplitContainerControl;
            }
        }
        #endregion
        
        #region Fields
        private UISccShiftManagementSplitContainerControl1 mUISccShiftManagementSplitContainerControl;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISccShiftManagementSplitContainerControl1 : DXSplitContainerControl
    {
        
        public UISccShiftManagementSplitContainerControl1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagement";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSSplitContainerControl";
            #endregion
        }
        
        #region Properties
        public UISplitGroupPanelClient2 UISplitGroupPanelClient
        {
            get
            {
                if ((this.mUISplitGroupPanelClient == null))
                {
                    this.mUISplitGroupPanelClient = new UISplitGroupPanelClient2(this);
                }
                return this.mUISplitGroupPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UISplitGroupPanelClient2 mUISplitGroupPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISplitGroupPanelClient2 : DXTestControl
    {
        
        public UISplitGroupPanelClient2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "sccShiftManagementSplitGroupPanel[0]";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "SplitGroupPanel";
            #endregion
        }
        
        #region Properties
        public UIGrcShiftsClient1 UIGrcShiftsClient
        {
            get
            {
                if ((this.mUIGrcShiftsClient == null))
                {
                    this.mUIGrcShiftsClient = new UIGrcShiftsClient1(this);
                }
                return this.mUIGrcShiftsClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGrcShiftsClient1 mUIGrcShiftsClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGrcShiftsClient1 : DXTestControl
    {
        
        public UIGrcShiftsClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "grcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGroupControl";
            #endregion
        }
        
        #region Properties
        public UITcShiftsTabList1 UITcShiftsTabList
        {
            get
            {
                if ((this.mUITcShiftsTabList == null))
                {
                    this.mUITcShiftsTabList = new UITcShiftsTabList1(this);
                }
                return this.mUITcShiftsTabList;
            }
        }
        #endregion
        
        #region Fields
        private UITcShiftsTabList1 mUITcShiftsTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITcShiftsTabList1 : DXTestControl
    {
        
        public UITcShiftsTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "tcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSTabControl";
            #endregion
        }
        
        #region Properties
        public UIXtpShiftsGridClient1 UIXtpShiftsGridClient
        {
            get
            {
                if ((this.mUIXtpShiftsGridClient == null))
                {
                    this.mUIXtpShiftsGridClient = new UIXtpShiftsGridClient1(this);
                }
                return this.mUIXtpShiftsGridClient;
            }
        }
        #endregion
        
        #region Fields
        private UIXtpShiftsGridClient1 mUIXtpShiftsGridClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXtpShiftsGridClient1 : DXTestControl
    {
        
        public UIXtpShiftsGridClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "xtpShiftsGrid";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "XtraTabPage";
            #endregion
        }
        
        #region Properties
        public UIGcShiftsTable1 UIGcShiftsTable
        {
            get
            {
                if ((this.mUIGcShiftsTable == null))
                {
                    this.mUIGcShiftsTable = new UIGcShiftsTable1(this);
                }
                return this.mUIGcShiftsTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGcShiftsTable1 mUIGcShiftsTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGcShiftsTable1 : DXGrid
    {
        
        public UIGcShiftsTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShifts";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Fraværsregistrering");
            #endregion
        }
        
        #region Properties
        public DXCell UIValgtCell
        {
            get
            {
                if ((this.mUIValgtCell == null))
                {
                    this.mUIValgtCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gcShiftsGridControlCell[View]gvShifts[Row]3[Column]tlcPresent";
                    this.mUIValgtCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIValgtCell.WindowTitles.Add("Fraværsregistrering");
                    #endregion
                }
                return this.mUIValgtCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUIValgtCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRegistreringsstatusWindow : DXWindow
    {
        
        public UIRegistreringsstatusWindow()
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "Registreringsstatus";
            this.SearchProperties.Add(new PropertyExpression(DXTestControl.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILcMessagesCustom UILcMessagesCustom
        {
            get
            {
                if ((this.mUILcMessagesCustom == null))
                {
                    this.mUILcMessagesCustom = new UILcMessagesCustom(this);
                }
                return this.mUILcMessagesCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILcMessagesCustom mUILcMessagesCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcMessagesCustom : DXTestControl
    {
        
        public UILcMessagesCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSLayoutControl";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILcgMessagesLayoutGroup UILcgMessagesLayoutGroup
        {
            get
            {
                if ((this.mUILcgMessagesLayoutGroup == null))
                {
                    this.mUILcgMessagesLayoutGroup = new UILcgMessagesLayoutGroup(this);
                }
                return this.mUILcgMessagesLayoutGroup;
            }
        }
        #endregion
        
        #region Fields
        private UILcgMessagesLayoutGroup mUILcgMessagesLayoutGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILcgMessagesLayoutGroup : DXBaseLayoutItem
    {
        
        public UILcgMessagesLayoutGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lcgMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutGroup";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UILciMessagesLayoutControlItem UILciMessagesLayoutControlItem
        {
            get
            {
                if ((this.mUILciMessagesLayoutControlItem == null))
                {
                    this.mUILciMessagesLayoutControlItem = new UILciMessagesLayoutControlItem(this);
                }
                return this.mUILciMessagesLayoutControlItem;
            }
        }
        #endregion
        
        #region Fields
        private UILciMessagesLayoutControlItem mUILciMessagesLayoutControlItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILciMessagesLayoutControlItem : DXBaseLayoutItem
    {
        
        public UILciMessagesLayoutControlItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "lciMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "LayoutControlItem";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public UIGMessagesTable UIGMessagesTable
        {
            get
            {
                if ((this.mUIGMessagesTable == null))
                {
                    this.mUIGMessagesTable = new UIGMessagesTable(this);
                }
                return this.mUIGMessagesTable;
            }
        }
        #endregion
        
        #region Fields
        private UIGMessagesTable mUIGMessagesTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGMessagesTable : DXGrid
    {
        
        public UIGMessagesTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DXTestControl.PropertyNames.Name] = "gMessages";
            this.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GSGridControl";
            this.WindowTitles.Add("Registreringsstatus");
            #endregion
        }
        
        #region Properties
        public DXCell UILinje212PersonFraværCell
        {
            get
            {
                if ((this.mUILinje212PersonFraværCell == null))
                {
                    this.mUILinje212PersonFraværCell = new DXCell(this);
                    #region Search Criteria
                    this.mUILinje212PersonFraværCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gMessagesGridControlCell[View]gvMessages[Row]1[Column]gvMessagesColumn_Text";
                    this.mUILinje212PersonFraværCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUILinje212PersonFraværCell.WindowTitles.Add("Registreringsstatus");
                    #endregion
                }
                return this.mUILinje212PersonFraværCell;
            }
        }
        
        public DXCell UIDetfinnesfraværivaktCell
        {
            get
            {
                if ((this.mUIDetfinnesfraværivaktCell == null))
                {
                    this.mUIDetfinnesfraværivaktCell = new DXCell(this);
                    #region Search Criteria
                    this.mUIDetfinnesfraværivaktCell.SearchProperties[DXTestControl.PropertyNames.Name] = "gMessagesGridControlCell[View]gvMessages[Row]1[Column]gvMessagesColumn_Info";
                    this.mUIDetfinnesfraværivaktCell.SearchProperties[DXTestControl.PropertyNames.ClassName] = "GridControlCell";
                    this.mUIDetfinnesfraværivaktCell.WindowTitles.Add("Registreringsstatus");
                    #endregion
                }
                return this.mUIDetfinnesfraværivaktCell;
            }
        }
        #endregion
        
        #region Fields
        private DXCell mUILinje212PersonFraværCell;
        
        private DXCell mUIDetfinnesfraværivaktCell;
        #endregion
    }
}
